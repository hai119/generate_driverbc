; ModuleID = '../bcout/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.llvm.bc'
source_filename = "drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.mlxsw_sp_bridge_ops = type { i32 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*, %struct.netlink_ext_ack*)*, void (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*)*, i32 (%struct.mlxsw_sp_bridge_device*, %struct.net_device*, i16, %struct.netlink_ext_ack*)*, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16, %struct.netlink_ext_ack*)*, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16)*, i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)* }
%struct.mlxsw_sp_bridge_device = type { %struct.net_device*, %struct.list_head, %struct.list_head, %struct.list_head, i8, %struct.mlxsw_sp_bridge_ops* }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.155, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.anon = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.atomic64_t = type { i64 }
%struct.atomic_t = type { i32 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon, %union.anon.2, %union.anon.131, [48 x i8], %union.anon.132, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.134, i32, i32, i32, i16, i16, %union.anon.136, %union.anon.137, %union.anon.138, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon = type { %struct.anon.0 }
%struct.anon.0 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.1 }
%union.anon.1 = type { %struct.net_device* }
%union.anon.2 = type { %struct.sock* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.127, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.128, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.129, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.3, %union.anon.5, %union.anon.6, i16, i8, i8, i32, %union.anon.8, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.123, [0 x i32], %union.anon.124, i16, %union.anon.125, %struct.refcount_struct, [0 x i32], %union.anon.126 }
%union.anon.3 = type { i64 }
%union.anon.5 = type { i32 }
%union.anon.6 = type { i32 }
%union.anon.8 = type { %struct.hlist_node }
%struct.in6_addr = type { %union.anon.41 }
%union.anon.41 = type { [4 x i32] }
%union.anon.123 = type { i64 }
%union.anon.124 = type { %struct.hlist_node }
%union.anon.125 = type { i32 }
%union.anon.126 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.anon.127 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.128 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.file = type { %union.anon.14, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.14 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.101, %struct.list_head, %struct.list_head, %union.anon.102 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.15, i8* }
%union.anon.15 = type { i64 }
%struct.lockref = type { %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.11, %union.anon.118, %struct.atomic_t, [8 x i8] }
%union.anon.11 = type { %struct.anon.12 }
%struct.anon.12 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.118 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.19, i32 }
%union.anon.19 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.100, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.100 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.99, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon.20, [0 x i64] }
%struct.anon.20 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.94, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.36, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.39, %struct.callback_head }
%union.anon.39 = type { void (%struct.sock*)* }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.40, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.40 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type { i32, i32, i32, %struct.list_head, %struct.callback_head, %struct.bucket_table*, %struct.lockdep_map, [0 x %struct.rhash_lock_head*] }
%struct.lockdep_map = type {}
%struct.rhash_lock_head = type {}
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.49 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.fib6_info = type { %struct.fib6_table*, %struct.fib6_info*, %struct.fib6_node*, %union.anon.44, i32, %struct.refcount_struct, i64, %struct.dst_metrics*, %struct.rt6key, i32, %struct.rt6key, %struct.rt6key, i32, i8, i8, i8, %struct.callback_head, %struct.nexthop*, [0 x %struct.fib6_nh] }
%struct.fib6_node = type { %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_info*, i16, i16, i32, %struct.fib6_info*, %struct.callback_head }
%union.anon.44 = type { %struct.list_head }
%struct.dst_metrics = type { [17 x i32], %struct.refcount_struct }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.nexthop = type { %struct.rb_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.net*, i32, i8, i8, i8, %struct.refcount_struct, %struct.callback_head, %union.anon.45 }
%union.anon.45 = type { %struct.nh_info* }
%struct.nh_info = type { %struct.hlist_node, %struct.nexthop*, i8, i8, i8, %union.anon.46 }
%union.anon.46 = type { %struct.fib_nh }
%struct.fib_nh = type { %struct.fib_nh_common, %struct.hlist_node, %struct.fib_info*, i32, i32 }
%struct.fib_nh_common = type { %struct.net_device*, i32, i8, i8, i8, i8, %struct.lwtunnel_state*, %union.anon.47, i32, %struct.atomic_t, %struct.rtable**, %struct.rtable*, %struct.fnhe_hash_bucket* }
%struct.lwtunnel_state = type { i16, i16, i16, %struct.atomic_t, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.sk_buff*)*, %struct.callback_head, [0 x i8] }
%union.anon.47 = type { %struct.in6_addr }
%struct.rtable = type { %struct.dst_entry, i32, i32, i16, i8, i8, i32, i8, %union.anon.48, i32, %struct.list_head, %struct.uncached_list* }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%union.anon.48 = type { %struct.in6_addr }
%struct.uncached_list = type opaque
%struct.fnhe_hash_bucket = type { %struct.fib_nh_exception* }
%struct.fib_nh_exception = type { %struct.fib_nh_exception*, i32, i32, i32, i8, i32, i64, %struct.rtable*, %struct.rtable*, i64, %struct.callback_head }
%struct.fib_info = type { %struct.hlist_node, %struct.hlist_node, %struct.list_head, %struct.net*, i32, %struct.refcount_struct, i32, i8, i8, i8, i8, i32, i32, i32, %struct.dst_metrics*, i32, i8, i8, %struct.nexthop*, %struct.callback_head, [0 x %struct.fib_nh] }
%struct.fib6_nh = type { %struct.fib_nh_common, %struct.rt6_info**, %struct.rt6_exception_bucket* }
%struct.rt6_exception_bucket = type { %struct.hlist_head, i32 }
%struct.rt6_info = type { %struct.dst_entry, %struct.fib6_info*, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, %struct.inet6_dev*, i32, %struct.list_head, %struct.uncached_list*, i16 }
%struct.rt6_statistics = type { i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t }
%struct.fib6_table = type { %struct.hlist_node, i32, %struct.spinlock, %struct.fib6_node, %struct.inet_peer_base, i32, i32 }
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.percpu_counter = type { i64 }
%struct.seg6_pernet_data = type opaque
%struct.anon.49 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type { %union.anon.50 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i32, %struct.callback_head }
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.180, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.180 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.80, %union.anon.81, i32 }
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.171, %union.anon.172, %union.anon.173, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.176, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.171 = type { %struct.hlist_node }
%union.anon.172 = type { %struct.rb_node }
%union.anon.173 = type { %struct.anon.175 }
%struct.anon.175 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.176 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.177, void (i8*)*, i8* }
%union.anon.177 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.178, i16, i16 }
%union.anon.178 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%union.anon.80 = type { %struct.list_head }
%union.anon.81 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.82 }
%struct.anon.82 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.86 }
%struct.anon.86 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.93, i32, [12 x i8] }
%union.anon.93 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.94 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.95, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.98 }
%union.anon.95 = type { %struct.anon.96 }
%struct.anon.96 = type { i64, i64 }
%union.anon.98 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.99 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.34 }
%union.anon.34 = type { %struct.anon.35, [48 x i8] }
%struct.anon.35 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.101 = type { %struct.list_head }
%union.anon.102 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.181, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.182, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.183, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.184, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.181 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.182 = type { %struct.callback_head }
%union.anon.183 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.103 }
%union.anon.103 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.10, %union.anon.119 }
%union.anon.10 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.119 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.184 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.104 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.104 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%union.anon.129 = type { %struct.sk_buff* }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.122, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.121, i8, i64, i32, %struct.kiocb* }
%union.anon.121 = type { i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.122 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.kuid_t = type { i32 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.38 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.38 = type { %struct.callback_head }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.130, i32 }
%union.anon.130 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.mem_cgroup = type opaque
%struct.sock_reuseport = type opaque
%union.anon.131 = type { i64 }
%union.anon.132 = type { %struct.anon.133 }
%struct.anon.133 = type { i64, void (%struct.sk_buff*)* }
%union.anon.134 = type { i32 }
%union.anon.136 = type { i32 }
%union.anon.137 = type { i32 }
%union.anon.138 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.ifreq = type { %union.anon.139, %union.anon.140 }
%union.anon.139 = type { [16 x i8] }
%union.anon.140 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.142 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.142 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type { i16, i16, i16, i8 }
%struct.netdev_bpf = type { i32, %union.anon.143 }
%union.anon.143 = type { %struct.anon.144 }
%struct.anon.144 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink*, i32, i8, %struct.spinlock, i32, i32, i8*, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex }
%struct.devlink = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.devlink_dpipe_headers*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink_ops*, %struct.xarray, %struct.devlink_dev_stats, %struct.device*, %struct.possible_net_t, %struct.mutex, i8, [31 x i8], [0 x i8] }
%struct.devlink_dpipe_headers = type { %struct.devlink_dpipe_header**, i32 }
%struct.devlink_dpipe_header = type { i8*, i32, %struct.devlink_dpipe_field*, i32, i8 }
%struct.devlink_dpipe_field = type { i8*, i32, i32, i32 }
%struct.devlink_ops = type { i32, i64, i64, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32)*, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.devlink*, i16*)*, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i8*)*, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)*, void (%struct.devlink*, %struct.devlink_trap*, i8*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*)*, void (%struct.devlink*, %struct.devlink_trap_policer*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* }
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_info_req = type opaque
%struct.devlink_flash_update_params = type { i8*, i8*, i32 }
%struct.devlink_trap = type { i32, i32, i8, i16, i8*, i16, i32 }
%struct.devlink_trap_group = type { i8*, i16, i8, i32 }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.147 }
%union.anon.147 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.ip_tunnel_parm = type { [16 x i8], i32, i16, i16, i32, i32, %struct.iphdr }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.148 }
%union.anon.148 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.149, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.149 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.150 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.150 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type { i8, i8, i8, i8, i32, i32, i32, %struct.in6_addr }
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.79 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.52, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.52 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.53, i8, i8, i16, i32 }
%union.anon.53 = type { %struct.anon.54 }
%struct.anon.54 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.79 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type { i32, i32, i32, i32 (%struct.Qdisc*, i64, %struct.qdisc_walker*)* }
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.151, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.151 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.152 }
%union.anon.152 = type { %struct.anon.153 }
%struct.anon.153 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type { i32, i32, i32, i8, i64, i32 (%struct.tcf_proto*, i8*, %struct.tcf_walker*)* }
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.spinlock = type { %union.anon.13 }
%union.anon.13 = type { %struct.raw_spinlock }
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.155 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.nla_policy = type { i8, i8, i16, %union.anon.42 }
%union.anon.42 = type { i8* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type { i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32)*, %struct.udp_tunnel_nic_shared*, i32, [4 x %struct.udp_tunnel_nic_table_info] }
%struct.udp_tunnel_nic_shared = type { %struct.udp_tunnel_nic*, %struct.list_head }
%struct.udp_tunnel_nic_table_info = type { i32, i32 }
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mlxsw_sp_bridge_port = type { %struct.net_device*, %struct.mlxsw_sp_bridge_device*, %struct.list_head, %struct.list_head, i32, i8, i64, i8, i8, %union.anon.159 }
%union.anon.159 = type { i16 }
%struct.mlxsw_sp_port = type { %struct.net_device*, %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp*, i8, i8, i16, i16, %struct.anon.156, %struct.anon.157, %struct.mlxsw_sp_port_mapping, %struct.anon.158, %struct.mlxsw_sp_port_sample*, %struct.list_head, %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_qdisc_state*, i32, %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block*, %struct.anon.161, i8, i32, i32, %struct.mlxsw_sp_hdroom*, i64 }
%struct.mlxsw_sp_port_pcpu_stats = type { i64, i64, i64, i64, %struct.u64_stats_sync, i32 }
%struct.mlxsw_sp = type { %struct.mlxsw_sp_port**, %struct.mlxsw_core*, %struct.mlxsw_bus_info*, [6 x i8], i8*, %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_sb*, %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_router*, %struct.mlxsw_sp_mr*, %struct.mlxsw_afa*, %struct.mlxsw_sp_acl*, %struct.mlxsw_sp_fid_core*, %struct.mlxsw_sp_policer_core*, %struct.mlxsw_sp_kvdl*, %struct.mlxsw_sp_nve*, %struct.notifier_block, %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_state*, %struct.mlxsw_sp_counter_pool*, %struct.mlxsw_sp_span*, %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_kvdl_ops*, %struct.mlxsw_afa_ops*, %struct.mlxsw_afk_ops*, %struct.mlxsw_sp_mr_tcam_ops*, %struct.mlxsw_sp_acl_rulei_ops*, %struct.mlxsw_sp_acl_tcam_ops*, %struct.mlxsw_sp_nve_ops**, %struct.mlxsw_sp_rif_ops**, %struct.mlxsw_sp_sb_vals*, %struct.mlxsw_sp_sb_ops*, %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_span_ops*, %struct.mlxsw_sp_policer_core_ops*, %struct.mlxsw_sp_trap_ops*, %struct.mlxsw_listener*, i64, i32 }
%struct.mlxsw_core = type opaque
%struct.mlxsw_bus_info = type { i8*, i8*, %struct.device*, %struct.mlxsw_fw_rev, [208 x i8], [16 x i8], i8 }
%struct.mlxsw_fw_rev = type { i16, i16, i16, i16 }
%struct.mlxsw_sp_upper = type { %struct.net_device*, i32 }
%struct.mlxsw_sp_sb = type opaque
%struct.mlxsw_sp_bridge = type { %struct.mlxsw_sp*, %struct.anon.165, i32, i8, %struct.list_head, [110 x i64], %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops* }
%struct.anon.165 = type { %struct.delayed_work, i32 }
%struct.mlxsw_sp_router = type { %struct.mlxsw_sp*, %struct.mlxsw_sp_rif**, %struct.mlxsw_sp_vr*, %struct.rhashtable, %struct.rhashtable, %struct.rhashtable, %struct.list_head, %struct.anon.166, %struct.anon.167, %struct.delayed_work, %struct.list_head, %struct.list_head, i8, %struct.notifier_block, %struct.notifier_block, %struct.notifier_block, %struct.notifier_block, %struct.mlxsw_sp_rif_ops**, %struct.mlxsw_sp_ipip_ops**, i32, i8, %struct.mlxsw_sp_router_nve_decap, %struct.mutex }
%struct.mlxsw_sp_rif = type opaque
%struct.mlxsw_sp_vr = type opaque
%struct.anon.166 = type { [2 x %struct.mlxsw_sp_lpm_tree*], %struct.mlxsw_sp_lpm_tree*, i32 }
%struct.mlxsw_sp_lpm_tree = type opaque
%struct.anon.167 = type { %struct.delayed_work, i64 }
%struct.mlxsw_sp_ipip_ops = type opaque
%struct.mlxsw_sp_router_nve_decap = type { i32, i32, i32, %union.mlxsw_sp_l3addr, i8 }
%union.mlxsw_sp_l3addr = type { %struct.in6_addr }
%struct.mlxsw_sp_mr = type opaque
%struct.mlxsw_afa = type opaque
%struct.mlxsw_sp_acl = type opaque
%struct.mlxsw_sp_fid_core = type opaque
%struct.mlxsw_sp_policer_core = type opaque
%struct.mlxsw_sp_kvdl = type opaque
%struct.mlxsw_sp_nve = type opaque
%struct.mlxsw_sp_ptp_clock = type opaque
%struct.mlxsw_sp_ptp_state = type opaque
%struct.mlxsw_sp_counter_pool = type opaque
%struct.mlxsw_sp_span = type opaque
%struct.mlxsw_sp_trap = type opaque
%struct.mlxsw_sp_kvdl_ops = type { i64, i32 (%struct.mlxsw_sp*, i8*)*, void (%struct.mlxsw_sp*, i8*)*, i32 (%struct.mlxsw_sp*, i8*, i32, i32, i32*)*, void (%struct.mlxsw_sp*, i8*, i32, i32, i32)*, i32 (%struct.mlxsw_sp*, i8*, i32, i32, i32*)*, i32 (%struct.mlxsw_sp*, i8*)* }
%struct.mlxsw_afa_ops = type { i32 (i8*, i32*, i8*, i1)*, void (i8*, i32, i1)*, i32 (i8*, i32, i8*)*, i32 (i8*, i32*, i8)*, void (i8*, i32)*, i32 (i8*, i32*)*, void (i8*, i32)*, i32 (i8*, i8, %struct.net_device*, i1, i32*)*, void (i8*, i8, i32, i1)*, i32 (i8*, i64, i32, i16*, %struct.netlink_ext_ack*)*, void (i8*, i16)*, i8 }
%struct.mlxsw_afk_ops = type { %struct.mlxsw_afk_block*, i32, void (i8*, i32, i8*)*, void (i8*, i32)* }
%struct.mlxsw_afk_block = type { i16, %struct.mlxsw_afk_element_inst*, i32 }
%struct.mlxsw_afk_element_inst = type { i32, i32, %struct.mlxsw_item, i32, i8 }
%struct.mlxsw_item = type { i16, i16, i16, i8, i8, i8, %union.anon.168, i8* }
%union.anon.168 = type { i16 }
%struct.mlxsw_sp_mr_tcam_ops = type { i64, i32 (%struct.mlxsw_sp*, i8*)*, void (i8*)*, i64, i32 (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_mr_route_key*, %struct.mlxsw_afa_block*, i32)*, void (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_mr_route_key*)*, i32 (%struct.mlxsw_sp*, i8*, %struct.mlxsw_sp_mr_route_key*, %struct.mlxsw_afa_block*)* }
%struct.mlxsw_sp_mr_route_key = type opaque
%struct.mlxsw_afa_block = type opaque
%struct.mlxsw_sp_acl_rulei_ops = type { i32 (%struct.mlxsw_sp*, %struct.mlxsw_sp_acl_rule_info*, %struct.mlxsw_sp_acl_mangle_action*, i32, %struct.netlink_ext_ack*)* }
%struct.mlxsw_sp_acl_rule_info = type { i32, %struct.mlxsw_afk_element_values, %struct.mlxsw_afa_block*, i8, i32, i16 }
%struct.mlxsw_afk_element_values = type { %struct.mlxsw_afk_element_usage, %struct.anon.169 }
%struct.mlxsw_afk_element_usage = type { [1 x i64] }
%struct.anon.169 = type { [64 x i8], [64 x i8] }
%struct.mlxsw_sp_acl_mangle_action = type opaque
%struct.mlxsw_sp_acl_tcam_ops = type { i32, i64, i32 (%struct.mlxsw_sp*, i8*, %struct.mlxsw_sp_acl_tcam*)*, void (%struct.mlxsw_sp*, i8*)*, i64, i32 (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_acl_tcam_region*, i8*)*, void (%struct.mlxsw_sp*, i8*)*, i32 (%struct.mlxsw_sp*, %struct.mlxsw_sp_acl_tcam_region*)*, i8* (i8*)*, void (i8*)*, i64, void (i8*, i8*, i32)*, void (i8*)*, i64, i32 (%struct.mlxsw_sp*, i8*, i8*, i8*, %struct.mlxsw_sp_acl_rule_info*)*, void (%struct.mlxsw_sp*, i8*, i8*, i8*)*, i32 (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_acl_rule_info*)*, i32 (%struct.mlxsw_sp*, i8*, i8*, i8*)* }
%struct.mlxsw_sp_acl_tcam = type opaque
%struct.mlxsw_sp_acl_tcam_region = type opaque
%struct.mlxsw_sp_nve_ops = type opaque
%struct.mlxsw_sp_rif_ops = type opaque
%struct.mlxsw_sp_sb_vals = type opaque
%struct.mlxsw_sp_sb_ops = type opaque
%struct.mlxsw_sp_port_type_speed_ops = type { void (%struct.mlxsw_sp*, i32, %struct.ethtool_link_ksettings*)*, void (%struct.mlxsw_sp*, i32, i8, i64*)*, i32 (%struct.mlxsw_sp*, i32)*, void (%struct.mlxsw_sp*, i1, i32, %struct.ethtool_link_ksettings*)*, i32 (%struct.mlxsw_sp_port*, i32*)*, i32 (%struct.mlxsw_sp*, i8, %struct.ethtool_link_ksettings*)*, i32 (%struct.mlxsw_sp*, i8, i32)*, void (%struct.mlxsw_sp*, i8*, i8, i32, i1)*, void (%struct.mlxsw_sp*, i8*, i32*, i32*, i32*)*, i32 (i32)* }
%struct.mlxsw_sp_ptp_ops = type { %struct.mlxsw_sp_ptp_clock* (%struct.mlxsw_sp*, %struct.device*)*, void (%struct.mlxsw_sp_ptp_clock*)*, %struct.mlxsw_sp_ptp_state* (%struct.mlxsw_sp*)*, void (%struct.mlxsw_sp_ptp_state*)*, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)*, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)*, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)*, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)*, void (%struct.work_struct*)*, i32 (%struct.mlxsw_sp*, %struct.ethtool_ts_info*)*, i32 ()*, void (i8**)*, void (%struct.mlxsw_sp_port*, i64*, i32)* }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.mlxsw_sp_span_ops = type { i32 (%struct.mlxsw_sp*)*, i32 (%struct.mlxsw_sp*, i16)* }
%struct.mlxsw_sp_policer_core_ops = type opaque
%struct.mlxsw_sp_trap_ops = type opaque
%struct.mlxsw_listener = type { i16, %union.anon.170, i32, i32, i8, i8, i8 }
%union.anon.170 = type { %struct.mlxsw_rx_listener }
%struct.mlxsw_rx_listener = type { void (%struct.sk_buff*, i8, i8*)*, i8, i8, i16 }
%struct.anon.156 = type { i8 }
%struct.anon.157 = type { %struct.ieee_ets*, %struct.ieee_maxrate*, %struct.ieee_pfc*, i32 }
%struct.ieee_ets = type { i8, i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%struct.ieee_maxrate = type { [8 x i64] }
%struct.ieee_pfc = type { i8, i8, i8, i16, [8 x i64], [8 x i64] }
%struct.mlxsw_sp_port_mapping = type { i8, i8, i8 }
%struct.anon.158 = type { %struct.rtnl_link_stats64, %struct.mlxsw_sp_port_xstats, %struct.delayed_work }
%struct.mlxsw_sp_port_xstats = type { i64, [16 x i64], [16 x i64], [16 x i64], [8 x i64], [8 x i64] }
%struct.mlxsw_sp_port_sample = type { %struct.psample_group*, i32, i32, i8 }
%struct.psample_group = type { %struct.list_head, %struct.net*, i32, i32, i32, %struct.callback_head }
%struct.mlxsw_sp_port_vlan = type { %struct.list_head, %struct.mlxsw_sp_port*, %struct.mlxsw_sp_fid*, i16, %struct.mlxsw_sp_bridge_port*, %struct.list_head }
%struct.mlxsw_sp_fid = type opaque
%struct.mlxsw_sp_qdisc_state = type opaque
%struct.mlxsw_sp_flow_block = type { %struct.list_head, %struct.anon.160, %struct.mlxsw_sp_acl_ruleset*, %struct.mlxsw_sp*, i32, i32, i32, i32, i32, i32, %struct.net* }
%struct.anon.160 = type { %struct.list_head, i32, i32 }
%struct.mlxsw_sp_acl_ruleset = type opaque
%struct.anon.161 = type { %struct.delayed_work, %struct.hwtstamp_config, i16, i16, %struct.mlxsw_sp_ptp_port_stats }
%struct.mlxsw_sp_ptp_port_stats = type { %struct.mlxsw_sp_ptp_port_dir_stats, %struct.mlxsw_sp_ptp_port_dir_stats }
%struct.mlxsw_sp_ptp_port_dir_stats = type { i64, i64 }
%struct.mlxsw_sp_hdroom = type { i32, %struct.anon.162, %struct.anon.163, %struct.anon.164, i32, i32 }
%struct.anon.162 = type { [8 x %struct.mlxsw_sp_hdroom_prio] }
%struct.mlxsw_sp_hdroom_prio = type { i8, i8, i8, i8 }
%struct.anon.163 = type { [10 x %struct.mlxsw_sp_hdroom_buf] }
%struct.mlxsw_sp_hdroom_buf = type { i32, i32, i32, i8 }
%struct.anon.164 = type { i32, i32, i8 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.mlxsw_reg_info = type { i16, i16, i8* }
%struct.mlxsw_sp_bridge_vlan = type { %struct.list_head, %struct.list_head, i16 }
%struct.mlxsw_sp_mid = type { %struct.list_head, [6 x i8], i16, i16, i8, i64* }
%struct.vxlan_dev = type { %struct.vxlan_dev_node, %struct.vxlan_dev_node, %struct.list_head, %struct.vxlan_sock*, %struct.vxlan_sock*, %struct.net_device*, %struct.net*, %struct.vxlan_rdst, %struct.timer_list, [256 x %struct.spinlock], i32, %struct.gro_cells, %struct.vxlan_config, [256 x %struct.hlist_head] }
%struct.vxlan_dev_node = type { %struct.hlist_node, %struct.vxlan_dev* }
%struct.vxlan_sock = type { %struct.hlist_node, %struct.socket*, [1024 x %struct.hlist_head], %struct.refcount_struct, i32 }
%struct.vxlan_rdst = type { %union.vxlan_addr, i16, i8, i32, i32, %struct.net_device*, %struct.list_head, %struct.callback_head, %struct.dst_cache }
%union.vxlan_addr = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.dst_cache = type { %struct.dst_cache_pcpu*, i64 }
%struct.dst_cache_pcpu = type opaque
%struct.gro_cells = type { %struct.gro_cell* }
%struct.gro_cell = type opaque
%struct.vxlan_config = type { %union.vxlan_addr, %union.vxlan_addr, i32, i32, i32, i16, i16, i16, i8, i8, i32, i32, i64, i32, i8, i32 }
%struct.mlxsw_sp_switchdev_event_work = type { %struct.work_struct, %union.anon.185, %struct.net_device*, i64 }
%union.anon.185 = type { %struct.switchdev_notifier_vxlan_fdb_info }
%struct.switchdev_notifier_vxlan_fdb_info = type { %struct.switchdev_notifier_info, %union.vxlan_addr, i16, i32, i32, [6 x i8], i32, i8, i8 }
%struct.switchdev_notifier_info = type { %struct.net_device*, %struct.netlink_ext_ack* }
%struct.switchdev_notifier_fdb_info = type { %struct.switchdev_notifier_info, i8*, i16, i8 }
%struct.switchdev_notifier_port_attr_info = type { %struct.switchdev_notifier_info, %struct.switchdev_attr*, %struct.switchdev_trans*, i8 }
%struct.switchdev_attr = type { %struct.net_device*, i32, i32, i8*, void (%struct.net_device*, i32, i8*)*, %union.anon.186 }
%union.anon.186 = type { i64 }
%struct.switchdev_trans = type { i8 }
%struct.netdev_nested_priv = type { i8, i8* }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.mlxsw_sp_nve_params = type { i32, i32, %struct.net_device* }
%struct.bridge_vlan_info = type { i16, i16 }
%struct.switchdev_notifier_port_obj_info = type { %struct.switchdev_notifier_info, %struct.switchdev_obj*, %struct.switchdev_trans*, i8 }
%struct.switchdev_obj = type { %struct.net_device*, i32, i32, i8*, void (%struct.net_device*, i32, i8*)* }
%struct.switchdev_obj_port_vlan = type { %struct.switchdev_obj, i16, i16, i16 }
%struct.switchdev_obj_port_mdb = type { %struct.switchdev_obj, [6 x i8], i16 }

@.str = private unnamed_addr constant [57 x i8] c"drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c\00", align 1
@mlxsw_sp_switchdev_notifier = dso_local global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @mlxsw_sp_switchdev_event, %struct.notifier_block* null, i32 0 }, align 8, !dbg !0
@mlxsw_sp_bridge_8021q_ops = internal constant %struct.mlxsw_sp_bridge_ops { i32 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*, %struct.netlink_ext_ack*)* @mlxsw_sp_bridge_8021q_port_join, void (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*)* @mlxsw_sp_bridge_8021q_port_leave, i32 (%struct.mlxsw_sp_bridge_device*, %struct.net_device*, i16, %struct.netlink_ext_ack*)* @mlxsw_sp_bridge_8021q_vxlan_join, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16, %struct.netlink_ext_ack*)* @mlxsw_sp_bridge_8021q_fid_get, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16)* @mlxsw_sp_bridge_8021q_fid_lookup, i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)* @mlxsw_sp_bridge_8021q_fid_vid }, align 8, !dbg !11421
@mlxsw_sp_bridge_8021d_ops = internal constant %struct.mlxsw_sp_bridge_ops { i32 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*, %struct.netlink_ext_ack*)* @mlxsw_sp_bridge_8021d_port_join, void (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*)* @mlxsw_sp_bridge_8021d_port_leave, i32 (%struct.mlxsw_sp_bridge_device*, %struct.net_device*, i16, %struct.netlink_ext_ack*)* @mlxsw_sp_bridge_8021d_vxlan_join, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16, %struct.netlink_ext_ack*)* @mlxsw_sp_bridge_8021d_fid_get, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16)* @mlxsw_sp_bridge_8021d_fid_lookup, i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)* @mlxsw_sp_bridge_8021d_fid_vid }, align 8, !dbg !11435
@.str.1 = private unnamed_addr constant [6 x i8] c"vxlan\00", align 1
@mlxsw_reg_sfdf = internal constant %struct.mlxsw_reg_info { i16 8211, i16 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0) }, align 8, !dbg !11323
@.str.2 = private unnamed_addr constant [43 x i8] c"drivers/net/ethernet/mellanox/mlxsw/item.h\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"\013mlxsw: item bug (name=%s,offset=%x,step=%x,in_step_offset=%x,typesize=%zx)\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"reg_sfdf_flush_type\00", align 1
@mlxsw_reg_sfdf_flush_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0) }, align 8, !dbg !11315
@.str.6 = private unnamed_addr constant [22 x i8] c"reg_sfdf_flush_static\00", align 1
@mlxsw_reg_sfdf_flush_static_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0) }, align 8, !dbg !11317
@.str.8 = private unnamed_addr constant [13 x i8] c"reg_sfdf_fid\00", align 1
@mlxsw_reg_sfdf_fid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0) }, align 8, !dbg !11319
@.str.10 = private unnamed_addr constant [30 x i8] c"reg_sfdf_port_fid_system_port\00", align 1
@mlxsw_reg_sfdf_port_fid_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0) }, align 8, !dbg !11321
@.str.12 = private unnamed_addr constant [5 x i8] c"sfdf\00", align 1
@mlxsw_reg_sfd = internal constant %struct.mlxsw_reg_info { i16 8202, i16 1040, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0) }, align 8, !dbg !11347
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.13 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"reg_sfd_op\00", align 1
@mlxsw_reg_sfd_op_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 30, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0) }, align 8, !dbg !11325
@.str.16 = private unnamed_addr constant [23 x i8] c"reg_sfd_record_locator\00", align 1
@mlxsw_reg_sfd_record_locator_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 30, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0) }, align 8, !dbg !11327
@.str.18 = private unnamed_addr constant [16 x i8] c"reg_sfd_num_rec\00", align 1
@mlxsw_reg_sfd_num_rec_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0) }, align 8, !dbg !11329
@.str.20 = private unnamed_addr constant [17 x i8] c"reg_sfd_rec_swid\00", align 1
@mlxsw_reg_sfd_rec_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0) }, align 8, !dbg !11331
@.str.22 = private unnamed_addr constant [17 x i8] c"reg_sfd_rec_type\00", align 1
@mlxsw_reg_sfd_rec_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 0, i8 20, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i32 0, i32 0) }, align 8, !dbg !11333
@mlxsw_reg_sfd_rec_mac_item = internal global %struct.mlxsw_item { i16 16, i16 16, i16 2, i8 0, i8 0, i8 0, %union.anon.168 { i16 6 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0) }, align 8, !dbg !11335
@.str.24 = private unnamed_addr constant [16 x i8] c"reg_sfd_rec_mac\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"reg_sfd_rec_action\00", align 1
@mlxsw_reg_sfd_rec_action_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i32 0, i32 0) }, align 8, !dbg !11337
@.str.27 = private unnamed_addr constant [19 x i8] c"reg_sfd_rec_policy\00", align 1
@mlxsw_reg_sfd_rec_policy_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 0, i8 18, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i32 0, i32 0) }, align 8, !dbg !11339
@.str.29 = private unnamed_addr constant [20 x i8] c"reg_sfd_uc_sub_port\00", align 1
@mlxsw_reg_sfd_uc_sub_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0) }, align 8, !dbg !11341
@.str.31 = private unnamed_addr constant [19 x i8] c"reg_sfd_uc_fid_vid\00", align 1
@mlxsw_reg_sfd_uc_fid_vid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i32 0, i32 0) }, align 8, !dbg !11343
@.str.33 = private unnamed_addr constant [23 x i8] c"reg_sfd_uc_system_port\00", align 1
@mlxsw_reg_sfd_uc_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0) }, align 8, !dbg !11345
@.str.35 = private unnamed_addr constant [4 x i8] c"sfd\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"Unable to remove port from SMID\0A\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Unable to remove MC SFD\0A\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"reg_sfd_mc_pgi\00", align 1
@mlxsw_reg_sfd_mc_pgi_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 13, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0) }, align 8, !dbg !11349
@.str.40 = private unnamed_addr constant [19 x i8] c"reg_sfd_mc_fid_vid\00", align 1
@mlxsw_reg_sfd_mc_fid_vid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i32 0, i32 0) }, align 8, !dbg !11351
@.str.42 = private unnamed_addr constant [15 x i8] c"reg_sfd_mc_mid\00", align 1
@mlxsw_reg_sfd_mc_mid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, align 8, !dbg !11353
@mlxsw_reg_smid = internal constant %struct.mlxsw_reg_info { i16 8199, i16 576, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0) }, align 8, !dbg !11363
@.str.44 = private unnamed_addr constant [14 x i8] c"reg_smid_swid\00", align 1
@mlxsw_reg_smid_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0) }, align 8, !dbg !11355
@.str.46 = private unnamed_addr constant [13 x i8] c"reg_smid_mid\00", align 1
@mlxsw_reg_smid_mid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i32 0, i32 0) }, align 8, !dbg !11357
@mlxsw_reg_smid_port_item = internal global %struct.mlxsw_item { i16 32, i16 0, i16 0, i8 0, i8 1, i8 0, %union.anon.168 { i16 32 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i32 0, i32 0) }, align 8, !dbg !11359
@.str.48 = private unnamed_addr constant [55 x i8] c"\013mlxsw: item bug (name=%s,offset=%x,element_size=%x)\0A\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"reg_smid_port\00", align 1
@mlxsw_reg_smid_port_mask_item = internal global %struct.mlxsw_item { i16 544, i16 0, i16 0, i8 0, i8 1, i8 0, %union.anon.168 { i16 32 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0) }, align 8, !dbg !11361
@.str.50 = private unnamed_addr constant [19 x i8] c"reg_smid_port_mask\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"smid\00", align 1
@.str.52 = private unnamed_addr constant [41 x i8] c"Only one VLAN-aware bridge is supported\0A\00", align 1
@mlxsw_sp_bridge_device_create.__msg = internal constant [56 x i8] c"mlxsw_spectrum: Only one VLAN-aware bridge is supported\00", align 16, !dbg !11365
@mlxsw_reg_sfdat = internal constant %struct.mlxsw_reg_info { i16 8201, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0) }, align 8, !dbg !11377
@.str.53 = private unnamed_addr constant [15 x i8] c"reg_sfdat_swid\00", align 1
@mlxsw_reg_sfdat_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0) }, align 8, !dbg !11373
@.str.55 = private unnamed_addr constant [19 x i8] c"reg_sfdat_age_time\00", align 1
@mlxsw_reg_sfdat_age_time_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 20, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.55, i32 0, i32 0) }, align 8, !dbg !11375
@.str.57 = private unnamed_addr constant [6 x i8] c"sfdat\00", align 1
@.str.58 = private unnamed_addr constant [53 x i8] c"VLAN filtering can't be changed for existing bridge\0A\00", align 1
@.str.59 = private unnamed_addr constant [26 x i8] c"reg_sfd_uc_tunnel_uip_msb\00", align 1
@mlxsw_reg_sfd_uc_tunnel_uip_msb_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.59, i32 0, i32 0) }, align 8, !dbg !11379
@.str.61 = private unnamed_addr constant [26 x i8] c"reg_sfd_uc_tunnel_uip_lsb\00", align 1
@mlxsw_reg_sfd_uc_tunnel_uip_lsb_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i32 0, i32 0) }, align 8, !dbg !11381
@.str.63 = private unnamed_addr constant [22 x i8] c"reg_sfd_uc_tunnel_fid\00", align 1
@mlxsw_reg_sfd_uc_tunnel_fid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63, i32 0, i32 0) }, align 8, !dbg !11383
@.str.65 = private unnamed_addr constant [27 x i8] c"reg_sfd_uc_tunnel_protocol\00", align 1
@mlxsw_reg_sfd_uc_tunnel_protocol_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 27, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i32 0, i32 0) }, align 8, !dbg !11385
@.str.67 = private unnamed_addr constant [24 x i8] c"reg_sfd_uc_lag_sub_port\00", align 1
@mlxsw_reg_sfd_uc_lag_sub_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.67, i32 0, i32 0) }, align 8, !dbg !11387
@.str.69 = private unnamed_addr constant [23 x i8] c"reg_sfd_uc_lag_fid_vid\00", align 1
@mlxsw_reg_sfd_uc_lag_fid_vid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i32 0, i32 0) }, align 8, !dbg !11389
@.str.71 = private unnamed_addr constant [23 x i8] c"reg_sfd_uc_lag_lag_vid\00", align 1
@mlxsw_reg_sfd_uc_lag_lag_vid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 12, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.71, i32 0, i32 0) }, align 8, !dbg !11391
@.str.73 = private unnamed_addr constant [22 x i8] c"reg_sfd_uc_lag_lag_id\00", align 1
@mlxsw_reg_sfd_uc_lag_lag_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 10, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0) }, align 8, !dbg !11393
@mlxsw_sp_switchdev_vxlan_work_prepare.__msg = internal constant [69 x i8] c"mlxsw_spectrum: VxLAN: FDB: Non-default remote port is not supported\00", align 16, !dbg !11395
@mlxsw_sp_switchdev_vxlan_work_prepare.__msg.75 = internal constant [61 x i8] c"mlxsw_spectrum: VxLAN: FDB: Non-default VNI is not supported\00", align 16, !dbg !11404
@mlxsw_sp_switchdev_vxlan_work_prepare.__msg.76 = internal constant [61 x i8] c"mlxsw_spectrum: VxLAN: FDB: Local interface is not supported\00", align 16, !dbg !11409
@mlxsw_sp_switchdev_vxlan_work_prepare.__msg.77 = internal constant [66 x i8] c"mlxsw_spectrum: VxLAN: FDB: Multicast MAC addresses not supported\00", align 16, !dbg !11411
@mlxsw_sp_switchdev_vxlan_work_prepare.__msg.78 = internal constant [70 x i8] c"mlxsw_spectrum: VxLAN: FDB: Multicast destination IP is not supported\00", align 16, !dbg !11416
@mlxsw_sp_bridge_8021q_port_join.__msg = internal constant [69 x i8] c"mlxsw_spectrum: Can not enslave a VLAN device to a VLAN-aware bridge\00", align 16, !dbg !11423
@mlxsw_sp_bridge_8021q_vxlan_join.__msg = internal constant [44 x i8] c"mlxsw_spectrum: Failed to create 802.1Q FID\00", align 16, !dbg !11426
@mlxsw_sp_bridge_8021q_vxlan_join.__msg.79 = internal constant [42 x i8] c"mlxsw_spectrum: VNI is already set on FID\00", align 16, !dbg !11430
@mlxsw_sp_bridge_8021d_port_join.__msg = internal constant [60 x i8] c"mlxsw_spectrum: Can not bridge VLAN uppers of the same port\00", align 16, !dbg !11437
@mlxsw_sp_bridge_8021d_vxlan_join.__msg = internal constant [44 x i8] c"mlxsw_spectrum: Failed to create 802.1D FID\00", align 16, !dbg !11443
@mlxsw_sp_bridge_8021d_vxlan_join.__msg.80 = internal constant [42 x i8] c"mlxsw_spectrum: VNI is already set on FID\00", align 16, !dbg !11446
@.str.81 = private unnamed_addr constant [35 x i8] c"Failed to set default ageing time\0A\00", align 1
@.str.82 = private unnamed_addr constant [39 x i8] c"Failed to register switchdev notifier\0A\00", align 1
@mlxsw_sp_switchdev_blocking_notifier = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @mlxsw_sp_switchdev_blocking_event, %struct.notifier_block* null, i32 0 }, align 8, !dbg !11448
@.str.83 = private unnamed_addr constant [48 x i8] c"Failed to register switchdev blocking notifier\0A\00", align 1
@mlxsw_sp_switchdev_vxlan_vlan_add.__msg = internal constant [55 x i8] c"mlxsw_spectrum: VLAN already mapped to a different VNI\00", align 16, !dbg !11450
@.str.84 = private unnamed_addr constant [50 x i8] c"Can't change PVID, it's used by router interface\0A\00", align 1
@.str.85 = private unnamed_addr constant [50 x i8] c"Can't remove PVID, it's used by router interface\0A\00", align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"Unable to allocate MC group\0A\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"Unable to set SMID\0A\00", align 1
@.str.88 = private unnamed_addr constant [34 x i8] c"Unable to remove port from MC DB\0A\00", align 1
@mlxsw_reg_sfn = internal constant %struct.mlxsw_reg_info { i16 8203, i16 1040, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0) }, align 8, !dbg !11467
@mlxsw_sp_fdb_notify_work._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !11458
@__func__.mlxsw_sp_fdb_notify_work = private unnamed_addr constant [25 x i8] c"mlxsw_sp_fdb_notify_work\00", align 1
@.str.89 = private unnamed_addr constant [33 x i8] c"Failed to get FDB notifications\0A\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"reg_sfn_swid\00", align 1
@mlxsw_reg_sfn_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0) }, align 8, !dbg !11461
@.str.92 = private unnamed_addr constant [12 x i8] c"reg_sfn_end\00", align 1
@mlxsw_reg_sfn_end_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 20, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i32 0, i32 0) }, align 8, !dbg !11463
@.str.94 = private unnamed_addr constant [16 x i8] c"reg_sfn_num_rec\00", align 1
@mlxsw_reg_sfn_num_rec_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.94, i32 0, i32 0) }, align 8, !dbg !11465
@.str.96 = private unnamed_addr constant [4 x i8] c"sfn\00", align 1
@.str.97 = private unnamed_addr constant [17 x i8] c"reg_sfn_rec_type\00", align 1
@mlxsw_reg_sfn_rec_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 0, i8 20, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i32 0, i32 0) }, align 8, !dbg !11469
@mlxsw_sp_fdb_notify_mac_process._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !11471
@__func__.mlxsw_sp_fdb_notify_mac_process = private unnamed_addr constant [32 x i8] c"mlxsw_sp_fdb_notify_mac_process\00", align 1
@.str.99 = private unnamed_addr constant [42 x i8] c"Incorrect local port in FDB notification\0A\00", align 1
@.str.100 = private unnamed_addr constant [66 x i8] c"Failed to find a matching {Port, VID} following FDB notification\0A\00", align 1
@.str.101 = private unnamed_addr constant [42 x i8] c"{Port, VID} not associated with a bridge\0A\00", align 1
@mlxsw_sp_fdb_notify_mac_process._rs.102 = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !11476
@.str.103 = private unnamed_addr constant [25 x i8] c"Failed to set FDB entry\0A\00", align 1
@mlxsw_reg_sfn_rec_mac_item = internal global %struct.mlxsw_item { i16 16, i16 16, i16 2, i8 0, i8 0, i8 0, %union.anon.168 { i16 6 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.104, i32 0, i32 0) }, align 8, !dbg !11478
@.str.104 = private unnamed_addr constant [16 x i8] c"reg_sfn_rec_mac\00", align 1
@.str.105 = private unnamed_addr constant [16 x i8] c"reg_sfn_mac_fid\00", align 1
@mlxsw_reg_sfn_mac_fid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.105, i32 0, i32 0) }, align 8, !dbg !11480
@.str.107 = private unnamed_addr constant [24 x i8] c"reg_sfn_mac_system_port\00", align 1
@mlxsw_reg_sfn_mac_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.107, i32 0, i32 0) }, align 8, !dbg !11482
@mlxsw_sp_fdb_notify_mac_lag_process._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !11484
@__func__.mlxsw_sp_fdb_notify_mac_lag_process = private unnamed_addr constant [36 x i8] c"mlxsw_sp_fdb_notify_mac_lag_process\00", align 1
@.str.109 = private unnamed_addr constant [38 x i8] c"Cannot find port representor for LAG\0A\00", align 1
@mlxsw_sp_fdb_notify_mac_lag_process._rs.110 = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !11487
@.str.111 = private unnamed_addr constant [23 x i8] c"reg_sfn_mac_lag_lag_id\00", align 1
@mlxsw_reg_sfn_mac_lag_lag_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 10, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.111, i32 0, i32 0) }, align 8, !dbg !11489
@.str.113 = private unnamed_addr constant [26 x i8] c"reg_sfn_uc_tunnel_uip_msb\00", align 1
@mlxsw_reg_sfn_uc_tunnel_uip_msb_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.113, i32 0, i32 0) }, align 8, !dbg !11491
@.str.115 = private unnamed_addr constant [26 x i8] c"reg_sfn_uc_tunnel_uip_lsb\00", align 1
@mlxsw_reg_sfn_uc_tunnel_uip_lsb_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.115, i32 0, i32 0) }, align 8, !dbg !11493
@.str.117 = private unnamed_addr constant [27 x i8] c"reg_sfn_uc_tunnel_protocol\00", align 1
@mlxsw_reg_sfn_uc_tunnel_protocol_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 27, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.117, i32 0, i32 0) }, align 8, !dbg !11495
@.str.119 = private unnamed_addr constant [22 x i8] c"include/net/devlink.h\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_sp_bridge_device_is_offloaded(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %br_dev) #0 !dbg !11502 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !11507, metadata !DIExpression()), !dbg !11508
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !11509, metadata !DIExpression()), !dbg !11510
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !11511
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 8, !dbg !11512
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !11512
  %2 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !11513
  %call = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %1, %struct.net_device* %2) #8, !dbg !11514
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %call, null, !dbg !11515
  %lnot = xor i1 %tobool, true, !dbg !11515
  %lnot1 = xor i1 %lnot, true, !dbg !11516
  ret i1 %lnot1, !dbg !11517
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %bridge, %struct.net_device* %br_dev) #0 !dbg !11518 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.mlxsw_sp_bridge_device*, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !11523, metadata !DIExpression()), !dbg !11524
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !11525, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !11527, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11529, metadata !DIExpression()), !dbg !11532
  %0 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !11532
  %bridges_list = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %0, i32 0, i32 4, !dbg !11532
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %bridges_list, i32 0, i32 0, !dbg !11532
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11532
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !11532
  store i8* %2, i8** %__mptr, align 8, !dbg !11532
  br label %do.body, !dbg !11532

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11533

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11532
  %add.ptr = getelementptr i8, i8* %3, i64 -8, !dbg !11532
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_device*, !dbg !11532
  store %struct.mlxsw_sp_bridge_device* %4, %struct.mlxsw_sp_bridge_device** %tmp, align 8, !dbg !11533
  %5 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %tmp, align 8, !dbg !11532
  store %struct.mlxsw_sp_bridge_device* %5, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11535
  br label %for.cond, !dbg !11535

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11536
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %6, i32 0, i32 1, !dbg !11536
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !11536
  %bridges_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %7, i32 0, i32 4, !dbg !11536
  %cmp = icmp eq %struct.list_head* %list, %bridges_list1, !dbg !11536
  %lnot = xor i1 %cmp, true, !dbg !11536
  br i1 %lnot, label %for.body, label %for.end, !dbg !11535

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11538
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %8, i32 0, i32 0, !dbg !11540
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11540
  %10 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !11541
  %cmp2 = icmp eq %struct.net_device* %9, %10, !dbg !11542
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11543

if.then:                                          ; preds = %for.body
  %11 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11544
  store %struct.mlxsw_sp_bridge_device* %11, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !11545
  br label %return, !dbg !11545

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11541

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !11546, metadata !DIExpression()), !dbg !11548
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11548
  %list4 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %12, i32 0, i32 1, !dbg !11548
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !11548
  %13 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !11548
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !11548
  store i8* %14, i8** %__mptr3, align 8, !dbg !11548
  br label %do.body6, !dbg !11548

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !11549

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr3, align 8, !dbg !11548
  %add.ptr9 = getelementptr i8, i8* %15, i64 -8, !dbg !11548
  %16 = bitcast i8* %add.ptr9 to %struct.mlxsw_sp_bridge_device*, !dbg !11548
  store %struct.mlxsw_sp_bridge_device* %16, %struct.mlxsw_sp_bridge_device** %tmp8, align 8, !dbg !11549
  %17 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %tmp8, align 8, !dbg !11548
  store %struct.mlxsw_sp_bridge_device* %17, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11536
  br label %for.cond, !dbg !11536, !llvm.loop !11551

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_bridge_device* null, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !11553
  br label %return, !dbg !11553

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !11554
  ret %struct.mlxsw_sp_bridge_device* %18, !dbg !11554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %bridge, %struct.net_device* %brport_dev) #0 !dbg !11555 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %brport_dev.addr = alloca %struct.net_device*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !11558, metadata !DIExpression()), !dbg !11559
  store %struct.net_device* %brport_dev, %struct.net_device** %brport_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %brport_dev.addr, metadata !11560, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !11562, metadata !DIExpression()), !dbg !11563
  %0 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !11564
  %call = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %0) #8, !dbg !11565
  store %struct.net_device* %call, %struct.net_device** %br_dev, align 8, !dbg !11563
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !11566, metadata !DIExpression()), !dbg !11567
  %1 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !11568
  %tobool = icmp ne %struct.net_device* %1, null, !dbg !11568
  br i1 %tobool, label %if.end, label %if.then, !dbg !11570

if.then:                                          ; preds = %entry
  store %struct.mlxsw_sp_bridge_port* null, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !11571
  br label %return, !dbg !11571

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !11572
  %3 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !11573
  %call1 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %2, %struct.net_device* %3) #8, !dbg !11574
  store %struct.mlxsw_sp_bridge_device* %call1, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11575
  %4 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11576
  %tobool2 = icmp ne %struct.mlxsw_sp_bridge_device* %4, null, !dbg !11576
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !11578

if.then3:                                         ; preds = %if.end
  store %struct.mlxsw_sp_bridge_port* null, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !11579
  br label %return, !dbg !11579

if.end4:                                          ; preds = %if.end
  %5 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11580
  %6 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !11581
  %call5 = call %struct.mlxsw_sp_bridge_port* @__mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge_device* %5, %struct.net_device* %6) #8, !dbg !11582
  store %struct.mlxsw_sp_bridge_port* %call5, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !11583
  br label %return, !dbg !11583

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %7 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !11584
  ret %struct.mlxsw_sp_bridge_port* %7, !dbg !11584
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_port* @__mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.net_device* %brport_dev) #0 !dbg !11585 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %brport_dev.addr = alloca %struct.net_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.mlxsw_sp_bridge_port*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !11590, metadata !DIExpression()), !dbg !11591
  store %struct.net_device* %brport_dev, %struct.net_device** %brport_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %brport_dev.addr, metadata !11592, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !11594, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11596, metadata !DIExpression()), !dbg !11599
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !11599
  %ports_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 2, !dbg !11599
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports_list, i32 0, i32 0, !dbg !11599
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11599
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !11599
  store i8* %2, i8** %__mptr, align 8, !dbg !11599
  br label %do.body, !dbg !11599

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11600

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11599
  %add.ptr = getelementptr i8, i8* %3, i64 -16, !dbg !11599
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_port*, !dbg !11599
  store %struct.mlxsw_sp_bridge_port* %4, %struct.mlxsw_sp_bridge_port** %tmp, align 8, !dbg !11600
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %tmp, align 8, !dbg !11599
  store %struct.mlxsw_sp_bridge_port* %5, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11602
  br label %for.cond, !dbg !11602

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11603
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %6, i32 0, i32 2, !dbg !11603
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !11603
  %ports_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 2, !dbg !11603
  %cmp = icmp eq %struct.list_head* %list, %ports_list1, !dbg !11603
  %lnot = xor i1 %cmp, true, !dbg !11603
  br i1 %lnot, label %for.body, label %for.end, !dbg !11602

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11605
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %8, i32 0, i32 0, !dbg !11608
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11608
  %10 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !11609
  %cmp2 = icmp eq %struct.net_device* %9, %10, !dbg !11610
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11611

if.then:                                          ; preds = %for.body
  %11 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11612
  store %struct.mlxsw_sp_bridge_port* %11, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !11613
  br label %return, !dbg !11613

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11614

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !11615, metadata !DIExpression()), !dbg !11617
  %12 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11617
  %list4 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %12, i32 0, i32 2, !dbg !11617
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !11617
  %13 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !11617
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !11617
  store i8* %14, i8** %__mptr3, align 8, !dbg !11617
  br label %do.body6, !dbg !11617

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !11618

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr3, align 8, !dbg !11617
  %add.ptr9 = getelementptr i8, i8* %15, i64 -16, !dbg !11617
  %16 = bitcast i8* %add.ptr9 to %struct.mlxsw_sp_bridge_port*, !dbg !11617
  store %struct.mlxsw_sp_bridge_port* %16, %struct.mlxsw_sp_bridge_port** %tmp8, align 8, !dbg !11618
  %17 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %tmp8, align 8, !dbg !11617
  store %struct.mlxsw_sp_bridge_port* %17, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11603
  br label %for.cond, !dbg !11603, !llvm.loop !11620

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_bridge_port* null, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !11622
  br label %return, !dbg !11622

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !11623
  ret %struct.mlxsw_sp_bridge_port* %18, !dbg !11623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_port_vlan_bridge_leave(%struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan) #0 !dbg !11624 {
entry:
  %mlxsw_sp_port_vlan.addr = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid = alloca i16, align 2
  %last_port = alloca i8, align 1
  %last_vlan = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, metadata !11627, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !11629, metadata !DIExpression()), !dbg !11630
  %0 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11631
  %mlxsw_sp_port1 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %0, i32 0, i32 1, !dbg !11632
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port1, align 8, !dbg !11632
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11630
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !11633, metadata !DIExpression()), !dbg !11634
  %2 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11635
  %fid2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %2, i32 0, i32 2, !dbg !11636
  %3 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid2, align 8, !dbg !11636
  store %struct.mlxsw_sp_fid* %3, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11634
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !11637, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !11639, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !11641, metadata !DIExpression()), !dbg !11642
  %4 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11643
  %vid3 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %4, i32 0, i32 3, !dbg !11644
  %5 = load i16, i16* %vid3, align 8, !dbg !11644
  store i16 %5, i16* %vid, align 2, !dbg !11642
  call void @llvm.dbg.declare(metadata i8* %last_port, metadata !11645, metadata !DIExpression()), !dbg !11646
  call void @llvm.dbg.declare(metadata i8* %last_vlan, metadata !11647, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11649, metadata !DIExpression()), !dbg !11652
  %6 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11652
  %call = call i32 @mlxsw_sp_fid_type(%struct.mlxsw_sp_fid* %6) #8, !dbg !11652
  %cmp = icmp ne i32 %call, 0, !dbg !11652
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11652

land.rhs:                                         ; preds = %entry
  %7 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11652
  %call4 = call i32 @mlxsw_sp_fid_type(%struct.mlxsw_sp_fid* %7) #8, !dbg !11652
  %cmp5 = icmp ne i32 %call4, 1, !dbg !11652
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !11653
  %lnot = xor i1 %8, true, !dbg !11652
  %lnot6 = xor i1 %lnot, true, !dbg !11652
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !11652
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11652
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !11654
  %tobool = icmp ne i32 %9, 0, !dbg !11654
  %lnot7 = xor i1 %tobool, true, !dbg !11654
  %lnot9 = xor i1 %lnot7, true, !dbg !11654
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !11654
  %conv = sext i32 %lnot.ext10 to i64, !dbg !11654
  %tobool11 = icmp ne i64 %conv, 0, !dbg !11654
  br i1 %tobool11, label %if.then, label %if.end, !dbg !11652

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !11654

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !11656

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !11658

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !11656

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 1098, i32 2305, i64 12) #9, !dbg !11660, !srcloc !11662
  br label %do.end14, !dbg !11660

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 686) #9, !dbg !11663, !srcloc !11665
  br label %do.body15, !dbg !11656

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !11666

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !11656

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !11656

if.end:                                           ; preds = %do.end17, %land.end
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !11652
  %tobool18 = icmp ne i32 %10, 0, !dbg !11652
  %lnot19 = xor i1 %tobool18, true, !dbg !11652
  %lnot21 = xor i1 %lnot19, true, !dbg !11652
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11652
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !11652
  store i64 %conv23, i64* %tmp, align 8, !dbg !11654
  %11 = load i64, i64* %tmp, align 8, !dbg !11652
  %tobool24 = icmp ne i64 %11, 0, !dbg !11668
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11669

if.then25:                                        ; preds = %if.end
  br label %return, !dbg !11670

if.end26:                                         ; preds = %if.end
  %12 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11671
  %bridge_port27 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %12, i32 0, i32 4, !dbg !11672
  %13 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port27, align 8, !dbg !11672
  store %struct.mlxsw_sp_bridge_port* %13, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11673
  %14 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11674
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %14, i32 0, i32 3, !dbg !11675
  %call28 = call i32 @list_is_singular(%struct.list_head* %vlans_list) #8, !dbg !11676
  %tobool29 = icmp ne i32 %call28, 0, !dbg !11676
  %frombool = zext i1 %tobool29 to i8, !dbg !11677
  store i8 %frombool, i8* %last_vlan, align 1, !dbg !11677
  %15 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11678
  %16 = load i16, i16* %vid, align 2, !dbg !11679
  %call30 = call %struct.mlxsw_sp_bridge_vlan* @mlxsw_sp_bridge_vlan_find(%struct.mlxsw_sp_bridge_port* %15, i16 zeroext %16) #8, !dbg !11680
  store %struct.mlxsw_sp_bridge_vlan* %call30, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11681
  %17 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11682
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %17, i32 0, i32 1, !dbg !11683
  %call31 = call i32 @list_is_singular(%struct.list_head* %port_vlan_list) #8, !dbg !11684
  %tobool32 = icmp ne i32 %call31, 0, !dbg !11684
  %frombool33 = zext i1 %tobool32 to i8, !dbg !11685
  store i8 %frombool33, i8* %last_port, align 1, !dbg !11685
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11686
  %bridge_vlan_node = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %18, i32 0, i32 5, !dbg !11687
  call void @list_del(%struct.list_head* %bridge_vlan_node) #8, !dbg !11688
  %19 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11689
  call void @mlxsw_sp_bridge_vlan_put(%struct.mlxsw_sp_bridge_vlan* %19) #8, !dbg !11690
  %20 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11691
  %21 = load i16, i16* %vid, align 2, !dbg !11692
  %call34 = call i32 @mlxsw_sp_port_vid_stp_set(%struct.mlxsw_sp_port* %20, i16 zeroext %21, i8 zeroext 0) #8, !dbg !11693
  %22 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11694
  %23 = load i16, i16* %vid, align 2, !dbg !11695
  %call35 = call i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %22, i16 zeroext %23, i1 zeroext false) #8, !dbg !11696
  %24 = load i8, i8* %last_port, align 1, !dbg !11697
  %tobool36 = trunc i8 %24 to i1, !dbg !11697
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !11699

if.then37:                                        ; preds = %if.end26
  %25 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11700
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %25, i32 0, i32 2, !dbg !11701
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !11701
  %27 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11702
  %28 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11703
  %call38 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %28) #8, !dbg !11704
  %call39 = call i32 @mlxsw_sp_bridge_port_fdb_flush(%struct.mlxsw_sp* %26, %struct.mlxsw_sp_bridge_port* %27, i16 zeroext %call38) #8, !dbg !11705
  br label %if.end40, !dbg !11705

if.end40:                                         ; preds = %if.then37, %if.end26
  %29 = load i8, i8* %last_vlan, align 1, !dbg !11706
  %tobool41 = trunc i8 %29 to i1, !dbg !11706
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !11708

if.then42:                                        ; preds = %if.end40
  %30 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11709
  %31 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11710
  call void @mlxsw_sp_bridge_port_mdb_flush(%struct.mlxsw_sp_port* %30, %struct.mlxsw_sp_bridge_port* %31) #8, !dbg !11711
  br label %if.end43, !dbg !11711

if.end43:                                         ; preds = %if.then42, %if.end40
  %32 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11712
  call void @mlxsw_sp_port_vlan_fid_leave(%struct.mlxsw_sp_port_vlan* %32) #8, !dbg !11713
  %33 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11714
  %mlxsw_sp44 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %33, i32 0, i32 2, !dbg !11715
  %34 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp44, align 8, !dbg !11715
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %34, i32 0, i32 8, !dbg !11716
  %35 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !11716
  %36 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !11717
  call void @mlxsw_sp_bridge_port_put(%struct.mlxsw_sp_bridge* %35, %struct.mlxsw_sp_bridge_port* %36) #8, !dbg !11718
  %37 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11719
  %bridge_port45 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %37, i32 0, i32 4, !dbg !11720
  store %struct.mlxsw_sp_bridge_port* null, %struct.mlxsw_sp_bridge_port** %bridge_port45, align 8, !dbg !11721
  br label %return, !dbg !11722

return:                                           ; preds = %if.end43, %if.then25
  ret void, !dbg !11722
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_fid_type(%struct.mlxsw_sp_fid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_is_singular(%struct.list_head* %head) #0 !dbg !11723 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11729, metadata !DIExpression()), !dbg !11730
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11731
  %call = call i32 @list_empty(%struct.list_head* %0) #8, !dbg !11732
  %tobool = icmp ne i32 %call, 0, !dbg !11732
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !11733

land.rhs:                                         ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11734
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11735
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11735
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11736
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !11737
  %4 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11737
  %cmp = icmp eq %struct.list_head* %2, %4, !dbg !11738
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !11739
  %land.ext = zext i1 %5 to i32, !dbg !11733
  ret i32 %land.ext, !dbg !11740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_vlan* @mlxsw_sp_bridge_vlan_find(%struct.mlxsw_sp_bridge_port* %bridge_port, i16 zeroext %vid) #0 !dbg !11741 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid.addr = alloca i16, align 2
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !11746, metadata !DIExpression()), !dbg !11747
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !11748, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !11750, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11752, metadata !DIExpression()), !dbg !11755
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11755
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 3, !dbg !11755
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !11755
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11755
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !11755
  store i8* %2, i8** %__mptr, align 8, !dbg !11755
  br label %do.body, !dbg !11755

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11756

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11755
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !11755
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_vlan*, !dbg !11755
  store %struct.mlxsw_sp_bridge_vlan* %4, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !11756
  %5 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !11755
  store %struct.mlxsw_sp_bridge_vlan* %5, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11758
  br label %for.cond, !dbg !11758

for.cond:                                         ; preds = %do.end10, %do.end
  %6 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11759
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %6, i32 0, i32 0, !dbg !11759
  %7 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11759
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %7, i32 0, i32 3, !dbg !11759
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !11759
  %lnot = xor i1 %cmp, true, !dbg !11759
  br i1 %lnot, label %for.body, label %for.end, !dbg !11758

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11761
  %vid2 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %8, i32 0, i32 2, !dbg !11764
  %9 = load i16, i16* %vid2, align 8, !dbg !11764
  %conv = zext i16 %9 to i32, !dbg !11761
  %10 = load i16, i16* %vid.addr, align 2, !dbg !11765
  %conv3 = zext i16 %10 to i32, !dbg !11765
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !11766
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11767

if.then:                                          ; preds = %for.body
  %11 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11768
  store %struct.mlxsw_sp_bridge_vlan* %11, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !11769
  br label %return, !dbg !11769

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11770

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !11771, metadata !DIExpression()), !dbg !11773
  %12 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11773
  %list7 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %12, i32 0, i32 0, !dbg !11773
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %list7, i32 0, i32 0, !dbg !11773
  %13 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !11773
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !11773
  store i8* %14, i8** %__mptr6, align 8, !dbg !11773
  br label %do.body9, !dbg !11773

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !11774

do.end10:                                         ; preds = %do.body9
  %15 = load i8*, i8** %__mptr6, align 8, !dbg !11773
  %add.ptr12 = getelementptr i8, i8* %15, i64 0, !dbg !11773
  %16 = bitcast i8* %add.ptr12 to %struct.mlxsw_sp_bridge_vlan*, !dbg !11773
  store %struct.mlxsw_sp_bridge_vlan* %16, %struct.mlxsw_sp_bridge_vlan** %tmp11, align 8, !dbg !11774
  %17 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp11, align 8, !dbg !11773
  store %struct.mlxsw_sp_bridge_vlan* %17, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !11759
  br label %for.cond, !dbg !11759, !llvm.loop !11776

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_bridge_vlan* null, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !11778
  br label %return, !dbg !11778

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !11779
  ret %struct.mlxsw_sp_bridge_vlan* %18, !dbg !11779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !11780 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11783, metadata !DIExpression()), !dbg !11784
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11785
  call void @__list_del_entry(%struct.list_head* %0) #8, !dbg !11786
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11787
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11788
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !11789
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11790
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11791
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !11792
  ret void, !dbg !11793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_vlan_put(%struct.mlxsw_sp_bridge_vlan* %bridge_vlan) #0 !dbg !11794 {
entry:
  %bridge_vlan.addr = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  store %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, metadata !11797, metadata !DIExpression()), !dbg !11798
  %0 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !11799
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %0, i32 0, i32 1, !dbg !11801
  %call = call i32 @list_empty(%struct.list_head* %port_vlan_list) #8, !dbg !11802
  %tobool = icmp ne i32 %call, 0, !dbg !11802
  br i1 %tobool, label %if.then, label %if.end, !dbg !11803

if.then:                                          ; preds = %entry
  %1 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !11804
  call void @mlxsw_sp_bridge_vlan_destroy(%struct.mlxsw_sp_bridge_vlan* %1) #8, !dbg !11805
  br label %if.end, !dbg !11805

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11806
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_vid_stp_set(%struct.mlxsw_sp_port*, i16 zeroext, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port*, i16 zeroext, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_port_fdb_flush(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_bridge_port* %bridge_port, i16 zeroext %fid_index) #0 !dbg !11807 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %fid_index.addr = alloca i16, align 2
  %lagged = alloca i8, align 1
  %sfdf_pl = alloca [20 x i8], align 16
  %system_port = alloca i16, align 2
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  store i16 %fid_index, i16* %fid_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid_index.addr, metadata !11814, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.declare(metadata i8* %lagged, metadata !11816, metadata !DIExpression()), !dbg !11817
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11818
  %lagged1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 8, !dbg !11819
  %1 = load i8, i8* %lagged1, align 1, !dbg !11819
  %tobool = trunc i8 %1 to i1, !dbg !11819
  %frombool = zext i1 %tobool to i8, !dbg !11817
  store i8 %frombool, i8* %lagged, align 1, !dbg !11817
  call void @llvm.dbg.declare(metadata [20 x i8]* %sfdf_pl, metadata !11820, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.declare(metadata i16* %system_port, metadata !11823, metadata !DIExpression()), !dbg !11824
  %2 = load i8, i8* %lagged, align 1, !dbg !11825
  %tobool2 = trunc i8 %2 to i1, !dbg !11825
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !11825

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11826
  %4 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %3, i32 0, i32 9, !dbg !11827
  %lag_id = bitcast %union.anon.159* %4 to i16*, !dbg !11827
  %5 = load i16, i16* %lag_id, align 2, !dbg !11827
  %conv = zext i16 %5 to i32, !dbg !11826
  br label %cond.end, !dbg !11825

cond.false:                                       ; preds = %entry
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11828
  %7 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %6, i32 0, i32 9, !dbg !11829
  %system_port3 = bitcast %union.anon.159* %7 to i16*, !dbg !11829
  %8 = load i16, i16* %system_port3, align 2, !dbg !11829
  %conv4 = zext i16 %8 to i32, !dbg !11828
  br label %cond.end, !dbg !11825

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv4, %cond.false ], !dbg !11825
  %conv5 = trunc i32 %cond to i16, !dbg !11825
  store i16 %conv5, i16* %system_port, align 2, !dbg !11830
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %sfdf_pl, i64 0, i64 0, !dbg !11831
  %9 = load i8, i8* %lagged, align 1, !dbg !11832
  %tobool6 = trunc i8 %9 to i1, !dbg !11832
  %call = call i32 @mlxsw_sp_fdb_flush_type(i1 zeroext %tobool6) #8, !dbg !11833
  call void @mlxsw_reg_sfdf_pack(i8* %arraydecay, i32 %call) #8, !dbg !11834
  %arraydecay7 = getelementptr inbounds [20 x i8], [20 x i8]* %sfdf_pl, i64 0, i64 0, !dbg !11835
  %10 = load i16, i16* %fid_index.addr, align 2, !dbg !11836
  %conv8 = zext i16 %10 to i32, !dbg !11836
  call void @mlxsw_reg_sfdf_fid_set(i8* %arraydecay7, i32 %conv8) #8, !dbg !11837
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %sfdf_pl, i64 0, i64 0, !dbg !11838
  %11 = load i16, i16* %system_port, align 2, !dbg !11839
  %conv10 = zext i16 %11 to i32, !dbg !11839
  call void @mlxsw_reg_sfdf_port_fid_system_port_set(i8* %arraydecay9, i32 %conv10) #8, !dbg !11840
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !11841
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 1, !dbg !11842
  %13 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !11842
  %arraydecay11 = getelementptr inbounds [20 x i8], [20 x i8]* %sfdf_pl, i64 0, i64 0, !dbg !11843
  %call12 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %13, %struct.mlxsw_reg_info* @mlxsw_reg_sfdf, i8* %arraydecay11) #8, !dbg !11844
  ret i32 %call12, !dbg !11845
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_port_mdb_flush(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_port* %bridge_port) #0 !dbg !11846 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %tmp = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp24 = alloca %struct.mlxsw_sp_mid*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !11849, metadata !DIExpression()), !dbg !11850
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !11851, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !11853, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !11855, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %tmp, metadata !11857, metadata !DIExpression()), !dbg !11858
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11859
  %bridge_device1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 1, !dbg !11860
  %1 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device1, align 8, !dbg !11860
  store %struct.mlxsw_sp_bridge_device* %1, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11861
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11862, metadata !DIExpression()), !dbg !11865
  %2 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11865
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %2, i32 0, i32 3, !dbg !11865
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mids_list, i32 0, i32 0, !dbg !11865
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11865
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !11865
  store i8* %4, i8** %__mptr, align 8, !dbg !11865
  br label %do.body, !dbg !11865

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11866

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11865
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !11865
  %6 = bitcast i8* %add.ptr to %struct.mlxsw_sp_mid*, !dbg !11865
  store %struct.mlxsw_sp_mid* %6, %struct.mlxsw_sp_mid** %tmp2, align 8, !dbg !11866
  %7 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp2, align 8, !dbg !11865
  store %struct.mlxsw_sp_mid* %7, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !11868
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !11869, metadata !DIExpression()), !dbg !11871
  %8 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !11871
  %list = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %8, i32 0, i32 0, !dbg !11871
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !11871
  %9 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !11871
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !11871
  store i8* %10, i8** %__mptr3, align 8, !dbg !11871
  br label %do.body5, !dbg !11871

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !11872

do.end6:                                          ; preds = %do.body5
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !11871
  %add.ptr8 = getelementptr i8, i8* %11, i64 0, !dbg !11871
  %12 = bitcast i8* %add.ptr8 to %struct.mlxsw_sp_mid*, !dbg !11871
  store %struct.mlxsw_sp_mid* %12, %struct.mlxsw_sp_mid** %tmp7, align 8, !dbg !11872
  %13 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp7, align 8, !dbg !11871
  store %struct.mlxsw_sp_mid* %13, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !11868
  br label %for.cond, !dbg !11868

for.cond:                                         ; preds = %do.end23, %do.end6
  %14 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !11874
  %list9 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %14, i32 0, i32 0, !dbg !11874
  %15 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11874
  %mids_list10 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %15, i32 0, i32 3, !dbg !11874
  %cmp = icmp eq %struct.list_head* %list9, %mids_list10, !dbg !11874
  %lnot = xor i1 %cmp, true, !dbg !11874
  br i1 %lnot, label %for.body, label %for.end, !dbg !11868

for.body:                                         ; preds = %for.cond
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !11876
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %16, i32 0, i32 3, !dbg !11879
  %17 = load i8, i8* %local_port, align 8, !dbg !11879
  %conv = zext i8 %17 to i64, !dbg !11876
  %18 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !11880
  %ports_in_mid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %18, i32 0, i32 5, !dbg !11881
  %19 = load i64*, i64** %ports_in_mid, align 8, !dbg !11881
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %19) #8, !dbg !11882
  br i1 %call, label %if.then, label %if.else, !dbg !11883

if.then:                                          ; preds = %for.body
  %20 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !11884
  %21 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11886
  %22 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !11887
  %call11 = call i32 @__mlxsw_sp_port_mdb_del(%struct.mlxsw_sp_port* %20, %struct.mlxsw_sp_bridge_port* %21, %struct.mlxsw_sp_mid* %22) #8, !dbg !11888
  br label %if.end18, !dbg !11889

if.else:                                          ; preds = %for.body
  %23 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11890
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %23, i32 0, i32 4, !dbg !11892
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !11892
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !11892
  %bf.clear = and i8 %bf.lshr, 1, !dbg !11892
  %conv12 = zext i8 %bf.clear to i32, !dbg !11890
  %tobool = icmp ne i32 %conv12, 0, !dbg !11890
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11893

land.lhs.true:                                    ; preds = %if.else
  %24 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11894
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %24, i32 0, i32 7, !dbg !11895
  %25 = load i8, i8* %mrouter, align 8, !dbg !11895
  %tobool13 = trunc i8 %25 to i1, !dbg !11895
  br i1 %tobool13, label %if.then15, label %if.end, !dbg !11896

if.then15:                                        ; preds = %land.lhs.true
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !11897
  %27 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !11899
  %mid16 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %27, i32 0, i32 3, !dbg !11900
  %28 = load i16, i16* %mid16, align 8, !dbg !11900
  %call17 = call i32 @mlxsw_sp_port_smid_set(%struct.mlxsw_sp_port* %26, i16 zeroext %28, i1 zeroext false) #8, !dbg !11901
  br label %if.end, !dbg !11902

if.end:                                           ; preds = %if.then15, %land.lhs.true, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !11903

for.inc:                                          ; preds = %if.end18
  %29 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !11874
  store %struct.mlxsw_sp_mid* %29, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !11874
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !11904, metadata !DIExpression()), !dbg !11906
  %30 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !11906
  %list20 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %30, i32 0, i32 0, !dbg !11906
  %next21 = getelementptr inbounds %struct.list_head, %struct.list_head* %list20, i32 0, i32 0, !dbg !11906
  %31 = load %struct.list_head*, %struct.list_head** %next21, align 8, !dbg !11906
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !11906
  store i8* %32, i8** %__mptr19, align 8, !dbg !11906
  br label %do.body22, !dbg !11906

do.body22:                                        ; preds = %for.inc
  br label %do.end23, !dbg !11907

do.end23:                                         ; preds = %do.body22
  %33 = load i8*, i8** %__mptr19, align 8, !dbg !11906
  %add.ptr25 = getelementptr i8, i8* %33, i64 0, !dbg !11906
  %34 = bitcast i8* %add.ptr25 to %struct.mlxsw_sp_mid*, !dbg !11906
  store %struct.mlxsw_sp_mid* %34, %struct.mlxsw_sp_mid** %tmp24, align 8, !dbg !11907
  %35 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp24, align 8, !dbg !11906
  store %struct.mlxsw_sp_mid* %35, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !11874
  br label %for.cond, !dbg !11874, !llvm.loop !11909

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_vlan_fid_leave(%struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan) #0 !dbg !11912 {
entry:
  %mlxsw_sp_port_vlan.addr = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %local_port = alloca i8, align 1
  %vid = alloca i16, align 2
  store %struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, metadata !11913, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !11915, metadata !DIExpression()), !dbg !11916
  %0 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11917
  %mlxsw_sp_port1 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %0, i32 0, i32 1, !dbg !11918
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port1, align 8, !dbg !11918
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11916
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !11919, metadata !DIExpression()), !dbg !11920
  %2 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11921
  %fid2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %2, i32 0, i32 2, !dbg !11922
  %3 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid2, align 8, !dbg !11922
  store %struct.mlxsw_sp_fid* %3, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11920
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !11923, metadata !DIExpression()), !dbg !11924
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11925
  %local_port3 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 3, !dbg !11926
  %5 = load i8, i8* %local_port3, align 8, !dbg !11926
  store i8 %5, i8* %local_port, align 1, !dbg !11924
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !11927, metadata !DIExpression()), !dbg !11928
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11929
  %vid4 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 3, !dbg !11930
  %7 = load i16, i16* %vid4, align 8, !dbg !11930
  store i16 %7, i16* %vid, align 2, !dbg !11928
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !11931
  %fid5 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 2, !dbg !11932
  store %struct.mlxsw_sp_fid* null, %struct.mlxsw_sp_fid** %fid5, align 8, !dbg !11933
  %9 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11934
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !11935
  %11 = load i16, i16* %vid, align 2, !dbg !11936
  call void @mlxsw_sp_fid_port_vid_unmap(%struct.mlxsw_sp_fid* %9, %struct.mlxsw_sp_port* %10, i16 zeroext %11) #8, !dbg !11937
  %12 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11938
  %13 = load i8, i8* %local_port, align 1, !dbg !11939
  %call = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %12, i32 1, i8 zeroext %13, i1 zeroext false) #8, !dbg !11940
  %14 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11941
  %15 = load i8, i8* %local_port, align 1, !dbg !11942
  %call6 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %14, i32 2, i8 zeroext %15, i1 zeroext false) #8, !dbg !11943
  %16 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11944
  %17 = load i8, i8* %local_port, align 1, !dbg !11945
  %call7 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %16, i32 0, i8 zeroext %17, i1 zeroext false) #8, !dbg !11946
  %18 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !11947
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %18) #8, !dbg !11948
  ret void, !dbg !11949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_port_put(%struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge_port* %bridge_port) #0 !dbg !11950 {
entry:
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !11953, metadata !DIExpression()), !dbg !11954
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !11955, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !11957, metadata !DIExpression()), !dbg !11958
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11959
  %ref_count = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 4, !dbg !11961
  %1 = load i32, i32* %ref_count, align 8, !dbg !11962
  %dec = add i32 %1, -1, !dbg !11962
  store i32 %dec, i32* %ref_count, align 8, !dbg !11962
  %cmp = icmp ne i32 %dec, 0, !dbg !11963
  br i1 %cmp, label %if.then, label %if.end, !dbg !11964

if.then:                                          ; preds = %entry
  br label %return, !dbg !11965

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11966
  %bridge_device1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %2, i32 0, i32 1, !dbg !11967
  %3 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device1, align 8, !dbg !11967
  store %struct.mlxsw_sp_bridge_device* %3, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11968
  %4 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !11969
  call void @mlxsw_sp_bridge_port_destroy(%struct.mlxsw_sp_bridge_port* %4) #8, !dbg !11970
  %5 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !11971
  %6 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !11972
  call void @mlxsw_sp_bridge_device_put(%struct.mlxsw_sp_bridge* %5, %struct.mlxsw_sp_bridge_device* %6) #8, !dbg !11973
  br label %return, !dbg !11974

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_rif_fdb_op(%struct.mlxsw_sp* %mlxsw_sp, i8* %mac, i16 zeroext %fid, i1 zeroext %adding) #0 !dbg !11975 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mac.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %adding.addr = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !11978, metadata !DIExpression()), !dbg !11979
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !11980, metadata !DIExpression()), !dbg !11981
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !11982, metadata !DIExpression()), !dbg !11983
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !11986
  %1 = load i8*, i8** %mac.addr, align 8, !dbg !11987
  %2 = load i16, i16* %fid.addr, align 2, !dbg !11988
  %3 = load i8, i8* %adding.addr, align 1, !dbg !11989
  %tobool = trunc i8 %3 to i1, !dbg !11989
  %call = call i32 @__mlxsw_sp_port_fdb_uc_op(%struct.mlxsw_sp* %0, i8 zeroext 0, i8* %1, i16 zeroext %2, i1 zeroext %tobool, i32 3, i32 0) #8, !dbg !11990
  ret i32 %call, !dbg !11991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_sp_port_fdb_uc_op(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %local_port, i8* %mac, i16 zeroext %fid, i1 zeroext %adding, i32 %action, i32 %policy) #0 !dbg !11992 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !11999
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !12008
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !12010
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !12012
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !12017
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !12023
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !12029
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !12035
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !12037
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !12039
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !12041
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !12043
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !12045
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !12047
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !12049
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %local_port.addr = alloca i8, align 1
  %mac.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %adding.addr = alloca i8, align 1
  %action.addr = alloca i32, align 4
  %policy.addr = alloca i32, align 4
  %sfd_pl = alloca i8*, align 8
  %num_rec = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12050, metadata !DIExpression()), !dbg !12051
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !12052, metadata !DIExpression()), !dbg !12053
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !12054, metadata !DIExpression()), !dbg !12055
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !12056, metadata !DIExpression()), !dbg !12057
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !12058, metadata !DIExpression()), !dbg !12059
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !12060, metadata !DIExpression()), !dbg !12061
  store i32 %policy, i32* %policy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %policy.addr, metadata !12062, metadata !DIExpression()), !dbg !12063
  call void @llvm.dbg.declare(metadata i8** %sfd_pl, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.declare(metadata i8* %num_rec, metadata !12066, metadata !DIExpression()), !dbg !12067
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12068, metadata !DIExpression()), !dbg !12069
  store i64 1040, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !12070
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #9, !dbg !12071
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !12072

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !12073
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !12074
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12075

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !12076
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !12077
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !12078
  %call.i.i = call i32 @get_order(i64 %5) #10, !dbg !12079
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12043
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !12080
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12081
  %8 = load i32, i32* %order.i.i, align 4, !dbg !12082
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12083
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12084
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12085
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #11, !dbg !12086
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12086
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12086
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12086
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !12086
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12087
  br label %kmalloc.exit, !dbg !12087

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !12088
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12089
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !12089
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12091

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12092
  br label %kmalloc_index.exit.i, !dbg !12092

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12093
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !12095
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12096

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12097
  br label %kmalloc_index.exit.i, !dbg !12097

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12098
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !12100
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12101

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12102
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !12103
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12104

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12105
  br label %kmalloc_index.exit.i, !dbg !12105

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12106
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !12108
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12109

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12110
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !12111
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12112

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12113
  br label %kmalloc_index.exit.i, !dbg !12113

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12114
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !12116
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12117

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12118
  br label %kmalloc_index.exit.i, !dbg !12118

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12119
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !12121
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12122

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12123
  br label %kmalloc_index.exit.i, !dbg !12123

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12124
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !12126
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12127

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12128
  br label %kmalloc_index.exit.i, !dbg !12128

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12129
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !12131
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12132

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12133
  br label %kmalloc_index.exit.i, !dbg !12133

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12134
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !12136
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12137

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12138
  br label %kmalloc_index.exit.i, !dbg !12138

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12139
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !12141
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12142

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12143
  br label %kmalloc_index.exit.i, !dbg !12143

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12144
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !12146
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12147

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12148
  br label %kmalloc_index.exit.i, !dbg !12148

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12149
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !12151
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12152

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12153
  br label %kmalloc_index.exit.i, !dbg !12153

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12154
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !12156
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12157

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12158
  br label %kmalloc_index.exit.i, !dbg !12158

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12159
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !12161
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12162

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12163
  br label %kmalloc_index.exit.i, !dbg !12163

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12164
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !12166
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12167

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12168
  br label %kmalloc_index.exit.i, !dbg !12168

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12169
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !12171
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12172

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12173
  br label %kmalloc_index.exit.i, !dbg !12173

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12174
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !12176
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12177

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12178
  br label %kmalloc_index.exit.i, !dbg !12178

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12179
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !12181
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12182

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12183
  br label %kmalloc_index.exit.i, !dbg !12183

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12184
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !12186
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12187

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12188
  br label %kmalloc_index.exit.i, !dbg !12188

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12189
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !12191
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12192

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12193
  br label %kmalloc_index.exit.i, !dbg !12193

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12194
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !12196
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12197

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12198
  br label %kmalloc_index.exit.i, !dbg !12198

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12199
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !12201
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12202

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12203
  br label %kmalloc_index.exit.i, !dbg !12203

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12204
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !12206
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12207

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12208
  br label %kmalloc_index.exit.i, !dbg !12208

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12209
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !12211
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12212

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12213
  br label %kmalloc_index.exit.i, !dbg !12213

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12214
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !12216
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12217

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12218
  br label %kmalloc_index.exit.i, !dbg !12218

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12219
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !12221
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12222

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12223
  br label %kmalloc_index.exit.i, !dbg !12223

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12224
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !12226
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12227

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12228
  br label %kmalloc_index.exit.i, !dbg !12228

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12229
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !12231
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12232

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12233
  br label %kmalloc_index.exit.i, !dbg !12233

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !12234, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !12238, !srcloc !12241
  unreachable, !dbg !12242

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !12243
  store i32 %43, i32* %index.i, align 4, !dbg !12244
  %44 = load i32, i32* %index.i, align 4, !dbg !12245
  %tobool.i = icmp ne i32 %44, 0, !dbg !12245
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12247

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12248
  br label %kmalloc.exit, !dbg !12248

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !12249
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12250
  %and.i.i = and i32 %46, 17, !dbg !12250
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12250
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12250
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12250
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12250
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12252

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12253
  br label %kmalloc_type.exit.i, !dbg !12253

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12254
  %and2.i.i = and i32 %47, 1, !dbg !12255
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12254
  %48 = zext i1 %tobool3.i.i to i64, !dbg !12254
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12254
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12256
  br label %kmalloc_type.exit.i, !dbg !12256

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !12257
  %idxprom.i = zext i32 %49 to i64, !dbg !12258
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12258
  %50 = load i32, i32* %index.i, align 4, !dbg !12259
  %idxprom6.i = zext i32 %50 to i64, !dbg !12258
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12258
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12258
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !12260
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !12261
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12262
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12263
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #11, !dbg !12264
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12264
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12264
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12264
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !12264
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12012
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12265
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !12266
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12267
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12268
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #11, !dbg !12269
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12270
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !12271
  store i8* %60, i8** %retval.i, align 8, !dbg !12272
  br label %kmalloc.exit, !dbg !12272

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !12273
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !12274
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #11, !dbg !12275
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12275
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12275
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12275
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !12275
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12276
  br label %kmalloc.exit, !dbg !12276

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !12277
  store i8* %63, i8** %sfd_pl, align 8, !dbg !12278
  %64 = load i8*, i8** %sfd_pl, align 8, !dbg !12279
  %tobool = icmp ne i8* %64, null, !dbg !12279
  br i1 %tobool, label %if.end, label %if.then, !dbg !12281

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !12282
  br label %return, !dbg !12282

if.end:                                           ; preds = %kmalloc.exit
  %65 = load i8*, i8** %sfd_pl, align 8, !dbg !12283
  %66 = load i8, i8* %adding.addr, align 1, !dbg !12284
  %tobool1 = trunc i8 %66 to i1, !dbg !12284
  %call2 = call i32 @mlxsw_sp_sfd_op(i1 zeroext %tobool1) #8, !dbg !12285
  call void @mlxsw_reg_sfd_pack(i8* %65, i32 %call2, i32 0) #8, !dbg !12286
  %67 = load i8*, i8** %sfd_pl, align 8, !dbg !12287
  %68 = load i32, i32* %policy.addr, align 4, !dbg !12288
  %69 = load i8*, i8** %mac.addr, align 8, !dbg !12289
  %70 = load i16, i16* %fid.addr, align 2, !dbg !12290
  %71 = load i32, i32* %action.addr, align 4, !dbg !12291
  %72 = load i8, i8* %local_port.addr, align 1, !dbg !12292
  call void @mlxsw_reg_sfd_uc_pack(i8* %67, i32 0, i32 %68, i8* %69, i16 zeroext %70, i32 %71, i8 zeroext %72) #8, !dbg !12293
  %73 = load i8*, i8** %sfd_pl, align 8, !dbg !12294
  %call3 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %73) #8, !dbg !12295
  %conv = trunc i32 %call3 to i8, !dbg !12295
  store i8 %conv, i8* %num_rec, align 1, !dbg !12296
  %74 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12297
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %74, i32 0, i32 1, !dbg !12298
  %75 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !12298
  %76 = load i8*, i8** %sfd_pl, align 8, !dbg !12299
  %call4 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %75, %struct.mlxsw_reg_info* @mlxsw_reg_sfd, i8* %76) #8, !dbg !12300
  store i32 %call4, i32* %err, align 4, !dbg !12301
  %77 = load i32, i32* %err, align 4, !dbg !12302
  %tobool5 = icmp ne i32 %77, 0, !dbg !12302
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !12304

if.then6:                                         ; preds = %if.end
  br label %out, !dbg !12305

if.end7:                                          ; preds = %if.end
  %78 = load i8, i8* %num_rec, align 1, !dbg !12306
  %conv8 = zext i8 %78 to i32, !dbg !12306
  %79 = load i8*, i8** %sfd_pl, align 8, !dbg !12308
  %call9 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %79) #8, !dbg !12309
  %cmp = icmp ne i32 %conv8, %call9, !dbg !12310
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !12311

if.then11:                                        ; preds = %if.end7
  store i32 -16, i32* %err, align 4, !dbg !12312
  br label %if.end12, !dbg !12313

if.end12:                                         ; preds = %if.then11, %if.end7
  br label %out, !dbg !12314

out:                                              ; preds = %if.end12, %if.then6
  call void @llvm.dbg.label(metadata !12315), !dbg !12316
  %80 = load i8*, i8** %sfd_pl, align 8, !dbg !12317
  call void @kfree(i8* %80) #8, !dbg !12318
  %81 = load i32, i32* %err, align 4, !dbg !12319
  store i32 %81, i32* %retval, align 4, !dbg !12320
  br label %return, !dbg !12320

return:                                           ; preds = %out, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !12321
  ret i32 %82, !dbg !12321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_bridge_join(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.net_device* %brport_dev, %struct.net_device* %br_dev, %struct.netlink_ext_ack* %extack) #0 !dbg !12322 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %brport_dev.addr = alloca %struct.net_device*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  store %struct.net_device* %brport_dev, %struct.net_device** %brport_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %brport_dev.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !12329, metadata !DIExpression()), !dbg !12330
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !12331, metadata !DIExpression()), !dbg !12332
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !12333, metadata !DIExpression()), !dbg !12334
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !12335
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !12336
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !12336
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !12334
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !12337, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !12339, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12341, metadata !DIExpression()), !dbg !12342
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !12343
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 8, !dbg !12344
  %3 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12344
  %4 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !12345
  %5 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !12346
  %call = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_get(%struct.mlxsw_sp_bridge* %3, %struct.net_device* %4, %struct.netlink_ext_ack* %5) #8, !dbg !12347
  store %struct.mlxsw_sp_bridge_port* %call, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12348
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12349
  %7 = bitcast %struct.mlxsw_sp_bridge_port* %6 to i8*, !dbg !12349
  %call2 = call zeroext i1 @IS_ERR(i8* %7) #8, !dbg !12351
  br i1 %call2, label %if.then, label %if.end, !dbg !12352

if.then:                                          ; preds = %entry
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12353
  %9 = bitcast %struct.mlxsw_sp_bridge_port* %8 to i8*, !dbg !12353
  %call3 = call i64 @PTR_ERR(i8* %9) #8, !dbg !12354
  %conv = trunc i64 %call3 to i32, !dbg !12354
  store i32 %conv, i32* %retval, align 4, !dbg !12355
  br label %return, !dbg !12355

if.end:                                           ; preds = %entry
  %10 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12356
  %bridge_device4 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %10, i32 0, i32 1, !dbg !12357
  %11 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device4, align 8, !dbg !12357
  store %struct.mlxsw_sp_bridge_device* %11, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12358
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12359
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %12, i32 0, i32 5, !dbg !12360
  %13 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !12360
  %port_join = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %13, i32 0, i32 0, !dbg !12361
  %14 = load i32 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*, %struct.netlink_ext_ack*)** %port_join, align 8, !dbg !12361
  %15 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12362
  %16 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12363
  %17 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !12364
  %18 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !12365
  %call5 = call i32 %14(%struct.mlxsw_sp_bridge_device* %15, %struct.mlxsw_sp_bridge_port* %16, %struct.mlxsw_sp_port* %17, %struct.netlink_ext_ack* %18) #8, !dbg !12359
  store i32 %call5, i32* %err, align 4, !dbg !12366
  %19 = load i32, i32* %err, align 4, !dbg !12367
  %tobool = icmp ne i32 %19, 0, !dbg !12367
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !12369

if.then6:                                         ; preds = %if.end
  br label %err_port_join, !dbg !12370

if.end7:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12371
  br label %return, !dbg !12371

err_port_join:                                    ; preds = %if.then6
  call void @llvm.dbg.label(metadata !12372), !dbg !12373
  %20 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !12374
  %bridge8 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %20, i32 0, i32 8, !dbg !12375
  %21 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge8, align 8, !dbg !12375
  %22 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12376
  call void @mlxsw_sp_bridge_port_put(%struct.mlxsw_sp_bridge* %21, %struct.mlxsw_sp_bridge_port* %22) #8, !dbg !12377
  %23 = load i32, i32* %err, align 4, !dbg !12378
  store i32 %23, i32* %retval, align 4, !dbg !12379
  br label %return, !dbg !12379

return:                                           ; preds = %err_port_join, %if.end7, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !12380
  ret i32 %24, !dbg !12380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_get(%struct.mlxsw_sp_bridge* %bridge, %struct.net_device* %brport_dev, %struct.netlink_ext_ack* %extack) #0 !dbg !12381 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %brport_dev.addr = alloca %struct.net_device*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !12384, metadata !DIExpression()), !dbg !12385
  store %struct.net_device* %brport_dev, %struct.net_device** %brport_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %brport_dev.addr, metadata !12386, metadata !DIExpression()), !dbg !12387
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !12388, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !12390, metadata !DIExpression()), !dbg !12391
  %0 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !12392
  %call = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %0) #8, !dbg !12393
  store %struct.net_device* %call, %struct.net_device** %br_dev, align 8, !dbg !12391
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !12394, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !12396, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12398, metadata !DIExpression()), !dbg !12399
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !12400
  %2 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !12401
  %call1 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %1, %struct.net_device* %2) #8, !dbg !12402
  store %struct.mlxsw_sp_bridge_port* %call1, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12403
  %3 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12404
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %3, null, !dbg !12404
  br i1 %tobool, label %if.then, label %if.end, !dbg !12406

if.then:                                          ; preds = %entry
  %4 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12407
  %ref_count = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %4, i32 0, i32 4, !dbg !12409
  %5 = load i32, i32* %ref_count, align 8, !dbg !12410
  %inc = add i32 %5, 1, !dbg !12410
  store i32 %inc, i32* %ref_count, align 8, !dbg !12410
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12411
  store %struct.mlxsw_sp_bridge_port* %6, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !12412
  br label %return, !dbg !12412

if.end:                                           ; preds = %entry
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !12413
  %8 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !12414
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !12415
  %call2 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_get(%struct.mlxsw_sp_bridge* %7, %struct.net_device* %8, %struct.netlink_ext_ack* %9) #8, !dbg !12416
  store %struct.mlxsw_sp_bridge_device* %call2, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12417
  %10 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12418
  %11 = bitcast %struct.mlxsw_sp_bridge_device* %10 to i8*, !dbg !12418
  %call3 = call zeroext i1 @IS_ERR(i8* %11) #8, !dbg !12420
  br i1 %call3, label %if.then4, label %if.end6, !dbg !12421

if.then4:                                         ; preds = %if.end
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12422
  %13 = bitcast %struct.mlxsw_sp_bridge_device* %12 to i8*, !dbg !12422
  %call5 = call i8* @ERR_CAST(i8* %13) #8, !dbg !12423
  %14 = bitcast i8* %call5 to %struct.mlxsw_sp_bridge_port*, !dbg !12423
  store %struct.mlxsw_sp_bridge_port* %14, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !12424
  br label %return, !dbg !12424

if.end6:                                          ; preds = %if.end
  %15 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12425
  %16 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !12426
  %call7 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_create(%struct.mlxsw_sp_bridge_device* %15, %struct.net_device* %16) #8, !dbg !12427
  store %struct.mlxsw_sp_bridge_port* %call7, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12428
  %17 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12429
  %tobool8 = icmp ne %struct.mlxsw_sp_bridge_port* %17, null, !dbg !12429
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !12431

if.then9:                                         ; preds = %if.end6
  store i32 -12, i32* %err, align 4, !dbg !12432
  br label %err_bridge_port_create, !dbg !12434

if.end10:                                         ; preds = %if.end6
  %18 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12435
  store %struct.mlxsw_sp_bridge_port* %18, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !12436
  br label %return, !dbg !12436

err_bridge_port_create:                           ; preds = %if.then9
  call void @llvm.dbg.label(metadata !12437), !dbg !12438
  %19 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !12439
  %20 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12440
  call void @mlxsw_sp_bridge_device_put(%struct.mlxsw_sp_bridge* %19, %struct.mlxsw_sp_bridge_device* %20) #8, !dbg !12441
  %21 = load i32, i32* %err, align 4, !dbg !12442
  %conv = sext i32 %21 to i64, !dbg !12442
  %call11 = call i8* @ERR_PTR(i64 %conv) #8, !dbg !12443
  %22 = bitcast i8* %call11 to %struct.mlxsw_sp_bridge_port*, !dbg !12443
  store %struct.mlxsw_sp_bridge_port* %22, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !12444
  br label %return, !dbg !12444

return:                                           ; preds = %err_bridge_port_create, %if.end10, %if.then4, %if.then
  %23 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !12445
  ret %struct.mlxsw_sp_bridge_port* %23, !dbg !12445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !12446 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12450, metadata !DIExpression()), !dbg !12451
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12452
  %1 = ptrtoint i8* %0 to i64, !dbg !12452
  %2 = inttoptr i64 %1 to i8*, !dbg !12452
  %3 = ptrtoint i8* %2 to i64, !dbg !12452
  %cmp = icmp uge i64 %3, -4095, !dbg !12452
  %lnot = xor i1 %cmp, true, !dbg !12452
  %lnot1 = xor i1 %lnot, true, !dbg !12452
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12452
  %conv = sext i32 %lnot.ext to i64, !dbg !12452
  %tobool = icmp ne i64 %conv, 0, !dbg !12452
  ret i1 %tobool, !dbg !12453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !12454 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12457, metadata !DIExpression()), !dbg !12458
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12459
  %1 = ptrtoint i8* %0 to i64, !dbg !12460
  ret i64 %1, !dbg !12461
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_port_bridge_leave(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.net_device* %brport_dev, %struct.net_device* %br_dev) #0 !dbg !12462 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %brport_dev.addr = alloca %struct.net_device*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !12465, metadata !DIExpression()), !dbg !12466
  store %struct.net_device* %brport_dev, %struct.net_device** %brport_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %brport_dev.addr, metadata !12467, metadata !DIExpression()), !dbg !12468
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !12469, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !12471, metadata !DIExpression()), !dbg !12472
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !12473
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !12474
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !12474
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !12472
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !12475, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !12477, metadata !DIExpression()), !dbg !12478
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !12479
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 8, !dbg !12480
  %3 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12480
  %4 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !12481
  %call = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %3, %struct.net_device* %4) #8, !dbg !12482
  store %struct.mlxsw_sp_bridge_device* %call, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12483
  %5 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12484
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %5, null, !dbg !12484
  br i1 %tobool, label %if.end, label %if.then, !dbg !12486

if.then:                                          ; preds = %entry
  br label %return, !dbg !12487

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12488
  %7 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !12489
  %call2 = call %struct.mlxsw_sp_bridge_port* @__mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge_device* %6, %struct.net_device* %7) #8, !dbg !12490
  store %struct.mlxsw_sp_bridge_port* %call2, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12491
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12492
  %tobool3 = icmp ne %struct.mlxsw_sp_bridge_port* %8, null, !dbg !12492
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !12494

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !12495

if.end5:                                          ; preds = %if.end
  %9 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12496
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %9, i32 0, i32 5, !dbg !12497
  %10 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !12497
  %port_leave = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %10, i32 0, i32 1, !dbg !12498
  %11 = load void (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*)*, void (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_port*)** %port_leave, align 8, !dbg !12498
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12499
  %13 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12500
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !12501
  call void %11(%struct.mlxsw_sp_bridge_device* %12, %struct.mlxsw_sp_bridge_port* %13, %struct.mlxsw_sp_port* %14) #8, !dbg !12496
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !12502
  %bridge6 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 8, !dbg !12503
  %16 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge6, align 8, !dbg !12503
  %17 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !12504
  call void @mlxsw_sp_bridge_port_put(%struct.mlxsw_sp_bridge* %16, %struct.mlxsw_sp_bridge_port* %17) #8, !dbg !12505
  br label %return, !dbg !12506

return:                                           ; preds = %if.end5, %if.then4, %if.then
  ret void, !dbg !12506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_bridge_vxlan_join(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %br_dev, %struct.net_device* %vxlan_dev, i16 zeroext %vid, %struct.netlink_ext_ack* %extack) #0 !dbg !12507 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12510, metadata !DIExpression()), !dbg !12511
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !12512, metadata !DIExpression()), !dbg !12513
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !12514, metadata !DIExpression()), !dbg !12515
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !12516, metadata !DIExpression()), !dbg !12517
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !12518, metadata !DIExpression()), !dbg !12519
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !12520, metadata !DIExpression()), !dbg !12521
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12522
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 8, !dbg !12523
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12523
  %2 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !12524
  %call = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %1, %struct.net_device* %2) #8, !dbg !12525
  store %struct.mlxsw_sp_bridge_device* %call, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12526
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12527, metadata !DIExpression()), !dbg !12530
  %3 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12530
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %3, null, !dbg !12530
  %lnot = xor i1 %tobool, true, !dbg !12530
  %lnot1 = xor i1 %lnot, true, !dbg !12530
  %lnot2 = xor i1 %lnot1, true, !dbg !12530
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12530
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12530
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !12531
  %tobool3 = icmp ne i32 %4, 0, !dbg !12531
  %lnot4 = xor i1 %tobool3, true, !dbg !12531
  %lnot6 = xor i1 %lnot4, true, !dbg !12531
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !12531
  %conv = sext i32 %lnot.ext7 to i64, !dbg !12531
  %tobool8 = icmp ne i64 %conv, 0, !dbg !12531
  br i1 %tobool8, label %if.then, label %if.end, !dbg !12530

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12531

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !12533

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !12535

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !12533

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 2305, i32 2305, i64 12) #9, !dbg !12537, !srcloc !12539
  br label %do.end11, !dbg !12537

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 709) #9, !dbg !12540, !srcloc !12542
  br label %do.body12, !dbg !12533

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !12543

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !12533

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !12533

if.end:                                           ; preds = %do.end14, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !12530
  %tobool15 = icmp ne i32 %5, 0, !dbg !12530
  %lnot16 = xor i1 %tobool15, true, !dbg !12530
  %lnot18 = xor i1 %lnot16, true, !dbg !12530
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !12530
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !12530
  store i64 %conv20, i64* %tmp, align 8, !dbg !12531
  %6 = load i64, i64* %tmp, align 8, !dbg !12530
  %tobool21 = icmp ne i64 %6, 0, !dbg !12545
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !12546

if.then22:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12547
  br label %return, !dbg !12547

if.end23:                                         ; preds = %if.end
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12548
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 5, !dbg !12549
  %8 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !12549
  %vxlan_join = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %8, i32 0, i32 2, !dbg !12550
  %9 = load i32 (%struct.mlxsw_sp_bridge_device*, %struct.net_device*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_sp_bridge_device*, %struct.net_device*, i16, %struct.netlink_ext_ack*)** %vxlan_join, align 8, !dbg !12550
  %10 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !12551
  %11 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !12552
  %12 = load i16, i16* %vid.addr, align 2, !dbg !12553
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !12554
  %call24 = call i32 %9(%struct.mlxsw_sp_bridge_device* %10, %struct.net_device* %11, i16 zeroext %12, %struct.netlink_ext_ack* %13) #8, !dbg !12548
  store i32 %call24, i32* %retval, align 4, !dbg !12555
  br label %return, !dbg !12555

return:                                           ; preds = %if.end23, %if.then22
  %14 = load i32, i32* %retval, align 4, !dbg !12556
  ret i32 %14, !dbg !12556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %vxlan_dev) #0 !dbg !12557 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %vxlan = alloca %struct.vxlan_dev*, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12560, metadata !DIExpression()), !dbg !12561
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !12562, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !12564, metadata !DIExpression()), !dbg !12643
  %0 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !12644
  %call = call i8* @netdev_priv(%struct.net_device* %0) #8, !dbg !12645
  %1 = bitcast i8* %call to %struct.vxlan_dev*, !dbg !12645
  store %struct.vxlan_dev* %1, %struct.vxlan_dev** %vxlan, align 8, !dbg !12643
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !12646, metadata !DIExpression()), !dbg !12647
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12648
  %3 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !12649
  %cfg = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %3, i32 0, i32 12, !dbg !12650
  %vni = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %cfg, i32 0, i32 2, !dbg !12651
  %4 = load i32, i32* %vni, align 8, !dbg !12651
  %call1 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_vni(%struct.mlxsw_sp* %2, i32 %4) #8, !dbg !12652
  store %struct.mlxsw_sp_fid* %call1, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !12653
  %5 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !12654
  %tobool = icmp ne %struct.mlxsw_sp_fid* %5, null, !dbg !12654
  br i1 %tobool, label %if.end, label %if.then, !dbg !12656

if.then:                                          ; preds = %entry
  br label %return, !dbg !12657

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12658
  %7 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !12659
  call void @mlxsw_sp_nve_fid_disable(%struct.mlxsw_sp* %6, %struct.mlxsw_sp_fid* %7) #8, !dbg !12660
  %8 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !12661
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %8) #8, !dbg !12662
  %9 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !12663
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %9) #8, !dbg !12664
  br label %return, !dbg !12665

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #0 !dbg !12666 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12669, metadata !DIExpression()), !dbg !12670
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12671
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !12672
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !12673
  ret i8* %add.ptr, !dbg !12674
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_vni(%struct.mlxsw_sp*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_nve_fid_disable(%struct.mlxsw_sp*, %struct.mlxsw_sp_fid*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_switchdev_event(%struct.notifier_block* %unused, i64 %event, i8* %ptr) #0 !dbg !12675 {
entry:
  %retval = alloca i32, align 4
  %unused.addr = alloca %struct.notifier_block*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %switchdev_work = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %fdb_info = alloca %struct.switchdev_notifier_fdb_info*, align 8
  %info = alloca %struct.switchdev_notifier_info*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchdev_notifier_fdb_info*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral41 = alloca %struct.atomic64_t, align 8
  store %struct.notifier_block* %unused, %struct.notifier_block** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %unused.addr, metadata !12676, metadata !DIExpression()), !dbg !12677
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !12678, metadata !DIExpression()), !dbg !12679
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12680, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12682, metadata !DIExpression()), !dbg !12683
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12684
  %1 = bitcast i8* %0 to %struct.switchdev_notifier_info*, !dbg !12684
  %call = call %struct.net_device* @switchdev_notifier_info_to_dev(%struct.switchdev_notifier_info* %1) #8, !dbg !12685
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !12683
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, metadata !12686, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_fdb_info** %fdb_info, metadata !12688, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_info** %info, metadata !12690, metadata !DIExpression()), !dbg !12691
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12692
  %3 = bitcast i8* %2 to %struct.switchdev_notifier_info*, !dbg !12692
  store %struct.switchdev_notifier_info* %3, %struct.switchdev_notifier_info** %info, align 8, !dbg !12691
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !12693, metadata !DIExpression()), !dbg !12694
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12695, metadata !DIExpression()), !dbg !12696
  %4 = load i64, i64* %event.addr, align 8, !dbg !12697
  %cmp = icmp eq i64 %4, 9, !dbg !12699
  br i1 %cmp, label %if.then, label %if.end, !dbg !12700

if.then:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12701
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !12703
  %7 = bitcast i8* %6 to %struct.switchdev_notifier_port_attr_info*, !dbg !12703
  %call1 = call i32 @switchdev_handle_port_attr_set(%struct.net_device* %5, %struct.switchdev_notifier_port_attr_info* %7, i1 (%struct.net_device*)* @mlxsw_sp_port_dev_check, i32 (%struct.net_device*, %struct.switchdev_attr*, %struct.switchdev_trans*)* @mlxsw_sp_port_attr_set) #8, !dbg !12704
  store i32 %call1, i32* %err, align 4, !dbg !12705
  %8 = load i32, i32* %err, align 4, !dbg !12706
  %call2 = call i32 @notifier_from_errno(i32 %8) #8, !dbg !12707
  store i32 %call2, i32* %retval, align 4, !dbg !12708
  br label %return, !dbg !12708

if.end:                                           ; preds = %entry
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12709
  %call3 = call %struct.net_device* @netdev_master_upper_dev_get_rcu(%struct.net_device* %9) #8, !dbg !12710
  store %struct.net_device* %call3, %struct.net_device** %br_dev, align 8, !dbg !12711
  %10 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !12712
  %tobool = icmp ne %struct.net_device* %10, null, !dbg !12712
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !12714

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12715
  br label %return, !dbg !12715

if.end5:                                          ; preds = %if.end
  %11 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !12716
  %call6 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %11) #8, !dbg !12718
  br i1 %call6, label %if.end8, label %if.then7, !dbg !12719

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !12720
  br label %return, !dbg !12720

if.end8:                                          ; preds = %if.end5
  %12 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !12721
  %call9 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find_rcu(%struct.net_device* %12) #8, !dbg !12723
  %tobool10 = icmp ne %struct.mlxsw_sp_port* %call9, null, !dbg !12723
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !12724

if.then11:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !12725
  br label %return, !dbg !12725

if.end12:                                         ; preds = %if.end8
  %call13 = call i8* @kzalloc(i64 120, i32 2592) #8, !dbg !12726
  %13 = bitcast i8* %call13 to %struct.mlxsw_sp_switchdev_event_work*, !dbg !12726
  store %struct.mlxsw_sp_switchdev_event_work* %13, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12727
  %14 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12728
  %tobool14 = icmp ne %struct.mlxsw_sp_switchdev_event_work* %14, null, !dbg !12728
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !12730

if.then15:                                        ; preds = %if.end12
  store i32 32770, i32* %retval, align 4, !dbg !12731
  br label %return, !dbg !12731

if.end16:                                         ; preds = %if.end12
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12732
  %16 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12733
  %dev17 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %16, i32 0, i32 2, !dbg !12734
  store %struct.net_device* %15, %struct.net_device** %dev17, align 8, !dbg !12735
  %17 = load i64, i64* %event.addr, align 8, !dbg !12736
  %18 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12737
  %event18 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %18, i32 0, i32 3, !dbg !12738
  store i64 %17, i64* %event18, align 8, !dbg !12739
  %19 = load i64, i64* %event.addr, align 8, !dbg !12740
  switch i64 %19, label %sw.default [
    i64 3, label %sw.bb
    i64 4, label %sw.bb
    i64 1, label %sw.bb
    i64 2, label %sw.bb
    i64 12, label %sw.bb36
    i64 13, label %sw.bb36
  ], !dbg !12741

sw.bb:                                            ; preds = %if.end16, %if.end16, %if.end16, %if.end16
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12742, metadata !DIExpression()), !dbg !12745
  %20 = load %struct.switchdev_notifier_info*, %struct.switchdev_notifier_info** %info, align 8, !dbg !12745
  %21 = bitcast %struct.switchdev_notifier_info* %20 to i8*, !dbg !12745
  store i8* %21, i8** %__mptr, align 8, !dbg !12745
  br label %do.body, !dbg !12745

do.body:                                          ; preds = %sw.bb
  br label %do.end, !dbg !12746

do.end:                                           ; preds = %do.body
  %22 = load i8*, i8** %__mptr, align 8, !dbg !12745
  %add.ptr = getelementptr i8, i8* %22, i64 0, !dbg !12745
  %23 = bitcast i8* %add.ptr to %struct.switchdev_notifier_fdb_info*, !dbg !12745
  store %struct.switchdev_notifier_fdb_info* %23, %struct.switchdev_notifier_fdb_info** %tmp, align 8, !dbg !12746
  %24 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %tmp, align 8, !dbg !12745
  store %struct.switchdev_notifier_fdb_info* %24, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !12748
  br label %do.body19, !dbg !12749

do.body19:                                        ; preds = %do.end
  %25 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12750
  %work = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %25, i32 0, i32 0, !dbg !12750
  call void @__init_work(%struct.work_struct* %work, i32 0) #8, !dbg !12750
  %26 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12750
  %work20 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %26, i32 0, i32 0, !dbg !12750
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work20, i32 0, i32 0, !dbg !12750
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !12750
  store i64 68719476704, i64* %counter, align 8, !dbg !12750
  %27 = bitcast %struct.atomic64_t* %data to i8*, !dbg !12750
  %28 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !12750
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 8, i1 false), !dbg !12750
  %29 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12750
  %work21 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %29, i32 0, i32 0, !dbg !12750
  %entry22 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work21, i32 0, i32 1, !dbg !12750
  call void @INIT_LIST_HEAD(%struct.list_head* %entry22) #8, !dbg !12750
  %30 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12750
  %work23 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %30, i32 0, i32 0, !dbg !12750
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work23, i32 0, i32 2, !dbg !12750
  store void (%struct.work_struct*)* @mlxsw_sp_switchdev_bridge_fdb_event_work, void (%struct.work_struct*)** %func, align 8, !dbg !12750
  br label %do.end24, !dbg !12750

do.end24:                                         ; preds = %do.body19
  %31 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12752
  %32 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %31, i32 0, i32 1, !dbg !12753
  %fdb_info25 = bitcast %union.anon.185* %32 to %struct.switchdev_notifier_fdb_info*, !dbg !12753
  %33 = bitcast %struct.switchdev_notifier_fdb_info* %fdb_info25 to i8*, !dbg !12754
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !12755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 1 %34, i64 32, i1 false), !dbg !12754
  %call26 = call i8* @kzalloc(i64 6, i32 2592) #8, !dbg !12756
  %35 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12757
  %36 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %35, i32 0, i32 1, !dbg !12758
  %fdb_info27 = bitcast %union.anon.185* %36 to %struct.switchdev_notifier_fdb_info*, !dbg !12758
  %addr = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %fdb_info27, i32 0, i32 1, !dbg !12759
  store i8* %call26, i8** %addr, align 8, !dbg !12760
  %37 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12761
  %38 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %37, i32 0, i32 1, !dbg !12763
  %fdb_info28 = bitcast %union.anon.185* %38 to %struct.switchdev_notifier_fdb_info*, !dbg !12763
  %addr29 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %fdb_info28, i32 0, i32 1, !dbg !12764
  %39 = load i8*, i8** %addr29, align 8, !dbg !12764
  %tobool30 = icmp ne i8* %39, null, !dbg !12761
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !12765

if.then31:                                        ; preds = %do.end24
  br label %err_addr_alloc, !dbg !12766

if.end32:                                         ; preds = %do.end24
  %40 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12767
  %41 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %40, i32 0, i32 1, !dbg !12768
  %fdb_info33 = bitcast %union.anon.185* %41 to %struct.switchdev_notifier_fdb_info*, !dbg !12768
  %addr34 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %fdb_info33, i32 0, i32 1, !dbg !12769
  %42 = load i8*, i8** %addr34, align 8, !dbg !12769
  %43 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !12770
  %addr35 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %43, i32 0, i32 1, !dbg !12771
  %44 = load i8*, i8** %addr35, align 8, !dbg !12771
  call void @ether_addr_copy(i8* %42, i8* %44) #8, !dbg !12772
  %45 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12773
  call void @dev_hold(%struct.net_device* %45) #8, !dbg !12774
  br label %sw.epilog, !dbg !12775

sw.bb36:                                          ; preds = %if.end16, %if.end16
  br label %do.body37, !dbg !12776

do.body37:                                        ; preds = %sw.bb36
  %46 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12777
  %work38 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %46, i32 0, i32 0, !dbg !12777
  call void @__init_work(%struct.work_struct* %work38, i32 0) #8, !dbg !12777
  %47 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12777
  %work39 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %47, i32 0, i32 0, !dbg !12777
  %data40 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work39, i32 0, i32 0, !dbg !12777
  %counter42 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral41, i32 0, i32 0, !dbg !12777
  store i64 68719476704, i64* %counter42, align 8, !dbg !12777
  %48 = bitcast %struct.atomic64_t* %data40 to i8*, !dbg !12777
  %49 = bitcast %struct.atomic64_t* %.compoundliteral41 to i8*, !dbg !12777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 8, i1 false), !dbg !12777
  %50 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12777
  %work43 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %50, i32 0, i32 0, !dbg !12777
  %entry44 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work43, i32 0, i32 1, !dbg !12777
  call void @INIT_LIST_HEAD(%struct.list_head* %entry44) #8, !dbg !12777
  %51 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12777
  %work45 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %51, i32 0, i32 0, !dbg !12777
  %func46 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work45, i32 0, i32 2, !dbg !12777
  store void (%struct.work_struct*)* @mlxsw_sp_switchdev_vxlan_fdb_event_work, void (%struct.work_struct*)** %func46, align 8, !dbg !12777
  br label %do.end47, !dbg !12777

do.end47:                                         ; preds = %do.body37
  %52 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12779
  %53 = load %struct.switchdev_notifier_info*, %struct.switchdev_notifier_info** %info, align 8, !dbg !12780
  %call48 = call i32 @mlxsw_sp_switchdev_vxlan_work_prepare(%struct.mlxsw_sp_switchdev_event_work* %52, %struct.switchdev_notifier_info* %53) #8, !dbg !12781
  store i32 %call48, i32* %err, align 4, !dbg !12782
  %54 = load i32, i32* %err, align 4, !dbg !12783
  %tobool49 = icmp ne i32 %54, 0, !dbg !12783
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !12785

if.then50:                                        ; preds = %do.end47
  br label %err_vxlan_work_prepare, !dbg !12786

if.end51:                                         ; preds = %do.end47
  %55 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12787
  call void @dev_hold(%struct.net_device* %55) #8, !dbg !12788
  br label %sw.epilog, !dbg !12789

sw.default:                                       ; preds = %if.end16
  %56 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12790
  %57 = bitcast %struct.mlxsw_sp_switchdev_event_work* %56 to i8*, !dbg !12790
  call void @kfree(i8* %57) #8, !dbg !12791
  store i32 0, i32* %retval, align 4, !dbg !12792
  br label %return, !dbg !12792

sw.epilog:                                        ; preds = %if.end51, %if.end32
  %58 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12793
  %work52 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %58, i32 0, i32 0, !dbg !12794
  %call53 = call zeroext i1 @mlxsw_core_schedule_work(%struct.work_struct* %work52) #8, !dbg !12795
  store i32 0, i32* %retval, align 4, !dbg !12796
  br label %return, !dbg !12796

err_vxlan_work_prepare:                           ; preds = %if.then50
  call void @llvm.dbg.label(metadata !12797), !dbg !12798
  br label %err_addr_alloc, !dbg !12796

err_addr_alloc:                                   ; preds = %err_vxlan_work_prepare, %if.then31
  call void @llvm.dbg.label(metadata !12799), !dbg !12800
  %59 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !12801
  %60 = bitcast %struct.mlxsw_sp_switchdev_event_work* %59 to i8*, !dbg !12801
  call void @kfree(i8* %60) #8, !dbg !12802
  store i32 32770, i32* %retval, align 4, !dbg !12803
  br label %return, !dbg !12803

return:                                           ; preds = %err_addr_alloc, %sw.epilog, %sw.default, %if.then15, %if.then11, %if.then7, %if.then4, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !12804
  ret i32 %61, !dbg !12804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @mlxsw_sp_bridge_port_stp_state(%struct.mlxsw_sp_bridge_port* %bridge_port) #0 !dbg !12805 {
entry:
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !12808, metadata !DIExpression()), !dbg !12809
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !12810
  %stp_state = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 5, !dbg !12811
  %1 = load i8, i8* %stp_state, align 4, !dbg !12811
  ret i8 %1, !dbg !12812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_switchdev_init(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !12813 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge = alloca %struct.mlxsw_sp_bridge*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12814, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge, metadata !12816, metadata !DIExpression()), !dbg !12817
  %call = call i8* @kzalloc(i64 1024, i32 3264) #8, !dbg !12818
  %0 = bitcast i8* %call to %struct.mlxsw_sp_bridge*, !dbg !12818
  store %struct.mlxsw_sp_bridge* %0, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12819
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12820
  %tobool = icmp ne %struct.mlxsw_sp_bridge* %1, null, !dbg !12820
  br i1 %tobool, label %if.end, label %if.then, !dbg !12822

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12823
  br label %return, !dbg !12823

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12824
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12825
  %bridge1 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 8, !dbg !12826
  store %struct.mlxsw_sp_bridge* %2, %struct.mlxsw_sp_bridge** %bridge1, align 8, !dbg !12827
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12828
  %5 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12829
  %mlxsw_sp2 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %5, i32 0, i32 0, !dbg !12830
  store %struct.mlxsw_sp* %4, %struct.mlxsw_sp** %mlxsw_sp2, align 8, !dbg !12831
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12832
  %bridge3 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 8, !dbg !12833
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge3, align 8, !dbg !12833
  %bridges_list = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %7, i32 0, i32 4, !dbg !12834
  call void @INIT_LIST_HEAD(%struct.list_head* %bridges_list) #8, !dbg !12835
  %8 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12836
  %bridge_8021q_ops = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %8, i32 0, i32 6, !dbg !12837
  store %struct.mlxsw_sp_bridge_ops* @mlxsw_sp_bridge_8021q_ops, %struct.mlxsw_sp_bridge_ops** %bridge_8021q_ops, align 8, !dbg !12838
  %9 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !12839
  %bridge_8021d_ops = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %9, i32 0, i32 7, !dbg !12840
  store %struct.mlxsw_sp_bridge_ops* @mlxsw_sp_bridge_8021d_ops, %struct.mlxsw_sp_bridge_ops** %bridge_8021d_ops, align 8, !dbg !12841
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12842
  %call4 = call i32 @mlxsw_sp_fdb_init(%struct.mlxsw_sp* %10) #8, !dbg !12843
  store i32 %call4, i32* %retval, align 4, !dbg !12844
  br label %return, !dbg !12844

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !12845
  ret i32 %11, !dbg !12845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !12846 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !12847
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !12850
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !12851
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !12852
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !12853
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !12855
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !12857
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !12860
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !12861
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !12862
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !12863
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !12864
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !12865
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !12866
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !12867
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12868, metadata !DIExpression()), !dbg !12869
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12870, metadata !DIExpression()), !dbg !12871
  %0 = load i64, i64* %size.addr, align 8, !dbg !12872
  %1 = load i32, i32* %flags.addr, align 4, !dbg !12873
  %or = or i32 %1, 256, !dbg !12874
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !12875
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !12876
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !12877

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12878
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !12879
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12880

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !12881
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !12882
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12883
  %call.i.i = call i32 @get_order(i64 %7) #10, !dbg !12884
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12864
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12885
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12886
  %10 = load i32, i32* %order.i.i, align 4, !dbg !12887
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12888
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12889
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12890
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !12891
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12891
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12891
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12891
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !12891
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12892
  br label %kmalloc.exit, !dbg !12892

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !12893
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12894
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !12894
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12895

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12896
  br label %kmalloc_index.exit.i, !dbg !12896

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12897
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !12898
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12899

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12900
  br label %kmalloc_index.exit.i, !dbg !12900

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12901
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !12902
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12903

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12904
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !12905
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12906

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12907
  br label %kmalloc_index.exit.i, !dbg !12907

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12908
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !12909
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12910

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12911
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !12912
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12913

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12914
  br label %kmalloc_index.exit.i, !dbg !12914

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12915
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !12916
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12917

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12918
  br label %kmalloc_index.exit.i, !dbg !12918

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12919
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !12920
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12921

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12922
  br label %kmalloc_index.exit.i, !dbg !12922

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12923
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !12924
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12925

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12926
  br label %kmalloc_index.exit.i, !dbg !12926

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12927
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !12928
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12929

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12930
  br label %kmalloc_index.exit.i, !dbg !12930

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12931
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !12932
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12933

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12934
  br label %kmalloc_index.exit.i, !dbg !12934

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12935
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !12936
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12937

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12938
  br label %kmalloc_index.exit.i, !dbg !12938

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12939
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !12940
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12941

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12942
  br label %kmalloc_index.exit.i, !dbg !12942

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12943
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !12944
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12945

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12946
  br label %kmalloc_index.exit.i, !dbg !12946

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12947
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !12948
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12949

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12950
  br label %kmalloc_index.exit.i, !dbg !12950

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12951
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !12952
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12953

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12954
  br label %kmalloc_index.exit.i, !dbg !12954

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12955
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !12956
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12957

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12958
  br label %kmalloc_index.exit.i, !dbg !12958

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12959
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !12960
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12961

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12962
  br label %kmalloc_index.exit.i, !dbg !12962

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12963
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !12964
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12965

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12966
  br label %kmalloc_index.exit.i, !dbg !12966

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12967
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !12968
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12969

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12970
  br label %kmalloc_index.exit.i, !dbg !12970

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12971
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !12972
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12973

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12974
  br label %kmalloc_index.exit.i, !dbg !12974

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12975
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !12976
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12977

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12978
  br label %kmalloc_index.exit.i, !dbg !12978

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12979
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !12980
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12981

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12982
  br label %kmalloc_index.exit.i, !dbg !12982

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12983
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !12984
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12985

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12986
  br label %kmalloc_index.exit.i, !dbg !12986

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12987
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !12988
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12989

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12990
  br label %kmalloc_index.exit.i, !dbg !12990

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12991
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !12992
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12993

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12994
  br label %kmalloc_index.exit.i, !dbg !12994

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12995
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !12996
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12997

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12998
  br label %kmalloc_index.exit.i, !dbg !12998

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12999
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !13000
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13001

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13002
  br label %kmalloc_index.exit.i, !dbg !13002

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13003
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !13004
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13005

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13006
  br label %kmalloc_index.exit.i, !dbg !13006

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13007
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !13008
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13009

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13010
  br label %kmalloc_index.exit.i, !dbg !13010

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !13011, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !13012, !srcloc !12241
  unreachable, !dbg !13013

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !13014
  store i32 %45, i32* %index.i, align 4, !dbg !13015
  %46 = load i32, i32* %index.i, align 4, !dbg !13016
  %tobool.i = icmp ne i32 %46, 0, !dbg !13016
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13017

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13018
  br label %kmalloc.exit, !dbg !13018

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !13019
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13020
  %and.i.i = and i32 %48, 17, !dbg !13020
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13020
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13020
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13020
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13020
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13021

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13022
  br label %kmalloc_type.exit.i, !dbg !13022

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13023
  %and2.i.i = and i32 %49, 1, !dbg !13024
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13023
  %50 = zext i1 %tobool3.i.i to i64, !dbg !13023
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13023
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13025
  br label %kmalloc_type.exit.i, !dbg !13025

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !13026
  %idxprom.i = zext i32 %51 to i64, !dbg !13027
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13027
  %52 = load i32, i32* %index.i, align 4, !dbg !13028
  %idxprom6.i = zext i32 %52 to i64, !dbg !13027
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13027
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13027
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !13029
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !13030
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13031
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13032
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !13033
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13033
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13033
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13033
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !13033
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12852
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13034
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !13035
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13036
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13037
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !13038
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13039
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !13040
  store i8* %62, i8** %retval.i, align 8, !dbg !13041
  br label %kmalloc.exit, !dbg !13041

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !13042
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !13043
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !13044
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13044
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13044
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13044
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !13044
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13045
  br label %kmalloc.exit, !dbg !13045

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !13046
  ret i8* %65, !dbg !13047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !13048 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !13049, metadata !DIExpression()), !dbg !13050
  br label %do.body, !dbg !13051

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13052

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13054

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !13052

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13056
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13056
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13056
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !13056
  br label %do.end3, !dbg !13056

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !13052

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13058
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13059
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !13060
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_fdb_init(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !13063 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge = alloca %struct.mlxsw_sp_bridge*, align 8
  %nb = alloca %struct.notifier_block*, align 8
  %err = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !13064, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge, metadata !13066, metadata !DIExpression()), !dbg !13067
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13068
  %bridge1 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 8, !dbg !13069
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge1, align 8, !dbg !13069
  store %struct.mlxsw_sp_bridge* %1, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13067
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb, metadata !13070, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13072, metadata !DIExpression()), !dbg !13073
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13074
  %call = call i32 @mlxsw_sp_ageing_set(%struct.mlxsw_sp* %2, i32 300) #8, !dbg !13075
  store i32 %call, i32* %err, align 4, !dbg !13076
  %3 = load i32, i32* %err, align 4, !dbg !13077
  %tobool = icmp ne i32 %3, 0, !dbg !13077
  br i1 %tobool, label %if.then, label %if.end, !dbg !13079

if.then:                                          ; preds = %entry
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13080
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 2, !dbg !13080
  %5 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !13080
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %5, i32 0, i32 2, !dbg !13080
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13080
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.81, i64 0, i64 0)) #12, !dbg !13080
  %7 = load i32, i32* %err, align 4, !dbg !13082
  store i32 %7, i32* %retval, align 4, !dbg !13083
  br label %return, !dbg !13083

if.end:                                           ; preds = %entry
  %call2 = call i32 @register_switchdev_notifier(%struct.notifier_block* @mlxsw_sp_switchdev_notifier) #8, !dbg !13084
  store i32 %call2, i32* %err, align 4, !dbg !13085
  %8 = load i32, i32* %err, align 4, !dbg !13086
  %tobool3 = icmp ne i32 %8, 0, !dbg !13086
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !13088

if.then4:                                         ; preds = %if.end
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13089
  %bus_info5 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 2, !dbg !13089
  %10 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info5, align 8, !dbg !13089
  %dev6 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %10, i32 0, i32 2, !dbg !13089
  %11 = load %struct.device*, %struct.device** %dev6, align 8, !dbg !13089
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.82, i64 0, i64 0)) #12, !dbg !13089
  %12 = load i32, i32* %err, align 4, !dbg !13091
  store i32 %12, i32* %retval, align 4, !dbg !13092
  br label %return, !dbg !13092

if.end7:                                          ; preds = %if.end
  store %struct.notifier_block* @mlxsw_sp_switchdev_blocking_notifier, %struct.notifier_block** %nb, align 8, !dbg !13093
  %13 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !13094
  %call8 = call i32 @register_switchdev_blocking_notifier(%struct.notifier_block* %13) #8, !dbg !13095
  store i32 %call8, i32* %err, align 4, !dbg !13096
  %14 = load i32, i32* %err, align 4, !dbg !13097
  %tobool9 = icmp ne i32 %14, 0, !dbg !13097
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !13099

if.then10:                                        ; preds = %if.end7
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13100
  %bus_info11 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 2, !dbg !13100
  %16 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info11, align 8, !dbg !13100
  %dev12 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %16, i32 0, i32 2, !dbg !13100
  %17 = load %struct.device*, %struct.device** %dev12, align 8, !dbg !13100
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.83, i64 0, i64 0)) #12, !dbg !13100
  br label %err_register_switchdev_blocking_notifier, !dbg !13102

if.end13:                                         ; preds = %if.end7
  br label %do.body, !dbg !13103

do.body:                                          ; preds = %if.end13
  br label %do.body14, !dbg !13104

do.body14:                                        ; preds = %do.body
  %18 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13106
  %fdb_notify = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %18, i32 0, i32 1, !dbg !13106
  %dw = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify, i32 0, i32 0, !dbg !13106
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dw, i32 0, i32 0, !dbg !13106
  call void @__init_work(%struct.work_struct* %work, i32 0) #8, !dbg !13106
  %19 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13106
  %fdb_notify15 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %19, i32 0, i32 1, !dbg !13106
  %dw16 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify15, i32 0, i32 0, !dbg !13106
  %work17 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dw16, i32 0, i32 0, !dbg !13106
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work17, i32 0, i32 0, !dbg !13106
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !13106
  store i64 68719476704, i64* %counter, align 8, !dbg !13106
  %20 = bitcast %struct.atomic64_t* %data to i8*, !dbg !13106
  %21 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !13106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false), !dbg !13106
  %22 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13106
  %fdb_notify18 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %22, i32 0, i32 1, !dbg !13106
  %dw19 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify18, i32 0, i32 0, !dbg !13106
  %work20 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dw19, i32 0, i32 0, !dbg !13106
  %entry21 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work20, i32 0, i32 1, !dbg !13106
  call void @INIT_LIST_HEAD(%struct.list_head* %entry21) #8, !dbg !13106
  %23 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13106
  %fdb_notify22 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %23, i32 0, i32 1, !dbg !13106
  %dw23 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify22, i32 0, i32 0, !dbg !13106
  %work24 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dw23, i32 0, i32 0, !dbg !13106
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work24, i32 0, i32 2, !dbg !13106
  store void (%struct.work_struct*)* @mlxsw_sp_fdb_notify_work, void (%struct.work_struct*)** %func, align 8, !dbg !13106
  br label %do.end, !dbg !13106

do.end:                                           ; preds = %do.body14
  %24 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13104
  %fdb_notify25 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %24, i32 0, i32 1, !dbg !13104
  %dw26 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify25, i32 0, i32 0, !dbg !13104
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dw26, i32 0, i32 1, !dbg !13104
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #8, !dbg !13104
  br label %do.end27, !dbg !13104

do.end27:                                         ; preds = %do.end
  %25 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13108
  %fdb_notify28 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %25, i32 0, i32 1, !dbg !13109
  %interval = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify28, i32 0, i32 1, !dbg !13110
  store i32 100, i32* %interval, align 8, !dbg !13111
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13112
  call void @mlxsw_sp_fdb_notify_work_schedule(%struct.mlxsw_sp* %26, i1 zeroext false) #8, !dbg !13113
  store i32 0, i32* %retval, align 4, !dbg !13114
  br label %return, !dbg !13114

err_register_switchdev_blocking_notifier:         ; preds = %if.then10
  call void @llvm.dbg.label(metadata !13115), !dbg !13116
  %call29 = call i32 @unregister_switchdev_notifier(%struct.notifier_block* @mlxsw_sp_switchdev_notifier) #8, !dbg !13117
  %27 = load i32, i32* %err, align 4, !dbg !13118
  store i32 %27, i32* %retval, align 4, !dbg !13119
  br label %return, !dbg !13119

return:                                           ; preds = %err_register_switchdev_blocking_notifier, %do.end27, %if.then4, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !13120
  ret i32 %28, !dbg !13120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_switchdev_fini(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !13121 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !13124, metadata !DIExpression()), !dbg !13125
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13126
  call void @mlxsw_sp_fdb_fini(%struct.mlxsw_sp* %0) #8, !dbg !13127
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13128, metadata !DIExpression()), !dbg !13130
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13130
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 8, !dbg !13130
  %2 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13130
  %bridges_list = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %2, i32 0, i32 4, !dbg !13130
  %call = call i32 @list_empty(%struct.list_head* %bridges_list) #8, !dbg !13130
  %tobool = icmp ne i32 %call, 0, !dbg !13130
  %lnot = xor i1 %tobool, true, !dbg !13130
  %lnot1 = xor i1 %lnot, true, !dbg !13130
  %lnot2 = xor i1 %lnot1, true, !dbg !13130
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13130
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13130
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !13131
  %tobool3 = icmp ne i32 %3, 0, !dbg !13131
  %lnot4 = xor i1 %tobool3, true, !dbg !13131
  %lnot6 = xor i1 %lnot4, true, !dbg !13131
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !13131
  %conv = sext i32 %lnot.ext7 to i64, !dbg !13131
  %tobool8 = icmp ne i64 %conv, 0, !dbg !13131
  br i1 %tobool8, label %if.then, label %if.end, !dbg !13130

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13131

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !13133

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !13135

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !13133

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 3517, i32 2305, i64 12) #9, !dbg !13137, !srcloc !13139
  br label %do.end11, !dbg !13137

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 718) #9, !dbg !13140, !srcloc !13142
  br label %do.body12, !dbg !13133

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !13143

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !13133

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !13133

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !13130
  %tobool15 = icmp ne i32 %4, 0, !dbg !13130
  %lnot16 = xor i1 %tobool15, true, !dbg !13130
  %lnot18 = xor i1 %lnot16, true, !dbg !13130
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !13130
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !13130
  store i64 %conv20, i64* %tmp, align 8, !dbg !13131
  %5 = load i64, i64* %tmp, align 8, !dbg !13130
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13145
  %bridge21 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 8, !dbg !13146
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge21, align 8, !dbg !13146
  %8 = bitcast %struct.mlxsw_sp_bridge* %7 to i8*, !dbg !13145
  call void @kfree(i8* %8) #8, !dbg !13147
  ret void, !dbg !13148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_fini(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !13149 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %nb = alloca %struct.notifier_block*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !13150, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb, metadata !13152, metadata !DIExpression()), !dbg !13153
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13154
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 8, !dbg !13155
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !13155
  %fdb_notify = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %1, i32 0, i32 1, !dbg !13156
  %dw = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify, i32 0, i32 0, !dbg !13157
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %dw) #8, !dbg !13158
  store %struct.notifier_block* @mlxsw_sp_switchdev_blocking_notifier, %struct.notifier_block** %nb, align 8, !dbg !13159
  %2 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !13160
  %call1 = call i32 @unregister_switchdev_blocking_notifier(%struct.notifier_block* %2) #8, !dbg !13161
  %call2 = call i32 @unregister_switchdev_notifier(%struct.notifier_block* @mlxsw_sp_switchdev_notifier) #8, !dbg !13162
  ret void, !dbg !13163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !13164 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  br label %do.body, !dbg !13167

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13169

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13167
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !13167
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13167
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !13169
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !13167
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13171
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !13172
  %conv = zext i1 %cmp to i32, !dbg !13172
  ret i32 %conv, !dbg !13173
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !13174 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13175, metadata !DIExpression()), !dbg !13176
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13177
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #8, !dbg !13179
  br i1 %call, label %if.end, label %if.then, !dbg !13180

if.then:                                          ; preds = %entry
  br label %return, !dbg !13181

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13182
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13183
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13183
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13184
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13185
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13185
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #8, !dbg !13186
  br label %return, !dbg !13187

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !13188 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13191, metadata !DIExpression()), !dbg !13192
  ret i1 true, !dbg !13193
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13194 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13197, metadata !DIExpression()), !dbg !13198
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13199, metadata !DIExpression()), !dbg !13200
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13201
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13202
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13203
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !13204
  br label %do.body, !dbg !13205

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13206

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !13208

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !13206

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13210
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13210
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13210
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !13210
  br label %do.end5, !dbg !13210

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !13206

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !13212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_vlan_destroy(%struct.mlxsw_sp_bridge_vlan* %bridge_vlan) #0 !dbg !13213 {
entry:
  %bridge_vlan.addr = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, metadata !13214, metadata !DIExpression()), !dbg !13215
  %0 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !13216
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %0, i32 0, i32 0, !dbg !13217
  call void @list_del(%struct.list_head* %list) #8, !dbg !13218
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13219, metadata !DIExpression()), !dbg !13221
  %1 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !13221
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %1, i32 0, i32 1, !dbg !13221
  %call = call i32 @list_empty(%struct.list_head* %port_vlan_list) #8, !dbg !13221
  %tobool = icmp ne i32 %call, 0, !dbg !13221
  %lnot = xor i1 %tobool, true, !dbg !13221
  %lnot1 = xor i1 %lnot, true, !dbg !13221
  %lnot2 = xor i1 %lnot1, true, !dbg !13221
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13221
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13221
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !13222
  %tobool3 = icmp ne i32 %2, 0, !dbg !13222
  %lnot4 = xor i1 %tobool3, true, !dbg !13222
  %lnot6 = xor i1 %lnot4, true, !dbg !13222
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !13222
  %conv = sext i32 %lnot.ext7 to i64, !dbg !13222
  %tobool8 = icmp ne i64 %conv, 0, !dbg !13222
  br i1 %tobool8, label %if.then, label %if.end, !dbg !13221

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13222

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !13224

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !13226

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !13224

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 482, i32 2305, i64 12) #9, !dbg !13228, !srcloc !13230
  br label %do.end11, !dbg !13228

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 662) #9, !dbg !13231, !srcloc !13233
  br label %do.body12, !dbg !13224

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !13234

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !13224

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !13224

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !13221
  %tobool15 = icmp ne i32 %3, 0, !dbg !13221
  %lnot16 = xor i1 %tobool15, true, !dbg !13221
  %lnot18 = xor i1 %lnot16, true, !dbg !13221
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !13221
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !13221
  store i64 %conv20, i64* %tmp, align 8, !dbg !13222
  %4 = load i64, i64* %tmp, align 8, !dbg !13221
  %5 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !13236
  %6 = bitcast %struct.mlxsw_sp_bridge_vlan* %5 to i8*, !dbg !13236
  call void @kfree(i8* %6) #8, !dbg !13237
  ret void, !dbg !13238
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_fid_port_vid_unmap(%struct.mlxsw_sp_fid*, %struct.mlxsw_sp_port*, i16 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid*, i32, i8 zeroext, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_port_destroy(%struct.mlxsw_sp_bridge_port* %bridge_port) #0 !dbg !13239 {
entry:
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !13242, metadata !DIExpression()), !dbg !13243
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !13244
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 2, !dbg !13245
  call void @list_del(%struct.list_head* %list) #8, !dbg !13246
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13247, metadata !DIExpression()), !dbg !13249
  %1 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !13249
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %1, i32 0, i32 3, !dbg !13249
  %call = call i32 @list_empty(%struct.list_head* %vlans_list) #8, !dbg !13249
  %tobool = icmp ne i32 %call, 0, !dbg !13249
  %lnot = xor i1 %tobool, true, !dbg !13249
  %lnot1 = xor i1 %lnot, true, !dbg !13249
  %lnot2 = xor i1 %lnot1, true, !dbg !13249
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13249
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13249
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !13250
  %tobool3 = icmp ne i32 %2, 0, !dbg !13250
  %lnot4 = xor i1 %tobool3, true, !dbg !13250
  %lnot6 = xor i1 %lnot4, true, !dbg !13250
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !13250
  %conv = sext i32 %lnot.ext7 to i64, !dbg !13250
  %tobool8 = icmp ne i64 %conv, 0, !dbg !13250
  br i1 %tobool8, label %if.then, label %if.end, !dbg !13249

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13250

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !13252

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !13254

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !13252

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 358, i32 2305, i64 12) #9, !dbg !13256, !srcloc !13258
  br label %do.end11, !dbg !13256

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 655) #9, !dbg !13259, !srcloc !13261
  br label %do.body12, !dbg !13252

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !13262

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !13252

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !13252

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !13249
  %tobool15 = icmp ne i32 %3, 0, !dbg !13249
  %lnot16 = xor i1 %tobool15, true, !dbg !13249
  %lnot18 = xor i1 %lnot16, true, !dbg !13249
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !13249
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !13249
  store i64 %conv20, i64* %tmp, align 8, !dbg !13250
  %4 = load i64, i64* %tmp, align 8, !dbg !13249
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !13264
  %6 = bitcast %struct.mlxsw_sp_bridge_port* %5 to i8*, !dbg !13264
  call void @kfree(i8* %6) #8, !dbg !13265
  ret void, !dbg !13266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_device_put(%struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge_device* %bridge_device) #0 !dbg !13267 {
entry:
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !13270, metadata !DIExpression()), !dbg !13271
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !13272, metadata !DIExpression()), !dbg !13273
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13274
  %ports_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 2, !dbg !13276
  %call = call i32 @list_empty(%struct.list_head* %ports_list) #8, !dbg !13277
  %tobool = icmp ne i32 %call, 0, !dbg !13277
  br i1 %tobool, label %if.then, label %if.end, !dbg !13278

if.then:                                          ; preds = %entry
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !13279
  %2 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13280
  call void @mlxsw_sp_bridge_device_destroy(%struct.mlxsw_sp_bridge* %1, %struct.mlxsw_sp_bridge_device* %2) #8, !dbg !13281
  br label %if.end, !dbg !13281

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_device_destroy(%struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge_device* %bridge_device) #0 !dbg !13283 {
entry:
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on25 = alloca i32, align 4
  %tmp51 = alloca i64, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !13284, metadata !DIExpression()), !dbg !13285
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !13286, metadata !DIExpression()), !dbg !13287
  %0 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !13288
  %1 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13289
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %1, i32 0, i32 0, !dbg !13290
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13290
  call void @mlxsw_sp_bridge_device_vxlan_fini(%struct.mlxsw_sp_bridge* %0, %struct.net_device* %2) #8, !dbg !13291
  %3 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !13292
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %3, i32 0, i32 0, !dbg !13293
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13293
  %5 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13294
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %5, i32 0, i32 0, !dbg !13295
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !13295
  call void @mlxsw_sp_bridge_device_rifs_destroy(%struct.mlxsw_sp* %4, %struct.net_device* %6) #8, !dbg !13296
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13297
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 1, !dbg !13298
  call void @list_del(%struct.list_head* %list) #8, !dbg !13299
  %8 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13300
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %8, i32 0, i32 4, !dbg !13302
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !13302
  %bf.clear = and i8 %bf.load, 1, !dbg !13302
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !13300
  br i1 %tobool, label %if.then, label %if.end, !dbg !13303

if.then:                                          ; preds = %entry
  %9 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !13304
  %vlan_enabled_exists = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %9, i32 0, i32 3, !dbg !13305
  store i8 0, i8* %vlan_enabled_exists, align 4, !dbg !13306
  br label %if.end, !dbg !13304

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13307, metadata !DIExpression()), !dbg !13309
  %10 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13309
  %ports_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %10, i32 0, i32 2, !dbg !13309
  %call = call i32 @list_empty(%struct.list_head* %ports_list) #8, !dbg !13309
  %tobool2 = icmp ne i32 %call, 0, !dbg !13309
  %lnot = xor i1 %tobool2, true, !dbg !13309
  %lnot3 = xor i1 %lnot, true, !dbg !13309
  %lnot4 = xor i1 %lnot3, true, !dbg !13309
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !13309
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13309
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !13310
  %tobool5 = icmp ne i32 %11, 0, !dbg !13310
  %lnot6 = xor i1 %tobool5, true, !dbg !13310
  %lnot8 = xor i1 %lnot6, true, !dbg !13310
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !13310
  %conv = sext i32 %lnot.ext9 to i64, !dbg !13310
  %tobool10 = icmp ne i64 %conv, 0, !dbg !13310
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !13309

if.then11:                                        ; preds = %if.end
  br label %do.body, !dbg !13310

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !13312

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !13314

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !13312

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 267, i32 2305, i64 12) #9, !dbg !13316, !srcloc !13318
  br label %do.end14, !dbg !13316

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 651) #9, !dbg !13319, !srcloc !13321
  br label %do.body15, !dbg !13312

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !13322

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !13312

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !13312

if.end18:                                         ; preds = %do.end17, %if.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !13309
  %tobool19 = icmp ne i32 %12, 0, !dbg !13309
  %lnot20 = xor i1 %tobool19, true, !dbg !13309
  %lnot22 = xor i1 %lnot20, true, !dbg !13309
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !13309
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !13309
  store i64 %conv24, i64* %tmp, align 8, !dbg !13310
  %13 = load i64, i64* %tmp, align 8, !dbg !13309
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on25, metadata !13324, metadata !DIExpression()), !dbg !13326
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13326
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %14, i32 0, i32 3, !dbg !13326
  %call26 = call i32 @list_empty(%struct.list_head* %mids_list) #8, !dbg !13326
  %tobool27 = icmp ne i32 %call26, 0, !dbg !13326
  %lnot28 = xor i1 %tobool27, true, !dbg !13326
  %lnot30 = xor i1 %lnot28, true, !dbg !13326
  %lnot32 = xor i1 %lnot30, true, !dbg !13326
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !13326
  store i32 %lnot.ext33, i32* %__ret_warn_on25, align 4, !dbg !13326
  %15 = load i32, i32* %__ret_warn_on25, align 4, !dbg !13327
  %tobool34 = icmp ne i32 %15, 0, !dbg !13327
  %lnot35 = xor i1 %tobool34, true, !dbg !13327
  %lnot37 = xor i1 %lnot35, true, !dbg !13327
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !13327
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !13327
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !13327
  br i1 %tobool40, label %if.then41, label %if.end50, !dbg !13326

if.then41:                                        ; preds = %if.end18
  br label %do.body42, !dbg !13327

do.body42:                                        ; preds = %if.then41
  br label %do.body43, !dbg !13329

do.body43:                                        ; preds = %do.body42
  br label %do.end44, !dbg !13331

do.end44:                                         ; preds = %do.body43
  br label %do.body45, !dbg !13329

do.body45:                                        ; preds = %do.end44
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 268, i32 2305, i64 12) #9, !dbg !13333, !srcloc !13335
  br label %do.end46, !dbg !13333

do.end46:                                         ; preds = %do.body45
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 652) #9, !dbg !13336, !srcloc !13338
  br label %do.body47, !dbg !13329

do.body47:                                        ; preds = %do.end46
  br label %do.end48, !dbg !13339

do.end48:                                         ; preds = %do.body47
  br label %do.end49, !dbg !13329

do.end49:                                         ; preds = %do.end48
  br label %if.end50, !dbg !13329

if.end50:                                         ; preds = %do.end49, %if.end18
  %16 = load i32, i32* %__ret_warn_on25, align 4, !dbg !13326
  %tobool52 = icmp ne i32 %16, 0, !dbg !13326
  %lnot53 = xor i1 %tobool52, true, !dbg !13326
  %lnot55 = xor i1 %lnot53, true, !dbg !13326
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !13326
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !13326
  store i64 %conv57, i64* %tmp51, align 8, !dbg !13327
  %17 = load i64, i64* %tmp51, align 8, !dbg !13326
  %18 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !13341
  %19 = bitcast %struct.mlxsw_sp_bridge_device* %18 to i8*, !dbg !13341
  call void @kfree(i8* %19) #8, !dbg !13342
  ret void, !dbg !13343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_device_vxlan_fini(%struct.mlxsw_sp_bridge* %bridge, %struct.net_device* %br_dev) #0 !dbg !13344 {
entry:
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !13347, metadata !DIExpression()), !dbg !13348
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !13349, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !13351, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !13353, metadata !DIExpression()), !dbg !13354
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !13355
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 14, !dbg !13355
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !13355
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !13355
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13355
  store %struct.list_head* %1, %struct.list_head** %iter, align 8, !dbg !13355
  %2 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !13355
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %2, %struct.list_head** %iter) #8, !dbg !13355
  %3 = bitcast i8* %call to %struct.net_device*, !dbg !13355
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !13355
  br label %for.cond, !dbg !13355

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13357
  %tobool = icmp ne %struct.net_device* %4, null, !dbg !13355
  br i1 %tobool, label %for.body, label %for.end, !dbg !13355

for.body:                                         ; preds = %for.cond
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13359
  %call1 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %5) #8, !dbg !13362
  br i1 %call1, label %land.lhs.true, label %if.end, !dbg !13363

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13364
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %6) #8, !dbg !13365
  br i1 %call2, label %if.then, label %if.end, !dbg !13366

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !13367
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %7, i32 0, i32 0, !dbg !13368
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13368
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13369
  call void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %8, %struct.net_device* %9) #8, !dbg !13370
  br label %if.end, !dbg !13370

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !13371

for.inc:                                          ; preds = %if.end
  %10 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !13357
  %call3 = call i8* @netdev_lower_get_next(%struct.net_device* %10, %struct.list_head** %iter) #8, !dbg !13357
  %11 = bitcast i8* %call3 to %struct.net_device*, !dbg !13357
  store %struct.net_device* %11, %struct.net_device** %dev, align 8, !dbg !13357
  br label %for.cond, !dbg !13357, !llvm.loop !13372

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_device_rifs_destroy(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %dev) #0 !dbg !13375 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.netdev_nested_priv, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !13378, metadata !DIExpression()), !dbg !13379
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13380, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.declare(metadata %struct.netdev_nested_priv* %priv, metadata !13382, metadata !DIExpression()), !dbg !13387
  %flags = getelementptr inbounds %struct.netdev_nested_priv, %struct.netdev_nested_priv* %priv, i32 0, i32 0, !dbg !13388
  store i8 0, i8* %flags, align 8, !dbg !13388
  %data = getelementptr inbounds %struct.netdev_nested_priv, %struct.netdev_nested_priv* %priv, i32 0, i32 1, !dbg !13388
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13389
  %1 = bitcast %struct.mlxsw_sp* %0 to i8*, !dbg !13390
  store i8* %1, i8** %data, align 8, !dbg !13388
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !13391
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13392
  call void @mlxsw_sp_rif_destroy_by_dev(%struct.mlxsw_sp* %2, %struct.net_device* %3) #8, !dbg !13393
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13394
  %call = call i32 @netdev_walk_all_upper_dev_rcu(%struct.net_device* %4, i32 (%struct.net_device*, %struct.netdev_nested_priv*)* @mlxsw_sp_bridge_device_upper_rif_destroy, %struct.netdev_nested_priv* %priv) #8, !dbg !13395
  ret void, !dbg !13396
}

; Function Attrs: noredzone
declare dso_local i8* @netdev_lower_get_next(%struct.net_device*, %struct.list_head**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_vxlan(%struct.net_device* %dev) #0 !dbg !13397 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13400, metadata !DIExpression()), !dbg !13401
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13402
  %rtnl_link_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 109, !dbg !13403
  %1 = load %struct.rtnl_link_ops*, %struct.rtnl_link_ops** %rtnl_link_ops, align 8, !dbg !13403
  %tobool = icmp ne %struct.rtnl_link_ops* %1, null, !dbg !13402
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13404

land.rhs:                                         ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13405
  %rtnl_link_ops1 = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 109, !dbg !13406
  %3 = load %struct.rtnl_link_ops*, %struct.rtnl_link_ops** %rtnl_link_ops1, align 8, !dbg !13406
  %kind = getelementptr inbounds %struct.rtnl_link_ops, %struct.rtnl_link_ops* %3, i32 0, i32 1, !dbg !13407
  %4 = load i8*, i8** %kind, align 8, !dbg !13407
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #8, !dbg !13408
  %tobool2 = icmp ne i32 %call, 0, !dbg !13409
  %lnot = xor i1 %tobool2, true, !dbg !13409
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !13410
  ret i1 %5, !dbg !13411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #0 !dbg !13412 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13413, metadata !DIExpression()), !dbg !13414
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13415
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !13416
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #8, !dbg !13417
  ret i1 %call, !dbg !13418
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !13419 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !13426, metadata !DIExpression()), !dbg !13429
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !13431, metadata !DIExpression()), !dbg !13432
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !13433, metadata !DIExpression()), !dbg !13434
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13435, metadata !DIExpression()), !dbg !13437
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13439, metadata !DIExpression()), !dbg !13440
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13441, metadata !DIExpression()), !dbg !13449
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13451, metadata !DIExpression()), !dbg !13452
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13453, metadata !DIExpression()), !dbg !13454
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13455, metadata !DIExpression()), !dbg !13456
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13457
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13458
  %div = sdiv i64 %1, 64, !dbg !13458
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13459
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13457
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13460
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13461
  %conv.i = trunc i64 %4 to i32, !dbg !13461
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #11, !dbg !13462
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13463
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13463
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !13463
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13464
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !13464
  br i1 %8, label %cond.true, label %cond.false, !dbg !13464

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !13464
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !13464
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !13465
  %and.i = and i64 %11, 63, !dbg !13466
  %shl.i = shl i64 1, %and.i, !dbg !13467
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !13468
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13469
  %shr.i = ashr i64 %13, 6, !dbg !13470
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !13468
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !13468
  %and1.i = and i64 %shl.i, %14, !dbg !13471
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !13472
  %conv = zext i1 %cmp.i to i32, !dbg !13464
  br label %cond.end, !dbg !13464

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !13464
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !13464
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !13473
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !13474
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #9, !dbg !13475, !srcloc !13476
  store i8 %19, i8* %oldbit.i, align 1, !dbg !13475
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !13477
  %tobool.i = trunc i8 %20 to i1, !dbg !13477
  %conv2 = zext i1 %tobool.i to i32, !dbg !13464
  br label %cond.end, !dbg !13464

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !13464
  %tobool = icmp ne i32 %cond, 0, !dbg !13464
  ret i1 %tobool, !dbg !13478
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !13479 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13483, metadata !DIExpression()), !dbg !13484
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13485, metadata !DIExpression()), !dbg !13486
  ret i1 true, !dbg !13487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !13488 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13492, metadata !DIExpression()), !dbg !13493
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13494, metadata !DIExpression()), !dbg !13495
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13496, metadata !DIExpression()), !dbg !13497
  ret void, !dbg !13498
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_rif_destroy_by_dev(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @netdev_walk_all_upper_dev_rcu(%struct.net_device*, i32 (%struct.net_device*, %struct.netdev_nested_priv*)*, %struct.netdev_nested_priv*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_device_upper_rif_destroy(%struct.net_device* %dev, %struct.netdev_nested_priv* %priv) #0 !dbg !13499 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv.addr = alloca %struct.netdev_nested_priv*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13503, metadata !DIExpression()), !dbg !13504
  store %struct.netdev_nested_priv* %priv, %struct.netdev_nested_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_nested_priv** %priv.addr, metadata !13505, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13507, metadata !DIExpression()), !dbg !13508
  %0 = load %struct.netdev_nested_priv*, %struct.netdev_nested_priv** %priv.addr, align 8, !dbg !13509
  %data = getelementptr inbounds %struct.netdev_nested_priv, %struct.netdev_nested_priv* %0, i32 0, i32 1, !dbg !13510
  %1 = load i8*, i8** %data, align 8, !dbg !13510
  %2 = bitcast i8* %1 to %struct.mlxsw_sp*, !dbg !13509
  store %struct.mlxsw_sp* %2, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13508
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13511
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13512
  call void @mlxsw_sp_rif_destroy_by_dev(%struct.mlxsw_sp* %3, %struct.net_device* %4) #8, !dbg !13513
  ret i32 0, !dbg !13514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdf_pack(i8* %payload, i32 %type) #0 !dbg !13515 {
entry:
  %payload.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13518, metadata !DIExpression()), !dbg !13519
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13520, metadata !DIExpression()), !dbg !13521
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13522
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sfdf, i32 0, i32 1), align 2, !dbg !13522
  %conv = zext i16 %1 to i64, !dbg !13522
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !13522
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !13523
  %3 = load i32, i32* %type.addr, align 4, !dbg !13524
  call void @mlxsw_reg_sfdf_flush_type_set(i8* %2, i32 %3) #8, !dbg !13525
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !13526
  call void @mlxsw_reg_sfdf_flush_static_set(i8* %4, i32 1) #8, !dbg !13527
  ret void, !dbg !13528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_fdb_flush_type(i1 zeroext %lagged) #0 !dbg !13529 {
entry:
  %lagged.addr = alloca i8, align 1
  %frombool = zext i1 %lagged to i8
  store i8 %frombool, i8* %lagged.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lagged.addr, metadata !13532, metadata !DIExpression()), !dbg !13533
  %0 = load i8, i8* %lagged.addr, align 1, !dbg !13534
  %tobool = trunc i8 %0 to i1, !dbg !13534
  %1 = zext i1 %tobool to i64, !dbg !13534
  %cond = select i1 %tobool, i32 5, i32 3, !dbg !13534
  ret i32 %cond, !dbg !13535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdf_fid_set(i8* %buf, i32 %val) #0 !dbg !13536 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13539, metadata !DIExpression()), !dbg !13540
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13541, metadata !DIExpression()), !dbg !13540
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13540
  %1 = load i32, i32* %val.addr, align 4, !dbg !13540
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfdf_fid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !13540
  ret void, !dbg !13540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdf_port_fid_system_port_set(i8* %buf, i32 %val) #0 !dbg !13542 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13543, metadata !DIExpression()), !dbg !13544
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13545, metadata !DIExpression()), !dbg !13544
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13544
  %1 = load i32, i32* %val.addr, align 4, !dbg !13544
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfdf_port_fid_system_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !13544
  ret void, !dbg !13544
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_reg_write(%struct.mlxsw_core*, %struct.mlxsw_reg_info*, i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdf_flush_type_set(i8* %buf, i32 %val) #0 !dbg !13546 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13549, metadata !DIExpression()), !dbg !13548
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13548
  %1 = load i32, i32* %val.addr, align 4, !dbg !13548
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfdf_flush_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !13548
  ret void, !dbg !13548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdf_flush_static_set(i8* %buf, i32 %val) #0 !dbg !13550 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13551, metadata !DIExpression()), !dbg !13552
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13553, metadata !DIExpression()), !dbg !13552
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13552
  %1 = load i32, i32* %val.addr, align 4, !dbg !13552
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfdf_flush_static_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !13552
  ret void, !dbg !13552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_set32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i32 %val) #0 !dbg !13554 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13559, metadata !DIExpression()), !dbg !13560
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !13561, metadata !DIExpression()), !dbg !13562
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13563, metadata !DIExpression()), !dbg !13564
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13565, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13567, metadata !DIExpression()), !dbg !13568
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13569
  %1 = load i16, i16* %index.addr, align 2, !dbg !13570
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #8, !dbg !13571
  store i32 %call, i32* %offset, align 4, !dbg !13568
  call void @llvm.dbg.declare(metadata i32** %b, metadata !13572, metadata !DIExpression()), !dbg !13573
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13574
  %3 = bitcast i8* %2 to i32*, !dbg !13575
  store i32* %3, i32** %b, align 8, !dbg !13573
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !13576, metadata !DIExpression()), !dbg !13577
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13578
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 6, !dbg !13578
  %bits = bitcast %union.anon.168* %size to i8*, !dbg !13578
  %5 = load i8, i8* %bits, align 2, !dbg !13578
  %conv = zext i8 %5 to i32, !dbg !13578
  %sub = sub i32 %conv, 1, !dbg !13578
  %sub1 = sub i32 63, %sub, !dbg !13578
  %sh_prom = zext i32 %sub1 to i64, !dbg !13578
  %shr = lshr i64 -1, %sh_prom, !dbg !13578
  %and = and i64 -1, %shr, !dbg !13578
  %add = add i64 0, %and, !dbg !13578
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13579
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 3, !dbg !13580
  %7 = load i8, i8* %shift, align 2, !dbg !13580
  %conv2 = zext i8 %7 to i32, !dbg !13579
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !13581
  %shl = shl i64 %add, %sh_prom3, !dbg !13581
  %conv4 = trunc i64 %shl to i32, !dbg !13578
  store i32 %conv4, i32* %mask, align 4, !dbg !13577
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13582, metadata !DIExpression()), !dbg !13583
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13584
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 5, !dbg !13586
  %9 = load i8, i8* %no_real_shift, align 8, !dbg !13586
  %tobool = trunc i8 %9 to i1, !dbg !13586
  br i1 %tobool, label %if.end, label %if.then, !dbg !13587

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13588
  %shift5 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 3, !dbg !13589
  %11 = load i8, i8* %shift5, align 2, !dbg !13589
  %conv6 = zext i8 %11 to i32, !dbg !13588
  %12 = load i32, i32* %val.addr, align 4, !dbg !13590
  %shl7 = shl i32 %12, %conv6, !dbg !13590
  store i32 %shl7, i32* %val.addr, align 4, !dbg !13590
  br label %if.end, !dbg !13591

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %mask, align 4, !dbg !13592
  %14 = load i32, i32* %val.addr, align 4, !dbg !13593
  %and8 = and i32 %14, %13, !dbg !13593
  store i32 %and8, i32* %val.addr, align 4, !dbg !13593
  %15 = load i32*, i32** %b, align 8, !dbg !13594
  %16 = load i32, i32* %offset, align 4, !dbg !13594
  %idxprom = zext i32 %16 to i64, !dbg !13594
  %arrayidx = getelementptr i32, i32* %15, i64 %idxprom, !dbg !13594
  %17 = load i32, i32* %arrayidx, align 4, !dbg !13594
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !13594
  br i1 %18, label %cond.true, label %cond.false, !dbg !13594

cond.true:                                        ; preds = %if.end
  %19 = load i32*, i32** %b, align 8, !dbg !13594
  %20 = load i32, i32* %offset, align 4, !dbg !13594
  %idxprom9 = zext i32 %20 to i64, !dbg !13594
  %arrayidx10 = getelementptr i32, i32* %19, i64 %idxprom9, !dbg !13594
  %21 = load i32, i32* %arrayidx10, align 4, !dbg !13594
  %and11 = and i32 %21, 255, !dbg !13594
  %shl12 = shl i32 %and11, 24, !dbg !13594
  %22 = load i32*, i32** %b, align 8, !dbg !13594
  %23 = load i32, i32* %offset, align 4, !dbg !13594
  %idxprom13 = zext i32 %23 to i64, !dbg !13594
  %arrayidx14 = getelementptr i32, i32* %22, i64 %idxprom13, !dbg !13594
  %24 = load i32, i32* %arrayidx14, align 4, !dbg !13594
  %and15 = and i32 %24, 65280, !dbg !13594
  %shl16 = shl i32 %and15, 8, !dbg !13594
  %or = or i32 %shl12, %shl16, !dbg !13594
  %25 = load i32*, i32** %b, align 8, !dbg !13594
  %26 = load i32, i32* %offset, align 4, !dbg !13594
  %idxprom17 = zext i32 %26 to i64, !dbg !13594
  %arrayidx18 = getelementptr i32, i32* %25, i64 %idxprom17, !dbg !13594
  %27 = load i32, i32* %arrayidx18, align 4, !dbg !13594
  %and19 = and i32 %27, 16711680, !dbg !13594
  %shr20 = lshr i32 %and19, 8, !dbg !13594
  %or21 = or i32 %or, %shr20, !dbg !13594
  %28 = load i32*, i32** %b, align 8, !dbg !13594
  %29 = load i32, i32* %offset, align 4, !dbg !13594
  %idxprom22 = zext i32 %29 to i64, !dbg !13594
  %arrayidx23 = getelementptr i32, i32* %28, i64 %idxprom22, !dbg !13594
  %30 = load i32, i32* %arrayidx23, align 4, !dbg !13594
  %and24 = and i32 %30, -16777216, !dbg !13594
  %shr25 = lshr i32 %and24, 24, !dbg !13594
  %or26 = or i32 %or21, %shr25, !dbg !13594
  br label %cond.end, !dbg !13594

cond.false:                                       ; preds = %if.end
  %31 = load i32*, i32** %b, align 8, !dbg !13594
  %32 = load i32, i32* %offset, align 4, !dbg !13594
  %idxprom27 = zext i32 %32 to i64, !dbg !13594
  %arrayidx28 = getelementptr i32, i32* %31, i64 %idxprom27, !dbg !13594
  %33 = load i32, i32* %arrayidx28, align 4, !dbg !13594
  %call29 = call i32 @__fswab32(i32 %33) #10, !dbg !13594
  br label %cond.end, !dbg !13594

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or26, %cond.true ], [ %call29, %cond.false ], !dbg !13594
  store i32 %cond, i32* %tmp, align 4, !dbg !13595
  %34 = load i32, i32* %mask, align 4, !dbg !13596
  %neg = xor i32 %34, -1, !dbg !13597
  %35 = load i32, i32* %tmp, align 4, !dbg !13598
  %and30 = and i32 %35, %neg, !dbg !13598
  store i32 %and30, i32* %tmp, align 4, !dbg !13598
  %36 = load i32, i32* %val.addr, align 4, !dbg !13599
  %37 = load i32, i32* %tmp, align 4, !dbg !13600
  %or31 = or i32 %37, %36, !dbg !13600
  store i32 %or31, i32* %tmp, align 4, !dbg !13600
  %38 = load i32, i32* %tmp, align 4, !dbg !13601
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !13601
  br i1 %39, label %cond.true32, label %cond.false44, !dbg !13601

cond.true32:                                      ; preds = %cond.end
  %40 = load i32, i32* %tmp, align 4, !dbg !13601
  %and33 = and i32 %40, 255, !dbg !13601
  %shl34 = shl i32 %and33, 24, !dbg !13601
  %41 = load i32, i32* %tmp, align 4, !dbg !13601
  %and35 = and i32 %41, 65280, !dbg !13601
  %shl36 = shl i32 %and35, 8, !dbg !13601
  %or37 = or i32 %shl34, %shl36, !dbg !13601
  %42 = load i32, i32* %tmp, align 4, !dbg !13601
  %and38 = and i32 %42, 16711680, !dbg !13601
  %shr39 = lshr i32 %and38, 8, !dbg !13601
  %or40 = or i32 %or37, %shr39, !dbg !13601
  %43 = load i32, i32* %tmp, align 4, !dbg !13601
  %and41 = and i32 %43, -16777216, !dbg !13601
  %shr42 = lshr i32 %and41, 24, !dbg !13601
  %or43 = or i32 %or40, %shr42, !dbg !13601
  br label %cond.end46, !dbg !13601

cond.false44:                                     ; preds = %cond.end
  %44 = load i32, i32* %tmp, align 4, !dbg !13601
  %call45 = call i32 @__fswab32(i32 %44) #10, !dbg !13601
  br label %cond.end46, !dbg !13601

cond.end46:                                       ; preds = %cond.false44, %cond.true32
  %cond47 = phi i32 [ %or43, %cond.true32 ], [ %call45, %cond.false44 ], !dbg !13601
  %45 = load i32*, i32** %b, align 8, !dbg !13602
  %46 = load i32, i32* %offset, align 4, !dbg !13603
  %idxprom48 = zext i32 %46 to i64, !dbg !13602
  %arrayidx49 = getelementptr i32, i32* %45, i64 %idxprom48, !dbg !13602
  store i32 %cond47, i32* %arrayidx49, align 4, !dbg !13604
  ret void, !dbg !13605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_offset(%struct.mlxsw_item* %item, i16 zeroext %index, i64 %typesize) #0 !dbg !13606 {
entry:
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %typesize.addr = alloca i64, align 8
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !13609, metadata !DIExpression()), !dbg !13610
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13611, metadata !DIExpression()), !dbg !13612
  store i64 %typesize, i64* %typesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %typesize.addr, metadata !13613, metadata !DIExpression()), !dbg !13614
  br label %do.body, !dbg !13615

do.body:                                          ; preds = %entry
  %0 = load i16, i16* %index.addr, align 2, !dbg !13616
  %conv = zext i16 %0 to i32, !dbg !13616
  %tobool = icmp ne i32 %conv, 0, !dbg !13616
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13616

land.rhs:                                         ; preds = %do.body
  %1 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13616
  %step = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %1, i32 0, i32 1, !dbg !13616
  %2 = load i16, i16* %step, align 2, !dbg !13616
  %tobool1 = icmp ne i16 %2, 0, !dbg !13616
  %lnot = xor i1 %tobool1, true, !dbg !13616
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.body
  %3 = phi i1 [ false, %do.body ], [ %lnot, %land.rhs ], !dbg !13619
  %lnot2 = xor i1 %3, true, !dbg !13616
  %lnot3 = xor i1 %lnot2, true, !dbg !13616
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13616
  %conv4 = sext i32 %lnot.ext to i64, !dbg !13616
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !13616
  br i1 %tobool5, label %if.then, label %if.end, !dbg !13620

if.then:                                          ; preds = %land.end
  br label %do.body6, !dbg !13616

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !13621

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !13623

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !13621

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 29, i32 0, i64 12) #9, !dbg !13625, !srcloc !13627
  br label %do.end9, !dbg !13625

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !13621

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 640) #9, !dbg !13628, !srcloc !13631
  unreachable, !dbg !13632

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !13621

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !13621

if.end:                                           ; preds = %do.end12, %land.end
  br label %do.end13, !dbg !13620

do.end13:                                         ; preds = %if.end
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13633
  %offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 0, !dbg !13635
  %5 = load i16, i16* %offset, align 8, !dbg !13635
  %conv14 = zext i16 %5 to i64, !dbg !13633
  %6 = load i64, i64* %typesize.addr, align 8, !dbg !13636
  %rem = urem i64 %conv14, %6, !dbg !13637
  %cmp = icmp ne i64 %rem, 0, !dbg !13638
  br i1 %cmp, label %if.then26, label %lor.lhs.false, !dbg !13639

lor.lhs.false:                                    ; preds = %do.end13
  %7 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13640
  %step16 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %7, i32 0, i32 1, !dbg !13641
  %8 = load i16, i16* %step16, align 2, !dbg !13641
  %conv17 = sext i16 %8 to i64, !dbg !13640
  %9 = load i64, i64* %typesize.addr, align 8, !dbg !13642
  %rem18 = urem i64 %conv17, %9, !dbg !13643
  %cmp19 = icmp ne i64 %rem18, 0, !dbg !13644
  br i1 %cmp19, label %if.then26, label %lor.lhs.false21, !dbg !13645

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13646
  %in_step_offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 2, !dbg !13647
  %11 = load i16, i16* %in_step_offset, align 4, !dbg !13647
  %conv22 = zext i16 %11 to i64, !dbg !13646
  %12 = load i64, i64* %typesize.addr, align 8, !dbg !13648
  %rem23 = urem i64 %conv22, %12, !dbg !13649
  %cmp24 = icmp ne i64 %rem23, 0, !dbg !13650
  br i1 %cmp24, label %if.then26, label %if.end41, !dbg !13651

if.then26:                                        ; preds = %lor.lhs.false21, %lor.lhs.false, %do.end13
  %13 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13652
  %name = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %13, i32 0, i32 7, !dbg !13652
  %14 = load i8*, i8** %name, align 8, !dbg !13652
  %15 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13652
  %offset27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %15, i32 0, i32 0, !dbg !13652
  %16 = load i16, i16* %offset27, align 8, !dbg !13652
  %conv28 = zext i16 %16 to i32, !dbg !13652
  %17 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13652
  %step29 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %17, i32 0, i32 1, !dbg !13652
  %18 = load i16, i16* %step29, align 2, !dbg !13652
  %conv30 = sext i16 %18 to i32, !dbg !13652
  %19 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13652
  %in_step_offset31 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %19, i32 0, i32 2, !dbg !13652
  %20 = load i16, i16* %in_step_offset31, align 4, !dbg !13652
  %conv32 = zext i16 %20 to i32, !dbg !13652
  %21 = load i64, i64* %typesize.addr, align 8, !dbg !13652
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i8* %14, i32 %conv28, i32 %conv30, i32 %conv32, i64 %21) #12, !dbg !13652
  br label %do.body33, !dbg !13654

do.body33:                                        ; preds = %if.then26
  br label %do.body34, !dbg !13655

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !13657

do.end35:                                         ; preds = %do.body34
  br label %do.body36, !dbg !13655

do.body36:                                        ; preds = %do.end35
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 36, i32 0, i64 12) #9, !dbg !13659, !srcloc !13661
  br label %do.end37, !dbg !13659

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !13655

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 641) #9, !dbg !13662, !srcloc !13665
  unreachable, !dbg !13666

do.end39:                                         ; No predecessors!
  br label %do.end40, !dbg !13655

do.end40:                                         ; preds = %do.end39
  br label %if.end41, !dbg !13667

if.end41:                                         ; preds = %do.end40, %lor.lhs.false21
  %22 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13668
  %offset42 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %22, i32 0, i32 0, !dbg !13669
  %23 = load i16, i16* %offset42, align 8, !dbg !13669
  %conv43 = zext i16 %23 to i32, !dbg !13668
  %24 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13670
  %step44 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %24, i32 0, i32 1, !dbg !13671
  %25 = load i16, i16* %step44, align 2, !dbg !13671
  %conv45 = sext i16 %25 to i32, !dbg !13670
  %26 = load i16, i16* %index.addr, align 2, !dbg !13672
  %conv46 = zext i16 %26 to i32, !dbg !13672
  %mul = mul i32 %conv45, %conv46, !dbg !13673
  %add = add i32 %conv43, %mul, !dbg !13674
  %27 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13675
  %in_step_offset47 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %27, i32 0, i32 2, !dbg !13676
  %28 = load i16, i16* %in_step_offset47, align 4, !dbg !13676
  %conv48 = zext i16 %28 to i32, !dbg !13675
  %add49 = add i32 %add, %conv48, !dbg !13677
  %conv50 = sext i32 %add49 to i64, !dbg !13678
  %29 = load i64, i64* %typesize.addr, align 8, !dbg !13679
  %div = udiv i64 %conv50, %29, !dbg !13680
  %conv51 = trunc i64 %div to i32, !dbg !13681
  ret i32 %conv51, !dbg !13682
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #5 !dbg !13683 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13687, metadata !DIExpression()), !dbg !13688
  %0 = load i32, i32* %val.addr, align 4, !dbg !13689
  %call = call i32 @__arch_swab32(i32 %0) #10, !dbg !13690
  ret i32 %call, !dbg !13691
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #5 !dbg !13692 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13694, metadata !DIExpression()), !dbg !13695
  %0 = load i32, i32* %val.addr, align 4, !dbg !13696
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #13, !dbg !13697, !srcloc !13698
  store i32 %1, i32* %val.addr, align 4, !dbg !13697
  %2 = load i32, i32* %val.addr, align 4, !dbg !13699
  ret i32 %2, !dbg !13700
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_pack(i8* %payload, i32 %op, i32 %record_locator) #0 !dbg !13701 {
entry:
  %payload.addr = alloca i8*, align 8
  %op.addr = alloca i32, align 4
  %record_locator.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13704, metadata !DIExpression()), !dbg !13705
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !13706, metadata !DIExpression()), !dbg !13707
  store i32 %record_locator, i32* %record_locator.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %record_locator.addr, metadata !13708, metadata !DIExpression()), !dbg !13709
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13710
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sfd, i32 0, i32 1), align 2, !dbg !13710
  %conv = zext i16 %1 to i64, !dbg !13710
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !13710
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !13711
  %3 = load i32, i32* %op.addr, align 4, !dbg !13712
  call void @mlxsw_reg_sfd_op_set(i8* %2, i32 %3) #8, !dbg !13713
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !13714
  %5 = load i32, i32* %record_locator.addr, align 4, !dbg !13715
  call void @mlxsw_reg_sfd_record_locator_set(i8* %4, i32 %5) #8, !dbg !13716
  ret void, !dbg !13717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_sfd_op(i1 zeroext %adding) #0 !dbg !13718 {
entry:
  %adding.addr = alloca i8, align 1
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  %0 = load i8, i8* %adding.addr, align 1, !dbg !13723
  %tobool = trunc i8 %0 to i1, !dbg !13723
  %1 = zext i1 %tobool to i64, !dbg !13723
  %cond = select i1 %tobool, i32 1, i32 2, !dbg !13723
  ret i32 %cond, !dbg !13724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_pack(i8* %payload, i32 %rec_index, i32 %policy, i8* %mac, i16 zeroext %fid_vid, i32 %action, i8 zeroext %local_port) #0 !dbg !13725 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %policy.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %fid_vid.addr = alloca i16, align 2
  %action.addr = alloca i32, align 4
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13728, metadata !DIExpression()), !dbg !13729
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !13730, metadata !DIExpression()), !dbg !13731
  store i32 %policy, i32* %policy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %policy.addr, metadata !13732, metadata !DIExpression()), !dbg !13733
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !13734, metadata !DIExpression()), !dbg !13735
  store i16 %fid_vid, i16* %fid_vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid_vid.addr, metadata !13736, metadata !DIExpression()), !dbg !13737
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !13738, metadata !DIExpression()), !dbg !13739
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !13740, metadata !DIExpression()), !dbg !13741
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13742
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !13743
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !13744
  %3 = load i32, i32* %action.addr, align 4, !dbg !13745
  call void @mlxsw_reg_sfd_rec_pack(i8* %0, i32 %1, i32 0, i8* %2, i32 %3) #8, !dbg !13746
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !13747
  %5 = load i32, i32* %rec_index.addr, align 4, !dbg !13748
  %conv = trunc i32 %5 to i16, !dbg !13748
  %6 = load i32, i32* %policy.addr, align 4, !dbg !13749
  call void @mlxsw_reg_sfd_rec_policy_set(i8* %4, i16 zeroext %conv, i32 %6) #8, !dbg !13750
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !13751
  %8 = load i32, i32* %rec_index.addr, align 4, !dbg !13752
  %conv1 = trunc i32 %8 to i16, !dbg !13752
  call void @mlxsw_reg_sfd_uc_sub_port_set(i8* %7, i16 zeroext %conv1, i32 0) #8, !dbg !13753
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !13754
  %10 = load i32, i32* %rec_index.addr, align 4, !dbg !13755
  %conv2 = trunc i32 %10 to i16, !dbg !13755
  %11 = load i16, i16* %fid_vid.addr, align 2, !dbg !13756
  %conv3 = zext i16 %11 to i32, !dbg !13756
  call void @mlxsw_reg_sfd_uc_fid_vid_set(i8* %9, i16 zeroext %conv2, i32 %conv3) #8, !dbg !13757
  %12 = load i8*, i8** %payload.addr, align 8, !dbg !13758
  %13 = load i32, i32* %rec_index.addr, align 4, !dbg !13759
  %conv4 = trunc i32 %13 to i16, !dbg !13759
  %14 = load i8, i8* %local_port.addr, align 1, !dbg !13760
  %conv5 = zext i8 %14 to i32, !dbg !13760
  call void @mlxsw_reg_sfd_uc_system_port_set(i8* %12, i16 zeroext %conv4, i32 %conv5) #8, !dbg !13761
  ret void, !dbg !13762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfd_num_rec_get(i8* %buf) #0 !dbg !13763 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13766, metadata !DIExpression()), !dbg !13767
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13767
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_num_rec_item to %struct.mlxsw_item*), i16 zeroext 0) #8, !dbg !13767
  ret i32 %call, !dbg !13767
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #5 !dbg !13768 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13772, metadata !DIExpression()), !dbg !13776
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13778, metadata !DIExpression()), !dbg !13779
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13780, metadata !DIExpression()), !dbg !13781
  %0 = load i64, i64* %size.addr, align 8, !dbg !13782
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13784
  br i1 %1, label %if.then, label %if.end447, !dbg !13785

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13786
  %tobool = icmp ne i64 %2, 0, !dbg !13786
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13789

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13790
  br label %return, !dbg !13790

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13791
  %cmp = icmp ult i64 %3, 4096, !dbg !13793
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13794

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13795
  br label %return, !dbg !13795

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub = sub i64 %4, 1, !dbg !13796
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13796
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13796

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub4 = sub i64 %6, 1, !dbg !13796
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13796
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13796

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub6 = sub i64 %8, 1, !dbg !13796
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13796
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13796

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13796

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub9 = sub i64 %9, 1, !dbg !13796
  %and = and i64 %sub9, -9223372036854775808, !dbg !13796
  %tobool10 = icmp ne i64 %and, 0, !dbg !13796
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13796

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13796

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub13 = sub i64 %10, 1, !dbg !13796
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13796
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13796
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13796

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13796

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub18 = sub i64 %11, 1, !dbg !13796
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13796
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13796
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13796

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13796

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub23 = sub i64 %12, 1, !dbg !13796
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13796
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13796
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13796

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13796

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub28 = sub i64 %13, 1, !dbg !13796
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13796
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13796
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13796

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13796

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub33 = sub i64 %14, 1, !dbg !13796
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13796
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13796
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13796

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13796

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub38 = sub i64 %15, 1, !dbg !13796
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13796
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13796
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13796

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13796

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub43 = sub i64 %16, 1, !dbg !13796
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13796
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13796
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13796

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13796

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub48 = sub i64 %17, 1, !dbg !13796
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13796
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13796
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13796

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13796

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub53 = sub i64 %18, 1, !dbg !13796
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13796
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13796
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13796

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13796

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub58 = sub i64 %19, 1, !dbg !13796
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13796
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13796
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13796

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13796

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub63 = sub i64 %20, 1, !dbg !13796
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13796
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13796
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13796

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13796

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub68 = sub i64 %21, 1, !dbg !13796
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13796
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13796
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13796

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13796

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub73 = sub i64 %22, 1, !dbg !13796
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13796
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13796
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13796

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13796

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub78 = sub i64 %23, 1, !dbg !13796
  %and79 = and i64 %sub78, 562949953421312, !dbg !13796
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13796
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13796

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13796

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub83 = sub i64 %24, 1, !dbg !13796
  %and84 = and i64 %sub83, 281474976710656, !dbg !13796
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13796
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13796

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13796

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub88 = sub i64 %25, 1, !dbg !13796
  %and89 = and i64 %sub88, 140737488355328, !dbg !13796
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13796
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13796

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13796

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub93 = sub i64 %26, 1, !dbg !13796
  %and94 = and i64 %sub93, 70368744177664, !dbg !13796
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13796
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13796

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13796

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub98 = sub i64 %27, 1, !dbg !13796
  %and99 = and i64 %sub98, 35184372088832, !dbg !13796
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13796
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13796

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13796

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub103 = sub i64 %28, 1, !dbg !13796
  %and104 = and i64 %sub103, 17592186044416, !dbg !13796
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13796
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13796

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13796

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub108 = sub i64 %29, 1, !dbg !13796
  %and109 = and i64 %sub108, 8796093022208, !dbg !13796
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13796
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13796

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13796

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub113 = sub i64 %30, 1, !dbg !13796
  %and114 = and i64 %sub113, 4398046511104, !dbg !13796
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13796
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13796

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13796

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub118 = sub i64 %31, 1, !dbg !13796
  %and119 = and i64 %sub118, 2199023255552, !dbg !13796
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13796
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13796

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13796

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub123 = sub i64 %32, 1, !dbg !13796
  %and124 = and i64 %sub123, 1099511627776, !dbg !13796
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13796
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13796

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13796

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub128 = sub i64 %33, 1, !dbg !13796
  %and129 = and i64 %sub128, 549755813888, !dbg !13796
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13796
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13796

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13796

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub133 = sub i64 %34, 1, !dbg !13796
  %and134 = and i64 %sub133, 274877906944, !dbg !13796
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13796
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13796

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13796

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub138 = sub i64 %35, 1, !dbg !13796
  %and139 = and i64 %sub138, 137438953472, !dbg !13796
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13796
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13796

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13796

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub143 = sub i64 %36, 1, !dbg !13796
  %and144 = and i64 %sub143, 68719476736, !dbg !13796
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13796
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13796

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13796

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub148 = sub i64 %37, 1, !dbg !13796
  %and149 = and i64 %sub148, 34359738368, !dbg !13796
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13796
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13796

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13796

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub153 = sub i64 %38, 1, !dbg !13796
  %and154 = and i64 %sub153, 17179869184, !dbg !13796
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13796
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13796

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13796

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub158 = sub i64 %39, 1, !dbg !13796
  %and159 = and i64 %sub158, 8589934592, !dbg !13796
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13796
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13796

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13796

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub163 = sub i64 %40, 1, !dbg !13796
  %and164 = and i64 %sub163, 4294967296, !dbg !13796
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13796
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13796

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13796

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub168 = sub i64 %41, 1, !dbg !13796
  %and169 = and i64 %sub168, 2147483648, !dbg !13796
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13796
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13796

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13796

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub173 = sub i64 %42, 1, !dbg !13796
  %and174 = and i64 %sub173, 1073741824, !dbg !13796
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13796
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13796

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13796

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub178 = sub i64 %43, 1, !dbg !13796
  %and179 = and i64 %sub178, 536870912, !dbg !13796
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13796
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13796

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13796

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub183 = sub i64 %44, 1, !dbg !13796
  %and184 = and i64 %sub183, 268435456, !dbg !13796
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13796
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13796

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13796

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub188 = sub i64 %45, 1, !dbg !13796
  %and189 = and i64 %sub188, 134217728, !dbg !13796
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13796
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13796

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13796

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub193 = sub i64 %46, 1, !dbg !13796
  %and194 = and i64 %sub193, 67108864, !dbg !13796
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13796
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13796

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13796

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub198 = sub i64 %47, 1, !dbg !13796
  %and199 = and i64 %sub198, 33554432, !dbg !13796
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13796
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13796

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13796

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub203 = sub i64 %48, 1, !dbg !13796
  %and204 = and i64 %sub203, 16777216, !dbg !13796
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13796
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13796

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13796

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub208 = sub i64 %49, 1, !dbg !13796
  %and209 = and i64 %sub208, 8388608, !dbg !13796
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13796
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13796

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13796

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub213 = sub i64 %50, 1, !dbg !13796
  %and214 = and i64 %sub213, 4194304, !dbg !13796
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13796
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13796

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13796

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub218 = sub i64 %51, 1, !dbg !13796
  %and219 = and i64 %sub218, 2097152, !dbg !13796
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13796
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13796

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13796

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub223 = sub i64 %52, 1, !dbg !13796
  %and224 = and i64 %sub223, 1048576, !dbg !13796
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13796
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13796

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13796

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub228 = sub i64 %53, 1, !dbg !13796
  %and229 = and i64 %sub228, 524288, !dbg !13796
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13796
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13796

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13796

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub233 = sub i64 %54, 1, !dbg !13796
  %and234 = and i64 %sub233, 262144, !dbg !13796
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13796
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13796

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13796

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub238 = sub i64 %55, 1, !dbg !13796
  %and239 = and i64 %sub238, 131072, !dbg !13796
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13796
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13796

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13796

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub243 = sub i64 %56, 1, !dbg !13796
  %and244 = and i64 %sub243, 65536, !dbg !13796
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13796
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13796

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13796

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub248 = sub i64 %57, 1, !dbg !13796
  %and249 = and i64 %sub248, 32768, !dbg !13796
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13796
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13796

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13796

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub253 = sub i64 %58, 1, !dbg !13796
  %and254 = and i64 %sub253, 16384, !dbg !13796
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13796
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13796

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13796

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub258 = sub i64 %59, 1, !dbg !13796
  %and259 = and i64 %sub258, 8192, !dbg !13796
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13796
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13796

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13796

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub263 = sub i64 %60, 1, !dbg !13796
  %and264 = and i64 %sub263, 4096, !dbg !13796
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13796
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13796

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13796

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub268 = sub i64 %61, 1, !dbg !13796
  %and269 = and i64 %sub268, 2048, !dbg !13796
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13796
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13796

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13796

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub273 = sub i64 %62, 1, !dbg !13796
  %and274 = and i64 %sub273, 1024, !dbg !13796
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13796
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13796

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13796

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub278 = sub i64 %63, 1, !dbg !13796
  %and279 = and i64 %sub278, 512, !dbg !13796
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13796
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13796

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13796

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub283 = sub i64 %64, 1, !dbg !13796
  %and284 = and i64 %sub283, 256, !dbg !13796
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13796
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13796

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13796

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub288 = sub i64 %65, 1, !dbg !13796
  %and289 = and i64 %sub288, 128, !dbg !13796
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13796
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13796

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13796

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub293 = sub i64 %66, 1, !dbg !13796
  %and294 = and i64 %sub293, 64, !dbg !13796
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13796
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13796

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13796

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub298 = sub i64 %67, 1, !dbg !13796
  %and299 = and i64 %sub298, 32, !dbg !13796
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13796
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13796

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13796

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub303 = sub i64 %68, 1, !dbg !13796
  %and304 = and i64 %sub303, 16, !dbg !13796
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13796
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13796

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13796

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub308 = sub i64 %69, 1, !dbg !13796
  %and309 = and i64 %sub308, 8, !dbg !13796
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13796
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13796

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13796

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub313 = sub i64 %70, 1, !dbg !13796
  %and314 = and i64 %sub313, 4, !dbg !13796
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13796
  %71 = zext i1 %tobool315 to i64, !dbg !13796
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13796
  br label %cond.end, !dbg !13796

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13796
  br label %cond.end317, !dbg !13796

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13796
  br label %cond.end319, !dbg !13796

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13796
  br label %cond.end321, !dbg !13796

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13796
  br label %cond.end323, !dbg !13796

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13796
  br label %cond.end325, !dbg !13796

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13796
  br label %cond.end327, !dbg !13796

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13796
  br label %cond.end329, !dbg !13796

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13796
  br label %cond.end331, !dbg !13796

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13796
  br label %cond.end333, !dbg !13796

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13796
  br label %cond.end335, !dbg !13796

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13796
  br label %cond.end337, !dbg !13796

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13796
  br label %cond.end339, !dbg !13796

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13796
  br label %cond.end341, !dbg !13796

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13796
  br label %cond.end343, !dbg !13796

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13796
  br label %cond.end345, !dbg !13796

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13796
  br label %cond.end347, !dbg !13796

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13796
  br label %cond.end349, !dbg !13796

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13796
  br label %cond.end351, !dbg !13796

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13796
  br label %cond.end353, !dbg !13796

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13796
  br label %cond.end355, !dbg !13796

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13796
  br label %cond.end357, !dbg !13796

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13796
  br label %cond.end359, !dbg !13796

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13796
  br label %cond.end361, !dbg !13796

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13796
  br label %cond.end363, !dbg !13796

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13796
  br label %cond.end365, !dbg !13796

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13796
  br label %cond.end367, !dbg !13796

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13796
  br label %cond.end369, !dbg !13796

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13796
  br label %cond.end371, !dbg !13796

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13796
  br label %cond.end373, !dbg !13796

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13796
  br label %cond.end375, !dbg !13796

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13796
  br label %cond.end377, !dbg !13796

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13796
  br label %cond.end379, !dbg !13796

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13796
  br label %cond.end381, !dbg !13796

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13796
  br label %cond.end383, !dbg !13796

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13796
  br label %cond.end385, !dbg !13796

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13796
  br label %cond.end387, !dbg !13796

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13796
  br label %cond.end389, !dbg !13796

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13796
  br label %cond.end391, !dbg !13796

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13796
  br label %cond.end393, !dbg !13796

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13796
  br label %cond.end395, !dbg !13796

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13796
  br label %cond.end397, !dbg !13796

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13796
  br label %cond.end399, !dbg !13796

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13796
  br label %cond.end401, !dbg !13796

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13796
  br label %cond.end403, !dbg !13796

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13796
  br label %cond.end405, !dbg !13796

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13796
  br label %cond.end407, !dbg !13796

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13796
  br label %cond.end409, !dbg !13796

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13796
  br label %cond.end411, !dbg !13796

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13796
  br label %cond.end413, !dbg !13796

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13796
  br label %cond.end415, !dbg !13796

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13796
  br label %cond.end417, !dbg !13796

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13796
  br label %cond.end419, !dbg !13796

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13796
  br label %cond.end421, !dbg !13796

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13796
  br label %cond.end423, !dbg !13796

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13796
  br label %cond.end425, !dbg !13796

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13796
  br label %cond.end427, !dbg !13796

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13796
  br label %cond.end429, !dbg !13796

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13796
  br label %cond.end431, !dbg !13796

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13796
  br label %cond.end433, !dbg !13796

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13796
  br label %cond.end435, !dbg !13796

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13796
  br label %cond.end437, !dbg !13796

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13796
  br label %cond.end440, !dbg !13796

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13796

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13796
  br label %cond.end444, !dbg !13796

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13796
  %sub443 = sub i64 %72, 1, !dbg !13796
  %call = call i32 @__ilog2_u64(i64 %sub443) #10, !dbg !13796
  br label %cond.end444, !dbg !13796

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13796
  %sub446 = sub i32 %cond445, 12, !dbg !13797
  %add = add i32 %sub446, 1, !dbg !13798
  store i32 %add, i32* %retval, align 4, !dbg !13799
  br label %return, !dbg !13799

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13800
  %dec = add i64 %73, -1, !dbg !13800
  store i64 %dec, i64* %size.addr, align 8, !dbg !13800
  %74 = load i64, i64* %size.addr, align 8, !dbg !13801
  %shr = lshr i64 %74, 12, !dbg !13801
  store i64 %shr, i64* %size.addr, align 8, !dbg !13801
  %75 = load i64, i64* %size.addr, align 8, !dbg !13802
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13779
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13803
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13804
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !13803, !srcloc !13805
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13803
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13806
  %add.i = add i32 %79, 1, !dbg !13807
  store i32 %add.i, i32* %retval, align 4, !dbg !13808
  br label %return, !dbg !13808

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13809
  ret i32 %80, !dbg !13809
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #5 !dbg !13810 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13772, metadata !DIExpression()), !dbg !13814
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13778, metadata !DIExpression()), !dbg !13816
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13817, metadata !DIExpression()), !dbg !13818
  %0 = load i64, i64* %n.addr, align 8, !dbg !13819
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13816
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13820
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13821
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !13820, !srcloc !13805
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13820
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13822
  %add.i = add i32 %4, 1, !dbg !13823
  %sub = sub i32 %add.i, 1, !dbg !13824
  ret i32 %sub, !dbg !13825
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !13826 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13830, metadata !DIExpression()), !dbg !13831
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13832, metadata !DIExpression()), !dbg !13833
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13834, metadata !DIExpression()), !dbg !13835
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13836, metadata !DIExpression()), !dbg !13837
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13838
  ret i8* %0, !dbg !13839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_op_set(i8* %buf, i32 %val) #0 !dbg !13840 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13841, metadata !DIExpression()), !dbg !13842
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13843, metadata !DIExpression()), !dbg !13842
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13842
  %1 = load i32, i32* %val.addr, align 4, !dbg !13842
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_op_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !13842
  ret void, !dbg !13842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_record_locator_set(i8* %buf, i32 %val) #0 !dbg !13844 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13845, metadata !DIExpression()), !dbg !13846
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13847, metadata !DIExpression()), !dbg !13846
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13846
  %1 = load i32, i32* %val.addr, align 4, !dbg !13846
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_record_locator_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !13846
  ret void, !dbg !13846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_rec_pack(i8* %payload, i32 %rec_index, i32 %rec_type, i8* %mac, i32 %action) #0 !dbg !13848 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %rec_type.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %action.addr = alloca i32, align 4
  %num_rec = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13851, metadata !DIExpression()), !dbg !13852
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !13853, metadata !DIExpression()), !dbg !13854
  store i32 %rec_type, i32* %rec_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_type.addr, metadata !13855, metadata !DIExpression()), !dbg !13856
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !13857, metadata !DIExpression()), !dbg !13858
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.declare(metadata i8* %num_rec, metadata !13861, metadata !DIExpression()), !dbg !13862
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13863
  %call = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %0) #8, !dbg !13864
  %conv = trunc i32 %call to i8, !dbg !13864
  store i8 %conv, i8* %num_rec, align 1, !dbg !13862
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !13865
  %2 = load i8, i8* %num_rec, align 1, !dbg !13867
  %conv1 = zext i8 %2 to i32, !dbg !13867
  %cmp = icmp sge i32 %1, %conv1, !dbg !13868
  br i1 %cmp, label %if.then, label %if.end, !dbg !13869

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !13870
  %4 = load i32, i32* %rec_index.addr, align 4, !dbg !13871
  %add = add i32 %4, 1, !dbg !13872
  call void @mlxsw_reg_sfd_num_rec_set(i8* %3, i32 %add) #8, !dbg !13873
  br label %if.end, !dbg !13873

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !13874
  %6 = load i32, i32* %rec_index.addr, align 4, !dbg !13875
  %conv3 = trunc i32 %6 to i16, !dbg !13875
  call void @mlxsw_reg_sfd_rec_swid_set(i8* %5, i16 zeroext %conv3, i32 0) #8, !dbg !13876
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !13877
  %8 = load i32, i32* %rec_index.addr, align 4, !dbg !13878
  %conv4 = trunc i32 %8 to i16, !dbg !13878
  %9 = load i32, i32* %rec_type.addr, align 4, !dbg !13879
  call void @mlxsw_reg_sfd_rec_type_set(i8* %7, i16 zeroext %conv4, i32 %9) #8, !dbg !13880
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !13881
  %11 = load i32, i32* %rec_index.addr, align 4, !dbg !13882
  %conv5 = trunc i32 %11 to i16, !dbg !13882
  %12 = load i8*, i8** %mac.addr, align 8, !dbg !13883
  call void @mlxsw_reg_sfd_rec_mac_memcpy_to(i8* %10, i16 zeroext %conv5, i8* %12) #8, !dbg !13884
  %13 = load i8*, i8** %payload.addr, align 8, !dbg !13885
  %14 = load i32, i32* %rec_index.addr, align 4, !dbg !13886
  %conv6 = trunc i32 %14 to i16, !dbg !13886
  %15 = load i32, i32* %action.addr, align 4, !dbg !13887
  call void @mlxsw_reg_sfd_rec_action_set(i8* %13, i16 zeroext %conv6, i32 %15) #8, !dbg !13888
  ret void, !dbg !13889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_rec_policy_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !13890 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13893, metadata !DIExpression()), !dbg !13894
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13895, metadata !DIExpression()), !dbg !13894
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13896, metadata !DIExpression()), !dbg !13894
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13894
  %1 = load i16, i16* %index.addr, align 2, !dbg !13894
  %2 = load i32, i32* %val.addr, align 4, !dbg !13894
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_rec_policy_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !13894
  ret void, !dbg !13894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_sub_port_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !13897 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13898, metadata !DIExpression()), !dbg !13899
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13900, metadata !DIExpression()), !dbg !13899
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13901, metadata !DIExpression()), !dbg !13899
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13899
  %1 = load i16, i16* %index.addr, align 2, !dbg !13899
  %2 = load i32, i32* %val.addr, align 4, !dbg !13899
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_sub_port_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !13899
  ret void, !dbg !13899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_fid_vid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !13902 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13903, metadata !DIExpression()), !dbg !13904
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13905, metadata !DIExpression()), !dbg !13904
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13906, metadata !DIExpression()), !dbg !13904
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13904
  %1 = load i16, i16* %index.addr, align 2, !dbg !13904
  %2 = load i32, i32* %val.addr, align 4, !dbg !13904
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_fid_vid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !13904
  ret void, !dbg !13904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_system_port_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !13907 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13908, metadata !DIExpression()), !dbg !13909
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13910, metadata !DIExpression()), !dbg !13909
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13911, metadata !DIExpression()), !dbg !13909
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13909
  %1 = load i16, i16* %index.addr, align 2, !dbg !13909
  %2 = load i32, i32* %val.addr, align 4, !dbg !13909
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_system_port_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !13909
  ret void, !dbg !13909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_num_rec_set(i8* %buf, i32 %val) #0 !dbg !13912 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13913, metadata !DIExpression()), !dbg !13914
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13915, metadata !DIExpression()), !dbg !13914
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13914
  %1 = load i32, i32* %val.addr, align 4, !dbg !13914
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_num_rec_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !13914
  ret void, !dbg !13914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_rec_swid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !13916 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13917, metadata !DIExpression()), !dbg !13918
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13919, metadata !DIExpression()), !dbg !13918
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13920, metadata !DIExpression()), !dbg !13918
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13918
  %1 = load i16, i16* %index.addr, align 2, !dbg !13918
  %2 = load i32, i32* %val.addr, align 4, !dbg !13918
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_rec_swid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !13918
  ret void, !dbg !13918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_rec_type_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !13921 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13922, metadata !DIExpression()), !dbg !13923
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13924, metadata !DIExpression()), !dbg !13923
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13925, metadata !DIExpression()), !dbg !13923
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13923
  %1 = load i16, i16* %index.addr, align 2, !dbg !13923
  %2 = load i32, i32* %val.addr, align 4, !dbg !13923
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_rec_type_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !13923
  ret void, !dbg !13923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_rec_mac_memcpy_to(i8* %buf, i16 zeroext %index, i8* %src) #0 !dbg !13926 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %src.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13929, metadata !DIExpression()), !dbg !13930
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13931, metadata !DIExpression()), !dbg !13930
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !13932, metadata !DIExpression()), !dbg !13930
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13930
  %1 = load i8*, i8** %src.addr, align 8, !dbg !13930
  %2 = load i16, i16* %index.addr, align 2, !dbg !13930
  call void @__mlxsw_item_memcpy_to(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_reg_sfd_rec_mac_item, i16 zeroext %2) #8, !dbg !13930
  ret void, !dbg !13930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_rec_action_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !13933 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13934, metadata !DIExpression()), !dbg !13935
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13936, metadata !DIExpression()), !dbg !13935
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13937, metadata !DIExpression()), !dbg !13935
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13935
  %1 = load i16, i16* %index.addr, align 2, !dbg !13935
  %2 = load i32, i32* %val.addr, align 4, !dbg !13935
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_rec_action_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !13935
  ret void, !dbg !13935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_memcpy_to(i8* %buf, i8* %src, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !13938 {
entry:
  %buf.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13941, metadata !DIExpression()), !dbg !13942
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !13943, metadata !DIExpression()), !dbg !13944
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !13945, metadata !DIExpression()), !dbg !13946
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13947, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13949, metadata !DIExpression()), !dbg !13950
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13951
  %1 = load i16, i16* %index.addr, align 2, !dbg !13952
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #8, !dbg !13953
  store i32 %call, i32* %offset, align 4, !dbg !13950
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13954
  %3 = load i32, i32* %offset, align 4, !dbg !13955
  %idxprom = zext i32 %3 to i64, !dbg !13954
  %arrayidx = getelementptr i8, i8* %2, i64 %idxprom, !dbg !13954
  %4 = load i8*, i8** %src.addr, align 8, !dbg !13956
  %5 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13957
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %5, i32 0, i32 6, !dbg !13958
  %bytes = bitcast %union.anon.168* %size to i16*, !dbg !13959
  %6 = load i16, i16* %bytes, align 2, !dbg !13959
  %conv = zext i16 %6 to i64, !dbg !13957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %4, i64 %conv, i1 false), !dbg !13960
  ret void, !dbg !13961
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_get32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !13962 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13965, metadata !DIExpression()), !dbg !13966
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !13967, metadata !DIExpression()), !dbg !13968
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13969, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13971, metadata !DIExpression()), !dbg !13972
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13973
  %1 = load i16, i16* %index.addr, align 2, !dbg !13974
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #8, !dbg !13975
  store i32 %call, i32* %offset, align 4, !dbg !13972
  call void @llvm.dbg.declare(metadata i32** %b, metadata !13976, metadata !DIExpression()), !dbg !13977
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13978
  %3 = bitcast i8* %2 to i32*, !dbg !13979
  store i32* %3, i32** %b, align 8, !dbg !13977
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13980, metadata !DIExpression()), !dbg !13981
  %4 = load i32*, i32** %b, align 8, !dbg !13982
  %5 = load i32, i32* %offset, align 4, !dbg !13982
  %idxprom = zext i32 %5 to i64, !dbg !13982
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !13982
  %6 = load i32, i32* %arrayidx, align 4, !dbg !13982
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !13982
  br i1 %7, label %cond.true, label %cond.false, !dbg !13982

cond.true:                                        ; preds = %entry
  %8 = load i32*, i32** %b, align 8, !dbg !13982
  %9 = load i32, i32* %offset, align 4, !dbg !13982
  %idxprom1 = zext i32 %9 to i64, !dbg !13982
  %arrayidx2 = getelementptr i32, i32* %8, i64 %idxprom1, !dbg !13982
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !13982
  %and = and i32 %10, 255, !dbg !13982
  %shl = shl i32 %and, 24, !dbg !13982
  %11 = load i32*, i32** %b, align 8, !dbg !13982
  %12 = load i32, i32* %offset, align 4, !dbg !13982
  %idxprom3 = zext i32 %12 to i64, !dbg !13982
  %arrayidx4 = getelementptr i32, i32* %11, i64 %idxprom3, !dbg !13982
  %13 = load i32, i32* %arrayidx4, align 4, !dbg !13982
  %and5 = and i32 %13, 65280, !dbg !13982
  %shl6 = shl i32 %and5, 8, !dbg !13982
  %or = or i32 %shl, %shl6, !dbg !13982
  %14 = load i32*, i32** %b, align 8, !dbg !13982
  %15 = load i32, i32* %offset, align 4, !dbg !13982
  %idxprom7 = zext i32 %15 to i64, !dbg !13982
  %arrayidx8 = getelementptr i32, i32* %14, i64 %idxprom7, !dbg !13982
  %16 = load i32, i32* %arrayidx8, align 4, !dbg !13982
  %and9 = and i32 %16, 16711680, !dbg !13982
  %shr = lshr i32 %and9, 8, !dbg !13982
  %or10 = or i32 %or, %shr, !dbg !13982
  %17 = load i32*, i32** %b, align 8, !dbg !13982
  %18 = load i32, i32* %offset, align 4, !dbg !13982
  %idxprom11 = zext i32 %18 to i64, !dbg !13982
  %arrayidx12 = getelementptr i32, i32* %17, i64 %idxprom11, !dbg !13982
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !13982
  %and13 = and i32 %19, -16777216, !dbg !13982
  %shr14 = lshr i32 %and13, 24, !dbg !13982
  %or15 = or i32 %or10, %shr14, !dbg !13982
  br label %cond.end, !dbg !13982

cond.false:                                       ; preds = %entry
  %20 = load i32*, i32** %b, align 8, !dbg !13982
  %21 = load i32, i32* %offset, align 4, !dbg !13982
  %idxprom16 = zext i32 %21 to i64, !dbg !13982
  %arrayidx17 = getelementptr i32, i32* %20, i64 %idxprom16, !dbg !13982
  %22 = load i32, i32* %arrayidx17, align 4, !dbg !13982
  %call18 = call i32 @__fswab32(i32 %22) #10, !dbg !13982
  br label %cond.end, !dbg !13982

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or15, %cond.true ], [ %call18, %cond.false ], !dbg !13982
  store i32 %cond, i32* %tmp, align 4, !dbg !13983
  %23 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13984
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %23, i32 0, i32 3, !dbg !13985
  %24 = load i8, i8* %shift, align 2, !dbg !13985
  %conv = zext i8 %24 to i32, !dbg !13984
  %25 = load i32, i32* %tmp, align 4, !dbg !13986
  %shr19 = lshr i32 %25, %conv, !dbg !13986
  store i32 %shr19, i32* %tmp, align 4, !dbg !13986
  %26 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13987
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %26, i32 0, i32 6, !dbg !13987
  %bits = bitcast %union.anon.168* %size to i8*, !dbg !13987
  %27 = load i8, i8* %bits, align 2, !dbg !13987
  %conv20 = zext i8 %27 to i32, !dbg !13987
  %sub = sub i32 %conv20, 1, !dbg !13987
  %sub21 = sub i32 63, %sub, !dbg !13987
  %sh_prom = zext i32 %sub21 to i64, !dbg !13987
  %shr22 = lshr i64 -1, %sh_prom, !dbg !13987
  %and23 = and i64 -1, %shr22, !dbg !13987
  %add = add i64 0, %and23, !dbg !13987
  %28 = load i32, i32* %tmp, align 4, !dbg !13988
  %conv24 = zext i32 %28 to i64, !dbg !13988
  %and25 = and i64 %conv24, %add, !dbg !13988
  %conv26 = trunc i64 %and25 to i32, !dbg !13988
  store i32 %conv26, i32* %tmp, align 4, !dbg !13988
  %29 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13989
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %29, i32 0, i32 5, !dbg !13991
  %30 = load i8, i8* %no_real_shift, align 8, !dbg !13991
  %tobool = trunc i8 %30 to i1, !dbg !13991
  br i1 %tobool, label %if.then, label %if.end, !dbg !13992

if.then:                                          ; preds = %cond.end
  %31 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13993
  %shift27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %31, i32 0, i32 3, !dbg !13994
  %32 = load i8, i8* %shift27, align 2, !dbg !13994
  %conv28 = zext i8 %32 to i32, !dbg !13993
  %33 = load i32, i32* %tmp, align 4, !dbg !13995
  %shl29 = shl i32 %33, %conv28, !dbg !13995
  store i32 %shl29, i32* %tmp, align 4, !dbg !13995
  br label %if.end, !dbg !13996

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i32, i32* %tmp, align 4, !dbg !13997
  ret i32 %34, !dbg !13998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_sp_port_mdb_del(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_mid* %mid) #0 !dbg !13999 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mid.addr = alloca %struct.mlxsw_sp_mid*, align 8
  %dev = alloca %struct.net_device*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14002, metadata !DIExpression()), !dbg !14003
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !14004, metadata !DIExpression()), !dbg !14005
  store %struct.mlxsw_sp_mid* %mid, %struct.mlxsw_sp_mid** %mid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid.addr, metadata !14006, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !14008, metadata !DIExpression()), !dbg !14009
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14010
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 0, !dbg !14011
  %1 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !14011
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !14009
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14012, metadata !DIExpression()), !dbg !14013
  %2 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !14014
  %bridge_device = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %2, i32 0, i32 1, !dbg !14016
  %3 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !14016
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %3, i32 0, i32 4, !dbg !14017
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !14017
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !14017
  %bf.clear = and i8 %bf.lshr, 1, !dbg !14017
  %conv = zext i8 %bf.clear to i32, !dbg !14014
  %tobool = icmp ne i32 %conv, 0, !dbg !14014
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !14018

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !14019
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %4, i32 0, i32 7, !dbg !14020
  %5 = load i8, i8* %mrouter, align 8, !dbg !14020
  %tobool2 = trunc i8 %5 to i1, !dbg !14020
  br i1 %tobool2, label %if.end6, label %if.then, !dbg !14021

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14022
  %7 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14024
  %mid3 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %7, i32 0, i32 3, !dbg !14025
  %8 = load i16, i16* %mid3, align 8, !dbg !14025
  %call = call i32 @mlxsw_sp_port_smid_set(%struct.mlxsw_sp_port* %6, i16 zeroext %8, i1 zeroext false) #8, !dbg !14026
  store i32 %call, i32* %err, align 4, !dbg !14027
  %9 = load i32, i32* %err, align 4, !dbg !14028
  %tobool4 = icmp ne i32 %9, 0, !dbg !14028
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !14030

if.then5:                                         ; preds = %if.then
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14031
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0)) #12, !dbg !14032
  br label %if.end, !dbg !14032

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end6, !dbg !14033

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14034
  %12 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14035
  %call7 = call i32 @mlxsw_sp_port_remove_from_mid(%struct.mlxsw_sp_port* %11, %struct.mlxsw_sp_mid* %12) #8, !dbg !14036
  store i32 %call7, i32* %err, align 4, !dbg !14037
  %13 = load i32, i32* %err, align 4, !dbg !14038
  %tobool8 = icmp ne i32 %13, 0, !dbg !14038
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14040

if.then9:                                         ; preds = %if.end6
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14041
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i64 0, i64 0)) #12, !dbg !14042
  br label %if.end10, !dbg !14042

if.end10:                                         ; preds = %if.then9, %if.end6
  %15 = load i32, i32* %err, align 4, !dbg !14043
  ret i32 %15, !dbg !14044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_smid_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %mid_idx, i1 zeroext %add) #0 !dbg !14045 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !14048
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !14051
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !14052
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !14053
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !14054
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !14056
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !14058
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !14061
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !14062
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !14063
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !14064
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !14065
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !14066
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !14067
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !14068
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mid_idx.addr = alloca i16, align 2
  %add.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %smid_pl = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14069, metadata !DIExpression()), !dbg !14070
  store i16 %mid_idx, i16* %mid_idx.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid_idx.addr, metadata !14071, metadata !DIExpression()), !dbg !14072
  %frombool = zext i1 %add to i8
  store i8 %frombool, i8* %add.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %add.addr, metadata !14073, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !14075, metadata !DIExpression()), !dbg !14076
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14077
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !14078
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !14078
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14076
  call void @llvm.dbg.declare(metadata i8** %smid_pl, metadata !14079, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14081, metadata !DIExpression()), !dbg !14082
  store i64 576, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !14083
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !14084
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !14085

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14086
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !14087
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14088

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !14089
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !14090
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !14091
  %call.i.i = call i32 @get_order(i64 %7) #10, !dbg !14092
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14065
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !14093
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14094
  %10 = load i32, i32* %order.i.i, align 4, !dbg !14095
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14096
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14097
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14098
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !14099
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14099
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14099
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14099
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !14099
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14100
  br label %kmalloc.exit, !dbg !14100

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !14101
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14102
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !14102
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14103

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14104
  br label %kmalloc_index.exit.i, !dbg !14104

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14105
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !14106
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14107

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14108
  br label %kmalloc_index.exit.i, !dbg !14108

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14109
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !14110
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14111

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14112
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !14113
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14114

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14115
  br label %kmalloc_index.exit.i, !dbg !14115

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14116
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !14117
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14118

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14119
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !14120
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14121

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14122
  br label %kmalloc_index.exit.i, !dbg !14122

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14123
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !14124
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14125

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14126
  br label %kmalloc_index.exit.i, !dbg !14126

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14127
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !14128
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14129

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14130
  br label %kmalloc_index.exit.i, !dbg !14130

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14131
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !14132
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14133

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14134
  br label %kmalloc_index.exit.i, !dbg !14134

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14135
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !14136
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14137

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14138
  br label %kmalloc_index.exit.i, !dbg !14138

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14139
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !14140
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14141

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14142
  br label %kmalloc_index.exit.i, !dbg !14142

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14143
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !14144
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14145

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14146
  br label %kmalloc_index.exit.i, !dbg !14146

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14147
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !14148
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14149

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14150
  br label %kmalloc_index.exit.i, !dbg !14150

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14151
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !14152
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14153

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14154
  br label %kmalloc_index.exit.i, !dbg !14154

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14155
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !14156
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14157

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14158
  br label %kmalloc_index.exit.i, !dbg !14158

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14159
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !14160
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14161

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14162
  br label %kmalloc_index.exit.i, !dbg !14162

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14163
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !14164
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14165

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14166
  br label %kmalloc_index.exit.i, !dbg !14166

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14167
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !14168
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14169

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14170
  br label %kmalloc_index.exit.i, !dbg !14170

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14171
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !14172
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14173

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14174
  br label %kmalloc_index.exit.i, !dbg !14174

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14175
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !14176
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14177

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14178
  br label %kmalloc_index.exit.i, !dbg !14178

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14179
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !14180
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14181

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14182
  br label %kmalloc_index.exit.i, !dbg !14182

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14183
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !14184
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14185

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14186
  br label %kmalloc_index.exit.i, !dbg !14186

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14187
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !14188
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14189

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14190
  br label %kmalloc_index.exit.i, !dbg !14190

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14191
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !14192
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14193

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14194
  br label %kmalloc_index.exit.i, !dbg !14194

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14195
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !14196
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14197

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14198
  br label %kmalloc_index.exit.i, !dbg !14198

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14199
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !14200
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14201

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14202
  br label %kmalloc_index.exit.i, !dbg !14202

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14203
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !14204
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14205

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14206
  br label %kmalloc_index.exit.i, !dbg !14206

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14207
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !14208
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14209

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14210
  br label %kmalloc_index.exit.i, !dbg !14210

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14211
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !14212
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14213

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14214
  br label %kmalloc_index.exit.i, !dbg !14214

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14215
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !14216
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14217

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14218
  br label %kmalloc_index.exit.i, !dbg !14218

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !14219, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !14220, !srcloc !12241
  unreachable, !dbg !14221

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !14222
  store i32 %45, i32* %index.i, align 4, !dbg !14223
  %46 = load i32, i32* %index.i, align 4, !dbg !14224
  %tobool.i = icmp ne i32 %46, 0, !dbg !14224
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14225

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14226
  br label %kmalloc.exit, !dbg !14226

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !14227
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14228
  %and.i.i = and i32 %48, 17, !dbg !14228
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14228
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14228
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14228
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14228
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14229

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14230
  br label %kmalloc_type.exit.i, !dbg !14230

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14231
  %and2.i.i = and i32 %49, 1, !dbg !14232
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14231
  %50 = zext i1 %tobool3.i.i to i64, !dbg !14231
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14231
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14233
  br label %kmalloc_type.exit.i, !dbg !14233

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !14234
  %idxprom.i = zext i32 %51 to i64, !dbg !14235
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14235
  %52 = load i32, i32* %index.i, align 4, !dbg !14236
  %idxprom6.i = zext i32 %52 to i64, !dbg !14235
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14235
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14235
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !14237
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !14238
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14239
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14240
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !14241
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14241
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14241
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14241
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !14241
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14053
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14242
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !14243
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14244
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14245
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !14246
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14247
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !14248
  store i8* %62, i8** %retval.i, align 8, !dbg !14249
  br label %kmalloc.exit, !dbg !14249

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !14250
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !14251
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !14252
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14252
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14252
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14252
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !14252
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14253
  br label %kmalloc.exit, !dbg !14253

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !14254
  store i8* %65, i8** %smid_pl, align 8, !dbg !14255
  %66 = load i8*, i8** %smid_pl, align 8, !dbg !14256
  %tobool = icmp ne i8* %66, null, !dbg !14256
  br i1 %tobool, label %if.end, label %if.then, !dbg !14258

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !14259
  br label %return, !dbg !14259

if.end:                                           ; preds = %kmalloc.exit
  %67 = load i8*, i8** %smid_pl, align 8, !dbg !14260
  %68 = load i16, i16* %mid_idx.addr, align 2, !dbg !14261
  %69 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14262
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %69, i32 0, i32 3, !dbg !14263
  %70 = load i8, i8* %local_port, align 8, !dbg !14263
  %71 = load i8, i8* %add.addr, align 1, !dbg !14264
  %tobool2 = trunc i8 %71 to i1, !dbg !14264
  call void @mlxsw_reg_smid_pack(i8* %67, i16 zeroext %68, i8 zeroext %70, i1 zeroext %tobool2) #8, !dbg !14265
  %72 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14266
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %72, i32 0, i32 1, !dbg !14267
  %73 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14267
  %74 = load i8*, i8** %smid_pl, align 8, !dbg !14268
  %call3 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %73, %struct.mlxsw_reg_info* @mlxsw_reg_smid, i8* %74) #8, !dbg !14269
  store i32 %call3, i32* %err, align 4, !dbg !14270
  %75 = load i8*, i8** %smid_pl, align 8, !dbg !14271
  call void @kfree(i8* %75) #8, !dbg !14272
  %76 = load i32, i32* %err, align 4, !dbg !14273
  store i32 %76, i32* %retval, align 4, !dbg !14274
  br label %return, !dbg !14274

return:                                           ; preds = %if.end, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !14275
  ret i32 %77, !dbg !14275
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_remove_from_mid(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_mid* %mid) #0 !dbg !14276 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mid.addr = alloca %struct.mlxsw_sp_mid*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14279, metadata !DIExpression()), !dbg !14280
  store %struct.mlxsw_sp_mid* %mid, %struct.mlxsw_sp_mid** %mid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid.addr, metadata !14281, metadata !DIExpression()), !dbg !14282
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !14283, metadata !DIExpression()), !dbg !14284
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14285
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !14286
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !14286
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14284
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14287, metadata !DIExpression()), !dbg !14288
  store i32 0, i32* %err, align 4, !dbg !14288
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14289
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !14290
  %3 = load i8, i8* %local_port, align 8, !dbg !14290
  %conv = zext i8 %3 to i64, !dbg !14289
  %4 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14291
  %ports_in_mid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %4, i32 0, i32 5, !dbg !14292
  %5 = load i64*, i64** %ports_in_mid, align 8, !dbg !14292
  call void @clear_bit(i64 %conv, i64* %5) #8, !dbg !14293
  %6 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14294
  %ports_in_mid2 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %6, i32 0, i32 5, !dbg !14296
  %7 = load i64*, i64** %ports_in_mid2, align 8, !dbg !14296
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14297
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 1, !dbg !14298
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14298
  %call = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %9) #8, !dbg !14299
  %call3 = call i32 @bitmap_empty(i64* %7, i32 %call) #8, !dbg !14300
  %tobool = icmp ne i32 %call3, 0, !dbg !14300
  br i1 %tobool, label %if.then, label %if.end, !dbg !14301

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14302
  %11 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14304
  %call4 = call i32 @mlxsw_sp_mc_remove_mdb_entry(%struct.mlxsw_sp* %10, %struct.mlxsw_sp_mid* %11) #8, !dbg !14305
  store i32 %call4, i32* %err, align 4, !dbg !14306
  %12 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14307
  %list = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %12, i32 0, i32 0, !dbg !14308
  call void @list_del(%struct.list_head* %list) #8, !dbg !14309
  %13 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14310
  %ports_in_mid5 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %13, i32 0, i32 5, !dbg !14311
  %14 = load i64*, i64** %ports_in_mid5, align 8, !dbg !14311
  %15 = bitcast i64* %14 to i8*, !dbg !14310
  call void @kfree(i8* %15) #8, !dbg !14312
  %16 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14313
  %17 = bitcast %struct.mlxsw_sp_mid* %16 to i8*, !dbg !14313
  call void @kfree(i8* %17) #8, !dbg !14314
  br label %if.end, !dbg !14315

if.end:                                           ; preds = %if.then, %entry
  %18 = load i32, i32* %err, align 4, !dbg !14316
  ret i32 %18, !dbg !14317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !14318 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14323, metadata !DIExpression()), !dbg !14325
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14327, metadata !DIExpression()), !dbg !14328
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14329, metadata !DIExpression()), !dbg !14331
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14333, metadata !DIExpression()), !dbg !14334
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14335, metadata !DIExpression()), !dbg !14336
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14337, metadata !DIExpression()), !dbg !14338
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14339
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14340
  %div = sdiv i64 %1, 64, !dbg !14340
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14341
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14339
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14342
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14343
  %conv.i = trunc i64 %4 to i32, !dbg !14343
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !14344
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14345
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14345
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !14345
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14346
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14347
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !14348
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #9, !dbg !14350
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !14351

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !14352
  %12 = bitcast i64* %11 to i8*, !dbg !14352
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !14352
  %shr.i = ashr i64 %13, 3, !dbg !14352
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !14352
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !14354
  %and.i = and i64 %14, 7, !dbg !14354
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !14354
  %shl.i = shl i32 1, %sh_prom.i, !dbg !14354
  %neg.i = xor i32 %shl.i, -1, !dbg !14355
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #9, !dbg !14356, !srcloc !14357
  br label %arch_clear_bit.exit, !dbg !14358

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !14359
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !14361
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #9, !dbg !14362, !srcloc !14363
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !14364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_empty(i64* %src, i32 %nbits) #0 !dbg !14365 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !14370, metadata !DIExpression()), !dbg !14371
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !14372, metadata !DIExpression()), !dbg !14373
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !14374
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !14374
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !14374

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !14374
  %cmp = icmp ule i32 %2, 64, !dbg !14374
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !14374

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !14374
  %cmp2 = icmp ugt i32 %3, 0, !dbg !14374
  br i1 %cmp2, label %if.then, label %if.end, !dbg !14376

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src.addr, align 8, !dbg !14377
  %5 = load i64, i64* %4, align 8, !dbg !14378
  %6 = load i32, i32* %nbits.addr, align 4, !dbg !14379
  %sub = sub i32 0, %6, !dbg !14379
  %and = and i32 %sub, 63, !dbg !14379
  %sh_prom = zext i32 %and to i64, !dbg !14379
  %shr = lshr i64 -1, %sh_prom, !dbg !14379
  %and3 = and i64 %5, %shr, !dbg !14380
  %tobool = icmp ne i64 %and3, 0, !dbg !14381
  %lnot = xor i1 %tobool, true, !dbg !14381
  %lnot.ext = zext i1 %lnot to i32, !dbg !14381
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !14382
  br label %return, !dbg !14382

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %7 = load i64*, i64** %src.addr, align 8, !dbg !14383
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !14384
  %conv = zext i32 %8 to i64, !dbg !14384
  %call = call i64 @find_first_bit(i64* %7, i64 %conv) #8, !dbg !14385
  %9 = load i32, i32* %nbits.addr, align 4, !dbg !14386
  %conv4 = zext i32 %9 to i64, !dbg !14386
  %cmp5 = icmp eq i64 %call, %conv4, !dbg !14387
  %conv6 = zext i1 %cmp5 to i32, !dbg !14387
  store i32 %conv6, i32* %retval, align 4, !dbg !14388
  br label %return, !dbg !14388

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !14389
  ret i32 %10, !dbg !14389
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_max_ports(%struct.mlxsw_core*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_mc_remove_mdb_entry(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_mid* %mid) #0 !dbg !14390 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mid.addr = alloca %struct.mlxsw_sp_mid*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !14393, metadata !DIExpression()), !dbg !14394
  store %struct.mlxsw_sp_mid* %mid, %struct.mlxsw_sp_mid** %mid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid.addr, metadata !14395, metadata !DIExpression()), !dbg !14396
  %0 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14397
  %in_hw = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %0, i32 0, i32 4, !dbg !14399
  %1 = load i8, i8* %in_hw, align 2, !dbg !14399
  %tobool = trunc i8 %1 to i1, !dbg !14399
  br i1 %tobool, label %if.end, label %if.then, !dbg !14400

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14401
  br label %return, !dbg !14401

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14402
  %mid1 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %2, i32 0, i32 3, !dbg !14403
  %3 = load i16, i16* %mid1, align 8, !dbg !14403
  %conv = zext i16 %3 to i64, !dbg !14402
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !14404
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 8, !dbg !14405
  %5 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !14405
  %mids_bitmap = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %5, i32 0, i32 5, !dbg !14406
  %arraydecay = getelementptr inbounds [110 x i64], [110 x i64]* %mids_bitmap, i64 0, i64 0, !dbg !14404
  call void @clear_bit(i64 %conv, i64* %arraydecay) #8, !dbg !14407
  %6 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14408
  %in_hw2 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %6, i32 0, i32 4, !dbg !14409
  store i8 0, i8* %in_hw2, align 2, !dbg !14410
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !14411
  %8 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14412
  %addr = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %8, i32 0, i32 1, !dbg !14413
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !14412
  %9 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14414
  %fid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %9, i32 0, i32 2, !dbg !14415
  %10 = load i16, i16* %fid, align 2, !dbg !14415
  %11 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !14416
  %mid4 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %11, i32 0, i32 3, !dbg !14417
  %12 = load i16, i16* %mid4, align 8, !dbg !14417
  %call = call i32 @mlxsw_sp_port_mdb_op(%struct.mlxsw_sp* %7, i8* %arraydecay3, i16 zeroext %10, i16 zeroext %12, i1 zeroext false) #8, !dbg !14418
  store i32 %call, i32* %retval, align 4, !dbg !14419
  br label %return, !dbg !14419

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !14420
  ret i32 %13, !dbg !14420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !14421 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14422, metadata !DIExpression()), !dbg !14423
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14424, metadata !DIExpression()), !dbg !14425
  ret i1 true, !dbg !14426
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_mdb_op(%struct.mlxsw_sp* %mlxsw_sp, i8* %addr, i16 zeroext %fid, i16 zeroext %mid_idx, i1 zeroext %adding) #0 !dbg !14427 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !14430
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !14433
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !14434
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !14435
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !14436
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !14438
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !14440
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !14443
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !14444
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !14445
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !14446
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !14447
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !14448
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !14449
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !14450
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %addr.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %mid_idx.addr = alloca i16, align 2
  %adding.addr = alloca i8, align 1
  %sfd_pl = alloca i8*, align 8
  %num_rec = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !14451, metadata !DIExpression()), !dbg !14452
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14453, metadata !DIExpression()), !dbg !14454
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !14455, metadata !DIExpression()), !dbg !14456
  store i16 %mid_idx, i16* %mid_idx.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid_idx.addr, metadata !14457, metadata !DIExpression()), !dbg !14458
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !14459, metadata !DIExpression()), !dbg !14460
  call void @llvm.dbg.declare(metadata i8** %sfd_pl, metadata !14461, metadata !DIExpression()), !dbg !14462
  call void @llvm.dbg.declare(metadata i8* %num_rec, metadata !14463, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14465, metadata !DIExpression()), !dbg !14466
  store i64 1040, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !14467
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #9, !dbg !14468
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !14469

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !14470
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !14471
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14472

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !14473
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !14474
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !14475
  %call.i.i = call i32 @get_order(i64 %5) #10, !dbg !14476
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14447
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14477
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14478
  %8 = load i32, i32* %order.i.i, align 4, !dbg !14479
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14480
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14481
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14482
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #11, !dbg !14483
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14483
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14483
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14483
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !14483
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14484
  br label %kmalloc.exit, !dbg !14484

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !14485
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14486
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !14486
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14487

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14488
  br label %kmalloc_index.exit.i, !dbg !14488

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14489
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !14490
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14491

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14492
  br label %kmalloc_index.exit.i, !dbg !14492

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14493
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !14494
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14495

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14496
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !14497
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14498

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14499
  br label %kmalloc_index.exit.i, !dbg !14499

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14500
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !14501
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14502

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14503
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !14504
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14505

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14506
  br label %kmalloc_index.exit.i, !dbg !14506

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14507
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !14508
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14509

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14510
  br label %kmalloc_index.exit.i, !dbg !14510

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14511
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !14512
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14513

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14514
  br label %kmalloc_index.exit.i, !dbg !14514

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14515
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !14516
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14517

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14518
  br label %kmalloc_index.exit.i, !dbg !14518

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14519
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !14520
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14521

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14522
  br label %kmalloc_index.exit.i, !dbg !14522

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14523
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !14524
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14525

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14526
  br label %kmalloc_index.exit.i, !dbg !14526

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14527
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !14528
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14529

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14530
  br label %kmalloc_index.exit.i, !dbg !14530

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14531
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !14532
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14533

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14534
  br label %kmalloc_index.exit.i, !dbg !14534

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14535
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !14536
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14537

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14538
  br label %kmalloc_index.exit.i, !dbg !14538

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14539
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !14540
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14541

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14542
  br label %kmalloc_index.exit.i, !dbg !14542

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14543
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !14544
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14545

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14546
  br label %kmalloc_index.exit.i, !dbg !14546

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14547
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !14548
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14549

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14550
  br label %kmalloc_index.exit.i, !dbg !14550

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14551
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !14552
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14553

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14554
  br label %kmalloc_index.exit.i, !dbg !14554

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14555
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !14556
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14557

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14558
  br label %kmalloc_index.exit.i, !dbg !14558

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14559
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !14560
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14561

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14562
  br label %kmalloc_index.exit.i, !dbg !14562

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14563
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !14564
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14565

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14566
  br label %kmalloc_index.exit.i, !dbg !14566

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14567
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !14568
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14569

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14570
  br label %kmalloc_index.exit.i, !dbg !14570

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14571
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !14572
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14573

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14574
  br label %kmalloc_index.exit.i, !dbg !14574

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14575
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !14576
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14577

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14578
  br label %kmalloc_index.exit.i, !dbg !14578

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14579
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !14580
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14581

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14582
  br label %kmalloc_index.exit.i, !dbg !14582

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14583
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !14584
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14585

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14586
  br label %kmalloc_index.exit.i, !dbg !14586

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14587
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !14588
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14589

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14590
  br label %kmalloc_index.exit.i, !dbg !14590

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14591
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !14592
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14593

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14594
  br label %kmalloc_index.exit.i, !dbg !14594

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14595
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !14596
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14597

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14598
  br label %kmalloc_index.exit.i, !dbg !14598

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14599
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !14600
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14601

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14602
  br label %kmalloc_index.exit.i, !dbg !14602

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !14603, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !14604, !srcloc !12241
  unreachable, !dbg !14605

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !14606
  store i32 %43, i32* %index.i, align 4, !dbg !14607
  %44 = load i32, i32* %index.i, align 4, !dbg !14608
  %tobool.i = icmp ne i32 %44, 0, !dbg !14608
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14609

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14610
  br label %kmalloc.exit, !dbg !14610

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !14611
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14612
  %and.i.i = and i32 %46, 17, !dbg !14612
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14612
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14612
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14612
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14612
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14613

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14614
  br label %kmalloc_type.exit.i, !dbg !14614

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14615
  %and2.i.i = and i32 %47, 1, !dbg !14616
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14615
  %48 = zext i1 %tobool3.i.i to i64, !dbg !14615
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14615
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14617
  br label %kmalloc_type.exit.i, !dbg !14617

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !14618
  %idxprom.i = zext i32 %49 to i64, !dbg !14619
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14619
  %50 = load i32, i32* %index.i, align 4, !dbg !14620
  %idxprom6.i = zext i32 %50 to i64, !dbg !14619
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14619
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14619
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !14621
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !14622
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14623
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14624
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #11, !dbg !14625
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14625
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14625
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14625
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !14625
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14435
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14626
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !14627
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14628
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14629
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #11, !dbg !14630
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14631
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !14632
  store i8* %60, i8** %retval.i, align 8, !dbg !14633
  br label %kmalloc.exit, !dbg !14633

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !14634
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !14635
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #11, !dbg !14636
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14636
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14636
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14636
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !14636
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14637
  br label %kmalloc.exit, !dbg !14637

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !14638
  store i8* %63, i8** %sfd_pl, align 8, !dbg !14639
  %64 = load i8*, i8** %sfd_pl, align 8, !dbg !14640
  %tobool = icmp ne i8* %64, null, !dbg !14640
  br i1 %tobool, label %if.end, label %if.then, !dbg !14642

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !14643
  br label %return, !dbg !14643

if.end:                                           ; preds = %kmalloc.exit
  %65 = load i8*, i8** %sfd_pl, align 8, !dbg !14644
  %66 = load i8, i8* %adding.addr, align 1, !dbg !14645
  %tobool1 = trunc i8 %66 to i1, !dbg !14645
  %call2 = call i32 @mlxsw_sp_sfd_op(i1 zeroext %tobool1) #8, !dbg !14646
  call void @mlxsw_reg_sfd_pack(i8* %65, i32 %call2, i32 0) #8, !dbg !14647
  %67 = load i8*, i8** %sfd_pl, align 8, !dbg !14648
  %68 = load i8*, i8** %addr.addr, align 8, !dbg !14649
  %69 = load i16, i16* %fid.addr, align 2, !dbg !14650
  %70 = load i16, i16* %mid_idx.addr, align 2, !dbg !14651
  call void @mlxsw_reg_sfd_mc_pack(i8* %67, i32 0, i8* %68, i16 zeroext %69, i32 0, i16 zeroext %70) #8, !dbg !14652
  %71 = load i8*, i8** %sfd_pl, align 8, !dbg !14653
  %call3 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %71) #8, !dbg !14654
  %conv = trunc i32 %call3 to i8, !dbg !14654
  store i8 %conv, i8* %num_rec, align 1, !dbg !14655
  %72 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !14656
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %72, i32 0, i32 1, !dbg !14657
  %73 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14657
  %74 = load i8*, i8** %sfd_pl, align 8, !dbg !14658
  %call4 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %73, %struct.mlxsw_reg_info* @mlxsw_reg_sfd, i8* %74) #8, !dbg !14659
  store i32 %call4, i32* %err, align 4, !dbg !14660
  %75 = load i32, i32* %err, align 4, !dbg !14661
  %tobool5 = icmp ne i32 %75, 0, !dbg !14661
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !14663

if.then6:                                         ; preds = %if.end
  br label %out, !dbg !14664

if.end7:                                          ; preds = %if.end
  %76 = load i8, i8* %num_rec, align 1, !dbg !14665
  %conv8 = zext i8 %76 to i32, !dbg !14665
  %77 = load i8*, i8** %sfd_pl, align 8, !dbg !14667
  %call9 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %77) #8, !dbg !14668
  %cmp = icmp ne i32 %conv8, %call9, !dbg !14669
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !14670

if.then11:                                        ; preds = %if.end7
  store i32 -16, i32* %err, align 4, !dbg !14671
  br label %if.end12, !dbg !14672

if.end12:                                         ; preds = %if.then11, %if.end7
  br label %out, !dbg !14673

out:                                              ; preds = %if.end12, %if.then6
  call void @llvm.dbg.label(metadata !14674), !dbg !14675
  %78 = load i8*, i8** %sfd_pl, align 8, !dbg !14676
  call void @kfree(i8* %78) #8, !dbg !14677
  %79 = load i32, i32* %err, align 4, !dbg !14678
  store i32 %79, i32* %retval, align 4, !dbg !14679
  br label %return, !dbg !14679

return:                                           ; preds = %out, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !14680
  ret i32 %80, !dbg !14680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_mc_pack(i8* %payload, i32 %rec_index, i8* %mac, i16 zeroext %fid_vid, i32 %action, i16 zeroext %mid) #0 !dbg !14681 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %fid_vid.addr = alloca i16, align 2
  %action.addr = alloca i32, align 4
  %mid.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14684, metadata !DIExpression()), !dbg !14685
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !14686, metadata !DIExpression()), !dbg !14687
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !14688, metadata !DIExpression()), !dbg !14689
  store i16 %fid_vid, i16* %fid_vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid_vid.addr, metadata !14690, metadata !DIExpression()), !dbg !14691
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !14692, metadata !DIExpression()), !dbg !14693
  store i16 %mid, i16* %mid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid.addr, metadata !14694, metadata !DIExpression()), !dbg !14695
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14696
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !14697
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !14698
  %3 = load i32, i32* %action.addr, align 4, !dbg !14699
  call void @mlxsw_reg_sfd_rec_pack(i8* %0, i32 %1, i32 2, i8* %2, i32 %3) #8, !dbg !14700
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14701
  %5 = load i32, i32* %rec_index.addr, align 4, !dbg !14702
  %conv = trunc i32 %5 to i16, !dbg !14702
  call void @mlxsw_reg_sfd_mc_pgi_set(i8* %4, i16 zeroext %conv, i32 8191) #8, !dbg !14703
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !14704
  %7 = load i32, i32* %rec_index.addr, align 4, !dbg !14705
  %conv1 = trunc i32 %7 to i16, !dbg !14705
  %8 = load i16, i16* %fid_vid.addr, align 2, !dbg !14706
  %conv2 = zext i16 %8 to i32, !dbg !14706
  call void @mlxsw_reg_sfd_mc_fid_vid_set(i8* %6, i16 zeroext %conv1, i32 %conv2) #8, !dbg !14707
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !14708
  %10 = load i32, i32* %rec_index.addr, align 4, !dbg !14709
  %conv3 = trunc i32 %10 to i16, !dbg !14709
  %11 = load i16, i16* %mid.addr, align 2, !dbg !14710
  %conv4 = zext i16 %11 to i32, !dbg !14710
  call void @mlxsw_reg_sfd_mc_mid_set(i8* %9, i16 zeroext %conv3, i32 %conv4) #8, !dbg !14711
  ret void, !dbg !14712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_mc_pgi_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !14713 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14714, metadata !DIExpression()), !dbg !14715
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14716, metadata !DIExpression()), !dbg !14715
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14717, metadata !DIExpression()), !dbg !14715
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14715
  %1 = load i16, i16* %index.addr, align 2, !dbg !14715
  %2 = load i32, i32* %val.addr, align 4, !dbg !14715
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_mc_pgi_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !14715
  ret void, !dbg !14715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_mc_fid_vid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !14718 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14719, metadata !DIExpression()), !dbg !14720
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14721, metadata !DIExpression()), !dbg !14720
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14722, metadata !DIExpression()), !dbg !14720
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14720
  %1 = load i16, i16* %index.addr, align 2, !dbg !14720
  %2 = load i32, i32* %val.addr, align 4, !dbg !14720
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_mc_fid_vid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !14720
  ret void, !dbg !14720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_mc_mid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !14723 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14724, metadata !DIExpression()), !dbg !14725
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14726, metadata !DIExpression()), !dbg !14725
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14727, metadata !DIExpression()), !dbg !14725
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14725
  %1 = load i16, i16* %index.addr, align 2, !dbg !14725
  %2 = load i32, i32* %val.addr, align 4, !dbg !14725
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_mc_mid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !14725
  ret void, !dbg !14725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_smid_pack(i8* %payload, i16 zeroext %mid, i8 zeroext %port, i1 zeroext %set) #0 !dbg !14728 {
entry:
  %payload.addr = alloca i8*, align 8
  %mid.addr = alloca i16, align 2
  %port.addr = alloca i8, align 1
  %set.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14731, metadata !DIExpression()), !dbg !14732
  store i16 %mid, i16* %mid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid.addr, metadata !14733, metadata !DIExpression()), !dbg !14734
  store i8 %port, i8* %port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port.addr, metadata !14735, metadata !DIExpression()), !dbg !14736
  %frombool = zext i1 %set to i8
  store i8 %frombool, i8* %set.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set.addr, metadata !14737, metadata !DIExpression()), !dbg !14738
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14739
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_smid, i32 0, i32 1), align 2, !dbg !14739
  %conv = zext i16 %1 to i64, !dbg !14739
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !14739
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !14740
  call void @mlxsw_reg_smid_swid_set(i8* %2, i32 0) #8, !dbg !14741
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !14742
  %4 = load i16, i16* %mid.addr, align 2, !dbg !14743
  %conv1 = zext i16 %4 to i32, !dbg !14743
  call void @mlxsw_reg_smid_mid_set(i8* %3, i32 %conv1) #8, !dbg !14744
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !14745
  %6 = load i8, i8* %port.addr, align 1, !dbg !14746
  %conv2 = zext i8 %6 to i16, !dbg !14746
  %7 = load i8, i8* %set.addr, align 1, !dbg !14747
  %tobool = trunc i8 %7 to i1, !dbg !14747
  %conv3 = zext i1 %tobool to i8, !dbg !14747
  call void @mlxsw_reg_smid_port_set(i8* %5, i16 zeroext %conv2, i8 zeroext %conv3) #8, !dbg !14748
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !14749
  %9 = load i8, i8* %port.addr, align 1, !dbg !14750
  %conv4 = zext i8 %9 to i16, !dbg !14750
  call void @mlxsw_reg_smid_port_mask_set(i8* %8, i16 zeroext %conv4, i8 zeroext 1) #8, !dbg !14751
  ret void, !dbg !14752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_smid_swid_set(i8* %buf, i32 %val) #0 !dbg !14753 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14754, metadata !DIExpression()), !dbg !14755
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14756, metadata !DIExpression()), !dbg !14755
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14755
  %1 = load i32, i32* %val.addr, align 4, !dbg !14755
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_smid_swid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !14755
  ret void, !dbg !14755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_smid_mid_set(i8* %buf, i32 %val) #0 !dbg !14757 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14758, metadata !DIExpression()), !dbg !14759
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14760, metadata !DIExpression()), !dbg !14759
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14759
  %1 = load i32, i32* %val.addr, align 4, !dbg !14759
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_smid_mid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !14759
  ret void, !dbg !14759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_smid_port_set(i8* %buf, i16 zeroext %index, i8 zeroext %val) #0 !dbg !14761 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14764, metadata !DIExpression()), !dbg !14765
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14766, metadata !DIExpression()), !dbg !14765
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !14767, metadata !DIExpression()), !dbg !14765
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14765
  %1 = load i16, i16* %index.addr, align 2, !dbg !14765
  %2 = load i8, i8* %val.addr, align 1, !dbg !14765
  call void @__mlxsw_item_bit_array_set(i8* %0, %struct.mlxsw_item* @mlxsw_reg_smid_port_item, i16 zeroext %1, i8 zeroext %2) #8, !dbg !14765
  ret void, !dbg !14765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_smid_port_mask_set(i8* %buf, i16 zeroext %index, i8 zeroext %val) #0 !dbg !14768 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14769, metadata !DIExpression()), !dbg !14770
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14771, metadata !DIExpression()), !dbg !14770
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !14772, metadata !DIExpression()), !dbg !14770
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14770
  %1 = load i16, i16* %index.addr, align 2, !dbg !14770
  %2 = load i8, i8* %val.addr, align 1, !dbg !14770
  call void @__mlxsw_item_bit_array_set(i8* %0, %struct.mlxsw_item* @mlxsw_reg_smid_port_mask_item, i16 zeroext %1, i8 zeroext %2) #8, !dbg !14770
  ret void, !dbg !14770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_bit_array_set(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i8 zeroext %val) #0 !dbg !14773 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i8, align 1
  %shift = alloca i8, align 1
  %tmp = alloca i8, align 1
  %offset = alloca i16, align 2
  %mask = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14776, metadata !DIExpression()), !dbg !14777
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !14778, metadata !DIExpression()), !dbg !14779
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14780, metadata !DIExpression()), !dbg !14781
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.declare(metadata i8* %shift, metadata !14784, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !14786, metadata !DIExpression()), !dbg !14787
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !14788, metadata !DIExpression()), !dbg !14789
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14790
  %1 = load i16, i16* %index.addr, align 2, !dbg !14791
  %call = call zeroext i16 @__mlxsw_item_bit_array_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i8* %shift) #8, !dbg !14792
  store i16 %call, i16* %offset, align 2, !dbg !14789
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !14793, metadata !DIExpression()), !dbg !14794
  %2 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14795
  %element_size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %2, i32 0, i32 4, !dbg !14795
  %3 = load i8, i8* %element_size, align 1, !dbg !14795
  %conv = zext i8 %3 to i32, !dbg !14795
  %sub = sub i32 %conv, 1, !dbg !14795
  %sub1 = sub i32 63, %sub, !dbg !14795
  %sh_prom = zext i32 %sub1 to i64, !dbg !14795
  %shr = lshr i64 -1, %sh_prom, !dbg !14795
  %and = and i64 -1, %shr, !dbg !14795
  %add = add i64 0, %and, !dbg !14795
  %4 = load i8, i8* %shift, align 1, !dbg !14796
  %conv2 = zext i8 %4 to i32, !dbg !14796
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !14797
  %shl = shl i64 %add, %sh_prom3, !dbg !14797
  %conv4 = trunc i64 %shl to i8, !dbg !14795
  store i8 %conv4, i8* %mask, align 1, !dbg !14794
  %5 = load i8, i8* %shift, align 1, !dbg !14798
  %conv5 = zext i8 %5 to i32, !dbg !14798
  %6 = load i8, i8* %val.addr, align 1, !dbg !14799
  %conv6 = zext i8 %6 to i32, !dbg !14799
  %shl7 = shl i32 %conv6, %conv5, !dbg !14799
  %conv8 = trunc i32 %shl7 to i8, !dbg !14799
  store i8 %conv8, i8* %val.addr, align 1, !dbg !14799
  %7 = load i8, i8* %mask, align 1, !dbg !14800
  %conv9 = zext i8 %7 to i32, !dbg !14800
  %8 = load i8, i8* %val.addr, align 1, !dbg !14801
  %conv10 = zext i8 %8 to i32, !dbg !14801
  %and11 = and i32 %conv10, %conv9, !dbg !14801
  %conv12 = trunc i32 %and11 to i8, !dbg !14801
  store i8 %conv12, i8* %val.addr, align 1, !dbg !14801
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !14802
  %10 = load i16, i16* %offset, align 2, !dbg !14803
  %idxprom = zext i16 %10 to i64, !dbg !14802
  %arrayidx = getelementptr i8, i8* %9, i64 %idxprom, !dbg !14802
  %11 = load i8, i8* %arrayidx, align 1, !dbg !14802
  store i8 %11, i8* %tmp, align 1, !dbg !14804
  %12 = load i8, i8* %mask, align 1, !dbg !14805
  %conv13 = zext i8 %12 to i32, !dbg !14805
  %neg = xor i32 %conv13, -1, !dbg !14806
  %13 = load i8, i8* %tmp, align 1, !dbg !14807
  %conv14 = zext i8 %13 to i32, !dbg !14807
  %and15 = and i32 %conv14, %neg, !dbg !14807
  %conv16 = trunc i32 %and15 to i8, !dbg !14807
  store i8 %conv16, i8* %tmp, align 1, !dbg !14807
  %14 = load i8, i8* %val.addr, align 1, !dbg !14808
  %conv17 = zext i8 %14 to i32, !dbg !14808
  %15 = load i8, i8* %tmp, align 1, !dbg !14809
  %conv18 = zext i8 %15 to i32, !dbg !14809
  %or = or i32 %conv18, %conv17, !dbg !14809
  %conv19 = trunc i32 %or to i8, !dbg !14809
  store i8 %conv19, i8* %tmp, align 1, !dbg !14809
  %16 = load i8, i8* %tmp, align 1, !dbg !14810
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !14811
  %18 = load i16, i16* %offset, align 2, !dbg !14812
  %idxprom20 = zext i16 %18 to i64, !dbg !14811
  %arrayidx21 = getelementptr i8, i8* %17, i64 %idxprom20, !dbg !14811
  store i8 %16, i8* %arrayidx21, align 1, !dbg !14813
  ret void, !dbg !14814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__mlxsw_item_bit_array_offset(%struct.mlxsw_item* %item, i16 zeroext %index, i8* %shift) #0 !dbg !14815 {
entry:
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %shift.addr = alloca i8*, align 8
  %max_index = alloca i16, align 2
  %be_index = alloca i16, align 2
  %offset = alloca i16, align 2
  %in_byte_index = alloca i8, align 1
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !14818, metadata !DIExpression()), !dbg !14819
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14820, metadata !DIExpression()), !dbg !14821
  store i8* %shift, i8** %shift.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %shift.addr, metadata !14822, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.declare(metadata i16* %max_index, metadata !14824, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.declare(metadata i16* %be_index, metadata !14826, metadata !DIExpression()), !dbg !14827
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !14828, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.declare(metadata i8* %in_byte_index, metadata !14830, metadata !DIExpression()), !dbg !14831
  br label %do.body, !dbg !14832

do.body:                                          ; preds = %entry
  %0 = load i16, i16* %index.addr, align 2, !dbg !14833
  %conv = zext i16 %0 to i32, !dbg !14833
  %tobool = icmp ne i32 %conv, 0, !dbg !14833
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14833

land.rhs:                                         ; preds = %do.body
  %1 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14833
  %element_size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %1, i32 0, i32 4, !dbg !14833
  %2 = load i8, i8* %element_size, align 1, !dbg !14833
  %tobool1 = icmp ne i8 %2, 0, !dbg !14833
  %lnot = xor i1 %tobool1, true, !dbg !14833
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.body
  %3 = phi i1 [ false, %do.body ], [ %lnot, %land.rhs ], !dbg !14836
  %lnot2 = xor i1 %3, true, !dbg !14833
  %lnot3 = xor i1 %lnot2, true, !dbg !14833
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14833
  %conv4 = sext i32 %lnot.ext to i64, !dbg !14833
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !14833
  br i1 %tobool5, label %if.then, label %if.end, !dbg !14837

if.then:                                          ; preds = %land.end
  br label %do.body6, !dbg !14833

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !14838

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !14840

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !14838

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 212, i32 0, i64 12) #9, !dbg !14842, !srcloc !14844
  br label %do.end9, !dbg !14842

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !14838

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 642) #9, !dbg !14845, !srcloc !14848
  unreachable, !dbg !14849

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !14838

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !14838

if.end:                                           ; preds = %do.end12, %land.end
  br label %do.end13, !dbg !14837

do.end13:                                         ; preds = %if.end
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14850
  %offset14 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 0, !dbg !14852
  %5 = load i16, i16* %offset14, align 8, !dbg !14852
  %conv15 = zext i16 %5 to i64, !dbg !14850
  %rem = urem i64 %conv15, 4, !dbg !14853
  %cmp = icmp ne i64 %rem, 0, !dbg !14854
  br i1 %cmp, label %if.then22, label %lor.lhs.false, !dbg !14855

lor.lhs.false:                                    ; preds = %do.end13
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14856
  %element_size17 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 4, !dbg !14857
  %7 = load i8, i8* %element_size17, align 1, !dbg !14857
  %conv18 = zext i8 %7 to i32, !dbg !14856
  %rem19 = srem i32 8, %conv18, !dbg !14858
  %cmp20 = icmp ne i32 %rem19, 0, !dbg !14859
  br i1 %cmp20, label %if.then22, label %if.end35, !dbg !14860

if.then22:                                        ; preds = %lor.lhs.false, %do.end13
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14861
  %name = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 7, !dbg !14861
  %9 = load i8*, i8** %name, align 8, !dbg !14861
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14861
  %offset23 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 0, !dbg !14861
  %11 = load i16, i16* %offset23, align 8, !dbg !14861
  %conv24 = zext i16 %11 to i32, !dbg !14861
  %12 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14861
  %element_size25 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %12, i32 0, i32 4, !dbg !14861
  %13 = load i8, i8* %element_size25, align 1, !dbg !14861
  %conv26 = zext i8 %13 to i32, !dbg !14861
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.48, i64 0, i64 0), i8* %9, i32 %conv24, i32 %conv26) #12, !dbg !14861
  br label %do.body27, !dbg !14863

do.body27:                                        ; preds = %if.then22
  br label %do.body28, !dbg !14864

do.body28:                                        ; preds = %do.body27
  br label %do.end29, !dbg !14866

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !14864

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 217, i32 0, i64 12) #9, !dbg !14868, !srcloc !14870
  br label %do.end31, !dbg !14868

do.end31:                                         ; preds = %do.body30
  br label %do.body32, !dbg !14864

do.body32:                                        ; preds = %do.end31
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 643) #9, !dbg !14871, !srcloc !14874
  unreachable, !dbg !14875

do.end33:                                         ; No predecessors!
  br label %do.end34, !dbg !14864

do.end34:                                         ; preds = %do.end33
  br label %if.end35, !dbg !14876

if.end35:                                         ; preds = %do.end34, %lor.lhs.false
  %14 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14877
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %14, i32 0, i32 6, !dbg !14878
  %bytes = bitcast %union.anon.168* %size to i16*, !dbg !14879
  %15 = load i16, i16* %bytes, align 2, !dbg !14879
  %conv36 = zext i16 %15 to i32, !dbg !14877
  %shl = shl i32 %conv36, 3, !dbg !14880
  %16 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14881
  %element_size37 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %16, i32 0, i32 4, !dbg !14882
  %17 = load i8, i8* %element_size37, align 1, !dbg !14882
  %conv38 = zext i8 %17 to i32, !dbg !14881
  %div = sdiv i32 %shl, %conv38, !dbg !14883
  %sub = sub i32 %div, 1, !dbg !14884
  %conv39 = trunc i32 %sub to i16, !dbg !14885
  store i16 %conv39, i16* %max_index, align 2, !dbg !14886
  %18 = load i16, i16* %max_index, align 2, !dbg !14887
  %conv40 = zext i16 %18 to i32, !dbg !14887
  %19 = load i16, i16* %index.addr, align 2, !dbg !14888
  %conv41 = zext i16 %19 to i32, !dbg !14888
  %sub42 = sub i32 %conv40, %conv41, !dbg !14889
  %conv43 = trunc i32 %sub42 to i16, !dbg !14887
  store i16 %conv43, i16* %be_index, align 2, !dbg !14890
  %20 = load i16, i16* %be_index, align 2, !dbg !14891
  %conv44 = zext i16 %20 to i32, !dbg !14891
  %21 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14892
  %element_size45 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %21, i32 0, i32 4, !dbg !14893
  %22 = load i8, i8* %element_size45, align 1, !dbg !14893
  %conv46 = zext i8 %22 to i32, !dbg !14892
  %mul = mul i32 %conv44, %conv46, !dbg !14894
  %shr = ashr i32 %mul, 3, !dbg !14895
  %conv47 = trunc i32 %shr to i16, !dbg !14891
  store i16 %conv47, i16* %offset, align 2, !dbg !14896
  %23 = load i16, i16* %index.addr, align 2, !dbg !14897
  %conv48 = zext i16 %23 to i32, !dbg !14897
  %24 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14898
  %element_size49 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %24, i32 0, i32 4, !dbg !14899
  %25 = load i8, i8* %element_size49, align 1, !dbg !14899
  %conv50 = zext i8 %25 to i32, !dbg !14898
  %div51 = sdiv i32 8, %conv50, !dbg !14900
  %rem52 = srem i32 %conv48, %div51, !dbg !14901
  %conv53 = trunc i32 %rem52 to i8, !dbg !14897
  store i8 %conv53, i8* %in_byte_index, align 1, !dbg !14902
  %26 = load i8, i8* %in_byte_index, align 1, !dbg !14903
  %conv54 = zext i8 %26 to i32, !dbg !14903
  %27 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14904
  %element_size55 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %27, i32 0, i32 4, !dbg !14905
  %28 = load i8, i8* %element_size55, align 1, !dbg !14905
  %conv56 = zext i8 %28 to i32, !dbg !14904
  %mul57 = mul i32 %conv54, %conv56, !dbg !14906
  %conv58 = trunc i32 %mul57 to i8, !dbg !14903
  %29 = load i8*, i8** %shift.addr, align 8, !dbg !14907
  store i8 %conv58, i8* %29, align 1, !dbg !14908
  %30 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14909
  %offset59 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %30, i32 0, i32 0, !dbg !14910
  %31 = load i16, i16* %offset59, align 8, !dbg !14910
  %conv60 = zext i16 %31 to i32, !dbg !14909
  %32 = load i16, i16* %offset, align 2, !dbg !14911
  %conv61 = zext i16 %32 to i32, !dbg !14911
  %add = add i32 %conv60, %conv61, !dbg !14912
  %conv62 = trunc i32 %add to i16, !dbg !14909
  ret i16 %conv62, !dbg !14913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_get(%struct.mlxsw_sp_bridge* %bridge, %struct.net_device* %br_dev, %struct.netlink_ext_ack* %extack) #0 !dbg !14914 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !14915, metadata !DIExpression()), !dbg !14916
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !14917, metadata !DIExpression()), !dbg !14918
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !14919, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !14921, metadata !DIExpression()), !dbg !14922
  %0 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !14923
  %1 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !14924
  %call = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %0, %struct.net_device* %1) #8, !dbg !14925
  store %struct.mlxsw_sp_bridge_device* %call, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !14926
  %2 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !14927
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %2, null, !dbg !14927
  br i1 %tobool, label %if.then, label %if.end, !dbg !14929

if.then:                                          ; preds = %entry
  %3 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !14930
  store %struct.mlxsw_sp_bridge_device* %3, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !14931
  br label %return, !dbg !14931

if.end:                                           ; preds = %entry
  %4 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !14932
  %5 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !14933
  %6 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14934
  %call1 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_create(%struct.mlxsw_sp_bridge* %4, %struct.net_device* %5, %struct.netlink_ext_ack* %6) #8, !dbg !14935
  store %struct.mlxsw_sp_bridge_device* %call1, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !14936
  br label %return, !dbg !14936

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !14937
  ret %struct.mlxsw_sp_bridge_device* %7, !dbg !14937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_CAST(i8* %ptr) #0 !dbg !14938 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14941, metadata !DIExpression()), !dbg !14942
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14943
  ret i8* %0, !dbg !14944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_create(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.net_device* %brport_dev) #0 !dbg !14945 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %brport_dev.addr = alloca %struct.net_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !14948, metadata !DIExpression()), !dbg !14949
  store %struct.net_device* %brport_dev, %struct.net_device** %brport_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %brport_dev.addr, metadata !14950, metadata !DIExpression()), !dbg !14951
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !14952, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !14954, metadata !DIExpression()), !dbg !14955
  %call = call i8* @kzalloc(i64 72, i32 3264) #8, !dbg !14956
  %0 = bitcast i8* %call to %struct.mlxsw_sp_bridge_port*, !dbg !14956
  store %struct.mlxsw_sp_bridge_port* %0, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14957
  %1 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14958
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %1, null, !dbg !14958
  br i1 %tobool, label %if.end, label %if.then, !dbg !14960

if.then:                                          ; preds = %entry
  store %struct.mlxsw_sp_bridge_port* null, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !14961
  br label %return, !dbg !14961

if.end:                                           ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !14962
  %call1 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find(%struct.net_device* %2) #8, !dbg !14963
  store %struct.mlxsw_sp_port* %call1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14964
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14965
  %lagged = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 4, !dbg !14966
  %bf.load = load i8, i8* %lagged, align 1, !dbg !14966
  %bf.clear = and i8 %bf.load, 1, !dbg !14966
  %tobool2 = icmp ne i8 %bf.clear, 0, !dbg !14965
  %4 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14967
  %lagged3 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %4, i32 0, i32 8, !dbg !14968
  %frombool = zext i1 %tobool2 to i8, !dbg !14969
  store i8 %frombool, i8* %lagged3, align 1, !dbg !14969
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14970
  %lagged4 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %5, i32 0, i32 8, !dbg !14972
  %6 = load i8, i8* %lagged4, align 1, !dbg !14972
  %tobool5 = trunc i8 %6 to i1, !dbg !14972
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !14973

if.then6:                                         ; preds = %if.end
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14974
  %lag_id = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 6, !dbg !14975
  %8 = load i16, i16* %lag_id, align 4, !dbg !14975
  %9 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14976
  %10 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %9, i32 0, i32 9, !dbg !14977
  %lag_id7 = bitcast %union.anon.159* %10 to i16*, !dbg !14977
  store i16 %8, i16* %lag_id7, align 2, !dbg !14978
  br label %if.end8, !dbg !14976

if.else:                                          ; preds = %if.end
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14979
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %11, i32 0, i32 3, !dbg !14980
  %12 = load i8, i8* %local_port, align 8, !dbg !14980
  %conv = zext i8 %12 to i16, !dbg !14979
  %13 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14981
  %14 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %13, i32 0, i32 9, !dbg !14982
  %system_port = bitcast %union.anon.159* %14 to i16*, !dbg !14982
  store i16 %conv, i16* %system_port, align 2, !dbg !14983
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then6
  %15 = load %struct.net_device*, %struct.net_device** %brport_dev.addr, align 8, !dbg !14984
  %16 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14985
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %16, i32 0, i32 0, !dbg !14986
  store %struct.net_device* %15, %struct.net_device** %dev, align 8, !dbg !14987
  %17 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !14988
  %18 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14989
  %bridge_device9 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %18, i32 0, i32 1, !dbg !14990
  store %struct.mlxsw_sp_bridge_device* %17, %struct.mlxsw_sp_bridge_device** %bridge_device9, align 8, !dbg !14991
  %19 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14992
  %stp_state = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %19, i32 0, i32 5, !dbg !14993
  store i8 0, i8* %stp_state, align 4, !dbg !14994
  %20 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14995
  %flags = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %20, i32 0, i32 6, !dbg !14996
  store i64 2656, i64* %flags, align 8, !dbg !14997
  %21 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14998
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %21, i32 0, i32 3, !dbg !14999
  call void @INIT_LIST_HEAD(%struct.list_head* %vlans_list) #8, !dbg !15000
  %22 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15001
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %22, i32 0, i32 2, !dbg !15002
  %23 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !15003
  %ports_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %23, i32 0, i32 2, !dbg !15004
  call void @list_add(%struct.list_head* %list, %struct.list_head* %ports_list) #8, !dbg !15005
  %24 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15006
  %ref_count = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %24, i32 0, i32 4, !dbg !15007
  store i32 1, i32* %ref_count, align 8, !dbg !15008
  %25 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15009
  store %struct.mlxsw_sp_bridge_port* %25, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !15010
  br label %return, !dbg !15010

return:                                           ; preds = %if.end8, %if.then
  %26 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %retval, align 8, !dbg !15011
  ret %struct.mlxsw_sp_bridge_port* %26, !dbg !15011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !15012 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !15015, metadata !DIExpression()), !dbg !15016
  %0 = load i64, i64* %error.addr, align 8, !dbg !15017
  %1 = inttoptr i64 %0 to i8*, !dbg !15018
  ret i8* %1, !dbg !15019
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_create(%struct.mlxsw_sp_bridge* %bridge, %struct.net_device* %br_dev, %struct.netlink_ext_ack* %extack) #0 !dbg !11367 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %dev = alloca %struct.device*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vlan_enabled = alloca i8, align 1
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !15020, metadata !DIExpression()), !dbg !15021
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !15022, metadata !DIExpression()), !dbg !15023
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !15024, metadata !DIExpression()), !dbg !15025
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15026, metadata !DIExpression()), !dbg !15027
  %0 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15028
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %0, i32 0, i32 0, !dbg !15029
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15029
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 2, !dbg !15030
  %2 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !15030
  %dev1 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %2, i32 0, i32 2, !dbg !15031
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !15031
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !15027
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !15032, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.declare(metadata i8* %vlan_enabled, metadata !15034, metadata !DIExpression()), !dbg !15035
  %4 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15036
  %call = call zeroext i1 @br_vlan_enabled(%struct.net_device* %4) #8, !dbg !15037
  %frombool = zext i1 %call to i8, !dbg !15035
  store i8 %frombool, i8* %vlan_enabled, align 1, !dbg !15035
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15038, metadata !DIExpression()), !dbg !15039
  %5 = load i8, i8* %vlan_enabled, align 1, !dbg !15040
  %tobool = trunc i8 %5 to i1, !dbg !15040
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !15042

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15043
  %vlan_enabled_exists = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %6, i32 0, i32 3, !dbg !15044
  %7 = load i8, i8* %vlan_enabled_exists, align 4, !dbg !15044
  %tobool2 = trunc i8 %7 to i1, !dbg !15044
  br i1 %tobool2, label %if.then, label %if.end6, !dbg !15045

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15046
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.52, i64 0, i64 0)) #12, !dbg !15046
  br label %do.body, !dbg !15048

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !15049, metadata !DIExpression()), !dbg !15051
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !15051
  store %struct.netlink_ext_ack* %9, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15051
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15052
  %tobool3 = icmp ne %struct.netlink_ext_ack* %10, null, !dbg !15052
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !15051

if.then4:                                         ; preds = %do.body
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15052
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %11, i32 0, i32 0, !dbg !15052
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @mlxsw_sp_bridge_device_create.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !15052
  br label %if.end, !dbg !15052

if.end:                                           ; preds = %if.then4, %do.body
  br label %do.end, !dbg !15051

do.end:                                           ; preds = %if.end
  %call5 = call i8* @ERR_PTR(i64 -22) #8, !dbg !15054
  %12 = bitcast i8* %call5 to %struct.mlxsw_sp_bridge_device*, !dbg !15054
  store %struct.mlxsw_sp_bridge_device* %12, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !15055
  br label %return, !dbg !15055

if.end6:                                          ; preds = %land.lhs.true, %entry
  %call7 = call i8* @kzalloc(i64 72, i32 3264) #8, !dbg !15056
  %13 = bitcast i8* %call7 to %struct.mlxsw_sp_bridge_device*, !dbg !15056
  store %struct.mlxsw_sp_bridge_device* %13, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15057
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15058
  %tobool8 = icmp ne %struct.mlxsw_sp_bridge_device* %14, null, !dbg !15058
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !15060

if.then9:                                         ; preds = %if.end6
  %call10 = call i8* @ERR_PTR(i64 -12) #8, !dbg !15061
  %15 = bitcast i8* %call10 to %struct.mlxsw_sp_bridge_device*, !dbg !15061
  store %struct.mlxsw_sp_bridge_device* %15, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !15062
  br label %return, !dbg !15062

if.end11:                                         ; preds = %if.end6
  %16 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15063
  %17 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15064
  %dev12 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %17, i32 0, i32 0, !dbg !15065
  store %struct.net_device* %16, %struct.net_device** %dev12, align 8, !dbg !15066
  %18 = load i8, i8* %vlan_enabled, align 1, !dbg !15067
  %tobool13 = trunc i8 %18 to i1, !dbg !15067
  %conv = zext i1 %tobool13 to i8, !dbg !15067
  %19 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15068
  %vlan_enabled14 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %19, i32 0, i32 4, !dbg !15069
  %bf.load = load i8, i8* %vlan_enabled14, align 8, !dbg !15070
  %bf.value = and i8 %conv, 1, !dbg !15070
  %bf.clear = and i8 %bf.load, -2, !dbg !15070
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !15070
  store i8 %bf.set, i8* %vlan_enabled14, align 8, !dbg !15070
  %20 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15071
  %call15 = call zeroext i1 @br_multicast_enabled(%struct.net_device* %20) #8, !dbg !15072
  %conv16 = zext i1 %call15 to i8, !dbg !15072
  %21 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15073
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %21, i32 0, i32 4, !dbg !15074
  %bf.load17 = load i8, i8* %multicast_enabled, align 8, !dbg !15075
  %bf.value18 = and i8 %conv16, 1, !dbg !15075
  %bf.shl = shl i8 %bf.value18, 1, !dbg !15075
  %bf.clear19 = and i8 %bf.load17, -3, !dbg !15075
  %bf.set20 = or i8 %bf.clear19, %bf.shl, !dbg !15075
  store i8 %bf.set20, i8* %multicast_enabled, align 8, !dbg !15075
  %22 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15076
  %call21 = call zeroext i1 @br_multicast_router(%struct.net_device* %22) #8, !dbg !15077
  %conv22 = zext i1 %call21 to i8, !dbg !15077
  %23 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15078
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %23, i32 0, i32 4, !dbg !15079
  %bf.load23 = load i8, i8* %mrouter, align 8, !dbg !15080
  %bf.value24 = and i8 %conv22, 1, !dbg !15080
  %bf.shl25 = shl i8 %bf.value24, 2, !dbg !15080
  %bf.clear26 = and i8 %bf.load23, -5, !dbg !15080
  %bf.set27 = or i8 %bf.clear26, %bf.shl25, !dbg !15080
  store i8 %bf.set27, i8* %mrouter, align 8, !dbg !15080
  %24 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15081
  %ports_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %24, i32 0, i32 2, !dbg !15082
  call void @INIT_LIST_HEAD(%struct.list_head* %ports_list) #8, !dbg !15083
  %25 = load i8, i8* %vlan_enabled, align 1, !dbg !15084
  %tobool28 = trunc i8 %25 to i1, !dbg !15084
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !15086

if.then29:                                        ; preds = %if.end11
  %26 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15087
  %vlan_enabled_exists30 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %26, i32 0, i32 3, !dbg !15089
  store i8 1, i8* %vlan_enabled_exists30, align 4, !dbg !15090
  %27 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15091
  %bridge_8021q_ops = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %27, i32 0, i32 6, !dbg !15092
  %28 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %bridge_8021q_ops, align 8, !dbg !15092
  %29 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15093
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %29, i32 0, i32 5, !dbg !15094
  store %struct.mlxsw_sp_bridge_ops* %28, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !15095
  br label %if.end32, !dbg !15096

if.else:                                          ; preds = %if.end11
  %30 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15097
  %bridge_8021d_ops = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %30, i32 0, i32 7, !dbg !15099
  %31 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %bridge_8021d_ops, align 8, !dbg !15099
  %32 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15100
  %ops31 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %32, i32 0, i32 5, !dbg !15101
  store %struct.mlxsw_sp_bridge_ops* %31, %struct.mlxsw_sp_bridge_ops** %ops31, align 8, !dbg !15102
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then29
  %33 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15103
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %33, i32 0, i32 3, !dbg !15104
  call void @INIT_LIST_HEAD(%struct.list_head* %mids_list) #8, !dbg !15105
  %34 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15106
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %34, i32 0, i32 1, !dbg !15107
  %35 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15108
  %bridges_list = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %35, i32 0, i32 4, !dbg !15109
  call void @list_add(%struct.list_head* %list, %struct.list_head* %bridges_list) #8, !dbg !15110
  %36 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15111
  %37 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15112
  %38 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !15113
  %call33 = call i32 @mlxsw_sp_bridge_device_vxlan_init(%struct.mlxsw_sp_bridge* %36, %struct.net_device* %37, %struct.netlink_ext_ack* %38) #8, !dbg !15114
  store i32 %call33, i32* %err, align 4, !dbg !15115
  %39 = load i32, i32* %err, align 4, !dbg !15116
  %tobool34 = icmp ne i32 %39, 0, !dbg !15116
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !15118

if.then35:                                        ; preds = %if.end32
  br label %err_vxlan_init, !dbg !15119

if.end36:                                         ; preds = %if.end32
  %40 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15120
  store %struct.mlxsw_sp_bridge_device* %40, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !15121
  br label %return, !dbg !15121

err_vxlan_init:                                   ; preds = %if.then35
  call void @llvm.dbg.label(metadata !15122), !dbg !15123
  %41 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15124
  %list37 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %41, i32 0, i32 1, !dbg !15125
  call void @list_del(%struct.list_head* %list37) #8, !dbg !15126
  %42 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15127
  %vlan_enabled38 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %42, i32 0, i32 4, !dbg !15129
  %bf.load39 = load i8, i8* %vlan_enabled38, align 8, !dbg !15129
  %bf.clear40 = and i8 %bf.load39, 1, !dbg !15129
  %tobool41 = icmp ne i8 %bf.clear40, 0, !dbg !15127
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !15130

if.then42:                                        ; preds = %err_vxlan_init
  %43 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15131
  %vlan_enabled_exists43 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %43, i32 0, i32 3, !dbg !15132
  store i8 0, i8* %vlan_enabled_exists43, align 4, !dbg !15133
  br label %if.end44, !dbg !15131

if.end44:                                         ; preds = %if.then42, %err_vxlan_init
  %44 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15134
  %45 = bitcast %struct.mlxsw_sp_bridge_device* %44 to i8*, !dbg !15134
  call void @kfree(i8* %45) #8, !dbg !15135
  %46 = load i32, i32* %err, align 4, !dbg !15136
  %conv45 = sext i32 %46 to i64, !dbg !15136
  %call46 = call i8* @ERR_PTR(i64 %conv45) #8, !dbg !15137
  %47 = bitcast i8* %call46 to %struct.mlxsw_sp_bridge_device*, !dbg !15137
  store %struct.mlxsw_sp_bridge_device* %47, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !15138
  br label %return, !dbg !15138

return:                                           ; preds = %if.end44, %if.end36, %if.then9, %do.end
  %48 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %retval, align 8, !dbg !15139
  ret %struct.mlxsw_sp_bridge_device* %48, !dbg !15139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @br_vlan_enabled(%struct.net_device* %dev) #0 !dbg !15140 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15142, metadata !DIExpression()), !dbg !15143
  ret i1 false, !dbg !15144
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #6

; Function Attrs: noredzone
declare dso_local zeroext i1 @br_multicast_enabled(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @br_multicast_router(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !15145 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15146, metadata !DIExpression()), !dbg !15147
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !15148, metadata !DIExpression()), !dbg !15149
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15150
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15151
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15152
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !15153
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15153
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #8, !dbg !15154
  ret void, !dbg !15155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_device_vxlan_init(%struct.mlxsw_sp_bridge* %bridge, %struct.net_device* %br_dev, %struct.netlink_ext_ack* %extack) #0 !dbg !15156 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.mlxsw_sp_bridge*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %dev = alloca %struct.net_device*, align 8
  %stop_dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_bridge* %bridge, %struct.mlxsw_sp_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge.addr, metadata !15159, metadata !DIExpression()), !dbg !15160
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !15161, metadata !DIExpression()), !dbg !15162
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !15163, metadata !DIExpression()), !dbg !15164
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15165, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.declare(metadata %struct.net_device** %stop_dev, metadata !15167, metadata !DIExpression()), !dbg !15168
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !15169, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15171, metadata !DIExpression()), !dbg !15172
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15173
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 14, !dbg !15173
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !15173
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !15173
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15173
  store %struct.list_head* %1, %struct.list_head** %iter, align 8, !dbg !15173
  %2 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15173
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %2, %struct.list_head** %iter) #8, !dbg !15173
  %3 = bitcast i8* %call to %struct.net_device*, !dbg !15173
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !15173
  br label %for.cond, !dbg !15173

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15175
  %tobool = icmp ne %struct.net_device* %4, null, !dbg !15173
  br i1 %tobool, label %for.body, label %for.end, !dbg !15173

for.body:                                         ; preds = %for.cond
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15177
  %call1 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %5) #8, !dbg !15180
  br i1 %call1, label %land.lhs.true, label %if.end6, !dbg !15181

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15182
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %6) #8, !dbg !15183
  br i1 %call2, label %if.then, label %if.end6, !dbg !15184

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15185
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %7, i32 0, i32 0, !dbg !15187
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15187
  %9 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15188
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15189
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !15190
  %call3 = call i32 @mlxsw_sp_bridge_vxlan_join(%struct.mlxsw_sp* %8, %struct.net_device* %9, %struct.net_device* %10, i16 zeroext 0, %struct.netlink_ext_ack* %11) #8, !dbg !15191
  store i32 %call3, i32* %err, align 4, !dbg !15192
  %12 = load i32, i32* %err, align 4, !dbg !15193
  %tobool4 = icmp ne i32 %12, 0, !dbg !15193
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !15195

if.then5:                                         ; preds = %if.then
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15196
  store %struct.net_device* %13, %struct.net_device** %stop_dev, align 8, !dbg !15198
  br label %err_vxlan_join, !dbg !15199

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !15200

if.end6:                                          ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !15201

for.inc:                                          ; preds = %if.end6
  %14 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15175
  %call7 = call i8* @netdev_lower_get_next(%struct.net_device* %14, %struct.list_head** %iter) #8, !dbg !15175
  %15 = bitcast i8* %call7 to %struct.net_device*, !dbg !15175
  store %struct.net_device* %15, %struct.net_device** %dev, align 8, !dbg !15175
  br label %for.cond, !dbg !15175, !llvm.loop !15202

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !15204
  br label %return, !dbg !15204

err_vxlan_join:                                   ; preds = %if.then5
  call void @llvm.dbg.label(metadata !15205), !dbg !15206
  %16 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15207
  %adj_list8 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 14, !dbg !15207
  %lower9 = getelementptr inbounds %struct.anon, %struct.anon* %adj_list8, i32 0, i32 1, !dbg !15207
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %lower9, i32 0, i32 0, !dbg !15207
  %17 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !15207
  store %struct.list_head* %17, %struct.list_head** %iter, align 8, !dbg !15207
  %18 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15207
  %call11 = call i8* @netdev_lower_get_next(%struct.net_device* %18, %struct.list_head** %iter) #8, !dbg !15207
  %19 = bitcast i8* %call11 to %struct.net_device*, !dbg !15207
  store %struct.net_device* %19, %struct.net_device** %dev, align 8, !dbg !15207
  br label %for.cond12, !dbg !15207

for.cond12:                                       ; preds = %for.inc23, %err_vxlan_join
  %20 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15209
  %tobool13 = icmp ne %struct.net_device* %20, null, !dbg !15207
  br i1 %tobool13, label %for.body14, label %for.end25, !dbg !15207

for.body14:                                       ; preds = %for.cond12
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15211
  %call15 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %21) #8, !dbg !15214
  br i1 %call15, label %land.lhs.true16, label %if.end22, !dbg !15215

land.lhs.true16:                                  ; preds = %for.body14
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15216
  %call17 = call zeroext i1 @netif_running(%struct.net_device* %22) #8, !dbg !15217
  br i1 %call17, label %if.then18, label %if.end22, !dbg !15218

if.then18:                                        ; preds = %land.lhs.true16
  %23 = load %struct.net_device*, %struct.net_device** %stop_dev, align 8, !dbg !15219
  %24 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15222
  %cmp = icmp eq %struct.net_device* %23, %24, !dbg !15223
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !15224

if.then19:                                        ; preds = %if.then18
  br label %for.end25, !dbg !15225

if.end20:                                         ; preds = %if.then18
  %25 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge.addr, align 8, !dbg !15226
  %mlxsw_sp21 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %25, i32 0, i32 0, !dbg !15227
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp21, align 8, !dbg !15227
  %27 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15228
  call void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %26, %struct.net_device* %27) #8, !dbg !15229
  br label %if.end22, !dbg !15230

if.end22:                                         ; preds = %if.end20, %land.lhs.true16, %for.body14
  br label %for.inc23, !dbg !15231

for.inc23:                                        ; preds = %if.end22
  %28 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !15209
  %call24 = call i8* @netdev_lower_get_next(%struct.net_device* %28, %struct.list_head** %iter) #8, !dbg !15209
  %29 = bitcast i8* %call24 to %struct.net_device*, !dbg !15209
  store %struct.net_device* %29, %struct.net_device** %dev, align 8, !dbg !15209
  br label %for.cond12, !dbg !15209, !llvm.loop !15232

for.end25:                                        ; preds = %if.then19, %for.cond12
  %30 = load i32, i32* %err, align 4, !dbg !15234
  store i32 %30, i32* %retval, align 4, !dbg !15235
  br label %return, !dbg !15235

return:                                           ; preds = %for.end25, %for.end
  %31 = load i32, i32* %retval, align 4, !dbg !15236
  ret i32 %31, !dbg !15236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15237 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15240, metadata !DIExpression()), !dbg !15241
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15242, metadata !DIExpression()), !dbg !15243
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15244, metadata !DIExpression()), !dbg !15245
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15246
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15248
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15249
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #8, !dbg !15250
  br i1 %call, label %if.end, label %if.then, !dbg !15251

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !15252

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15253
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15254
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !15255
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !15256
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15257
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15258
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !15259
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !15260
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15261
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15262
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !15263
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !15264
  br label %do.body, !dbg !15265

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !15266

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !15268

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !15266

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15270
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15270
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !15270
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !15270
  br label %do.end7, !dbg !15270

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !15266

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !15272
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15273 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15276, metadata !DIExpression()), !dbg !15277
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15278, metadata !DIExpression()), !dbg !15279
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15280, metadata !DIExpression()), !dbg !15281
  ret i1 true, !dbg !15282
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device* @switchdev_notifier_info_to_dev(%struct.switchdev_notifier_info* %info) #0 !dbg !15283 {
entry:
  %info.addr = alloca %struct.switchdev_notifier_info*, align 8
  store %struct.switchdev_notifier_info* %info, %struct.switchdev_notifier_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_info** %info.addr, metadata !15288, metadata !DIExpression()), !dbg !15289
  %0 = load %struct.switchdev_notifier_info*, %struct.switchdev_notifier_info** %info.addr, align 8, !dbg !15290
  %dev = getelementptr inbounds %struct.switchdev_notifier_info, %struct.switchdev_notifier_info* %0, i32 0, i32 0, !dbg !15291
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15291
  ret %struct.net_device* %1, !dbg !15292
}

; Function Attrs: noredzone
declare dso_local i32 @switchdev_handle_port_attr_set(%struct.net_device*, %struct.switchdev_notifier_port_attr_info*, i1 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.switchdev_attr*, %struct.switchdev_trans*)*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_set(%struct.net_device* %dev, %struct.switchdev_attr* %attr, %struct.switchdev_trans* %trans) #0 !dbg !15293 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %attr.addr = alloca %struct.switchdev_attr*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15319, metadata !DIExpression()), !dbg !15320
  store %struct.switchdev_attr* %attr, %struct.switchdev_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_attr** %attr.addr, metadata !15321, metadata !DIExpression()), !dbg !15322
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !15323, metadata !DIExpression()), !dbg !15324
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15325, metadata !DIExpression()), !dbg !15326
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15327
  %call = call i8* @netdev_priv(%struct.net_device* %0) #8, !dbg !15328
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !15328
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15326
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15329, metadata !DIExpression()), !dbg !15330
  %2 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15331
  %id = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %2, i32 0, i32 1, !dbg !15332
  %3 = load i32, i32* %id, align 8, !dbg !15332
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb2
    i32 2, label %sw.bb5
    i32 5, label %sw.bb10
    i32 6, label %sw.bb13
    i32 4, label %sw.bb17
    i32 7, label %sw.bb22
    i32 8, label %sw.bb27
  ], !dbg !15333

sw.bb:                                            ; preds = %entry
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15334
  %5 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15336
  %6 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15337
  %orig_dev = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %6, i32 0, i32 0, !dbg !15338
  %7 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !15338
  %8 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15339
  %u = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %8, i32 0, i32 5, !dbg !15340
  %stp_state = bitcast %union.anon.186* %u to i8*, !dbg !15341
  %9 = load i8, i8* %stp_state, align 8, !dbg !15341
  %call1 = call i32 @mlxsw_sp_port_attr_stp_state_set(%struct.mlxsw_sp_port* %4, %struct.switchdev_trans* %5, %struct.net_device* %7, i8 zeroext %9) #8, !dbg !15342
  store i32 %call1, i32* %err, align 4, !dbg !15343
  br label %sw.epilog, !dbg !15344

sw.bb2:                                           ; preds = %entry
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15345
  %11 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15346
  %12 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15347
  %u3 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %12, i32 0, i32 5, !dbg !15348
  %brport_flags = bitcast %union.anon.186* %u3 to i64*, !dbg !15349
  %13 = load i64, i64* %brport_flags, align 8, !dbg !15349
  %call4 = call i32 @mlxsw_sp_port_attr_br_pre_flags_set(%struct.mlxsw_sp_port* %10, %struct.switchdev_trans* %11, i64 %13) #8, !dbg !15350
  store i32 %call4, i32* %err, align 4, !dbg !15351
  br label %sw.epilog, !dbg !15352

sw.bb5:                                           ; preds = %entry
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15353
  %15 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15354
  %16 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15355
  %orig_dev6 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %16, i32 0, i32 0, !dbg !15356
  %17 = load %struct.net_device*, %struct.net_device** %orig_dev6, align 8, !dbg !15356
  %18 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15357
  %u7 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %18, i32 0, i32 5, !dbg !15358
  %brport_flags8 = bitcast %union.anon.186* %u7 to i64*, !dbg !15359
  %19 = load i64, i64* %brport_flags8, align 8, !dbg !15359
  %call9 = call i32 @mlxsw_sp_port_attr_br_flags_set(%struct.mlxsw_sp_port* %14, %struct.switchdev_trans* %15, %struct.net_device* %17, i64 %19) #8, !dbg !15360
  store i32 %call9, i32* %err, align 4, !dbg !15361
  br label %sw.epilog, !dbg !15362

sw.bb10:                                          ; preds = %entry
  %20 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15363
  %21 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15364
  %22 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15365
  %u11 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %22, i32 0, i32 5, !dbg !15366
  %ageing_time = bitcast %union.anon.186* %u11 to i64*, !dbg !15367
  %23 = load i64, i64* %ageing_time, align 8, !dbg !15367
  %call12 = call i32 @mlxsw_sp_port_attr_br_ageing_set(%struct.mlxsw_sp_port* %20, %struct.switchdev_trans* %21, i64 %23) #8, !dbg !15368
  store i32 %call12, i32* %err, align 4, !dbg !15369
  br label %sw.epilog, !dbg !15370

sw.bb13:                                          ; preds = %entry
  %24 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15371
  %25 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15372
  %26 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15373
  %orig_dev14 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %26, i32 0, i32 0, !dbg !15374
  %27 = load %struct.net_device*, %struct.net_device** %orig_dev14, align 8, !dbg !15374
  %28 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15375
  %u15 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %28, i32 0, i32 5, !dbg !15376
  %vlan_filtering = bitcast %union.anon.186* %u15 to i8*, !dbg !15377
  %29 = load i8, i8* %vlan_filtering, align 8, !dbg !15377
  %tobool = trunc i8 %29 to i1, !dbg !15377
  %call16 = call i32 @mlxsw_sp_port_attr_br_vlan_set(%struct.mlxsw_sp_port* %24, %struct.switchdev_trans* %25, %struct.net_device* %27, i1 zeroext %tobool) #8, !dbg !15378
  store i32 %call16, i32* %err, align 4, !dbg !15379
  br label %sw.epilog, !dbg !15380

sw.bb17:                                          ; preds = %entry
  %30 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15381
  %31 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15382
  %32 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15383
  %orig_dev18 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %32, i32 0, i32 0, !dbg !15384
  %33 = load %struct.net_device*, %struct.net_device** %orig_dev18, align 8, !dbg !15384
  %34 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15385
  %u19 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %34, i32 0, i32 5, !dbg !15386
  %mrouter = bitcast %union.anon.186* %u19 to i8*, !dbg !15387
  %35 = load i8, i8* %mrouter, align 8, !dbg !15387
  %tobool20 = trunc i8 %35 to i1, !dbg !15387
  %call21 = call i32 @mlxsw_sp_port_attr_mrouter_set(%struct.mlxsw_sp_port* %30, %struct.switchdev_trans* %31, %struct.net_device* %33, i1 zeroext %tobool20) #8, !dbg !15388
  store i32 %call21, i32* %err, align 4, !dbg !15389
  br label %sw.epilog, !dbg !15390

sw.bb22:                                          ; preds = %entry
  %36 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15391
  %37 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15392
  %38 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15393
  %orig_dev23 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %38, i32 0, i32 0, !dbg !15394
  %39 = load %struct.net_device*, %struct.net_device** %orig_dev23, align 8, !dbg !15394
  %40 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15395
  %u24 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %40, i32 0, i32 5, !dbg !15396
  %mc_disabled = bitcast %union.anon.186* %u24 to i8*, !dbg !15397
  %41 = load i8, i8* %mc_disabled, align 8, !dbg !15397
  %tobool25 = trunc i8 %41 to i1, !dbg !15397
  %call26 = call i32 @mlxsw_sp_port_mc_disabled_set(%struct.mlxsw_sp_port* %36, %struct.switchdev_trans* %37, %struct.net_device* %39, i1 zeroext %tobool25) #8, !dbg !15398
  store i32 %call26, i32* %err, align 4, !dbg !15399
  br label %sw.epilog, !dbg !15400

sw.bb27:                                          ; preds = %entry
  %42 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15401
  %43 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15402
  %44 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15403
  %orig_dev28 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %44, i32 0, i32 0, !dbg !15404
  %45 = load %struct.net_device*, %struct.net_device** %orig_dev28, align 8, !dbg !15404
  %46 = load %struct.switchdev_attr*, %struct.switchdev_attr** %attr.addr, align 8, !dbg !15405
  %u29 = getelementptr inbounds %struct.switchdev_attr, %struct.switchdev_attr* %46, i32 0, i32 5, !dbg !15406
  %mrouter30 = bitcast %union.anon.186* %u29 to i8*, !dbg !15407
  %47 = load i8, i8* %mrouter30, align 8, !dbg !15407
  %tobool31 = trunc i8 %47 to i1, !dbg !15407
  %call32 = call i32 @mlxsw_sp_port_attr_br_mrouter_set(%struct.mlxsw_sp_port* %42, %struct.switchdev_trans* %43, %struct.net_device* %45, i1 zeroext %tobool31) #8, !dbg !15408
  store i32 %call32, i32* %err, align 4, !dbg !15409
  br label %sw.epilog, !dbg !15410

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %err, align 4, !dbg !15411
  br label %sw.epilog, !dbg !15412

sw.epilog:                                        ; preds = %sw.default, %sw.bb27, %sw.bb22, %sw.bb17, %sw.bb13, %sw.bb10, %sw.bb5, %sw.bb2, %sw.bb
  %48 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15413
  %call33 = call zeroext i1 @switchdev_trans_ph_commit(%struct.switchdev_trans* %48) #8, !dbg !15415
  br i1 %call33, label %if.then, label %if.end, !dbg !15416

if.then:                                          ; preds = %sw.epilog
  %49 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15417
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %49, i32 0, i32 2, !dbg !15418
  %50 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15418
  call void @mlxsw_sp_span_respin(%struct.mlxsw_sp* %50) #8, !dbg !15419
  br label %if.end, !dbg !15419

if.end:                                           ; preds = %if.then, %sw.epilog
  %51 = load i32, i32* %err, align 4, !dbg !15420
  ret i32 %51, !dbg !15421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @notifier_from_errno(i32 %err) #0 !dbg !15422 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !15423, metadata !DIExpression()), !dbg !15424
  %0 = load i32, i32* %err.addr, align 4, !dbg !15425
  %tobool = icmp ne i32 %0, 0, !dbg !15425
  br i1 %tobool, label %if.then, label %if.end, !dbg !15427

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !15428
  %sub = sub i32 1, %1, !dbg !15429
  %or = or i32 32768, %sub, !dbg !15430
  store i32 %or, i32* %retval, align 4, !dbg !15431
  br label %return, !dbg !15431

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !15432
  br label %return, !dbg !15432

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !15433
  ret i32 %2, !dbg !15433
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @netdev_master_upper_dev_get_rcu(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_bridge_master(%struct.net_device* %dev) #0 !dbg !15434 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15435, metadata !DIExpression()), !dbg !15436
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15437
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !15438
  %1 = load i32, i32* %priv_flags, align 4, !dbg !15438
  %and = and i32 %1, 2, !dbg !15439
  %tobool = icmp ne i32 %and, 0, !dbg !15437
  ret i1 %tobool, !dbg !15440
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find_rcu(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !15441 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !15444, metadata !DIExpression()), !dbg !15445
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !15446, metadata !DIExpression()), !dbg !15447
  ret void, !dbg !15448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_bridge_fdb_event_work(%struct.work_struct* %work) #0 !dbg !15449 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %switchdev_work = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %dev = alloca %struct.net_device*, align 8
  %fdb_info = alloca %struct.switchdev_notifier_fdb_info*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !15450, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, metadata !15452, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15454, metadata !DIExpression()), !dbg !15456
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !15456
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !15456
  store i8* %1, i8** %__mptr, align 8, !dbg !15456
  br label %do.body, !dbg !15456

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15457

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15456
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15456
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_sp_switchdev_event_work*, !dbg !15456
  store %struct.mlxsw_sp_switchdev_event_work* %3, %struct.mlxsw_sp_switchdev_event_work** %tmp, align 8, !dbg !15457
  %4 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %tmp, align 8, !dbg !15456
  store %struct.mlxsw_sp_switchdev_event_work* %4, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15453
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15459, metadata !DIExpression()), !dbg !15460
  %5 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15461
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %5, i32 0, i32 2, !dbg !15462
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !15462
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !15460
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_fdb_info** %fdb_info, metadata !15463, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15465, metadata !DIExpression()), !dbg !15466
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15467, metadata !DIExpression()), !dbg !15468
  call void @rtnl_lock() #8, !dbg !15469
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15470
  %call = call zeroext i1 @netif_is_vxlan(%struct.net_device* %7) #8, !dbg !15472
  br i1 %call, label %if.then, label %if.end, !dbg !15473

if.then:                                          ; preds = %do.end
  %8 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15474
  call void @mlxsw_sp_switchdev_bridge_nve_fdb_event(%struct.mlxsw_sp_switchdev_event_work* %8) #8, !dbg !15476
  br label %out, !dbg !15477

if.end:                                           ; preds = %do.end
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15478
  %call2 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find(%struct.net_device* %9) #8, !dbg !15479
  store %struct.mlxsw_sp_port* %call2, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15480
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15481
  %tobool = icmp ne %struct.mlxsw_sp_port* %10, null, !dbg !15481
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !15483

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !15484

if.end4:                                          ; preds = %if.end
  %11 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15485
  %event = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %11, i32 0, i32 3, !dbg !15486
  %12 = load i64, i64* %event, align 8, !dbg !15486
  switch i64 %12, label %sw.epilog [
    i64 3, label %sw.bb
    i64 4, label %sw.bb13
    i64 1, label %sw.bb16
    i64 2, label %sw.bb16
  ], !dbg !15487

sw.bb:                                            ; preds = %if.end4
  %13 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15488
  %14 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %13, i32 0, i32 1, !dbg !15490
  %fdb_info5 = bitcast %union.anon.185* %14 to %struct.switchdev_notifier_fdb_info*, !dbg !15490
  store %struct.switchdev_notifier_fdb_info* %fdb_info5, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !15491
  %15 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !15492
  %added_by_user = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %15, i32 0, i32 3, !dbg !15494
  %bf.load = load i8, i8* %added_by_user, align 2, !dbg !15494
  %bf.clear = and i8 %bf.load, 1, !dbg !15494
  %tobool6 = icmp ne i8 %bf.clear, 0, !dbg !15492
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !15495

if.then7:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !15496

if.end8:                                          ; preds = %sw.bb
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15497
  %17 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !15498
  %call9 = call i32 @mlxsw_sp_port_fdb_set(%struct.mlxsw_sp_port* %16, %struct.switchdev_notifier_fdb_info* %17, i1 zeroext true) #8, !dbg !15499
  store i32 %call9, i32* %err, align 4, !dbg !15500
  %18 = load i32, i32* %err, align 4, !dbg !15501
  %tobool10 = icmp ne i32 %18, 0, !dbg !15501
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !15503

if.then11:                                        ; preds = %if.end8
  br label %sw.epilog, !dbg !15504

if.end12:                                         ; preds = %if.end8
  %19 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !15505
  %addr = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %19, i32 0, i32 1, !dbg !15506
  %20 = load i8*, i8** %addr, align 8, !dbg !15506
  %21 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !15507
  %vid = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %21, i32 0, i32 2, !dbg !15508
  %22 = load i16, i16* %vid, align 8, !dbg !15508
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15509
  call void @mlxsw_sp_fdb_call_notifiers(i32 5, i8* %20, i16 zeroext %22, %struct.net_device* %23, i1 zeroext true) #8, !dbg !15510
  br label %sw.epilog, !dbg !15511

sw.bb13:                                          ; preds = %if.end4
  %24 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15512
  %25 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %24, i32 0, i32 1, !dbg !15513
  %fdb_info14 = bitcast %union.anon.185* %25 to %struct.switchdev_notifier_fdb_info*, !dbg !15513
  store %struct.switchdev_notifier_fdb_info* %fdb_info14, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !15514
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15515
  %27 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !15516
  %call15 = call i32 @mlxsw_sp_port_fdb_set(%struct.mlxsw_sp_port* %26, %struct.switchdev_notifier_fdb_info* %27, i1 zeroext false) #8, !dbg !15517
  br label %sw.epilog, !dbg !15518

sw.bb16:                                          ; preds = %if.end4, %if.end4
  br label %sw.epilog, !dbg !15519

sw.epilog:                                        ; preds = %if.end4, %sw.bb16, %sw.bb13, %if.end12, %if.then11, %if.then7
  %28 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15520
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %28, i32 0, i32 2, !dbg !15521
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15521
  call void @mlxsw_sp_span_respin(%struct.mlxsw_sp* %29) #8, !dbg !15522
  br label %out, !dbg !15522

out:                                              ; preds = %sw.epilog, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !15523), !dbg !15524
  call void @rtnl_unlock() #8, !dbg !15525
  %30 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15526
  %31 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %30, i32 0, i32 1, !dbg !15527
  %fdb_info17 = bitcast %union.anon.185* %31 to %struct.switchdev_notifier_fdb_info*, !dbg !15527
  %addr18 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %fdb_info17, i32 0, i32 1, !dbg !15528
  %32 = load i8*, i8** %addr18, align 8, !dbg !15528
  call void @kfree(i8* %32) #8, !dbg !15529
  %33 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15530
  %34 = bitcast %struct.mlxsw_sp_switchdev_event_work* %33 to i8*, !dbg !15530
  call void @kfree(i8* %34) #8, !dbg !15531
  %35 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15532
  call void @dev_put(%struct.net_device* %35) #8, !dbg !15533
  ret void, !dbg !15534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ether_addr_copy(i8* %dst, i8* %src) #0 !dbg !15535 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15539, metadata !DIExpression()), !dbg !15540
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15541, metadata !DIExpression()), !dbg !15542
  %0 = load i8*, i8** %src.addr, align 8, !dbg !15543
  %1 = bitcast i8* %0 to i32*, !dbg !15544
  %2 = load i32, i32* %1, align 4, !dbg !15544
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15545
  %4 = bitcast i8* %3 to i32*, !dbg !15546
  store i32 %2, i32* %4, align 4, !dbg !15547
  %5 = load i8*, i8** %src.addr, align 8, !dbg !15548
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !15549
  %6 = bitcast i8* %add.ptr to i16*, !dbg !15550
  %7 = load i16, i16* %6, align 2, !dbg !15550
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !15551
  %add.ptr1 = getelementptr i8, i8* %8, i64 4, !dbg !15552
  %9 = bitcast i8* %add.ptr1 to i16*, !dbg !15553
  store i16 %7, i16* %9, align 2, !dbg !15554
  ret void, !dbg !15555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_hold(%struct.net_device* %dev) #0 !dbg !15556 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15557, metadata !DIExpression()), !dbg !15558
  br label %do.body, !dbg !15559

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15560

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !15562, metadata !DIExpression()), !dbg !15564
  store i8* null, i8** %__vpp_verify, align 8, !dbg !15564
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !15564
  br label %do.end, !dbg !15564

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !15560

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !15565, metadata !DIExpression()), !dbg !15568
  store i32 1, i32* %pao_ID__, align 4, !dbg !15568
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15569
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 97, !dbg !15569
  %2 = load i32*, i32** %pcpu_refcnt, align 8, !dbg !15569
  call void asm sideeffect "incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %2, i32* %2) #9, !dbg !15569, !srcloc !15572
  br label %do.end3, !dbg !15568

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !15560

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !15573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_vxlan_fdb_event_work(%struct.work_struct* %work) #0 !dbg !15574 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %switchdev_work = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %dev = alloca %struct.net_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !15575, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, metadata !15577, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15579, metadata !DIExpression()), !dbg !15581
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !15581
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !15581
  store i8* %1, i8** %__mptr, align 8, !dbg !15581
  br label %do.body, !dbg !15581

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15582

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15581
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15581
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_sp_switchdev_event_work*, !dbg !15581
  store %struct.mlxsw_sp_switchdev_event_work* %3, %struct.mlxsw_sp_switchdev_event_work** %tmp, align 8, !dbg !15582
  %4 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %tmp, align 8, !dbg !15581
  store %struct.mlxsw_sp_switchdev_event_work* %4, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15578
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15584, metadata !DIExpression()), !dbg !15585
  %5 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15586
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %5, i32 0, i32 2, !dbg !15587
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !15587
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !15585
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !15588, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !15590, metadata !DIExpression()), !dbg !15591
  call void @rtnl_lock() #8, !dbg !15592
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15593
  %call = call zeroext i1 @netif_running(%struct.net_device* %7) #8, !dbg !15595
  br i1 %call, label %if.end, label %if.then, !dbg !15596

if.then:                                          ; preds = %do.end
  br label %out, !dbg !15597

if.end:                                           ; preds = %do.end
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15598
  %call2 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %8) #8, !dbg !15599
  store %struct.net_device* %call2, %struct.net_device** %br_dev, align 8, !dbg !15600
  %9 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !15601
  %tobool = icmp ne %struct.net_device* %9, null, !dbg !15601
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !15603

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !15604

if.end4:                                          ; preds = %if.end
  %10 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !15605
  %call5 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %10) #8, !dbg !15607
  br i1 %call5, label %if.end7, label %if.then6, !dbg !15608

if.then6:                                         ; preds = %if.end4
  br label %out, !dbg !15609

if.end7:                                          ; preds = %if.end4
  %11 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !15610
  %call8 = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %11) #8, !dbg !15611
  store %struct.mlxsw_sp* %call8, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15612
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15613
  %tobool9 = icmp ne %struct.mlxsw_sp* %12, null, !dbg !15613
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !15615

if.then10:                                        ; preds = %if.end7
  br label %out, !dbg !15616

if.end11:                                         ; preds = %if.end7
  %13 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15617
  %event = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %13, i32 0, i32 3, !dbg !15618
  %14 = load i64, i64* %event, align 8, !dbg !15618
  switch i64 %14, label %sw.epilog [
    i64 12, label %sw.bb
    i64 13, label %sw.bb12
  ], !dbg !15619

sw.bb:                                            ; preds = %if.end11
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15620
  %16 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15622
  call void @mlxsw_sp_switchdev_vxlan_fdb_add(%struct.mlxsw_sp* %15, %struct.mlxsw_sp_switchdev_event_work* %16) #8, !dbg !15623
  br label %sw.epilog, !dbg !15624

sw.bb12:                                          ; preds = %if.end11
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15625
  %18 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15626
  call void @mlxsw_sp_switchdev_vxlan_fdb_del(%struct.mlxsw_sp* %17, %struct.mlxsw_sp_switchdev_event_work* %18) #8, !dbg !15627
  br label %sw.epilog, !dbg !15628

sw.epilog:                                        ; preds = %if.end11, %sw.bb12, %sw.bb
  br label %out, !dbg !15629

out:                                              ; preds = %sw.epilog, %if.then10, %if.then6, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !15630), !dbg !15631
  call void @rtnl_unlock() #8, !dbg !15632
  %19 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work, align 8, !dbg !15633
  %20 = bitcast %struct.mlxsw_sp_switchdev_event_work* %19 to i8*, !dbg !15633
  call void @kfree(i8* %20) #8, !dbg !15634
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15635
  call void @dev_put(%struct.net_device* %21) #8, !dbg !15636
  ret void, !dbg !15637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_switchdev_vxlan_work_prepare(%struct.mlxsw_sp_switchdev_event_work* %switchdev_work, %struct.switchdev_notifier_info* %info) #0 !dbg !11397 {
entry:
  %retval = alloca i32, align 4
  %switchdev_work.addr = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %info.addr = alloca %struct.switchdev_notifier_info*, align 8
  %vxlan = alloca %struct.vxlan_dev*, align 8
  %vxlan_fdb_info = alloca %struct.switchdev_notifier_vxlan_fdb_info*, align 8
  %cfg = alloca %struct.vxlan_config*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchdev_notifier_vxlan_fdb_info*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack17 = alloca %struct.netlink_ext_ack*, align 8
  %__extack27 = alloca %struct.netlink_ext_ack*, align 8
  %__extack37 = alloca %struct.netlink_ext_ack*, align 8
  %__extack47 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_sp_switchdev_event_work* %switchdev_work, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, metadata !15638, metadata !DIExpression()), !dbg !15639
  store %struct.switchdev_notifier_info* %info, %struct.switchdev_notifier_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_info** %info.addr, metadata !15640, metadata !DIExpression()), !dbg !15641
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !15642, metadata !DIExpression()), !dbg !15643
  %0 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !15644
  %dev = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %0, i32 0, i32 2, !dbg !15645
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15645
  %call = call i8* @netdev_priv(%struct.net_device* %1) #8, !dbg !15646
  %2 = bitcast i8* %call to %struct.vxlan_dev*, !dbg !15646
  store %struct.vxlan_dev* %2, %struct.vxlan_dev** %vxlan, align 8, !dbg !15643
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, metadata !15647, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.declare(metadata %struct.vxlan_config** %cfg, metadata !15649, metadata !DIExpression()), !dbg !15651
  %3 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !15652
  %cfg1 = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %3, i32 0, i32 12, !dbg !15653
  store %struct.vxlan_config* %cfg1, %struct.vxlan_config** %cfg, align 8, !dbg !15651
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !15654, metadata !DIExpression()), !dbg !15655
  %4 = load %struct.switchdev_notifier_info*, %struct.switchdev_notifier_info** %info.addr, align 8, !dbg !15656
  %call2 = call %struct.netlink_ext_ack* @switchdev_notifier_info_to_extack(%struct.switchdev_notifier_info* %4) #8, !dbg !15657
  store %struct.netlink_ext_ack* %call2, %struct.netlink_ext_ack** %extack, align 8, !dbg !15658
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15659, metadata !DIExpression()), !dbg !15661
  %5 = load %struct.switchdev_notifier_info*, %struct.switchdev_notifier_info** %info.addr, align 8, !dbg !15661
  %6 = bitcast %struct.switchdev_notifier_info* %5 to i8*, !dbg !15661
  store i8* %6, i8** %__mptr, align 8, !dbg !15661
  br label %do.body, !dbg !15661

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15662

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !15661
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !15661
  %8 = bitcast i8* %add.ptr to %struct.switchdev_notifier_vxlan_fdb_info*, !dbg !15661
  store %struct.switchdev_notifier_vxlan_fdb_info* %8, %struct.switchdev_notifier_vxlan_fdb_info** %tmp, align 8, !dbg !15662
  %9 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %tmp, align 8, !dbg !15661
  store %struct.switchdev_notifier_vxlan_fdb_info* %9, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15664
  %10 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15665
  %remote_port = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %10, i32 0, i32 2, !dbg !15667
  %11 = load i16, i16* %remote_port, align 4, !dbg !15667
  %conv = zext i16 %11 to i32, !dbg !15665
  %12 = load %struct.vxlan_config*, %struct.vxlan_config** %cfg, align 8, !dbg !15668
  %dst_port = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %12, i32 0, i32 5, !dbg !15669
  %13 = load i16, i16* %dst_port, align 4, !dbg !15669
  %conv3 = zext i16 %13 to i32, !dbg !15668
  %cmp = icmp ne i32 %conv, %conv3, !dbg !15670
  br i1 %cmp, label %if.then, label %if.end8, !dbg !15671

if.then:                                          ; preds = %do.end
  br label %do.body5, !dbg !15672

do.body5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !15674, metadata !DIExpression()), !dbg !15676
  %14 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !15676
  store %struct.netlink_ext_ack* %14, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15676
  %15 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15677
  %tobool = icmp ne %struct.netlink_ext_ack* %15, null, !dbg !15677
  br i1 %tobool, label %if.then6, label %if.end, !dbg !15676

if.then6:                                         ; preds = %do.body5
  %16 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15677
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %16, i32 0, i32 0, !dbg !15677
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @mlxsw_sp_switchdev_vxlan_work_prepare.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !15677
  br label %if.end, !dbg !15677

if.end:                                           ; preds = %if.then6, %do.body5
  br label %do.end7, !dbg !15676

do.end7:                                          ; preds = %if.end
  store i32 -95, i32* %retval, align 4, !dbg !15679
  br label %return, !dbg !15679

if.end8:                                          ; preds = %do.end
  %17 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15680
  %remote_vni = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %17, i32 0, i32 3, !dbg !15682
  %18 = load i32, i32* %remote_vni, align 8, !dbg !15682
  %19 = load %struct.vxlan_config*, %struct.vxlan_config** %cfg, align 8, !dbg !15683
  %vni = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %19, i32 0, i32 2, !dbg !15684
  %20 = load i32, i32* %vni, align 8, !dbg !15684
  %cmp9 = icmp ne i32 %18, %20, !dbg !15685
  br i1 %cmp9, label %if.then15, label %lor.lhs.false, !dbg !15686

lor.lhs.false:                                    ; preds = %if.end8
  %21 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15687
  %vni11 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %21, i32 0, i32 6, !dbg !15688
  %22 = load i32, i32* %vni11, align 8, !dbg !15688
  %23 = load %struct.vxlan_config*, %struct.vxlan_config** %cfg, align 8, !dbg !15689
  %vni12 = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %23, i32 0, i32 2, !dbg !15690
  %24 = load i32, i32* %vni12, align 8, !dbg !15690
  %cmp13 = icmp ne i32 %22, %24, !dbg !15691
  br i1 %cmp13, label %if.then15, label %if.end23, !dbg !15692

if.then15:                                        ; preds = %lor.lhs.false, %if.end8
  br label %do.body16, !dbg !15693

do.body16:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack17, metadata !15695, metadata !DIExpression()), !dbg !15697
  %25 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !15697
  store %struct.netlink_ext_ack* %25, %struct.netlink_ext_ack** %__extack17, align 8, !dbg !15697
  %26 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack17, align 8, !dbg !15698
  %tobool18 = icmp ne %struct.netlink_ext_ack* %26, null, !dbg !15698
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !15697

if.then19:                                        ; preds = %do.body16
  %27 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack17, align 8, !dbg !15698
  %_msg20 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %27, i32 0, i32 0, !dbg !15698
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @mlxsw_sp_switchdev_vxlan_work_prepare.__msg.75, i64 0, i64 0), i8** %_msg20, align 8, !dbg !15698
  br label %if.end21, !dbg !15698

if.end21:                                         ; preds = %if.then19, %do.body16
  br label %do.end22, !dbg !15697

do.end22:                                         ; preds = %if.end21
  store i32 -95, i32* %retval, align 4, !dbg !15700
  br label %return, !dbg !15700

if.end23:                                         ; preds = %lor.lhs.false
  %28 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15701
  %remote_ifindex = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %28, i32 0, i32 4, !dbg !15703
  %29 = load i32, i32* %remote_ifindex, align 4, !dbg !15703
  %tobool24 = icmp ne i32 %29, 0, !dbg !15701
  br i1 %tobool24, label %if.then25, label %if.end33, !dbg !15704

if.then25:                                        ; preds = %if.end23
  br label %do.body26, !dbg !15705

do.body26:                                        ; preds = %if.then25
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack27, metadata !15707, metadata !DIExpression()), !dbg !15709
  %30 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !15709
  store %struct.netlink_ext_ack* %30, %struct.netlink_ext_ack** %__extack27, align 8, !dbg !15709
  %31 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack27, align 8, !dbg !15710
  %tobool28 = icmp ne %struct.netlink_ext_ack* %31, null, !dbg !15710
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !15709

if.then29:                                        ; preds = %do.body26
  %32 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack27, align 8, !dbg !15710
  %_msg30 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %32, i32 0, i32 0, !dbg !15710
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @mlxsw_sp_switchdev_vxlan_work_prepare.__msg.76, i64 0, i64 0), i8** %_msg30, align 8, !dbg !15710
  br label %if.end31, !dbg !15710

if.end31:                                         ; preds = %if.then29, %do.body26
  br label %do.end32, !dbg !15709

do.end32:                                         ; preds = %if.end31
  store i32 -95, i32* %retval, align 4, !dbg !15712
  br label %return, !dbg !15712

if.end33:                                         ; preds = %if.end23
  %33 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15713
  %eth_addr = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %33, i32 0, i32 5, !dbg !15715
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr, i64 0, i64 0, !dbg !15713
  %call34 = call zeroext i1 @is_multicast_ether_addr(i8* %arraydecay) #8, !dbg !15716
  br i1 %call34, label %if.then35, label %if.end43, !dbg !15717

if.then35:                                        ; preds = %if.end33
  br label %do.body36, !dbg !15718

do.body36:                                        ; preds = %if.then35
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack37, metadata !15720, metadata !DIExpression()), !dbg !15722
  %34 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !15722
  store %struct.netlink_ext_ack* %34, %struct.netlink_ext_ack** %__extack37, align 8, !dbg !15722
  %35 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack37, align 8, !dbg !15723
  %tobool38 = icmp ne %struct.netlink_ext_ack* %35, null, !dbg !15723
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !15722

if.then39:                                        ; preds = %do.body36
  %36 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack37, align 8, !dbg !15723
  %_msg40 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %36, i32 0, i32 0, !dbg !15723
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @mlxsw_sp_switchdev_vxlan_work_prepare.__msg.77, i64 0, i64 0), i8** %_msg40, align 8, !dbg !15723
  br label %if.end41, !dbg !15723

if.end41:                                         ; preds = %if.then39, %do.body36
  br label %do.end42, !dbg !15722

do.end42:                                         ; preds = %if.end41
  store i32 -95, i32* %retval, align 4, !dbg !15725
  br label %return, !dbg !15725

if.end43:                                         ; preds = %if.end33
  %37 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15726
  %remote_ip = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %37, i32 0, i32 1, !dbg !15728
  %call44 = call zeroext i1 @vxlan_addr_multicast(%union.vxlan_addr* %remote_ip) #8, !dbg !15729
  br i1 %call44, label %if.then45, label %if.end53, !dbg !15730

if.then45:                                        ; preds = %if.end43
  br label %do.body46, !dbg !15731

do.body46:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack47, metadata !15733, metadata !DIExpression()), !dbg !15735
  %38 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !15735
  store %struct.netlink_ext_ack* %38, %struct.netlink_ext_ack** %__extack47, align 8, !dbg !15735
  %39 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack47, align 8, !dbg !15736
  %tobool48 = icmp ne %struct.netlink_ext_ack* %39, null, !dbg !15736
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !15735

if.then49:                                        ; preds = %do.body46
  %40 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack47, align 8, !dbg !15736
  %_msg50 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %40, i32 0, i32 0, !dbg !15736
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @mlxsw_sp_switchdev_vxlan_work_prepare.__msg.78, i64 0, i64 0), i8** %_msg50, align 8, !dbg !15736
  br label %if.end51, !dbg !15736

if.end51:                                         ; preds = %if.then49, %do.body46
  br label %do.end52, !dbg !15735

do.end52:                                         ; preds = %if.end51
  store i32 -95, i32* %retval, align 4, !dbg !15738
  br label %return, !dbg !15738

if.end53:                                         ; preds = %if.end43
  %41 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !15739
  %42 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %41, i32 0, i32 1, !dbg !15740
  %vxlan_fdb_info54 = bitcast %union.anon.185* %42 to %struct.switchdev_notifier_vxlan_fdb_info*, !dbg !15740
  %43 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !15741
  %44 = bitcast %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info54 to i8*, !dbg !15742
  %45 = bitcast %struct.switchdev_notifier_vxlan_fdb_info* %43 to i8*, !dbg !15742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 72, i1 false), !dbg !15742
  store i32 0, i32* %retval, align 4, !dbg !15743
  br label %return, !dbg !15743

return:                                           ; preds = %if.end53, %do.end52, %do.end42, %do.end32, %do.end22, %do.end7
  %46 = load i32, i32* %retval, align 4, !dbg !15744
  ret i32 %46, !dbg !15744
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_core_schedule_work(%struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_stp_state_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, %struct.net_device* %orig_dev, i8 zeroext %state) #0 !dbg !15745 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %orig_dev.addr = alloca %struct.net_device*, align 8
  %state.addr = alloca i8, align 1
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp20 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr31 = alloca i8*, align 8
  %tmp36 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !15748, metadata !DIExpression()), !dbg !15749
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !15750, metadata !DIExpression()), !dbg !15751
  store %struct.net_device* %orig_dev, %struct.net_device** %orig_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev.addr, metadata !15752, metadata !DIExpression()), !dbg !15753
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !15754, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !15756, metadata !DIExpression()), !dbg !15757
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !15758, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15760, metadata !DIExpression()), !dbg !15761
  %0 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15762
  %call = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %0) #8, !dbg !15764
  br i1 %call, label %if.then, label %if.end, !dbg !15765

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15766
  br label %return, !dbg !15766

if.end:                                           ; preds = %entry
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15767
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 2, !dbg !15768
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15768
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 8, !dbg !15769
  %3 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !15769
  %4 = load %struct.net_device*, %struct.net_device** %orig_dev.addr, align 8, !dbg !15770
  %call1 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %3, %struct.net_device* %4) #8, !dbg !15771
  store %struct.mlxsw_sp_bridge_port* %call1, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15772
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15773
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %5, null, !dbg !15773
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !15775

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15776
  br label %return, !dbg !15776

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15777, metadata !DIExpression()), !dbg !15780
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15780
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %6, i32 0, i32 3, !dbg !15780
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !15780
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15780
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !15780
  store i8* %8, i8** %__mptr, align 8, !dbg !15780
  br label %do.body, !dbg !15780

do.body:                                          ; preds = %if.end3
  br label %do.end, !dbg !15781

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !15780
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !15780
  %10 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_vlan*, !dbg !15780
  store %struct.mlxsw_sp_bridge_vlan* %10, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !15781
  %11 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !15780
  store %struct.mlxsw_sp_bridge_vlan* %11, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15783
  br label %for.cond, !dbg !15783

for.cond:                                         ; preds = %do.end13, %do.end
  %12 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15784
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %12, i32 0, i32 0, !dbg !15784
  %13 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15784
  %vlans_list4 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %13, i32 0, i32 3, !dbg !15784
  %cmp = icmp eq %struct.list_head* %list, %vlans_list4, !dbg !15784
  %lnot = xor i1 %cmp, true, !dbg !15784
  br i1 %lnot, label %for.body, label %for.end, !dbg !15783

for.body:                                         ; preds = %for.cond
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15786
  %15 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15788
  %16 = load i8, i8* %state.addr, align 1, !dbg !15789
  %call5 = call i32 @mlxsw_sp_port_bridge_vlan_stp_set(%struct.mlxsw_sp_port* %14, %struct.mlxsw_sp_bridge_vlan* %15, i8 zeroext %16) #8, !dbg !15790
  store i32 %call5, i32* %err, align 4, !dbg !15791
  %17 = load i32, i32* %err, align 4, !dbg !15792
  %tobool6 = icmp ne i32 %17, 0, !dbg !15792
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15794

if.then7:                                         ; preds = %for.body
  br label %err_port_bridge_vlan_stp_set, !dbg !15795

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !15796

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !15797, metadata !DIExpression()), !dbg !15799
  %18 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15799
  %list10 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %18, i32 0, i32 0, !dbg !15799
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list10, i32 0, i32 0, !dbg !15799
  %19 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !15799
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !15799
  store i8* %20, i8** %__mptr9, align 8, !dbg !15799
  br label %do.body12, !dbg !15799

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !15800

do.end13:                                         ; preds = %do.body12
  %21 = load i8*, i8** %__mptr9, align 8, !dbg !15799
  %add.ptr15 = getelementptr i8, i8* %21, i64 0, !dbg !15799
  %22 = bitcast i8* %add.ptr15 to %struct.mlxsw_sp_bridge_vlan*, !dbg !15799
  store %struct.mlxsw_sp_bridge_vlan* %22, %struct.mlxsw_sp_bridge_vlan** %tmp14, align 8, !dbg !15800
  %23 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp14, align 8, !dbg !15799
  store %struct.mlxsw_sp_bridge_vlan* %23, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15784
  br label %for.cond, !dbg !15784, !llvm.loop !15802

for.end:                                          ; preds = %for.cond
  %24 = load i8, i8* %state.addr, align 1, !dbg !15804
  %25 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15805
  %stp_state = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %25, i32 0, i32 5, !dbg !15806
  store i8 %24, i8* %stp_state, align 4, !dbg !15807
  store i32 0, i32* %retval, align 4, !dbg !15808
  br label %return, !dbg !15808

err_port_bridge_vlan_stp_set:                     ; preds = %if.then7
  call void @llvm.dbg.label(metadata !15809), !dbg !15810
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !15811, metadata !DIExpression()), !dbg !15814
  %26 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15814
  %list17 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %26, i32 0, i32 0, !dbg !15814
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list17, i32 0, i32 1, !dbg !15814
  %27 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15814
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !15814
  store i8* %28, i8** %__mptr16, align 8, !dbg !15814
  br label %do.body18, !dbg !15814

do.body18:                                        ; preds = %err_port_bridge_vlan_stp_set
  br label %do.end19, !dbg !15815

do.end19:                                         ; preds = %do.body18
  %29 = load i8*, i8** %__mptr16, align 8, !dbg !15814
  %add.ptr21 = getelementptr i8, i8* %29, i64 0, !dbg !15814
  %30 = bitcast i8* %add.ptr21 to %struct.mlxsw_sp_bridge_vlan*, !dbg !15814
  store %struct.mlxsw_sp_bridge_vlan* %30, %struct.mlxsw_sp_bridge_vlan** %tmp20, align 8, !dbg !15815
  %31 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp20, align 8, !dbg !15814
  store %struct.mlxsw_sp_bridge_vlan* %31, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15817
  br label %for.cond22, !dbg !15817

for.cond22:                                       ; preds = %do.end35, %do.end19
  %32 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15818
  %list23 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %32, i32 0, i32 0, !dbg !15818
  %33 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15818
  %vlans_list24 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %33, i32 0, i32 3, !dbg !15818
  %cmp25 = icmp eq %struct.list_head* %list23, %vlans_list24, !dbg !15818
  %lnot26 = xor i1 %cmp25, true, !dbg !15818
  br i1 %lnot26, label %for.body27, label %for.end38, !dbg !15817

for.body27:                                       ; preds = %for.cond22
  %34 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15820
  %35 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15821
  %36 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15822
  %stp_state28 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %36, i32 0, i32 5, !dbg !15823
  %37 = load i8, i8* %stp_state28, align 4, !dbg !15823
  %call29 = call i32 @mlxsw_sp_port_bridge_vlan_stp_set(%struct.mlxsw_sp_port* %34, %struct.mlxsw_sp_bridge_vlan* %35, i8 zeroext %37) #8, !dbg !15824
  br label %for.inc30, !dbg !15824

for.inc30:                                        ; preds = %for.body27
  call void @llvm.dbg.declare(metadata i8** %__mptr31, metadata !15825, metadata !DIExpression()), !dbg !15827
  %38 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15827
  %list32 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %38, i32 0, i32 0, !dbg !15827
  %prev33 = getelementptr inbounds %struct.list_head, %struct.list_head* %list32, i32 0, i32 1, !dbg !15827
  %39 = load %struct.list_head*, %struct.list_head** %prev33, align 8, !dbg !15827
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !15827
  store i8* %40, i8** %__mptr31, align 8, !dbg !15827
  br label %do.body34, !dbg !15827

do.body34:                                        ; preds = %for.inc30
  br label %do.end35, !dbg !15828

do.end35:                                         ; preds = %do.body34
  %41 = load i8*, i8** %__mptr31, align 8, !dbg !15827
  %add.ptr37 = getelementptr i8, i8* %41, i64 0, !dbg !15827
  %42 = bitcast i8* %add.ptr37 to %struct.mlxsw_sp_bridge_vlan*, !dbg !15827
  store %struct.mlxsw_sp_bridge_vlan* %42, %struct.mlxsw_sp_bridge_vlan** %tmp36, align 8, !dbg !15828
  %43 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp36, align 8, !dbg !15827
  store %struct.mlxsw_sp_bridge_vlan* %43, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !15818
  br label %for.cond22, !dbg !15818, !llvm.loop !15830

for.end38:                                        ; preds = %for.cond22
  %44 = load i32, i32* %err, align 4, !dbg !15832
  store i32 %44, i32* %retval, align 4, !dbg !15833
  br label %return, !dbg !15833

return:                                           ; preds = %for.end38, %for.end, %if.then2, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !15834
  ret i32 %45, !dbg !15834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_br_pre_flags_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, i64 %brport_flags) #0 !dbg !15835 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %brport_flags.addr = alloca i64, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !15838, metadata !DIExpression()), !dbg !15839
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !15840, metadata !DIExpression()), !dbg !15841
  store i64 %brport_flags, i64* %brport_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %brport_flags.addr, metadata !15842, metadata !DIExpression()), !dbg !15843
  %0 = load i64, i64* %brport_flags.addr, align 8, !dbg !15844
  %and = and i64 %0, -2145, !dbg !15846
  %tobool = icmp ne i64 %and, 0, !dbg !15846
  br i1 %tobool, label %if.then, label %if.end, !dbg !15847

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15848
  br label %return, !dbg !15848

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15849
  br label %return, !dbg !15849

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !15850
  ret i32 %1, !dbg !15850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_br_flags_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, %struct.net_device* %orig_dev, i64 %brport_flags) #0 !dbg !15851 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %orig_dev.addr = alloca %struct.net_device*, align 8
  %brport_flags.addr = alloca i64, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !15854, metadata !DIExpression()), !dbg !15855
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !15856, metadata !DIExpression()), !dbg !15857
  store %struct.net_device* %orig_dev, %struct.net_device** %orig_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev.addr, metadata !15858, metadata !DIExpression()), !dbg !15859
  store i64 %brport_flags, i64* %brport_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %brport_flags.addr, metadata !15860, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !15862, metadata !DIExpression()), !dbg !15863
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15864, metadata !DIExpression()), !dbg !15865
  %0 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15866
  %call = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %0) #8, !dbg !15868
  br i1 %call, label %if.then, label %if.end, !dbg !15869

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15870
  br label %return, !dbg !15870

if.end:                                           ; preds = %entry
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15871
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 2, !dbg !15872
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15872
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 8, !dbg !15873
  %3 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !15873
  %4 = load %struct.net_device*, %struct.net_device** %orig_dev.addr, align 8, !dbg !15874
  %call1 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %3, %struct.net_device* %4) #8, !dbg !15875
  store %struct.mlxsw_sp_bridge_port* %call1, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15876
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15877
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %5, null, !dbg !15877
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !15879

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15880
  br label %return, !dbg !15880

if.end3:                                          ; preds = %if.end
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15881
  %7 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15882
  %8 = load i64, i64* %brport_flags.addr, align 8, !dbg !15883
  %and = and i64 %8, 64, !dbg !15884
  %tobool4 = icmp ne i64 %and, 0, !dbg !15883
  %call5 = call i32 @mlxsw_sp_bridge_port_flood_table_set(%struct.mlxsw_sp_port* %6, %struct.mlxsw_sp_bridge_port* %7, i32 0, i1 zeroext %tobool4) #8, !dbg !15885
  store i32 %call5, i32* %err, align 4, !dbg !15886
  %9 = load i32, i32* %err, align 4, !dbg !15887
  %tobool6 = icmp ne i32 %9, 0, !dbg !15887
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15889

if.then7:                                         ; preds = %if.end3
  %10 = load i32, i32* %err, align 4, !dbg !15890
  store i32 %10, i32* %retval, align 4, !dbg !15891
  br label %return, !dbg !15891

if.end8:                                          ; preds = %if.end3
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15892
  %12 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15893
  %13 = load i64, i64* %brport_flags.addr, align 8, !dbg !15894
  %and9 = and i64 %13, 32, !dbg !15895
  %tobool10 = icmp ne i64 %and9, 0, !dbg !15894
  %call11 = call i32 @mlxsw_sp_bridge_port_learning_set(%struct.mlxsw_sp_port* %11, %struct.mlxsw_sp_bridge_port* %12, i1 zeroext %tobool10) #8, !dbg !15896
  store i32 %call11, i32* %err, align 4, !dbg !15897
  %14 = load i32, i32* %err, align 4, !dbg !15898
  %tobool12 = icmp ne i32 %14, 0, !dbg !15898
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !15900

if.then13:                                        ; preds = %if.end8
  %15 = load i32, i32* %err, align 4, !dbg !15901
  store i32 %15, i32* %retval, align 4, !dbg !15902
  br label %return, !dbg !15902

if.end14:                                         ; preds = %if.end8
  %16 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15903
  %bridge_device = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %16, i32 0, i32 1, !dbg !15905
  %17 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15905
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %17, i32 0, i32 4, !dbg !15906
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !15906
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !15906
  %bf.clear = and i8 %bf.lshr, 1, !dbg !15906
  %tobool15 = icmp ne i8 %bf.clear, 0, !dbg !15903
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !15907

if.then16:                                        ; preds = %if.end14
  br label %out, !dbg !15908

if.end17:                                         ; preds = %if.end14
  %18 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15909
  %19 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15910
  %20 = load i64, i64* %brport_flags.addr, align 8, !dbg !15911
  %and18 = and i64 %20, 2048, !dbg !15912
  %tobool19 = icmp ne i64 %and18, 0, !dbg !15911
  %call20 = call i32 @mlxsw_sp_bridge_port_flood_table_set(%struct.mlxsw_sp_port* %18, %struct.mlxsw_sp_bridge_port* %19, i32 2, i1 zeroext %tobool19) #8, !dbg !15913
  store i32 %call20, i32* %err, align 4, !dbg !15914
  %21 = load i32, i32* %err, align 4, !dbg !15915
  %tobool21 = icmp ne i32 %21, 0, !dbg !15915
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !15917

if.then22:                                        ; preds = %if.end17
  %22 = load i32, i32* %err, align 4, !dbg !15918
  store i32 %22, i32* %retval, align 4, !dbg !15919
  br label %return, !dbg !15919

if.end23:                                         ; preds = %if.end17
  br label %out, !dbg !15915

out:                                              ; preds = %if.end23, %if.then16
  call void @llvm.dbg.label(metadata !15920), !dbg !15921
  %23 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !15922
  %flags = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %23, i32 0, i32 6, !dbg !15923
  %24 = bitcast i64* %flags to i8*, !dbg !15924
  %25 = bitcast i64* %brport_flags.addr to i8*, !dbg !15924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 8, i1 false), !dbg !15924
  store i32 0, i32* %retval, align 4, !dbg !15925
  br label %return, !dbg !15925

return:                                           ; preds = %out, %if.then22, %if.then13, %if.then7, %if.then2, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !15926
  ret i32 %26, !dbg !15926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_br_ageing_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, i64 %ageing_clock_t) #0 !dbg !15927 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %ageing_clock_t.addr = alloca i64, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %ageing_jiffies = alloca i64, align 8
  %ageing_time = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !15928, metadata !DIExpression()), !dbg !15929
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !15930, metadata !DIExpression()), !dbg !15931
  store i64 %ageing_clock_t, i64* %ageing_clock_t.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ageing_clock_t.addr, metadata !15932, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !15934, metadata !DIExpression()), !dbg !15935
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15936
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !15937
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !15937
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15935
  call void @llvm.dbg.declare(metadata i64* %ageing_jiffies, metadata !15938, metadata !DIExpression()), !dbg !15939
  %2 = load i64, i64* %ageing_clock_t.addr, align 8, !dbg !15940
  %call = call i64 @clock_t_to_jiffies(i64 %2) #8, !dbg !15941
  store i64 %call, i64* %ageing_jiffies, align 8, !dbg !15939
  call void @llvm.dbg.declare(metadata i32* %ageing_time, metadata !15942, metadata !DIExpression()), !dbg !15943
  %3 = load i64, i64* %ageing_jiffies, align 8, !dbg !15944
  %call2 = call i32 @jiffies_to_msecs(i64 %3) #8, !dbg !15945
  %div = udiv i32 %call2, 1000, !dbg !15946
  store i32 %div, i32* %ageing_time, align 4, !dbg !15943
  %4 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15947
  %call3 = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %4) #8, !dbg !15949
  br i1 %call3, label %if.then, label %if.end, !dbg !15950

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ageing_time, align 4, !dbg !15951
  %cmp = icmp ult i32 %5, 10, !dbg !15954
  br i1 %cmp, label %if.then5, label %lor.lhs.false, !dbg !15955

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i32, i32* %ageing_time, align 4, !dbg !15956
  %cmp4 = icmp ugt i32 %6, 1000000, !dbg !15957
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !15958

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  store i32 -34, i32* %retval, align 4, !dbg !15959
  br label %return, !dbg !15959

if.else:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !15960
  br label %return, !dbg !15960

if.end:                                           ; preds = %entry
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15961
  %8 = load i32, i32* %ageing_time, align 4, !dbg !15962
  %call6 = call i32 @mlxsw_sp_ageing_set(%struct.mlxsw_sp* %7, i32 %8) #8, !dbg !15963
  store i32 %call6, i32* %retval, align 4, !dbg !15964
  br label %return, !dbg !15964

return:                                           ; preds = %if.end, %if.else, %if.then5
  %9 = load i32, i32* %retval, align 4, !dbg !15965
  ret i32 %9, !dbg !15965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_br_vlan_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, %struct.net_device* %orig_dev, i1 zeroext %vlan_enabled) #0 !dbg !15966 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %orig_dev.addr = alloca %struct.net_device*, align 8
  %vlan_enabled.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !15969, metadata !DIExpression()), !dbg !15970
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !15971, metadata !DIExpression()), !dbg !15972
  store %struct.net_device* %orig_dev, %struct.net_device** %orig_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev.addr, metadata !15973, metadata !DIExpression()), !dbg !15974
  %frombool = zext i1 %vlan_enabled to i8
  store i8 %frombool, i8* %vlan_enabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vlan_enabled.addr, metadata !15975, metadata !DIExpression()), !dbg !15976
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !15977, metadata !DIExpression()), !dbg !15978
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !15979
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !15980
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !15980
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15978
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !15981, metadata !DIExpression()), !dbg !15982
  %2 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !15983
  %call = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %2) #8, !dbg !15985
  br i1 %call, label %if.end, label %if.then, !dbg !15986

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15987
  br label %return, !dbg !15987

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15988
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 8, !dbg !15989
  %4 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !15989
  %5 = load %struct.net_device*, %struct.net_device** %orig_dev.addr, align 8, !dbg !15990
  %call2 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %4, %struct.net_device* %5) #8, !dbg !15991
  store %struct.mlxsw_sp_bridge_device* %call2, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15992
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15993, metadata !DIExpression()), !dbg !15996
  %6 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !15996
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %6, null, !dbg !15996
  %lnot = xor i1 %tobool, true, !dbg !15996
  %lnot3 = xor i1 %lnot, true, !dbg !15996
  %lnot4 = xor i1 %lnot3, true, !dbg !15996
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !15996
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !15996
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !15997
  %tobool5 = icmp ne i32 %7, 0, !dbg !15997
  %lnot6 = xor i1 %tobool5, true, !dbg !15997
  %lnot8 = xor i1 %lnot6, true, !dbg !15997
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !15997
  %conv = sext i32 %lnot.ext9 to i64, !dbg !15997
  %tobool10 = icmp ne i64 %conv, 0, !dbg !15997
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !15996

if.then11:                                        ; preds = %if.end
  br label %do.body, !dbg !15997

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !15999

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !16001

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !15999

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 750, i32 2305, i64 12) #9, !dbg !16003, !srcloc !16005
  br label %do.end14, !dbg !16003

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 681) #9, !dbg !16006, !srcloc !16008
  br label %do.body15, !dbg !15999

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !16009

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !15999

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !15999

if.end18:                                         ; preds = %do.end17, %if.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !15996
  %tobool19 = icmp ne i32 %8, 0, !dbg !15996
  %lnot20 = xor i1 %tobool19, true, !dbg !15996
  %lnot22 = xor i1 %lnot20, true, !dbg !15996
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !15996
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !15996
  store i64 %conv24, i64* %tmp, align 8, !dbg !15997
  %9 = load i64, i64* %tmp, align 8, !dbg !15996
  %tobool25 = icmp ne i64 %9, 0, !dbg !16011
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !16012

if.then26:                                        ; preds = %if.end18
  store i32 -22, i32* %retval, align 4, !dbg !16013
  br label %return, !dbg !16013

if.end27:                                         ; preds = %if.end18
  %10 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16014
  %vlan_enabled28 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %10, i32 0, i32 4, !dbg !16016
  %bf.load = load i8, i8* %vlan_enabled28, align 8, !dbg !16016
  %bf.clear = and i8 %bf.load, 1, !dbg !16016
  %conv29 = zext i8 %bf.clear to i32, !dbg !16014
  %11 = load i8, i8* %vlan_enabled.addr, align 1, !dbg !16017
  %tobool30 = trunc i8 %11 to i1, !dbg !16017
  %conv31 = zext i1 %tobool30 to i32, !dbg !16017
  %cmp = icmp eq i32 %conv29, %conv31, !dbg !16018
  br i1 %cmp, label %if.then33, label %if.end34, !dbg !16019

if.then33:                                        ; preds = %if.end27
  store i32 0, i32* %retval, align 4, !dbg !16020
  br label %return, !dbg !16020

if.end34:                                         ; preds = %if.end27
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16021
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %12, i32 0, i32 0, !dbg !16022
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16022
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %13, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.58, i64 0, i64 0)) #12, !dbg !16023
  store i32 -22, i32* %retval, align 4, !dbg !16024
  br label %return, !dbg !16024

return:                                           ; preds = %if.end34, %if.then33, %if.then26, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !16025
  ret i32 %14, !dbg !16025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_mrouter_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, %struct.net_device* %orig_dev, i1 zeroext %is_port_mrouter) #0 !dbg !16026 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %orig_dev.addr = alloca %struct.net_device*, align 8
  %is_port_mrouter.addr = alloca i8, align 1
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16027, metadata !DIExpression()), !dbg !16028
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !16029, metadata !DIExpression()), !dbg !16030
  store %struct.net_device* %orig_dev, %struct.net_device** %orig_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev.addr, metadata !16031, metadata !DIExpression()), !dbg !16032
  %frombool = zext i1 %is_port_mrouter to i8
  store i8 %frombool, i8* %is_port_mrouter.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_port_mrouter.addr, metadata !16033, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !16035, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16037, metadata !DIExpression()), !dbg !16038
  %0 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !16039
  %call = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %0) #8, !dbg !16041
  br i1 %call, label %if.then, label %if.end, !dbg !16042

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16043
  br label %return, !dbg !16043

if.end:                                           ; preds = %entry
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16044
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 2, !dbg !16045
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16045
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 8, !dbg !16046
  %3 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !16046
  %4 = load %struct.net_device*, %struct.net_device** %orig_dev.addr, align 8, !dbg !16047
  %call1 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %3, %struct.net_device* %4) #8, !dbg !16048
  store %struct.mlxsw_sp_bridge_port* %call1, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16049
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16050
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %5, null, !dbg !16050
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !16052

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16053
  br label %return, !dbg !16053

if.end3:                                          ; preds = %if.end
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16054
  %bridge_device = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %6, i32 0, i32 1, !dbg !16056
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16056
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 4, !dbg !16057
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !16057
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !16057
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16057
  %tobool4 = icmp ne i8 %bf.clear, 0, !dbg !16054
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !16058

if.then5:                                         ; preds = %if.end3
  br label %out, !dbg !16059

if.end6:                                          ; preds = %if.end3
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16060
  %9 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16061
  %10 = load i8, i8* %is_port_mrouter.addr, align 1, !dbg !16062
  %tobool7 = trunc i8 %10 to i1, !dbg !16062
  %call8 = call i32 @mlxsw_sp_bridge_port_flood_table_set(%struct.mlxsw_sp_port* %8, %struct.mlxsw_sp_bridge_port* %9, i32 2, i1 zeroext %tobool7) #8, !dbg !16063
  store i32 %call8, i32* %err, align 4, !dbg !16064
  %11 = load i32, i32* %err, align 4, !dbg !16065
  %tobool9 = icmp ne i32 %11, 0, !dbg !16065
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !16067

if.then10:                                        ; preds = %if.end6
  %12 = load i32, i32* %err, align 4, !dbg !16068
  store i32 %12, i32* %retval, align 4, !dbg !16069
  br label %return, !dbg !16069

if.end11:                                         ; preds = %if.end6
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16070
  %14 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16071
  %15 = load i8, i8* %is_port_mrouter.addr, align 1, !dbg !16072
  %tobool12 = trunc i8 %15 to i1, !dbg !16072
  call void @mlxsw_sp_port_mrouter_update_mdb(%struct.mlxsw_sp_port* %13, %struct.mlxsw_sp_bridge_port* %14, i1 zeroext %tobool12) #8, !dbg !16073
  br label %out, !dbg !16073

out:                                              ; preds = %if.end11, %if.then5
  call void @llvm.dbg.label(metadata !16074), !dbg !16075
  %16 = load i8, i8* %is_port_mrouter.addr, align 1, !dbg !16076
  %tobool13 = trunc i8 %16 to i1, !dbg !16076
  %17 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16077
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %17, i32 0, i32 7, !dbg !16078
  %frombool14 = zext i1 %tobool13 to i8, !dbg !16079
  store i8 %frombool14, i8* %mrouter, align 8, !dbg !16079
  store i32 0, i32* %retval, align 4, !dbg !16080
  br label %return, !dbg !16080

return:                                           ; preds = %out, %if.then10, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !16081
  ret i32 %18, !dbg !16081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_mc_disabled_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, %struct.net_device* %orig_dev, i1 zeroext %mc_disabled) #0 !dbg !16082 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %orig_dev.addr = alloca %struct.net_device*, align 8
  %mc_disabled.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %packet_type = alloca i32, align 4
  %member = alloca i8, align 1
  %__mptr28 = alloca i8*, align 8
  %tmp33 = alloca %struct.mlxsw_sp_bridge_port*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16083, metadata !DIExpression()), !dbg !16084
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !16085, metadata !DIExpression()), !dbg !16086
  store %struct.net_device* %orig_dev, %struct.net_device** %orig_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev.addr, metadata !16087, metadata !DIExpression()), !dbg !16088
  %frombool = zext i1 %mc_disabled to i8
  store i8 %frombool, i8* %mc_disabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mc_disabled.addr, metadata !16089, metadata !DIExpression()), !dbg !16090
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !16091, metadata !DIExpression()), !dbg !16092
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16093
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !16094
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !16094
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16092
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !16095, metadata !DIExpression()), !dbg !16096
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !16097, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16099, metadata !DIExpression()), !dbg !16100
  %2 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !16101
  %call = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %2) #8, !dbg !16103
  br i1 %call, label %if.then, label %if.end, !dbg !16104

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16105
  br label %return, !dbg !16105

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16106
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 8, !dbg !16107
  %4 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !16107
  %5 = load %struct.net_device*, %struct.net_device** %orig_dev.addr, align 8, !dbg !16108
  %call2 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %4, %struct.net_device* %5) #8, !dbg !16109
  store %struct.mlxsw_sp_bridge_device* %call2, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16110
  %6 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16111
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %6, null, !dbg !16111
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !16113

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16114
  br label %return, !dbg !16114

if.end4:                                          ; preds = %if.end
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16115
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 4, !dbg !16117
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !16117
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !16117
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16117
  %conv = zext i8 %bf.clear to i32, !dbg !16115
  %8 = load i8, i8* %mc_disabled.addr, align 1, !dbg !16118
  %tobool5 = trunc i8 %8 to i1, !dbg !16118
  %lnot = xor i1 %tobool5, true, !dbg !16119
  %lnot.ext = zext i1 %lnot to i32, !dbg !16119
  %cmp = icmp ne i32 %conv, %lnot.ext, !dbg !16120
  br i1 %cmp, label %if.then7, label %if.end15, !dbg !16121

if.then7:                                         ; preds = %if.end4
  %9 = load i8, i8* %mc_disabled.addr, align 1, !dbg !16122
  %tobool8 = trunc i8 %9 to i1, !dbg !16122
  %lnot9 = xor i1 %tobool8, true, !dbg !16124
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !16124
  %conv11 = trunc i32 %lnot.ext10 to i8, !dbg !16124
  %10 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16125
  %multicast_enabled12 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %10, i32 0, i32 4, !dbg !16126
  %bf.load13 = load i8, i8* %multicast_enabled12, align 8, !dbg !16127
  %bf.value = and i8 %conv11, 1, !dbg !16127
  %bf.shl = shl i8 %bf.value, 1, !dbg !16127
  %bf.clear14 = and i8 %bf.load13, -3, !dbg !16127
  %bf.set = or i8 %bf.clear14, %bf.shl, !dbg !16127
  store i8 %bf.set, i8* %multicast_enabled12, align 8, !dbg !16127
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16128
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16129
  call void @mlxsw_sp_bridge_mdb_mc_enable_sync(%struct.mlxsw_sp_port* %11, %struct.mlxsw_sp_bridge_device* %12) #8, !dbg !16130
  br label %if.end15, !dbg !16131

if.end15:                                         ; preds = %if.then7, %if.end4
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16132, metadata !DIExpression()), !dbg !16135
  %13 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16135
  %ports_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %13, i32 0, i32 2, !dbg !16135
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports_list, i32 0, i32 0, !dbg !16135
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16135
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !16135
  store i8* %15, i8** %__mptr, align 8, !dbg !16135
  br label %do.body, !dbg !16135

do.body:                                          ; preds = %if.end15
  br label %do.end, !dbg !16136

do.end:                                           ; preds = %do.body
  %16 = load i8*, i8** %__mptr, align 8, !dbg !16135
  %add.ptr = getelementptr i8, i8* %16, i64 -16, !dbg !16135
  %17 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_port*, !dbg !16135
  store %struct.mlxsw_sp_bridge_port* %17, %struct.mlxsw_sp_bridge_port** %tmp, align 8, !dbg !16136
  %18 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %tmp, align 8, !dbg !16135
  store %struct.mlxsw_sp_bridge_port* %18, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16138
  br label %for.cond, !dbg !16138

for.cond:                                         ; preds = %do.end32, %do.end
  %19 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16139
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %19, i32 0, i32 2, !dbg !16139
  %20 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16139
  %ports_list16 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %20, i32 0, i32 2, !dbg !16139
  %cmp17 = icmp eq %struct.list_head* %list, %ports_list16, !dbg !16139
  %lnot19 = xor i1 %cmp17, true, !dbg !16139
  br i1 %lnot19, label %for.body, label %for.end, !dbg !16138

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %packet_type, metadata !16141, metadata !DIExpression()), !dbg !16143
  store i32 2, i32* %packet_type, align 4, !dbg !16143
  call void @llvm.dbg.declare(metadata i8* %member, metadata !16144, metadata !DIExpression()), !dbg !16145
  %21 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16146
  %call21 = call zeroext i1 @mlxsw_sp_mc_flood(%struct.mlxsw_sp_bridge_port* %21) #8, !dbg !16147
  %frombool22 = zext i1 %call21 to i8, !dbg !16145
  store i8 %frombool22, i8* %member, align 1, !dbg !16145
  %22 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16148
  %23 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16149
  %24 = load i32, i32* %packet_type, align 4, !dbg !16150
  %25 = load i8, i8* %member, align 1, !dbg !16151
  %tobool23 = trunc i8 %25 to i1, !dbg !16151
  %call24 = call i32 @mlxsw_sp_bridge_port_flood_table_set(%struct.mlxsw_sp_port* %22, %struct.mlxsw_sp_bridge_port* %23, i32 %24, i1 zeroext %tobool23) #8, !dbg !16152
  store i32 %call24, i32* %err, align 4, !dbg !16153
  %26 = load i32, i32* %err, align 4, !dbg !16154
  %tobool25 = icmp ne i32 %26, 0, !dbg !16154
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !16156

if.then26:                                        ; preds = %for.body
  %27 = load i32, i32* %err, align 4, !dbg !16157
  store i32 %27, i32* %retval, align 4, !dbg !16158
  br label %return, !dbg !16158

if.end27:                                         ; preds = %for.body
  br label %for.inc, !dbg !16159

for.inc:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !16160, metadata !DIExpression()), !dbg !16162
  %28 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16162
  %list29 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %28, i32 0, i32 2, !dbg !16162
  %next30 = getelementptr inbounds %struct.list_head, %struct.list_head* %list29, i32 0, i32 0, !dbg !16162
  %29 = load %struct.list_head*, %struct.list_head** %next30, align 8, !dbg !16162
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !16162
  store i8* %30, i8** %__mptr28, align 8, !dbg !16162
  br label %do.body31, !dbg !16162

do.body31:                                        ; preds = %for.inc
  br label %do.end32, !dbg !16163

do.end32:                                         ; preds = %do.body31
  %31 = load i8*, i8** %__mptr28, align 8, !dbg !16162
  %add.ptr34 = getelementptr i8, i8* %31, i64 -16, !dbg !16162
  %32 = bitcast i8* %add.ptr34 to %struct.mlxsw_sp_bridge_port*, !dbg !16162
  store %struct.mlxsw_sp_bridge_port* %32, %struct.mlxsw_sp_bridge_port** %tmp33, align 8, !dbg !16163
  %33 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %tmp33, align 8, !dbg !16162
  store %struct.mlxsw_sp_bridge_port* %33, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16139
  br label %for.cond, !dbg !16139, !llvm.loop !16165

for.end:                                          ; preds = %for.cond
  %34 = load i8, i8* %mc_disabled.addr, align 1, !dbg !16167
  %tobool35 = trunc i8 %34 to i1, !dbg !16167
  %lnot36 = xor i1 %tobool35, true, !dbg !16168
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !16168
  %conv38 = trunc i32 %lnot.ext37 to i8, !dbg !16168
  %35 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16169
  %multicast_enabled39 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %35, i32 0, i32 4, !dbg !16170
  %bf.load40 = load i8, i8* %multicast_enabled39, align 8, !dbg !16171
  %bf.value41 = and i8 %conv38, 1, !dbg !16171
  %bf.shl42 = shl i8 %bf.value41, 1, !dbg !16171
  %bf.clear43 = and i8 %bf.load40, -3, !dbg !16171
  %bf.set44 = or i8 %bf.clear43, %bf.shl42, !dbg !16171
  store i8 %bf.set44, i8* %multicast_enabled39, align 8, !dbg !16171
  store i32 0, i32* %retval, align 4, !dbg !16172
  br label %return, !dbg !16172

return:                                           ; preds = %for.end, %if.then26, %if.then3, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !16173
  ret i32 %36, !dbg !16173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_attr_br_mrouter_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_trans* %trans, %struct.net_device* %orig_dev, i1 zeroext %is_mrouter) #0 !dbg !16174 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %orig_dev.addr = alloca %struct.net_device*, align 8
  %is_mrouter.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16175, metadata !DIExpression()), !dbg !16176
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !16177, metadata !DIExpression()), !dbg !16178
  store %struct.net_device* %orig_dev, %struct.net_device** %orig_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev.addr, metadata !16179, metadata !DIExpression()), !dbg !16180
  %frombool = zext i1 %is_mrouter to i8
  store i8 %frombool, i8* %is_mrouter.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_mrouter.addr, metadata !16181, metadata !DIExpression()), !dbg !16182
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !16183, metadata !DIExpression()), !dbg !16184
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16185
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !16186
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !16186
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16184
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !16187, metadata !DIExpression()), !dbg !16188
  %2 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !16189
  %call = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %2) #8, !dbg !16191
  br i1 %call, label %if.then, label %if.end, !dbg !16192

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16193
  br label %return, !dbg !16193

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16194
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 8, !dbg !16195
  %4 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !16195
  %5 = load %struct.net_device*, %struct.net_device** %orig_dev.addr, align 8, !dbg !16196
  %call2 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %4, %struct.net_device* %5) #8, !dbg !16197
  store %struct.mlxsw_sp_bridge_device* %call2, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16198
  %6 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16199
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %6, null, !dbg !16199
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !16201

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16202
  br label %return, !dbg !16202

if.end4:                                          ; preds = %if.end
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16203
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 4, !dbg !16205
  %bf.load = load i8, i8* %mrouter, align 8, !dbg !16205
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !16205
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16205
  %conv = zext i8 %bf.clear to i32, !dbg !16203
  %8 = load i8, i8* %is_mrouter.addr, align 1, !dbg !16206
  %tobool5 = trunc i8 %8 to i1, !dbg !16206
  %conv6 = zext i1 %tobool5 to i32, !dbg !16206
  %cmp = icmp ne i32 %conv, %conv6, !dbg !16207
  br i1 %cmp, label %if.then8, label %if.end10, !dbg !16208

if.then8:                                         ; preds = %if.end4
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16209
  %10 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16210
  %11 = load i8, i8* %is_mrouter.addr, align 1, !dbg !16211
  %tobool9 = trunc i8 %11 to i1, !dbg !16211
  call void @mlxsw_sp_bridge_mrouter_update_mdb(%struct.mlxsw_sp* %9, %struct.mlxsw_sp_bridge_device* %10, i1 zeroext %tobool9) #8, !dbg !16212
  br label %if.end10, !dbg !16212

if.end10:                                         ; preds = %if.then8, %if.end4
  %12 = load i8, i8* %is_mrouter.addr, align 1, !dbg !16213
  %tobool11 = trunc i8 %12 to i1, !dbg !16213
  %conv12 = zext i1 %tobool11 to i8, !dbg !16213
  %13 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16214
  %mrouter13 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %13, i32 0, i32 4, !dbg !16215
  %bf.load14 = load i8, i8* %mrouter13, align 8, !dbg !16216
  %bf.value = and i8 %conv12, 1, !dbg !16216
  %bf.shl = shl i8 %bf.value, 2, !dbg !16216
  %bf.clear15 = and i8 %bf.load14, -5, !dbg !16216
  %bf.set = or i8 %bf.clear15, %bf.shl, !dbg !16216
  store i8 %bf.set, i8* %mrouter13, align 8, !dbg !16216
  store i32 0, i32* %retval, align 4, !dbg !16217
  br label %return, !dbg !16217

return:                                           ; preds = %if.end10, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !16218
  ret i32 %14, !dbg !16218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @switchdev_trans_ph_commit(%struct.switchdev_trans* %trans) #0 !dbg !16219 {
entry:
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !16222, metadata !DIExpression()), !dbg !16223
  %0 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !16224
  %tobool = icmp ne %struct.switchdev_trans* %0, null, !dbg !16224
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16225

land.rhs:                                         ; preds = %entry
  %1 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !16226
  %ph_prepare = getelementptr inbounds %struct.switchdev_trans, %struct.switchdev_trans* %1, i32 0, i32 0, !dbg !16227
  %2 = load i8, i8* %ph_prepare, align 1, !dbg !16227
  %tobool1 = trunc i8 %2 to i1, !dbg !16227
  %lnot = xor i1 %tobool1, true, !dbg !16228
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !16229
  ret i1 %3, !dbg !16230
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_span_respin(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %trans) #0 !dbg !16231 {
entry:
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !16232, metadata !DIExpression()), !dbg !16233
  %0 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !16234
  %tobool = icmp ne %struct.switchdev_trans* %0, null, !dbg !16234
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16235

land.rhs:                                         ; preds = %entry
  %1 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !16236
  %ph_prepare = getelementptr inbounds %struct.switchdev_trans, %struct.switchdev_trans* %1, i32 0, i32 0, !dbg !16237
  %2 = load i8, i8* %ph_prepare, align 1, !dbg !16237
  %tobool1 = trunc i8 %2 to i1, !dbg !16237
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !16238
  ret i1 %3, !dbg !16239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_bridge_vlan_stp_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, i8 zeroext %state) #0 !dbg !16240 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_vlan.addr = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %state.addr = alloca i8, align 1
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16243, metadata !DIExpression()), !dbg !16244
  store %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, metadata !16245, metadata !DIExpression()), !dbg !16246
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !16247, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !16249, metadata !DIExpression()), !dbg !16250
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16251, metadata !DIExpression()), !dbg !16254
  %0 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16254
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %0, i32 0, i32 1, !dbg !16254
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %port_vlan_list, i32 0, i32 0, !dbg !16254
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16254
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !16254
  store i8* %2, i8** %__mptr, align 8, !dbg !16254
  br label %do.body, !dbg !16254

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16255

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !16254
  %add.ptr = getelementptr i8, i8* %3, i64 -48, !dbg !16254
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !16254
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !16255
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !16254
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16257
  br label %for.cond, !dbg !16257

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16258
  %bridge_vlan_node = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 5, !dbg !16258
  %7 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16258
  %port_vlan_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %7, i32 0, i32 1, !dbg !16258
  %cmp = icmp eq %struct.list_head* %bridge_vlan_node, %port_vlan_list1, !dbg !16258
  %lnot = xor i1 %cmp, true, !dbg !16258
  br i1 %lnot, label %for.body, label %for.end, !dbg !16257

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16260
  %mlxsw_sp_port2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 1, !dbg !16263
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port2, align 8, !dbg !16263
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16264
  %cmp3 = icmp ne %struct.mlxsw_sp_port* %9, %10, !dbg !16265
  br i1 %cmp3, label %if.then, label %if.end, !dbg !16266

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !16267

if.end:                                           ; preds = %for.body
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16268
  %12 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16269
  %vid = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %12, i32 0, i32 2, !dbg !16270
  %13 = load i16, i16* %vid, align 8, !dbg !16270
  %14 = load i8, i8* %state.addr, align 1, !dbg !16271
  %call = call i32 @mlxsw_sp_port_vid_stp_set(%struct.mlxsw_sp_port* %11, i16 zeroext %13, i8 zeroext %14) #8, !dbg !16272
  store i32 %call, i32* %retval, align 4, !dbg !16273
  br label %return, !dbg !16273

for.inc:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !16274, metadata !DIExpression()), !dbg !16276
  %15 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16276
  %bridge_vlan_node5 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %15, i32 0, i32 5, !dbg !16276
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %bridge_vlan_node5, i32 0, i32 0, !dbg !16276
  %16 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !16276
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !16276
  store i8* %17, i8** %__mptr4, align 8, !dbg !16276
  br label %do.body7, !dbg !16276

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !16277

do.end8:                                          ; preds = %do.body7
  %18 = load i8*, i8** %__mptr4, align 8, !dbg !16276
  %add.ptr10 = getelementptr i8, i8* %18, i64 -48, !dbg !16276
  %19 = bitcast i8* %add.ptr10 to %struct.mlxsw_sp_port_vlan*, !dbg !16276
  store %struct.mlxsw_sp_port_vlan* %19, %struct.mlxsw_sp_port_vlan** %tmp9, align 8, !dbg !16277
  %20 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp9, align 8, !dbg !16276
  store %struct.mlxsw_sp_port_vlan* %20, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16258
  br label %for.cond, !dbg !16258, !llvm.loop !16279

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16281
  br label %return, !dbg !16281

return:                                           ; preds = %for.end, %if.end
  %21 = load i32, i32* %retval, align 4, !dbg !16282
  ret i32 %21, !dbg !16282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_port_flood_table_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_port* %bridge_port, i32 %packet_type, i1 zeroext %member) #0 !dbg !16283 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %packet_type.addr = alloca i32, align 4
  %member.addr = alloca i8, align 1
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp14 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16286, metadata !DIExpression()), !dbg !16287
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !16288, metadata !DIExpression()), !dbg !16289
  store i32 %packet_type, i32* %packet_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %packet_type.addr, metadata !16290, metadata !DIExpression()), !dbg !16291
  %frombool = zext i1 %member to i8
  store i8 %frombool, i8* %member.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %member.addr, metadata !16292, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !16294, metadata !DIExpression()), !dbg !16295
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16296, metadata !DIExpression()), !dbg !16297
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16298, metadata !DIExpression()), !dbg !16301
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16301
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 3, !dbg !16301
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !16301
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16301
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !16301
  store i8* %2, i8** %__mptr, align 8, !dbg !16301
  br label %do.body, !dbg !16301

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16302

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !16301
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !16301
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_vlan*, !dbg !16301
  store %struct.mlxsw_sp_bridge_vlan* %4, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !16302
  %5 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !16301
  store %struct.mlxsw_sp_bridge_vlan* %5, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16304
  br label %for.cond, !dbg !16304

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16305
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %6, i32 0, i32 0, !dbg !16305
  %7 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16305
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %7, i32 0, i32 3, !dbg !16305
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !16305
  %lnot = xor i1 %cmp, true, !dbg !16305
  br i1 %lnot, label %for.body, label %for.end, !dbg !16304

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16307
  %9 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16309
  %10 = load i32, i32* %packet_type.addr, align 4, !dbg !16310
  %11 = load i8, i8* %member.addr, align 1, !dbg !16311
  %tobool = trunc i8 %11 to i1, !dbg !16311
  %call = call i32 @mlxsw_sp_port_bridge_vlan_flood_set(%struct.mlxsw_sp_port* %8, %struct.mlxsw_sp_bridge_vlan* %9, i32 %10, i1 zeroext %tobool) #8, !dbg !16312
  store i32 %call, i32* %err, align 4, !dbg !16313
  %12 = load i32, i32* %err, align 4, !dbg !16314
  %tobool2 = icmp ne i32 %12, 0, !dbg !16314
  br i1 %tobool2, label %if.then, label %if.end, !dbg !16316

if.then:                                          ; preds = %for.body
  br label %err_port_bridge_vlan_flood_set, !dbg !16317

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16318

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !16319, metadata !DIExpression()), !dbg !16321
  %13 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16321
  %list4 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %13, i32 0, i32 0, !dbg !16321
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !16321
  %14 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !16321
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !16321
  store i8* %15, i8** %__mptr3, align 8, !dbg !16321
  br label %do.body6, !dbg !16321

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !16322

do.end7:                                          ; preds = %do.body6
  %16 = load i8*, i8** %__mptr3, align 8, !dbg !16321
  %add.ptr9 = getelementptr i8, i8* %16, i64 0, !dbg !16321
  %17 = bitcast i8* %add.ptr9 to %struct.mlxsw_sp_bridge_vlan*, !dbg !16321
  store %struct.mlxsw_sp_bridge_vlan* %17, %struct.mlxsw_sp_bridge_vlan** %tmp8, align 8, !dbg !16322
  %18 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp8, align 8, !dbg !16321
  store %struct.mlxsw_sp_bridge_vlan* %18, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16305
  br label %for.cond, !dbg !16305, !llvm.loop !16324

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16326
  br label %return, !dbg !16326

err_port_bridge_vlan_flood_set:                   ; preds = %if.then
  call void @llvm.dbg.label(metadata !16327), !dbg !16328
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !16329, metadata !DIExpression()), !dbg !16332
  %19 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16332
  %list11 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %19, i32 0, i32 0, !dbg !16332
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list11, i32 0, i32 1, !dbg !16332
  %20 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !16332
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !16332
  store i8* %21, i8** %__mptr10, align 8, !dbg !16332
  br label %do.body12, !dbg !16332

do.body12:                                        ; preds = %err_port_bridge_vlan_flood_set
  br label %do.end13, !dbg !16333

do.end13:                                         ; preds = %do.body12
  %22 = load i8*, i8** %__mptr10, align 8, !dbg !16332
  %add.ptr15 = getelementptr i8, i8* %22, i64 0, !dbg !16332
  %23 = bitcast i8* %add.ptr15 to %struct.mlxsw_sp_bridge_vlan*, !dbg !16332
  store %struct.mlxsw_sp_bridge_vlan* %23, %struct.mlxsw_sp_bridge_vlan** %tmp14, align 8, !dbg !16333
  %24 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp14, align 8, !dbg !16332
  store %struct.mlxsw_sp_bridge_vlan* %24, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16335
  br label %for.cond16, !dbg !16335

for.cond16:                                       ; preds = %do.end30, %do.end13
  %25 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16336
  %list17 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %25, i32 0, i32 0, !dbg !16336
  %26 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16336
  %vlans_list18 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %26, i32 0, i32 3, !dbg !16336
  %cmp19 = icmp eq %struct.list_head* %list17, %vlans_list18, !dbg !16336
  %lnot20 = xor i1 %cmp19, true, !dbg !16336
  br i1 %lnot20, label %for.body21, label %for.end33, !dbg !16335

for.body21:                                       ; preds = %for.cond16
  %27 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16338
  %28 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16339
  %29 = load i32, i32* %packet_type.addr, align 4, !dbg !16340
  %30 = load i8, i8* %member.addr, align 1, !dbg !16341
  %tobool22 = trunc i8 %30 to i1, !dbg !16341
  %lnot23 = xor i1 %tobool22, true, !dbg !16342
  %call24 = call i32 @mlxsw_sp_port_bridge_vlan_flood_set(%struct.mlxsw_sp_port* %27, %struct.mlxsw_sp_bridge_vlan* %28, i32 %29, i1 zeroext %lnot23) #8, !dbg !16343
  br label %for.inc25, !dbg !16343

for.inc25:                                        ; preds = %for.body21
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !16344, metadata !DIExpression()), !dbg !16346
  %31 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16346
  %list27 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %31, i32 0, i32 0, !dbg !16346
  %prev28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27, i32 0, i32 1, !dbg !16346
  %32 = load %struct.list_head*, %struct.list_head** %prev28, align 8, !dbg !16346
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !16346
  store i8* %33, i8** %__mptr26, align 8, !dbg !16346
  br label %do.body29, !dbg !16346

do.body29:                                        ; preds = %for.inc25
  br label %do.end30, !dbg !16347

do.end30:                                         ; preds = %do.body29
  %34 = load i8*, i8** %__mptr26, align 8, !dbg !16346
  %add.ptr32 = getelementptr i8, i8* %34, i64 0, !dbg !16346
  %35 = bitcast i8* %add.ptr32 to %struct.mlxsw_sp_bridge_vlan*, !dbg !16346
  store %struct.mlxsw_sp_bridge_vlan* %35, %struct.mlxsw_sp_bridge_vlan** %tmp31, align 8, !dbg !16347
  %36 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp31, align 8, !dbg !16346
  store %struct.mlxsw_sp_bridge_vlan* %36, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16336
  br label %for.cond16, !dbg !16336, !llvm.loop !16349

for.end33:                                        ; preds = %for.cond16
  %37 = load i32, i32* %err, align 4, !dbg !16351
  store i32 %37, i32* %retval, align 4, !dbg !16352
  br label %return, !dbg !16352

return:                                           ; preds = %for.end33, %for.end
  %38 = load i32, i32* %retval, align 4, !dbg !16353
  ret i32 %38, !dbg !16353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_port_learning_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_port* %bridge_port, i1 zeroext %set) #0 !dbg !16354 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %set.addr = alloca i8, align 1
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp14 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16357, metadata !DIExpression()), !dbg !16358
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !16359, metadata !DIExpression()), !dbg !16360
  %frombool = zext i1 %set to i8
  store i8 %frombool, i8* %set.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set.addr, metadata !16361, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !16363, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16365, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16367, metadata !DIExpression()), !dbg !16370
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16370
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 3, !dbg !16370
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !16370
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16370
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !16370
  store i8* %2, i8** %__mptr, align 8, !dbg !16370
  br label %do.body, !dbg !16370

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16371

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !16370
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !16370
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_vlan*, !dbg !16370
  store %struct.mlxsw_sp_bridge_vlan* %4, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !16371
  %5 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp, align 8, !dbg !16370
  store %struct.mlxsw_sp_bridge_vlan* %5, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16373
  br label %for.cond, !dbg !16373

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16374
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %6, i32 0, i32 0, !dbg !16374
  %7 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16374
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %7, i32 0, i32 3, !dbg !16374
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !16374
  %lnot = xor i1 %cmp, true, !dbg !16374
  br i1 %lnot, label %for.body, label %for.end, !dbg !16373

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16376
  %9 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16378
  %10 = load i8, i8* %set.addr, align 1, !dbg !16379
  %tobool = trunc i8 %10 to i1, !dbg !16379
  %call = call i32 @mlxsw_sp_port_bridge_vlan_learning_set(%struct.mlxsw_sp_port* %8, %struct.mlxsw_sp_bridge_vlan* %9, i1 zeroext %tobool) #8, !dbg !16380
  store i32 %call, i32* %err, align 4, !dbg !16381
  %11 = load i32, i32* %err, align 4, !dbg !16382
  %tobool2 = icmp ne i32 %11, 0, !dbg !16382
  br i1 %tobool2, label %if.then, label %if.end, !dbg !16384

if.then:                                          ; preds = %for.body
  br label %err_port_bridge_vlan_learning_set, !dbg !16385

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16386

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !16387, metadata !DIExpression()), !dbg !16389
  %12 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16389
  %list4 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %12, i32 0, i32 0, !dbg !16389
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !16389
  %13 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !16389
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !16389
  store i8* %14, i8** %__mptr3, align 8, !dbg !16389
  br label %do.body6, !dbg !16389

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !16390

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr3, align 8, !dbg !16389
  %add.ptr9 = getelementptr i8, i8* %15, i64 0, !dbg !16389
  %16 = bitcast i8* %add.ptr9 to %struct.mlxsw_sp_bridge_vlan*, !dbg !16389
  store %struct.mlxsw_sp_bridge_vlan* %16, %struct.mlxsw_sp_bridge_vlan** %tmp8, align 8, !dbg !16390
  %17 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp8, align 8, !dbg !16389
  store %struct.mlxsw_sp_bridge_vlan* %17, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16374
  br label %for.cond, !dbg !16374, !llvm.loop !16392

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16394
  br label %return, !dbg !16394

err_port_bridge_vlan_learning_set:                ; preds = %if.then
  call void @llvm.dbg.label(metadata !16395), !dbg !16396
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !16397, metadata !DIExpression()), !dbg !16400
  %18 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16400
  %list11 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %18, i32 0, i32 0, !dbg !16400
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list11, i32 0, i32 1, !dbg !16400
  %19 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !16400
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !16400
  store i8* %20, i8** %__mptr10, align 8, !dbg !16400
  br label %do.body12, !dbg !16400

do.body12:                                        ; preds = %err_port_bridge_vlan_learning_set
  br label %do.end13, !dbg !16401

do.end13:                                         ; preds = %do.body12
  %21 = load i8*, i8** %__mptr10, align 8, !dbg !16400
  %add.ptr15 = getelementptr i8, i8* %21, i64 0, !dbg !16400
  %22 = bitcast i8* %add.ptr15 to %struct.mlxsw_sp_bridge_vlan*, !dbg !16400
  store %struct.mlxsw_sp_bridge_vlan* %22, %struct.mlxsw_sp_bridge_vlan** %tmp14, align 8, !dbg !16401
  %23 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp14, align 8, !dbg !16400
  store %struct.mlxsw_sp_bridge_vlan* %23, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16403
  br label %for.cond16, !dbg !16403

for.cond16:                                       ; preds = %do.end30, %do.end13
  %24 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16404
  %list17 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %24, i32 0, i32 0, !dbg !16404
  %25 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16404
  %vlans_list18 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %25, i32 0, i32 3, !dbg !16404
  %cmp19 = icmp eq %struct.list_head* %list17, %vlans_list18, !dbg !16404
  %lnot20 = xor i1 %cmp19, true, !dbg !16404
  br i1 %lnot20, label %for.body21, label %for.end33, !dbg !16403

for.body21:                                       ; preds = %for.cond16
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16406
  %27 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16407
  %28 = load i8, i8* %set.addr, align 1, !dbg !16408
  %tobool22 = trunc i8 %28 to i1, !dbg !16408
  %lnot23 = xor i1 %tobool22, true, !dbg !16409
  %call24 = call i32 @mlxsw_sp_port_bridge_vlan_learning_set(%struct.mlxsw_sp_port* %26, %struct.mlxsw_sp_bridge_vlan* %27, i1 zeroext %lnot23) #8, !dbg !16410
  br label %for.inc25, !dbg !16410

for.inc25:                                        ; preds = %for.body21
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !16411, metadata !DIExpression()), !dbg !16413
  %29 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16413
  %list27 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %29, i32 0, i32 0, !dbg !16413
  %prev28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27, i32 0, i32 1, !dbg !16413
  %30 = load %struct.list_head*, %struct.list_head** %prev28, align 8, !dbg !16413
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !16413
  store i8* %31, i8** %__mptr26, align 8, !dbg !16413
  br label %do.body29, !dbg !16413

do.body29:                                        ; preds = %for.inc25
  br label %do.end30, !dbg !16414

do.end30:                                         ; preds = %do.body29
  %32 = load i8*, i8** %__mptr26, align 8, !dbg !16413
  %add.ptr32 = getelementptr i8, i8* %32, i64 0, !dbg !16413
  %33 = bitcast i8* %add.ptr32 to %struct.mlxsw_sp_bridge_vlan*, !dbg !16413
  store %struct.mlxsw_sp_bridge_vlan* %33, %struct.mlxsw_sp_bridge_vlan** %tmp31, align 8, !dbg !16414
  %34 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %tmp31, align 8, !dbg !16413
  store %struct.mlxsw_sp_bridge_vlan* %34, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !16404
  br label %for.cond16, !dbg !16404, !llvm.loop !16416

for.end33:                                        ; preds = %for.cond16
  %35 = load i32, i32* %err, align 4, !dbg !16418
  store i32 %35, i32* %retval, align 4, !dbg !16419
  br label %return, !dbg !16419

return:                                           ; preds = %for.end33, %for.end
  %36 = load i32, i32* %retval, align 4, !dbg !16420
  ret i32 %36, !dbg !16420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_bridge_vlan_flood_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, i32 %packet_type, i1 zeroext %member) #0 !dbg !16421 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_vlan.addr = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %packet_type.addr = alloca i32, align 4
  %member.addr = alloca i8, align 1
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16424, metadata !DIExpression()), !dbg !16425
  store %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, metadata !16426, metadata !DIExpression()), !dbg !16427
  store i32 %packet_type, i32* %packet_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %packet_type.addr, metadata !16428, metadata !DIExpression()), !dbg !16429
  %frombool = zext i1 %member to i8
  store i8 %frombool, i8* %member.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %member.addr, metadata !16430, metadata !DIExpression()), !dbg !16431
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !16432, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16434, metadata !DIExpression()), !dbg !16437
  %0 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16437
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %0, i32 0, i32 1, !dbg !16437
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %port_vlan_list, i32 0, i32 0, !dbg !16437
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16437
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !16437
  store i8* %2, i8** %__mptr, align 8, !dbg !16437
  br label %do.body, !dbg !16437

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16438

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !16437
  %add.ptr = getelementptr i8, i8* %3, i64 -48, !dbg !16437
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !16437
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !16438
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !16437
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16440
  br label %for.cond, !dbg !16440

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16441
  %bridge_vlan_node = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 5, !dbg !16441
  %7 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16441
  %port_vlan_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %7, i32 0, i32 1, !dbg !16441
  %cmp = icmp eq %struct.list_head* %bridge_vlan_node, %port_vlan_list1, !dbg !16441
  %lnot = xor i1 %cmp, true, !dbg !16441
  br i1 %lnot, label %for.body, label %for.end, !dbg !16440

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16443
  %mlxsw_sp_port2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 1, !dbg !16446
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port2, align 8, !dbg !16446
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16447
  %cmp3 = icmp ne %struct.mlxsw_sp_port* %9, %10, !dbg !16448
  br i1 %cmp3, label %if.then, label %if.end, !dbg !16449

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !16450

if.end:                                           ; preds = %for.body
  %11 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16451
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %11, i32 0, i32 2, !dbg !16452
  %12 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !16452
  %13 = load i32, i32* %packet_type.addr, align 4, !dbg !16453
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16454
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %14, i32 0, i32 3, !dbg !16455
  %15 = load i8, i8* %local_port, align 8, !dbg !16455
  %16 = load i8, i8* %member.addr, align 1, !dbg !16456
  %tobool = trunc i8 %16 to i1, !dbg !16456
  %call = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %12, i32 %13, i8 zeroext %15, i1 zeroext %tobool) #8, !dbg !16457
  store i32 %call, i32* %retval, align 4, !dbg !16458
  br label %return, !dbg !16458

for.inc:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !16459, metadata !DIExpression()), !dbg !16461
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16461
  %bridge_vlan_node5 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %17, i32 0, i32 5, !dbg !16461
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %bridge_vlan_node5, i32 0, i32 0, !dbg !16461
  %18 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !16461
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !16461
  store i8* %19, i8** %__mptr4, align 8, !dbg !16461
  br label %do.body7, !dbg !16461

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !16462

do.end8:                                          ; preds = %do.body7
  %20 = load i8*, i8** %__mptr4, align 8, !dbg !16461
  %add.ptr10 = getelementptr i8, i8* %20, i64 -48, !dbg !16461
  %21 = bitcast i8* %add.ptr10 to %struct.mlxsw_sp_port_vlan*, !dbg !16461
  store %struct.mlxsw_sp_port_vlan* %21, %struct.mlxsw_sp_port_vlan** %tmp9, align 8, !dbg !16462
  %22 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp9, align 8, !dbg !16461
  store %struct.mlxsw_sp_port_vlan* %22, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16441
  br label %for.cond, !dbg !16441, !llvm.loop !16464

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16466
  br label %return, !dbg !16466

return:                                           ; preds = %for.end, %if.end
  %23 = load i32, i32* %retval, align 4, !dbg !16467
  ret i32 %23, !dbg !16467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_bridge_vlan_learning_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, i1 zeroext %set) #0 !dbg !16468 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_vlan.addr = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %set.addr = alloca i8, align 1
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %vid = alloca i16, align 2
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16471, metadata !DIExpression()), !dbg !16472
  store %struct.mlxsw_sp_bridge_vlan* %bridge_vlan, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, metadata !16473, metadata !DIExpression()), !dbg !16474
  %frombool = zext i1 %set to i8
  store i8 %frombool, i8* %set.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set.addr, metadata !16475, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !16477, metadata !DIExpression()), !dbg !16478
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !16479, metadata !DIExpression()), !dbg !16480
  %0 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16481
  %vid1 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %0, i32 0, i32 2, !dbg !16482
  %1 = load i16, i16* %vid1, align 8, !dbg !16482
  store i16 %1, i16* %vid, align 2, !dbg !16480
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16483, metadata !DIExpression()), !dbg !16486
  %2 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16486
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %2, i32 0, i32 1, !dbg !16486
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %port_vlan_list, i32 0, i32 0, !dbg !16486
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16486
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !16486
  store i8* %4, i8** %__mptr, align 8, !dbg !16486
  br label %do.body, !dbg !16486

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16487

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !16486
  %add.ptr = getelementptr i8, i8* %5, i64 -48, !dbg !16486
  %6 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !16486
  store %struct.mlxsw_sp_port_vlan* %6, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !16487
  %7 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !16486
  store %struct.mlxsw_sp_port_vlan* %7, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16489
  br label %for.cond, !dbg !16489

for.cond:                                         ; preds = %do.end9, %do.end
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16490
  %bridge_vlan_node = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 5, !dbg !16490
  %9 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan.addr, align 8, !dbg !16490
  %port_vlan_list2 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %9, i32 0, i32 1, !dbg !16490
  %cmp = icmp eq %struct.list_head* %bridge_vlan_node, %port_vlan_list2, !dbg !16490
  %lnot = xor i1 %cmp, true, !dbg !16490
  br i1 %lnot, label %for.body, label %for.end, !dbg !16489

for.body:                                         ; preds = %for.cond
  %10 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16492
  %mlxsw_sp_port3 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %10, i32 0, i32 1, !dbg !16495
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port3, align 8, !dbg !16495
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16496
  %cmp4 = icmp ne %struct.mlxsw_sp_port* %11, %12, !dbg !16497
  br i1 %cmp4, label %if.then, label %if.end, !dbg !16498

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !16499

if.end:                                           ; preds = %for.body
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16500
  %14 = load i16, i16* %vid, align 2, !dbg !16501
  %15 = load i8, i8* %set.addr, align 1, !dbg !16502
  %tobool = trunc i8 %15 to i1, !dbg !16502
  %call = call i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %13, i16 zeroext %14, i1 zeroext %tobool) #8, !dbg !16503
  store i32 %call, i32* %retval, align 4, !dbg !16504
  br label %return, !dbg !16504

for.inc:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !16505, metadata !DIExpression()), !dbg !16507
  %16 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16507
  %bridge_vlan_node6 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %16, i32 0, i32 5, !dbg !16507
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %bridge_vlan_node6, i32 0, i32 0, !dbg !16507
  %17 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !16507
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !16507
  store i8* %18, i8** %__mptr5, align 8, !dbg !16507
  br label %do.body8, !dbg !16507

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !16508

do.end9:                                          ; preds = %do.body8
  %19 = load i8*, i8** %__mptr5, align 8, !dbg !16507
  %add.ptr11 = getelementptr i8, i8* %19, i64 -48, !dbg !16507
  %20 = bitcast i8* %add.ptr11 to %struct.mlxsw_sp_port_vlan*, !dbg !16507
  store %struct.mlxsw_sp_port_vlan* %20, %struct.mlxsw_sp_port_vlan** %tmp10, align 8, !dbg !16508
  %21 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp10, align 8, !dbg !16507
  store %struct.mlxsw_sp_port_vlan* %21, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16490
  br label %for.cond, !dbg !16490, !llvm.loop !16510

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16512
  br label %return, !dbg !16512

return:                                           ; preds = %for.end, %if.end
  %22 = load i32, i32* %retval, align 4, !dbg !16513
  ret i32 %22, !dbg !16513
}

; Function Attrs: noredzone
declare dso_local i64 @clock_t_to_jiffies(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_ageing_set(%struct.mlxsw_sp* %mlxsw_sp, i32 %ageing_time) #0 !dbg !16514 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %ageing_time.addr = alloca i32, align 4
  %sfdat_pl = alloca [8 x i8], align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !16517, metadata !DIExpression()), !dbg !16518
  store i32 %ageing_time, i32* %ageing_time.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ageing_time.addr, metadata !16519, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.declare(metadata [8 x i8]* %sfdat_pl, metadata !16521, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16523, metadata !DIExpression()), !dbg !16524
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %sfdat_pl, i64 0, i64 0, !dbg !16525
  %0 = load i32, i32* %ageing_time.addr, align 4, !dbg !16526
  call void @mlxsw_reg_sfdat_pack(i8* %arraydecay, i32 %0) #8, !dbg !16527
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16528
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !16529
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !16529
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %sfdat_pl, i64 0, i64 0, !dbg !16530
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_sfdat, i8* %arraydecay1) #8, !dbg !16531
  store i32 %call, i32* %err, align 4, !dbg !16532
  %3 = load i32, i32* %err, align 4, !dbg !16533
  %tobool = icmp ne i32 %3, 0, !dbg !16533
  br i1 %tobool, label %if.then, label %if.end, !dbg !16535

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !16536
  store i32 %4, i32* %retval, align 4, !dbg !16537
  br label %return, !dbg !16537

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %ageing_time.addr, align 4, !dbg !16538
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16539
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 8, !dbg !16540
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !16540
  %ageing_time2 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %7, i32 0, i32 2, !dbg !16541
  store i32 %5, i32* %ageing_time2, align 8, !dbg !16542
  store i32 0, i32* %retval, align 4, !dbg !16543
  br label %return, !dbg !16543

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !16544
  ret i32 %8, !dbg !16544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdat_pack(i8* %payload, i32 %age_time) #0 !dbg !16545 {
entry:
  %payload.addr = alloca i8*, align 8
  %age_time.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !16546, metadata !DIExpression()), !dbg !16547
  store i32 %age_time, i32* %age_time.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %age_time.addr, metadata !16548, metadata !DIExpression()), !dbg !16549
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !16550
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sfdat, i32 0, i32 1), align 2, !dbg !16550
  %conv = zext i16 %1 to i64, !dbg !16550
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !16550
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !16551
  call void @mlxsw_reg_sfdat_swid_set(i8* %2, i32 0) #8, !dbg !16552
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !16553
  %4 = load i32, i32* %age_time.addr, align 4, !dbg !16554
  call void @mlxsw_reg_sfdat_age_time_set(i8* %3, i32 %4) #8, !dbg !16555
  ret void, !dbg !16556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdat_swid_set(i8* %buf, i32 %val) #0 !dbg !16557 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16558, metadata !DIExpression()), !dbg !16559
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16560, metadata !DIExpression()), !dbg !16559
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16559
  %1 = load i32, i32* %val.addr, align 4, !dbg !16559
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfdat_swid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !16559
  ret void, !dbg !16559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfdat_age_time_set(i8* %buf, i32 %val) #0 !dbg !16561 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16562, metadata !DIExpression()), !dbg !16563
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16564, metadata !DIExpression()), !dbg !16563
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16563
  %1 = load i32, i32* %val.addr, align 4, !dbg !16563
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfdat_age_time_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !16563
  ret void, !dbg !16563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_mrouter_update_mdb(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_port* %bridge_port, i1 zeroext %add) #0 !dbg !16565 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %add.addr = alloca i8, align 1
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.mlxsw_sp_mid*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16568, metadata !DIExpression()), !dbg !16569
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !16570, metadata !DIExpression()), !dbg !16571
  %frombool = zext i1 %add to i8
  store i8 %frombool, i8* %add.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %add.addr, metadata !16572, metadata !DIExpression()), !dbg !16573
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !16574, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !16576, metadata !DIExpression()), !dbg !16577
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16578
  %bridge_device1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 1, !dbg !16579
  %1 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device1, align 8, !dbg !16579
  store %struct.mlxsw_sp_bridge_device* %1, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16580
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16581, metadata !DIExpression()), !dbg !16584
  %2 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16584
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %2, i32 0, i32 3, !dbg !16584
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mids_list, i32 0, i32 0, !dbg !16584
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16584
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !16584
  store i8* %4, i8** %__mptr, align 8, !dbg !16584
  br label %do.body, !dbg !16584

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16585

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !16584
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !16584
  %6 = bitcast i8* %add.ptr to %struct.mlxsw_sp_mid*, !dbg !16584
  store %struct.mlxsw_sp_mid* %6, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !16585
  %7 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !16584
  store %struct.mlxsw_sp_mid* %7, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16587
  br label %for.cond, !dbg !16587

for.cond:                                         ; preds = %do.end9, %do.end
  %8 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16588
  %list = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %8, i32 0, i32 0, !dbg !16588
  %9 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16588
  %mids_list2 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %9, i32 0, i32 3, !dbg !16588
  %cmp = icmp eq %struct.list_head* %list, %mids_list2, !dbg !16588
  %lnot = xor i1 %cmp, true, !dbg !16588
  br i1 %lnot, label %for.body, label %for.end, !dbg !16587

for.body:                                         ; preds = %for.cond
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16590
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %10, i32 0, i32 3, !dbg !16593
  %11 = load i8, i8* %local_port, align 8, !dbg !16593
  %conv = zext i8 %11 to i64, !dbg !16590
  %12 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16594
  %ports_in_mid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %12, i32 0, i32 5, !dbg !16595
  %13 = load i64*, i64** %ports_in_mid, align 8, !dbg !16595
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %13) #8, !dbg !16596
  br i1 %call, label %if.end, label %if.then, !dbg !16597

if.then:                                          ; preds = %for.body
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16598
  %15 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16599
  %mid3 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %15, i32 0, i32 3, !dbg !16600
  %16 = load i16, i16* %mid3, align 8, !dbg !16600
  %17 = load i8, i8* %add.addr, align 1, !dbg !16601
  %tobool = trunc i8 %17 to i1, !dbg !16601
  %call4 = call i32 @mlxsw_sp_port_smid_set(%struct.mlxsw_sp_port* %14, i16 zeroext %16, i1 zeroext %tobool) #8, !dbg !16602
  br label %if.end, !dbg !16602

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !16603

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !16604, metadata !DIExpression()), !dbg !16606
  %18 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16606
  %list6 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %18, i32 0, i32 0, !dbg !16606
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6, i32 0, i32 0, !dbg !16606
  %19 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !16606
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !16606
  store i8* %20, i8** %__mptr5, align 8, !dbg !16606
  br label %do.body8, !dbg !16606

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !16607

do.end9:                                          ; preds = %do.body8
  %21 = load i8*, i8** %__mptr5, align 8, !dbg !16606
  %add.ptr11 = getelementptr i8, i8* %21, i64 0, !dbg !16606
  %22 = bitcast i8* %add.ptr11 to %struct.mlxsw_sp_mid*, !dbg !16606
  store %struct.mlxsw_sp_mid* %22, %struct.mlxsw_sp_mid** %tmp10, align 8, !dbg !16607
  %23 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp10, align 8, !dbg !16606
  store %struct.mlxsw_sp_mid* %23, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16588
  br label %for.cond, !dbg !16588, !llvm.loop !16609

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_mdb_mc_enable_sync(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_device* %bridge_device) #0 !dbg !16612 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %mc_enabled = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.mlxsw_sp_mid*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16615, metadata !DIExpression()), !dbg !16616
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !16617, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !16619, metadata !DIExpression()), !dbg !16620
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16621
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !16622
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !16622
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16620
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !16623, metadata !DIExpression()), !dbg !16624
  call void @llvm.dbg.declare(metadata i8* %mc_enabled, metadata !16625, metadata !DIExpression()), !dbg !16626
  %2 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16627
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %2, i32 0, i32 4, !dbg !16628
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !16628
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !16628
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16628
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !16627
  %frombool = zext i1 %tobool to i8, !dbg !16629
  store i8 %frombool, i8* %mc_enabled, align 1, !dbg !16629
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16630, metadata !DIExpression()), !dbg !16633
  %3 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16633
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %3, i32 0, i32 3, !dbg !16633
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mids_list, i32 0, i32 0, !dbg !16633
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16633
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !16633
  store i8* %5, i8** %__mptr, align 8, !dbg !16633
  br label %do.body, !dbg !16633

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16634

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !16633
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !16633
  %7 = bitcast i8* %add.ptr to %struct.mlxsw_sp_mid*, !dbg !16633
  store %struct.mlxsw_sp_mid* %7, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !16634
  %8 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !16633
  store %struct.mlxsw_sp_mid* %8, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16636
  br label %for.cond, !dbg !16636

for.cond:                                         ; preds = %do.end9, %do.end
  %9 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16637
  %list = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %9, i32 0, i32 0, !dbg !16637
  %10 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16637
  %mids_list2 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %10, i32 0, i32 3, !dbg !16637
  %cmp = icmp eq %struct.list_head* %list, %mids_list2, !dbg !16637
  %lnot = xor i1 %cmp, true, !dbg !16637
  br i1 %lnot, label %for.body, label %for.end, !dbg !16636

for.body:                                         ; preds = %for.cond
  %11 = load i8, i8* %mc_enabled, align 1, !dbg !16639
  %tobool3 = trunc i8 %11 to i1, !dbg !16639
  br i1 %tobool3, label %if.then, label %if.else, !dbg !16642

if.then:                                          ; preds = %for.body
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16643
  %13 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16644
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16645
  %call = call zeroext i1 @mlxsw_sp_mc_write_mdb_entry(%struct.mlxsw_sp* %12, %struct.mlxsw_sp_mid* %13, %struct.mlxsw_sp_bridge_device* %14) #8, !dbg !16646
  br label %if.end, !dbg !16646

if.else:                                          ; preds = %for.body
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16647
  %16 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16648
  %call4 = call i32 @mlxsw_sp_mc_remove_mdb_entry(%struct.mlxsw_sp* %15, %struct.mlxsw_sp_mid* %16) #8, !dbg !16649
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !16650

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !16651, metadata !DIExpression()), !dbg !16653
  %17 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16653
  %list6 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %17, i32 0, i32 0, !dbg !16653
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6, i32 0, i32 0, !dbg !16653
  %18 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !16653
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !16653
  store i8* %19, i8** %__mptr5, align 8, !dbg !16653
  br label %do.body8, !dbg !16653

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !16654

do.end9:                                          ; preds = %do.body8
  %20 = load i8*, i8** %__mptr5, align 8, !dbg !16653
  %add.ptr11 = getelementptr i8, i8* %20, i64 0, !dbg !16653
  %21 = bitcast i8* %add.ptr11 to %struct.mlxsw_sp_mid*, !dbg !16653
  store %struct.mlxsw_sp_mid* %21, %struct.mlxsw_sp_mid** %tmp10, align 8, !dbg !16654
  %22 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp10, align 8, !dbg !16653
  store %struct.mlxsw_sp_mid* %22, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !16637
  br label %for.cond, !dbg !16637, !llvm.loop !16656

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_mc_flood(%struct.mlxsw_sp_bridge_port* %bridge_port) #0 !dbg !16659 {
entry:
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !16662, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !16664, metadata !DIExpression()), !dbg !16665
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16666
  %bridge_device1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 1, !dbg !16667
  %1 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device1, align 8, !dbg !16667
  store %struct.mlxsw_sp_bridge_device* %1, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16668
  %2 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !16669
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %2, i32 0, i32 4, !dbg !16670
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !16670
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !16670
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16670
  %conv = zext i8 %bf.clear to i32, !dbg !16669
  %tobool = icmp ne i32 %conv, 0, !dbg !16669
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16669

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16671
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %3, i32 0, i32 7, !dbg !16672
  %4 = load i8, i8* %mrouter, align 8, !dbg !16672
  %tobool2 = trunc i8 %4 to i1, !dbg !16672
  %conv3 = zext i1 %tobool2 to i64, !dbg !16671
  br label %cond.end, !dbg !16669

cond.false:                                       ; preds = %entry
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !16673
  %flags = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %5, i32 0, i32 6, !dbg !16674
  %6 = load i64, i64* %flags, align 8, !dbg !16674
  %and = and i64 %6, 2048, !dbg !16675
  br label %cond.end, !dbg !16669

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv3, %cond.true ], [ %and, %cond.false ], !dbg !16669
  %tobool4 = icmp ne i64 %cond, 0, !dbg !16669
  ret i1 %tobool4, !dbg !16676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_mc_write_mdb_entry(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_mid* %mid, %struct.mlxsw_sp_bridge_device* %bridge_device) #0 !dbg !16677 {
entry:
  %retval = alloca i1, align 1
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mid.addr = alloca %struct.mlxsw_sp_mid*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %flood_bitmap = alloca i64*, align 8
  %num_of_ports = alloca i32, align 4
  %alloc_size = alloca i32, align 4
  %mid_idx = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !16680, metadata !DIExpression()), !dbg !16681
  store %struct.mlxsw_sp_mid* %mid, %struct.mlxsw_sp_mid** %mid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid.addr, metadata !16682, metadata !DIExpression()), !dbg !16683
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !16684, metadata !DIExpression()), !dbg !16685
  call void @llvm.dbg.declare(metadata i64** %flood_bitmap, metadata !16686, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.declare(metadata i32* %num_of_ports, metadata !16688, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.declare(metadata i32* %alloc_size, metadata !16690, metadata !DIExpression()), !dbg !16691
  call void @llvm.dbg.declare(metadata i16* %mid_idx, metadata !16692, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16694, metadata !DIExpression()), !dbg !16695
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16696
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 8, !dbg !16697
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !16697
  %mids_bitmap = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %1, i32 0, i32 5, !dbg !16698
  %arraydecay = getelementptr inbounds [110 x i64], [110 x i64]* %mids_bitmap, i64 0, i64 0, !dbg !16696
  %call = call i64 @find_first_zero_bit(i64* %arraydecay, i64 7000) #8, !dbg !16699
  %conv = trunc i64 %call to i16, !dbg !16699
  store i16 %conv, i16* %mid_idx, align 2, !dbg !16700
  %2 = load i16, i16* %mid_idx, align 2, !dbg !16701
  %conv1 = zext i16 %2 to i32, !dbg !16701
  %cmp = icmp eq i32 %conv1, 7000, !dbg !16703
  br i1 %cmp, label %if.then, label %if.end, !dbg !16704

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !16705
  br label %return, !dbg !16705

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16706
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 1, !dbg !16707
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !16707
  %call3 = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %4) #8, !dbg !16708
  store i32 %call3, i32* %num_of_ports, align 4, !dbg !16709
  %5 = load i32, i32* %num_of_ports, align 4, !dbg !16710
  %conv4 = sext i32 %5 to i64, !dbg !16710
  %add = add i64 %conv4, 64, !dbg !16710
  %sub = sub i64 %add, 1, !dbg !16710
  %div = udiv i64 %sub, 64, !dbg !16710
  %mul = mul i64 8, %div, !dbg !16711
  %conv5 = trunc i64 %mul to i32, !dbg !16712
  store i32 %conv5, i32* %alloc_size, align 4, !dbg !16713
  %6 = load i32, i32* %alloc_size, align 4, !dbg !16714
  %conv6 = sext i32 %6 to i64, !dbg !16714
  %call7 = call i8* @kzalloc(i64 %conv6, i32 3264) #8, !dbg !16715
  %7 = bitcast i8* %call7 to i64*, !dbg !16715
  store i64* %7, i64** %flood_bitmap, align 8, !dbg !16716
  %8 = load i64*, i64** %flood_bitmap, align 8, !dbg !16717
  %tobool = icmp ne i64* %8, null, !dbg !16717
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !16719

if.then8:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !16720
  br label %return, !dbg !16720

if.end9:                                          ; preds = %if.end
  %9 = load i64*, i64** %flood_bitmap, align 8, !dbg !16721
  %10 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !16722
  %ports_in_mid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %10, i32 0, i32 5, !dbg !16723
  %11 = load i64*, i64** %ports_in_mid, align 8, !dbg !16723
  %12 = load i32, i32* %num_of_ports, align 4, !dbg !16724
  call void @bitmap_copy(i64* %9, i64* %11, i32 %12) #8, !dbg !16725
  %13 = load i64*, i64** %flood_bitmap, align 8, !dbg !16726
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16727
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16728
  call void @mlxsw_sp_mc_get_mrouters_bitmap(i64* %13, %struct.mlxsw_sp_bridge_device* %14, %struct.mlxsw_sp* %15) #8, !dbg !16729
  %16 = load i16, i16* %mid_idx, align 2, !dbg !16730
  %17 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !16731
  %mid10 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %17, i32 0, i32 3, !dbg !16732
  store i16 %16, i16* %mid10, align 8, !dbg !16733
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16734
  %19 = load i16, i16* %mid_idx, align 2, !dbg !16735
  %20 = load i64*, i64** %flood_bitmap, align 8, !dbg !16736
  %21 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16737
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %21, i32 0, i32 4, !dbg !16738
  %bf.load = load i8, i8* %mrouter, align 8, !dbg !16738
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !16738
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16738
  %tobool11 = icmp ne i8 %bf.clear, 0, !dbg !16737
  %call12 = call i32 @mlxsw_sp_port_smid_full_entry(%struct.mlxsw_sp* %18, i16 zeroext %19, i64* %20, i1 zeroext %tobool11) #8, !dbg !16739
  store i32 %call12, i32* %err, align 4, !dbg !16740
  %22 = load i64*, i64** %flood_bitmap, align 8, !dbg !16741
  %23 = bitcast i64* %22 to i8*, !dbg !16741
  call void @kfree(i8* %23) #8, !dbg !16742
  %24 = load i32, i32* %err, align 4, !dbg !16743
  %tobool13 = icmp ne i32 %24, 0, !dbg !16743
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !16745

if.then14:                                        ; preds = %if.end9
  store i1 false, i1* %retval, align 1, !dbg !16746
  br label %return, !dbg !16746

if.end15:                                         ; preds = %if.end9
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16747
  %26 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !16748
  %addr = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %26, i32 0, i32 1, !dbg !16749
  %arraydecay16 = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !16748
  %27 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !16750
  %fid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %27, i32 0, i32 2, !dbg !16751
  %28 = load i16, i16* %fid, align 2, !dbg !16751
  %29 = load i16, i16* %mid_idx, align 2, !dbg !16752
  %call17 = call i32 @mlxsw_sp_port_mdb_op(%struct.mlxsw_sp* %25, i8* %arraydecay16, i16 zeroext %28, i16 zeroext %29, i1 zeroext true) #8, !dbg !16753
  store i32 %call17, i32* %err, align 4, !dbg !16754
  %30 = load i32, i32* %err, align 4, !dbg !16755
  %tobool18 = icmp ne i32 %30, 0, !dbg !16755
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !16757

if.then19:                                        ; preds = %if.end15
  store i1 false, i1* %retval, align 1, !dbg !16758
  br label %return, !dbg !16758

if.end20:                                         ; preds = %if.end15
  %31 = load i16, i16* %mid_idx, align 2, !dbg !16759
  %conv21 = zext i16 %31 to i64, !dbg !16759
  %32 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16760
  %bridge22 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %32, i32 0, i32 8, !dbg !16761
  %33 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge22, align 8, !dbg !16761
  %mids_bitmap23 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %33, i32 0, i32 5, !dbg !16762
  %arraydecay24 = getelementptr inbounds [110 x i64], [110 x i64]* %mids_bitmap23, i64 0, i64 0, !dbg !16760
  call void @set_bit(i64 %conv21, i64* %arraydecay24) #8, !dbg !16763
  %34 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid.addr, align 8, !dbg !16764
  %in_hw = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %34, i32 0, i32 4, !dbg !16765
  store i8 1, i8* %in_hw, align 2, !dbg !16766
  store i1 true, i1* %retval, align 1, !dbg !16767
  br label %return, !dbg !16767

return:                                           ; preds = %if.end20, %if.then19, %if.then14, %if.then8, %if.then
  %35 = load i1, i1* %retval, align 1, !dbg !16768
  ret i1 %35, !dbg !16768
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_zero_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_copy(i64* %dst, i64* %src, i32 %nbits) #0 !dbg !16769 {
entry:
  %dst.addr = alloca i64*, align 8
  %src.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !16772, metadata !DIExpression()), !dbg !16773
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !16774, metadata !DIExpression()), !dbg !16775
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !16776, metadata !DIExpression()), !dbg !16777
  call void @llvm.dbg.declare(metadata i32* %len, metadata !16778, metadata !DIExpression()), !dbg !16779
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !16780
  %conv = zext i32 %0 to i64, !dbg !16780
  %add = add i64 %conv, 64, !dbg !16780
  %sub = sub i64 %add, 1, !dbg !16780
  %div = udiv i64 %sub, 64, !dbg !16780
  %mul = mul i64 %div, 8, !dbg !16781
  %conv1 = trunc i64 %mul to i32, !dbg !16780
  store i32 %conv1, i32* %len, align 4, !dbg !16779
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !16782
  %2 = bitcast i64* %1 to i8*, !dbg !16783
  %3 = load i64*, i64** %src.addr, align 8, !dbg !16784
  %4 = bitcast i64* %3 to i8*, !dbg !16783
  %5 = load i32, i32* %len, align 4, !dbg !16785
  %conv2 = zext i32 %5 to i64, !dbg !16785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %4, i64 %conv2, i1 false), !dbg !16783
  ret void, !dbg !16786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_mc_get_mrouters_bitmap(i64* %flood_bitmap, %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !16787 {
entry:
  %flood_bitmap.addr = alloca i64*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.mlxsw_sp_bridge_port*, align 8
  store i64* %flood_bitmap, i64** %flood_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flood_bitmap.addr, metadata !16790, metadata !DIExpression()), !dbg !16791
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !16792, metadata !DIExpression()), !dbg !16793
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !16794, metadata !DIExpression()), !dbg !16795
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !16796, metadata !DIExpression()), !dbg !16797
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16798, metadata !DIExpression()), !dbg !16801
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16801
  %ports_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 2, !dbg !16801
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports_list, i32 0, i32 0, !dbg !16801
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16801
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !16801
  store i8* %2, i8** %__mptr, align 8, !dbg !16801
  br label %do.body, !dbg !16801

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16802

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !16801
  %add.ptr = getelementptr i8, i8* %3, i64 -16, !dbg !16801
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge_port*, !dbg !16801
  store %struct.mlxsw_sp_bridge_port* %4, %struct.mlxsw_sp_bridge_port** %tmp, align 8, !dbg !16802
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %tmp, align 8, !dbg !16801
  store %struct.mlxsw_sp_bridge_port* %5, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16804
  br label %for.cond, !dbg !16804

for.cond:                                         ; preds = %do.end6, %do.end
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16805
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %6, i32 0, i32 2, !dbg !16805
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !16805
  %ports_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 2, !dbg !16805
  %cmp = icmp eq %struct.list_head* %list, %ports_list1, !dbg !16805
  %lnot = xor i1 %cmp, true, !dbg !16805
  br i1 %lnot, label %for.body, label %for.end, !dbg !16804

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16807
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %8, i32 0, i32 7, !dbg !16810
  %9 = load i8, i8* %mrouter, align 8, !dbg !16810
  %tobool = trunc i8 %9 to i1, !dbg !16810
  br i1 %tobool, label %if.then, label %if.end, !dbg !16811

if.then:                                          ; preds = %for.body
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !16812
  %11 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16814
  %12 = load i64*, i64** %flood_bitmap.addr, align 8, !dbg !16815
  call void @mlxsw_sp_bridge_port_get_ports_bitmap(%struct.mlxsw_sp* %10, %struct.mlxsw_sp_bridge_port* %11, i64* %12) #8, !dbg !16816
  br label %if.end, !dbg !16817

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !16818

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !16819, metadata !DIExpression()), !dbg !16821
  %13 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16821
  %list3 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %13, i32 0, i32 2, !dbg !16821
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %list3, i32 0, i32 0, !dbg !16821
  %14 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !16821
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !16821
  store i8* %15, i8** %__mptr2, align 8, !dbg !16821
  br label %do.body5, !dbg !16821

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !16822

do.end6:                                          ; preds = %do.body5
  %16 = load i8*, i8** %__mptr2, align 8, !dbg !16821
  %add.ptr8 = getelementptr i8, i8* %16, i64 -16, !dbg !16821
  %17 = bitcast i8* %add.ptr8 to %struct.mlxsw_sp_bridge_port*, !dbg !16821
  store %struct.mlxsw_sp_bridge_port* %17, %struct.mlxsw_sp_bridge_port** %tmp7, align 8, !dbg !16822
  %18 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %tmp7, align 8, !dbg !16821
  store %struct.mlxsw_sp_bridge_port* %18, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !16805
  br label %for.cond, !dbg !16805, !llvm.loop !16824

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_smid_full_entry(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %mid_idx, i64* %ports_bitmap, i1 zeroext %set_router_port) #0 !dbg !16827 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !16830
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !16833
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !16834
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !16835
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !16836
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !16838
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !16840
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !16843
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !16844
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !16845
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !16846
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !16847
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !16848
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !16849
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !16850
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mid_idx.addr = alloca i16, align 2
  %ports_bitmap.addr = alloca i64*, align 8
  %set_router_port.addr = alloca i8, align 1
  %smid_pl = alloca i8*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !16851, metadata !DIExpression()), !dbg !16852
  store i16 %mid_idx, i16* %mid_idx.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid_idx.addr, metadata !16853, metadata !DIExpression()), !dbg !16854
  store i64* %ports_bitmap, i64** %ports_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ports_bitmap.addr, metadata !16855, metadata !DIExpression()), !dbg !16856
  %frombool = zext i1 %set_router_port to i8
  store i8 %frombool, i8* %set_router_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set_router_port.addr, metadata !16857, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.declare(metadata i8** %smid_pl, metadata !16859, metadata !DIExpression()), !dbg !16860
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16861, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16863, metadata !DIExpression()), !dbg !16864
  store i64 576, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !16865
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #9, !dbg !16866
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !16867

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !16868
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !16869
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !16870

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !16871
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !16872
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !16873
  %call.i.i = call i32 @get_order(i64 %5) #10, !dbg !16874
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !16847
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !16875
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !16876
  %8 = load i32, i32* %order.i.i, align 4, !dbg !16877
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !16878
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !16879
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !16880
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #11, !dbg !16881
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !16881
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !16881
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !16881
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !16881
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !16882
  br label %kmalloc.exit, !dbg !16882

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !16883
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16884
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !16884
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !16885

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !16886
  br label %kmalloc_index.exit.i, !dbg !16886

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16887
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !16888
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !16889

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16890
  br label %kmalloc_index.exit.i, !dbg !16890

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16891
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !16892
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !16893

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16894
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !16895
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !16896

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !16897
  br label %kmalloc_index.exit.i, !dbg !16897

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16898
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !16899
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !16900

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16901
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !16902
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !16903

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !16904
  br label %kmalloc_index.exit.i, !dbg !16904

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16905
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !16906
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !16907

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16908
  br label %kmalloc_index.exit.i, !dbg !16908

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16909
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !16910
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !16911

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !16912
  br label %kmalloc_index.exit.i, !dbg !16912

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16913
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !16914
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !16915

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !16916
  br label %kmalloc_index.exit.i, !dbg !16916

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16917
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !16918
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !16919

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !16920
  br label %kmalloc_index.exit.i, !dbg !16920

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16921
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !16922
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !16923

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !16924
  br label %kmalloc_index.exit.i, !dbg !16924

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16925
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !16926
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !16927

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !16928
  br label %kmalloc_index.exit.i, !dbg !16928

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16929
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !16930
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !16931

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !16932
  br label %kmalloc_index.exit.i, !dbg !16932

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16933
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !16934
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !16935

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !16936
  br label %kmalloc_index.exit.i, !dbg !16936

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16937
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !16938
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !16939

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !16940
  br label %kmalloc_index.exit.i, !dbg !16940

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16941
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !16942
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !16943

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !16944
  br label %kmalloc_index.exit.i, !dbg !16944

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16945
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !16946
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !16947

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !16948
  br label %kmalloc_index.exit.i, !dbg !16948

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16949
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !16950
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !16951

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !16952
  br label %kmalloc_index.exit.i, !dbg !16952

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16953
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !16954
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !16955

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !16956
  br label %kmalloc_index.exit.i, !dbg !16956

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16957
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !16958
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !16959

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !16960
  br label %kmalloc_index.exit.i, !dbg !16960

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16961
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !16962
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !16963

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !16964
  br label %kmalloc_index.exit.i, !dbg !16964

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16965
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !16966
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !16967

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !16968
  br label %kmalloc_index.exit.i, !dbg !16968

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16969
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !16970
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !16971

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !16972
  br label %kmalloc_index.exit.i, !dbg !16972

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16973
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !16974
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !16975

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !16976
  br label %kmalloc_index.exit.i, !dbg !16976

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16977
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !16978
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !16979

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !16980
  br label %kmalloc_index.exit.i, !dbg !16980

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16981
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !16982
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !16983

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !16984
  br label %kmalloc_index.exit.i, !dbg !16984

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16985
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !16986
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !16987

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !16988
  br label %kmalloc_index.exit.i, !dbg !16988

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16989
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !16990
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !16991

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !16992
  br label %kmalloc_index.exit.i, !dbg !16992

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16993
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !16994
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !16995

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !16996
  br label %kmalloc_index.exit.i, !dbg !16996

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16997
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !16998
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !16999

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !17000
  br label %kmalloc_index.exit.i, !dbg !17000

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !17001, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !17002, !srcloc !12241
  unreachable, !dbg !17003

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !17004
  store i32 %43, i32* %index.i, align 4, !dbg !17005
  %44 = load i32, i32* %index.i, align 4, !dbg !17006
  %tobool.i = icmp ne i32 %44, 0, !dbg !17006
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !17007

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !17008
  br label %kmalloc.exit, !dbg !17008

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !17009
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !17010
  %and.i.i = and i32 %46, 17, !dbg !17010
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !17010
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !17010
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !17010
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !17010
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !17011

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !17012
  br label %kmalloc_type.exit.i, !dbg !17012

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !17013
  %and2.i.i = and i32 %47, 1, !dbg !17014
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !17013
  %48 = zext i1 %tobool3.i.i to i64, !dbg !17013
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !17013
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !17015
  br label %kmalloc_type.exit.i, !dbg !17015

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !17016
  %idxprom.i = zext i32 %49 to i64, !dbg !17017
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !17017
  %50 = load i32, i32* %index.i, align 4, !dbg !17018
  %idxprom6.i = zext i32 %50 to i64, !dbg !17017
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !17017
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !17017
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !17019
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !17020
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !17021
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !17022
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #11, !dbg !17023
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !17023
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !17023
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !17023
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !17023
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !16835
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !17024
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !17025
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !17026
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !17027
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #11, !dbg !17028
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !17029
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !17030
  store i8* %60, i8** %retval.i, align 8, !dbg !17031
  br label %kmalloc.exit, !dbg !17031

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !17032
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !17033
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #11, !dbg !17034
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !17034
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !17034
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !17034
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !17034
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !17035
  br label %kmalloc.exit, !dbg !17035

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !17036
  store i8* %63, i8** %smid_pl, align 8, !dbg !17037
  %64 = load i8*, i8** %smid_pl, align 8, !dbg !17038
  %tobool = icmp ne i8* %64, null, !dbg !17038
  br i1 %tobool, label %if.end, label %if.then, !dbg !17040

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !17041
  br label %return, !dbg !17041

if.end:                                           ; preds = %kmalloc.exit
  %65 = load i8*, i8** %smid_pl, align 8, !dbg !17042
  %66 = load i16, i16* %mid_idx.addr, align 2, !dbg !17043
  call void @mlxsw_reg_smid_pack(i8* %65, i16 zeroext %66, i8 zeroext 0, i1 zeroext false) #8, !dbg !17044
  store i32 1, i32* %i, align 4, !dbg !17045
  br label %for.cond, !dbg !17047

for.cond:                                         ; preds = %for.inc, %if.end
  %67 = load i32, i32* %i, align 4, !dbg !17048
  %68 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17050
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %68, i32 0, i32 1, !dbg !17051
  %69 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !17051
  %call1 = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %69) #8, !dbg !17052
  %cmp = icmp ult i32 %67, %call1, !dbg !17053
  br i1 %cmp, label %for.body, label %for.end, !dbg !17054

for.body:                                         ; preds = %for.cond
  %70 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17055
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %70, i32 0, i32 0, !dbg !17058
  %71 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !17058
  %72 = load i32, i32* %i, align 4, !dbg !17059
  %idxprom = sext i32 %72 to i64, !dbg !17055
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %71, i64 %idxprom, !dbg !17055
  %73 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !17055
  %tobool2 = icmp ne %struct.mlxsw_sp_port* %73, null, !dbg !17055
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !17060

if.then3:                                         ; preds = %for.body
  %74 = load i8*, i8** %smid_pl, align 8, !dbg !17061
  %75 = load i32, i32* %i, align 4, !dbg !17062
  %conv = trunc i32 %75 to i16, !dbg !17062
  call void @mlxsw_reg_smid_port_mask_set(i8* %74, i16 zeroext %conv, i8 zeroext 1) #8, !dbg !17063
  br label %if.end4, !dbg !17063

if.end4:                                          ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !17064

for.inc:                                          ; preds = %if.end4
  %76 = load i32, i32* %i, align 4, !dbg !17065
  %inc = add i32 %76, 1, !dbg !17065
  store i32 %inc, i32* %i, align 4, !dbg !17065
  br label %for.cond, !dbg !17066, !llvm.loop !17067

for.end:                                          ; preds = %for.cond
  %77 = load i8*, i8** %smid_pl, align 8, !dbg !17069
  %78 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17070
  %call5 = call zeroext i8 @mlxsw_sp_router_port(%struct.mlxsw_sp* %78) #8, !dbg !17071
  %conv6 = zext i8 %call5 to i16, !dbg !17071
  call void @mlxsw_reg_smid_port_mask_set(i8* %77, i16 zeroext %conv6, i8 zeroext 1) #8, !dbg !17072
  %79 = load i64*, i64** %ports_bitmap.addr, align 8, !dbg !17073
  %80 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17073
  %core7 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %80, i32 0, i32 1, !dbg !17073
  %81 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core7, align 8, !dbg !17073
  %call8 = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %81) #8, !dbg !17073
  %conv9 = zext i32 %call8 to i64, !dbg !17073
  %call10 = call i64 @find_first_bit(i64* %79, i64 %conv9) #8, !dbg !17073
  %conv11 = trunc i64 %call10 to i32, !dbg !17073
  store i32 %conv11, i32* %i, align 4, !dbg !17073
  br label %for.cond12, !dbg !17073

for.cond12:                                       ; preds = %for.inc19, %for.end
  %82 = load i32, i32* %i, align 4, !dbg !17075
  %83 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17075
  %core13 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %83, i32 0, i32 1, !dbg !17075
  %84 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core13, align 8, !dbg !17075
  %call14 = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %84) #8, !dbg !17075
  %cmp15 = icmp ult i32 %82, %call14, !dbg !17075
  br i1 %cmp15, label %for.body17, label %for.end26, !dbg !17073

for.body17:                                       ; preds = %for.cond12
  %85 = load i8*, i8** %smid_pl, align 8, !dbg !17077
  %86 = load i32, i32* %i, align 4, !dbg !17078
  %conv18 = trunc i32 %86 to i16, !dbg !17078
  call void @mlxsw_reg_smid_port_set(i8* %85, i16 zeroext %conv18, i8 zeroext 1) #8, !dbg !17079
  br label %for.inc19, !dbg !17079

for.inc19:                                        ; preds = %for.body17
  %87 = load i64*, i64** %ports_bitmap.addr, align 8, !dbg !17075
  %88 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17075
  %core20 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %88, i32 0, i32 1, !dbg !17075
  %89 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core20, align 8, !dbg !17075
  %call21 = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %89) #8, !dbg !17075
  %conv22 = zext i32 %call21 to i64, !dbg !17075
  %90 = load i32, i32* %i, align 4, !dbg !17075
  %add = add i32 %90, 1, !dbg !17075
  %conv23 = sext i32 %add to i64, !dbg !17075
  %call24 = call i64 @find_next_bit(i64* %87, i64 %conv22, i64 %conv23) #8, !dbg !17075
  %conv25 = trunc i64 %call24 to i32, !dbg !17075
  store i32 %conv25, i32* %i, align 4, !dbg !17075
  br label %for.cond12, !dbg !17075, !llvm.loop !17080

for.end26:                                        ; preds = %for.cond12
  %91 = load i8*, i8** %smid_pl, align 8, !dbg !17082
  %92 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17083
  %call27 = call zeroext i8 @mlxsw_sp_router_port(%struct.mlxsw_sp* %92) #8, !dbg !17084
  %conv28 = zext i8 %call27 to i16, !dbg !17084
  %93 = load i8, i8* %set_router_port.addr, align 1, !dbg !17085
  %tobool29 = trunc i8 %93 to i1, !dbg !17085
  %conv30 = zext i1 %tobool29 to i8, !dbg !17085
  call void @mlxsw_reg_smid_port_set(i8* %91, i16 zeroext %conv28, i8 zeroext %conv30) #8, !dbg !17086
  %94 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17087
  %core31 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %94, i32 0, i32 1, !dbg !17088
  %95 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core31, align 8, !dbg !17088
  %96 = load i8*, i8** %smid_pl, align 8, !dbg !17089
  %call32 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %95, %struct.mlxsw_reg_info* @mlxsw_reg_smid, i8* %96) #8, !dbg !17090
  store i32 %call32, i32* %err, align 4, !dbg !17091
  %97 = load i8*, i8** %smid_pl, align 8, !dbg !17092
  call void @kfree(i8* %97) #8, !dbg !17093
  %98 = load i32, i32* %err, align 4, !dbg !17094
  store i32 %98, i32* %retval, align 4, !dbg !17095
  br label %return, !dbg !17095

return:                                           ; preds = %for.end26, %if.then
  %99 = load i32, i32* %retval, align 4, !dbg !17096
  ret i32 %99, !dbg !17096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !17097 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !17098, metadata !DIExpression()), !dbg !17100
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !17102, metadata !DIExpression()), !dbg !17103
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14329, metadata !DIExpression()), !dbg !17104
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14333, metadata !DIExpression()), !dbg !17106
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !17107, metadata !DIExpression()), !dbg !17108
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !17109, metadata !DIExpression()), !dbg !17110
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !17111
  %1 = load i64, i64* %nr.addr, align 8, !dbg !17112
  %div = sdiv i64 %1, 64, !dbg !17112
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !17113
  %2 = bitcast i64* %add.ptr to i8*, !dbg !17111
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !17114
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17115
  %conv.i = trunc i64 %4 to i32, !dbg !17115
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !17116
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !17117
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !17117
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !17117
  %7 = load i64, i64* %nr.addr, align 8, !dbg !17118
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !17119
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !17120
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #9, !dbg !17122
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !17123

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !17124
  %12 = bitcast i64* %11 to i8*, !dbg !17124
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !17124
  %shr.i = ashr i64 %13, 3, !dbg !17124
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !17124
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !17126
  %and.i = and i64 %14, 7, !dbg !17126
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !17126
  %shl.i = shl i32 1, %sh_prom.i, !dbg !17126
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #9, !dbg !17127, !srcloc !17128
  br label %arch_set_bit.exit, !dbg !17129

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !17130
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !17132
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #9, !dbg !17133, !srcloc !17134
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !17135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_port_get_ports_bitmap(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_bridge_port* %bridge_port, i64* %ports_bitmap) #0 !dbg !17136 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %ports_bitmap.addr = alloca i64*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %max_lag_members = alloca i64, align 8
  %i = alloca i64, align 8
  %lag_id = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !17139, metadata !DIExpression()), !dbg !17140
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !17141, metadata !DIExpression()), !dbg !17142
  store i64* %ports_bitmap, i64** %ports_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ports_bitmap.addr, metadata !17143, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !17145, metadata !DIExpression()), !dbg !17146
  call void @llvm.dbg.declare(metadata i64* %max_lag_members, metadata !17147, metadata !DIExpression()), !dbg !17148
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17149, metadata !DIExpression()), !dbg !17150
  call void @llvm.dbg.declare(metadata i32* %lag_id, metadata !17151, metadata !DIExpression()), !dbg !17152
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !17153
  %lagged = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 8, !dbg !17155
  %1 = load i8, i8* %lagged, align 1, !dbg !17155
  %tobool = trunc i8 %1 to i1, !dbg !17155
  br i1 %tobool, label %if.else, label %if.then, !dbg !17156

if.then:                                          ; preds = %entry
  %2 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !17157
  %3 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %2, i32 0, i32 9, !dbg !17159
  %system_port = bitcast %union.anon.159* %3 to i16*, !dbg !17159
  %4 = load i16, i16* %system_port, align 2, !dbg !17159
  %conv = zext i16 %4 to i64, !dbg !17157
  %5 = load i64*, i64** %ports_bitmap.addr, align 8, !dbg !17160
  call void @set_bit(i64 %conv, i64* %5) #8, !dbg !17161
  br label %if.end10, !dbg !17162

if.else:                                          ; preds = %entry
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17163
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 1, !dbg !17163
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !17163
  %call = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %7, i32 16) #8, !dbg !17163
  store i64 %call, i64* %max_lag_members, align 8, !dbg !17165
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !17166
  %9 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %8, i32 0, i32 9, !dbg !17167
  %lag_id1 = bitcast %union.anon.159* %9 to i16*, !dbg !17167
  %10 = load i16, i16* %lag_id1, align 2, !dbg !17167
  %conv2 = zext i16 %10 to i32, !dbg !17166
  store i32 %conv2, i32* %lag_id, align 4, !dbg !17168
  store i64 0, i64* %i, align 8, !dbg !17169
  br label %for.cond, !dbg !17171

for.cond:                                         ; preds = %for.inc, %if.else
  %11 = load i64, i64* %i, align 8, !dbg !17172
  %12 = load i64, i64* %max_lag_members, align 8, !dbg !17174
  %cmp = icmp ult i64 %11, %12, !dbg !17175
  br i1 %cmp, label %for.body, label %for.end, !dbg !17176

for.body:                                         ; preds = %for.cond
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17177
  %14 = load i32, i32* %lag_id, align 4, !dbg !17179
  %conv4 = trunc i32 %14 to i16, !dbg !17179
  %15 = load i64, i64* %i, align 8, !dbg !17180
  %conv5 = trunc i64 %15 to i8, !dbg !17180
  %call6 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_lagged_get(%struct.mlxsw_sp* %13, i16 zeroext %conv4, i8 zeroext %conv5) #8, !dbg !17181
  store %struct.mlxsw_sp_port* %call6, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17182
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17183
  %tobool7 = icmp ne %struct.mlxsw_sp_port* %16, null, !dbg !17183
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !17185

if.then8:                                         ; preds = %for.body
  %17 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17186
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %17, i32 0, i32 3, !dbg !17187
  %18 = load i8, i8* %local_port, align 8, !dbg !17187
  %conv9 = zext i8 %18 to i64, !dbg !17186
  %19 = load i64*, i64** %ports_bitmap.addr, align 8, !dbg !17188
  call void @set_bit(i64 %conv9, i64* %19) #8, !dbg !17189
  br label %if.end, !dbg !17189

if.end:                                           ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !17190

for.inc:                                          ; preds = %if.end
  %20 = load i64, i64* %i, align 8, !dbg !17191
  %inc = add i64 %20, 1, !dbg !17191
  store i64 %inc, i64* %i, align 8, !dbg !17191
  br label %for.cond, !dbg !17192, !llvm.loop !17193

for.end:                                          ; preds = %for.cond
  br label %if.end10

if.end10:                                         ; preds = %for.end, %if.then
  ret void, !dbg !17195
}

; Function Attrs: noredzone
declare dso_local i64 @mlxsw_core_res_get(%struct.mlxsw_core*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port* @mlxsw_sp_port_lagged_get(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id, i8 zeroext %port_index) #0 !dbg !17196 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  %port_index.addr = alloca i8, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %local_port = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !17199, metadata !DIExpression()), !dbg !17200
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !17201, metadata !DIExpression()), !dbg !17202
  store i8 %port_index, i8* %port_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_index.addr, metadata !17203, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !17205, metadata !DIExpression()), !dbg !17206
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !17207, metadata !DIExpression()), !dbg !17208
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17209
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !17210
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !17210
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !17211
  %3 = load i8, i8* %port_index.addr, align 1, !dbg !17212
  %call = call zeroext i8 @mlxsw_core_lag_mapping_get(%struct.mlxsw_core* %1, i16 zeroext %2, i8 zeroext %3) #8, !dbg !17213
  store i8 %call, i8* %local_port, align 1, !dbg !17214
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17215
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 0, !dbg !17216
  %5 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !17216
  %6 = load i8, i8* %local_port, align 1, !dbg !17217
  %idxprom = zext i8 %6 to i64, !dbg !17215
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %5, i64 %idxprom, !dbg !17215
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !17215
  store %struct.mlxsw_sp_port* %7, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17218
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17219
  %tobool = icmp ne %struct.mlxsw_sp_port* %8, null, !dbg !17219
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !17220

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17221
  %lagged = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %9, i32 0, i32 4, !dbg !17222
  %bf.load = load i8, i8* %lagged, align 1, !dbg !17222
  %bf.clear = and i8 %bf.load, 1, !dbg !17222
  %conv = zext i8 %bf.clear to i32, !dbg !17221
  %tobool1 = icmp ne i32 %conv, 0, !dbg !17221
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !17219

cond.true:                                        ; preds = %land.lhs.true
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17223
  br label %cond.end, !dbg !17219

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !17219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.mlxsw_sp_port* [ %10, %cond.true ], [ null, %cond.false ], !dbg !17219
  ret %struct.mlxsw_sp_port* %cond, !dbg !17224
}

; Function Attrs: noredzone
declare dso_local zeroext i8 @mlxsw_core_lag_mapping_get(%struct.mlxsw_core*, i16 zeroext, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local zeroext i8 @mlxsw_sp_router_port(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_mrouter_update_mdb(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_bridge_device* %bridge_device, i1 zeroext %add) #0 !dbg !17225 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %add.addr = alloca i8, align 1
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.mlxsw_sp_mid*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !17228, metadata !DIExpression()), !dbg !17229
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !17230, metadata !DIExpression()), !dbg !17231
  %frombool = zext i1 %add to i8
  store i8 %frombool, i8* %add.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %add.addr, metadata !17232, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !17234, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17236, metadata !DIExpression()), !dbg !17239
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !17239
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 3, !dbg !17239
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mids_list, i32 0, i32 0, !dbg !17239
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !17239
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !17239
  store i8* %2, i8** %__mptr, align 8, !dbg !17239
  br label %do.body, !dbg !17239

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !17240

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !17239
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !17239
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_mid*, !dbg !17239
  store %struct.mlxsw_sp_mid* %4, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !17240
  %5 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !17239
  store %struct.mlxsw_sp_mid* %5, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !17242
  br label %for.cond, !dbg !17242

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !17243
  %list = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %6, i32 0, i32 0, !dbg !17243
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !17243
  %mids_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 3, !dbg !17243
  %cmp = icmp eq %struct.list_head* %list, %mids_list1, !dbg !17243
  %lnot = xor i1 %cmp, true, !dbg !17243
  br i1 %lnot, label %for.body, label %for.end, !dbg !17242

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17245
  %9 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !17246
  %mid2 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %9, i32 0, i32 3, !dbg !17247
  %10 = load i16, i16* %mid2, align 8, !dbg !17247
  %11 = load i8, i8* %add.addr, align 1, !dbg !17248
  %tobool = trunc i8 %11 to i1, !dbg !17248
  %call = call i32 @mlxsw_sp_smid_router_port_set(%struct.mlxsw_sp* %8, i16 zeroext %10, i1 zeroext %tobool) #8, !dbg !17249
  br label %for.inc, !dbg !17249

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !17250, metadata !DIExpression()), !dbg !17252
  %12 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !17252
  %list4 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %12, i32 0, i32 0, !dbg !17252
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !17252
  %13 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !17252
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !17252
  store i8* %14, i8** %__mptr3, align 8, !dbg !17252
  br label %do.body6, !dbg !17252

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !17253

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr3, align 8, !dbg !17252
  %add.ptr9 = getelementptr i8, i8* %15, i64 0, !dbg !17252
  %16 = bitcast i8* %add.ptr9 to %struct.mlxsw_sp_mid*, !dbg !17252
  store %struct.mlxsw_sp_mid* %16, %struct.mlxsw_sp_mid** %tmp8, align 8, !dbg !17253
  %17 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp8, align 8, !dbg !17252
  store %struct.mlxsw_sp_mid* %17, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !17243
  br label %for.cond, !dbg !17243, !llvm.loop !17255

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_smid_router_port_set(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %mid_idx, i1 zeroext %add) #0 !dbg !17258 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !17261
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !17264
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !17265
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !17266
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !17267
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !17269
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !17271
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !17274
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !17275
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !17276
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !17277
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !17278
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !17279
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !17280
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !17281
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mid_idx.addr = alloca i16, align 2
  %add.addr = alloca i8, align 1
  %smid_pl = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !17282, metadata !DIExpression()), !dbg !17283
  store i16 %mid_idx, i16* %mid_idx.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mid_idx.addr, metadata !17284, metadata !DIExpression()), !dbg !17285
  %frombool = zext i1 %add to i8
  store i8 %frombool, i8* %add.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %add.addr, metadata !17286, metadata !DIExpression()), !dbg !17287
  call void @llvm.dbg.declare(metadata i8** %smid_pl, metadata !17288, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17290, metadata !DIExpression()), !dbg !17291
  store i64 576, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !17292
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #9, !dbg !17293
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !17294

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !17295
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !17296
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !17297

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !17298
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !17299
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !17300
  %call.i.i = call i32 @get_order(i64 %5) #10, !dbg !17301
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !17278
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !17302
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !17303
  %8 = load i32, i32* %order.i.i, align 4, !dbg !17304
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !17305
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !17306
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !17307
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #11, !dbg !17308
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !17308
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !17308
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !17308
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !17308
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !17309
  br label %kmalloc.exit, !dbg !17309

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !17310
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17311
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !17311
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !17312

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !17313
  br label %kmalloc_index.exit.i, !dbg !17313

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17314
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !17315
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !17316

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !17317
  br label %kmalloc_index.exit.i, !dbg !17317

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17318
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !17319
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !17320

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17321
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !17322
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !17323

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !17324
  br label %kmalloc_index.exit.i, !dbg !17324

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17325
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !17326
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !17327

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17328
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !17329
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !17330

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !17331
  br label %kmalloc_index.exit.i, !dbg !17331

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17332
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !17333
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !17334

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !17335
  br label %kmalloc_index.exit.i, !dbg !17335

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17336
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !17337
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !17338

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !17339
  br label %kmalloc_index.exit.i, !dbg !17339

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17340
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !17341
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !17342

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !17343
  br label %kmalloc_index.exit.i, !dbg !17343

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17344
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !17345
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !17346

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !17347
  br label %kmalloc_index.exit.i, !dbg !17347

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17348
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !17349
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !17350

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !17351
  br label %kmalloc_index.exit.i, !dbg !17351

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17352
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !17353
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !17354

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !17355
  br label %kmalloc_index.exit.i, !dbg !17355

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17356
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !17357
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !17358

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !17359
  br label %kmalloc_index.exit.i, !dbg !17359

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17360
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !17361
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !17362

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !17363
  br label %kmalloc_index.exit.i, !dbg !17363

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17364
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !17365
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !17366

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !17367
  br label %kmalloc_index.exit.i, !dbg !17367

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17368
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !17369
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !17370

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !17371
  br label %kmalloc_index.exit.i, !dbg !17371

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17372
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !17373
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !17374

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !17375
  br label %kmalloc_index.exit.i, !dbg !17375

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17376
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !17377
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !17378

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !17379
  br label %kmalloc_index.exit.i, !dbg !17379

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17380
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !17381
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !17382

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !17383
  br label %kmalloc_index.exit.i, !dbg !17383

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17384
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !17385
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !17386

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !17387
  br label %kmalloc_index.exit.i, !dbg !17387

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17388
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !17389
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !17390

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !17391
  br label %kmalloc_index.exit.i, !dbg !17391

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17392
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !17393
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !17394

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !17395
  br label %kmalloc_index.exit.i, !dbg !17395

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17396
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !17397
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !17398

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !17399
  br label %kmalloc_index.exit.i, !dbg !17399

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17400
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !17401
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !17402

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !17403
  br label %kmalloc_index.exit.i, !dbg !17403

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17404
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !17405
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !17406

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !17407
  br label %kmalloc_index.exit.i, !dbg !17407

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17408
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !17409
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !17410

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !17411
  br label %kmalloc_index.exit.i, !dbg !17411

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17412
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !17413
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !17414

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !17415
  br label %kmalloc_index.exit.i, !dbg !17415

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17416
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !17417
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !17418

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !17419
  br label %kmalloc_index.exit.i, !dbg !17419

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17420
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !17421
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !17422

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !17423
  br label %kmalloc_index.exit.i, !dbg !17423

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17424
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !17425
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !17426

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !17427
  br label %kmalloc_index.exit.i, !dbg !17427

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !17428, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !17429, !srcloc !12241
  unreachable, !dbg !17430

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !17431
  store i32 %43, i32* %index.i, align 4, !dbg !17432
  %44 = load i32, i32* %index.i, align 4, !dbg !17433
  %tobool.i = icmp ne i32 %44, 0, !dbg !17433
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !17434

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !17435
  br label %kmalloc.exit, !dbg !17435

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !17436
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !17437
  %and.i.i = and i32 %46, 17, !dbg !17437
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !17437
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !17437
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !17437
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !17437
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !17438

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !17439
  br label %kmalloc_type.exit.i, !dbg !17439

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !17440
  %and2.i.i = and i32 %47, 1, !dbg !17441
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !17440
  %48 = zext i1 %tobool3.i.i to i64, !dbg !17440
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !17440
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !17442
  br label %kmalloc_type.exit.i, !dbg !17442

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !17443
  %idxprom.i = zext i32 %49 to i64, !dbg !17444
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !17444
  %50 = load i32, i32* %index.i, align 4, !dbg !17445
  %idxprom6.i = zext i32 %50 to i64, !dbg !17444
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !17444
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !17444
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !17446
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !17447
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !17448
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !17449
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #11, !dbg !17450
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !17450
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !17450
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !17450
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !17450
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !17266
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !17451
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !17452
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !17453
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !17454
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #11, !dbg !17455
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !17456
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !17457
  store i8* %60, i8** %retval.i, align 8, !dbg !17458
  br label %kmalloc.exit, !dbg !17458

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !17459
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !17460
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #11, !dbg !17461
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !17461
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !17461
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !17461
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !17461
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !17462
  br label %kmalloc.exit, !dbg !17462

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !17463
  store i8* %63, i8** %smid_pl, align 8, !dbg !17464
  %64 = load i8*, i8** %smid_pl, align 8, !dbg !17465
  %tobool = icmp ne i8* %64, null, !dbg !17465
  br i1 %tobool, label %if.end, label %if.then, !dbg !17467

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !17468
  br label %return, !dbg !17468

if.end:                                           ; preds = %kmalloc.exit
  %65 = load i8*, i8** %smid_pl, align 8, !dbg !17469
  %66 = load i16, i16* %mid_idx.addr, align 2, !dbg !17470
  %67 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17471
  %call1 = call zeroext i8 @mlxsw_sp_router_port(%struct.mlxsw_sp* %67) #8, !dbg !17472
  %68 = load i8, i8* %add.addr, align 1, !dbg !17473
  %tobool2 = trunc i8 %68 to i1, !dbg !17473
  call void @mlxsw_reg_smid_pack(i8* %65, i16 zeroext %66, i8 zeroext %call1, i1 zeroext %tobool2) #8, !dbg !17474
  %69 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17475
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %69, i32 0, i32 1, !dbg !17476
  %70 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !17476
  %71 = load i8*, i8** %smid_pl, align 8, !dbg !17477
  %call3 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %70, %struct.mlxsw_reg_info* @mlxsw_reg_smid, i8* %71) #8, !dbg !17478
  store i32 %call3, i32* %err, align 4, !dbg !17479
  %72 = load i8*, i8** %smid_pl, align 8, !dbg !17480
  call void @kfree(i8* %72) #8, !dbg !17481
  %73 = load i32, i32* %err, align 4, !dbg !17482
  store i32 %73, i32* %retval, align 4, !dbg !17483
  br label %return, !dbg !17483

return:                                           ; preds = %if.end, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !17484
  ret i32 %74, !dbg !17484
}

; Function Attrs: noredzone
declare dso_local void @rtnl_lock() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_bridge_nve_fdb_event(%struct.mlxsw_sp_switchdev_event_work* %switchdev_work) #0 !dbg !17485 {
entry:
  %switchdev_work.addr = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %vni = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_switchdev_event_work* %switchdev_work, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, metadata !17488, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !17490, metadata !DIExpression()), !dbg !17491
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !17492, metadata !DIExpression()), !dbg !17493
  %0 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17494
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %0, i32 0, i32 2, !dbg !17495
  %1 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !17495
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !17493
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !17496, metadata !DIExpression()), !dbg !17497
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !17498, metadata !DIExpression()), !dbg !17499
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !17500, metadata !DIExpression()), !dbg !17501
  call void @llvm.dbg.declare(metadata i32* %vni, metadata !17502, metadata !DIExpression()), !dbg !17503
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17504, metadata !DIExpression()), !dbg !17505
  %2 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17506
  %event = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %2, i32 0, i32 3, !dbg !17508
  %3 = load i64, i64* %event, align 8, !dbg !17508
  %cmp = icmp ne i64 %3, 3, !dbg !17509
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17510

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17511
  %event2 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %4, i32 0, i32 3, !dbg !17512
  %5 = load i64, i64* %event2, align 8, !dbg !17512
  %cmp3 = icmp ne i64 %5, 4, !dbg !17513
  br i1 %cmp3, label %if.then, label %if.end, !dbg !17514

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !17515

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17516
  %event4 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %6, i32 0, i32 3, !dbg !17518
  %7 = load i64, i64* %event4, align 8, !dbg !17518
  %cmp5 = icmp eq i64 %7, 3, !dbg !17519
  br i1 %cmp5, label %land.lhs.true6, label %if.end8, !dbg !17520

land.lhs.true6:                                   ; preds = %if.end
  %8 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17521
  %9 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %8, i32 0, i32 1, !dbg !17522
  %fdb_info = bitcast %union.anon.185* %9 to %struct.switchdev_notifier_fdb_info*, !dbg !17522
  %added_by_user = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %fdb_info, i32 0, i32 3, !dbg !17523
  %bf.load = load i8, i8* %added_by_user, align 2, !dbg !17523
  %bf.clear = and i8 %bf.load, 1, !dbg !17523
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !17521
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !17524

if.then7:                                         ; preds = %land.lhs.true6
  br label %return, !dbg !17525

if.end8:                                          ; preds = %land.lhs.true6, %if.end
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17526
  %call = call zeroext i1 @netif_running(%struct.net_device* %10) #8, !dbg !17528
  br i1 %call, label %if.end10, label %if.then9, !dbg !17529

if.then9:                                         ; preds = %if.end8
  br label %return, !dbg !17530

if.end10:                                         ; preds = %if.end8
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17531
  %call11 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %11) #8, !dbg !17532
  store %struct.net_device* %call11, %struct.net_device** %br_dev, align 8, !dbg !17533
  %12 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !17534
  %tobool12 = icmp ne %struct.net_device* %12, null, !dbg !17534
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !17536

if.then13:                                        ; preds = %if.end10
  br label %return, !dbg !17537

if.end14:                                         ; preds = %if.end10
  %13 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !17538
  %call15 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %13) #8, !dbg !17540
  br i1 %call15, label %if.end17, label %if.then16, !dbg !17541

if.then16:                                        ; preds = %if.end14
  br label %return, !dbg !17542

if.end17:                                         ; preds = %if.end14
  %14 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !17543
  %call18 = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %14) #8, !dbg !17544
  store %struct.mlxsw_sp* %call18, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17545
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17546
  %tobool19 = icmp ne %struct.mlxsw_sp* %15, null, !dbg !17546
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !17548

if.then20:                                        ; preds = %if.end17
  br label %return, !dbg !17549

if.end21:                                         ; preds = %if.end17
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17550
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %16, i32 0, i32 8, !dbg !17551
  %17 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !17551
  %18 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !17552
  %call22 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %17, %struct.net_device* %18) #8, !dbg !17553
  store %struct.mlxsw_sp_bridge_device* %call22, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !17554
  %19 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !17555
  %tobool23 = icmp ne %struct.mlxsw_sp_bridge_device* %19, null, !dbg !17555
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !17557

if.then24:                                        ; preds = %if.end21
  br label %return, !dbg !17558

if.end25:                                         ; preds = %if.end21
  %20 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !17559
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %20, i32 0, i32 5, !dbg !17560
  %21 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !17560
  %fid_lookup = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %21, i32 0, i32 4, !dbg !17561
  %22 = load %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16)*, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16)** %fid_lookup, align 8, !dbg !17561
  %23 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !17562
  %24 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17563
  %25 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %24, i32 0, i32 1, !dbg !17564
  %fdb_info26 = bitcast %union.anon.185* %25 to %struct.switchdev_notifier_fdb_info*, !dbg !17564
  %vid = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %fdb_info26, i32 0, i32 2, !dbg !17565
  %26 = load i16, i16* %vid, align 8, !dbg !17565
  %call27 = call %struct.mlxsw_sp_fid* %22(%struct.mlxsw_sp_bridge_device* %23, i16 zeroext %26) #8, !dbg !17559
  store %struct.mlxsw_sp_fid* %call27, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !17566
  %27 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !17567
  %tobool28 = icmp ne %struct.mlxsw_sp_fid* %27, null, !dbg !17567
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !17569

if.then29:                                        ; preds = %if.end25
  br label %return, !dbg !17570

if.end30:                                         ; preds = %if.end25
  %28 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !17571
  %call31 = call i32 @mlxsw_sp_fid_vni(%struct.mlxsw_sp_fid* %28, i32* %vni) #8, !dbg !17572
  store i32 %call31, i32* %err, align 4, !dbg !17573
  %29 = load i32, i32* %err, align 4, !dbg !17574
  %tobool32 = icmp ne i32 %29, 0, !dbg !17574
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !17576

if.then33:                                        ; preds = %if.end30
  br label %out, !dbg !17577

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17578
  %31 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17579
  %32 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !17580
  %33 = load i32, i32* %vni, align 4, !dbg !17581
  call void @mlxsw_sp_switchdev_bridge_vxlan_fdb_event(%struct.mlxsw_sp* %30, %struct.mlxsw_sp_switchdev_event_work* %31, %struct.mlxsw_sp_fid* %32, i32 %33) #8, !dbg !17582
  br label %out, !dbg !17582

out:                                              ; preds = %if.end34, %if.then33
  call void @llvm.dbg.label(metadata !17583), !dbg !17584
  %34 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !17585
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %34) #8, !dbg !17586
  br label %return, !dbg !17587

return:                                           ; preds = %out, %if.then29, %if.then24, %if.then20, %if.then16, %if.then13, %if.then9, %if.then7, %if.then
  ret void, !dbg !17587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_fdb_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_notifier_fdb_info* %fdb_info, i1 zeroext %adding) #0 !dbg !17588 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %fdb_info.addr = alloca %struct.switchdev_notifier_fdb_info*, align 8
  %adding.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %orig_dev = alloca %struct.net_device*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %fid_index = alloca i16, align 2
  %vid = alloca i16, align 2
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !17591, metadata !DIExpression()), !dbg !17592
  store %struct.switchdev_notifier_fdb_info* %fdb_info, %struct.switchdev_notifier_fdb_info** %fdb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_fdb_info** %fdb_info.addr, metadata !17593, metadata !DIExpression()), !dbg !17594
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !17595, metadata !DIExpression()), !dbg !17596
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !17597, metadata !DIExpression()), !dbg !17598
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17599
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !17600
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !17600
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17598
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev, metadata !17601, metadata !DIExpression()), !dbg !17602
  %2 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info.addr, align 8, !dbg !17603
  %info = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %2, i32 0, i32 0, !dbg !17604
  %dev = getelementptr inbounds %struct.switchdev_notifier_info, %struct.switchdev_notifier_info* %info, i32 0, i32 0, !dbg !17605
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17605
  store %struct.net_device* %3, %struct.net_device** %orig_dev, align 8, !dbg !17602
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !17606, metadata !DIExpression()), !dbg !17607
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !17608, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !17610, metadata !DIExpression()), !dbg !17611
  call void @llvm.dbg.declare(metadata i16* %fid_index, metadata !17612, metadata !DIExpression()), !dbg !17613
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !17614, metadata !DIExpression()), !dbg !17615
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17616
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 8, !dbg !17617
  %5 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !17617
  %6 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !17618
  %call = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %5, %struct.net_device* %6) #8, !dbg !17619
  store %struct.mlxsw_sp_bridge_port* %call, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !17620
  %7 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !17621
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %7, null, !dbg !17621
  br i1 %tobool, label %if.end, label %if.then, !dbg !17623

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17624
  br label %return, !dbg !17624

if.end:                                           ; preds = %entry
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !17625
  %bridge_device2 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %8, i32 0, i32 1, !dbg !17626
  %9 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device2, align 8, !dbg !17626
  store %struct.mlxsw_sp_bridge_device* %9, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !17627
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17628
  %11 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !17629
  %12 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info.addr, align 8, !dbg !17630
  %vid3 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %12, i32 0, i32 2, !dbg !17631
  %13 = load i16, i16* %vid3, align 8, !dbg !17631
  %call4 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_bridge(%struct.mlxsw_sp_port* %10, %struct.mlxsw_sp_bridge_device* %11, i16 zeroext %13) #8, !dbg !17632
  store %struct.mlxsw_sp_port_vlan* %call4, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !17633
  %14 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !17634
  %tobool5 = icmp ne %struct.mlxsw_sp_port_vlan* %14, null, !dbg !17634
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !17636

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !17637
  br label %return, !dbg !17637

if.end7:                                          ; preds = %if.end
  %15 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !17638
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %15, i32 0, i32 2, !dbg !17639
  %16 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !17639
  %call8 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %16) #8, !dbg !17640
  store i16 %call8, i16* %fid_index, align 2, !dbg !17641
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !17642
  %vid9 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %17, i32 0, i32 3, !dbg !17643
  %18 = load i16, i16* %vid9, align 8, !dbg !17643
  store i16 %18, i16* %vid, align 2, !dbg !17644
  %19 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !17645
  %lagged = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %19, i32 0, i32 8, !dbg !17647
  %20 = load i8, i8* %lagged, align 1, !dbg !17647
  %tobool10 = trunc i8 %20 to i1, !dbg !17647
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !17648

if.then11:                                        ; preds = %if.end7
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17649
  %22 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !17650
  %23 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %22, i32 0, i32 9, !dbg !17651
  %system_port = bitcast %union.anon.159* %23 to i16*, !dbg !17651
  %24 = load i16, i16* %system_port, align 2, !dbg !17651
  %conv = trunc i16 %24 to i8, !dbg !17650
  %25 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info.addr, align 8, !dbg !17652
  %addr = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %25, i32 0, i32 1, !dbg !17653
  %26 = load i8*, i8** %addr, align 8, !dbg !17653
  %27 = load i16, i16* %fid_index, align 2, !dbg !17654
  %28 = load i8, i8* %adding.addr, align 1, !dbg !17655
  %tobool12 = trunc i8 %28 to i1, !dbg !17655
  %call13 = call i32 @mlxsw_sp_port_fdb_uc_op(%struct.mlxsw_sp* %21, i8 zeroext %conv, i8* %26, i16 zeroext %27, i1 zeroext %tobool12, i1 zeroext false) #8, !dbg !17656
  store i32 %call13, i32* %retval, align 4, !dbg !17657
  br label %return, !dbg !17657

if.else:                                          ; preds = %if.end7
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17658
  %30 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !17659
  %31 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %30, i32 0, i32 9, !dbg !17660
  %lag_id = bitcast %union.anon.159* %31 to i16*, !dbg !17660
  %32 = load i16, i16* %lag_id, align 2, !dbg !17660
  %33 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info.addr, align 8, !dbg !17661
  %addr14 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %33, i32 0, i32 1, !dbg !17662
  %34 = load i8*, i8** %addr14, align 8, !dbg !17662
  %35 = load i16, i16* %fid_index, align 2, !dbg !17663
  %36 = load i16, i16* %vid, align 2, !dbg !17664
  %37 = load i8, i8* %adding.addr, align 1, !dbg !17665
  %tobool15 = trunc i8 %37 to i1, !dbg !17665
  %call16 = call i32 @mlxsw_sp_port_fdb_uc_lag_op(%struct.mlxsw_sp* %29, i16 zeroext %32, i8* %34, i16 zeroext %35, i16 zeroext %36, i1 zeroext %tobool15, i1 zeroext false) #8, !dbg !17666
  store i32 %call16, i32* %retval, align 4, !dbg !17667
  br label %return, !dbg !17667

return:                                           ; preds = %if.else, %if.then11, %if.then6, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !17668
  ret i32 %38, !dbg !17668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_call_notifiers(i32 %type, i8* %mac, i16 zeroext %vid, %struct.net_device* %dev, i1 zeroext %offloaded) #0 !dbg !17669 {
entry:
  %type.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %vid.addr = alloca i16, align 2
  %dev.addr = alloca %struct.net_device*, align 8
  %offloaded.addr = alloca i8, align 1
  %info = alloca %struct.switchdev_notifier_fdb_info, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !17672, metadata !DIExpression()), !dbg !17673
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !17674, metadata !DIExpression()), !dbg !17675
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !17676, metadata !DIExpression()), !dbg !17677
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17678, metadata !DIExpression()), !dbg !17679
  %frombool = zext i1 %offloaded to i8
  store i8 %frombool, i8* %offloaded.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %offloaded.addr, metadata !17680, metadata !DIExpression()), !dbg !17681
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_fdb_info* %info, metadata !17682, metadata !DIExpression()), !dbg !17683
  %0 = load i8*, i8** %mac.addr, align 8, !dbg !17684
  %addr = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %info, i32 0, i32 1, !dbg !17685
  store i8* %0, i8** %addr, align 8, !dbg !17686
  %1 = load i16, i16* %vid.addr, align 2, !dbg !17687
  %vid1 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %info, i32 0, i32 2, !dbg !17688
  store i16 %1, i16* %vid1, align 8, !dbg !17689
  %2 = load i8, i8* %offloaded.addr, align 1, !dbg !17690
  %tobool = trunc i8 %2 to i1, !dbg !17690
  %conv = zext i1 %tobool to i8, !dbg !17690
  %offloaded2 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %info, i32 0, i32 3, !dbg !17691
  %bf.load = load i8, i8* %offloaded2, align 2, !dbg !17692
  %bf.value = and i8 %conv, 1, !dbg !17692
  %bf.shl = shl i8 %bf.value, 1, !dbg !17692
  %bf.clear = and i8 %bf.load, -3, !dbg !17692
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !17692
  store i8 %bf.set, i8* %offloaded2, align 2, !dbg !17692
  %3 = load i32, i32* %type.addr, align 4, !dbg !17693
  %conv3 = zext i32 %3 to i64, !dbg !17693
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17694
  %info4 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %info, i32 0, i32 0, !dbg !17695
  %call = call i32 @call_switchdev_notifiers(i64 %conv3, %struct.net_device* %4, %struct.switchdev_notifier_info* %info4, %struct.netlink_ext_ack* null) #8, !dbg !17696
  ret void, !dbg !17697
}

; Function Attrs: noredzone
declare dso_local void @rtnl_unlock() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_put(%struct.net_device* %dev) #0 !dbg !17698 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17699, metadata !DIExpression()), !dbg !17700
  br label %do.body, !dbg !17701

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17702

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !17704, metadata !DIExpression()), !dbg !17706
  store i8* null, i8** %__vpp_verify, align 8, !dbg !17706
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !17706
  br label %do.end, !dbg !17706

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !17702

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !17707, metadata !DIExpression()), !dbg !17709
  store i32 -1, i32* %pao_ID__, align 4, !dbg !17709
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17710
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 97, !dbg !17710
  %2 = load i32*, i32** %pcpu_refcnt, align 8, !dbg !17710
  call void asm sideeffect "decl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %2, i32* %2) #9, !dbg !17710, !srcloc !17714
  br label %do.end3, !dbg !17709

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !17702

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !17715
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_fid_vni(%struct.mlxsw_sp_fid*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_bridge_vxlan_fdb_event(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_switchdev_event_work* %switchdev_work, %struct.mlxsw_sp_fid* %fid, i32 %vni) #0 !dbg !17716 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %switchdev_work.addr = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %fid.addr = alloca %struct.mlxsw_sp_fid*, align 8
  %vni.addr = alloca i32, align 4
  %vxlan_fdb_info = alloca %struct.switchdev_notifier_vxlan_fdb_info, align 8
  %fdb_info = alloca %struct.switchdev_notifier_fdb_info*, align 8
  %dev = alloca %struct.net_device*, align 8
  %proto = alloca i32, align 4
  %addr = alloca %union.mlxsw_sp_l3addr, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !17719, metadata !DIExpression()), !dbg !17720
  store %struct.mlxsw_sp_switchdev_event_work* %switchdev_work, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, metadata !17721, metadata !DIExpression()), !dbg !17722
  store %struct.mlxsw_sp_fid* %fid, %struct.mlxsw_sp_fid** %fid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid.addr, metadata !17723, metadata !DIExpression()), !dbg !17724
  store i32 %vni, i32* %vni.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vni.addr, metadata !17725, metadata !DIExpression()), !dbg !17726
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, metadata !17727, metadata !DIExpression()), !dbg !17728
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_fdb_info** %fdb_info, metadata !17729, metadata !DIExpression()), !dbg !17730
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !17731, metadata !DIExpression()), !dbg !17732
  %0 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17733
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %0, i32 0, i32 2, !dbg !17734
  %1 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !17734
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !17732
  call void @llvm.dbg.declare(metadata i32* %proto, metadata !17735, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr* %addr, metadata !17737, metadata !DIExpression()), !dbg !17738
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17739, metadata !DIExpression()), !dbg !17740
  %2 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17741
  %3 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %2, i32 0, i32 1, !dbg !17742
  %fdb_info2 = bitcast %union.anon.185* %3 to %struct.switchdev_notifier_fdb_info*, !dbg !17742
  store %struct.switchdev_notifier_fdb_info* %fdb_info2, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !17743
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17744
  %5 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !17745
  %addr3 = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %5, i32 0, i32 1, !dbg !17746
  %6 = load i8*, i8** %addr3, align 8, !dbg !17746
  %7 = load i32, i32* %vni.addr, align 4, !dbg !17747
  %call = call i32 @vxlan_fdb_find_uc(%struct.net_device* %4, i8* %6, i32 %7, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info) #8, !dbg !17748
  store i32 %call, i32* %err, align 4, !dbg !17749
  %8 = load i32, i32* %err, align 4, !dbg !17750
  %tobool = icmp ne i32 %8, 0, !dbg !17750
  br i1 %tobool, label %if.then, label %if.end, !dbg !17752

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !17753

if.end:                                           ; preds = %entry
  %remote_ip = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 1, !dbg !17754
  call void @mlxsw_sp_switchdev_vxlan_addr_convert(%union.vxlan_addr* %remote_ip, i32* %proto, %union.mlxsw_sp_l3addr* %addr) #8, !dbg !17755
  %9 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !17756
  %event = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %9, i32 0, i32 3, !dbg !17757
  %10 = load i64, i64* %event, align 8, !dbg !17757
  switch i64 %10, label %sw.epilog [
    i64 3, label %sw.bb
    i64 4, label %sw.bb12
  ], !dbg !17758

sw.bb:                                            ; preds = %if.end
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17759
  %eth_addr = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 5, !dbg !17761
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr, i64 0, i64 0, !dbg !17762
  %12 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid.addr, align 8, !dbg !17763
  %call4 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %12) #8, !dbg !17764
  %13 = load i32, i32* %proto, align 4, !dbg !17765
  %call5 = call i32 @mlxsw_sp_port_fdb_tunnel_uc_op(%struct.mlxsw_sp* %11, i8* %arraydecay, i16 zeroext %call4, i32 %13, %union.mlxsw_sp_l3addr* %addr, i1 zeroext true, i1 zeroext false) #8, !dbg !17766
  store i32 %call5, i32* %err, align 4, !dbg !17767
  %14 = load i32, i32* %err, align 4, !dbg !17768
  %tobool6 = icmp ne i32 %14, 0, !dbg !17768
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !17770

if.then7:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !17771

if.end8:                                          ; preds = %sw.bb
  %offloaded = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 7, !dbg !17772
  store i8 1, i8* %offloaded, align 4, !dbg !17773
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17774
  %info = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 0, !dbg !17775
  %call9 = call i32 @call_switchdev_notifiers(i64 14, %struct.net_device* %15, %struct.switchdev_notifier_info* %info, %struct.netlink_ext_ack* null) #8, !dbg !17776
  %eth_addr10 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 5, !dbg !17777
  %arraydecay11 = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr10, i64 0, i64 0, !dbg !17778
  %16 = load %struct.switchdev_notifier_fdb_info*, %struct.switchdev_notifier_fdb_info** %fdb_info, align 8, !dbg !17779
  %vid = getelementptr inbounds %struct.switchdev_notifier_fdb_info, %struct.switchdev_notifier_fdb_info* %16, i32 0, i32 2, !dbg !17780
  %17 = load i16, i16* %vid, align 8, !dbg !17780
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17781
  call void @mlxsw_sp_fdb_call_notifiers(i32 5, i8* %arraydecay11, i16 zeroext %17, %struct.net_device* %18, i1 zeroext true) #8, !dbg !17782
  br label %sw.epilog, !dbg !17783

sw.bb12:                                          ; preds = %if.end
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !17784
  %eth_addr13 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 5, !dbg !17785
  %arraydecay14 = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr13, i64 0, i64 0, !dbg !17786
  %20 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid.addr, align 8, !dbg !17787
  %call15 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %20) #8, !dbg !17788
  %21 = load i32, i32* %proto, align 4, !dbg !17789
  %call16 = call i32 @mlxsw_sp_port_fdb_tunnel_uc_op(%struct.mlxsw_sp* %19, i8* %arraydecay14, i16 zeroext %call15, i32 %21, %union.mlxsw_sp_l3addr* %addr, i1 zeroext false, i1 zeroext false) #8, !dbg !17790
  store i32 %call16, i32* %err, align 4, !dbg !17791
  %offloaded17 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 7, !dbg !17792
  store i8 0, i8* %offloaded17, align 4, !dbg !17793
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17794
  %info18 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info, i32 0, i32 0, !dbg !17795
  %call19 = call i32 @call_switchdev_notifiers(i64 14, %struct.net_device* %22, %struct.switchdev_notifier_info* %info18, %struct.netlink_ext_ack* null) #8, !dbg !17796
  br label %sw.epilog, !dbg !17797

sw.epilog:                                        ; preds = %if.then, %if.then7, %if.end, %sw.bb12, %if.end8
  ret void, !dbg !17798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vxlan_fdb_find_uc(%struct.net_device* %dev, i8* %mac, i32 %vni, %struct.switchdev_notifier_vxlan_fdb_info* %fdb_info) #0 !dbg !17799 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mac.addr = alloca i8*, align 8
  %vni.addr = alloca i32, align 4
  %fdb_info.addr = alloca %struct.switchdev_notifier_vxlan_fdb_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17802, metadata !DIExpression()), !dbg !17803
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !17804, metadata !DIExpression()), !dbg !17805
  store i32 %vni, i32* %vni.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vni.addr, metadata !17806, metadata !DIExpression()), !dbg !17807
  store %struct.switchdev_notifier_vxlan_fdb_info* %fdb_info, %struct.switchdev_notifier_vxlan_fdb_info** %fdb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_vxlan_fdb_info** %fdb_info.addr, metadata !17808, metadata !DIExpression()), !dbg !17809
  ret i32 -2, !dbg !17810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_vxlan_addr_convert(%union.vxlan_addr* %vxlan_addr, i32* %proto, %union.mlxsw_sp_l3addr* %addr) #0 !dbg !17811 {
entry:
  %vxlan_addr.addr = alloca %union.vxlan_addr*, align 8
  %proto.addr = alloca i32*, align 8
  %addr.addr = alloca %union.mlxsw_sp_l3addr*, align 8
  store %union.vxlan_addr* %vxlan_addr, %union.vxlan_addr** %vxlan_addr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.vxlan_addr** %vxlan_addr.addr, metadata !17818, metadata !DIExpression()), !dbg !17819
  store i32* %proto, i32** %proto.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %proto.addr, metadata !17820, metadata !DIExpression()), !dbg !17821
  store %union.mlxsw_sp_l3addr* %addr, %union.mlxsw_sp_l3addr** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr** %addr.addr, metadata !17822, metadata !DIExpression()), !dbg !17823
  %0 = load %union.vxlan_addr*, %union.vxlan_addr** %vxlan_addr.addr, align 8, !dbg !17824
  %sa = bitcast %union.vxlan_addr* %0 to %struct.sockaddr*, !dbg !17826
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 0, !dbg !17827
  %1 = load i16, i16* %sa_family, align 4, !dbg !17827
  %conv = zext i16 %1 to i32, !dbg !17824
  %cmp = icmp eq i32 %conv, 2, !dbg !17828
  br i1 %cmp, label %if.then, label %if.else, !dbg !17829

if.then:                                          ; preds = %entry
  %2 = load %union.vxlan_addr*, %union.vxlan_addr** %vxlan_addr.addr, align 8, !dbg !17830
  %sin = bitcast %union.vxlan_addr* %2 to %struct.sockaddr_in*, !dbg !17832
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin, i32 0, i32 2, !dbg !17833
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !17834
  %3 = load i32, i32* %s_addr, align 4, !dbg !17834
  %4 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17835
  %addr4 = bitcast %union.mlxsw_sp_l3addr* %4 to i32*, !dbg !17836
  store i32 %3, i32* %addr4, align 4, !dbg !17837
  %5 = load i32*, i32** %proto.addr, align 8, !dbg !17838
  store i32 0, i32* %5, align 4, !dbg !17839
  br label %if.end, !dbg !17840

if.else:                                          ; preds = %entry
  %6 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17841
  %addr6 = bitcast %union.mlxsw_sp_l3addr* %6 to %struct.in6_addr*, !dbg !17843
  %7 = load %union.vxlan_addr*, %union.vxlan_addr** %vxlan_addr.addr, align 8, !dbg !17844
  %sin6 = bitcast %union.vxlan_addr* %7 to %struct.sockaddr_in6*, !dbg !17845
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sin6, i32 0, i32 3, !dbg !17846
  %8 = bitcast %struct.in6_addr* %addr6 to i8*, !dbg !17846
  %9 = bitcast %struct.in6_addr* %sin6_addr to i8*, !dbg !17846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 16, i1 false), !dbg !17846
  %10 = load i32*, i32** %proto.addr, align 8, !dbg !17847
  store i32 1, i32* %10, align 4, !dbg !17848
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !17849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_fdb_tunnel_uc_op(%struct.mlxsw_sp* %mlxsw_sp, i8* %mac, i16 zeroext %fid, i32 %proto, %union.mlxsw_sp_l3addr* %addr, i1 zeroext %adding, i1 zeroext %dynamic) #0 !dbg !17850 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !17855
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !17858
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !17859
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !17860
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !17861
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !17863
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !17865
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !17868
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !17869
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !17870
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !17871
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !17872
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !17873
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !17874
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !17875
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mac.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %proto.addr = alloca i32, align 4
  %addr.addr = alloca %union.mlxsw_sp_l3addr*, align 8
  %adding.addr = alloca i8, align 1
  %dynamic.addr = alloca i8, align 1
  %sfd_proto = alloca i32, align 4
  %sfd_pl = alloca i8*, align 8
  %num_rec = alloca i8, align 1
  %uip = alloca i32, align 4
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !17876, metadata !DIExpression()), !dbg !17877
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !17878, metadata !DIExpression()), !dbg !17879
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !17880, metadata !DIExpression()), !dbg !17881
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !17882, metadata !DIExpression()), !dbg !17883
  store %union.mlxsw_sp_l3addr* %addr, %union.mlxsw_sp_l3addr** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr** %addr.addr, metadata !17884, metadata !DIExpression()), !dbg !17885
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !17886, metadata !DIExpression()), !dbg !17887
  %frombool1 = zext i1 %dynamic to i8
  store i8 %frombool1, i8* %dynamic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dynamic.addr, metadata !17888, metadata !DIExpression()), !dbg !17889
  call void @llvm.dbg.declare(metadata i32* %sfd_proto, metadata !17890, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.declare(metadata i8** %sfd_pl, metadata !17892, metadata !DIExpression()), !dbg !17893
  call void @llvm.dbg.declare(metadata i8* %num_rec, metadata !17894, metadata !DIExpression()), !dbg !17895
  call void @llvm.dbg.declare(metadata i32* %uip, metadata !17896, metadata !DIExpression()), !dbg !17897
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17898, metadata !DIExpression()), !dbg !17899
  %0 = load i32, i32* %proto.addr, align 4, !dbg !17900
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
  ], !dbg !17901

sw.bb:                                            ; preds = %entry
  %1 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17902
  %addr4 = bitcast %union.mlxsw_sp_l3addr* %1 to i32*, !dbg !17902
  %2 = load i32, i32* %addr4, align 4, !dbg !17902
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !17902
  br i1 %3, label %cond.true, label %cond.false, !dbg !17902

cond.true:                                        ; preds = %sw.bb
  %4 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17902
  %addr42 = bitcast %union.mlxsw_sp_l3addr* %4 to i32*, !dbg !17902
  %5 = load i32, i32* %addr42, align 4, !dbg !17902
  %and = and i32 %5, 255, !dbg !17902
  %shl = shl i32 %and, 24, !dbg !17902
  %6 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17902
  %addr43 = bitcast %union.mlxsw_sp_l3addr* %6 to i32*, !dbg !17902
  %7 = load i32, i32* %addr43, align 4, !dbg !17902
  %and4 = and i32 %7, 65280, !dbg !17902
  %shl5 = shl i32 %and4, 8, !dbg !17902
  %or = or i32 %shl, %shl5, !dbg !17902
  %8 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17902
  %addr46 = bitcast %union.mlxsw_sp_l3addr* %8 to i32*, !dbg !17902
  %9 = load i32, i32* %addr46, align 4, !dbg !17902
  %and7 = and i32 %9, 16711680, !dbg !17902
  %shr = lshr i32 %and7, 8, !dbg !17902
  %or8 = or i32 %or, %shr, !dbg !17902
  %10 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17902
  %addr49 = bitcast %union.mlxsw_sp_l3addr* %10 to i32*, !dbg !17902
  %11 = load i32, i32* %addr49, align 4, !dbg !17902
  %and10 = and i32 %11, -16777216, !dbg !17902
  %shr11 = lshr i32 %and10, 24, !dbg !17902
  %or12 = or i32 %or8, %shr11, !dbg !17902
  br label %cond.end, !dbg !17902

cond.false:                                       ; preds = %sw.bb
  %12 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !17902
  %addr413 = bitcast %union.mlxsw_sp_l3addr* %12 to i32*, !dbg !17902
  %13 = load i32, i32* %addr413, align 4, !dbg !17902
  %call = call i32 @__fswab32(i32 %13) #10, !dbg !17902
  br label %cond.end, !dbg !17902

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call, %cond.false ], !dbg !17902
  store i32 %cond, i32* %uip, align 4, !dbg !17904
  store i32 0, i32* %sfd_proto, align 4, !dbg !17905
  br label %sw.epilog, !dbg !17906

sw.bb14:                                          ; preds = %entry
  br label %sw.default, !dbg !17906

sw.default:                                       ; preds = %entry, %sw.bb14
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !17907, metadata !DIExpression()), !dbg !17909
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !17909
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !17910
  %tobool = icmp ne i32 %14, 0, !dbg !17910
  %lnot = xor i1 %tobool, true, !dbg !17910
  %lnot15 = xor i1 %lnot, true, !dbg !17910
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !17910
  %conv = sext i32 %lnot.ext to i64, !dbg !17910
  %tobool16 = icmp ne i64 %conv, 0, !dbg !17910
  br i1 %tobool16, label %if.then, label %if.end, !dbg !17909

if.then:                                          ; preds = %sw.default
  br label %do.body, !dbg !17910

do.body:                                          ; preds = %if.then
  br label %do.body17, !dbg !17912

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !17914

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !17912

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 1306, i32 2305, i64 12) #9, !dbg !17916, !srcloc !17918
  br label %do.end19, !dbg !17916

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 688) #9, !dbg !17919, !srcloc !17921
  br label %do.body20, !dbg !17912

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !17922

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !17912

do.end22:                                         ; preds = %do.end21
  br label %if.end, !dbg !17912

if.end:                                           ; preds = %do.end22, %sw.default
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !17909
  %tobool23 = icmp ne i32 %15, 0, !dbg !17909
  %lnot24 = xor i1 %tobool23, true, !dbg !17909
  %lnot26 = xor i1 %lnot24, true, !dbg !17909
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !17909
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !17909
  store i64 %conv28, i64* %tmp, align 8, !dbg !17910
  %16 = load i64, i64* %tmp, align 8, !dbg !17909
  store i32 -95, i32* %retval, align 4, !dbg !17924
  br label %return, !dbg !17924

sw.epilog:                                        ; preds = %cond.end
  store i64 1040, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %17 = load i64, i64* %size.addr.i, align 8, !dbg !17925
  %18 = call i1 @llvm.is.constant.i64(i64 %17) #9, !dbg !17926
  br i1 %18, label %if.then.i, label %if.end9.i, !dbg !17927

if.then.i:                                        ; preds = %sw.epilog
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !17928
  %cmp.i = icmp ugt i64 %19, 8192, !dbg !17929
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !17930

if.then1.i:                                       ; preds = %if.then.i
  %20 = load i64, i64* %size.addr.i, align 8, !dbg !17931
  %21 = load i32, i32* %flags.addr.i, align 4, !dbg !17932
  store i64 %20, i64* %size.addr.i.i, align 8
  store i32 %21, i32* %flags.addr.i.i, align 4
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !17933
  %call.i.i = call i32 @get_order(i64 %22) #10, !dbg !17934
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !17872
  %23 = load i64, i64* %size.addr.i.i, align 8, !dbg !17935
  %24 = load i32, i32* %flags.addr.i.i, align 4, !dbg !17936
  %25 = load i32, i32* %order.i.i, align 4, !dbg !17937
  store i64 %23, i64* %size.addr.i.i.i, align 8
  store i32 %24, i32* %flags.addr.i.i.i, align 4
  store i32 %25, i32* %order.addr.i.i.i, align 4
  %26 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !17938
  %27 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !17939
  %28 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !17940
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %26, i32 %27, i32 %28) #11, !dbg !17941
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !17941
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !17941
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !17941
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !17941
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !17942
  br label %kmalloc.exit, !dbg !17942

if.end.i:                                         ; preds = %if.then.i
  %29 = load i64, i64* %size.addr.i, align 8, !dbg !17943
  store i64 %29, i64* %size.addr.i11.i, align 8
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17944
  %tobool.i.i = icmp ne i64 %30, 0, !dbg !17944
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !17945

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !17946
  br label %kmalloc_index.exit.i, !dbg !17946

if.end.i.i:                                       ; preds = %if.end.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17947
  %cmp.i.i = icmp ule i64 %31, 8, !dbg !17948
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !17949

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !17950
  br label %kmalloc_index.exit.i, !dbg !17950

if.end2.i.i:                                      ; preds = %if.end.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17951
  %cmp3.i.i = icmp ugt i64 %32, 64, !dbg !17952
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !17953

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17954
  %cmp4.i.i = icmp ule i64 %33, 96, !dbg !17955
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !17956

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !17957
  br label %kmalloc_index.exit.i, !dbg !17957

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17958
  %cmp7.i.i = icmp ugt i64 %34, 128, !dbg !17959
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !17960

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17961
  %cmp9.i.i = icmp ule i64 %35, 192, !dbg !17962
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !17963

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !17964
  br label %kmalloc_index.exit.i, !dbg !17964

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17965
  %cmp12.i.i = icmp ule i64 %36, 8, !dbg !17966
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !17967

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !17968
  br label %kmalloc_index.exit.i, !dbg !17968

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17969
  %cmp15.i.i = icmp ule i64 %37, 16, !dbg !17970
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !17971

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !17972
  br label %kmalloc_index.exit.i, !dbg !17972

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17973
  %cmp18.i.i = icmp ule i64 %38, 32, !dbg !17974
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !17975

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !17976
  br label %kmalloc_index.exit.i, !dbg !17976

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17977
  %cmp21.i.i = icmp ule i64 %39, 64, !dbg !17978
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !17979

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !17980
  br label %kmalloc_index.exit.i, !dbg !17980

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17981
  %cmp24.i.i = icmp ule i64 %40, 128, !dbg !17982
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !17983

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !17984
  br label %kmalloc_index.exit.i, !dbg !17984

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17985
  %cmp27.i.i = icmp ule i64 %41, 256, !dbg !17986
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !17987

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !17988
  br label %kmalloc_index.exit.i, !dbg !17988

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17989
  %cmp30.i.i = icmp ule i64 %42, 512, !dbg !17990
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !17991

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !17992
  br label %kmalloc_index.exit.i, !dbg !17992

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17993
  %cmp33.i.i = icmp ule i64 %43, 1024, !dbg !17994
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !17995

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !17996
  br label %kmalloc_index.exit.i, !dbg !17996

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17997
  %cmp36.i.i = icmp ule i64 %44, 2048, !dbg !17998
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !17999

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !18000
  br label %kmalloc_index.exit.i, !dbg !18000

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18001
  %cmp39.i.i = icmp ule i64 %45, 4096, !dbg !18002
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !18003

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !18004
  br label %kmalloc_index.exit.i, !dbg !18004

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18005
  %cmp42.i.i = icmp ule i64 %46, 8192, !dbg !18006
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !18007

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !18008
  br label %kmalloc_index.exit.i, !dbg !18008

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18009
  %cmp45.i.i = icmp ule i64 %47, 16384, !dbg !18010
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !18011

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !18012
  br label %kmalloc_index.exit.i, !dbg !18012

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18013
  %cmp48.i.i = icmp ule i64 %48, 32768, !dbg !18014
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !18015

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !18016
  br label %kmalloc_index.exit.i, !dbg !18016

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18017
  %cmp51.i.i = icmp ule i64 %49, 65536, !dbg !18018
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !18019

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !18020
  br label %kmalloc_index.exit.i, !dbg !18020

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18021
  %cmp54.i.i = icmp ule i64 %50, 131072, !dbg !18022
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !18023

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !18024
  br label %kmalloc_index.exit.i, !dbg !18024

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18025
  %cmp57.i.i = icmp ule i64 %51, 262144, !dbg !18026
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !18027

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !18028
  br label %kmalloc_index.exit.i, !dbg !18028

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18029
  %cmp60.i.i = icmp ule i64 %52, 524288, !dbg !18030
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !18031

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !18032
  br label %kmalloc_index.exit.i, !dbg !18032

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18033
  %cmp63.i.i = icmp ule i64 %53, 1048576, !dbg !18034
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !18035

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !18036
  br label %kmalloc_index.exit.i, !dbg !18036

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18037
  %cmp66.i.i = icmp ule i64 %54, 2097152, !dbg !18038
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !18039

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !18040
  br label %kmalloc_index.exit.i, !dbg !18040

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18041
  %cmp69.i.i = icmp ule i64 %55, 4194304, !dbg !18042
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !18043

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !18044
  br label %kmalloc_index.exit.i, !dbg !18044

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18045
  %cmp72.i.i = icmp ule i64 %56, 8388608, !dbg !18046
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !18047

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !18048
  br label %kmalloc_index.exit.i, !dbg !18048

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18049
  %cmp75.i.i = icmp ule i64 %57, 16777216, !dbg !18050
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !18051

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !18052
  br label %kmalloc_index.exit.i, !dbg !18052

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18053
  %cmp78.i.i = icmp ule i64 %58, 33554432, !dbg !18054
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !18055

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !18056
  br label %kmalloc_index.exit.i, !dbg !18056

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18057
  %cmp81.i.i = icmp ule i64 %59, 67108864, !dbg !18058
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !18059

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !18060
  br label %kmalloc_index.exit.i, !dbg !18060

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !18061, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !18062, !srcloc !12241
  unreachable, !dbg !18063

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %60 = load i32, i32* %retval.i.i, align 4, !dbg !18064
  store i32 %60, i32* %index.i, align 4, !dbg !18065
  %61 = load i32, i32* %index.i, align 4, !dbg !18066
  %tobool.i = icmp ne i32 %61, 0, !dbg !18066
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !18067

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !18068
  br label %kmalloc.exit, !dbg !18068

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !18069
  store i32 %62, i32* %flags.addr.i13.i, align 4
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18070
  %and.i.i = and i32 %63, 17, !dbg !18070
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !18070
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !18070
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !18070
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !18070
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !18071

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !18072
  br label %kmalloc_type.exit.i, !dbg !18072

if.end.i16.i:                                     ; preds = %if.end4.i
  %64 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18073
  %and2.i.i = and i32 %64, 1, !dbg !18074
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !18073
  %65 = zext i1 %tobool3.i.i to i64, !dbg !18073
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !18073
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !18075
  br label %kmalloc_type.exit.i, !dbg !18075

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %66 = load i32, i32* %retval.i12.i, align 4, !dbg !18076
  %idxprom.i = zext i32 %66 to i64, !dbg !18077
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !18077
  %67 = load i32, i32* %index.i, align 4, !dbg !18078
  %idxprom6.i = zext i32 %67 to i64, !dbg !18077
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !18077
  %68 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !18077
  %69 = load i32, i32* %flags.addr.i, align 4, !dbg !18079
  %70 = load i64, i64* %size.addr.i, align 8, !dbg !18080
  store %struct.kmem_cache* %68, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %69, i32* %flags.addr.i17.i, align 4
  store i64 %70, i64* %size.addr.i18.i, align 8
  %71 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18081
  %72 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18082
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %71, i32 %72) #11, !dbg !18083
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !18083
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !18083
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !18083
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !18083
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !17860
  %73 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18084
  %74 = load i8*, i8** %ret.i.i, align 8, !dbg !18085
  %75 = load i64, i64* %size.addr.i18.i, align 8, !dbg !18086
  %76 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18087
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %73, i8* %74, i64 %75, i32 %76) #11, !dbg !18088
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !18089
  %77 = load i8*, i8** %ret.i.i, align 8, !dbg !18090
  store i8* %77, i8** %retval.i, align 8, !dbg !18091
  br label %kmalloc.exit, !dbg !18091

if.end9.i:                                        ; preds = %sw.epilog
  %78 = load i64, i64* %size.addr.i, align 8, !dbg !18092
  %79 = load i32, i32* %flags.addr.i, align 4, !dbg !18093
  %call10.i = call noalias i8* @__kmalloc(i64 %78, i32 %79) #11, !dbg !18094
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !18094
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !18094
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !18094
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !18094
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !18095
  br label %kmalloc.exit, !dbg !18095

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %80 = load i8*, i8** %retval.i, align 8, !dbg !18096
  store i8* %80, i8** %sfd_pl, align 8, !dbg !18097
  %81 = load i8*, i8** %sfd_pl, align 8, !dbg !18098
  %tobool30 = icmp ne i8* %81, null, !dbg !18098
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !18100

if.then31:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !18101
  br label %return, !dbg !18101

if.end32:                                         ; preds = %kmalloc.exit
  %82 = load i8*, i8** %sfd_pl, align 8, !dbg !18102
  %83 = load i8, i8* %adding.addr, align 1, !dbg !18103
  %tobool33 = trunc i8 %83 to i1, !dbg !18103
  %call34 = call i32 @mlxsw_sp_sfd_op(i1 zeroext %tobool33) #8, !dbg !18104
  call void @mlxsw_reg_sfd_pack(i8* %82, i32 %call34, i32 0) #8, !dbg !18105
  %84 = load i8*, i8** %sfd_pl, align 8, !dbg !18106
  %85 = load i8, i8* %dynamic.addr, align 1, !dbg !18107
  %tobool35 = trunc i8 %85 to i1, !dbg !18107
  %call36 = call i32 @mlxsw_sp_sfd_rec_policy(i1 zeroext %tobool35) #8, !dbg !18108
  %86 = load i8*, i8** %mac.addr, align 8, !dbg !18109
  %87 = load i16, i16* %fid.addr, align 2, !dbg !18110
  %88 = load i32, i32* %uip, align 4, !dbg !18111
  %89 = load i32, i32* %sfd_proto, align 4, !dbg !18112
  call void @mlxsw_reg_sfd_uc_tunnel_pack(i8* %84, i32 0, i32 %call36, i8* %86, i16 zeroext %87, i32 0, i32 %88, i32 %89) #8, !dbg !18113
  %90 = load i8*, i8** %sfd_pl, align 8, !dbg !18114
  %call37 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %90) #8, !dbg !18115
  %conv38 = trunc i32 %call37 to i8, !dbg !18115
  store i8 %conv38, i8* %num_rec, align 1, !dbg !18116
  %91 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18117
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %91, i32 0, i32 1, !dbg !18118
  %92 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !18118
  %93 = load i8*, i8** %sfd_pl, align 8, !dbg !18119
  %call39 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %92, %struct.mlxsw_reg_info* @mlxsw_reg_sfd, i8* %93) #8, !dbg !18120
  store i32 %call39, i32* %err, align 4, !dbg !18121
  %94 = load i32, i32* %err, align 4, !dbg !18122
  %tobool40 = icmp ne i32 %94, 0, !dbg !18122
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !18124

if.then41:                                        ; preds = %if.end32
  br label %out, !dbg !18125

if.end42:                                         ; preds = %if.end32
  %95 = load i8, i8* %num_rec, align 1, !dbg !18126
  %conv43 = zext i8 %95 to i32, !dbg !18126
  %96 = load i8*, i8** %sfd_pl, align 8, !dbg !18128
  %call44 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %96) #8, !dbg !18129
  %cmp = icmp ne i32 %conv43, %call44, !dbg !18130
  br i1 %cmp, label %if.then46, label %if.end47, !dbg !18131

if.then46:                                        ; preds = %if.end42
  store i32 -16, i32* %err, align 4, !dbg !18132
  br label %if.end47, !dbg !18133

if.end47:                                         ; preds = %if.then46, %if.end42
  br label %out, !dbg !18134

out:                                              ; preds = %if.end47, %if.then41
  call void @llvm.dbg.label(metadata !18135), !dbg !18136
  %97 = load i8*, i8** %sfd_pl, align 8, !dbg !18137
  call void @kfree(i8* %97) #8, !dbg !18138
  %98 = load i32, i32* %err, align 4, !dbg !18139
  store i32 %98, i32* %retval, align 4, !dbg !18140
  br label %return, !dbg !18140

return:                                           ; preds = %out, %if.then31, %if.end
  %99 = load i32, i32* %retval, align 4, !dbg !18141
  ret i32 %99, !dbg !18141
}

; Function Attrs: noredzone
declare dso_local i32 @call_switchdev_notifiers(i64, %struct.net_device*, %struct.switchdev_notifier_info*, %struct.netlink_ext_ack*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_tunnel_pack(i8* %payload, i32 %rec_index, i32 %policy, i8* %mac, i16 zeroext %fid, i32 %action, i32 %uip, i32 %proto) #0 !dbg !18142 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %policy.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %action.addr = alloca i32, align 4
  %uip.addr = alloca i32, align 4
  %proto.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !18145, metadata !DIExpression()), !dbg !18146
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !18147, metadata !DIExpression()), !dbg !18148
  store i32 %policy, i32* %policy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %policy.addr, metadata !18149, metadata !DIExpression()), !dbg !18150
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !18151, metadata !DIExpression()), !dbg !18152
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !18153, metadata !DIExpression()), !dbg !18154
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !18155, metadata !DIExpression()), !dbg !18156
  store i32 %uip, i32* %uip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uip.addr, metadata !18157, metadata !DIExpression()), !dbg !18158
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !18159, metadata !DIExpression()), !dbg !18160
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !18161
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !18162
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !18163
  %3 = load i32, i32* %action.addr, align 4, !dbg !18164
  call void @mlxsw_reg_sfd_rec_pack(i8* %0, i32 %1, i32 12, i8* %2, i32 %3) #8, !dbg !18165
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !18166
  %5 = load i32, i32* %rec_index.addr, align 4, !dbg !18167
  %conv = trunc i32 %5 to i16, !dbg !18167
  %6 = load i32, i32* %policy.addr, align 4, !dbg !18168
  call void @mlxsw_reg_sfd_rec_policy_set(i8* %4, i16 zeroext %conv, i32 %6) #8, !dbg !18169
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !18170
  %8 = load i32, i32* %rec_index.addr, align 4, !dbg !18171
  %conv1 = trunc i32 %8 to i16, !dbg !18171
  %9 = load i32, i32* %uip.addr, align 4, !dbg !18172
  %shr = lshr i32 %9, 24, !dbg !18173
  call void @mlxsw_reg_sfd_uc_tunnel_uip_msb_set(i8* %7, i16 zeroext %conv1, i32 %shr) #8, !dbg !18174
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !18175
  %11 = load i32, i32* %rec_index.addr, align 4, !dbg !18176
  %conv2 = trunc i32 %11 to i16, !dbg !18176
  %12 = load i32, i32* %uip.addr, align 4, !dbg !18177
  call void @mlxsw_reg_sfd_uc_tunnel_uip_lsb_set(i8* %10, i16 zeroext %conv2, i32 %12) #8, !dbg !18178
  %13 = load i8*, i8** %payload.addr, align 8, !dbg !18179
  %14 = load i32, i32* %rec_index.addr, align 4, !dbg !18180
  %conv3 = trunc i32 %14 to i16, !dbg !18180
  %15 = load i16, i16* %fid.addr, align 2, !dbg !18181
  %conv4 = zext i16 %15 to i32, !dbg !18181
  call void @mlxsw_reg_sfd_uc_tunnel_fid_set(i8* %13, i16 zeroext %conv3, i32 %conv4) #8, !dbg !18182
  %16 = load i8*, i8** %payload.addr, align 8, !dbg !18183
  %17 = load i32, i32* %rec_index.addr, align 4, !dbg !18184
  %conv5 = trunc i32 %17 to i16, !dbg !18184
  %18 = load i32, i32* %proto.addr, align 4, !dbg !18185
  call void @mlxsw_reg_sfd_uc_tunnel_protocol_set(i8* %16, i16 zeroext %conv5, i32 %18) #8, !dbg !18186
  ret void, !dbg !18187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_sfd_rec_policy(i1 zeroext %dynamic) #0 !dbg !18188 {
entry:
  %dynamic.addr = alloca i8, align 1
  %frombool = zext i1 %dynamic to i8
  store i8 %frombool, i8* %dynamic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dynamic.addr, metadata !18191, metadata !DIExpression()), !dbg !18192
  %0 = load i8, i8* %dynamic.addr, align 1, !dbg !18193
  %tobool = trunc i8 %0 to i1, !dbg !18193
  %1 = zext i1 %tobool to i64, !dbg !18193
  %cond = select i1 %tobool, i32 3, i32 1, !dbg !18193
  ret i32 %cond, !dbg !18194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_tunnel_uip_msb_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18195 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18196, metadata !DIExpression()), !dbg !18197
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18198, metadata !DIExpression()), !dbg !18197
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18199, metadata !DIExpression()), !dbg !18197
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18197
  %1 = load i16, i16* %index.addr, align 2, !dbg !18197
  %2 = load i32, i32* %val.addr, align 4, !dbg !18197
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_tunnel_uip_msb_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18197
  ret void, !dbg !18197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_tunnel_uip_lsb_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18200 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18201, metadata !DIExpression()), !dbg !18202
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18203, metadata !DIExpression()), !dbg !18202
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18204, metadata !DIExpression()), !dbg !18202
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18202
  %1 = load i16, i16* %index.addr, align 2, !dbg !18202
  %2 = load i32, i32* %val.addr, align 4, !dbg !18202
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_tunnel_uip_lsb_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18202
  ret void, !dbg !18202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_tunnel_fid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18205 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18206, metadata !DIExpression()), !dbg !18207
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18208, metadata !DIExpression()), !dbg !18207
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18209, metadata !DIExpression()), !dbg !18207
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18207
  %1 = load i16, i16* %index.addr, align 2, !dbg !18207
  %2 = load i32, i32* %val.addr, align 4, !dbg !18207
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_tunnel_fid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18207
  ret void, !dbg !18207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_tunnel_protocol_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18210 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18211, metadata !DIExpression()), !dbg !18212
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18213, metadata !DIExpression()), !dbg !18212
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18214, metadata !DIExpression()), !dbg !18212
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18212
  %1 = load i16, i16* %index.addr, align 2, !dbg !18212
  %2 = load i32, i32* %val.addr, align 4, !dbg !18212
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_tunnel_protocol_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18212
  ret void, !dbg !18212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_bridge(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_device* %bridge_device, i16 zeroext %vid) #0 !dbg !18215 {
entry:
  %retval = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp20 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !18218, metadata !DIExpression()), !dbg !18219
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !18220, metadata !DIExpression()), !dbg !18221
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !18222, metadata !DIExpression()), !dbg !18223
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !18224, metadata !DIExpression()), !dbg !18225
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18226, metadata !DIExpression()), !dbg !18229
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !18229
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 12, !dbg !18229
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !18229
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !18229
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !18229
  store i8* %2, i8** %__mptr, align 8, !dbg !18229
  br label %do.body, !dbg !18229

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18230

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !18229
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !18229
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !18229
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !18230
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !18229
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18232
  br label %for.cond, !dbg !18232

for.cond:                                         ; preds = %do.end19, %do.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18233
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 0, !dbg !18233
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !18233
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 12, !dbg !18233
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !18233
  %lnot = xor i1 %cmp, true, !dbg !18233
  br i1 %lnot, label %for.body, label %for.end, !dbg !18232

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18235
  %bridge_port = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 4, !dbg !18238
  %9 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !18238
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %9, null, !dbg !18235
  br i1 %tobool, label %if.end, label %if.then, !dbg !18239

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !18240

if.end:                                           ; preds = %for.body
  %10 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18241
  %bridge_port2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %10, i32 0, i32 4, !dbg !18243
  %11 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port2, align 8, !dbg !18243
  %bridge_device3 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %11, i32 0, i32 1, !dbg !18244
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device3, align 8, !dbg !18244
  %13 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !18245
  %cmp4 = icmp ne %struct.mlxsw_sp_bridge_device* %12, %13, !dbg !18246
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18247

if.then5:                                         ; preds = %if.end
  br label %for.inc, !dbg !18248

if.end6:                                          ; preds = %if.end
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !18249
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %14, i32 0, i32 4, !dbg !18251
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !18251
  %bf.clear = and i8 %bf.load, 1, !dbg !18251
  %conv = zext i8 %bf.clear to i32, !dbg !18249
  %tobool7 = icmp ne i32 %conv, 0, !dbg !18249
  br i1 %tobool7, label %land.lhs.true, label %if.end14, !dbg !18252

land.lhs.true:                                    ; preds = %if.end6
  %15 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18253
  %vid8 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %15, i32 0, i32 3, !dbg !18254
  %16 = load i16, i16* %vid8, align 8, !dbg !18254
  %conv9 = zext i16 %16 to i32, !dbg !18253
  %17 = load i16, i16* %vid.addr, align 2, !dbg !18255
  %conv10 = zext i16 %17 to i32, !dbg !18255
  %cmp11 = icmp ne i32 %conv9, %conv10, !dbg !18256
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !18257

if.then13:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !18258

if.end14:                                         ; preds = %land.lhs.true, %if.end6
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18259
  store %struct.mlxsw_sp_port_vlan* %18, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !18260
  br label %return, !dbg !18260

for.inc:                                          ; preds = %if.then13, %if.then5, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !18261, metadata !DIExpression()), !dbg !18263
  %19 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18263
  %list16 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %19, i32 0, i32 0, !dbg !18263
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %list16, i32 0, i32 0, !dbg !18263
  %20 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !18263
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !18263
  store i8* %21, i8** %__mptr15, align 8, !dbg !18263
  br label %do.body18, !dbg !18263

do.body18:                                        ; preds = %for.inc
  br label %do.end19, !dbg !18264

do.end19:                                         ; preds = %do.body18
  %22 = load i8*, i8** %__mptr15, align 8, !dbg !18263
  %add.ptr21 = getelementptr i8, i8* %22, i64 0, !dbg !18263
  %23 = bitcast i8* %add.ptr21 to %struct.mlxsw_sp_port_vlan*, !dbg !18263
  store %struct.mlxsw_sp_port_vlan* %23, %struct.mlxsw_sp_port_vlan** %tmp20, align 8, !dbg !18264
  %24 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp20, align 8, !dbg !18263
  store %struct.mlxsw_sp_port_vlan* %24, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !18233
  br label %for.cond, !dbg !18233, !llvm.loop !18266

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_port_vlan* null, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !18268
  br label %return, !dbg !18268

return:                                           ; preds = %for.end, %if.end14
  %25 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !18269
  ret %struct.mlxsw_sp_port_vlan* %25, !dbg !18269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_fdb_uc_op(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %local_port, i8* %mac, i16 zeroext %fid, i1 zeroext %adding, i1 zeroext %dynamic) #0 !dbg !18270 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %local_port.addr = alloca i8, align 1
  %mac.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %adding.addr = alloca i8, align 1
  %dynamic.addr = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18273, metadata !DIExpression()), !dbg !18274
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !18275, metadata !DIExpression()), !dbg !18276
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !18277, metadata !DIExpression()), !dbg !18278
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !18279, metadata !DIExpression()), !dbg !18280
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !18281, metadata !DIExpression()), !dbg !18282
  %frombool1 = zext i1 %dynamic to i8
  store i8 %frombool1, i8* %dynamic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dynamic.addr, metadata !18283, metadata !DIExpression()), !dbg !18284
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18285
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !18286
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !18287
  %3 = load i16, i16* %fid.addr, align 2, !dbg !18288
  %4 = load i8, i8* %adding.addr, align 1, !dbg !18289
  %tobool = trunc i8 %4 to i1, !dbg !18289
  %5 = load i8, i8* %dynamic.addr, align 1, !dbg !18290
  %tobool2 = trunc i8 %5 to i1, !dbg !18290
  %call = call i32 @mlxsw_sp_sfd_rec_policy(i1 zeroext %tobool2) #8, !dbg !18291
  %call3 = call i32 @__mlxsw_sp_port_fdb_uc_op(%struct.mlxsw_sp* %0, i8 zeroext %1, i8* %2, i16 zeroext %3, i1 zeroext %tobool, i32 0, i32 %call) #8, !dbg !18292
  ret i32 %call3, !dbg !18293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_fdb_uc_lag_op(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id, i8* %mac, i16 zeroext %fid, i16 zeroext %lag_vid, i1 zeroext %adding, i1 zeroext %dynamic) #0 !dbg !18294 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !18297
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !18300
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !18301
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !18302
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !18303
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !18305
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !18307
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !18310
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !18311
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !18312
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !18313
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !18314
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !18315
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !18316
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !18317
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  %mac.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %lag_vid.addr = alloca i16, align 2
  %adding.addr = alloca i8, align 1
  %dynamic.addr = alloca i8, align 1
  %sfd_pl = alloca i8*, align 8
  %num_rec = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18318, metadata !DIExpression()), !dbg !18319
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !18320, metadata !DIExpression()), !dbg !18321
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !18322, metadata !DIExpression()), !dbg !18323
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !18324, metadata !DIExpression()), !dbg !18325
  store i16 %lag_vid, i16* %lag_vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_vid.addr, metadata !18326, metadata !DIExpression()), !dbg !18327
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !18328, metadata !DIExpression()), !dbg !18329
  %frombool1 = zext i1 %dynamic to i8
  store i8 %frombool1, i8* %dynamic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dynamic.addr, metadata !18330, metadata !DIExpression()), !dbg !18331
  call void @llvm.dbg.declare(metadata i8** %sfd_pl, metadata !18332, metadata !DIExpression()), !dbg !18333
  call void @llvm.dbg.declare(metadata i8* %num_rec, metadata !18334, metadata !DIExpression()), !dbg !18335
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18336, metadata !DIExpression()), !dbg !18337
  store i64 1040, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !18338
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #9, !dbg !18339
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !18340

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !18341
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !18342
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !18343

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !18344
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !18345
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !18346
  %call.i.i = call i32 @get_order(i64 %5) #10, !dbg !18347
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !18314
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !18348
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !18349
  %8 = load i32, i32* %order.i.i, align 4, !dbg !18350
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !18351
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !18352
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !18353
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #11, !dbg !18354
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !18354
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !18354
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !18354
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !18354
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !18355
  br label %kmalloc.exit, !dbg !18355

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !18356
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18357
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !18357
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !18358

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !18359
  br label %kmalloc_index.exit.i, !dbg !18359

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18360
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !18361
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !18362

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18363
  br label %kmalloc_index.exit.i, !dbg !18363

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18364
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !18365
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !18366

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18367
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !18368
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !18369

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !18370
  br label %kmalloc_index.exit.i, !dbg !18370

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18371
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !18372
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !18373

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18374
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !18375
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !18376

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !18377
  br label %kmalloc_index.exit.i, !dbg !18377

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18378
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !18379
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !18380

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18381
  br label %kmalloc_index.exit.i, !dbg !18381

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18382
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !18383
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !18384

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !18385
  br label %kmalloc_index.exit.i, !dbg !18385

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18386
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !18387
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !18388

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !18389
  br label %kmalloc_index.exit.i, !dbg !18389

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18390
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !18391
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !18392

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !18393
  br label %kmalloc_index.exit.i, !dbg !18393

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18394
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !18395
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !18396

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !18397
  br label %kmalloc_index.exit.i, !dbg !18397

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18398
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !18399
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !18400

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !18401
  br label %kmalloc_index.exit.i, !dbg !18401

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18402
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !18403
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !18404

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !18405
  br label %kmalloc_index.exit.i, !dbg !18405

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18406
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !18407
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !18408

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !18409
  br label %kmalloc_index.exit.i, !dbg !18409

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18410
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !18411
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !18412

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !18413
  br label %kmalloc_index.exit.i, !dbg !18413

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18414
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !18415
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !18416

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !18417
  br label %kmalloc_index.exit.i, !dbg !18417

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18418
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !18419
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !18420

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !18421
  br label %kmalloc_index.exit.i, !dbg !18421

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18422
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !18423
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !18424

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !18425
  br label %kmalloc_index.exit.i, !dbg !18425

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18426
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !18427
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !18428

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !18429
  br label %kmalloc_index.exit.i, !dbg !18429

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18430
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !18431
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !18432

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !18433
  br label %kmalloc_index.exit.i, !dbg !18433

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18434
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !18435
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !18436

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !18437
  br label %kmalloc_index.exit.i, !dbg !18437

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18438
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !18439
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !18440

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !18441
  br label %kmalloc_index.exit.i, !dbg !18441

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18442
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !18443
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !18444

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !18445
  br label %kmalloc_index.exit.i, !dbg !18445

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18446
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !18447
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !18448

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !18449
  br label %kmalloc_index.exit.i, !dbg !18449

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18450
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !18451
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !18452

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !18453
  br label %kmalloc_index.exit.i, !dbg !18453

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18454
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !18455
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !18456

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !18457
  br label %kmalloc_index.exit.i, !dbg !18457

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18458
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !18459
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !18460

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !18461
  br label %kmalloc_index.exit.i, !dbg !18461

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18462
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !18463
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !18464

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !18465
  br label %kmalloc_index.exit.i, !dbg !18465

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18466
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !18467
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !18468

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !18469
  br label %kmalloc_index.exit.i, !dbg !18469

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18470
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !18471
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !18472

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !18473
  br label %kmalloc_index.exit.i, !dbg !18473

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !18474, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !18475, !srcloc !12241
  unreachable, !dbg !18476

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !18477
  store i32 %43, i32* %index.i, align 4, !dbg !18478
  %44 = load i32, i32* %index.i, align 4, !dbg !18479
  %tobool.i = icmp ne i32 %44, 0, !dbg !18479
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !18480

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !18481
  br label %kmalloc.exit, !dbg !18481

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !18482
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18483
  %and.i.i = and i32 %46, 17, !dbg !18483
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !18483
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !18483
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !18483
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !18483
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !18484

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !18485
  br label %kmalloc_type.exit.i, !dbg !18485

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18486
  %and2.i.i = and i32 %47, 1, !dbg !18487
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !18486
  %48 = zext i1 %tobool3.i.i to i64, !dbg !18486
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !18486
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !18488
  br label %kmalloc_type.exit.i, !dbg !18488

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !18489
  %idxprom.i = zext i32 %49 to i64, !dbg !18490
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !18490
  %50 = load i32, i32* %index.i, align 4, !dbg !18491
  %idxprom6.i = zext i32 %50 to i64, !dbg !18490
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !18490
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !18490
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !18492
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !18493
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18494
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18495
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #11, !dbg !18496
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !18496
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !18496
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !18496
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !18496
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !18302
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18497
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !18498
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !18499
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18500
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #11, !dbg !18501
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !18502
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !18503
  store i8* %60, i8** %retval.i, align 8, !dbg !18504
  br label %kmalloc.exit, !dbg !18504

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !18505
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !18506
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #11, !dbg !18507
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !18507
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !18507
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !18507
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !18507
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !18508
  br label %kmalloc.exit, !dbg !18508

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !18509
  store i8* %63, i8** %sfd_pl, align 8, !dbg !18510
  %64 = load i8*, i8** %sfd_pl, align 8, !dbg !18511
  %tobool = icmp ne i8* %64, null, !dbg !18511
  br i1 %tobool, label %if.end, label %if.then, !dbg !18513

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !18514
  br label %return, !dbg !18514

if.end:                                           ; preds = %kmalloc.exit
  %65 = load i8*, i8** %sfd_pl, align 8, !dbg !18515
  %66 = load i8, i8* %adding.addr, align 1, !dbg !18516
  %tobool2 = trunc i8 %66 to i1, !dbg !18516
  %call3 = call i32 @mlxsw_sp_sfd_op(i1 zeroext %tobool2) #8, !dbg !18517
  call void @mlxsw_reg_sfd_pack(i8* %65, i32 %call3, i32 0) #8, !dbg !18518
  %67 = load i8*, i8** %sfd_pl, align 8, !dbg !18519
  %68 = load i8, i8* %dynamic.addr, align 1, !dbg !18520
  %tobool4 = trunc i8 %68 to i1, !dbg !18520
  %call5 = call i32 @mlxsw_sp_sfd_rec_policy(i1 zeroext %tobool4) #8, !dbg !18521
  %69 = load i8*, i8** %mac.addr, align 8, !dbg !18522
  %70 = load i16, i16* %fid.addr, align 2, !dbg !18523
  %71 = load i16, i16* %lag_vid.addr, align 2, !dbg !18524
  %72 = load i16, i16* %lag_id.addr, align 2, !dbg !18525
  call void @mlxsw_reg_sfd_uc_lag_pack(i8* %67, i32 0, i32 %call5, i8* %69, i16 zeroext %70, i32 0, i16 zeroext %71, i16 zeroext %72) #8, !dbg !18526
  %73 = load i8*, i8** %sfd_pl, align 8, !dbg !18527
  %call6 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %73) #8, !dbg !18528
  %conv = trunc i32 %call6 to i8, !dbg !18528
  store i8 %conv, i8* %num_rec, align 1, !dbg !18529
  %74 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18530
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %74, i32 0, i32 1, !dbg !18531
  %75 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !18531
  %76 = load i8*, i8** %sfd_pl, align 8, !dbg !18532
  %call7 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %75, %struct.mlxsw_reg_info* @mlxsw_reg_sfd, i8* %76) #8, !dbg !18533
  store i32 %call7, i32* %err, align 4, !dbg !18534
  %77 = load i32, i32* %err, align 4, !dbg !18535
  %tobool8 = icmp ne i32 %77, 0, !dbg !18535
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !18537

if.then9:                                         ; preds = %if.end
  br label %out, !dbg !18538

if.end10:                                         ; preds = %if.end
  %78 = load i8, i8* %num_rec, align 1, !dbg !18539
  %conv11 = zext i8 %78 to i32, !dbg !18539
  %79 = load i8*, i8** %sfd_pl, align 8, !dbg !18541
  %call12 = call i32 @mlxsw_reg_sfd_num_rec_get(i8* %79) #8, !dbg !18542
  %cmp = icmp ne i32 %conv11, %call12, !dbg !18543
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !18544

if.then14:                                        ; preds = %if.end10
  store i32 -16, i32* %err, align 4, !dbg !18545
  br label %if.end15, !dbg !18546

if.end15:                                         ; preds = %if.then14, %if.end10
  br label %out, !dbg !18547

out:                                              ; preds = %if.end15, %if.then9
  call void @llvm.dbg.label(metadata !18548), !dbg !18549
  %80 = load i8*, i8** %sfd_pl, align 8, !dbg !18550
  call void @kfree(i8* %80) #8, !dbg !18551
  %81 = load i32, i32* %err, align 4, !dbg !18552
  store i32 %81, i32* %retval, align 4, !dbg !18553
  br label %return, !dbg !18553

return:                                           ; preds = %out, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !18554
  ret i32 %82, !dbg !18554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_lag_pack(i8* %payload, i32 %rec_index, i32 %policy, i8* %mac, i16 zeroext %fid_vid, i32 %action, i16 zeroext %lag_vid, i16 zeroext %lag_id) #0 !dbg !18555 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %policy.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %fid_vid.addr = alloca i16, align 2
  %action.addr = alloca i32, align 4
  %lag_vid.addr = alloca i16, align 2
  %lag_id.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !18558, metadata !DIExpression()), !dbg !18559
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !18560, metadata !DIExpression()), !dbg !18561
  store i32 %policy, i32* %policy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %policy.addr, metadata !18562, metadata !DIExpression()), !dbg !18563
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !18564, metadata !DIExpression()), !dbg !18565
  store i16 %fid_vid, i16* %fid_vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid_vid.addr, metadata !18566, metadata !DIExpression()), !dbg !18567
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !18568, metadata !DIExpression()), !dbg !18569
  store i16 %lag_vid, i16* %lag_vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_vid.addr, metadata !18570, metadata !DIExpression()), !dbg !18571
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !18572, metadata !DIExpression()), !dbg !18573
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !18574
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !18575
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !18576
  %3 = load i32, i32* %action.addr, align 4, !dbg !18577
  call void @mlxsw_reg_sfd_rec_pack(i8* %0, i32 %1, i32 1, i8* %2, i32 %3) #8, !dbg !18578
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !18579
  %5 = load i32, i32* %rec_index.addr, align 4, !dbg !18580
  %conv = trunc i32 %5 to i16, !dbg !18580
  %6 = load i32, i32* %policy.addr, align 4, !dbg !18581
  call void @mlxsw_reg_sfd_rec_policy_set(i8* %4, i16 zeroext %conv, i32 %6) #8, !dbg !18582
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !18583
  %8 = load i32, i32* %rec_index.addr, align 4, !dbg !18584
  %conv1 = trunc i32 %8 to i16, !dbg !18584
  call void @mlxsw_reg_sfd_uc_lag_sub_port_set(i8* %7, i16 zeroext %conv1, i32 0) #8, !dbg !18585
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !18586
  %10 = load i32, i32* %rec_index.addr, align 4, !dbg !18587
  %conv2 = trunc i32 %10 to i16, !dbg !18587
  %11 = load i16, i16* %fid_vid.addr, align 2, !dbg !18588
  %conv3 = zext i16 %11 to i32, !dbg !18588
  call void @mlxsw_reg_sfd_uc_lag_fid_vid_set(i8* %9, i16 zeroext %conv2, i32 %conv3) #8, !dbg !18589
  %12 = load i8*, i8** %payload.addr, align 8, !dbg !18590
  %13 = load i32, i32* %rec_index.addr, align 4, !dbg !18591
  %conv4 = trunc i32 %13 to i16, !dbg !18591
  %14 = load i16, i16* %lag_vid.addr, align 2, !dbg !18592
  %conv5 = zext i16 %14 to i32, !dbg !18592
  call void @mlxsw_reg_sfd_uc_lag_lag_vid_set(i8* %12, i16 zeroext %conv4, i32 %conv5) #8, !dbg !18593
  %15 = load i8*, i8** %payload.addr, align 8, !dbg !18594
  %16 = load i32, i32* %rec_index.addr, align 4, !dbg !18595
  %conv6 = trunc i32 %16 to i16, !dbg !18595
  %17 = load i16, i16* %lag_id.addr, align 2, !dbg !18596
  %conv7 = zext i16 %17 to i32, !dbg !18596
  call void @mlxsw_reg_sfd_uc_lag_lag_id_set(i8* %15, i16 zeroext %conv6, i32 %conv7) #8, !dbg !18597
  ret void, !dbg !18598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_lag_sub_port_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18599 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18600, metadata !DIExpression()), !dbg !18601
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18602, metadata !DIExpression()), !dbg !18601
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18603, metadata !DIExpression()), !dbg !18601
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18601
  %1 = load i16, i16* %index.addr, align 2, !dbg !18601
  %2 = load i32, i32* %val.addr, align 4, !dbg !18601
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_lag_sub_port_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18601
  ret void, !dbg !18601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_lag_fid_vid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18604 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18605, metadata !DIExpression()), !dbg !18606
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18607, metadata !DIExpression()), !dbg !18606
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18608, metadata !DIExpression()), !dbg !18606
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18606
  %1 = load i16, i16* %index.addr, align 2, !dbg !18606
  %2 = load i32, i32* %val.addr, align 4, !dbg !18606
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_lag_fid_vid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18606
  ret void, !dbg !18606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_lag_lag_vid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18609 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18610, metadata !DIExpression()), !dbg !18611
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18612, metadata !DIExpression()), !dbg !18611
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18613, metadata !DIExpression()), !dbg !18611
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18611
  %1 = load i16, i16* %index.addr, align 2, !dbg !18611
  %2 = load i32, i32* %val.addr, align 4, !dbg !18611
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_lag_lag_vid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18611
  ret void, !dbg !18611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfd_uc_lag_lag_id_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !18614 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18615, metadata !DIExpression()), !dbg !18616
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !18617, metadata !DIExpression()), !dbg !18616
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18618, metadata !DIExpression()), !dbg !18616
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !18616
  %1 = load i16, i16* %index.addr, align 2, !dbg !18616
  %2 = load i32, i32* %val.addr, align 4, !dbg !18616
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfd_uc_lag_lag_id_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #8, !dbg !18616
  ret void, !dbg !18616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_vxlan_fdb_add(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_switchdev_event_work* %switchdev_work) #0 !dbg !18619 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %switchdev_work.addr = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %vxlan_fdb_info = alloca %struct.switchdev_notifier_vxlan_fdb_info*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %all_zeros_mac = alloca [6 x i8], align 1
  %proto = alloca i32, align 4
  %addr = alloca %union.mlxsw_sp_l3addr, align 4
  %br_dev = alloca %struct.net_device*, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18622, metadata !DIExpression()), !dbg !18623
  store %struct.mlxsw_sp_switchdev_event_work* %switchdev_work, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, metadata !18624, metadata !DIExpression()), !dbg !18625
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, metadata !18626, metadata !DIExpression()), !dbg !18627
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !18628, metadata !DIExpression()), !dbg !18629
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !18630, metadata !DIExpression()), !dbg !18631
  %0 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !18632
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %0, i32 0, i32 2, !dbg !18633
  %1 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !18633
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !18631
  call void @llvm.dbg.declare(metadata [6 x i8]* %all_zeros_mac, metadata !18634, metadata !DIExpression()), !dbg !18635
  %2 = bitcast [6 x i8]* %all_zeros_mac to i8*, !dbg !18635
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 6, i1 false), !dbg !18635
  call void @llvm.dbg.declare(metadata i32* %proto, metadata !18636, metadata !DIExpression()), !dbg !18637
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr* %addr, metadata !18638, metadata !DIExpression()), !dbg !18639
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !18640, metadata !DIExpression()), !dbg !18641
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !18642, metadata !DIExpression()), !dbg !18643
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !18644, metadata !DIExpression()), !dbg !18645
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18646, metadata !DIExpression()), !dbg !18647
  %3 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !18648
  %4 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %3, i32 0, i32 1, !dbg !18649
  %vxlan_fdb_info2 = bitcast %union.anon.185* %4 to %struct.switchdev_notifier_vxlan_fdb_info*, !dbg !18649
  store %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info2, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18650
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18651
  %call = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %5) #8, !dbg !18652
  store %struct.net_device* %call, %struct.net_device** %br_dev, align 8, !dbg !18653
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18654
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 8, !dbg !18655
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !18655
  %8 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !18656
  %call3 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %7, %struct.net_device* %8) #8, !dbg !18657
  store %struct.mlxsw_sp_bridge_device* %call3, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18658
  %9 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18659
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %9, null, !dbg !18659
  br i1 %tobool, label %if.end, label %if.then, !dbg !18661

if.then:                                          ; preds = %entry
  br label %return, !dbg !18662

if.end:                                           ; preds = %entry
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18663
  %11 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18664
  %vni = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %11, i32 0, i32 6, !dbg !18665
  %12 = load i32, i32* %vni, align 8, !dbg !18665
  %call4 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_vni(%struct.mlxsw_sp* %10, i32 %12) #8, !dbg !18666
  store %struct.mlxsw_sp_fid* %call4, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18667
  %13 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18668
  %tobool5 = icmp ne %struct.mlxsw_sp_fid* %13, null, !dbg !18668
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !18670

if.then6:                                         ; preds = %if.end
  br label %return, !dbg !18671

if.end7:                                          ; preds = %if.end
  %14 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18672
  %remote_ip = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %14, i32 0, i32 1, !dbg !18673
  call void @mlxsw_sp_switchdev_vxlan_addr_convert(%union.vxlan_addr* %remote_ip, i32* %proto, %union.mlxsw_sp_l3addr* %addr) #8, !dbg !18674
  %15 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18675
  %eth_addr = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %15, i32 0, i32 5, !dbg !18677
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr, i64 0, i64 0, !dbg !18675
  %arraydecay8 = getelementptr inbounds [6 x i8], [6 x i8]* %all_zeros_mac, i64 0, i64 0, !dbg !18678
  %call9 = call zeroext i1 @ether_addr_equal(i8* %arraydecay, i8* %arraydecay8) #8, !dbg !18679
  br i1 %call9, label %if.then10, label %if.end16, !dbg !18680

if.then10:                                        ; preds = %if.end7
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18681
  %17 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18683
  %18 = load i32, i32* %proto, align 4, !dbg !18684
  %call11 = call i32 @mlxsw_sp_nve_flood_ip_add(%struct.mlxsw_sp* %16, %struct.mlxsw_sp_fid* %17, i32 %18, %union.mlxsw_sp_l3addr* %addr) #8, !dbg !18685
  store i32 %call11, i32* %err, align 4, !dbg !18686
  %19 = load i32, i32* %err, align 4, !dbg !18687
  %tobool12 = icmp ne i32 %19, 0, !dbg !18687
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !18689

if.then13:                                        ; preds = %if.then10
  %20 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18690
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %20) #8, !dbg !18692
  br label %return, !dbg !18693

if.end14:                                         ; preds = %if.then10
  %21 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18694
  %offloaded = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %21, i32 0, i32 7, !dbg !18695
  store i8 1, i8* %offloaded, align 4, !dbg !18696
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18697
  %23 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18698
  %info = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %23, i32 0, i32 0, !dbg !18699
  %call15 = call i32 @call_switchdev_notifiers(i64 14, %struct.net_device* %22, %struct.switchdev_notifier_info* %info, %struct.netlink_ext_ack* null) #8, !dbg !18700
  %24 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18701
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %24) #8, !dbg !18702
  br label %return, !dbg !18703

if.end16:                                         ; preds = %if.end7
  %25 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18704
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %25, i32 0, i32 5, !dbg !18705
  %26 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !18705
  %fid_vid = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %26, i32 0, i32 5, !dbg !18706
  %27 = load i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)*, i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)** %fid_vid, align 8, !dbg !18706
  %28 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18707
  %29 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18708
  %call17 = call zeroext i16 %27(%struct.mlxsw_sp_bridge_device* %28, %struct.mlxsw_sp_fid* %29) #8, !dbg !18704
  store i16 %call17, i16* %vid, align 2, !dbg !18709
  %30 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !18710
  %31 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18712
  %eth_addr18 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %31, i32 0, i32 5, !dbg !18713
  %arraydecay19 = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr18, i64 0, i64 0, !dbg !18712
  %32 = load i16, i16* %vid, align 2, !dbg !18714
  %call20 = call %struct.net_device* @br_fdb_find_port(%struct.net_device* %30, i8* %arraydecay19, i16 zeroext %32) #8, !dbg !18715
  %33 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18716
  %cmp = icmp ne %struct.net_device* %call20, %33, !dbg !18717
  br i1 %cmp, label %if.then21, label %if.end22, !dbg !18718

if.then21:                                        ; preds = %if.end16
  br label %err_br_fdb_find, !dbg !18719

if.end22:                                         ; preds = %if.end16
  %34 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18720
  %35 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18721
  %eth_addr23 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %35, i32 0, i32 5, !dbg !18722
  %arraydecay24 = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr23, i64 0, i64 0, !dbg !18721
  %36 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18723
  %call25 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %36) #8, !dbg !18724
  %37 = load i32, i32* %proto, align 4, !dbg !18725
  %call26 = call i32 @mlxsw_sp_port_fdb_tunnel_uc_op(%struct.mlxsw_sp* %34, i8* %arraydecay24, i16 zeroext %call25, i32 %37, %union.mlxsw_sp_l3addr* %addr, i1 zeroext true, i1 zeroext false) #8, !dbg !18726
  store i32 %call26, i32* %err, align 4, !dbg !18727
  %38 = load i32, i32* %err, align 4, !dbg !18728
  %tobool27 = icmp ne i32 %38, 0, !dbg !18728
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !18730

if.then28:                                        ; preds = %if.end22
  br label %err_fdb_tunnel_uc_op, !dbg !18731

if.end29:                                         ; preds = %if.end22
  %39 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18732
  %offloaded30 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %39, i32 0, i32 7, !dbg !18733
  store i8 1, i8* %offloaded30, align 4, !dbg !18734
  %40 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18735
  %41 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18736
  %info31 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %41, i32 0, i32 0, !dbg !18737
  %call32 = call i32 @call_switchdev_notifiers(i64 14, %struct.net_device* %40, %struct.switchdev_notifier_info* %info31, %struct.netlink_ext_ack* null) #8, !dbg !18738
  %42 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18739
  %eth_addr33 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %42, i32 0, i32 5, !dbg !18740
  %arraydecay34 = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr33, i64 0, i64 0, !dbg !18739
  %43 = load i16, i16* %vid, align 2, !dbg !18741
  %44 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18742
  call void @mlxsw_sp_fdb_call_notifiers(i32 5, i8* %arraydecay34, i16 zeroext %43, %struct.net_device* %44, i1 zeroext true) #8, !dbg !18743
  %45 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18744
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %45) #8, !dbg !18745
  br label %return, !dbg !18746

err_fdb_tunnel_uc_op:                             ; preds = %if.then28
  call void @llvm.dbg.label(metadata !18747), !dbg !18748
  br label %err_br_fdb_find, !dbg !18746

err_br_fdb_find:                                  ; preds = %err_fdb_tunnel_uc_op, %if.then21
  call void @llvm.dbg.label(metadata !18749), !dbg !18750
  %46 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18751
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %46) #8, !dbg !18752
  br label %return, !dbg !18753

return:                                           ; preds = %err_br_fdb_find, %if.end29, %if.end14, %if.then13, %if.then6, %if.then
  ret void, !dbg !18753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_vxlan_fdb_del(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_switchdev_event_work* %switchdev_work) #0 !dbg !18754 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %switchdev_work.addr = alloca %struct.mlxsw_sp_switchdev_event_work*, align 8
  %vxlan_fdb_info = alloca %struct.switchdev_notifier_vxlan_fdb_info*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %all_zeros_mac = alloca [6 x i8], align 1
  %proto = alloca i32, align 4
  %addr = alloca %union.mlxsw_sp_l3addr, align 4
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %vid = alloca i16, align 2
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18755, metadata !DIExpression()), !dbg !18756
  store %struct.mlxsw_sp_switchdev_event_work* %switchdev_work, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, metadata !18757, metadata !DIExpression()), !dbg !18758
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, metadata !18759, metadata !DIExpression()), !dbg !18760
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !18761, metadata !DIExpression()), !dbg !18762
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !18763, metadata !DIExpression()), !dbg !18764
  %0 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !18765
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %0, i32 0, i32 2, !dbg !18766
  %1 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !18766
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !18764
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !18767, metadata !DIExpression()), !dbg !18768
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18769
  %call = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %2) #8, !dbg !18770
  store %struct.net_device* %call, %struct.net_device** %br_dev, align 8, !dbg !18768
  call void @llvm.dbg.declare(metadata [6 x i8]* %all_zeros_mac, metadata !18771, metadata !DIExpression()), !dbg !18772
  %3 = bitcast [6 x i8]* %all_zeros_mac to i8*, !dbg !18772
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 6, i1 false), !dbg !18772
  call void @llvm.dbg.declare(metadata i32* %proto, metadata !18773, metadata !DIExpression()), !dbg !18774
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr* %addr, metadata !18775, metadata !DIExpression()), !dbg !18776
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !18777, metadata !DIExpression()), !dbg !18778
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !18779, metadata !DIExpression()), !dbg !18780
  %4 = load %struct.mlxsw_sp_switchdev_event_work*, %struct.mlxsw_sp_switchdev_event_work** %switchdev_work.addr, align 8, !dbg !18781
  %5 = getelementptr inbounds %struct.mlxsw_sp_switchdev_event_work, %struct.mlxsw_sp_switchdev_event_work* %4, i32 0, i32 1, !dbg !18782
  %vxlan_fdb_info2 = bitcast %union.anon.185* %5 to %struct.switchdev_notifier_vxlan_fdb_info*, !dbg !18782
  store %struct.switchdev_notifier_vxlan_fdb_info* %vxlan_fdb_info2, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18783
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18784
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 8, !dbg !18785
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !18785
  %8 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !18786
  %call3 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %7, %struct.net_device* %8) #8, !dbg !18787
  store %struct.mlxsw_sp_bridge_device* %call3, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18788
  %9 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18789
  %tobool = icmp ne %struct.mlxsw_sp_bridge_device* %9, null, !dbg !18789
  br i1 %tobool, label %if.end, label %if.then, !dbg !18791

if.then:                                          ; preds = %entry
  br label %return, !dbg !18792

if.end:                                           ; preds = %entry
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18793
  %11 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18794
  %vni = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %11, i32 0, i32 6, !dbg !18795
  %12 = load i32, i32* %vni, align 8, !dbg !18795
  %call4 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_vni(%struct.mlxsw_sp* %10, i32 %12) #8, !dbg !18796
  store %struct.mlxsw_sp_fid* %call4, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18797
  %13 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18798
  %tobool5 = icmp ne %struct.mlxsw_sp_fid* %13, null, !dbg !18798
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !18800

if.then6:                                         ; preds = %if.end
  br label %return, !dbg !18801

if.end7:                                          ; preds = %if.end
  %14 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18802
  %remote_ip = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %14, i32 0, i32 1, !dbg !18803
  call void @mlxsw_sp_switchdev_vxlan_addr_convert(%union.vxlan_addr* %remote_ip, i32* %proto, %union.mlxsw_sp_l3addr* %addr) #8, !dbg !18804
  %15 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18805
  %eth_addr = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %15, i32 0, i32 5, !dbg !18807
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr, i64 0, i64 0, !dbg !18805
  %arraydecay8 = getelementptr inbounds [6 x i8], [6 x i8]* %all_zeros_mac, i64 0, i64 0, !dbg !18808
  %call9 = call zeroext i1 @ether_addr_equal(i8* %arraydecay, i8* %arraydecay8) #8, !dbg !18809
  br i1 %call9, label %if.then10, label %if.end11, !dbg !18810

if.then10:                                        ; preds = %if.end7
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18811
  %17 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18813
  %18 = load i32, i32* %proto, align 4, !dbg !18814
  call void @mlxsw_sp_nve_flood_ip_del(%struct.mlxsw_sp* %16, %struct.mlxsw_sp_fid* %17, i32 %18, %union.mlxsw_sp_l3addr* %addr) #8, !dbg !18815
  %19 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18816
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %19) #8, !dbg !18817
  br label %return, !dbg !18818

if.end11:                                         ; preds = %if.end7
  %20 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18819
  %21 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18820
  %eth_addr12 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %21, i32 0, i32 5, !dbg !18821
  %arraydecay13 = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr12, i64 0, i64 0, !dbg !18820
  %22 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18822
  %call14 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %22) #8, !dbg !18823
  %23 = load i32, i32* %proto, align 4, !dbg !18824
  %call15 = call i32 @mlxsw_sp_port_fdb_tunnel_uc_op(%struct.mlxsw_sp* %20, i8* %arraydecay13, i16 zeroext %call14, i32 %23, %union.mlxsw_sp_l3addr* %addr, i1 zeroext false, i1 zeroext false) #8, !dbg !18825
  %24 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18826
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %24, i32 0, i32 5, !dbg !18827
  %25 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !18827
  %fid_vid = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %25, i32 0, i32 5, !dbg !18828
  %26 = load i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)*, i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)** %fid_vid, align 8, !dbg !18828
  %27 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !18829
  %28 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18830
  %call16 = call zeroext i16 %26(%struct.mlxsw_sp_bridge_device* %27, %struct.mlxsw_sp_fid* %28) #8, !dbg !18826
  store i16 %call16, i16* %vid, align 2, !dbg !18831
  %29 = load %struct.switchdev_notifier_vxlan_fdb_info*, %struct.switchdev_notifier_vxlan_fdb_info** %vxlan_fdb_info, align 8, !dbg !18832
  %eth_addr17 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %29, i32 0, i32 5, !dbg !18833
  %arraydecay18 = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr17, i64 0, i64 0, !dbg !18832
  %30 = load i16, i16* %vid, align 2, !dbg !18834
  %31 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18835
  call void @mlxsw_sp_fdb_call_notifiers(i32 5, i8* %arraydecay18, i16 zeroext %30, %struct.net_device* %31, i1 zeroext false) #8, !dbg !18836
  %32 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18837
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %32) #8, !dbg !18838
  br label %return, !dbg !18839

return:                                           ; preds = %if.end11, %if.then10, %if.then6, %if.then
  ret void, !dbg !18839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ether_addr_equal(i8* %addr1, i8* %addr2) #0 !dbg !18840 {
entry:
  %addr1.addr = alloca i8*, align 8
  %addr2.addr = alloca i8*, align 8
  %fold = alloca i32, align 4
  store i8* %addr1, i8** %addr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr1.addr, metadata !18843, metadata !DIExpression()), !dbg !18844
  store i8* %addr2, i8** %addr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr2.addr, metadata !18845, metadata !DIExpression()), !dbg !18846
  call void @llvm.dbg.declare(metadata i32* %fold, metadata !18847, metadata !DIExpression()), !dbg !18848
  %0 = load i8*, i8** %addr1.addr, align 8, !dbg !18849
  %1 = bitcast i8* %0 to i32*, !dbg !18850
  %2 = load i32, i32* %1, align 4, !dbg !18850
  %3 = load i8*, i8** %addr2.addr, align 8, !dbg !18851
  %4 = bitcast i8* %3 to i32*, !dbg !18852
  %5 = load i32, i32* %4, align 4, !dbg !18852
  %xor = xor i32 %2, %5, !dbg !18853
  %6 = load i8*, i8** %addr1.addr, align 8, !dbg !18854
  %add.ptr = getelementptr i8, i8* %6, i64 4, !dbg !18855
  %7 = bitcast i8* %add.ptr to i16*, !dbg !18856
  %8 = load i16, i16* %7, align 2, !dbg !18856
  %conv = zext i16 %8 to i32, !dbg !18857
  %9 = load i8*, i8** %addr2.addr, align 8, !dbg !18858
  %add.ptr1 = getelementptr i8, i8* %9, i64 4, !dbg !18859
  %10 = bitcast i8* %add.ptr1 to i16*, !dbg !18860
  %11 = load i16, i16* %10, align 2, !dbg !18860
  %conv2 = zext i16 %11 to i32, !dbg !18861
  %xor3 = xor i32 %conv, %conv2, !dbg !18862
  %or = or i32 %xor, %xor3, !dbg !18863
  store i32 %or, i32* %fold, align 4, !dbg !18848
  %12 = load i32, i32* %fold, align 4, !dbg !18864
  %cmp = icmp eq i32 %12, 0, !dbg !18865
  ret i1 %cmp, !dbg !18866
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_nve_flood_ip_add(%struct.mlxsw_sp*, %struct.mlxsw_sp_fid*, i32, %union.mlxsw_sp_l3addr*) #2

; Function Attrs: noredzone
declare dso_local %struct.net_device* @br_fdb_find_port(%struct.net_device*, i8*, i16 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_nve_flood_ip_del(%struct.mlxsw_sp*, %struct.mlxsw_sp_fid*, i32, %union.mlxsw_sp_l3addr*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netlink_ext_ack* @switchdev_notifier_info_to_extack(%struct.switchdev_notifier_info* %info) #0 !dbg !18867 {
entry:
  %info.addr = alloca %struct.switchdev_notifier_info*, align 8
  store %struct.switchdev_notifier_info* %info, %struct.switchdev_notifier_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_info** %info.addr, metadata !18870, metadata !DIExpression()), !dbg !18871
  %0 = load %struct.switchdev_notifier_info*, %struct.switchdev_notifier_info** %info.addr, align 8, !dbg !18872
  %extack = getelementptr inbounds %struct.switchdev_notifier_info, %struct.switchdev_notifier_info* %0, i32 0, i32 1, !dbg !18873
  %1 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !18873
  ret %struct.netlink_ext_ack* %1, !dbg !18874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #0 !dbg !18875 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !18878, metadata !DIExpression()), !dbg !18879
  call void @llvm.dbg.declare(metadata i32* %a, metadata !18880, metadata !DIExpression()), !dbg !18881
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !18882
  %1 = bitcast i8* %0 to i32*, !dbg !18883
  %2 = load i32, i32* %1, align 4, !dbg !18883
  store i32 %2, i32* %a, align 4, !dbg !18881
  %3 = load i32, i32* %a, align 4, !dbg !18884
  %and = and i32 1, %3, !dbg !18885
  %tobool = icmp ne i32 %and, 0, !dbg !18886
  ret i1 %tobool, !dbg !18887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vxlan_addr_multicast(%union.vxlan_addr* %ipa) #0 !dbg !18888 {
entry:
  %retval = alloca i1, align 1
  %ipa.addr = alloca %union.vxlan_addr*, align 8
  store %union.vxlan_addr* %ipa, %union.vxlan_addr** %ipa.addr, align 8
  call void @llvm.dbg.declare(metadata %union.vxlan_addr** %ipa.addr, metadata !18891, metadata !DIExpression()), !dbg !18892
  %0 = load %union.vxlan_addr*, %union.vxlan_addr** %ipa.addr, align 8, !dbg !18893
  %sa = bitcast %union.vxlan_addr* %0 to %struct.sockaddr*, !dbg !18895
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 0, !dbg !18896
  %1 = load i16, i16* %sa_family, align 4, !dbg !18896
  %conv = zext i16 %1 to i32, !dbg !18893
  %cmp = icmp eq i32 %conv, 10, !dbg !18897
  br i1 %cmp, label %if.then, label %if.else, !dbg !18898

if.then:                                          ; preds = %entry
  %2 = load %union.vxlan_addr*, %union.vxlan_addr** %ipa.addr, align 8, !dbg !18899
  %sin6 = bitcast %union.vxlan_addr* %2 to %struct.sockaddr_in6*, !dbg !18900
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sin6, i32 0, i32 3, !dbg !18901
  %call = call zeroext i1 @ipv6_addr_is_multicast(%struct.in6_addr* %sin6_addr) #8, !dbg !18902
  store i1 %call, i1* %retval, align 1, !dbg !18903
  br label %return, !dbg !18903

if.else:                                          ; preds = %entry
  %3 = load %union.vxlan_addr*, %union.vxlan_addr** %ipa.addr, align 8, !dbg !18904
  %sin = bitcast %union.vxlan_addr* %3 to %struct.sockaddr_in*, !dbg !18905
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin, i32 0, i32 2, !dbg !18906
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !18907
  %4 = load i32, i32* %s_addr, align 4, !dbg !18907
  %call2 = call zeroext i1 @ipv4_is_multicast(i32 %4) #8, !dbg !18908
  store i1 %call2, i1* %retval, align 1, !dbg !18909
  br label %return, !dbg !18909

return:                                           ; preds = %if.else, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !18910
  ret i1 %5, !dbg !18910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ipv6_addr_is_multicast(%struct.in6_addr* %addr) #0 !dbg !18911 {
entry:
  %addr.addr = alloca %struct.in6_addr*, align 8
  store %struct.in6_addr* %addr, %struct.in6_addr** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %addr.addr, metadata !18917, metadata !DIExpression()), !dbg !18918
  %0 = load %struct.in6_addr*, %struct.in6_addr** %addr.addr, align 8, !dbg !18919
  %in6_u = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %0, i32 0, i32 0, !dbg !18920
  %u6_addr32 = bitcast %union.anon.41* %in6_u to [4 x i32]*, !dbg !18920
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %u6_addr32, i64 0, i64 0, !dbg !18919
  %1 = load i32, i32* %arrayidx, align 4, !dbg !18919
  %and = and i32 %1, 255, !dbg !18921
  %cmp = icmp eq i32 %and, 255, !dbg !18922
  ret i1 %cmp, !dbg !18923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ipv4_is_multicast(i32 %addr) #0 !dbg !18924 {
entry:
  %addr.addr = alloca i32, align 4
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !18928, metadata !DIExpression()), !dbg !18929
  %0 = load i32, i32* %addr.addr, align 4, !dbg !18930
  %and = and i32 %0, 240, !dbg !18931
  %cmp = icmp eq i32 %and, 224, !dbg !18932
  ret i1 %cmp, !dbg !18933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_8021q_port_join(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.netlink_ext_ack* %extack) #0 !dbg !11425 {
entry:
  %retval = alloca i32, align 4
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !18934, metadata !DIExpression()), !dbg !18935
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !18936, metadata !DIExpression()), !dbg !18937
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !18938, metadata !DIExpression()), !dbg !18939
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !18940, metadata !DIExpression()), !dbg !18941
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !18942
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 0, !dbg !18944
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18944
  %call = call zeroext i1 @is_vlan_dev(%struct.net_device* %1) #8, !dbg !18945
  br i1 %call, label %if.then, label %if.end2, !dbg !18946

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !18947

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !18949, metadata !DIExpression()), !dbg !18951
  %2 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !18951
  store %struct.netlink_ext_ack* %2, %struct.netlink_ext_ack** %__extack, align 8, !dbg !18951
  %3 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !18952
  %tobool = icmp ne %struct.netlink_ext_ack* %3, null, !dbg !18952
  br i1 %tobool, label %if.then1, label %if.end, !dbg !18951

if.then1:                                         ; preds = %do.body
  %4 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !18952
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %4, i32 0, i32 0, !dbg !18952
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @mlxsw_sp_bridge_8021q_port_join.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !18952
  br label %if.end, !dbg !18952

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !18951

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !18954
  br label %return, !dbg !18954

if.end2:                                          ; preds = %entry
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !18955
  %default_vlan = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %5, i32 0, i32 13, !dbg !18957
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %default_vlan, align 8, !dbg !18957
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 2, !dbg !18958
  %7 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !18958
  %tobool3 = icmp ne %struct.mlxsw_sp_fid* %7, null, !dbg !18955
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !18959

if.then4:                                         ; preds = %if.end2
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !18960
  %default_vlan5 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %8, i32 0, i32 13, !dbg !18961
  %9 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %default_vlan5, align 8, !dbg !18961
  call void @mlxsw_sp_port_vlan_router_leave(%struct.mlxsw_sp_port_vlan* %9) #8, !dbg !18962
  br label %if.end6, !dbg !18962

if.end6:                                          ; preds = %if.then4, %if.end2
  store i32 0, i32* %retval, align 4, !dbg !18963
  br label %return, !dbg !18963

return:                                           ; preds = %if.end6, %do.end
  %10 = load i32, i32* %retval, align 4, !dbg !18964
  ret i32 %10, !dbg !18964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_8021q_port_leave(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !18965 {
entry:
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !18966, metadata !DIExpression()), !dbg !18967
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !18968, metadata !DIExpression()), !dbg !18969
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !18970, metadata !DIExpression()), !dbg !18971
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !18972
  %call = call i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %0, i16 zeroext 4095) #8, !dbg !18973
  ret void, !dbg !18974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_8021q_vxlan_join(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.net_device* %vxlan_dev, i16 zeroext %vid, %struct.netlink_ext_ack* %extack) #0 !dbg !11428 {
entry:
  %retval = alloca i32, align 4
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %vxlan = alloca %struct.vxlan_dev*, align 8
  %params = alloca %struct.mlxsw_sp_nve_params, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack20 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !18975, metadata !DIExpression()), !dbg !18976
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !18977, metadata !DIExpression()), !dbg !18978
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !18979, metadata !DIExpression()), !dbg !18980
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !18981, metadata !DIExpression()), !dbg !18982
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !18983, metadata !DIExpression()), !dbg !18984
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !18985
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 0, !dbg !18986
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18986
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %1) #8, !dbg !18987
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18984
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !18988, metadata !DIExpression()), !dbg !18989
  %2 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !18990
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #8, !dbg !18991
  %3 = bitcast i8* %call1 to %struct.vxlan_dev*, !dbg !18991
  store %struct.vxlan_dev* %3, %struct.vxlan_dev** %vxlan, align 8, !dbg !18989
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_nve_params* %params, metadata !18992, metadata !DIExpression()), !dbg !18998
  %type = getelementptr inbounds %struct.mlxsw_sp_nve_params, %struct.mlxsw_sp_nve_params* %params, i32 0, i32 0, !dbg !18999
  store i32 0, i32* %type, align 8, !dbg !18999
  %vni = getelementptr inbounds %struct.mlxsw_sp_nve_params, %struct.mlxsw_sp_nve_params* %params, i32 0, i32 1, !dbg !18999
  %4 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !19000
  %cfg = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %4, i32 0, i32 12, !dbg !19001
  %vni2 = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %cfg, i32 0, i32 2, !dbg !19002
  %5 = load i32, i32* %vni2, align 8, !dbg !19002
  store i32 %5, i32* %vni, align 4, !dbg !18999
  %dev3 = getelementptr inbounds %struct.mlxsw_sp_nve_params, %struct.mlxsw_sp_nve_params* %params, i32 0, i32 2, !dbg !18999
  %6 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !19003
  store %struct.net_device* %6, %struct.net_device** %dev3, align 8, !dbg !18999
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !19004, metadata !DIExpression()), !dbg !19005
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19006, metadata !DIExpression()), !dbg !19007
  %7 = load i16, i16* %vid.addr, align 2, !dbg !19008
  %tobool = icmp ne i16 %7, 0, !dbg !19008
  br i1 %tobool, label %if.end8, label %if.then, !dbg !19010

if.then:                                          ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !19011
  %call4 = call i32 @mlxsw_sp_vxlan_mapped_vid(%struct.net_device* %8, i16* %vid.addr) #8, !dbg !19013
  store i32 %call4, i32* %err, align 4, !dbg !19014
  %9 = load i32, i32* %err, align 4, !dbg !19015
  %tobool5 = icmp ne i32 %9, 0, !dbg !19015
  br i1 %tobool5, label %if.then7, label %lor.lhs.false, !dbg !19017

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i16, i16* %vid.addr, align 2, !dbg !19018
  %tobool6 = icmp ne i16 %10, 0, !dbg !19018
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !19019

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %11 = load i32, i32* %err, align 4, !dbg !19020
  store i32 %11, i32* %retval, align 4, !dbg !19021
  br label %return, !dbg !19021

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end8, !dbg !19022

if.end8:                                          ; preds = %if.end, %entry
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19023
  %13 = load i16, i16* %vid.addr, align 2, !dbg !19024
  %call9 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021q_get(%struct.mlxsw_sp* %12, i16 zeroext %13) #8, !dbg !19025
  store %struct.mlxsw_sp_fid* %call9, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19026
  %14 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19027
  %15 = bitcast %struct.mlxsw_sp_fid* %14 to i8*, !dbg !19027
  %call10 = call zeroext i1 @IS_ERR(i8* %15) #8, !dbg !19029
  br i1 %call10, label %if.then11, label %if.end16, !dbg !19030

if.then11:                                        ; preds = %if.end8
  br label %do.body, !dbg !19031

do.body:                                          ; preds = %if.then11
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !19033, metadata !DIExpression()), !dbg !19035
  %16 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19035
  store %struct.netlink_ext_ack* %16, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19035
  %17 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19036
  %tobool12 = icmp ne %struct.netlink_ext_ack* %17, null, !dbg !19036
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !19035

if.then13:                                        ; preds = %do.body
  %18 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19036
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %18, i32 0, i32 0, !dbg !19036
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @mlxsw_sp_bridge_8021q_vxlan_join.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !19036
  br label %if.end14, !dbg !19036

if.end14:                                         ; preds = %if.then13, %do.body
  br label %do.end, !dbg !19035

do.end:                                           ; preds = %if.end14
  %19 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19038
  %20 = bitcast %struct.mlxsw_sp_fid* %19 to i8*, !dbg !19038
  %call15 = call i64 @PTR_ERR(i8* %20) #8, !dbg !19039
  %conv = trunc i64 %call15 to i32, !dbg !19039
  store i32 %conv, i32* %retval, align 4, !dbg !19040
  br label %return, !dbg !19040

if.end16:                                         ; preds = %if.end8
  %21 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19041
  %call17 = call zeroext i1 @mlxsw_sp_fid_vni_is_set(%struct.mlxsw_sp_fid* %21) #8, !dbg !19043
  br i1 %call17, label %if.then18, label %if.end26, !dbg !19044

if.then18:                                        ; preds = %if.end16
  br label %do.body19, !dbg !19045

do.body19:                                        ; preds = %if.then18
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack20, metadata !19047, metadata !DIExpression()), !dbg !19049
  %22 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19049
  store %struct.netlink_ext_ack* %22, %struct.netlink_ext_ack** %__extack20, align 8, !dbg !19049
  %23 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack20, align 8, !dbg !19050
  %tobool21 = icmp ne %struct.netlink_ext_ack* %23, null, !dbg !19050
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !19049

if.then22:                                        ; preds = %do.body19
  %24 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack20, align 8, !dbg !19050
  %_msg23 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %24, i32 0, i32 0, !dbg !19050
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @mlxsw_sp_bridge_8021q_vxlan_join.__msg.79, i64 0, i64 0), i8** %_msg23, align 8, !dbg !19050
  br label %if.end24, !dbg !19050

if.end24:                                         ; preds = %if.then22, %do.body19
  br label %do.end25, !dbg !19049

do.end25:                                         ; preds = %if.end24
  store i32 -22, i32* %err, align 4, !dbg !19052
  br label %err_vni_exists, !dbg !19053

if.end26:                                         ; preds = %if.end16
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19054
  %26 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19055
  %27 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19056
  %call27 = call i32 @mlxsw_sp_nve_fid_enable(%struct.mlxsw_sp* %25, %struct.mlxsw_sp_fid* %26, %struct.mlxsw_sp_nve_params* %params, %struct.netlink_ext_ack* %27) #8, !dbg !19057
  store i32 %call27, i32* %err, align 4, !dbg !19058
  %28 = load i32, i32* %err, align 4, !dbg !19059
  %tobool28 = icmp ne i32 %28, 0, !dbg !19059
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !19061

if.then29:                                        ; preds = %if.end26
  br label %err_nve_fid_enable, !dbg !19062

if.end30:                                         ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !19063
  br label %return, !dbg !19063

err_nve_fid_enable:                               ; preds = %if.then29
  call void @llvm.dbg.label(metadata !19064), !dbg !19065
  br label %err_vni_exists, !dbg !19063

err_vni_exists:                                   ; preds = %err_nve_fid_enable, %do.end25
  call void @llvm.dbg.label(metadata !19066), !dbg !19067
  %29 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19068
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %29) #8, !dbg !19069
  %30 = load i32, i32* %err, align 4, !dbg !19070
  store i32 %30, i32* %retval, align 4, !dbg !19071
  br label %return, !dbg !19071

return:                                           ; preds = %err_vni_exists, %if.end30, %do.end, %if.then7
  %31 = load i32, i32* %retval, align 4, !dbg !19072
  ret i32 %31, !dbg !19072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_fid* @mlxsw_sp_bridge_8021q_fid_get(%struct.mlxsw_sp_bridge_device* %bridge_device, i16 zeroext %vid, %struct.netlink_ext_ack* %extack) #0 !dbg !19073 {
entry:
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vid.addr = alloca i16, align 2
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19074, metadata !DIExpression()), !dbg !19075
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19076, metadata !DIExpression()), !dbg !19077
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !19078, metadata !DIExpression()), !dbg !19079
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19080, metadata !DIExpression()), !dbg !19081
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19082
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 0, !dbg !19083
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19083
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %1) #8, !dbg !19084
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19081
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19085
  %3 = load i16, i16* %vid.addr, align 2, !dbg !19086
  %call1 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021q_get(%struct.mlxsw_sp* %2, i16 zeroext %3) #8, !dbg !19087
  ret %struct.mlxsw_sp_fid* %call1, !dbg !19088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_fid* @mlxsw_sp_bridge_8021q_fid_lookup(%struct.mlxsw_sp_bridge_device* %bridge_device, i16 zeroext %vid) #0 !dbg !19089 {
entry:
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19090, metadata !DIExpression()), !dbg !19091
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19092, metadata !DIExpression()), !dbg !19093
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19094, metadata !DIExpression()), !dbg !19095
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19096
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 0, !dbg !19097
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19097
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %1) #8, !dbg !19098
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19095
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19099
  %3 = load i16, i16* %vid.addr, align 2, !dbg !19100
  %call1 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021q_lookup(%struct.mlxsw_sp* %2, i16 zeroext %3) #8, !dbg !19101
  ret %struct.mlxsw_sp_fid* %call1, !dbg !19102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlxsw_sp_bridge_8021q_fid_vid(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_fid* %fid) #0 !dbg !19103 {
entry:
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %fid.addr = alloca %struct.mlxsw_sp_fid*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19104, metadata !DIExpression()), !dbg !19105
  store %struct.mlxsw_sp_fid* %fid, %struct.mlxsw_sp_fid** %fid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid.addr, metadata !19106, metadata !DIExpression()), !dbg !19107
  %0 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid.addr, align 8, !dbg !19108
  %call = call zeroext i16 @mlxsw_sp_fid_8021q_vid(%struct.mlxsw_sp_fid* %0) #8, !dbg !19109
  ret i16 %call, !dbg !19110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_vlan_dev(%struct.net_device* %dev) #0 !dbg !19111 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19113, metadata !DIExpression()), !dbg !19114
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19115
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !19116
  %1 = load i32, i32* %priv_flags, align 4, !dbg !19116
  %and = and i32 %1, 1, !dbg !19117
  %tobool = icmp ne i32 %and, 0, !dbg !19115
  ret i1 %tobool, !dbg !19118
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_vlan_router_leave(%struct.mlxsw_sp_port_vlan*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port*, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_vxlan_mapped_vid(%struct.net_device* %vxlan_dev, i16* %p_vid) #0 !dbg !19119 {
entry:
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %p_vid.addr = alloca i16*, align 8
  %vinfo = alloca %struct.bridge_vlan_info, align 2
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !19122, metadata !DIExpression()), !dbg !19123
  store i16* %p_vid, i16** %p_vid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_vid.addr, metadata !19124, metadata !DIExpression()), !dbg !19125
  call void @llvm.dbg.declare(metadata %struct.bridge_vlan_info* %vinfo, metadata !19126, metadata !DIExpression()), !dbg !19132
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !19133, metadata !DIExpression()), !dbg !19134
  store i16 0, i16* %vid, align 2, !dbg !19134
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19135, metadata !DIExpression()), !dbg !19136
  %0 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !19137
  %call = call i32 @br_vlan_get_pvid(%struct.net_device* %0, i16* %vid) #8, !dbg !19138
  store i32 %call, i32* %err, align 4, !dbg !19139
  %1 = load i32, i32* %err, align 4, !dbg !19140
  %tobool = icmp ne i32 %1, 0, !dbg !19140
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !19142

lor.lhs.false:                                    ; preds = %entry
  %2 = load i16, i16* %vid, align 2, !dbg !19143
  %tobool1 = icmp ne i16 %2, 0, !dbg !19143
  br i1 %tobool1, label %if.end, label %if.then, !dbg !19144

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %out, !dbg !19145

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !19146
  %4 = load i16, i16* %vid, align 2, !dbg !19147
  %call2 = call i32 @br_vlan_get_info(%struct.net_device* %3, i16 zeroext %4, %struct.bridge_vlan_info* %vinfo) #8, !dbg !19148
  store i32 %call2, i32* %err, align 4, !dbg !19149
  %5 = load i32, i32* %err, align 4, !dbg !19150
  %tobool3 = icmp ne i32 %5, 0, !dbg !19150
  br i1 %tobool3, label %if.then6, label %lor.lhs.false4, !dbg !19152

lor.lhs.false4:                                   ; preds = %if.end
  %flags = getelementptr inbounds %struct.bridge_vlan_info, %struct.bridge_vlan_info* %vinfo, i32 0, i32 0, !dbg !19153
  %6 = load i16, i16* %flags, align 2, !dbg !19153
  %conv = zext i16 %6 to i32, !dbg !19154
  %and = and i32 %conv, 4, !dbg !19155
  %tobool5 = icmp ne i32 %and, 0, !dbg !19155
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !19156

if.then6:                                         ; preds = %lor.lhs.false4, %if.end
  store i16 0, i16* %vid, align 2, !dbg !19157
  br label %if.end7, !dbg !19158

if.end7:                                          ; preds = %if.then6, %lor.lhs.false4
  br label %out, !dbg !19159

out:                                              ; preds = %if.end7, %if.then
  call void @llvm.dbg.label(metadata !19160), !dbg !19161
  %7 = load i16, i16* %vid, align 2, !dbg !19162
  %8 = load i16*, i16** %p_vid.addr, align 8, !dbg !19163
  store i16 %7, i16* %8, align 2, !dbg !19164
  %9 = load i32, i32* %err, align 4, !dbg !19165
  ret i32 %9, !dbg !19166
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021q_get(%struct.mlxsw_sp*, i16 zeroext) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_fid_vni_is_set(%struct.mlxsw_sp_fid*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_nve_fid_enable(%struct.mlxsw_sp*, %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_nve_params*, %struct.netlink_ext_ack*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @br_vlan_get_pvid(%struct.net_device* %dev, i16* %p_pvid) #0 !dbg !19167 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %p_pvid.addr = alloca i16*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19168, metadata !DIExpression()), !dbg !19169
  store i16* %p_pvid, i16** %p_pvid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_pvid.addr, metadata !19170, metadata !DIExpression()), !dbg !19171
  ret i32 -22, !dbg !19172
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @br_vlan_get_info(%struct.net_device* %dev, i16 zeroext %vid, %struct.bridge_vlan_info* %p_vinfo) #0 !dbg !19173 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %p_vinfo.addr = alloca %struct.bridge_vlan_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19177, metadata !DIExpression()), !dbg !19178
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19179, metadata !DIExpression()), !dbg !19180
  store %struct.bridge_vlan_info* %p_vinfo, %struct.bridge_vlan_info** %p_vinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bridge_vlan_info** %p_vinfo.addr, metadata !19181, metadata !DIExpression()), !dbg !19182
  ret i32 -22, !dbg !19183
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021q_lookup(%struct.mlxsw_sp*, i16 zeroext) #2

; Function Attrs: noredzone
declare dso_local zeroext i16 @mlxsw_sp_fid_8021q_vid(%struct.mlxsw_sp_fid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_8021d_port_join(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.netlink_ext_ack* %extack) #0 !dbg !11439 {
entry:
  %retval = alloca i32, align 4
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %dev = alloca %struct.net_device*, align 8
  %vid = alloca i16, align 2
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19184, metadata !DIExpression()), !dbg !19185
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !19186, metadata !DIExpression()), !dbg !19187
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !19188, metadata !DIExpression()), !dbg !19189
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !19190, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !19192, metadata !DIExpression()), !dbg !19193
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !19194, metadata !DIExpression()), !dbg !19195
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19196
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 0, !dbg !19197
  %1 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !19197
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !19195
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !19198, metadata !DIExpression()), !dbg !19199
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19200
  %call = call zeroext i1 @is_vlan_dev(%struct.net_device* %2) #8, !dbg !19201
  br i1 %call, label %cond.true, label %cond.false, !dbg !19201

cond.true:                                        ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19202
  %call2 = call zeroext i16 @vlan_dev_vlan_id(%struct.net_device* %3) #8, !dbg !19203
  %conv = zext i16 %call2 to i32, !dbg !19203
  br label %cond.end, !dbg !19201

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 4095, %cond.false ], !dbg !19201
  %conv3 = trunc i32 %cond to i16, !dbg !19201
  store i16 %conv3, i16* %vid, align 2, !dbg !19204
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19205
  %5 = load i16, i16* %vid, align 2, !dbg !19206
  %call4 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %4, i16 zeroext %5) #8, !dbg !19207
  store %struct.mlxsw_sp_port_vlan* %call4, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19208
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !19209, metadata !DIExpression()), !dbg !19212
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19212
  %tobool = icmp ne %struct.mlxsw_sp_port_vlan* %6, null, !dbg !19212
  %lnot = xor i1 %tobool, true, !dbg !19212
  %lnot5 = xor i1 %lnot, true, !dbg !19212
  %lnot6 = xor i1 %lnot5, true, !dbg !19212
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !19212
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !19212
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !19213
  %tobool7 = icmp ne i32 %7, 0, !dbg !19213
  %lnot8 = xor i1 %tobool7, true, !dbg !19213
  %lnot10 = xor i1 %lnot8, true, !dbg !19213
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !19213
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !19213
  %tobool13 = icmp ne i64 %conv12, 0, !dbg !19213
  br i1 %tobool13, label %if.then, label %if.end, !dbg !19212

if.then:                                          ; preds = %cond.end
  br label %do.body, !dbg !19213

do.body:                                          ; preds = %if.then
  br label %do.body14, !dbg !19215

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !19217

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !19215

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 2139, i32 2305, i64 12) #9, !dbg !19219, !srcloc !19221
  br label %do.end16, !dbg !19219

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 708) #9, !dbg !19222, !srcloc !19224
  br label %do.body17, !dbg !19215

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !19225

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !19215

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !19215

if.end:                                           ; preds = %do.end19, %cond.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !19212
  %tobool20 = icmp ne i32 %8, 0, !dbg !19212
  %lnot21 = xor i1 %tobool20, true, !dbg !19212
  %lnot23 = xor i1 %lnot21, true, !dbg !19212
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !19212
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !19212
  store i64 %conv25, i64* %tmp, align 8, !dbg !19213
  %9 = load i64, i64* %tmp, align 8, !dbg !19212
  %tobool26 = icmp ne i64 %9, 0, !dbg !19227
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !19228

if.then27:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !19229
  br label %return, !dbg !19229

if.end28:                                         ; preds = %if.end
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19230
  %11 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19232
  %dev29 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %11, i32 0, i32 0, !dbg !19233
  %12 = load %struct.net_device*, %struct.net_device** %dev29, align 8, !dbg !19233
  %call30 = call zeroext i1 @mlxsw_sp_port_is_br_member(%struct.mlxsw_sp_port* %10, %struct.net_device* %12) #8, !dbg !19234
  br i1 %call30, label %if.then31, label %if.end37, !dbg !19235

if.then31:                                        ; preds = %if.end28
  br label %do.body32, !dbg !19236

do.body32:                                        ; preds = %if.then31
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !19238, metadata !DIExpression()), !dbg !19240
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19240
  store %struct.netlink_ext_ack* %13, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19240
  %14 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19241
  %tobool33 = icmp ne %struct.netlink_ext_ack* %14, null, !dbg !19241
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !19240

if.then34:                                        ; preds = %do.body32
  %15 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19241
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %15, i32 0, i32 0, !dbg !19241
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @mlxsw_sp_bridge_8021d_port_join.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !19241
  br label %if.end35, !dbg !19241

if.end35:                                         ; preds = %if.then34, %do.body32
  br label %do.end36, !dbg !19240

do.end36:                                         ; preds = %if.end35
  store i32 -22, i32* %retval, align 4, !dbg !19243
  br label %return, !dbg !19243

if.end37:                                         ; preds = %if.end28
  %16 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19244
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %16, i32 0, i32 2, !dbg !19246
  %17 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19246
  %tobool38 = icmp ne %struct.mlxsw_sp_fid* %17, null, !dbg !19244
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !19247

if.then39:                                        ; preds = %if.end37
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19248
  call void @mlxsw_sp_port_vlan_router_leave(%struct.mlxsw_sp_port_vlan* %18) #8, !dbg !19249
  br label %if.end40, !dbg !19249

if.end40:                                         ; preds = %if.then39, %if.end37
  %19 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19250
  %20 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19251
  %21 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19252
  %call41 = call i32 @mlxsw_sp_port_vlan_bridge_join(%struct.mlxsw_sp_port_vlan* %19, %struct.mlxsw_sp_bridge_port* %20, %struct.netlink_ext_ack* %21) #8, !dbg !19253
  store i32 %call41, i32* %retval, align 4, !dbg !19254
  br label %return, !dbg !19254

return:                                           ; preds = %if.end40, %do.end36, %if.then27
  %22 = load i32, i32* %retval, align 4, !dbg !19255
  ret i32 %22, !dbg !19255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_8021d_port_leave(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !19256 {
entry:
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %dev = alloca %struct.net_device*, align 8
  %vid = alloca i16, align 2
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19257, metadata !DIExpression()), !dbg !19258
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !19259, metadata !DIExpression()), !dbg !19260
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !19261, metadata !DIExpression()), !dbg !19262
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !19263, metadata !DIExpression()), !dbg !19264
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !19265, metadata !DIExpression()), !dbg !19266
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19267
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %0, i32 0, i32 0, !dbg !19268
  %1 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !19268
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !19266
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !19269, metadata !DIExpression()), !dbg !19270
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19271
  %call = call zeroext i1 @is_vlan_dev(%struct.net_device* %2) #8, !dbg !19272
  br i1 %call, label %cond.true, label %cond.false, !dbg !19272

cond.true:                                        ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19273
  %call2 = call zeroext i16 @vlan_dev_vlan_id(%struct.net_device* %3) #8, !dbg !19274
  %conv = zext i16 %call2 to i32, !dbg !19274
  br label %cond.end, !dbg !19272

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19272

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 4095, %cond.false ], !dbg !19272
  %conv3 = trunc i32 %cond to i16, !dbg !19272
  store i16 %conv3, i16* %vid, align 2, !dbg !19275
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19276
  %5 = load i16, i16* %vid, align 2, !dbg !19277
  %call4 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %4, i16 zeroext %5) #8, !dbg !19278
  store %struct.mlxsw_sp_port_vlan* %call4, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19279
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19280
  %tobool = icmp ne %struct.mlxsw_sp_port_vlan* %6, null, !dbg !19280
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !19282

lor.lhs.false:                                    ; preds = %cond.end
  %7 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19283
  %bridge_port5 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %7, i32 0, i32 4, !dbg !19284
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port5, align 8, !dbg !19284
  %tobool6 = icmp ne %struct.mlxsw_sp_bridge_port* %8, null, !dbg !19283
  br i1 %tobool6, label %if.end, label %if.then, !dbg !19285

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  br label %return, !dbg !19286

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19287
  call void @mlxsw_sp_port_vlan_bridge_leave(%struct.mlxsw_sp_port_vlan* %9) #8, !dbg !19288
  br label %return, !dbg !19289

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !19289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_8021d_vxlan_join(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.net_device* %vxlan_dev, i16 zeroext %vid, %struct.netlink_ext_ack* %extack) #0 !dbg !11445 {
entry:
  %retval = alloca i32, align 4
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %vxlan = alloca %struct.vxlan_dev*, align 8
  %params = alloca %struct.mlxsw_sp_nve_params, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack12 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19290, metadata !DIExpression()), !dbg !19291
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !19292, metadata !DIExpression()), !dbg !19293
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19294, metadata !DIExpression()), !dbg !19295
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !19296, metadata !DIExpression()), !dbg !19297
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19298, metadata !DIExpression()), !dbg !19299
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19300
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 0, !dbg !19301
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19301
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %1) #8, !dbg !19302
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19299
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !19303, metadata !DIExpression()), !dbg !19304
  %2 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !19305
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #8, !dbg !19306
  %3 = bitcast i8* %call1 to %struct.vxlan_dev*, !dbg !19306
  store %struct.vxlan_dev* %3, %struct.vxlan_dev** %vxlan, align 8, !dbg !19304
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_nve_params* %params, metadata !19307, metadata !DIExpression()), !dbg !19308
  %type = getelementptr inbounds %struct.mlxsw_sp_nve_params, %struct.mlxsw_sp_nve_params* %params, i32 0, i32 0, !dbg !19309
  store i32 0, i32* %type, align 8, !dbg !19309
  %vni = getelementptr inbounds %struct.mlxsw_sp_nve_params, %struct.mlxsw_sp_nve_params* %params, i32 0, i32 1, !dbg !19309
  %4 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !19310
  %cfg = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %4, i32 0, i32 12, !dbg !19311
  %vni2 = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %cfg, i32 0, i32 2, !dbg !19312
  %5 = load i32, i32* %vni2, align 8, !dbg !19312
  store i32 %5, i32* %vni, align 4, !dbg !19309
  %dev3 = getelementptr inbounds %struct.mlxsw_sp_nve_params, %struct.mlxsw_sp_nve_params* %params, i32 0, i32 2, !dbg !19309
  %6 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !19313
  store %struct.net_device* %6, %struct.net_device** %dev3, align 8, !dbg !19309
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !19314, metadata !DIExpression()), !dbg !19315
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19316, metadata !DIExpression()), !dbg !19317
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19318
  %8 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19319
  %dev4 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %8, i32 0, i32 0, !dbg !19320
  %9 = load %struct.net_device*, %struct.net_device** %dev4, align 8, !dbg !19320
  %ifindex = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 22, !dbg !19321
  %10 = load i32, i32* %ifindex, align 8, !dbg !19321
  %call5 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021d_get(%struct.mlxsw_sp* %7, i32 %10) #8, !dbg !19322
  store %struct.mlxsw_sp_fid* %call5, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19323
  %11 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19324
  %12 = bitcast %struct.mlxsw_sp_fid* %11 to i8*, !dbg !19324
  %call6 = call zeroext i1 @IS_ERR(i8* %12) #8, !dbg !19326
  br i1 %call6, label %if.then, label %if.end8, !dbg !19327

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !19328

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !19330, metadata !DIExpression()), !dbg !19332
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19332
  store %struct.netlink_ext_ack* %13, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19332
  %14 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19333
  %tobool = icmp ne %struct.netlink_ext_ack* %14, null, !dbg !19333
  br i1 %tobool, label %if.then7, label %if.end, !dbg !19332

if.then7:                                         ; preds = %do.body
  %15 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !19333
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %15, i32 0, i32 0, !dbg !19333
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @mlxsw_sp_bridge_8021d_vxlan_join.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !19333
  br label %if.end, !dbg !19333

if.end:                                           ; preds = %if.then7, %do.body
  br label %do.end, !dbg !19332

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !19335
  br label %return, !dbg !19335

if.end8:                                          ; preds = %entry
  %16 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19336
  %call9 = call zeroext i1 @mlxsw_sp_fid_vni_is_set(%struct.mlxsw_sp_fid* %16) #8, !dbg !19338
  br i1 %call9, label %if.then10, label %if.end18, !dbg !19339

if.then10:                                        ; preds = %if.end8
  br label %do.body11, !dbg !19340

do.body11:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack12, metadata !19342, metadata !DIExpression()), !dbg !19344
  %17 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19344
  store %struct.netlink_ext_ack* %17, %struct.netlink_ext_ack** %__extack12, align 8, !dbg !19344
  %18 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack12, align 8, !dbg !19345
  %tobool13 = icmp ne %struct.netlink_ext_ack* %18, null, !dbg !19345
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !19344

if.then14:                                        ; preds = %do.body11
  %19 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack12, align 8, !dbg !19345
  %_msg15 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %19, i32 0, i32 0, !dbg !19345
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @mlxsw_sp_bridge_8021d_vxlan_join.__msg.80, i64 0, i64 0), i8** %_msg15, align 8, !dbg !19345
  br label %if.end16, !dbg !19345

if.end16:                                         ; preds = %if.then14, %do.body11
  br label %do.end17, !dbg !19344

do.end17:                                         ; preds = %if.end16
  store i32 -22, i32* %err, align 4, !dbg !19347
  br label %err_vni_exists, !dbg !19348

if.end18:                                         ; preds = %if.end8
  %20 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19349
  %21 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19350
  %22 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19351
  %call19 = call i32 @mlxsw_sp_nve_fid_enable(%struct.mlxsw_sp* %20, %struct.mlxsw_sp_fid* %21, %struct.mlxsw_sp_nve_params* %params, %struct.netlink_ext_ack* %22) #8, !dbg !19352
  store i32 %call19, i32* %err, align 4, !dbg !19353
  %23 = load i32, i32* %err, align 4, !dbg !19354
  %tobool20 = icmp ne i32 %23, 0, !dbg !19354
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !19356

if.then21:                                        ; preds = %if.end18
  br label %err_nve_fid_enable, !dbg !19357

if.end22:                                         ; preds = %if.end18
  store i32 0, i32* %retval, align 4, !dbg !19358
  br label %return, !dbg !19358

err_nve_fid_enable:                               ; preds = %if.then21
  call void @llvm.dbg.label(metadata !19359), !dbg !19360
  br label %err_vni_exists, !dbg !19358

err_vni_exists:                                   ; preds = %err_nve_fid_enable, %do.end17
  call void @llvm.dbg.label(metadata !19361), !dbg !19362
  %24 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19363
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %24) #8, !dbg !19364
  %25 = load i32, i32* %err, align 4, !dbg !19365
  store i32 %25, i32* %retval, align 4, !dbg !19366
  br label %return, !dbg !19366

return:                                           ; preds = %err_vni_exists, %if.end22, %do.end
  %26 = load i32, i32* %retval, align 4, !dbg !19367
  ret i32 %26, !dbg !19367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_fid* @mlxsw_sp_bridge_8021d_fid_get(%struct.mlxsw_sp_bridge_device* %bridge_device, i16 zeroext %vid, %struct.netlink_ext_ack* %extack) #0 !dbg !19368 {
entry:
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vid.addr = alloca i16, align 2
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19369, metadata !DIExpression()), !dbg !19370
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19371, metadata !DIExpression()), !dbg !19372
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !19373, metadata !DIExpression()), !dbg !19374
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19375, metadata !DIExpression()), !dbg !19376
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19377
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 0, !dbg !19378
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19378
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %1) #8, !dbg !19379
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19376
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19380
  %3 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19381
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %3, i32 0, i32 0, !dbg !19382
  %4 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !19382
  %ifindex = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 22, !dbg !19383
  %5 = load i32, i32* %ifindex, align 8, !dbg !19383
  %call2 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021d_get(%struct.mlxsw_sp* %2, i32 %5) #8, !dbg !19384
  ret %struct.mlxsw_sp_fid* %call2, !dbg !19385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_fid* @mlxsw_sp_bridge_8021d_fid_lookup(%struct.mlxsw_sp_bridge_device* %bridge_device, i16 zeroext %vid) #0 !dbg !19386 {
entry:
  %retval = alloca %struct.mlxsw_sp_fid*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19387, metadata !DIExpression()), !dbg !19388
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19389, metadata !DIExpression()), !dbg !19390
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19391, metadata !DIExpression()), !dbg !19392
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19393
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 0, !dbg !19394
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19394
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %1) #8, !dbg !19395
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19392
  %2 = load i16, i16* %vid.addr, align 2, !dbg !19396
  %tobool = icmp ne i16 %2, 0, !dbg !19396
  br i1 %tobool, label %if.then, label %if.end, !dbg !19398

if.then:                                          ; preds = %entry
  store %struct.mlxsw_sp_fid* null, %struct.mlxsw_sp_fid** %retval, align 8, !dbg !19399
  br label %return, !dbg !19399

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19400
  %4 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !19401
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %4, i32 0, i32 0, !dbg !19402
  %5 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !19402
  %ifindex = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 22, !dbg !19403
  %6 = load i32, i32* %ifindex, align 8, !dbg !19403
  %call2 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021d_lookup(%struct.mlxsw_sp* %3, i32 %6) #8, !dbg !19404
  store %struct.mlxsw_sp_fid* %call2, %struct.mlxsw_sp_fid** %retval, align 8, !dbg !19405
  br label %return, !dbg !19405

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %retval, align 8, !dbg !19406
  ret %struct.mlxsw_sp_fid* %7, !dbg !19406
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlxsw_sp_bridge_8021d_fid_vid(%struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_fid* %fid) #0 !dbg !19407 {
entry:
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %fid.addr = alloca %struct.mlxsw_sp_fid*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !19408, metadata !DIExpression()), !dbg !19409
  store %struct.mlxsw_sp_fid* %fid, %struct.mlxsw_sp_fid** %fid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid.addr, metadata !19410, metadata !DIExpression()), !dbg !19411
  ret i16 0, !dbg !19412
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @vlan_dev_vlan_id(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid) #0 !dbg !19413 {
entry:
  %retval = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !19418, metadata !DIExpression()), !dbg !19419
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19420, metadata !DIExpression()), !dbg !19421
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !19422, metadata !DIExpression()), !dbg !19423
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19424, metadata !DIExpression()), !dbg !19427
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19427
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 12, !dbg !19427
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !19427
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19427
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !19427
  store i8* %2, i8** %__mptr, align 8, !dbg !19427
  br label %do.body, !dbg !19427

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !19428

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !19427
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !19427
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !19427
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !19428
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !19427
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19430
  br label %for.cond, !dbg !19430

for.cond:                                         ; preds = %do.end10, %do.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19431
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 0, !dbg !19431
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19431
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 12, !dbg !19431
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !19431
  %lnot = xor i1 %cmp, true, !dbg !19431
  br i1 %lnot, label %for.body, label %for.end, !dbg !19430

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19433
  %vid2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 3, !dbg !19436
  %9 = load i16, i16* %vid2, align 8, !dbg !19436
  %conv = zext i16 %9 to i32, !dbg !19433
  %10 = load i16, i16* %vid.addr, align 2, !dbg !19437
  %conv3 = zext i16 %10 to i32, !dbg !19437
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !19438
  br i1 %cmp4, label %if.then, label %if.end, !dbg !19439

if.then:                                          ; preds = %for.body
  %11 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19440
  store %struct.mlxsw_sp_port_vlan* %11, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !19441
  br label %return, !dbg !19441

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !19442

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !19443, metadata !DIExpression()), !dbg !19445
  %12 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19445
  %list7 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %12, i32 0, i32 0, !dbg !19445
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %list7, i32 0, i32 0, !dbg !19445
  %13 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !19445
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !19445
  store i8* %14, i8** %__mptr6, align 8, !dbg !19445
  br label %do.body9, !dbg !19445

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !19446

do.end10:                                         ; preds = %do.body9
  %15 = load i8*, i8** %__mptr6, align 8, !dbg !19445
  %add.ptr12 = getelementptr i8, i8* %15, i64 0, !dbg !19445
  %16 = bitcast i8* %add.ptr12 to %struct.mlxsw_sp_port_vlan*, !dbg !19445
  store %struct.mlxsw_sp_port_vlan* %16, %struct.mlxsw_sp_port_vlan** %tmp11, align 8, !dbg !19446
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp11, align 8, !dbg !19445
  store %struct.mlxsw_sp_port_vlan* %17, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19431
  br label %for.cond, !dbg !19431, !llvm.loop !19448

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_port_vlan* null, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !19450
  br label %return, !dbg !19450

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !19451
  ret %struct.mlxsw_sp_port_vlan* %18, !dbg !19451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_port_is_br_member(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.net_device* %br_dev) #0 !dbg !19452 {
entry:
  %retval = alloca i1, align 1
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !19455, metadata !DIExpression()), !dbg !19456
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !19457, metadata !DIExpression()), !dbg !19458
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !19459, metadata !DIExpression()), !dbg !19460
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19461, metadata !DIExpression()), !dbg !19464
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19464
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 12, !dbg !19464
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !19464
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19464
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !19464
  store i8* %2, i8** %__mptr, align 8, !dbg !19464
  br label %do.body, !dbg !19464

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !19465

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !19464
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !19464
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !19464
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !19465
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !19464
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19467
  br label %for.cond, !dbg !19467

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19468
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 0, !dbg !19468
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19468
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 12, !dbg !19468
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !19468
  %lnot = xor i1 %cmp, true, !dbg !19468
  br i1 %lnot, label %for.body, label %for.end, !dbg !19467

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19470
  %bridge_port = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 4, !dbg !19473
  %9 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !19473
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %9, null, !dbg !19470
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !19474

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19475
  %bridge_port2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %10, i32 0, i32 4, !dbg !19476
  %11 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port2, align 8, !dbg !19476
  %bridge_device = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %11, i32 0, i32 1, !dbg !19477
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !19477
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %12, i32 0, i32 0, !dbg !19478
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19478
  %14 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !19479
  %cmp3 = icmp eq %struct.net_device* %13, %14, !dbg !19480
  br i1 %cmp3, label %if.then, label %if.end, !dbg !19481

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !19482
  br label %return, !dbg !19482

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !19483

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !19484, metadata !DIExpression()), !dbg !19486
  %15 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19486
  %list5 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %15, i32 0, i32 0, !dbg !19486
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %list5, i32 0, i32 0, !dbg !19486
  %16 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !19486
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !19486
  store i8* %17, i8** %__mptr4, align 8, !dbg !19486
  br label %do.body7, !dbg !19486

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !19487

do.end8:                                          ; preds = %do.body7
  %18 = load i8*, i8** %__mptr4, align 8, !dbg !19486
  %add.ptr10 = getelementptr i8, i8* %18, i64 0, !dbg !19486
  %19 = bitcast i8* %add.ptr10 to %struct.mlxsw_sp_port_vlan*, !dbg !19486
  store %struct.mlxsw_sp_port_vlan* %19, %struct.mlxsw_sp_port_vlan** %tmp9, align 8, !dbg !19487
  %20 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp9, align 8, !dbg !19486
  store %struct.mlxsw_sp_port_vlan* %20, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !19468
  br label %for.cond, !dbg !19468, !llvm.loop !19489

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !19491
  br label %return, !dbg !19491

return:                                           ; preds = %for.end, %if.then
  %21 = load i1, i1* %retval, align 1, !dbg !19492
  ret i1 %21, !dbg !19492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_vlan_bridge_join(%struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.netlink_ext_ack* %extack) #0 !dbg !19493 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port_vlan.addr = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, metadata !19496, metadata !DIExpression()), !dbg !19497
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !19498, metadata !DIExpression()), !dbg !19499
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !19500, metadata !DIExpression()), !dbg !19501
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !19502, metadata !DIExpression()), !dbg !19503
  %0 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19504
  %mlxsw_sp_port1 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %0, i32 0, i32 1, !dbg !19505
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port1, align 8, !dbg !19505
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19503
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !19506, metadata !DIExpression()), !dbg !19507
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !19508, metadata !DIExpression()), !dbg !19509
  %2 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19510
  %vid2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %2, i32 0, i32 3, !dbg !19511
  %3 = load i16, i16* %vid2, align 8, !dbg !19511
  store i16 %3, i16* %vid, align 2, !dbg !19509
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19512, metadata !DIExpression()), !dbg !19513
  %4 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19514
  %bridge_port3 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %4, i32 0, i32 4, !dbg !19516
  %5 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port3, align 8, !dbg !19516
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %5, null, !dbg !19514
  br i1 %tobool, label %if.then, label %if.end, !dbg !19517

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19518
  br label %return, !dbg !19518

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19519
  %7 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19520
  %8 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19521
  %call = call i32 @mlxsw_sp_port_vlan_fid_join(%struct.mlxsw_sp_port_vlan* %6, %struct.mlxsw_sp_bridge_port* %7, %struct.netlink_ext_ack* %8) #8, !dbg !19522
  store i32 %call, i32* %err, align 4, !dbg !19523
  %9 = load i32, i32* %err, align 4, !dbg !19524
  %tobool4 = icmp ne i32 %9, 0, !dbg !19524
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !19526

if.then5:                                         ; preds = %if.end
  %10 = load i32, i32* %err, align 4, !dbg !19527
  store i32 %10, i32* %retval, align 4, !dbg !19528
  br label %return, !dbg !19528

if.end6:                                          ; preds = %if.end
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19529
  %12 = load i16, i16* %vid, align 2, !dbg !19530
  %13 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19531
  %flags = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %13, i32 0, i32 6, !dbg !19532
  %14 = load i64, i64* %flags, align 8, !dbg !19532
  %and = and i64 %14, 32, !dbg !19533
  %tobool7 = icmp ne i64 %and, 0, !dbg !19531
  %call8 = call i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %11, i16 zeroext %12, i1 zeroext %tobool7) #8, !dbg !19534
  store i32 %call8, i32* %err, align 4, !dbg !19535
  %15 = load i32, i32* %err, align 4, !dbg !19536
  %tobool9 = icmp ne i32 %15, 0, !dbg !19536
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !19538

if.then10:                                        ; preds = %if.end6
  br label %err_port_vid_learning_set, !dbg !19539

if.end11:                                         ; preds = %if.end6
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19540
  %17 = load i16, i16* %vid, align 2, !dbg !19541
  %18 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19542
  %stp_state = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %18, i32 0, i32 5, !dbg !19543
  %19 = load i8, i8* %stp_state, align 4, !dbg !19543
  %call12 = call i32 @mlxsw_sp_port_vid_stp_set(%struct.mlxsw_sp_port* %16, i16 zeroext %17, i8 zeroext %19) #8, !dbg !19544
  store i32 %call12, i32* %err, align 4, !dbg !19545
  %20 = load i32, i32* %err, align 4, !dbg !19546
  %tobool13 = icmp ne i32 %20, 0, !dbg !19546
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !19548

if.then14:                                        ; preds = %if.end11
  br label %err_port_vid_stp_set, !dbg !19549

if.end15:                                         ; preds = %if.end11
  %21 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19550
  %22 = load i16, i16* %vid, align 2, !dbg !19551
  %call16 = call %struct.mlxsw_sp_bridge_vlan* @mlxsw_sp_bridge_vlan_get(%struct.mlxsw_sp_bridge_port* %21, i16 zeroext %22) #8, !dbg !19552
  store %struct.mlxsw_sp_bridge_vlan* %call16, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19553
  %23 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19554
  %tobool17 = icmp ne %struct.mlxsw_sp_bridge_vlan* %23, null, !dbg !19554
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !19556

if.then18:                                        ; preds = %if.end15
  store i32 -12, i32* %err, align 4, !dbg !19557
  br label %err_bridge_vlan_get, !dbg !19559

if.end19:                                         ; preds = %if.end15
  %24 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19560
  %bridge_vlan_node = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %24, i32 0, i32 5, !dbg !19561
  %25 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19562
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %25, i32 0, i32 1, !dbg !19563
  call void @list_add(%struct.list_head* %bridge_vlan_node, %struct.list_head* %port_vlan_list) #8, !dbg !19564
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19565
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %26, i32 0, i32 2, !dbg !19566
  %27 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19566
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %27, i32 0, i32 8, !dbg !19567
  %28 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !19567
  %29 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19568
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %29, i32 0, i32 0, !dbg !19569
  %30 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19569
  %31 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19570
  %call20 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_get(%struct.mlxsw_sp_bridge* %28, %struct.net_device* %30, %struct.netlink_ext_ack* %31) #8, !dbg !19571
  %32 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19572
  %33 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19573
  %bridge_port21 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %33, i32 0, i32 4, !dbg !19574
  store %struct.mlxsw_sp_bridge_port* %32, %struct.mlxsw_sp_bridge_port** %bridge_port21, align 8, !dbg !19575
  store i32 0, i32* %retval, align 4, !dbg !19576
  br label %return, !dbg !19576

err_bridge_vlan_get:                              ; preds = %if.then18
  call void @llvm.dbg.label(metadata !19577), !dbg !19578
  %34 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19579
  %35 = load i16, i16* %vid, align 2, !dbg !19580
  %call22 = call i32 @mlxsw_sp_port_vid_stp_set(%struct.mlxsw_sp_port* %34, i16 zeroext %35, i8 zeroext 0) #8, !dbg !19581
  br label %err_port_vid_stp_set, !dbg !19581

err_port_vid_stp_set:                             ; preds = %err_bridge_vlan_get, %if.then14
  call void @llvm.dbg.label(metadata !19582), !dbg !19583
  %36 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19584
  %37 = load i16, i16* %vid, align 2, !dbg !19585
  %call23 = call i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %36, i16 zeroext %37, i1 zeroext false) #8, !dbg !19586
  br label %err_port_vid_learning_set, !dbg !19586

err_port_vid_learning_set:                        ; preds = %err_port_vid_stp_set, %if.then10
  call void @llvm.dbg.label(metadata !19587), !dbg !19588
  %38 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19589
  call void @mlxsw_sp_port_vlan_fid_leave(%struct.mlxsw_sp_port_vlan* %38) #8, !dbg !19590
  %39 = load i32, i32* %err, align 4, !dbg !19591
  store i32 %39, i32* %retval, align 4, !dbg !19592
  br label %return, !dbg !19592

return:                                           ; preds = %err_port_vid_learning_set, %if.end19, %if.then5, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !19593
  ret i32 %40, !dbg !19593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_vlan_fid_join(%struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.netlink_ext_ack* %extack) #0 !dbg !19594 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port_vlan.addr = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %local_port = alloca i8, align 1
  %vid = alloca i16, align 2
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, metadata !19595, metadata !DIExpression()), !dbg !19596
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !19597, metadata !DIExpression()), !dbg !19598
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !19599, metadata !DIExpression()), !dbg !19600
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !19601, metadata !DIExpression()), !dbg !19602
  %0 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19603
  %mlxsw_sp_port1 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %0, i32 0, i32 1, !dbg !19604
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port1, align 8, !dbg !19604
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19602
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !19605, metadata !DIExpression()), !dbg !19606
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !19607, metadata !DIExpression()), !dbg !19608
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19609
  %local_port2 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !19610
  %3 = load i8, i8* %local_port2, align 8, !dbg !19610
  store i8 %3, i8* %local_port, align 1, !dbg !19608
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !19611, metadata !DIExpression()), !dbg !19612
  %4 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19613
  %vid3 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %4, i32 0, i32 3, !dbg !19614
  %5 = load i16, i16* %vid3, align 8, !dbg !19614
  store i16 %5, i16* %vid, align 2, !dbg !19612
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !19615, metadata !DIExpression()), !dbg !19616
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19617, metadata !DIExpression()), !dbg !19618
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19619
  %bridge_device4 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %6, i32 0, i32 1, !dbg !19620
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device4, align 8, !dbg !19620
  store %struct.mlxsw_sp_bridge_device* %7, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !19621
  %8 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !19622
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %8, i32 0, i32 5, !dbg !19623
  %9 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !19623
  %fid_get = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %9, i32 0, i32 3, !dbg !19624
  %10 = load %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16, %struct.netlink_ext_ack*)*, %struct.mlxsw_sp_fid* (%struct.mlxsw_sp_bridge_device*, i16, %struct.netlink_ext_ack*)** %fid_get, align 8, !dbg !19624
  %11 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !19625
  %12 = load i16, i16* %vid, align 2, !dbg !19626
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !19627
  %call = call %struct.mlxsw_sp_fid* %10(%struct.mlxsw_sp_bridge_device* %11, i16 zeroext %12, %struct.netlink_ext_ack* %13) #8, !dbg !19622
  store %struct.mlxsw_sp_fid* %call, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19628
  %14 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19629
  %15 = bitcast %struct.mlxsw_sp_fid* %14 to i8*, !dbg !19629
  %call5 = call zeroext i1 @IS_ERR(i8* %15) #8, !dbg !19631
  br i1 %call5, label %if.then, label %if.end, !dbg !19632

if.then:                                          ; preds = %entry
  %16 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19633
  %17 = bitcast %struct.mlxsw_sp_fid* %16 to i8*, !dbg !19633
  %call6 = call i64 @PTR_ERR(i8* %17) #8, !dbg !19634
  %conv = trunc i64 %call6 to i32, !dbg !19634
  store i32 %conv, i32* %retval, align 4, !dbg !19635
  br label %return, !dbg !19635

if.end:                                           ; preds = %entry
  %18 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19636
  %19 = load i8, i8* %local_port, align 1, !dbg !19637
  %20 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19638
  %flags = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %20, i32 0, i32 6, !dbg !19639
  %21 = load i64, i64* %flags, align 8, !dbg !19639
  %and = and i64 %21, 64, !dbg !19640
  %tobool = icmp ne i64 %and, 0, !dbg !19638
  %call7 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %18, i32 0, i8 zeroext %19, i1 zeroext %tobool) #8, !dbg !19641
  store i32 %call7, i32* %err, align 4, !dbg !19642
  %22 = load i32, i32* %err, align 4, !dbg !19643
  %tobool8 = icmp ne i32 %22, 0, !dbg !19643
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !19645

if.then9:                                         ; preds = %if.end
  br label %err_fid_uc_flood_set, !dbg !19646

if.end10:                                         ; preds = %if.end
  %23 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19647
  %24 = load i8, i8* %local_port, align 1, !dbg !19648
  %25 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19649
  %call11 = call zeroext i1 @mlxsw_sp_mc_flood(%struct.mlxsw_sp_bridge_port* %25) #8, !dbg !19650
  %call12 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %23, i32 2, i8 zeroext %24, i1 zeroext %call11) #8, !dbg !19651
  store i32 %call12, i32* %err, align 4, !dbg !19652
  %26 = load i32, i32* %err, align 4, !dbg !19653
  %tobool13 = icmp ne i32 %26, 0, !dbg !19653
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !19655

if.then14:                                        ; preds = %if.end10
  br label %err_fid_mc_flood_set, !dbg !19656

if.end15:                                         ; preds = %if.end10
  %27 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19657
  %28 = load i8, i8* %local_port, align 1, !dbg !19658
  %call16 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %27, i32 1, i8 zeroext %28, i1 zeroext true) #8, !dbg !19659
  store i32 %call16, i32* %err, align 4, !dbg !19660
  %29 = load i32, i32* %err, align 4, !dbg !19661
  %tobool17 = icmp ne i32 %29, 0, !dbg !19661
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !19663

if.then18:                                        ; preds = %if.end15
  br label %err_fid_bc_flood_set, !dbg !19664

if.end19:                                         ; preds = %if.end15
  %30 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19665
  %31 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19666
  %32 = load i16, i16* %vid, align 2, !dbg !19667
  %call20 = call i32 @mlxsw_sp_fid_port_vid_map(%struct.mlxsw_sp_fid* %30, %struct.mlxsw_sp_port* %31, i16 zeroext %32) #8, !dbg !19668
  store i32 %call20, i32* %err, align 4, !dbg !19669
  %33 = load i32, i32* %err, align 4, !dbg !19670
  %tobool21 = icmp ne i32 %33, 0, !dbg !19670
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !19672

if.then22:                                        ; preds = %if.end19
  br label %err_fid_port_vid_map, !dbg !19673

if.end23:                                         ; preds = %if.end19
  %34 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19674
  %35 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !19675
  %fid24 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %35, i32 0, i32 2, !dbg !19676
  store %struct.mlxsw_sp_fid* %34, %struct.mlxsw_sp_fid** %fid24, align 8, !dbg !19677
  store i32 0, i32* %retval, align 4, !dbg !19678
  br label %return, !dbg !19678

err_fid_port_vid_map:                             ; preds = %if.then22
  call void @llvm.dbg.label(metadata !19679), !dbg !19680
  %36 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19681
  %37 = load i8, i8* %local_port, align 1, !dbg !19682
  %call25 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %36, i32 1, i8 zeroext %37, i1 zeroext false) #8, !dbg !19683
  br label %err_fid_bc_flood_set, !dbg !19683

err_fid_bc_flood_set:                             ; preds = %err_fid_port_vid_map, %if.then18
  call void @llvm.dbg.label(metadata !19684), !dbg !19685
  %38 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19686
  %39 = load i8, i8* %local_port, align 1, !dbg !19687
  %call26 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %38, i32 2, i8 zeroext %39, i1 zeroext false) #8, !dbg !19688
  br label %err_fid_mc_flood_set, !dbg !19688

err_fid_mc_flood_set:                             ; preds = %err_fid_bc_flood_set, %if.then14
  call void @llvm.dbg.label(metadata !19689), !dbg !19690
  %40 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19691
  %41 = load i8, i8* %local_port, align 1, !dbg !19692
  %call27 = call i32 @mlxsw_sp_fid_flood_set(%struct.mlxsw_sp_fid* %40, i32 0, i8 zeroext %41, i1 zeroext false) #8, !dbg !19693
  br label %err_fid_uc_flood_set, !dbg !19693

err_fid_uc_flood_set:                             ; preds = %err_fid_mc_flood_set, %if.then9
  call void @llvm.dbg.label(metadata !19694), !dbg !19695
  %42 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !19696
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %42) #8, !dbg !19697
  %43 = load i32, i32* %err, align 4, !dbg !19698
  store i32 %43, i32* %retval, align 4, !dbg !19699
  br label %return, !dbg !19699

return:                                           ; preds = %err_fid_uc_flood_set, %if.end23, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !19700
  ret i32 %44, !dbg !19700
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_vlan* @mlxsw_sp_bridge_vlan_get(%struct.mlxsw_sp_bridge_port* %bridge_port, i16 zeroext %vid) #0 !dbg !19701 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid.addr = alloca i16, align 2
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !19704, metadata !DIExpression()), !dbg !19705
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19706, metadata !DIExpression()), !dbg !19707
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !19708, metadata !DIExpression()), !dbg !19709
  %0 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19710
  %1 = load i16, i16* %vid.addr, align 2, !dbg !19711
  %call = call %struct.mlxsw_sp_bridge_vlan* @mlxsw_sp_bridge_vlan_find(%struct.mlxsw_sp_bridge_port* %0, i16 zeroext %1) #8, !dbg !19712
  store %struct.mlxsw_sp_bridge_vlan* %call, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19713
  %2 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19714
  %tobool = icmp ne %struct.mlxsw_sp_bridge_vlan* %2, null, !dbg !19714
  br i1 %tobool, label %if.then, label %if.end, !dbg !19716

if.then:                                          ; preds = %entry
  %3 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19717
  store %struct.mlxsw_sp_bridge_vlan* %3, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !19718
  br label %return, !dbg !19718

if.end:                                           ; preds = %entry
  %4 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19719
  %5 = load i16, i16* %vid.addr, align 2, !dbg !19720
  %call1 = call %struct.mlxsw_sp_bridge_vlan* @mlxsw_sp_bridge_vlan_create(%struct.mlxsw_sp_bridge_port* %4, i16 zeroext %5) #8, !dbg !19721
  store %struct.mlxsw_sp_bridge_vlan* %call1, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !19722
  br label %return, !dbg !19722

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !19723
  ret %struct.mlxsw_sp_bridge_vlan* %6, !dbg !19723
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_fid_port_vid_map(%struct.mlxsw_sp_fid*, %struct.mlxsw_sp_port*, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_bridge_vlan* @mlxsw_sp_bridge_vlan_create(%struct.mlxsw_sp_bridge_port* %bridge_port, i16 zeroext %vid) #0 !dbg !19724 {
entry:
  %retval = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid.addr = alloca i16, align 2
  %bridge_vlan = alloca %struct.mlxsw_sp_bridge_vlan*, align 8
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !19725, metadata !DIExpression()), !dbg !19726
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !19727, metadata !DIExpression()), !dbg !19728
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, metadata !19729, metadata !DIExpression()), !dbg !19730
  %call = call i8* @kzalloc(i64 40, i32 3264) #8, !dbg !19731
  %0 = bitcast i8* %call to %struct.mlxsw_sp_bridge_vlan*, !dbg !19731
  store %struct.mlxsw_sp_bridge_vlan* %0, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19732
  %1 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19733
  %tobool = icmp ne %struct.mlxsw_sp_bridge_vlan* %1, null, !dbg !19733
  br i1 %tobool, label %if.end, label %if.then, !dbg !19735

if.then:                                          ; preds = %entry
  store %struct.mlxsw_sp_bridge_vlan* null, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !19736
  br label %return, !dbg !19736

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19737
  %port_vlan_list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %2, i32 0, i32 1, !dbg !19738
  call void @INIT_LIST_HEAD(%struct.list_head* %port_vlan_list) #8, !dbg !19739
  %3 = load i16, i16* %vid.addr, align 2, !dbg !19740
  %4 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19741
  %vid1 = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %4, i32 0, i32 2, !dbg !19742
  store i16 %3, i16* %vid1, align 8, !dbg !19743
  %5 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19744
  %list = getelementptr inbounds %struct.mlxsw_sp_bridge_vlan, %struct.mlxsw_sp_bridge_vlan* %5, i32 0, i32 0, !dbg !19745
  %6 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !19746
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %6, i32 0, i32 3, !dbg !19747
  call void @list_add(%struct.list_head* %list, %struct.list_head* %vlans_list) #8, !dbg !19748
  %7 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %bridge_vlan, align 8, !dbg !19749
  store %struct.mlxsw_sp_bridge_vlan* %7, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !19750
  br label %return, !dbg !19750

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.mlxsw_sp_bridge_vlan*, %struct.mlxsw_sp_bridge_vlan** %retval, align 8, !dbg !19751
  ret %struct.mlxsw_sp_bridge_vlan* %8, !dbg !19751
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021d_get(%struct.mlxsw_sp*, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_fid* @mlxsw_sp_fid_8021d_lookup(%struct.mlxsw_sp*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @register_switchdev_notifier(%struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local i32 @register_switchdev_blocking_notifier(%struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_notify_work(%struct.work_struct* %work) #0 !dbg !11460 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11995, metadata !DIExpression()), !dbg !19752
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12007, metadata !DIExpression()), !dbg !19755
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12009, metadata !DIExpression()), !dbg !19756
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12011, metadata !DIExpression()), !dbg !19757
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12013, metadata !DIExpression()), !dbg !19758
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12019, metadata !DIExpression()), !dbg !19760
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12025, metadata !DIExpression()), !dbg !19762
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12034, metadata !DIExpression()), !dbg !19765
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12036, metadata !DIExpression()), !dbg !19766
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12038, metadata !DIExpression()), !dbg !19767
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12040, metadata !DIExpression()), !dbg !19768
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12042, metadata !DIExpression()), !dbg !19769
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12044, metadata !DIExpression()), !dbg !19770
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12046, metadata !DIExpression()), !dbg !19771
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12048, metadata !DIExpression()), !dbg !19772
  %work.addr = alloca %struct.work_struct*, align 8
  %bridge = alloca %struct.mlxsw_sp_bridge*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %sfn_pl = alloca i8*, align 8
  %queries = alloca i32, align 4
  %num_rec = alloca i8, align 1
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_bridge*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !19773, metadata !DIExpression()), !dbg !19774
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge, metadata !19775, metadata !DIExpression()), !dbg !19776
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19777, metadata !DIExpression()), !dbg !19778
  call void @llvm.dbg.declare(metadata i8** %sfn_pl, metadata !19779, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.declare(metadata i32* %queries, metadata !19781, metadata !DIExpression()), !dbg !19782
  call void @llvm.dbg.declare(metadata i8* %num_rec, metadata !19783, metadata !DIExpression()), !dbg !19784
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19785, metadata !DIExpression()), !dbg !19786
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19787, metadata !DIExpression()), !dbg !19788
  store i64 1040, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !19789
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #9, !dbg !19790
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !19791

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !19792
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !19793
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !19794

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !19795
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !19796
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !19797
  %call.i.i = call i32 @get_order(i64 %5) #10, !dbg !19798
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !19769
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !19799
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !19800
  %8 = load i32, i32* %order.i.i, align 4, !dbg !19801
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !19802
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !19803
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !19804
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #11, !dbg !19805
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !19805
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !19805
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !19805
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !19805
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !19806
  br label %kmalloc.exit, !dbg !19806

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !19807
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19808
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !19808
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !19809

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !19810
  br label %kmalloc_index.exit.i, !dbg !19810

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19811
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !19812
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !19813

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19814
  br label %kmalloc_index.exit.i, !dbg !19814

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19815
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !19816
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !19817

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19818
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !19819
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !19820

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !19821
  br label %kmalloc_index.exit.i, !dbg !19821

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19822
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !19823
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !19824

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19825
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !19826
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !19827

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !19828
  br label %kmalloc_index.exit.i, !dbg !19828

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19829
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !19830
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !19831

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19832
  br label %kmalloc_index.exit.i, !dbg !19832

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19833
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !19834
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !19835

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !19836
  br label %kmalloc_index.exit.i, !dbg !19836

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19837
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !19838
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !19839

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !19840
  br label %kmalloc_index.exit.i, !dbg !19840

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19841
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !19842
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !19843

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !19844
  br label %kmalloc_index.exit.i, !dbg !19844

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19845
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !19846
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !19847

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !19848
  br label %kmalloc_index.exit.i, !dbg !19848

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19849
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !19850
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !19851

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !19852
  br label %kmalloc_index.exit.i, !dbg !19852

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19853
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !19854
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !19855

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !19856
  br label %kmalloc_index.exit.i, !dbg !19856

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19857
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !19858
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !19859

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !19860
  br label %kmalloc_index.exit.i, !dbg !19860

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19861
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !19862
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !19863

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !19864
  br label %kmalloc_index.exit.i, !dbg !19864

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19865
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !19866
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !19867

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !19868
  br label %kmalloc_index.exit.i, !dbg !19868

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19869
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !19870
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !19871

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !19872
  br label %kmalloc_index.exit.i, !dbg !19872

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19873
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !19874
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !19875

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !19876
  br label %kmalloc_index.exit.i, !dbg !19876

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19877
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !19878
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !19879

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !19880
  br label %kmalloc_index.exit.i, !dbg !19880

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19881
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !19882
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !19883

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !19884
  br label %kmalloc_index.exit.i, !dbg !19884

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19885
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !19886
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !19887

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !19888
  br label %kmalloc_index.exit.i, !dbg !19888

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19889
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !19890
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !19891

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !19892
  br label %kmalloc_index.exit.i, !dbg !19892

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19893
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !19894
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !19895

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !19896
  br label %kmalloc_index.exit.i, !dbg !19896

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19897
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !19898
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !19899

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !19900
  br label %kmalloc_index.exit.i, !dbg !19900

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19901
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !19902
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !19903

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !19904
  br label %kmalloc_index.exit.i, !dbg !19904

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19905
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !19906
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !19907

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !19908
  br label %kmalloc_index.exit.i, !dbg !19908

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19909
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !19910
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !19911

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !19912
  br label %kmalloc_index.exit.i, !dbg !19912

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19913
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !19914
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !19915

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !19916
  br label %kmalloc_index.exit.i, !dbg !19916

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19917
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !19918
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !19919

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !19920
  br label %kmalloc_index.exit.i, !dbg !19920

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19921
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !19922
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !19923

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !19924
  br label %kmalloc_index.exit.i, !dbg !19924

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !19925, !srcloc !12237
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #9, !dbg !19926, !srcloc !12241
  unreachable, !dbg !19927

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !19928
  store i32 %43, i32* %index.i, align 4, !dbg !19929
  %44 = load i32, i32* %index.i, align 4, !dbg !19930
  %tobool.i = icmp ne i32 %44, 0, !dbg !19930
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !19931

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !19932
  br label %kmalloc.exit, !dbg !19932

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !19933
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19934
  %and.i.i = and i32 %46, 17, !dbg !19934
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !19934
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !19934
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !19934
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19934
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !19935

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !19936
  br label %kmalloc_type.exit.i, !dbg !19936

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19937
  %and2.i.i = and i32 %47, 1, !dbg !19938
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !19937
  %48 = zext i1 %tobool3.i.i to i64, !dbg !19937
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !19937
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !19939
  br label %kmalloc_type.exit.i, !dbg !19939

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !19940
  %idxprom.i = zext i32 %49 to i64, !dbg !19941
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !19941
  %50 = load i32, i32* %index.i, align 4, !dbg !19942
  %idxprom6.i = zext i32 %50 to i64, !dbg !19941
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !19941
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !19941
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !19943
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !19944
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19945
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19946
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #11, !dbg !19947
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !19947
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !19947
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !19947
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !19947
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !19757
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19948
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !19949
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !19950
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19951
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #11, !dbg !19952
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !19953
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !19954
  store i8* %60, i8** %retval.i, align 8, !dbg !19955
  br label %kmalloc.exit, !dbg !19955

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !19956
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !19957
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #11, !dbg !19958
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !19958
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !19958
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !19958
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !19958
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !19959
  br label %kmalloc.exit, !dbg !19959

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !19960
  store i8* %63, i8** %sfn_pl, align 8, !dbg !19961
  %64 = load i8*, i8** %sfn_pl, align 8, !dbg !19962
  %tobool = icmp ne i8* %64, null, !dbg !19962
  br i1 %tobool, label %if.end, label %if.then, !dbg !19964

if.then:                                          ; preds = %kmalloc.exit
  br label %return, !dbg !19965

if.end:                                           ; preds = %kmalloc.exit
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19966, metadata !DIExpression()), !dbg !19968
  %65 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !19968
  %66 = bitcast %struct.work_struct* %65 to i8*, !dbg !19968
  store i8* %66, i8** %__mptr, align 8, !dbg !19968
  br label %do.body, !dbg !19968

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !19969

do.end:                                           ; preds = %do.body
  %67 = load i8*, i8** %__mptr, align 8, !dbg !19968
  %add.ptr = getelementptr i8, i8* %67, i64 -8, !dbg !19968
  %68 = bitcast i8* %add.ptr to %struct.mlxsw_sp_bridge*, !dbg !19968
  store %struct.mlxsw_sp_bridge* %68, %struct.mlxsw_sp_bridge** %tmp, align 8, !dbg !19969
  %69 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %tmp, align 8, !dbg !19968
  store %struct.mlxsw_sp_bridge* %69, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !19971
  %70 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !19972
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %70, i32 0, i32 0, !dbg !19973
  %71 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !19973
  store %struct.mlxsw_sp* %71, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19974
  call void @rtnl_lock() #8, !dbg !19975
  store i32 10, i32* %queries, align 4, !dbg !19976
  br label %while.cond, !dbg !19977

while.cond:                                       ; preds = %if.end20, %do.end
  %72 = load i32, i32* %queries, align 4, !dbg !19978
  %cmp = icmp sgt i32 %72, 0, !dbg !19979
  br i1 %cmp, label %while.body, label %while.end, !dbg !19977

while.body:                                       ; preds = %while.cond
  %73 = load i8*, i8** %sfn_pl, align 8, !dbg !19980
  call void @mlxsw_reg_sfn_pack(i8* %73) #8, !dbg !19982
  %74 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19983
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %74, i32 0, i32 1, !dbg !19984
  %75 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !19984
  %76 = load i8*, i8** %sfn_pl, align 8, !dbg !19985
  %call2 = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %75, %struct.mlxsw_reg_info* @mlxsw_reg_sfn, i8* %76) #8, !dbg !19986
  store i32 %call2, i32* %err, align 4, !dbg !19987
  %77 = load i32, i32* %err, align 4, !dbg !19988
  %tobool3 = icmp ne i32 %77, 0, !dbg !19988
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !19990

if.then4:                                         ; preds = %while.body
  br label %do.body5, !dbg !19991

do.body5:                                         ; preds = %if.then4
  %call6 = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_sp_fdb_notify_work._rs, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.mlxsw_sp_fdb_notify_work, i64 0, i64 0)) #8, !dbg !19993
  %tobool7 = icmp ne i32 %call6, 0, !dbg !19993
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !19996

if.then8:                                         ; preds = %do.body5
  %78 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19993
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %78, i32 0, i32 2, !dbg !19993
  %79 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !19993
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %79, i32 0, i32 2, !dbg !19993
  %80 = load %struct.device*, %struct.device** %dev, align 8, !dbg !19993
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %80, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.89, i64 0, i64 0)) #12, !dbg !19993
  br label %if.end9, !dbg !19993

if.end9:                                          ; preds = %if.then8, %do.body5
  br label %do.end10, !dbg !19996

do.end10:                                         ; preds = %if.end9
  br label %out, !dbg !19997

if.end11:                                         ; preds = %while.body
  %81 = load i8*, i8** %sfn_pl, align 8, !dbg !19998
  %call12 = call i32 @mlxsw_reg_sfn_num_rec_get(i8* %81) #8, !dbg !19999
  %conv = trunc i32 %call12 to i8, !dbg !19999
  store i8 %conv, i8* %num_rec, align 1, !dbg !20000
  store i32 0, i32* %i, align 4, !dbg !20001
  br label %for.cond, !dbg !20003

for.cond:                                         ; preds = %for.inc, %if.end11
  %82 = load i32, i32* %i, align 4, !dbg !20004
  %83 = load i8, i8* %num_rec, align 1, !dbg !20006
  %conv13 = zext i8 %83 to i32, !dbg !20006
  %cmp14 = icmp slt i32 %82, %conv13, !dbg !20007
  br i1 %cmp14, label %for.body, label %for.end, !dbg !20008

for.body:                                         ; preds = %for.cond
  %84 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20009
  %85 = load i8*, i8** %sfn_pl, align 8, !dbg !20010
  %86 = load i32, i32* %i, align 4, !dbg !20011
  call void @mlxsw_sp_fdb_notify_rec_process(%struct.mlxsw_sp* %84, i8* %85, i32 %86) #8, !dbg !20012
  br label %for.inc, !dbg !20012

for.inc:                                          ; preds = %for.body
  %87 = load i32, i32* %i, align 4, !dbg !20013
  %inc = add i32 %87, 1, !dbg !20013
  store i32 %inc, i32* %i, align 4, !dbg !20013
  br label %for.cond, !dbg !20014, !llvm.loop !20015

for.end:                                          ; preds = %for.cond
  %88 = load i8, i8* %num_rec, align 1, !dbg !20017
  %conv16 = zext i8 %88 to i32, !dbg !20017
  %cmp17 = icmp ne i32 %conv16, 64, !dbg !20019
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !20020

if.then19:                                        ; preds = %for.end
  br label %out, !dbg !20021

if.end20:                                         ; preds = %for.end
  %89 = load i32, i32* %queries, align 4, !dbg !20022
  %dec = add i32 %89, -1, !dbg !20022
  store i32 %dec, i32* %queries, align 4, !dbg !20022
  br label %while.cond, !dbg !19977, !llvm.loop !20023

while.end:                                        ; preds = %while.cond
  br label %out, !dbg !19977

out:                                              ; preds = %while.end, %if.then19, %do.end10
  call void @llvm.dbg.label(metadata !20025), !dbg !20026
  call void @rtnl_unlock() #8, !dbg !20027
  %90 = load i8*, i8** %sfn_pl, align 8, !dbg !20028
  call void @kfree(i8* %90) #8, !dbg !20029
  %91 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20030
  %92 = load i32, i32* %queries, align 4, !dbg !20031
  %tobool21 = icmp ne i32 %92, 0, !dbg !20032
  %lnot = xor i1 %tobool21, true, !dbg !20032
  call void @mlxsw_sp_fdb_notify_work_schedule(%struct.mlxsw_sp* %91, i1 zeroext %lnot) #8, !dbg !20033
  br label %return, !dbg !20034

return:                                           ; preds = %out, %if.then
  ret void, !dbg !20034
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_notify_work_schedule(%struct.mlxsw_sp* %mlxsw_sp, i1 zeroext %no_delay) #0 !dbg !20035 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !20038, metadata !DIExpression()), !dbg !20043
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %no_delay.addr = alloca i8, align 1
  %bridge = alloca %struct.mlxsw_sp_bridge*, align 8
  %interval = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !20045, metadata !DIExpression()), !dbg !20046
  %frombool = zext i1 %no_delay to i8
  store i8 %frombool, i8* %no_delay.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_delay.addr, metadata !20047, metadata !DIExpression()), !dbg !20048
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge** %bridge, metadata !20049, metadata !DIExpression()), !dbg !20050
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20051
  %bridge1 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 8, !dbg !20052
  %1 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge1, align 8, !dbg !20052
  store %struct.mlxsw_sp_bridge* %1, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !20050
  call void @llvm.dbg.declare(metadata i32* %interval, metadata !20053, metadata !DIExpression()), !dbg !20054
  %2 = load i8, i8* %no_delay.addr, align 1, !dbg !20055
  %tobool = trunc i8 %2 to i1, !dbg !20055
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20055

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !20055

cond.false:                                       ; preds = %entry
  %3 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !20056
  %fdb_notify = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %3, i32 0, i32 1, !dbg !20057
  %interval2 = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify, i32 0, i32 1, !dbg !20058
  %4 = load i32, i32* %interval2, align 8, !dbg !20058
  br label %cond.end, !dbg !20055

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !20055
  store i32 %cond, i32* %interval, align 4, !dbg !20054
  %5 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !20059
  %fdb_notify3 = getelementptr inbounds %struct.mlxsw_sp_bridge, %struct.mlxsw_sp_bridge* %5, i32 0, i32 1, !dbg !20060
  %dw = getelementptr inbounds %struct.anon.165, %struct.anon.165* %fdb_notify3, i32 0, i32 0, !dbg !20061
  %6 = load i32, i32* %interval, align 4, !dbg !20062
  store i32 %6, i32* %m.addr.i, align 4
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !20063
  %8 = call i1 @llvm.is.constant.i32(i32 %7) #9, !dbg !20065
  br i1 %8, label %if.then.i, label %if.else.i, !dbg !20066

if.then.i:                                        ; preds = %cond.end
  %9 = load i32, i32* %m.addr.i, align 4, !dbg !20067
  %cmp.i = icmp slt i32 %9, 0, !dbg !20070
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !20071

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !20072
  br label %msecs_to_jiffies.exit, !dbg !20072

if.end.i:                                         ; preds = %if.then.i
  %10 = load i32, i32* %m.addr.i, align 4, !dbg !20073
  %call.i = call i64 @_msecs_to_jiffies(i32 %10) #11, !dbg !20074
  store i64 %call.i, i64* %retval.i, align 8, !dbg !20075
  br label %msecs_to_jiffies.exit, !dbg !20075

if.else.i:                                        ; preds = %cond.end
  %11 = load i32, i32* %m.addr.i, align 4, !dbg !20076
  %call2.i = call i64 @__msecs_to_jiffies(i32 %11) #11, !dbg !20078
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !20079
  br label %msecs_to_jiffies.exit, !dbg !20079

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %12 = load i64, i64* %retval.i, align 8, !dbg !20080
  %call4 = call i32 @mlxsw_core_schedule_dw(%struct.delayed_work* %dw, i64 %12) #8, !dbg !20081
  ret void, !dbg !20082
}

; Function Attrs: noredzone
declare dso_local i32 @unregister_switchdev_notifier(%struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_switchdev_blocking_event(%struct.notifier_block* %unused, i64 %event, i8* %ptr) #0 !dbg !20083 {
entry:
  %retval = alloca i32, align 4
  %unused.addr = alloca %struct.notifier_block*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %err = alloca i32, align 4
  store %struct.notifier_block* %unused, %struct.notifier_block** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %unused.addr, metadata !20084, metadata !DIExpression()), !dbg !20085
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20086, metadata !DIExpression()), !dbg !20087
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20088, metadata !DIExpression()), !dbg !20089
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20090, metadata !DIExpression()), !dbg !20091
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !20092
  %1 = bitcast i8* %0 to %struct.switchdev_notifier_info*, !dbg !20092
  %call = call %struct.net_device* @switchdev_notifier_info_to_dev(%struct.switchdev_notifier_info* %1) #8, !dbg !20093
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !20091
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20094, metadata !DIExpression()), !dbg !20095
  store i32 0, i32* %err, align 4, !dbg !20095
  %2 = load i64, i64* %event.addr, align 8, !dbg !20096
  switch i64 %2, label %sw.epilog [
    i64 7, label %sw.bb
    i64 8, label %sw.bb5
    i64 9, label %sw.bb12
  ], !dbg !20097

sw.bb:                                            ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20098
  %call1 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %3) #8, !dbg !20101
  br i1 %call1, label %if.then, label %if.else, !dbg !20102

if.then:                                          ; preds = %sw.bb
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20103
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !20104
  %6 = bitcast i8* %5 to %struct.switchdev_notifier_port_obj_info*, !dbg !20104
  %call2 = call i32 @mlxsw_sp_switchdev_handle_vxlan_obj_add(%struct.net_device* %4, %struct.switchdev_notifier_port_obj_info* %6) #8, !dbg !20105
  store i32 %call2, i32* %err, align 4, !dbg !20106
  br label %if.end, !dbg !20107

if.else:                                          ; preds = %sw.bb
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20108
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !20109
  %9 = bitcast i8* %8 to %struct.switchdev_notifier_port_obj_info*, !dbg !20109
  %call3 = call i32 @switchdev_handle_port_obj_add(%struct.net_device* %7, %struct.switchdev_notifier_port_obj_info* %9, i1 (%struct.net_device*)* @mlxsw_sp_port_dev_check, i32 (%struct.net_device*, %struct.switchdev_obj*, %struct.switchdev_trans*, %struct.netlink_ext_ack*)* @mlxsw_sp_port_obj_add) #8, !dbg !20110
  store i32 %call3, i32* %err, align 4, !dbg !20111
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %err, align 4, !dbg !20112
  %call4 = call i32 @notifier_from_errno(i32 %10) #8, !dbg !20113
  store i32 %call4, i32* %retval, align 4, !dbg !20114
  br label %return, !dbg !20114

sw.bb5:                                           ; preds = %entry
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20115
  %call6 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %11) #8, !dbg !20117
  br i1 %call6, label %if.then7, label %if.else8, !dbg !20118

if.then7:                                         ; preds = %sw.bb5
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20119
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !20120
  %14 = bitcast i8* %13 to %struct.switchdev_notifier_port_obj_info*, !dbg !20120
  call void @mlxsw_sp_switchdev_handle_vxlan_obj_del(%struct.net_device* %12, %struct.switchdev_notifier_port_obj_info* %14) #8, !dbg !20121
  br label %if.end10, !dbg !20121

if.else8:                                         ; preds = %sw.bb5
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20122
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !20123
  %17 = bitcast i8* %16 to %struct.switchdev_notifier_port_obj_info*, !dbg !20123
  %call9 = call i32 @switchdev_handle_port_obj_del(%struct.net_device* %15, %struct.switchdev_notifier_port_obj_info* %17, i1 (%struct.net_device*)* @mlxsw_sp_port_dev_check, i32 (%struct.net_device*, %struct.switchdev_obj*)* @mlxsw_sp_port_obj_del) #8, !dbg !20124
  store i32 %call9, i32* %err, align 4, !dbg !20125
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then7
  %18 = load i32, i32* %err, align 4, !dbg !20126
  %call11 = call i32 @notifier_from_errno(i32 %18) #8, !dbg !20127
  store i32 %call11, i32* %retval, align 4, !dbg !20128
  br label %return, !dbg !20128

sw.bb12:                                          ; preds = %entry
  %19 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20129
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !20130
  %21 = bitcast i8* %20 to %struct.switchdev_notifier_port_attr_info*, !dbg !20130
  %call13 = call i32 @switchdev_handle_port_attr_set(%struct.net_device* %19, %struct.switchdev_notifier_port_attr_info* %21, i1 (%struct.net_device*)* @mlxsw_sp_port_dev_check, i32 (%struct.net_device*, %struct.switchdev_attr*, %struct.switchdev_trans*)* @mlxsw_sp_port_attr_set) #8, !dbg !20131
  store i32 %call13, i32* %err, align 4, !dbg !20132
  %22 = load i32, i32* %err, align 4, !dbg !20133
  %call14 = call i32 @notifier_from_errno(i32 %22) #8, !dbg !20134
  store i32 %call14, i32* %retval, align 4, !dbg !20135
  br label %return, !dbg !20135

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20136
  br label %return, !dbg !20136

return:                                           ; preds = %sw.epilog, %sw.bb12, %if.end10, %if.end
  %23 = load i32, i32* %retval, align 4, !dbg !20137
  ret i32 %23, !dbg !20137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_switchdev_handle_vxlan_obj_add(%struct.net_device* %vxlan_dev, %struct.switchdev_notifier_port_obj_info* %port_obj_info) #0 !dbg !20138 {
entry:
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %port_obj_info.addr = alloca %struct.switchdev_notifier_port_obj_info*, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !20150, metadata !DIExpression()), !dbg !20151
  store %struct.switchdev_notifier_port_obj_info* %port_obj_info, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, metadata !20152, metadata !DIExpression()), !dbg !20153
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20154, metadata !DIExpression()), !dbg !20155
  store i32 0, i32* %err, align 4, !dbg !20155
  %0 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20156
  %obj = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %0, i32 0, i32 1, !dbg !20157
  %1 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj, align 8, !dbg !20157
  %id = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %1, i32 0, i32 1, !dbg !20158
  %2 = load i32, i32* %id, align 8, !dbg !20158
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !20159

sw.bb:                                            ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20160
  %4 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20162
  %call = call i32 @mlxsw_sp_switchdev_vxlan_vlans_add(%struct.net_device* %3, %struct.switchdev_notifier_port_obj_info* %4) #8, !dbg !20163
  store i32 %call, i32* %err, align 4, !dbg !20164
  br label %sw.epilog, !dbg !20165

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !20166

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %5 = load i32, i32* %err, align 4, !dbg !20167
  ret i32 %5, !dbg !20168
}

; Function Attrs: noredzone
declare dso_local i32 @switchdev_handle_port_obj_add(%struct.net_device*, %struct.switchdev_notifier_port_obj_info*, i1 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.switchdev_obj*, %struct.switchdev_trans*, %struct.netlink_ext_ack*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_obj_add(%struct.net_device* %dev, %struct.switchdev_obj* %obj, %struct.switchdev_trans* %trans, %struct.netlink_ext_ack* %extack) #0 !dbg !20169 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %obj.addr = alloca %struct.switchdev_obj*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %vlan = alloca %struct.switchdev_obj_port_vlan*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchdev_obj_port_vlan*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp7 = alloca %struct.switchdev_obj_port_mdb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20172, metadata !DIExpression()), !dbg !20173
  store %struct.switchdev_obj* %obj, %struct.switchdev_obj** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj** %obj.addr, metadata !20174, metadata !DIExpression()), !dbg !20175
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !20176, metadata !DIExpression()), !dbg !20177
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !20178, metadata !DIExpression()), !dbg !20179
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !20180, metadata !DIExpression()), !dbg !20181
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20182
  %call = call i8* @netdev_priv(%struct.net_device* %0) #8, !dbg !20183
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !20183
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20181
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_vlan** %vlan, metadata !20184, metadata !DIExpression()), !dbg !20187
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20188, metadata !DIExpression()), !dbg !20189
  store i32 0, i32* %err, align 4, !dbg !20189
  %2 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj.addr, align 8, !dbg !20190
  %id = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %2, i32 0, i32 1, !dbg !20191
  %3 = load i32, i32* %id, align 8, !dbg !20191
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
  ], !dbg !20192

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20193, metadata !DIExpression()), !dbg !20196
  %4 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj.addr, align 8, !dbg !20196
  %5 = bitcast %struct.switchdev_obj* %4 to i8*, !dbg !20196
  store i8* %5, i8** %__mptr, align 8, !dbg !20196
  br label %do.body, !dbg !20196

do.body:                                          ; preds = %sw.bb
  br label %do.end, !dbg !20197

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !20196
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !20196
  %7 = bitcast i8* %add.ptr to %struct.switchdev_obj_port_vlan*, !dbg !20196
  store %struct.switchdev_obj_port_vlan* %7, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !20197
  %8 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !20196
  store %struct.switchdev_obj_port_vlan* %8, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !20199
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20200
  %10 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !20201
  %11 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !20202
  %12 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20203
  %call1 = call i32 @mlxsw_sp_port_vlans_add(%struct.mlxsw_sp_port* %9, %struct.switchdev_obj_port_vlan* %10, %struct.switchdev_trans* %11, %struct.netlink_ext_ack* %12) #8, !dbg !20204
  store i32 %call1, i32* %err, align 4, !dbg !20205
  %13 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !20206
  %call2 = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %13) #8, !dbg !20208
  br i1 %call2, label %if.then, label %if.end, !dbg !20209

if.then:                                          ; preds = %do.end
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20210
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %14, i32 0, i32 2, !dbg !20212
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20212
  call void @mlxsw_sp_span_respin(%struct.mlxsw_sp* %15) #8, !dbg !20213
  br label %if.end, !dbg !20214

if.end:                                           ; preds = %if.then, %do.end
  br label %sw.epilog, !dbg !20215

sw.bb3:                                           ; preds = %entry
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20216
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !20217, metadata !DIExpression()), !dbg !20219
  %17 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj.addr, align 8, !dbg !20219
  %18 = bitcast %struct.switchdev_obj* %17 to i8*, !dbg !20219
  store i8* %18, i8** %__mptr4, align 8, !dbg !20219
  br label %do.body5, !dbg !20219

do.body5:                                         ; preds = %sw.bb3
  br label %do.end6, !dbg !20220

do.end6:                                          ; preds = %do.body5
  %19 = load i8*, i8** %__mptr4, align 8, !dbg !20219
  %add.ptr8 = getelementptr i8, i8* %19, i64 0, !dbg !20219
  %20 = bitcast i8* %add.ptr8 to %struct.switchdev_obj_port_mdb*, !dbg !20219
  store %struct.switchdev_obj_port_mdb* %20, %struct.switchdev_obj_port_mdb** %tmp7, align 8, !dbg !20220
  %21 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %tmp7, align 8, !dbg !20219
  %22 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !20222
  %call9 = call i32 @mlxsw_sp_port_mdb_add(%struct.mlxsw_sp_port* %16, %struct.switchdev_obj_port_mdb* %21, %struct.switchdev_trans* %22) #8, !dbg !20223
  store i32 %call9, i32* %err, align 4, !dbg !20224
  br label %sw.epilog, !dbg !20225

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %err, align 4, !dbg !20226
  br label %sw.epilog, !dbg !20227

sw.epilog:                                        ; preds = %sw.default, %do.end6, %if.end
  %23 = load i32, i32* %err, align 4, !dbg !20228
  ret i32 %23, !dbg !20229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_handle_vxlan_obj_del(%struct.net_device* %vxlan_dev, %struct.switchdev_notifier_port_obj_info* %port_obj_info) #0 !dbg !20230 {
entry:
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %port_obj_info.addr = alloca %struct.switchdev_notifier_port_obj_info*, align 8
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !20233, metadata !DIExpression()), !dbg !20234
  store %struct.switchdev_notifier_port_obj_info* %port_obj_info, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, metadata !20235, metadata !DIExpression()), !dbg !20236
  %0 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20237
  %obj = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %0, i32 0, i32 1, !dbg !20238
  %1 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj, align 8, !dbg !20238
  %id = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %1, i32 0, i32 1, !dbg !20239
  %2 = load i32, i32* %id, align 8, !dbg !20239
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !20240

sw.bb:                                            ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20241
  %4 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20243
  call void @mlxsw_sp_switchdev_vxlan_vlans_del(%struct.net_device* %3, %struct.switchdev_notifier_port_obj_info* %4) #8, !dbg !20244
  br label %sw.epilog, !dbg !20245

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !20246

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  ret void, !dbg !20247
}

; Function Attrs: noredzone
declare dso_local i32 @switchdev_handle_port_obj_del(%struct.net_device*, %struct.switchdev_notifier_port_obj_info*, i1 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.switchdev_obj*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_obj_del(%struct.net_device* %dev, %struct.switchdev_obj* %obj) #0 !dbg !20248 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %obj.addr = alloca %struct.switchdev_obj*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchdev_obj_port_vlan*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp6 = alloca %struct.switchdev_obj_port_mdb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20251, metadata !DIExpression()), !dbg !20252
  store %struct.switchdev_obj* %obj, %struct.switchdev_obj** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj** %obj.addr, metadata !20253, metadata !DIExpression()), !dbg !20254
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !20255, metadata !DIExpression()), !dbg !20256
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20257
  %call = call i8* @netdev_priv(%struct.net_device* %0) #8, !dbg !20258
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !20258
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20256
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20259, metadata !DIExpression()), !dbg !20260
  store i32 0, i32* %err, align 4, !dbg !20260
  %2 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj.addr, align 8, !dbg !20261
  %id = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %2, i32 0, i32 1, !dbg !20262
  %3 = load i32, i32* %id, align 8, !dbg !20262
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ], !dbg !20263

sw.bb:                                            ; preds = %entry
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20264
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20266, metadata !DIExpression()), !dbg !20268
  %5 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj.addr, align 8, !dbg !20268
  %6 = bitcast %struct.switchdev_obj* %5 to i8*, !dbg !20268
  store i8* %6, i8** %__mptr, align 8, !dbg !20268
  br label %do.body, !dbg !20268

do.body:                                          ; preds = %sw.bb
  br label %do.end, !dbg !20269

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !20268
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !20268
  %8 = bitcast i8* %add.ptr to %struct.switchdev_obj_port_vlan*, !dbg !20268
  store %struct.switchdev_obj_port_vlan* %8, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !20269
  %9 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !20268
  %call1 = call i32 @mlxsw_sp_port_vlans_del(%struct.mlxsw_sp_port* %4, %struct.switchdev_obj_port_vlan* %9) #8, !dbg !20271
  store i32 %call1, i32* %err, align 4, !dbg !20272
  br label %sw.epilog, !dbg !20273

sw.bb2:                                           ; preds = %entry
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20274
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !20275, metadata !DIExpression()), !dbg !20277
  %11 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj.addr, align 8, !dbg !20277
  %12 = bitcast %struct.switchdev_obj* %11 to i8*, !dbg !20277
  store i8* %12, i8** %__mptr3, align 8, !dbg !20277
  br label %do.body4, !dbg !20277

do.body4:                                         ; preds = %sw.bb2
  br label %do.end5, !dbg !20278

do.end5:                                          ; preds = %do.body4
  %13 = load i8*, i8** %__mptr3, align 8, !dbg !20277
  %add.ptr7 = getelementptr i8, i8* %13, i64 0, !dbg !20277
  %14 = bitcast i8* %add.ptr7 to %struct.switchdev_obj_port_mdb*, !dbg !20277
  store %struct.switchdev_obj_port_mdb* %14, %struct.switchdev_obj_port_mdb** %tmp6, align 8, !dbg !20278
  %15 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %tmp6, align 8, !dbg !20277
  %call8 = call i32 @mlxsw_sp_port_mdb_del(%struct.mlxsw_sp_port* %10, %struct.switchdev_obj_port_mdb* %15) #8, !dbg !20280
  store i32 %call8, i32* %err, align 4, !dbg !20281
  br label %sw.epilog, !dbg !20282

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %err, align 4, !dbg !20283
  br label %sw.epilog, !dbg !20284

sw.epilog:                                        ; preds = %sw.default, %do.end5, %do.end
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !20285
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %16, i32 0, i32 2, !dbg !20286
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20286
  call void @mlxsw_sp_span_respin(%struct.mlxsw_sp* %17) #8, !dbg !20287
  %18 = load i32, i32* %err, align 4, !dbg !20288
  ret i32 %18, !dbg !20289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_switchdev_vxlan_vlans_add(%struct.net_device* %vxlan_dev, %struct.switchdev_notifier_port_obj_info* %port_obj_info) #0 !dbg !20290 {
entry:
  %retval = alloca i32, align 4
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %port_obj_info.addr = alloca %struct.switchdev_notifier_port_obj_info*, align 8
  %vlan = alloca %struct.switchdev_obj_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchdev_obj_port_vlan*, align 8
  %flag_untagged = alloca i8, align 1
  %flag_pvid = alloca i8, align 1
  %trans = alloca %struct.switchdev_trans*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !20291, metadata !DIExpression()), !dbg !20292
  store %struct.switchdev_notifier_port_obj_info* %port_obj_info, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, metadata !20293, metadata !DIExpression()), !dbg !20294
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_vlan** %vlan, metadata !20295, metadata !DIExpression()), !dbg !20296
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20297, metadata !DIExpression()), !dbg !20299
  %0 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20299
  %obj = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %0, i32 0, i32 1, !dbg !20299
  %1 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj, align 8, !dbg !20299
  %2 = bitcast %struct.switchdev_obj* %1 to i8*, !dbg !20299
  store i8* %2, i8** %__mptr, align 8, !dbg !20299
  br label %do.body, !dbg !20299

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !20300

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !20299
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !20299
  %4 = bitcast i8* %add.ptr to %struct.switchdev_obj_port_vlan*, !dbg !20299
  store %struct.switchdev_obj_port_vlan* %4, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !20300
  %5 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !20299
  store %struct.switchdev_obj_port_vlan* %5, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !20296
  call void @llvm.dbg.declare(metadata i8* %flag_untagged, metadata !20302, metadata !DIExpression()), !dbg !20303
  %6 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !20304
  %flags = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %6, i32 0, i32 1, !dbg !20305
  %7 = load i16, i16* %flags, align 8, !dbg !20305
  %conv = zext i16 %7 to i32, !dbg !20304
  %and = and i32 %conv, 4, !dbg !20306
  %tobool = icmp ne i32 %and, 0, !dbg !20304
  %frombool = zext i1 %tobool to i8, !dbg !20303
  store i8 %frombool, i8* %flag_untagged, align 1, !dbg !20303
  call void @llvm.dbg.declare(metadata i8* %flag_pvid, metadata !20307, metadata !DIExpression()), !dbg !20308
  %8 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !20309
  %flags1 = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %8, i32 0, i32 1, !dbg !20310
  %9 = load i16, i16* %flags1, align 8, !dbg !20310
  %conv2 = zext i16 %9 to i32, !dbg !20309
  %and3 = and i32 %conv2, 2, !dbg !20311
  %tobool4 = icmp ne i32 %and3, 0, !dbg !20309
  %frombool5 = zext i1 %tobool4 to i8, !dbg !20308
  store i8 %frombool5, i8* %flag_pvid, align 1, !dbg !20308
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans, metadata !20312, metadata !DIExpression()), !dbg !20313
  %10 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20314
  %trans6 = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %10, i32 0, i32 2, !dbg !20315
  %11 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans6, align 8, !dbg !20315
  store %struct.switchdev_trans* %11, %struct.switchdev_trans** %trans, align 8, !dbg !20313
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !20316, metadata !DIExpression()), !dbg !20317
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !20318, metadata !DIExpression()), !dbg !20319
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !20320, metadata !DIExpression()), !dbg !20321
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !20322, metadata !DIExpression()), !dbg !20323
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !20324, metadata !DIExpression()), !dbg !20325
  %12 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20326
  %info = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %12, i32 0, i32 0, !dbg !20327
  %call = call %struct.netlink_ext_ack* @switchdev_notifier_info_to_extack(%struct.switchdev_notifier_info* %info) #8, !dbg !20328
  store %struct.netlink_ext_ack* %call, %struct.netlink_ext_ack** %extack, align 8, !dbg !20329
  %13 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20330
  %call7 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %13) #8, !dbg !20331
  store %struct.net_device* %call7, %struct.net_device** %br_dev, align 8, !dbg !20332
  %14 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !20333
  %tobool8 = icmp ne %struct.net_device* %14, null, !dbg !20333
  br i1 %tobool8, label %if.end, label %if.then, !dbg !20335

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !20336
  br label %return, !dbg !20336

if.end:                                           ; preds = %do.end
  %15 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !20337
  %call9 = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %15) #8, !dbg !20338
  store %struct.mlxsw_sp* %call9, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20339
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20340
  %tobool10 = icmp ne %struct.mlxsw_sp* %16, null, !dbg !20340
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !20342

if.then11:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !20343
  br label %return, !dbg !20343

if.end12:                                         ; preds = %if.end
  %17 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !20344
  %handled = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %17, i32 0, i32 3, !dbg !20345
  store i8 1, i8* %handled, align 8, !dbg !20346
  %18 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans, align 8, !dbg !20347
  %call13 = call zeroext i1 @switchdev_trans_ph_commit(%struct.switchdev_trans* %18) #8, !dbg !20349
  br i1 %call13, label %if.then14, label %if.end15, !dbg !20350

if.then14:                                        ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !20351
  br label %return, !dbg !20351

if.end15:                                         ; preds = %if.end12
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20352
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %19, i32 0, i32 8, !dbg !20353
  %20 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !20353
  %21 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !20354
  %call16 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %20, %struct.net_device* %21) #8, !dbg !20355
  store %struct.mlxsw_sp_bridge_device* %call16, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20356
  %22 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20357
  %tobool17 = icmp ne %struct.mlxsw_sp_bridge_device* %22, null, !dbg !20357
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !20359

if.then18:                                        ; preds = %if.end15
  store i32 -22, i32* %retval, align 4, !dbg !20360
  br label %return, !dbg !20360

if.end19:                                         ; preds = %if.end15
  %23 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20361
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %23, i32 0, i32 4, !dbg !20363
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !20363
  %bf.clear = and i8 %bf.load, 1, !dbg !20363
  %tobool20 = icmp ne i8 %bf.clear, 0, !dbg !20361
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !20364

if.then21:                                        ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !20365
  br label %return, !dbg !20365

if.end22:                                         ; preds = %if.end19
  %24 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !20366
  %vid_begin = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %24, i32 0, i32 2, !dbg !20368
  %25 = load i16, i16* %vid_begin, align 2, !dbg !20368
  store i16 %25, i16* %vid, align 2, !dbg !20369
  br label %for.cond, !dbg !20370

for.cond:                                         ; preds = %for.inc, %if.end22
  %26 = load i16, i16* %vid, align 2, !dbg !20371
  %conv23 = zext i16 %26 to i32, !dbg !20371
  %27 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !20373
  %vid_end = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %27, i32 0, i32 3, !dbg !20374
  %28 = load i16, i16* %vid_end, align 4, !dbg !20374
  %conv24 = zext i16 %28 to i32, !dbg !20373
  %cmp = icmp sle i32 %conv23, %conv24, !dbg !20375
  br i1 %cmp, label %for.body, label %for.end, !dbg !20376

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20377, metadata !DIExpression()), !dbg !20379
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20380
  %30 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20381
  %31 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20382
  %32 = load i16, i16* %vid, align 2, !dbg !20383
  %33 = load i8, i8* %flag_untagged, align 1, !dbg !20384
  %tobool26 = trunc i8 %33 to i1, !dbg !20384
  %34 = load i8, i8* %flag_pvid, align 1, !dbg !20385
  %tobool27 = trunc i8 %34 to i1, !dbg !20385
  %35 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20386
  %call28 = call i32 @mlxsw_sp_switchdev_vxlan_vlan_add(%struct.mlxsw_sp* %29, %struct.mlxsw_sp_bridge_device* %30, %struct.net_device* %31, i16 zeroext %32, i1 zeroext %tobool26, i1 zeroext %tobool27, %struct.netlink_ext_ack* %35) #8, !dbg !20387
  store i32 %call28, i32* %err, align 4, !dbg !20388
  %36 = load i32, i32* %err, align 4, !dbg !20389
  %tobool29 = icmp ne i32 %36, 0, !dbg !20389
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !20391

if.then30:                                        ; preds = %for.body
  %37 = load i32, i32* %err, align 4, !dbg !20392
  store i32 %37, i32* %retval, align 4, !dbg !20393
  br label %return, !dbg !20393

if.end31:                                         ; preds = %for.body
  br label %for.inc, !dbg !20394

for.inc:                                          ; preds = %if.end31
  %38 = load i16, i16* %vid, align 2, !dbg !20395
  %inc = add i16 %38, 1, !dbg !20395
  store i16 %inc, i16* %vid, align 2, !dbg !20395
  br label %for.cond, !dbg !20396, !llvm.loop !20397

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !20399
  br label %return, !dbg !20399

return:                                           ; preds = %for.end, %if.then30, %if.then21, %if.then18, %if.then14, %if.then11, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !20400
  ret i32 %39, !dbg !20400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_switchdev_vxlan_vlan_add(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.net_device* %vxlan_dev, i16 zeroext %vid, i1 zeroext %flag_untagged, i1 zeroext %flag_pvid, %struct.netlink_ext_ack* %extack) #0 !dbg !11452 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %flag_untagged.addr = alloca i8, align 1
  %flag_pvid.addr = alloca i8, align 1
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %vxlan = alloca %struct.vxlan_dev*, align 8
  %vni = alloca i32, align 4
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %old_vid = alloca i16, align 2
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !20401, metadata !DIExpression()), !dbg !20402
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !20403, metadata !DIExpression()), !dbg !20404
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !20405, metadata !DIExpression()), !dbg !20406
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !20407, metadata !DIExpression()), !dbg !20408
  %frombool = zext i1 %flag_untagged to i8
  store i8 %frombool, i8* %flag_untagged.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag_untagged.addr, metadata !20409, metadata !DIExpression()), !dbg !20410
  %frombool1 = zext i1 %flag_pvid to i8
  store i8 %frombool1, i8* %flag_pvid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag_pvid.addr, metadata !20411, metadata !DIExpression()), !dbg !20412
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !20413, metadata !DIExpression()), !dbg !20414
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !20415, metadata !DIExpression()), !dbg !20416
  %0 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20417
  %call = call i8* @netdev_priv(%struct.net_device* %0) #8, !dbg !20418
  %1 = bitcast i8* %call to %struct.vxlan_dev*, !dbg !20418
  store %struct.vxlan_dev* %1, %struct.vxlan_dev** %vxlan, align 8, !dbg !20416
  call void @llvm.dbg.declare(metadata i32* %vni, metadata !20419, metadata !DIExpression()), !dbg !20420
  %2 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !20421
  %cfg = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %2, i32 0, i32 12, !dbg !20422
  %vni2 = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %cfg, i32 0, i32 2, !dbg !20423
  %3 = load i32, i32* %vni2, align 8, !dbg !20423
  store i32 %3, i32* %vni, align 4, !dbg !20420
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !20424, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.declare(metadata i16* %old_vid, metadata !20426, metadata !DIExpression()), !dbg !20427
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20428, metadata !DIExpression()), !dbg !20429
  %4 = load i8, i8* %flag_untagged.addr, align 1, !dbg !20430
  %tobool = trunc i8 %4 to i1, !dbg !20430
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !20432

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %flag_pvid.addr, align 1, !dbg !20433
  %tobool3 = trunc i8 %5 to i1, !dbg !20433
  br i1 %tobool3, label %land.lhs.true4, label %if.end9, !dbg !20434

land.lhs.true4:                                   ; preds = %land.lhs.true
  %6 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !20435
  %dev = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %6, i32 0, i32 0, !dbg !20436
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20436
  %8 = load i16, i16* %vid.addr, align 2, !dbg !20437
  %call5 = call %struct.net_device* @mlxsw_sp_bridge_8021q_vxlan_dev_find(%struct.net_device* %7, i16 zeroext %8) #8, !dbg !20438
  %tobool6 = icmp ne %struct.net_device* %call5, null, !dbg !20438
  br i1 %tobool6, label %if.then, label %if.end9, !dbg !20439

if.then:                                          ; preds = %land.lhs.true4
  br label %do.body, !dbg !20440

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !20442, metadata !DIExpression()), !dbg !20444
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20444
  store %struct.netlink_ext_ack* %9, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20444
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20445
  %tobool7 = icmp ne %struct.netlink_ext_ack* %10, null, !dbg !20445
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !20444

if.then8:                                         ; preds = %do.body
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20445
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %11, i32 0, i32 0, !dbg !20445
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @mlxsw_sp_switchdev_vxlan_vlan_add.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !20445
  br label %if.end, !dbg !20445

if.end:                                           ; preds = %if.then8, %do.body
  br label %do.end, !dbg !20444

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !20447
  br label %return, !dbg !20447

if.end9:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %12 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20448
  %call10 = call zeroext i1 @netif_running(%struct.net_device* %12) #8, !dbg !20450
  br i1 %call10, label %if.end12, label %if.then11, !dbg !20451

if.then11:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !20452
  br label %return, !dbg !20452

if.end12:                                         ; preds = %if.end9
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20453
  %14 = load i32, i32* %vni, align 4, !dbg !20454
  %call13 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_vni(%struct.mlxsw_sp* %13, i32 %14) #8, !dbg !20455
  store %struct.mlxsw_sp_fid* %call13, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20456
  %15 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20457
  %tobool14 = icmp ne %struct.mlxsw_sp_fid* %15, null, !dbg !20457
  br i1 %tobool14, label %if.end21, label %if.then15, !dbg !20459

if.then15:                                        ; preds = %if.end12
  %16 = load i8, i8* %flag_untagged.addr, align 1, !dbg !20460
  %tobool16 = trunc i8 %16 to i1, !dbg !20460
  br i1 %tobool16, label %lor.lhs.false, label %if.then18, !dbg !20463

lor.lhs.false:                                    ; preds = %if.then15
  %17 = load i8, i8* %flag_pvid.addr, align 1, !dbg !20464
  %tobool17 = trunc i8 %17 to i1, !dbg !20464
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !20465

if.then18:                                        ; preds = %lor.lhs.false, %if.then15
  store i32 0, i32* %retval, align 4, !dbg !20466
  br label %return, !dbg !20466

if.end19:                                         ; preds = %lor.lhs.false
  %18 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !20467
  %19 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20468
  %20 = load i16, i16* %vid.addr, align 2, !dbg !20469
  %21 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20470
  %call20 = call i32 @mlxsw_sp_bridge_8021q_vxlan_join(%struct.mlxsw_sp_bridge_device* %18, %struct.net_device* %19, i16 zeroext %20, %struct.netlink_ext_ack* %21) #8, !dbg !20471
  store i32 %call20, i32* %retval, align 4, !dbg !20472
  br label %return, !dbg !20472

if.end21:                                         ; preds = %if.end12
  %22 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20473
  %call22 = call zeroext i16 @mlxsw_sp_fid_8021q_vid(%struct.mlxsw_sp_fid* %22) #8, !dbg !20474
  store i16 %call22, i16* %old_vid, align 2, !dbg !20475
  %23 = load i16, i16* %vid.addr, align 2, !dbg !20476
  %conv = zext i16 %23 to i32, !dbg !20476
  %24 = load i16, i16* %old_vid, align 2, !dbg !20478
  %conv23 = zext i16 %24 to i32, !dbg !20478
  %cmp = icmp eq i32 %conv, %conv23, !dbg !20479
  br i1 %cmp, label %if.then25, label %if.end57, !dbg !20480

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !20481, metadata !DIExpression()), !dbg !20485
  %25 = load i8, i8* %flag_untagged.addr, align 1, !dbg !20485
  %tobool26 = trunc i8 %25 to i1, !dbg !20485
  br i1 %tobool26, label %land.rhs, label %land.end, !dbg !20485

land.rhs:                                         ; preds = %if.then25
  %26 = load i8, i8* %flag_pvid.addr, align 1, !dbg !20485
  %tobool28 = trunc i8 %26 to i1, !dbg !20485
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then25
  %27 = phi i1 [ false, %if.then25 ], [ %tobool28, %land.rhs ], !dbg !20486
  %lnot = xor i1 %27, true, !dbg !20485
  %lnot30 = xor i1 %lnot, true, !dbg !20485
  %lnot.ext = zext i1 %lnot30 to i32, !dbg !20485
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !20485
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !20487
  %tobool31 = icmp ne i32 %28, 0, !dbg !20487
  %lnot32 = xor i1 %tobool31, true, !dbg !20487
  %lnot34 = xor i1 %lnot32, true, !dbg !20487
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !20487
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !20487
  %tobool37 = icmp ne i64 %conv36, 0, !dbg !20487
  br i1 %tobool37, label %if.then38, label %if.end47, !dbg !20485

if.then38:                                        ; preds = %land.end
  br label %do.body39, !dbg !20487

do.body39:                                        ; preds = %if.then38
  br label %do.body40, !dbg !20489

do.body40:                                        ; preds = %do.body39
  br label %do.end41, !dbg !20491

do.end41:                                         ; preds = %do.body40
  br label %do.body42, !dbg !20489

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 3220, i32 2305, i64 12) #9, !dbg !20493, !srcloc !20495
  br label %do.end43, !dbg !20493

do.end43:                                         ; preds = %do.body42
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 715) #9, !dbg !20496, !srcloc !20498
  br label %do.body44, !dbg !20489

do.body44:                                        ; preds = %do.end43
  br label %do.end45, !dbg !20499

do.end45:                                         ; preds = %do.body44
  br label %do.end46, !dbg !20489

do.end46:                                         ; preds = %do.end45
  br label %if.end47, !dbg !20489

if.end47:                                         ; preds = %do.end46, %land.end
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !20485
  %tobool48 = icmp ne i32 %29, 0, !dbg !20485
  %lnot49 = xor i1 %tobool48, true, !dbg !20485
  %lnot51 = xor i1 %lnot49, true, !dbg !20485
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !20485
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !20485
  store i64 %conv53, i64* %tmp, align 8, !dbg !20487
  %30 = load i64, i64* %tmp, align 8, !dbg !20485
  %tobool54 = icmp ne i64 %30, 0, !dbg !20501
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !20502

if.then55:                                        ; preds = %if.end47
  %31 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20503
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %31) #8, !dbg !20505
  store i32 -22, i32* %retval, align 4, !dbg !20506
  br label %return, !dbg !20506

if.end56:                                         ; preds = %if.end47
  %32 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20507
  %33 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20508
  call void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %32, %struct.net_device* %33) #8, !dbg !20509
  %34 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20510
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %34) #8, !dbg !20511
  store i32 0, i32* %retval, align 4, !dbg !20512
  br label %return, !dbg !20512

if.end57:                                         ; preds = %if.end21
  %35 = load i8, i8* %flag_pvid.addr, align 1, !dbg !20513
  %tobool58 = trunc i8 %35 to i1, !dbg !20513
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !20515

if.then59:                                        ; preds = %if.end57
  %36 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20516
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %36) #8, !dbg !20518
  store i32 0, i32* %retval, align 4, !dbg !20519
  br label %return, !dbg !20519

if.end60:                                         ; preds = %if.end57
  %37 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20520
  %38 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20521
  call void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %37, %struct.net_device* %38) #8, !dbg !20522
  %39 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20523
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %39) #8, !dbg !20524
  %40 = load i8, i8* %flag_untagged.addr, align 1, !dbg !20525
  %tobool61 = trunc i8 %40 to i1, !dbg !20525
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !20527

if.then62:                                        ; preds = %if.end60
  store i32 0, i32* %retval, align 4, !dbg !20528
  br label %return, !dbg !20528

if.end63:                                         ; preds = %if.end60
  %41 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !20529
  %42 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20530
  %43 = load i16, i16* %vid.addr, align 2, !dbg !20531
  %44 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20532
  %call64 = call i32 @mlxsw_sp_bridge_8021q_vxlan_join(%struct.mlxsw_sp_bridge_device* %41, %struct.net_device* %42, i16 zeroext %43, %struct.netlink_ext_ack* %44) #8, !dbg !20533
  store i32 %call64, i32* %err, align 4, !dbg !20534
  %45 = load i32, i32* %err, align 4, !dbg !20535
  %tobool65 = icmp ne i32 %45, 0, !dbg !20535
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !20537

if.then66:                                        ; preds = %if.end63
  br label %err_vxlan_join, !dbg !20538

if.end67:                                         ; preds = %if.end63
  store i32 0, i32* %retval, align 4, !dbg !20539
  br label %return, !dbg !20539

err_vxlan_join:                                   ; preds = %if.then66
  call void @llvm.dbg.label(metadata !20540), !dbg !20541
  %46 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !20542
  %47 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20543
  %48 = load i16, i16* %old_vid, align 2, !dbg !20544
  %call68 = call i32 @mlxsw_sp_bridge_8021q_vxlan_join(%struct.mlxsw_sp_bridge_device* %46, %struct.net_device* %47, i16 zeroext %48, %struct.netlink_ext_ack* null) #8, !dbg !20545
  %49 = load i32, i32* %err, align 4, !dbg !20546
  store i32 %49, i32* %retval, align 4, !dbg !20547
  br label %return, !dbg !20547

return:                                           ; preds = %err_vxlan_join, %if.end67, %if.then62, %if.then59, %if.end56, %if.then55, %if.end19, %if.then18, %if.then11, %do.end
  %50 = load i32, i32* %retval, align 4, !dbg !20548
  ret i32 %50, !dbg !20548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device* @mlxsw_sp_bridge_8021q_vxlan_dev_find(%struct.net_device* %br_dev, i16 zeroext %vid) #0 !dbg !20549 {
entry:
  %retval = alloca %struct.net_device*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  %pvid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !20552, metadata !DIExpression()), !dbg !20553
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !20554, metadata !DIExpression()), !dbg !20555
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20556, metadata !DIExpression()), !dbg !20557
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !20558, metadata !DIExpression()), !dbg !20559
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20560
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 14, !dbg !20560
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !20560
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !20560
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20560
  store %struct.list_head* %1, %struct.list_head** %iter, align 8, !dbg !20560
  %2 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20560
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %2, %struct.list_head** %iter) #8, !dbg !20560
  %3 = bitcast i8* %call to %struct.net_device*, !dbg !20560
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !20560
  br label %for.cond, !dbg !20560

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20562
  %tobool = icmp ne %struct.net_device* %4, null, !dbg !20560
  br i1 %tobool, label %for.body, label %for.end, !dbg !20560

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %pvid, metadata !20564, metadata !DIExpression()), !dbg !20566
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20567, metadata !DIExpression()), !dbg !20568
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20569
  %call1 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %5) #8, !dbg !20571
  br i1 %call1, label %if.end, label %if.then, !dbg !20572

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !20573

if.end:                                           ; preds = %for.body
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20574
  %call2 = call i32 @mlxsw_sp_vxlan_mapped_vid(%struct.net_device* %6, i16* %pvid) #8, !dbg !20575
  store i32 %call2, i32* %err, align 4, !dbg !20576
  %7 = load i32, i32* %err, align 4, !dbg !20577
  %tobool3 = icmp ne i32 %7, 0, !dbg !20577
  br i1 %tobool3, label %if.then6, label %lor.lhs.false, !dbg !20579

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i16, i16* %pvid, align 2, !dbg !20580
  %conv = zext i16 %8 to i32, !dbg !20580
  %9 = load i16, i16* %vid.addr, align 2, !dbg !20581
  %conv4 = zext i16 %9 to i32, !dbg !20581
  %cmp = icmp ne i32 %conv, %conv4, !dbg !20582
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !20583

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.inc, !dbg !20584

if.end7:                                          ; preds = %lor.lhs.false
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20585
  store %struct.net_device* %10, %struct.net_device** %retval, align 8, !dbg !20586
  br label %return, !dbg !20586

for.inc:                                          ; preds = %if.then6, %if.then
  %11 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20562
  %call8 = call i8* @netdev_lower_get_next(%struct.net_device* %11, %struct.list_head** %iter) #8, !dbg !20562
  %12 = bitcast i8* %call8 to %struct.net_device*, !dbg !20562
  store %struct.net_device* %12, %struct.net_device** %dev, align 8, !dbg !20562
  br label %for.cond, !dbg !20562, !llvm.loop !20587

for.end:                                          ; preds = %for.cond
  store %struct.net_device* null, %struct.net_device** %retval, align 8, !dbg !20589
  br label %return, !dbg !20589

return:                                           ; preds = %for.end, %if.end7
  %13 = load %struct.net_device*, %struct.net_device** %retval, align 8, !dbg !20590
  ret %struct.net_device* %13, !dbg !20590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_vlans_add(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_obj_port_vlan* %vlan, %struct.switchdev_trans* %trans, %struct.netlink_ext_ack* %extack) #0 !dbg !20591 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vlan.addr = alloca %struct.switchdev_obj_port_vlan*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %flag_untagged = alloca i8, align 1
  %flag_pvid = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %orig_dev = alloca %struct.net_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %err60 = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !20594, metadata !DIExpression()), !dbg !20595
  store %struct.switchdev_obj_port_vlan* %vlan, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_vlan** %vlan.addr, metadata !20596, metadata !DIExpression()), !dbg !20597
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !20598, metadata !DIExpression()), !dbg !20599
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !20600, metadata !DIExpression()), !dbg !20601
  call void @llvm.dbg.declare(metadata i8* %flag_untagged, metadata !20602, metadata !DIExpression()), !dbg !20603
  %0 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20604
  %flags = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %0, i32 0, i32 1, !dbg !20605
  %1 = load i16, i16* %flags, align 8, !dbg !20605
  %conv = zext i16 %1 to i32, !dbg !20604
  %and = and i32 %conv, 4, !dbg !20606
  %tobool = icmp ne i32 %and, 0, !dbg !20604
  %frombool = zext i1 %tobool to i8, !dbg !20603
  store i8 %frombool, i8* %flag_untagged, align 1, !dbg !20603
  call void @llvm.dbg.declare(metadata i8* %flag_pvid, metadata !20607, metadata !DIExpression()), !dbg !20608
  %2 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20609
  %flags1 = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %2, i32 0, i32 1, !dbg !20610
  %3 = load i16, i16* %flags1, align 8, !dbg !20610
  %conv2 = zext i16 %3 to i32, !dbg !20609
  %and3 = and i32 %conv2, 2, !dbg !20611
  %tobool4 = icmp ne i32 %and3, 0, !dbg !20609
  %frombool5 = zext i1 %tobool4 to i8, !dbg !20608
  store i8 %frombool5, i8* %flag_pvid, align 1, !dbg !20608
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !20612, metadata !DIExpression()), !dbg !20613
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20614
  %mlxsw_sp6 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 2, !dbg !20615
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp6, align 8, !dbg !20615
  store %struct.mlxsw_sp* %5, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20613
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev, metadata !20616, metadata !DIExpression()), !dbg !20617
  %6 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20618
  %obj = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %6, i32 0, i32 0, !dbg !20619
  %orig_dev7 = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %obj, i32 0, i32 0, !dbg !20620
  %7 = load %struct.net_device*, %struct.net_device** %orig_dev7, align 8, !dbg !20620
  store %struct.net_device* %7, %struct.net_device** %orig_dev, align 8, !dbg !20617
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !20621, metadata !DIExpression()), !dbg !20622
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !20623, metadata !DIExpression()), !dbg !20624
  %8 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !20625
  %call = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %8) #8, !dbg !20627
  br i1 %call, label %if.then, label %if.end22, !dbg !20628

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20629, metadata !DIExpression()), !dbg !20631
  store i32 0, i32* %err, align 4, !dbg !20631
  %9 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20632
  %flags8 = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %9, i32 0, i32 1, !dbg !20634
  %10 = load i16, i16* %flags8, align 8, !dbg !20634
  %conv9 = zext i16 %10 to i32, !dbg !20632
  %and10 = and i32 %conv9, 32, !dbg !20635
  %tobool11 = icmp ne i32 %and10, 0, !dbg !20635
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !20636

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !20637
  %call12 = call zeroext i1 @br_vlan_enabled(%struct.net_device* %11) #8, !dbg !20638
  br i1 %call12, label %land.lhs.true14, label %if.end, !dbg !20639

land.lhs.true14:                                  ; preds = %land.lhs.true
  %12 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !20640
  %call15 = call zeroext i1 @switchdev_trans_ph_prepare(%struct.switchdev_trans* %12) #8, !dbg !20641
  br i1 %call15, label %if.then17, label %if.end, !dbg !20642

if.then17:                                        ; preds = %land.lhs.true14
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20643
  %14 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !20644
  %15 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20645
  %call18 = call i32 @mlxsw_sp_br_ban_rif_pvid_change(%struct.mlxsw_sp* %13, %struct.net_device* %14, %struct.switchdev_obj_port_vlan* %15) #8, !dbg !20646
  store i32 %call18, i32* %err, align 4, !dbg !20647
  br label %if.end, !dbg !20648

if.end:                                           ; preds = %if.then17, %land.lhs.true14, %land.lhs.true, %if.then
  %16 = load i32, i32* %err, align 4, !dbg !20649
  %tobool19 = icmp ne i32 %16, 0, !dbg !20649
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !20651

if.then20:                                        ; preds = %if.end
  store i32 -95, i32* %err, align 4, !dbg !20652
  br label %if.end21, !dbg !20653

if.end21:                                         ; preds = %if.then20, %if.end
  %17 = load i32, i32* %err, align 4, !dbg !20654
  store i32 %17, i32* %retval, align 4, !dbg !20655
  br label %return, !dbg !20655

if.end22:                                         ; preds = %entry
  %18 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !20656
  %call23 = call zeroext i1 @switchdev_trans_ph_commit(%struct.switchdev_trans* %18) #8, !dbg !20658
  br i1 %call23, label %if.then24, label %if.end25, !dbg !20659

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !20660
  br label %return, !dbg !20660

if.end25:                                         ; preds = %if.end22
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20661
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %19, i32 0, i32 8, !dbg !20662
  %20 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !20662
  %21 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !20663
  %call26 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %20, %struct.net_device* %21) #8, !dbg !20664
  store %struct.mlxsw_sp_bridge_port* %call26, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20665
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !20666, metadata !DIExpression()), !dbg !20669
  %22 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20669
  %tobool27 = icmp ne %struct.mlxsw_sp_bridge_port* %22, null, !dbg !20669
  %lnot = xor i1 %tobool27, true, !dbg !20669
  %lnot28 = xor i1 %lnot, true, !dbg !20669
  %lnot29 = xor i1 %lnot28, true, !dbg !20669
  %lnot.ext = zext i1 %lnot29 to i32, !dbg !20669
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !20669
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !20670
  %tobool30 = icmp ne i32 %23, 0, !dbg !20670
  %lnot31 = xor i1 %tobool30, true, !dbg !20670
  %lnot33 = xor i1 %lnot31, true, !dbg !20670
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !20670
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !20670
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !20670
  br i1 %tobool36, label %if.then37, label %if.end44, !dbg !20669

if.then37:                                        ; preds = %if.end25
  br label %do.body, !dbg !20670

do.body:                                          ; preds = %if.then37
  br label %do.body38, !dbg !20672

do.body38:                                        ; preds = %do.body
  br label %do.end, !dbg !20674

do.end:                                           ; preds = %do.body38
  br label %do.body39, !dbg !20672

do.body39:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 1233, i32 2305, i64 12) #9, !dbg !20676, !srcloc !20678
  br label %do.end40, !dbg !20676

do.end40:                                         ; preds = %do.body39
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 687) #9, !dbg !20679, !srcloc !20681
  br label %do.body41, !dbg !20672

do.body41:                                        ; preds = %do.end40
  br label %do.end42, !dbg !20682

do.end42:                                         ; preds = %do.body41
  br label %do.end43, !dbg !20672

do.end43:                                         ; preds = %do.end42
  br label %if.end44, !dbg !20672

if.end44:                                         ; preds = %do.end43, %if.end25
  %24 = load i32, i32* %__ret_warn_on, align 4, !dbg !20669
  %tobool45 = icmp ne i32 %24, 0, !dbg !20669
  %lnot46 = xor i1 %tobool45, true, !dbg !20669
  %lnot48 = xor i1 %lnot46, true, !dbg !20669
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !20669
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !20669
  store i64 %conv50, i64* %tmp, align 8, !dbg !20670
  %25 = load i64, i64* %tmp, align 8, !dbg !20669
  %tobool51 = icmp ne i64 %25, 0, !dbg !20684
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !20685

if.then52:                                        ; preds = %if.end44
  store i32 -22, i32* %retval, align 4, !dbg !20686
  br label %return, !dbg !20686

if.end53:                                         ; preds = %if.end44
  %26 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20687
  %bridge_device = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %26, i32 0, i32 1, !dbg !20689
  %27 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20689
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %27, i32 0, i32 4, !dbg !20690
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !20690
  %bf.clear = and i8 %bf.load, 1, !dbg !20690
  %tobool54 = icmp ne i8 %bf.clear, 0, !dbg !20687
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !20691

if.then55:                                        ; preds = %if.end53
  store i32 0, i32* %retval, align 4, !dbg !20692
  br label %return, !dbg !20692

if.end56:                                         ; preds = %if.end53
  %28 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20693
  %vid_begin = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %28, i32 0, i32 2, !dbg !20695
  %29 = load i16, i16* %vid_begin, align 2, !dbg !20695
  store i16 %29, i16* %vid, align 2, !dbg !20696
  br label %for.cond, !dbg !20697

for.cond:                                         ; preds = %for.inc, %if.end56
  %30 = load i16, i16* %vid, align 2, !dbg !20698
  %conv57 = zext i16 %30 to i32, !dbg !20698
  %31 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20700
  %vid_end = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %31, i32 0, i32 3, !dbg !20701
  %32 = load i16, i16* %vid_end, align 4, !dbg !20701
  %conv58 = zext i16 %32 to i32, !dbg !20700
  %cmp = icmp sle i32 %conv57, %conv58, !dbg !20702
  br i1 %cmp, label %for.body, label %for.end, !dbg !20703

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %err60, metadata !20704, metadata !DIExpression()), !dbg !20706
  %33 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20707
  %34 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20708
  %35 = load i16, i16* %vid, align 2, !dbg !20709
  %36 = load i8, i8* %flag_untagged, align 1, !dbg !20710
  %tobool61 = trunc i8 %36 to i1, !dbg !20710
  %37 = load i8, i8* %flag_pvid, align 1, !dbg !20711
  %tobool62 = trunc i8 %37 to i1, !dbg !20711
  %38 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20712
  %call63 = call i32 @mlxsw_sp_bridge_port_vlan_add(%struct.mlxsw_sp_port* %33, %struct.mlxsw_sp_bridge_port* %34, i16 zeroext %35, i1 zeroext %tobool61, i1 zeroext %tobool62, %struct.netlink_ext_ack* %38) #8, !dbg !20713
  store i32 %call63, i32* %err60, align 4, !dbg !20714
  %39 = load i32, i32* %err60, align 4, !dbg !20715
  %tobool64 = icmp ne i32 %39, 0, !dbg !20715
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !20717

if.then65:                                        ; preds = %for.body
  %40 = load i32, i32* %err60, align 4, !dbg !20718
  store i32 %40, i32* %retval, align 4, !dbg !20719
  br label %return, !dbg !20719

if.end66:                                         ; preds = %for.body
  br label %for.inc, !dbg !20720

for.inc:                                          ; preds = %if.end66
  %41 = load i16, i16* %vid, align 2, !dbg !20721
  %inc = add i16 %41, 1, !dbg !20721
  store i16 %inc, i16* %vid, align 2, !dbg !20721
  br label %for.cond, !dbg !20722, !llvm.loop !20723

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !20725
  br label %return, !dbg !20725

return:                                           ; preds = %for.end, %if.then65, %if.then55, %if.then52, %if.then24, %if.end21
  %42 = load i32, i32* %retval, align 4, !dbg !20726
  ret i32 %42, !dbg !20726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_mdb_add(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_obj_port_mdb* %mdb, %struct.switchdev_trans* %trans) #0 !dbg !20727 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mdb.addr = alloca %struct.switchdev_obj_port_mdb*, align 8
  %trans.addr = alloca %struct.switchdev_trans*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %orig_dev = alloca %struct.net_device*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %dev = alloca %struct.net_device*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %fid_index = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !20732, metadata !DIExpression()), !dbg !20733
  store %struct.switchdev_obj_port_mdb* %mdb, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_mdb** %mdb.addr, metadata !20734, metadata !DIExpression()), !dbg !20735
  store %struct.switchdev_trans* %trans, %struct.switchdev_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_trans** %trans.addr, metadata !20736, metadata !DIExpression()), !dbg !20737
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !20738, metadata !DIExpression()), !dbg !20739
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20740
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !20741
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !20741
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20739
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev, metadata !20742, metadata !DIExpression()), !dbg !20743
  %2 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8, !dbg !20744
  %obj = getelementptr inbounds %struct.switchdev_obj_port_mdb, %struct.switchdev_obj_port_mdb* %2, i32 0, i32 0, !dbg !20745
  %orig_dev2 = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %obj, i32 0, i32 0, !dbg !20746
  %3 = load %struct.net_device*, %struct.net_device** %orig_dev2, align 8, !dbg !20746
  store %struct.net_device* %3, %struct.net_device** %orig_dev, align 8, !dbg !20743
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !20747, metadata !DIExpression()), !dbg !20748
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20749, metadata !DIExpression()), !dbg !20750
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20751
  %dev3 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 0, !dbg !20752
  %5 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !20752
  store %struct.net_device* %5, %struct.net_device** %dev, align 8, !dbg !20750
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !20753, metadata !DIExpression()), !dbg !20754
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !20755, metadata !DIExpression()), !dbg !20756
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !20757, metadata !DIExpression()), !dbg !20758
  call void @llvm.dbg.declare(metadata i16* %fid_index, metadata !20759, metadata !DIExpression()), !dbg !20760
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20761, metadata !DIExpression()), !dbg !20762
  store i32 0, i32* %err, align 4, !dbg !20762
  %6 = load %struct.switchdev_trans*, %struct.switchdev_trans** %trans.addr, align 8, !dbg !20763
  %call = call zeroext i1 @switchdev_trans_ph_commit(%struct.switchdev_trans* %6) #8, !dbg !20765
  br i1 %call, label %if.then, label %if.end, !dbg !20766

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20767
  br label %return, !dbg !20767

if.end:                                           ; preds = %entry
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20768
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 8, !dbg !20769
  %8 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !20769
  %9 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !20770
  %call4 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %8, %struct.net_device* %9) #8, !dbg !20771
  store %struct.mlxsw_sp_bridge_port* %call4, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20772
  %10 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20773
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %10, null, !dbg !20773
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !20775

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !20776
  br label %return, !dbg !20776

if.end6:                                          ; preds = %if.end
  %11 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20777
  %bridge_device7 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %11, i32 0, i32 1, !dbg !20778
  %12 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device7, align 8, !dbg !20778
  store %struct.mlxsw_sp_bridge_device* %12, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20779
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20780
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20781
  %15 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8, !dbg !20782
  %vid = getelementptr inbounds %struct.switchdev_obj_port_mdb, %struct.switchdev_obj_port_mdb* %15, i32 0, i32 2, !dbg !20783
  %16 = load i16, i16* %vid, align 2, !dbg !20783
  %call8 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_bridge(%struct.mlxsw_sp_port* %13, %struct.mlxsw_sp_bridge_device* %14, i16 zeroext %16) #8, !dbg !20784
  store %struct.mlxsw_sp_port_vlan* %call8, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20785
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20786
  %tobool9 = icmp ne %struct.mlxsw_sp_port_vlan* %17, null, !dbg !20786
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !20788

if.then10:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !20789
  br label %return, !dbg !20789

if.end11:                                         ; preds = %if.end6
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20790
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %18, i32 0, i32 2, !dbg !20791
  %19 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !20791
  %call12 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %19) #8, !dbg !20792
  store i16 %call12, i16* %fid_index, align 2, !dbg !20793
  %20 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20794
  %21 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8, !dbg !20795
  %addr = getelementptr inbounds %struct.switchdev_obj_port_mdb, %struct.switchdev_obj_port_mdb* %21, i32 0, i32 1, !dbg !20796
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !20795
  %22 = load i16, i16* %fid_index, align 2, !dbg !20797
  %call13 = call %struct.mlxsw_sp_mid* @__mlxsw_sp_mc_get(%struct.mlxsw_sp_bridge_device* %20, i8* %arraydecay, i16 zeroext %22) #8, !dbg !20798
  store %struct.mlxsw_sp_mid* %call13, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !20799
  %23 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !20800
  %tobool14 = icmp ne %struct.mlxsw_sp_mid* %23, null, !dbg !20800
  br i1 %tobool14, label %if.end22, label %if.then15, !dbg !20802

if.then15:                                        ; preds = %if.end11
  %24 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20803
  %25 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20805
  %26 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8, !dbg !20806
  %addr16 = getelementptr inbounds %struct.switchdev_obj_port_mdb, %struct.switchdev_obj_port_mdb* %26, i32 0, i32 1, !dbg !20807
  %arraydecay17 = getelementptr inbounds [6 x i8], [6 x i8]* %addr16, i64 0, i64 0, !dbg !20806
  %27 = load i16, i16* %fid_index, align 2, !dbg !20808
  %call18 = call %struct.mlxsw_sp_mid* @__mlxsw_sp_mc_alloc(%struct.mlxsw_sp* %24, %struct.mlxsw_sp_bridge_device* %25, i8* %arraydecay17, i16 zeroext %27) #8, !dbg !20809
  store %struct.mlxsw_sp_mid* %call18, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !20810
  %28 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !20811
  %tobool19 = icmp ne %struct.mlxsw_sp_mid* %28, null, !dbg !20811
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !20813

if.then20:                                        ; preds = %if.then15
  %29 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20814
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %29, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i64 0, i64 0)) #12, !dbg !20816
  store i32 -12, i32* %retval, align 4, !dbg !20817
  br label %return, !dbg !20817

if.end21:                                         ; preds = %if.then15
  br label %if.end22, !dbg !20818

if.end22:                                         ; preds = %if.end21, %if.end11
  %30 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20819
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %30, i32 0, i32 3, !dbg !20820
  %31 = load i8, i8* %local_port, align 8, !dbg !20820
  %conv = zext i8 %31 to i64, !dbg !20819
  %32 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !20821
  %ports_in_mid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %32, i32 0, i32 5, !dbg !20822
  %33 = load i64*, i64** %ports_in_mid, align 8, !dbg !20822
  call void @set_bit(i64 %conv, i64* %33) #8, !dbg !20823
  %34 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !20824
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %34, i32 0, i32 4, !dbg !20826
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !20826
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !20826
  %bf.clear = and i8 %bf.lshr, 1, !dbg !20826
  %tobool23 = icmp ne i8 %bf.clear, 0, !dbg !20824
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !20827

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !20828
  br label %return, !dbg !20828

if.end25:                                         ; preds = %if.end22
  %35 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !20829
  %mrouter = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %35, i32 0, i32 7, !dbg !20831
  %36 = load i8, i8* %mrouter, align 8, !dbg !20831
  %tobool26 = trunc i8 %36 to i1, !dbg !20831
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !20832

if.then27:                                        ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !20833
  br label %return, !dbg !20833

if.end28:                                         ; preds = %if.end25
  %37 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20834
  %38 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !20835
  %mid29 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %38, i32 0, i32 3, !dbg !20836
  %39 = load i16, i16* %mid29, align 8, !dbg !20836
  %call30 = call i32 @mlxsw_sp_port_smid_set(%struct.mlxsw_sp_port* %37, i16 zeroext %39, i1 zeroext true) #8, !dbg !20837
  store i32 %call30, i32* %err, align 4, !dbg !20838
  %40 = load i32, i32* %err, align 4, !dbg !20839
  %tobool31 = icmp ne i32 %40, 0, !dbg !20839
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !20841

if.then32:                                        ; preds = %if.end28
  %41 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20842
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %41, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87, i64 0, i64 0)) #12, !dbg !20844
  br label %err_out, !dbg !20845

if.end33:                                         ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !20846
  br label %return, !dbg !20846

err_out:                                          ; preds = %if.then32
  call void @llvm.dbg.label(metadata !20847), !dbg !20848
  %42 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20849
  %43 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !20850
  %call34 = call i32 @mlxsw_sp_port_remove_from_mid(%struct.mlxsw_sp_port* %42, %struct.mlxsw_sp_mid* %43) #8, !dbg !20851
  %44 = load i32, i32* %err, align 4, !dbg !20852
  store i32 %44, i32* %retval, align 4, !dbg !20853
  br label %return, !dbg !20853

return:                                           ; preds = %err_out, %if.end33, %if.then27, %if.then24, %if.then20, %if.then10, %if.then5, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !20854
  ret i32 %45, !dbg !20854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_br_ban_rif_pvid_change(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %br_dev, %struct.switchdev_obj_port_vlan* %vlan) #0 !dbg !20855 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %vlan.addr = alloca %struct.switchdev_obj_port_vlan*, align 8
  %pvid = alloca i16, align 2
  %vid = alloca i16, align 2
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !20858, metadata !DIExpression()), !dbg !20859
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !20860, metadata !DIExpression()), !dbg !20861
  store %struct.switchdev_obj_port_vlan* %vlan, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_vlan** %vlan.addr, metadata !20862, metadata !DIExpression()), !dbg !20863
  call void @llvm.dbg.declare(metadata i16* %pvid, metadata !20864, metadata !DIExpression()), !dbg !20865
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !20866, metadata !DIExpression()), !dbg !20867
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20868
  %1 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20869
  %call = call zeroext i16 @mlxsw_sp_rif_vid(%struct.mlxsw_sp* %0, %struct.net_device* %1) #8, !dbg !20870
  store i16 %call, i16* %pvid, align 2, !dbg !20871
  %2 = load i16, i16* %pvid, align 2, !dbg !20872
  %tobool = icmp ne i16 %2, 0, !dbg !20872
  br i1 %tobool, label %if.end, label %if.then, !dbg !20874

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20875
  br label %return, !dbg !20875

if.end:                                           ; preds = %entry
  %3 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20876
  %vid_begin = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %3, i32 0, i32 2, !dbg !20878
  %4 = load i16, i16* %vid_begin, align 2, !dbg !20878
  store i16 %4, i16* %vid, align 2, !dbg !20879
  br label %for.cond, !dbg !20880

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i16, i16* %vid, align 2, !dbg !20881
  %conv = zext i16 %5 to i32, !dbg !20881
  %6 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20883
  %vid_end = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %6, i32 0, i32 3, !dbg !20884
  %7 = load i16, i16* %vid_end, align 4, !dbg !20884
  %conv1 = zext i16 %7 to i32, !dbg !20883
  %cmp = icmp sle i32 %conv, %conv1, !dbg !20885
  br i1 %cmp, label %for.body, label %for.end, !dbg !20886

for.body:                                         ; preds = %for.cond
  %8 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !20887
  %flags = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %8, i32 0, i32 1, !dbg !20890
  %9 = load i16, i16* %flags, align 8, !dbg !20890
  %conv3 = zext i16 %9 to i32, !dbg !20887
  %and = and i32 %conv3, 2, !dbg !20891
  %tobool4 = icmp ne i32 %and, 0, !dbg !20891
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !20892

if.then5:                                         ; preds = %for.body
  %10 = load i16, i16* %vid, align 2, !dbg !20893
  %conv6 = zext i16 %10 to i32, !dbg !20893
  %11 = load i16, i16* %pvid, align 2, !dbg !20896
  %conv7 = zext i16 %11 to i32, !dbg !20896
  %cmp8 = icmp ne i32 %conv6, %conv7, !dbg !20897
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !20898

if.then10:                                        ; preds = %if.then5
  %12 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20899
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %12, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.84, i64 0, i64 0)) #12, !dbg !20901
  store i32 -16, i32* %retval, align 4, !dbg !20902
  br label %return, !dbg !20902

if.end11:                                         ; preds = %if.then5
  br label %if.end18, !dbg !20903

if.else:                                          ; preds = %for.body
  %13 = load i16, i16* %vid, align 2, !dbg !20904
  %conv12 = zext i16 %13 to i32, !dbg !20904
  %14 = load i16, i16* %pvid, align 2, !dbg !20907
  %conv13 = zext i16 %14 to i32, !dbg !20907
  %cmp14 = icmp eq i32 %conv12, %conv13, !dbg !20908
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !20909

if.then16:                                        ; preds = %if.else
  %15 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20910
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %15, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.85, i64 0, i64 0)) #12, !dbg !20912
  store i32 -16, i32* %retval, align 4, !dbg !20913
  br label %return, !dbg !20913

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end11
  br label %for.inc, !dbg !20914

for.inc:                                          ; preds = %if.end18
  %16 = load i16, i16* %vid, align 2, !dbg !20915
  %inc = add i16 %16, 1, !dbg !20915
  store i16 %inc, i16* %vid, align 2, !dbg !20915
  br label %for.cond, !dbg !20916, !llvm.loop !20917

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !20919
  br label %return, !dbg !20919

return:                                           ; preds = %for.end, %if.then16, %if.then10, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !20920
  ret i32 %17, !dbg !20920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_bridge_port_vlan_add(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_port* %bridge_port, i16 zeroext %vid, i1 zeroext %is_untagged, i1 zeroext %is_pvid, %struct.netlink_ext_ack* %extack) #0 !dbg !20921 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid.addr = alloca i16, align 2
  %is_untagged.addr = alloca i8, align 1
  %is_pvid.addr = alloca i8, align 1
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %pvid = alloca i16, align 2
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %old_pvid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !20924, metadata !DIExpression()), !dbg !20925
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !20926, metadata !DIExpression()), !dbg !20927
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !20928, metadata !DIExpression()), !dbg !20929
  %frombool = zext i1 %is_untagged to i8
  store i8 %frombool, i8* %is_untagged.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_untagged.addr, metadata !20930, metadata !DIExpression()), !dbg !20931
  %frombool1 = zext i1 %is_pvid to i8
  store i8 %frombool1, i8* %is_pvid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_pvid.addr, metadata !20932, metadata !DIExpression()), !dbg !20933
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !20934, metadata !DIExpression()), !dbg !20935
  call void @llvm.dbg.declare(metadata i16* %pvid, metadata !20936, metadata !DIExpression()), !dbg !20937
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20938
  %1 = load i16, i16* %vid.addr, align 2, !dbg !20939
  %2 = load i8, i8* %is_pvid.addr, align 1, !dbg !20940
  %tobool = trunc i8 %2 to i1, !dbg !20940
  %call = call zeroext i16 @mlxsw_sp_port_pvid_determine(%struct.mlxsw_sp_port* %0, i16 zeroext %1, i1 zeroext %tobool) #8, !dbg !20941
  store i16 %call, i16* %pvid, align 2, !dbg !20937
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !20942, metadata !DIExpression()), !dbg !20943
  call void @llvm.dbg.declare(metadata i16* %old_pvid, metadata !20944, metadata !DIExpression()), !dbg !20945
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20946
  %pvid2 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 5, !dbg !20947
  %4 = load i16, i16* %pvid2, align 2, !dbg !20947
  store i16 %4, i16* %old_pvid, align 2, !dbg !20945
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20948, metadata !DIExpression()), !dbg !20949
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20950
  %6 = load i16, i16* %vid.addr, align 2, !dbg !20951
  %call3 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %5, i16 zeroext %6) #8, !dbg !20952
  store %struct.mlxsw_sp_port_vlan* %call3, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20953
  %7 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20954
  %tobool4 = icmp ne %struct.mlxsw_sp_port_vlan* %7, null, !dbg !20954
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !20956

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20957
  %bridge_port5 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 4, !dbg !20958
  %9 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port5, align 8, !dbg !20958
  %10 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !20959
  %cmp = icmp ne %struct.mlxsw_sp_bridge_port* %9, %10, !dbg !20960
  br i1 %cmp, label %if.then, label %if.end, !dbg !20961

if.then:                                          ; preds = %land.lhs.true
  store i32 -17, i32* %retval, align 4, !dbg !20962
  br label %return, !dbg !20962

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20963
  %tobool6 = icmp ne %struct.mlxsw_sp_port_vlan* %11, null, !dbg !20963
  br i1 %tobool6, label %if.end13, label %if.then7, !dbg !20965

if.then7:                                         ; preds = %if.end
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20966
  %13 = load i16, i16* %vid.addr, align 2, !dbg !20968
  %call8 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_create(%struct.mlxsw_sp_port* %12, i16 zeroext %13) #8, !dbg !20969
  store %struct.mlxsw_sp_port_vlan* %call8, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20970
  %14 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20971
  %15 = bitcast %struct.mlxsw_sp_port_vlan* %14 to i8*, !dbg !20971
  %call9 = call zeroext i1 @IS_ERR(i8* %15) #8, !dbg !20973
  br i1 %call9, label %if.then10, label %if.end12, !dbg !20974

if.then10:                                        ; preds = %if.then7
  %16 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20975
  %17 = bitcast %struct.mlxsw_sp_port_vlan* %16 to i8*, !dbg !20975
  %call11 = call i64 @PTR_ERR(i8* %17) #8, !dbg !20976
  %conv = trunc i64 %call11 to i32, !dbg !20976
  store i32 %conv, i32* %retval, align 4, !dbg !20977
  br label %return, !dbg !20977

if.end12:                                         ; preds = %if.then7
  br label %if.end13, !dbg !20978

if.end13:                                         ; preds = %if.end12, %if.end
  %18 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20979
  %19 = load i16, i16* %vid.addr, align 2, !dbg !20980
  %20 = load i16, i16* %vid.addr, align 2, !dbg !20981
  %21 = load i8, i8* %is_untagged.addr, align 1, !dbg !20982
  %tobool14 = trunc i8 %21 to i1, !dbg !20982
  %call15 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %18, i16 zeroext %19, i16 zeroext %20, i1 zeroext true, i1 zeroext %tobool14) #8, !dbg !20983
  store i32 %call15, i32* %err, align 4, !dbg !20984
  %22 = load i32, i32* %err, align 4, !dbg !20985
  %tobool16 = icmp ne i32 %22, 0, !dbg !20985
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !20987

if.then17:                                        ; preds = %if.end13
  br label %err_port_vlan_set, !dbg !20988

if.end18:                                         ; preds = %if.end13
  %23 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !20989
  %24 = load i16, i16* %pvid, align 2, !dbg !20990
  %call19 = call i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %23, i16 zeroext %24) #8, !dbg !20991
  store i32 %call19, i32* %err, align 4, !dbg !20992
  %25 = load i32, i32* %err, align 4, !dbg !20993
  %tobool20 = icmp ne i32 %25, 0, !dbg !20993
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !20995

if.then21:                                        ; preds = %if.end18
  br label %err_port_pvid_set, !dbg !20996

if.end22:                                         ; preds = %if.end18
  %26 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !20997
  %27 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8, !dbg !20998
  %28 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20999
  %call23 = call i32 @mlxsw_sp_port_vlan_bridge_join(%struct.mlxsw_sp_port_vlan* %26, %struct.mlxsw_sp_bridge_port* %27, %struct.netlink_ext_ack* %28) #8, !dbg !21000
  store i32 %call23, i32* %err, align 4, !dbg !21001
  %29 = load i32, i32* %err, align 4, !dbg !21002
  %tobool24 = icmp ne i32 %29, 0, !dbg !21002
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !21004

if.then25:                                        ; preds = %if.end22
  br label %err_port_vlan_bridge_join, !dbg !21005

if.end26:                                         ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !21006
  br label %return, !dbg !21006

err_port_vlan_bridge_join:                        ; preds = %if.then25
  call void @llvm.dbg.label(metadata !21007), !dbg !21008
  %30 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21009
  %31 = load i16, i16* %old_pvid, align 2, !dbg !21010
  %call27 = call i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %30, i16 zeroext %31) #8, !dbg !21011
  br label %err_port_pvid_set, !dbg !21011

err_port_pvid_set:                                ; preds = %err_port_vlan_bridge_join, %if.then21
  call void @llvm.dbg.label(metadata !21012), !dbg !21013
  %32 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21014
  %33 = load i16, i16* %vid.addr, align 2, !dbg !21015
  %34 = load i16, i16* %vid.addr, align 2, !dbg !21016
  %call28 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %32, i16 zeroext %33, i16 zeroext %34, i1 zeroext false, i1 zeroext false) #8, !dbg !21017
  br label %err_port_vlan_set, !dbg !21017

err_port_vlan_set:                                ; preds = %err_port_pvid_set, %if.then17
  call void @llvm.dbg.label(metadata !21018), !dbg !21019
  %35 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21020
  call void @mlxsw_sp_port_vlan_destroy(%struct.mlxsw_sp_port_vlan* %35) #8, !dbg !21021
  %36 = load i32, i32* %err, align 4, !dbg !21022
  store i32 %36, i32* %retval, align 4, !dbg !21023
  br label %return, !dbg !21023

return:                                           ; preds = %err_port_vlan_set, %if.end26, %if.then10, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !21024
  ret i32 %37, !dbg !21024
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @mlxsw_sp_rif_vid(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlxsw_sp_port_pvid_determine(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid, i1 zeroext %is_pvid) #0 !dbg !21025 {
entry:
  %retval = alloca i16, align 2
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %is_pvid.addr = alloca i8, align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21028, metadata !DIExpression()), !dbg !21029
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !21030, metadata !DIExpression()), !dbg !21031
  %frombool = zext i1 %is_pvid to i8
  store i8 %frombool, i8* %is_pvid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_pvid.addr, metadata !21032, metadata !DIExpression()), !dbg !21033
  %0 = load i8, i8* %is_pvid.addr, align 1, !dbg !21034
  %tobool = trunc i8 %0 to i1, !dbg !21034
  br i1 %tobool, label %if.then, label %if.else, !dbg !21036

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %vid.addr, align 2, !dbg !21037
  store i16 %1, i16* %retval, align 2, !dbg !21038
  br label %return, !dbg !21038

if.else:                                          ; preds = %entry
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21039
  %pvid = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 5, !dbg !21041
  %3 = load i16, i16* %pvid, align 2, !dbg !21041
  %conv = zext i16 %3 to i32, !dbg !21039
  %4 = load i16, i16* %vid.addr, align 2, !dbg !21042
  %conv1 = zext i16 %4 to i32, !dbg !21042
  %cmp = icmp eq i32 %conv, %conv1, !dbg !21043
  br i1 %cmp, label %if.then3, label %if.else4, !dbg !21044

if.then3:                                         ; preds = %if.else
  store i16 0, i16* %retval, align 2, !dbg !21045
  br label %return, !dbg !21045

if.else4:                                         ; preds = %if.else
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21046
  %pvid5 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %5, i32 0, i32 5, !dbg !21047
  %6 = load i16, i16* %pvid5, align 2, !dbg !21047
  store i16 %6, i16* %retval, align 2, !dbg !21048
  br label %return, !dbg !21048

return:                                           ; preds = %if.else4, %if.then3, %if.then
  %7 = load i16, i16* %retval, align 2, !dbg !21049
  ret i16 %7, !dbg !21049
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_create(%struct.mlxsw_sp_port*, i16 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port*, i16 zeroext, i16 zeroext, i1 zeroext, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_vlan_destroy(%struct.mlxsw_sp_port_vlan*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_mid* @__mlxsw_sp_mc_get(%struct.mlxsw_sp_bridge_device* %bridge_device, i8* %addr, i16 zeroext %fid) #0 !dbg !21050 {
entry:
  %retval = alloca %struct.mlxsw_sp_mid*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %addr.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_mid*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.mlxsw_sp_mid*, align 8
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !21053, metadata !DIExpression()), !dbg !21054
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !21055, metadata !DIExpression()), !dbg !21056
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !21057, metadata !DIExpression()), !dbg !21058
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !21059, metadata !DIExpression()), !dbg !21060
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21061, metadata !DIExpression()), !dbg !21064
  %0 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !21064
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %0, i32 0, i32 3, !dbg !21064
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mids_list, i32 0, i32 0, !dbg !21064
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !21064
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !21064
  store i8* %2, i8** %__mptr, align 8, !dbg !21064
  br label %do.body, !dbg !21064

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21065

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !21064
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !21064
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_mid*, !dbg !21064
  store %struct.mlxsw_sp_mid* %4, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !21065
  %5 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp, align 8, !dbg !21064
  store %struct.mlxsw_sp_mid* %5, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21067
  br label %for.cond, !dbg !21067

for.cond:                                         ; preds = %do.end11, %do.end
  %6 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21068
  %list = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %6, i32 0, i32 0, !dbg !21068
  %7 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !21068
  %mids_list1 = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %7, i32 0, i32 3, !dbg !21068
  %cmp = icmp eq %struct.list_head* %list, %mids_list1, !dbg !21068
  %lnot = xor i1 %cmp, true, !dbg !21068
  br i1 %lnot, label %for.body, label %for.end, !dbg !21067

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21070
  %addr2 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %8, i32 0, i32 1, !dbg !21073
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr2, i64 0, i64 0, !dbg !21070
  %9 = load i8*, i8** %addr.addr, align 8, !dbg !21074
  %call = call zeroext i1 @ether_addr_equal(i8* %arraydecay, i8* %9) #8, !dbg !21075
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !21076

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21077
  %fid3 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %10, i32 0, i32 2, !dbg !21078
  %11 = load i16, i16* %fid3, align 2, !dbg !21078
  %conv = zext i16 %11 to i32, !dbg !21077
  %12 = load i16, i16* %fid.addr, align 2, !dbg !21079
  %conv4 = zext i16 %12 to i32, !dbg !21079
  %cmp5 = icmp eq i32 %conv, %conv4, !dbg !21080
  br i1 %cmp5, label %if.then, label %if.end, !dbg !21081

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21082
  store %struct.mlxsw_sp_mid* %13, %struct.mlxsw_sp_mid** %retval, align 8, !dbg !21083
  br label %return, !dbg !21083

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !21084

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !21085, metadata !DIExpression()), !dbg !21087
  %14 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21087
  %list8 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %14, i32 0, i32 0, !dbg !21087
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !21087
  %15 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !21087
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !21087
  store i8* %16, i8** %__mptr7, align 8, !dbg !21087
  br label %do.body10, !dbg !21087

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !21088

do.end11:                                         ; preds = %do.body10
  %17 = load i8*, i8** %__mptr7, align 8, !dbg !21087
  %add.ptr13 = getelementptr i8, i8* %17, i64 0, !dbg !21087
  %18 = bitcast i8* %add.ptr13 to %struct.mlxsw_sp_mid*, !dbg !21087
  store %struct.mlxsw_sp_mid* %18, %struct.mlxsw_sp_mid** %tmp12, align 8, !dbg !21088
  %19 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %tmp12, align 8, !dbg !21087
  store %struct.mlxsw_sp_mid* %19, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21068
  br label %for.cond, !dbg !21068, !llvm.loop !21090

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_mid* null, %struct.mlxsw_sp_mid** %retval, align 8, !dbg !21092
  br label %return, !dbg !21092

return:                                           ; preds = %for.end, %if.then
  %20 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %retval, align 8, !dbg !21093
  ret %struct.mlxsw_sp_mid* %20, !dbg !21093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_mid* @__mlxsw_sp_mc_alloc(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_bridge_device* %bridge_device, i8* %addr, i16 zeroext %fid) #0 !dbg !21094 {
entry:
  %retval = alloca %struct.mlxsw_sp_mid*, align 8
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %addr.addr = alloca i8*, align 8
  %fid.addr = alloca i16, align 2
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %alloc_size = alloca i64, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21097, metadata !DIExpression()), !dbg !21098
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !21099, metadata !DIExpression()), !dbg !21100
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !21101, metadata !DIExpression()), !dbg !21102
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !21103, metadata !DIExpression()), !dbg !21104
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !21105, metadata !DIExpression()), !dbg !21106
  call void @llvm.dbg.declare(metadata i64* %alloc_size, metadata !21107, metadata !DIExpression()), !dbg !21108
  %call = call i8* @kzalloc(i64 40, i32 3264) #8, !dbg !21109
  %0 = bitcast i8* %call to %struct.mlxsw_sp_mid*, !dbg !21109
  store %struct.mlxsw_sp_mid* %0, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21110
  %1 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21111
  %tobool = icmp ne %struct.mlxsw_sp_mid* %1, null, !dbg !21111
  br i1 %tobool, label %if.end, label %if.then, !dbg !21113

if.then:                                          ; preds = %entry
  store %struct.mlxsw_sp_mid* null, %struct.mlxsw_sp_mid** %retval, align 8, !dbg !21114
  br label %return, !dbg !21114

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21115
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 1, !dbg !21115
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21115
  %call1 = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %3) #8, !dbg !21115
  %conv = zext i32 %call1 to i64, !dbg !21115
  %add = add i64 %conv, 64, !dbg !21115
  %sub = sub i64 %add, 1, !dbg !21115
  %div = udiv i64 %sub, 64, !dbg !21115
  %mul = mul i64 8, %div, !dbg !21116
  store i64 %mul, i64* %alloc_size, align 8, !dbg !21117
  %4 = load i64, i64* %alloc_size, align 8, !dbg !21118
  %call2 = call i8* @kzalloc(i64 %4, i32 3264) #8, !dbg !21119
  %5 = bitcast i8* %call2 to i64*, !dbg !21119
  %6 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21120
  %ports_in_mid = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %6, i32 0, i32 5, !dbg !21121
  store i64* %5, i64** %ports_in_mid, align 8, !dbg !21122
  %7 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21123
  %ports_in_mid3 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %7, i32 0, i32 5, !dbg !21125
  %8 = load i64*, i64** %ports_in_mid3, align 8, !dbg !21125
  %tobool4 = icmp ne i64* %8, null, !dbg !21123
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !21126

if.then5:                                         ; preds = %if.end
  br label %err_ports_in_mid_alloc, !dbg !21127

if.end6:                                          ; preds = %if.end
  %9 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21128
  %addr7 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %9, i32 0, i32 1, !dbg !21129
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr7, i64 0, i64 0, !dbg !21128
  %10 = load i8*, i8** %addr.addr, align 8, !dbg !21130
  call void @ether_addr_copy(i8* %arraydecay, i8* %10) #8, !dbg !21131
  %11 = load i16, i16* %fid.addr, align 2, !dbg !21132
  %12 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21133
  %fid8 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %12, i32 0, i32 2, !dbg !21134
  store i16 %11, i16* %fid8, align 2, !dbg !21135
  %13 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21136
  %in_hw = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %13, i32 0, i32 4, !dbg !21137
  store i8 0, i8* %in_hw, align 2, !dbg !21138
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !21139
  %multicast_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %14, i32 0, i32 4, !dbg !21141
  %bf.load = load i8, i8* %multicast_enabled, align 8, !dbg !21141
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !21141
  %bf.clear = and i8 %bf.lshr, 1, !dbg !21141
  %tobool9 = icmp ne i8 %bf.clear, 0, !dbg !21139
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !21142

if.then10:                                        ; preds = %if.end6
  br label %out, !dbg !21143

if.end11:                                         ; preds = %if.end6
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21144
  %16 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21146
  %17 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !21147
  %call12 = call zeroext i1 @mlxsw_sp_mc_write_mdb_entry(%struct.mlxsw_sp* %15, %struct.mlxsw_sp_mid* %16, %struct.mlxsw_sp_bridge_device* %17) #8, !dbg !21148
  br i1 %call12, label %if.end14, label %if.then13, !dbg !21149

if.then13:                                        ; preds = %if.end11
  br label %err_write_mdb_entry, !dbg !21150

if.end14:                                         ; preds = %if.end11
  br label %out, !dbg !21151

out:                                              ; preds = %if.end14, %if.then10
  call void @llvm.dbg.label(metadata !21152), !dbg !21153
  %18 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21154
  %list = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %18, i32 0, i32 0, !dbg !21155
  %19 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8, !dbg !21156
  %mids_list = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %19, i32 0, i32 3, !dbg !21157
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %mids_list) #8, !dbg !21158
  %20 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21159
  store %struct.mlxsw_sp_mid* %20, %struct.mlxsw_sp_mid** %retval, align 8, !dbg !21160
  br label %return, !dbg !21160

err_write_mdb_entry:                              ; preds = %if.then13
  call void @llvm.dbg.label(metadata !21161), !dbg !21162
  %21 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21163
  %ports_in_mid15 = getelementptr inbounds %struct.mlxsw_sp_mid, %struct.mlxsw_sp_mid* %21, i32 0, i32 5, !dbg !21164
  %22 = load i64*, i64** %ports_in_mid15, align 8, !dbg !21164
  %23 = bitcast i64* %22 to i8*, !dbg !21163
  call void @kfree(i8* %23) #8, !dbg !21165
  br label %err_ports_in_mid_alloc, !dbg !21165

err_ports_in_mid_alloc:                           ; preds = %err_write_mdb_entry, %if.then5
  call void @llvm.dbg.label(metadata !21166), !dbg !21167
  %24 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21168
  %25 = bitcast %struct.mlxsw_sp_mid* %24 to i8*, !dbg !21168
  call void @kfree(i8* %25) #8, !dbg !21169
  store %struct.mlxsw_sp_mid* null, %struct.mlxsw_sp_mid** %retval, align 8, !dbg !21170
  br label %return, !dbg !21170

return:                                           ; preds = %err_ports_in_mid_alloc, %out, %if.then
  %26 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %retval, align 8, !dbg !21171
  ret %struct.mlxsw_sp_mid* %26, !dbg !21171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !21172 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !21173, metadata !DIExpression()), !dbg !21174
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !21175, metadata !DIExpression()), !dbg !21176
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !21177
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !21178
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !21179
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !21179
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !21180
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #8, !dbg !21181
  ret void, !dbg !21182
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_vxlan_vlans_del(%struct.net_device* %vxlan_dev, %struct.switchdev_notifier_port_obj_info* %port_obj_info) #0 !dbg !21183 {
entry:
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %port_obj_info.addr = alloca %struct.switchdev_notifier_port_obj_info*, align 8
  %vlan = alloca %struct.switchdev_obj_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchdev_obj_port_vlan*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %vid = alloca i16, align 2
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !21184, metadata !DIExpression()), !dbg !21185
  store %struct.switchdev_notifier_port_obj_info* %port_obj_info, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, metadata !21186, metadata !DIExpression()), !dbg !21187
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_vlan** %vlan, metadata !21188, metadata !DIExpression()), !dbg !21189
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21190, metadata !DIExpression()), !dbg !21192
  %0 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !21192
  %obj = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %0, i32 0, i32 1, !dbg !21192
  %1 = load %struct.switchdev_obj*, %struct.switchdev_obj** %obj, align 8, !dbg !21192
  %2 = bitcast %struct.switchdev_obj* %1 to i8*, !dbg !21192
  store i8* %2, i8** %__mptr, align 8, !dbg !21192
  br label %do.body, !dbg !21192

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21193

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !21192
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !21192
  %4 = bitcast i8* %add.ptr to %struct.switchdev_obj_port_vlan*, !dbg !21192
  store %struct.switchdev_obj_port_vlan* %4, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !21193
  %5 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %tmp, align 8, !dbg !21192
  store %struct.switchdev_obj_port_vlan* %5, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !21189
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !21195, metadata !DIExpression()), !dbg !21196
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !21197, metadata !DIExpression()), !dbg !21198
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !21199, metadata !DIExpression()), !dbg !21200
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !21201, metadata !DIExpression()), !dbg !21202
  %6 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !21203
  %call = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %6) #8, !dbg !21204
  store %struct.net_device* %call, %struct.net_device** %br_dev, align 8, !dbg !21205
  %7 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !21206
  %tobool = icmp ne %struct.net_device* %7, null, !dbg !21206
  br i1 %tobool, label %if.end, label %if.then, !dbg !21208

if.then:                                          ; preds = %do.end
  br label %for.end, !dbg !21209

if.end:                                           ; preds = %do.end
  %8 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !21210
  %call1 = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %8) #8, !dbg !21211
  store %struct.mlxsw_sp* %call1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21212
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21213
  %tobool2 = icmp ne %struct.mlxsw_sp* %9, null, !dbg !21213
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !21215

if.then3:                                         ; preds = %if.end
  br label %for.end, !dbg !21216

if.end4:                                          ; preds = %if.end
  %10 = load %struct.switchdev_notifier_port_obj_info*, %struct.switchdev_notifier_port_obj_info** %port_obj_info.addr, align 8, !dbg !21217
  %handled = getelementptr inbounds %struct.switchdev_notifier_port_obj_info, %struct.switchdev_notifier_port_obj_info* %10, i32 0, i32 3, !dbg !21218
  store i8 1, i8* %handled, align 8, !dbg !21219
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21220
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %11, i32 0, i32 8, !dbg !21221
  %12 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !21221
  %13 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !21222
  %call5 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %12, %struct.net_device* %13) #8, !dbg !21223
  store %struct.mlxsw_sp_bridge_device* %call5, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21224
  %14 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21225
  %tobool6 = icmp ne %struct.mlxsw_sp_bridge_device* %14, null, !dbg !21225
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !21227

if.then7:                                         ; preds = %if.end4
  br label %for.end, !dbg !21228

if.end8:                                          ; preds = %if.end4
  %15 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21229
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %15, i32 0, i32 4, !dbg !21231
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !21231
  %bf.clear = and i8 %bf.load, 1, !dbg !21231
  %tobool9 = icmp ne i8 %bf.clear, 0, !dbg !21229
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !21232

if.then10:                                        ; preds = %if.end8
  br label %for.end, !dbg !21233

if.end11:                                         ; preds = %if.end8
  %16 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !21234
  %vid_begin = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %16, i32 0, i32 2, !dbg !21236
  %17 = load i16, i16* %vid_begin, align 2, !dbg !21236
  store i16 %17, i16* %vid, align 2, !dbg !21237
  br label %for.cond, !dbg !21238

for.cond:                                         ; preds = %for.inc, %if.end11
  %18 = load i16, i16* %vid, align 2, !dbg !21239
  %conv = zext i16 %18 to i32, !dbg !21239
  %19 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan, align 8, !dbg !21241
  %vid_end = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %19, i32 0, i32 3, !dbg !21242
  %20 = load i16, i16* %vid_end, align 4, !dbg !21242
  %conv12 = zext i16 %20 to i32, !dbg !21241
  %cmp = icmp sle i32 %conv, %conv12, !dbg !21243
  br i1 %cmp, label %for.body, label %for.end, !dbg !21244

for.body:                                         ; preds = %for.cond
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21245
  %22 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21246
  %23 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !21247
  %24 = load i16, i16* %vid, align 2, !dbg !21248
  call void @mlxsw_sp_switchdev_vxlan_vlan_del(%struct.mlxsw_sp* %21, %struct.mlxsw_sp_bridge_device* %22, %struct.net_device* %23, i16 zeroext %24) #8, !dbg !21249
  br label %for.inc, !dbg !21249

for.inc:                                          ; preds = %for.body
  %25 = load i16, i16* %vid, align 2, !dbg !21250
  %inc = add i16 %25, 1, !dbg !21250
  store i16 %inc, i16* %vid, align 2, !dbg !21250
  br label %for.cond, !dbg !21251, !llvm.loop !21252

for.end:                                          ; preds = %if.then, %if.then3, %if.then7, %if.then10, %for.cond
  ret void, !dbg !21254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_vxlan_vlan_del(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.net_device* %vxlan_dev, i16 zeroext %vid) #0 !dbg !21255 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %bridge_device.addr = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %vxlan = alloca %struct.vxlan_dev*, align 8
  %vni = alloca i32, align 4
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21258, metadata !DIExpression()), !dbg !21259
  store %struct.mlxsw_sp_bridge_device* %bridge_device, %struct.mlxsw_sp_bridge_device** %bridge_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device.addr, metadata !21260, metadata !DIExpression()), !dbg !21261
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !21262, metadata !DIExpression()), !dbg !21263
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !21264, metadata !DIExpression()), !dbg !21265
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !21266, metadata !DIExpression()), !dbg !21267
  %0 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !21268
  %call = call i8* @netdev_priv(%struct.net_device* %0) #8, !dbg !21269
  %1 = bitcast i8* %call to %struct.vxlan_dev*, !dbg !21269
  store %struct.vxlan_dev* %1, %struct.vxlan_dev** %vxlan, align 8, !dbg !21267
  call void @llvm.dbg.declare(metadata i32* %vni, metadata !21270, metadata !DIExpression()), !dbg !21271
  %2 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !21272
  %cfg = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %2, i32 0, i32 12, !dbg !21273
  %vni1 = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %cfg, i32 0, i32 2, !dbg !21274
  %3 = load i32, i32* %vni1, align 8, !dbg !21274
  store i32 %3, i32* %vni, align 4, !dbg !21271
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !21275, metadata !DIExpression()), !dbg !21276
  %4 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !21277
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %4) #8, !dbg !21279
  br i1 %call2, label %if.end, label %if.then, !dbg !21280

if.then:                                          ; preds = %entry
  br label %return, !dbg !21281

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21282
  %6 = load i32, i32* %vni, align 4, !dbg !21283
  %call3 = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_vni(%struct.mlxsw_sp* %5, i32 %6) #8, !dbg !21284
  store %struct.mlxsw_sp_fid* %call3, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21285
  %7 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21286
  %tobool = icmp ne %struct.mlxsw_sp_fid* %7, null, !dbg !21286
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !21288

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !21289

if.end5:                                          ; preds = %if.end
  %8 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21290
  %call6 = call zeroext i16 @mlxsw_sp_fid_8021q_vid(%struct.mlxsw_sp_fid* %8) #8, !dbg !21292
  %conv = zext i16 %call6 to i32, !dbg !21292
  %9 = load i16, i16* %vid.addr, align 2, !dbg !21293
  %conv7 = zext i16 %9 to i32, !dbg !21293
  %cmp = icmp ne i32 %conv, %conv7, !dbg !21294
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !21295

if.then9:                                         ; preds = %if.end5
  br label %out, !dbg !21296

if.end10:                                         ; preds = %if.end5
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21297
  %11 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !21298
  call void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %10, %struct.net_device* %11) #8, !dbg !21299
  br label %out, !dbg !21299

out:                                              ; preds = %if.end10, %if.then9
  call void @llvm.dbg.label(metadata !21300), !dbg !21301
  %12 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21302
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %12) #8, !dbg !21303
  br label %return, !dbg !21304

return:                                           ; preds = %out, %if.then4, %if.then
  ret void, !dbg !21304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_vlans_del(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_obj_port_vlan* %vlan) #0 !dbg !21305 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vlan.addr = alloca %struct.switchdev_obj_port_vlan*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %orig_dev = alloca %struct.net_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid = alloca i16, align 2
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21308, metadata !DIExpression()), !dbg !21309
  store %struct.switchdev_obj_port_vlan* %vlan, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_vlan** %vlan.addr, metadata !21310, metadata !DIExpression()), !dbg !21311
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !21312, metadata !DIExpression()), !dbg !21313
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21314
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !21315
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !21315
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21313
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev, metadata !21316, metadata !DIExpression()), !dbg !21317
  %2 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !21318
  %obj = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %2, i32 0, i32 0, !dbg !21319
  %orig_dev2 = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %obj, i32 0, i32 0, !dbg !21320
  %3 = load %struct.net_device*, %struct.net_device** %orig_dev2, align 8, !dbg !21320
  store %struct.net_device* %3, %struct.net_device** %orig_dev, align 8, !dbg !21317
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !21321, metadata !DIExpression()), !dbg !21322
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !21323, metadata !DIExpression()), !dbg !21324
  %4 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !21325
  %call = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %4) #8, !dbg !21327
  br i1 %call, label %if.then, label %if.end, !dbg !21328

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !21329
  br label %return, !dbg !21329

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21330
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 8, !dbg !21331
  %6 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !21331
  %7 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !21332
  %call3 = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %6, %struct.net_device* %7) #8, !dbg !21333
  store %struct.mlxsw_sp_bridge_port* %call3, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21334
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !21335, metadata !DIExpression()), !dbg !21338
  %8 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21338
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %8, null, !dbg !21338
  %lnot = xor i1 %tobool, true, !dbg !21338
  %lnot4 = xor i1 %lnot, true, !dbg !21338
  %lnot5 = xor i1 %lnot4, true, !dbg !21338
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !21338
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !21338
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !21339
  %tobool6 = icmp ne i32 %9, 0, !dbg !21339
  %lnot7 = xor i1 %tobool6, true, !dbg !21339
  %lnot9 = xor i1 %lnot7, true, !dbg !21339
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !21339
  %conv = sext i32 %lnot.ext10 to i64, !dbg !21339
  %tobool11 = icmp ne i64 %conv, 0, !dbg !21339
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !21338

if.then12:                                        ; preds = %if.end
  br label %do.body, !dbg !21339

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !21341

do.body13:                                        ; preds = %do.body
  br label %do.end, !dbg !21343

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !21341

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 1847, i32 2305, i64 12) #9, !dbg !21345, !srcloc !21347
  br label %do.end15, !dbg !21345

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 700) #9, !dbg !21348, !srcloc !21350
  br label %do.body16, !dbg !21341

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !21351

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !21341

do.end18:                                         ; preds = %do.end17
  br label %if.end19, !dbg !21341

if.end19:                                         ; preds = %do.end18, %if.end
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !21338
  %tobool20 = icmp ne i32 %10, 0, !dbg !21338
  %lnot21 = xor i1 %tobool20, true, !dbg !21338
  %lnot23 = xor i1 %lnot21, true, !dbg !21338
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !21338
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !21338
  store i64 %conv25, i64* %tmp, align 8, !dbg !21339
  %11 = load i64, i64* %tmp, align 8, !dbg !21338
  %tobool26 = icmp ne i64 %11, 0, !dbg !21353
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !21354

if.then27:                                        ; preds = %if.end19
  store i32 -22, i32* %retval, align 4, !dbg !21355
  br label %return, !dbg !21355

if.end28:                                         ; preds = %if.end19
  %12 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21356
  %bridge_device = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %12, i32 0, i32 1, !dbg !21358
  %13 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21358
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %13, i32 0, i32 4, !dbg !21359
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !21359
  %bf.clear = and i8 %bf.load, 1, !dbg !21359
  %tobool29 = icmp ne i8 %bf.clear, 0, !dbg !21356
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !21360

if.then30:                                        ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !21361
  br label %return, !dbg !21361

if.end31:                                         ; preds = %if.end28
  %14 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !21362
  %vid_begin = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %14, i32 0, i32 2, !dbg !21364
  %15 = load i16, i16* %vid_begin, align 2, !dbg !21364
  store i16 %15, i16* %vid, align 2, !dbg !21365
  br label %for.cond, !dbg !21366

for.cond:                                         ; preds = %for.inc, %if.end31
  %16 = load i16, i16* %vid, align 2, !dbg !21367
  %conv32 = zext i16 %16 to i32, !dbg !21367
  %17 = load %struct.switchdev_obj_port_vlan*, %struct.switchdev_obj_port_vlan** %vlan.addr, align 8, !dbg !21369
  %vid_end = getelementptr inbounds %struct.switchdev_obj_port_vlan, %struct.switchdev_obj_port_vlan* %17, i32 0, i32 3, !dbg !21370
  %18 = load i16, i16* %vid_end, align 4, !dbg !21370
  %conv33 = zext i16 %18 to i32, !dbg !21369
  %cmp = icmp sle i32 %conv32, %conv33, !dbg !21371
  br i1 %cmp, label %for.body, label %for.end, !dbg !21372

for.body:                                         ; preds = %for.cond
  %19 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21373
  %20 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21374
  %21 = load i16, i16* %vid, align 2, !dbg !21375
  call void @mlxsw_sp_bridge_port_vlan_del(%struct.mlxsw_sp_port* %19, %struct.mlxsw_sp_bridge_port* %20, i16 zeroext %21) #8, !dbg !21376
  br label %for.inc, !dbg !21376

for.inc:                                          ; preds = %for.body
  %22 = load i16, i16* %vid, align 2, !dbg !21377
  %inc = add i16 %22, 1, !dbg !21377
  store i16 %inc, i16* %vid, align 2, !dbg !21377
  br label %for.cond, !dbg !21378, !llvm.loop !21379

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !21381
  br label %return, !dbg !21381

return:                                           ; preds = %for.end, %if.then30, %if.then27, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !21382
  ret i32 %23, !dbg !21382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_mdb_del(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.switchdev_obj_port_mdb* %mdb) #0 !dbg !21383 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mdb.addr = alloca %struct.switchdev_obj_port_mdb*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %orig_dev = alloca %struct.net_device*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mid = alloca %struct.mlxsw_sp_mid*, align 8
  %fid_index = alloca i16, align 2
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21386, metadata !DIExpression()), !dbg !21387
  store %struct.switchdev_obj_port_mdb* %mdb, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchdev_obj_port_mdb** %mdb.addr, metadata !21388, metadata !DIExpression()), !dbg !21389
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !21390, metadata !DIExpression()), !dbg !21391
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21392
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !21393
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !21393
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21391
  call void @llvm.dbg.declare(metadata %struct.net_device** %orig_dev, metadata !21394, metadata !DIExpression()), !dbg !21395
  %2 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8, !dbg !21396
  %obj = getelementptr inbounds %struct.switchdev_obj_port_mdb, %struct.switchdev_obj_port_mdb* %2, i32 0, i32 0, !dbg !21397
  %orig_dev2 = getelementptr inbounds %struct.switchdev_obj, %struct.switchdev_obj* %obj, i32 0, i32 0, !dbg !21398
  %3 = load %struct.net_device*, %struct.net_device** %orig_dev2, align 8, !dbg !21398
  store %struct.net_device* %3, %struct.net_device** %orig_dev, align 8, !dbg !21395
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !21399, metadata !DIExpression()), !dbg !21400
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !21401, metadata !DIExpression()), !dbg !21402
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !21403, metadata !DIExpression()), !dbg !21404
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21405
  %dev3 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 0, !dbg !21406
  %5 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !21406
  store %struct.net_device* %5, %struct.net_device** %dev, align 8, !dbg !21404
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !21407, metadata !DIExpression()), !dbg !21408
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_mid** %mid, metadata !21409, metadata !DIExpression()), !dbg !21410
  call void @llvm.dbg.declare(metadata i16* %fid_index, metadata !21411, metadata !DIExpression()), !dbg !21412
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21413
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 8, !dbg !21414
  %7 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !21414
  %8 = load %struct.net_device*, %struct.net_device** %orig_dev, align 8, !dbg !21415
  %call = call %struct.mlxsw_sp_bridge_port* @mlxsw_sp_bridge_port_find(%struct.mlxsw_sp_bridge* %7, %struct.net_device* %8) #8, !dbg !21416
  store %struct.mlxsw_sp_bridge_port* %call, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21417
  %9 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21418
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %9, null, !dbg !21418
  br i1 %tobool, label %if.end, label %if.then, !dbg !21420

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21421
  br label %return, !dbg !21421

if.end:                                           ; preds = %entry
  %10 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21422
  %bridge_device4 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %10, i32 0, i32 1, !dbg !21423
  %11 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device4, align 8, !dbg !21423
  store %struct.mlxsw_sp_bridge_device* %11, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21424
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21425
  %13 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21426
  %14 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8, !dbg !21427
  %vid = getelementptr inbounds %struct.switchdev_obj_port_mdb, %struct.switchdev_obj_port_mdb* %14, i32 0, i32 2, !dbg !21428
  %15 = load i16, i16* %vid, align 2, !dbg !21428
  %call5 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_bridge(%struct.mlxsw_sp_port* %12, %struct.mlxsw_sp_bridge_device* %13, i16 zeroext %15) #8, !dbg !21429
  store %struct.mlxsw_sp_port_vlan* %call5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21430
  %16 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21431
  %tobool6 = icmp ne %struct.mlxsw_sp_port_vlan* %16, null, !dbg !21431
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !21433

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !21434
  br label %return, !dbg !21434

if.end8:                                          ; preds = %if.end
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21435
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %17, i32 0, i32 2, !dbg !21436
  %18 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21436
  %call9 = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %18) #8, !dbg !21437
  store i16 %call9, i16* %fid_index, align 2, !dbg !21438
  %19 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21439
  %20 = load %struct.switchdev_obj_port_mdb*, %struct.switchdev_obj_port_mdb** %mdb.addr, align 8, !dbg !21440
  %addr = getelementptr inbounds %struct.switchdev_obj_port_mdb, %struct.switchdev_obj_port_mdb* %20, i32 0, i32 1, !dbg !21441
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !21440
  %21 = load i16, i16* %fid_index, align 2, !dbg !21442
  %call10 = call %struct.mlxsw_sp_mid* @__mlxsw_sp_mc_get(%struct.mlxsw_sp_bridge_device* %19, i8* %arraydecay, i16 zeroext %21) #8, !dbg !21443
  store %struct.mlxsw_sp_mid* %call10, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21444
  %22 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21445
  %tobool11 = icmp ne %struct.mlxsw_sp_mid* %22, null, !dbg !21445
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !21447

if.then12:                                        ; preds = %if.end8
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !21448
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %23, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.88, i64 0, i64 0)) #12, !dbg !21450
  store i32 -22, i32* %retval, align 4, !dbg !21451
  br label %return, !dbg !21451

if.end13:                                         ; preds = %if.end8
  %24 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21452
  %25 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21453
  %26 = load %struct.mlxsw_sp_mid*, %struct.mlxsw_sp_mid** %mid, align 8, !dbg !21454
  %call14 = call i32 @__mlxsw_sp_port_mdb_del(%struct.mlxsw_sp_port* %24, %struct.mlxsw_sp_bridge_port* %25, %struct.mlxsw_sp_mid* %26) #8, !dbg !21455
  store i32 %call14, i32* %retval, align 4, !dbg !21456
  br label %return, !dbg !21456

return:                                           ; preds = %if.end13, %if.then12, %if.then7, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !21457
  ret i32 %27, !dbg !21457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_bridge_port_vlan_del(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_bridge_port* %bridge_port, i16 zeroext %vid) #0 !dbg !21458 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %bridge_port.addr = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %vid.addr = alloca i16, align 2
  %pvid = alloca i16, align 2
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21461, metadata !DIExpression()), !dbg !21462
  store %struct.mlxsw_sp_bridge_port* %bridge_port, %struct.mlxsw_sp_bridge_port** %bridge_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port.addr, metadata !21463, metadata !DIExpression()), !dbg !21464
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !21465, metadata !DIExpression()), !dbg !21466
  call void @llvm.dbg.declare(metadata i16* %pvid, metadata !21467, metadata !DIExpression()), !dbg !21468
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21469
  %pvid1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 5, !dbg !21470
  %1 = load i16, i16* %pvid1, align 2, !dbg !21470
  %conv = zext i16 %1 to i32, !dbg !21469
  %2 = load i16, i16* %vid.addr, align 2, !dbg !21471
  %conv2 = zext i16 %2 to i32, !dbg !21471
  %cmp = icmp eq i32 %conv, %conv2, !dbg !21472
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21469

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !21469

cond.false:                                       ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21473
  %pvid4 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 5, !dbg !21474
  %4 = load i16, i16* %pvid4, align 2, !dbg !21474
  %conv5 = zext i16 %4 to i32, !dbg !21473
  br label %cond.end, !dbg !21469

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv5, %cond.false ], !dbg !21469
  %conv6 = trunc i32 %cond to i16, !dbg !21469
  store i16 %conv6, i16* %pvid, align 2, !dbg !21468
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !21475, metadata !DIExpression()), !dbg !21476
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21477
  %6 = load i16, i16* %vid.addr, align 2, !dbg !21478
  %call = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %5, i16 zeroext %6) #8, !dbg !21479
  store %struct.mlxsw_sp_port_vlan* %call, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21480
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !21481, metadata !DIExpression()), !dbg !21484
  %7 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21484
  %tobool = icmp ne %struct.mlxsw_sp_port_vlan* %7, null, !dbg !21484
  %lnot = xor i1 %tobool, true, !dbg !21484
  %lnot7 = xor i1 %lnot, true, !dbg !21484
  %lnot8 = xor i1 %lnot7, true, !dbg !21484
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !21484
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !21484
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !21485
  %tobool9 = icmp ne i32 %8, 0, !dbg !21485
  %lnot10 = xor i1 %tobool9, true, !dbg !21485
  %lnot12 = xor i1 %lnot10, true, !dbg !21485
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !21485
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !21485
  %tobool15 = icmp ne i64 %conv14, 0, !dbg !21485
  br i1 %tobool15, label %if.then, label %if.end, !dbg !21484

if.then:                                          ; preds = %cond.end
  br label %do.body, !dbg !21485

do.body:                                          ; preds = %if.then
  br label %do.body16, !dbg !21487

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !21489

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !21487

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 1826, i32 2305, i64 12) #9, !dbg !21491, !srcloc !21493
  br label %do.end18, !dbg !21491

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 699) #9, !dbg !21494, !srcloc !21496
  br label %do.body19, !dbg !21487

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !21497

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !21487

do.end21:                                         ; preds = %do.end20
  br label %if.end, !dbg !21487

if.end:                                           ; preds = %do.end21, %cond.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !21484
  %tobool22 = icmp ne i32 %9, 0, !dbg !21484
  %lnot23 = xor i1 %tobool22, true, !dbg !21484
  %lnot25 = xor i1 %lnot23, true, !dbg !21484
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !21484
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !21484
  store i64 %conv27, i64* %tmp, align 8, !dbg !21485
  %10 = load i64, i64* %tmp, align 8, !dbg !21484
  %tobool28 = icmp ne i64 %10, 0, !dbg !21499
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !21500

if.then29:                                        ; preds = %if.end
  br label %return, !dbg !21501

if.end30:                                         ; preds = %if.end
  %11 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21502
  call void @mlxsw_sp_port_vlan_bridge_leave(%struct.mlxsw_sp_port_vlan* %11) #8, !dbg !21503
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21504
  %13 = load i16, i16* %pvid, align 2, !dbg !21505
  %call31 = call i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %12, i16 zeroext %13) #8, !dbg !21506
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21507
  %15 = load i16, i16* %vid.addr, align 2, !dbg !21508
  %16 = load i16, i16* %vid.addr, align 2, !dbg !21509
  %call32 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %14, i16 zeroext %15, i16 zeroext %16, i1 zeroext false, i1 zeroext false) #8, !dbg !21510
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21511
  call void @mlxsw_sp_port_vlan_destroy(%struct.mlxsw_sp_port_vlan* %17) #8, !dbg !21512
  br label %return, !dbg !21513

return:                                           ; preds = %if.end30, %if.then29
  ret void, !dbg !21513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_pack(i8* %payload) #0 !dbg !21514 {
entry:
  %payload.addr = alloca i8*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !21517, metadata !DIExpression()), !dbg !21518
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !21519
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sfn, i32 0, i32 1), align 2, !dbg !21519
  %conv = zext i16 %1 to i64, !dbg !21519
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !21519
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !21520
  call void @mlxsw_reg_sfn_swid_set(i8* %2, i32 0) #8, !dbg !21521
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !21522
  call void @mlxsw_reg_sfn_end_set(i8* %3, i32 0) #8, !dbg !21523
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !21524
  call void @mlxsw_reg_sfn_num_rec_set(i8* %4, i32 64) #8, !dbg !21525
  ret void, !dbg !21526
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_reg_query(%struct.mlxsw_core*, %struct.mlxsw_reg_info*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_num_rec_get(i8* %buf) #0 !dbg !21527 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21528, metadata !DIExpression()), !dbg !21529
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !21529
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_num_rec_item to %struct.mlxsw_item*), i16 zeroext 0) #8, !dbg !21529
  ret i32 %call, !dbg !21529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_notify_rec_process(%struct.mlxsw_sp* %mlxsw_sp, i8* %sfn_pl, i32 %rec_index) #0 !dbg !21530 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %sfn_pl.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21533, metadata !DIExpression()), !dbg !21534
  store i8* %sfn_pl, i8** %sfn_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sfn_pl.addr, metadata !21535, metadata !DIExpression()), !dbg !21536
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !21537, metadata !DIExpression()), !dbg !21538
  %0 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21539
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !21540
  %conv = trunc i32 %1 to i16, !dbg !21540
  %call = call i32 @mlxsw_reg_sfn_rec_type_get(i8* %0, i16 zeroext %conv) #8, !dbg !21541
  switch i32 %call, label %sw.epilog [
    i32 5, label %sw.bb
    i32 7, label %sw.bb1
    i32 6, label %sw.bb2
    i32 8, label %sw.bb3
    i32 13, label %sw.bb4
    i32 14, label %sw.bb5
  ], !dbg !21542

sw.bb:                                            ; preds = %entry
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21543
  %3 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21545
  %4 = load i32, i32* %rec_index.addr, align 4, !dbg !21546
  call void @mlxsw_sp_fdb_notify_mac_process(%struct.mlxsw_sp* %2, i8* %3, i32 %4, i1 zeroext true) #8, !dbg !21547
  br label %sw.epilog, !dbg !21548

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21549
  %6 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21550
  %7 = load i32, i32* %rec_index.addr, align 4, !dbg !21551
  call void @mlxsw_sp_fdb_notify_mac_process(%struct.mlxsw_sp* %5, i8* %6, i32 %7, i1 zeroext false) #8, !dbg !21552
  br label %sw.epilog, !dbg !21553

sw.bb2:                                           ; preds = %entry
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21554
  %9 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21555
  %10 = load i32, i32* %rec_index.addr, align 4, !dbg !21556
  call void @mlxsw_sp_fdb_notify_mac_lag_process(%struct.mlxsw_sp* %8, i8* %9, i32 %10, i1 zeroext true) #8, !dbg !21557
  br label %sw.epilog, !dbg !21558

sw.bb3:                                           ; preds = %entry
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21559
  %12 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21560
  %13 = load i32, i32* %rec_index.addr, align 4, !dbg !21561
  call void @mlxsw_sp_fdb_notify_mac_lag_process(%struct.mlxsw_sp* %11, i8* %12, i32 %13, i1 zeroext false) #8, !dbg !21562
  br label %sw.epilog, !dbg !21563

sw.bb4:                                           ; preds = %entry
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21564
  %15 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21565
  %16 = load i32, i32* %rec_index.addr, align 4, !dbg !21566
  call void @mlxsw_sp_fdb_notify_mac_uc_tunnel_process(%struct.mlxsw_sp* %14, i8* %15, i32 %16, i1 zeroext true) #8, !dbg !21567
  br label %sw.epilog, !dbg !21568

sw.bb5:                                           ; preds = %entry
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21569
  %18 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21570
  %19 = load i32, i32* %rec_index.addr, align 4, !dbg !21571
  call void @mlxsw_sp_fdb_notify_mac_uc_tunnel_process(%struct.mlxsw_sp* %17, i8* %18, i32 %19, i1 zeroext false) #8, !dbg !21572
  br label %sw.epilog, !dbg !21573

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !21574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_swid_set(i8* %buf, i32 %val) #0 !dbg !21575 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21576, metadata !DIExpression()), !dbg !21577
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !21578, metadata !DIExpression()), !dbg !21577
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !21577
  %1 = load i32, i32* %val.addr, align 4, !dbg !21577
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_swid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !21577
  ret void, !dbg !21577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_end_set(i8* %buf, i32 %val) #0 !dbg !21579 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21580, metadata !DIExpression()), !dbg !21581
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !21582, metadata !DIExpression()), !dbg !21581
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !21581
  %1 = load i32, i32* %val.addr, align 4, !dbg !21581
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_end_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !21581
  ret void, !dbg !21581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_num_rec_set(i8* %buf, i32 %val) #0 !dbg !21583 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21584, metadata !DIExpression()), !dbg !21585
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !21586, metadata !DIExpression()), !dbg !21585
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !21585
  %1 = load i32, i32* %val.addr, align 4, !dbg !21585
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_num_rec_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #8, !dbg !21585
  ret void, !dbg !21585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_rec_type_get(i8* %buf, i16 zeroext %index) #0 !dbg !21587 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21590, metadata !DIExpression()), !dbg !21591
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !21592, metadata !DIExpression()), !dbg !21591
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !21591
  %1 = load i16, i16* %index.addr, align 2, !dbg !21591
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_rec_type_item to %struct.mlxsw_item*), i16 zeroext %1) #8, !dbg !21591
  ret i32 %call, !dbg !21591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_notify_mac_process(%struct.mlxsw_sp* %mlxsw_sp, i8* %sfn_pl, i32 %rec_index, i1 zeroext %adding) #0 !dbg !11473 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %sfn_pl.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %adding.addr = alloca i8, align 1
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %type = alloca i32, align 4
  %mac = alloca [6 x i8], align 1
  %local_port = alloca i8, align 1
  %vid = alloca i16, align 2
  %fid = alloca i16, align 2
  %do_notification = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21593, metadata !DIExpression()), !dbg !21594
  store i8* %sfn_pl, i8** %sfn_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sfn_pl.addr, metadata !21595, metadata !DIExpression()), !dbg !21596
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !21597, metadata !DIExpression()), !dbg !21598
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !21599, metadata !DIExpression()), !dbg !21600
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !21601, metadata !DIExpression()), !dbg !21602
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !21603, metadata !DIExpression()), !dbg !21604
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !21605, metadata !DIExpression()), !dbg !21606
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !21607, metadata !DIExpression()), !dbg !21608
  call void @llvm.dbg.declare(metadata i32* %type, metadata !21609, metadata !DIExpression()), !dbg !21610
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac, metadata !21611, metadata !DIExpression()), !dbg !21612
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !21613, metadata !DIExpression()), !dbg !21614
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !21615, metadata !DIExpression()), !dbg !21616
  call void @llvm.dbg.declare(metadata i16* %fid, metadata !21617, metadata !DIExpression()), !dbg !21618
  call void @llvm.dbg.declare(metadata i8* %do_notification, metadata !21619, metadata !DIExpression()), !dbg !21620
  store i8 1, i8* %do_notification, align 1, !dbg !21620
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21621, metadata !DIExpression()), !dbg !21622
  %0 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21623
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !21624
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21625
  call void @mlxsw_reg_sfn_mac_unpack(i8* %0, i32 %1, i8* %arraydecay, i16* %fid, i8* %local_port) #8, !dbg !21626
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21627
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 0, !dbg !21628
  %3 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !21628
  %4 = load i8, i8* %local_port, align 1, !dbg !21629
  %idxprom = zext i8 %4 to i64, !dbg !21627
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %3, i64 %idxprom, !dbg !21627
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !21627
  store %struct.mlxsw_sp_port* %5, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21630
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21631
  %tobool = icmp ne %struct.mlxsw_sp_port* %6, null, !dbg !21631
  br i1 %tobool, label %if.end3, label %if.then, !dbg !21633

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !21634

do.body:                                          ; preds = %if.then
  %call = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_sp_fdb_notify_mac_process._rs, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.mlxsw_sp_fdb_notify_mac_process, i64 0, i64 0)) #8, !dbg !21636
  %tobool1 = icmp ne i32 %call, 0, !dbg !21636
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !21639

if.then2:                                         ; preds = %do.body
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21636
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 2, !dbg !21636
  %8 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !21636
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %8, i32 0, i32 2, !dbg !21636
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21636
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %9, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.99, i64 0, i64 0)) #12, !dbg !21636
  br label %if.end, !dbg !21636

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !21639

do.end:                                           ; preds = %if.end
  br label %just_remove, !dbg !21640

if.end3:                                          ; preds = %entry
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21641
  %11 = load i16, i16* %fid, align 2, !dbg !21643
  %call4 = call zeroext i1 @mlxsw_sp_fid_is_dummy(%struct.mlxsw_sp* %10, i16 zeroext %11) #8, !dbg !21644
  br i1 %call4, label %if.then5, label %if.end6, !dbg !21645

if.then5:                                         ; preds = %if.end3
  br label %just_remove, !dbg !21646

if.end6:                                          ; preds = %if.end3
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21647
  %13 = load i16, i16* %fid, align 2, !dbg !21648
  %call7 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_fid(%struct.mlxsw_sp_port* %12, i16 zeroext %13) #8, !dbg !21649
  store %struct.mlxsw_sp_port_vlan* %call7, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21650
  %14 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21651
  %tobool8 = icmp ne %struct.mlxsw_sp_port_vlan* %14, null, !dbg !21651
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !21653

if.then9:                                         ; preds = %if.end6
  %15 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21654
  %dev10 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %15, i32 0, i32 0, !dbg !21656
  %16 = load %struct.net_device*, %struct.net_device** %dev10, align 8, !dbg !21656
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %16, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.100, i64 0, i64 0)) #12, !dbg !21657
  br label %just_remove, !dbg !21658

if.end11:                                         ; preds = %if.end6
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21659
  %bridge_port12 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %17, i32 0, i32 4, !dbg !21660
  %18 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port12, align 8, !dbg !21660
  store %struct.mlxsw_sp_bridge_port* %18, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21661
  %19 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21662
  %tobool13 = icmp ne %struct.mlxsw_sp_bridge_port* %19, null, !dbg !21662
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !21664

if.then14:                                        ; preds = %if.end11
  %20 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21665
  %dev15 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %20, i32 0, i32 0, !dbg !21667
  %21 = load %struct.net_device*, %struct.net_device** %dev15, align 8, !dbg !21667
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %21, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.101, i64 0, i64 0)) #12, !dbg !21668
  br label %just_remove, !dbg !21669

if.end16:                                         ; preds = %if.end11
  %22 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21670
  %bridge_device17 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %22, i32 0, i32 1, !dbg !21671
  %23 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device17, align 8, !dbg !21671
  store %struct.mlxsw_sp_bridge_device* %23, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21672
  %24 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21673
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %24, i32 0, i32 4, !dbg !21674
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !21674
  %bf.clear = and i8 %bf.load, 1, !dbg !21674
  %conv = zext i8 %bf.clear to i32, !dbg !21673
  %tobool18 = icmp ne i32 %conv, 0, !dbg !21673
  br i1 %tobool18, label %cond.true, label %cond.false, !dbg !21673

cond.true:                                        ; preds = %if.end16
  %25 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21675
  %vid19 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %25, i32 0, i32 3, !dbg !21676
  %26 = load i16, i16* %vid19, align 8, !dbg !21676
  %conv20 = zext i16 %26 to i32, !dbg !21675
  br label %cond.end, !dbg !21673

cond.false:                                       ; preds = %if.end16
  br label %cond.end, !dbg !21673

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ 0, %cond.false ], !dbg !21673
  %conv21 = trunc i32 %cond to i16, !dbg !21673
  store i16 %conv21, i16* %vid, align 2, !dbg !21677
  br label %do_fdb_op, !dbg !21678

do_fdb_op:                                        ; preds = %just_remove, %cond.end
  call void @llvm.dbg.label(metadata !21679), !dbg !21680
  %27 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21681
  %28 = load i8, i8* %local_port, align 1, !dbg !21682
  %arraydecay22 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21683
  %29 = load i16, i16* %fid, align 2, !dbg !21684
  %30 = load i8, i8* %adding.addr, align 1, !dbg !21685
  %tobool23 = trunc i8 %30 to i1, !dbg !21685
  %call24 = call i32 @mlxsw_sp_port_fdb_uc_op(%struct.mlxsw_sp* %27, i8 zeroext %28, i8* %arraydecay22, i16 zeroext %29, i1 zeroext %tobool23, i1 zeroext true) #8, !dbg !21686
  store i32 %call24, i32* %err, align 4, !dbg !21687
  %31 = load i32, i32* %err, align 4, !dbg !21688
  %tobool25 = icmp ne i32 %31, 0, !dbg !21688
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !21690

if.then26:                                        ; preds = %do_fdb_op
  br label %do.body27, !dbg !21691

do.body27:                                        ; preds = %if.then26
  %call28 = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_sp_fdb_notify_mac_process._rs.102, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.mlxsw_sp_fdb_notify_mac_process, i64 0, i64 0)) #8, !dbg !21693
  %tobool29 = icmp ne i32 %call28, 0, !dbg !21693
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !21696

if.then30:                                        ; preds = %do.body27
  %32 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21693
  %bus_info31 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %32, i32 0, i32 2, !dbg !21693
  %33 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info31, align 8, !dbg !21693
  %dev32 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %33, i32 0, i32 2, !dbg !21693
  %34 = load %struct.device*, %struct.device** %dev32, align 8, !dbg !21693
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %34, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i64 0, i64 0)) #12, !dbg !21693
  br label %if.end33, !dbg !21693

if.end33:                                         ; preds = %if.then30, %do.body27
  br label %do.end34, !dbg !21696

do.end34:                                         ; preds = %if.end33
  br label %return, !dbg !21697

if.end35:                                         ; preds = %do_fdb_op
  %35 = load i8, i8* %do_notification, align 1, !dbg !21698
  %tobool36 = trunc i8 %35 to i1, !dbg !21698
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !21700

if.then37:                                        ; preds = %if.end35
  br label %return, !dbg !21701

if.end38:                                         ; preds = %if.end35
  %36 = load i8, i8* %adding.addr, align 1, !dbg !21702
  %tobool39 = trunc i8 %36 to i1, !dbg !21702
  %37 = zext i1 %tobool39 to i64, !dbg !21702
  %cond41 = select i1 %tobool39, i32 1, i32 2, !dbg !21702
  store i32 %cond41, i32* %type, align 4, !dbg !21703
  %38 = load i32, i32* %type, align 4, !dbg !21704
  %arraydecay42 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21705
  %39 = load i16, i16* %vid, align 2, !dbg !21706
  %40 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21707
  %dev43 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %40, i32 0, i32 0, !dbg !21708
  %41 = load %struct.net_device*, %struct.net_device** %dev43, align 8, !dbg !21708
  %42 = load i8, i8* %adding.addr, align 1, !dbg !21709
  %tobool44 = trunc i8 %42 to i1, !dbg !21709
  call void @mlxsw_sp_fdb_call_notifiers(i32 %38, i8* %arraydecay42, i16 zeroext %39, %struct.net_device* %41, i1 zeroext %tobool44) #8, !dbg !21710
  br label %return, !dbg !21711

just_remove:                                      ; preds = %if.then14, %if.then9, %if.then5, %do.end
  call void @llvm.dbg.label(metadata !21712), !dbg !21713
  store i8 0, i8* %adding.addr, align 1, !dbg !21714
  store i8 0, i8* %do_notification, align 1, !dbg !21715
  br label %do_fdb_op, !dbg !21716

return:                                           ; preds = %if.end38, %if.then37, %do.end34
  ret void, !dbg !21717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_notify_mac_lag_process(%struct.mlxsw_sp* %mlxsw_sp, i8* %sfn_pl, i32 %rec_index, i1 zeroext %adding) #0 !dbg !11486 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %sfn_pl.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %adding.addr = alloca i8, align 1
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %bridge_port = alloca %struct.mlxsw_sp_bridge_port*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %type = alloca i32, align 4
  %mac = alloca [6 x i8], align 1
  %lag_vid = alloca i16, align 2
  %lag_id = alloca i16, align 2
  %vid = alloca i16, align 2
  %fid = alloca i16, align 2
  %do_notification = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21718, metadata !DIExpression()), !dbg !21719
  store i8* %sfn_pl, i8** %sfn_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sfn_pl.addr, metadata !21720, metadata !DIExpression()), !dbg !21721
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !21722, metadata !DIExpression()), !dbg !21723
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !21724, metadata !DIExpression()), !dbg !21725
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !21726, metadata !DIExpression()), !dbg !21727
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !21728, metadata !DIExpression()), !dbg !21729
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_port** %bridge_port, metadata !21730, metadata !DIExpression()), !dbg !21731
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !21732, metadata !DIExpression()), !dbg !21733
  call void @llvm.dbg.declare(metadata i32* %type, metadata !21734, metadata !DIExpression()), !dbg !21735
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac, metadata !21736, metadata !DIExpression()), !dbg !21737
  call void @llvm.dbg.declare(metadata i16* %lag_vid, metadata !21738, metadata !DIExpression()), !dbg !21739
  store i16 0, i16* %lag_vid, align 2, !dbg !21739
  call void @llvm.dbg.declare(metadata i16* %lag_id, metadata !21740, metadata !DIExpression()), !dbg !21741
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !21742, metadata !DIExpression()), !dbg !21743
  call void @llvm.dbg.declare(metadata i16* %fid, metadata !21744, metadata !DIExpression()), !dbg !21745
  call void @llvm.dbg.declare(metadata i8* %do_notification, metadata !21746, metadata !DIExpression()), !dbg !21747
  store i8 1, i8* %do_notification, align 1, !dbg !21747
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21748, metadata !DIExpression()), !dbg !21749
  %0 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21750
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !21751
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21752
  call void @mlxsw_reg_sfn_mac_lag_unpack(i8* %0, i32 %1, i8* %arraydecay, i16* %fid, i16* %lag_id) #8, !dbg !21753
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21754
  %3 = load i16, i16* %lag_id, align 2, !dbg !21755
  %call = call %struct.mlxsw_sp_port* @mlxsw_sp_lag_rep_port(%struct.mlxsw_sp* %2, i16 zeroext %3) #8, !dbg !21756
  store %struct.mlxsw_sp_port* %call, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21757
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21758
  %tobool = icmp ne %struct.mlxsw_sp_port* %4, null, !dbg !21758
  br i1 %tobool, label %if.end4, label %if.then, !dbg !21760

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !21761

do.body:                                          ; preds = %if.then
  %call1 = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_sp_fdb_notify_mac_lag_process._rs, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.mlxsw_sp_fdb_notify_mac_lag_process, i64 0, i64 0)) #8, !dbg !21763
  %tobool2 = icmp ne i32 %call1, 0, !dbg !21763
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !21766

if.then3:                                         ; preds = %do.body
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21763
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 2, !dbg !21763
  %6 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !21763
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %6, i32 0, i32 2, !dbg !21763
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21763
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.109, i64 0, i64 0)) #12, !dbg !21763
  br label %if.end, !dbg !21763

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !21766

do.end:                                           ; preds = %if.end
  br label %just_remove, !dbg !21767

if.end4:                                          ; preds = %entry
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21768
  %9 = load i16, i16* %fid, align 2, !dbg !21770
  %call5 = call zeroext i1 @mlxsw_sp_fid_is_dummy(%struct.mlxsw_sp* %8, i16 zeroext %9) #8, !dbg !21771
  br i1 %call5, label %if.then6, label %if.end7, !dbg !21772

if.then6:                                         ; preds = %if.end4
  br label %just_remove, !dbg !21773

if.end7:                                          ; preds = %if.end4
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21774
  %11 = load i16, i16* %fid, align 2, !dbg !21775
  %call8 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_fid(%struct.mlxsw_sp_port* %10, i16 zeroext %11) #8, !dbg !21776
  store %struct.mlxsw_sp_port_vlan* %call8, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21777
  %12 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21778
  %tobool9 = icmp ne %struct.mlxsw_sp_port_vlan* %12, null, !dbg !21778
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !21780

if.then10:                                        ; preds = %if.end7
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21781
  %dev11 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %13, i32 0, i32 0, !dbg !21783
  %14 = load %struct.net_device*, %struct.net_device** %dev11, align 8, !dbg !21783
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %14, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.100, i64 0, i64 0)) #12, !dbg !21784
  br label %just_remove, !dbg !21785

if.end12:                                         ; preds = %if.end7
  %15 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21786
  %bridge_port13 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %15, i32 0, i32 4, !dbg !21787
  %16 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port13, align 8, !dbg !21787
  store %struct.mlxsw_sp_bridge_port* %16, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21788
  %17 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21789
  %tobool14 = icmp ne %struct.mlxsw_sp_bridge_port* %17, null, !dbg !21789
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !21791

if.then15:                                        ; preds = %if.end12
  %18 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21792
  %dev16 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %18, i32 0, i32 0, !dbg !21794
  %19 = load %struct.net_device*, %struct.net_device** %dev16, align 8, !dbg !21794
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %19, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.101, i64 0, i64 0)) #12, !dbg !21795
  br label %just_remove, !dbg !21796

if.end17:                                         ; preds = %if.end12
  %20 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21797
  %bridge_device18 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %20, i32 0, i32 1, !dbg !21798
  %21 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device18, align 8, !dbg !21798
  store %struct.mlxsw_sp_bridge_device* %21, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21799
  %22 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !21800
  %vlan_enabled = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %22, i32 0, i32 4, !dbg !21801
  %bf.load = load i8, i8* %vlan_enabled, align 8, !dbg !21801
  %bf.clear = and i8 %bf.load, 1, !dbg !21801
  %conv = zext i8 %bf.clear to i32, !dbg !21800
  %tobool19 = icmp ne i32 %conv, 0, !dbg !21800
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !21800

cond.true:                                        ; preds = %if.end17
  %23 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21802
  %vid20 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %23, i32 0, i32 3, !dbg !21803
  %24 = load i16, i16* %vid20, align 8, !dbg !21803
  %conv21 = zext i16 %24 to i32, !dbg !21802
  br label %cond.end, !dbg !21800

cond.false:                                       ; preds = %if.end17
  br label %cond.end, !dbg !21800

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv21, %cond.true ], [ 0, %cond.false ], !dbg !21800
  %conv22 = trunc i32 %cond to i16, !dbg !21800
  store i16 %conv22, i16* %vid, align 2, !dbg !21804
  %25 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21805
  %fid23 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %25, i32 0, i32 2, !dbg !21806
  %26 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid23, align 8, !dbg !21806
  %call24 = call zeroext i1 @mlxsw_sp_fid_lag_vid_valid(%struct.mlxsw_sp_fid* %26) #8, !dbg !21807
  br i1 %call24, label %cond.true26, label %cond.false29, !dbg !21807

cond.true26:                                      ; preds = %cond.end
  %27 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !21808
  %vid27 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %27, i32 0, i32 3, !dbg !21809
  %28 = load i16, i16* %vid27, align 8, !dbg !21809
  %conv28 = zext i16 %28 to i32, !dbg !21808
  br label %cond.end30, !dbg !21807

cond.false29:                                     ; preds = %cond.end
  br label %cond.end30, !dbg !21807

cond.end30:                                       ; preds = %cond.false29, %cond.true26
  %cond31 = phi i32 [ %conv28, %cond.true26 ], [ 0, %cond.false29 ], !dbg !21807
  %conv32 = trunc i32 %cond31 to i16, !dbg !21807
  store i16 %conv32, i16* %lag_vid, align 2, !dbg !21810
  br label %do_fdb_op, !dbg !21811

do_fdb_op:                                        ; preds = %just_remove, %cond.end30
  call void @llvm.dbg.label(metadata !21812), !dbg !21813
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21814
  %30 = load i16, i16* %lag_id, align 2, !dbg !21815
  %arraydecay33 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21816
  %31 = load i16, i16* %fid, align 2, !dbg !21817
  %32 = load i16, i16* %lag_vid, align 2, !dbg !21818
  %33 = load i8, i8* %adding.addr, align 1, !dbg !21819
  %tobool34 = trunc i8 %33 to i1, !dbg !21819
  %call35 = call i32 @mlxsw_sp_port_fdb_uc_lag_op(%struct.mlxsw_sp* %29, i16 zeroext %30, i8* %arraydecay33, i16 zeroext %31, i16 zeroext %32, i1 zeroext %tobool34, i1 zeroext true) #8, !dbg !21820
  store i32 %call35, i32* %err, align 4, !dbg !21821
  %34 = load i32, i32* %err, align 4, !dbg !21822
  %tobool36 = icmp ne i32 %34, 0, !dbg !21822
  br i1 %tobool36, label %if.then37, label %if.end46, !dbg !21824

if.then37:                                        ; preds = %do_fdb_op
  br label %do.body38, !dbg !21825

do.body38:                                        ; preds = %if.then37
  %call39 = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_sp_fdb_notify_mac_lag_process._rs.110, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.mlxsw_sp_fdb_notify_mac_lag_process, i64 0, i64 0)) #8, !dbg !21827
  %tobool40 = icmp ne i32 %call39, 0, !dbg !21827
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !21830

if.then41:                                        ; preds = %do.body38
  %35 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21827
  %bus_info42 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %35, i32 0, i32 2, !dbg !21827
  %36 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info42, align 8, !dbg !21827
  %dev43 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %36, i32 0, i32 2, !dbg !21827
  %37 = load %struct.device*, %struct.device** %dev43, align 8, !dbg !21827
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %37, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i64 0, i64 0)) #12, !dbg !21827
  br label %if.end44, !dbg !21827

if.end44:                                         ; preds = %if.then41, %do.body38
  br label %do.end45, !dbg !21830

do.end45:                                         ; preds = %if.end44
  br label %return, !dbg !21831

if.end46:                                         ; preds = %do_fdb_op
  %38 = load i8, i8* %do_notification, align 1, !dbg !21832
  %tobool47 = trunc i8 %38 to i1, !dbg !21832
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !21834

if.then48:                                        ; preds = %if.end46
  br label %return, !dbg !21835

if.end49:                                         ; preds = %if.end46
  %39 = load i8, i8* %adding.addr, align 1, !dbg !21836
  %tobool50 = trunc i8 %39 to i1, !dbg !21836
  %40 = zext i1 %tobool50 to i64, !dbg !21836
  %cond52 = select i1 %tobool50, i32 1, i32 2, !dbg !21836
  store i32 %cond52, i32* %type, align 4, !dbg !21837
  %41 = load i32, i32* %type, align 4, !dbg !21838
  %arraydecay53 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21839
  %42 = load i16, i16* %vid, align 2, !dbg !21840
  %43 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !21841
  %dev54 = getelementptr inbounds %struct.mlxsw_sp_bridge_port, %struct.mlxsw_sp_bridge_port* %43, i32 0, i32 0, !dbg !21842
  %44 = load %struct.net_device*, %struct.net_device** %dev54, align 8, !dbg !21842
  %45 = load i8, i8* %adding.addr, align 1, !dbg !21843
  %tobool55 = trunc i8 %45 to i1, !dbg !21843
  call void @mlxsw_sp_fdb_call_notifiers(i32 %41, i8* %arraydecay53, i16 zeroext %42, %struct.net_device* %44, i1 zeroext %tobool55) #8, !dbg !21844
  br label %return, !dbg !21845

just_remove:                                      ; preds = %if.then15, %if.then10, %if.then6, %do.end
  call void @llvm.dbg.label(metadata !21846), !dbg !21847
  store i8 0, i8* %adding.addr, align 1, !dbg !21848
  store i8 0, i8* %do_notification, align 1, !dbg !21849
  br label %do_fdb_op, !dbg !21850

return:                                           ; preds = %if.end49, %if.then48, %do.end45
  ret void, !dbg !21851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_notify_mac_uc_tunnel_process(%struct.mlxsw_sp* %mlxsw_sp, i8* %sfn_pl, i32 %rec_index, i1 zeroext %adding) #0 !dbg !21852 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %sfn_pl.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %adding.addr = alloca i8, align 1
  %sfn_proto = alloca i32, align 4
  %type = alloca i32, align 4
  %nve_dev = alloca %struct.net_device*, align 8
  %addr = alloca %union.mlxsw_sp_l3addr, align 4
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %mac = alloca [6 x i8], align 1
  %fid_index = alloca i16, align 2
  %vid = alloca i16, align 2
  %vni = alloca i32, align 4
  %uip = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21853, metadata !DIExpression()), !dbg !21854
  store i8* %sfn_pl, i8** %sfn_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sfn_pl.addr, metadata !21855, metadata !DIExpression()), !dbg !21856
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !21857, metadata !DIExpression()), !dbg !21858
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !21859, metadata !DIExpression()), !dbg !21860
  call void @llvm.dbg.declare(metadata i32* %sfn_proto, metadata !21861, metadata !DIExpression()), !dbg !21862
  call void @llvm.dbg.declare(metadata i32* %type, metadata !21863, metadata !DIExpression()), !dbg !21864
  call void @llvm.dbg.declare(metadata %struct.net_device** %nve_dev, metadata !21865, metadata !DIExpression()), !dbg !21866
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr* %addr, metadata !21867, metadata !DIExpression()), !dbg !21868
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !21869, metadata !DIExpression()), !dbg !21870
  call void @llvm.dbg.declare(metadata [6 x i8]* %mac, metadata !21871, metadata !DIExpression()), !dbg !21872
  call void @llvm.dbg.declare(metadata i16* %fid_index, metadata !21873, metadata !DIExpression()), !dbg !21874
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !21875, metadata !DIExpression()), !dbg !21876
  call void @llvm.dbg.declare(metadata i32* %vni, metadata !21877, metadata !DIExpression()), !dbg !21878
  call void @llvm.dbg.declare(metadata i32* %uip, metadata !21879, metadata !DIExpression()), !dbg !21880
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21881, metadata !DIExpression()), !dbg !21882
  %0 = load i8*, i8** %sfn_pl.addr, align 8, !dbg !21883
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !21884
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21885
  call void @mlxsw_reg_sfn_uc_tunnel_unpack(i8* %0, i32 %1, i8* %arraydecay, i16* %fid_index, i32* %uip, i32* %sfn_proto) #8, !dbg !21886
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21887
  %3 = load i16, i16* %fid_index, align 2, !dbg !21888
  %call = call %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_index(%struct.mlxsw_sp* %2, i16 zeroext %3) #8, !dbg !21889
  store %struct.mlxsw_sp_fid* %call, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21890
  %4 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21891
  %tobool = icmp ne %struct.mlxsw_sp_fid* %4, null, !dbg !21891
  br i1 %tobool, label %if.end, label %if.then, !dbg !21893

if.then:                                          ; preds = %entry
  br label %err_fid_lookup, !dbg !21894

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21895
  %6 = load i32, i32* %uip, align 4, !dbg !21896
  %7 = load i32, i32* %sfn_proto, align 4, !dbg !21897
  %call1 = call i32 @mlxsw_sp_nve_learned_ip_resolve(%struct.mlxsw_sp* %5, i32 %6, i32 %7, %union.mlxsw_sp_l3addr* %addr) #8, !dbg !21898
  store i32 %call1, i32* %err, align 4, !dbg !21899
  %8 = load i32, i32* %err, align 4, !dbg !21900
  %tobool2 = icmp ne i32 %8, 0, !dbg !21900
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !21902

if.then3:                                         ; preds = %if.end
  br label %err_ip_resolve, !dbg !21903

if.end4:                                          ; preds = %if.end
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21904
  %10 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21905
  %11 = load i8, i8* %adding.addr, align 1, !dbg !21906
  %tobool5 = trunc i8 %11 to i1, !dbg !21906
  %call6 = call i32 @__mlxsw_sp_fdb_notify_mac_uc_tunnel_process(%struct.mlxsw_sp* %9, %struct.mlxsw_sp_fid* %10, i1 zeroext %tobool5, %struct.net_device** %nve_dev, i16* %vid, i32* %vni) #8, !dbg !21907
  store i32 %call6, i32* %err, align 4, !dbg !21908
  %12 = load i32, i32* %err, align 4, !dbg !21909
  %tobool7 = icmp ne i32 %12, 0, !dbg !21909
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !21911

if.then8:                                         ; preds = %if.end4
  br label %err_fdb_process, !dbg !21912

if.end9:                                          ; preds = %if.end4
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21913
  %arraydecay10 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21914
  %14 = load i16, i16* %fid_index, align 2, !dbg !21915
  %15 = load i32, i32* %sfn_proto, align 4, !dbg !21916
  %16 = load i8, i8* %adding.addr, align 1, !dbg !21917
  %tobool11 = trunc i8 %16 to i1, !dbg !21917
  %call12 = call i32 @mlxsw_sp_port_fdb_tunnel_uc_op(%struct.mlxsw_sp* %13, i8* %arraydecay10, i16 zeroext %14, i32 %15, %union.mlxsw_sp_l3addr* %addr, i1 zeroext %tobool11, i1 zeroext true) #8, !dbg !21918
  store i32 %call12, i32* %err, align 4, !dbg !21919
  %17 = load i32, i32* %err, align 4, !dbg !21920
  %tobool13 = icmp ne i32 %17, 0, !dbg !21920
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !21922

if.then14:                                        ; preds = %if.end9
  br label %err_fdb_op, !dbg !21923

if.end15:                                         ; preds = %if.end9
  %18 = load %struct.net_device*, %struct.net_device** %nve_dev, align 8, !dbg !21924
  %arraydecay16 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21925
  %19 = load i32, i32* %sfn_proto, align 4, !dbg !21926
  %20 = load i32, i32* %vni, align 4, !dbg !21927
  %21 = load i8, i8* %adding.addr, align 1, !dbg !21928
  %tobool17 = trunc i8 %21 to i1, !dbg !21928
  call void @mlxsw_sp_fdb_nve_call_notifiers(%struct.net_device* %18, i8* %arraydecay16, i32 %19, %union.mlxsw_sp_l3addr* %addr, i32 %20, i1 zeroext %tobool17) #8, !dbg !21929
  %22 = load i8, i8* %adding.addr, align 1, !dbg !21930
  %tobool18 = trunc i8 %22 to i1, !dbg !21930
  %23 = zext i1 %tobool18 to i64, !dbg !21930
  %cond = select i1 %tobool18, i32 1, i32 2, !dbg !21930
  store i32 %cond, i32* %type, align 4, !dbg !21931
  %24 = load i32, i32* %type, align 4, !dbg !21932
  %arraydecay19 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21933
  %25 = load i16, i16* %vid, align 2, !dbg !21934
  %26 = load %struct.net_device*, %struct.net_device** %nve_dev, align 8, !dbg !21935
  %27 = load i8, i8* %adding.addr, align 1, !dbg !21936
  %tobool20 = trunc i8 %27 to i1, !dbg !21936
  call void @mlxsw_sp_fdb_call_notifiers(i32 %24, i8* %arraydecay19, i16 zeroext %25, %struct.net_device* %26, i1 zeroext %tobool20) #8, !dbg !21937
  %28 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21938
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %28) #8, !dbg !21939
  br label %return, !dbg !21940

err_fdb_op:                                       ; preds = %if.then14
  call void @llvm.dbg.label(metadata !21941), !dbg !21942
  br label %err_fdb_process, !dbg !21940

err_fdb_process:                                  ; preds = %err_fdb_op, %if.then8
  call void @llvm.dbg.label(metadata !21943), !dbg !21944
  br label %err_ip_resolve, !dbg !21940

err_ip_resolve:                                   ; preds = %err_fdb_process, %if.then3
  call void @llvm.dbg.label(metadata !21945), !dbg !21946
  %29 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21947
  call void @mlxsw_sp_fid_put(%struct.mlxsw_sp_fid* %29) #8, !dbg !21948
  br label %err_fid_lookup, !dbg !21948

err_fid_lookup:                                   ; preds = %err_ip_resolve, %if.then
  call void @llvm.dbg.label(metadata !21949), !dbg !21950
  %30 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21951
  %arraydecay21 = getelementptr inbounds [6 x i8], [6 x i8]* %mac, i64 0, i64 0, !dbg !21952
  %31 = load i16, i16* %fid_index, align 2, !dbg !21953
  %32 = load i32, i32* %sfn_proto, align 4, !dbg !21954
  %call22 = call i32 @mlxsw_sp_port_fdb_tunnel_uc_op(%struct.mlxsw_sp* %30, i8* %arraydecay21, i16 zeroext %31, i32 %32, %union.mlxsw_sp_l3addr* %addr, i1 zeroext false, i1 zeroext true) #8, !dbg !21955
  br label %return, !dbg !21956

return:                                           ; preds = %err_fid_lookup, %if.end15
  ret void, !dbg !21956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_mac_unpack(i8* %payload, i32 %rec_index, i8* %mac, i16* %p_vid, i8* %p_local_port) #0 !dbg !21957 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %p_vid.addr = alloca i16*, align 8
  %p_local_port.addr = alloca i8*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !21960, metadata !DIExpression()), !dbg !21961
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !21962, metadata !DIExpression()), !dbg !21963
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !21964, metadata !DIExpression()), !dbg !21965
  store i16* %p_vid, i16** %p_vid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_vid.addr, metadata !21966, metadata !DIExpression()), !dbg !21967
  store i8* %p_local_port, i8** %p_local_port.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_local_port.addr, metadata !21968, metadata !DIExpression()), !dbg !21969
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !21970
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !21971
  %conv = trunc i32 %1 to i16, !dbg !21971
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !21972
  call void @mlxsw_reg_sfn_rec_mac_memcpy_from(i8* %0, i16 zeroext %conv, i8* %2) #8, !dbg !21973
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !21974
  %4 = load i32, i32* %rec_index.addr, align 4, !dbg !21975
  %conv1 = trunc i32 %4 to i16, !dbg !21975
  %call = call i32 @mlxsw_reg_sfn_mac_fid_get(i8* %3, i16 zeroext %conv1) #8, !dbg !21976
  %conv2 = trunc i32 %call to i16, !dbg !21976
  %5 = load i16*, i16** %p_vid.addr, align 8, !dbg !21977
  store i16 %conv2, i16* %5, align 2, !dbg !21978
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !21979
  %7 = load i32, i32* %rec_index.addr, align 4, !dbg !21980
  %conv3 = trunc i32 %7 to i16, !dbg !21980
  %call4 = call i32 @mlxsw_reg_sfn_mac_system_port_get(i8* %6, i16 zeroext %conv3) #8, !dbg !21981
  %conv5 = trunc i32 %call4 to i8, !dbg !21981
  %8 = load i8*, i8** %p_local_port.addr, align 8, !dbg !21982
  store i8 %conv5, i8* %8, align 1, !dbg !21983
  ret void, !dbg !21984
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_fid_is_dummy(%struct.mlxsw_sp*, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_fid(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %fid_index) #0 !dbg !21985 {
entry:
  %retval = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %fid_index.addr = alloca i16, align 2
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %fid = alloca %struct.mlxsw_sp_fid*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21988, metadata !DIExpression()), !dbg !21989
  store i16 %fid_index, i16* %fid_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid_index.addr, metadata !21990, metadata !DIExpression()), !dbg !21991
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !21992, metadata !DIExpression()), !dbg !21993
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21994, metadata !DIExpression()), !dbg !21997
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21997
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 12, !dbg !21997
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !21997
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !21997
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !21997
  store i8* %2, i8** %__mptr, align 8, !dbg !21997
  br label %do.body, !dbg !21997

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21998

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !21997
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !21997
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !21997
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !21998
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !21997
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22000
  br label %for.cond, !dbg !22000

for.cond:                                         ; preds = %do.end10, %do.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22001
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 0, !dbg !22001
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22001
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 12, !dbg !22001
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !22001
  %lnot = xor i1 %cmp, true, !dbg !22001
  br i1 %lnot, label %for.body, label %for.end, !dbg !22000

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid, metadata !22003, metadata !DIExpression()), !dbg !22005
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22006
  %fid2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 2, !dbg !22007
  %9 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid2, align 8, !dbg !22007
  store %struct.mlxsw_sp_fid* %9, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !22005
  %10 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !22008
  %tobool = icmp ne %struct.mlxsw_sp_fid* %10, null, !dbg !22008
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !22010

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !22011
  %call = call zeroext i16 @mlxsw_sp_fid_index(%struct.mlxsw_sp_fid* %11) #8, !dbg !22012
  %conv = zext i16 %call to i32, !dbg !22012
  %12 = load i16, i16* %fid_index.addr, align 2, !dbg !22013
  %conv3 = zext i16 %12 to i32, !dbg !22013
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !22014
  br i1 %cmp4, label %if.then, label %if.end, !dbg !22015

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22016
  store %struct.mlxsw_sp_port_vlan* %13, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !22017
  br label %return, !dbg !22017

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !22018

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !22019, metadata !DIExpression()), !dbg !22021
  %14 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22021
  %list7 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %14, i32 0, i32 0, !dbg !22021
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %list7, i32 0, i32 0, !dbg !22021
  %15 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !22021
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !22021
  store i8* %16, i8** %__mptr6, align 8, !dbg !22021
  br label %do.body9, !dbg !22021

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !22022

do.end10:                                         ; preds = %do.body9
  %17 = load i8*, i8** %__mptr6, align 8, !dbg !22021
  %add.ptr12 = getelementptr i8, i8* %17, i64 0, !dbg !22021
  %18 = bitcast i8* %add.ptr12 to %struct.mlxsw_sp_port_vlan*, !dbg !22021
  store %struct.mlxsw_sp_port_vlan* %18, %struct.mlxsw_sp_port_vlan** %tmp11, align 8, !dbg !22022
  %19 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp11, align 8, !dbg !22021
  store %struct.mlxsw_sp_port_vlan* %19, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22001
  br label %for.cond, !dbg !22001, !llvm.loop !22024

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_port_vlan* null, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !22026
  br label %return, !dbg !22026

return:                                           ; preds = %for.end, %if.then
  %20 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !22027
  ret %struct.mlxsw_sp_port_vlan* %20, !dbg !22027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_rec_mac_memcpy_from(i8* %buf, i16 zeroext %index, i8* %dst) #0 !dbg !22028 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %dst.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22031, metadata !DIExpression()), !dbg !22032
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22033, metadata !DIExpression()), !dbg !22032
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !22034, metadata !DIExpression()), !dbg !22032
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22032
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !22032
  %2 = load i16, i16* %index.addr, align 2, !dbg !22032
  call void @__mlxsw_item_memcpy_from(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_reg_sfn_rec_mac_item, i16 zeroext %2) #8, !dbg !22032
  ret void, !dbg !22032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_mac_fid_get(i8* %buf, i16 zeroext %index) #0 !dbg !22035 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22036, metadata !DIExpression()), !dbg !22037
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22038, metadata !DIExpression()), !dbg !22037
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22037
  %1 = load i16, i16* %index.addr, align 2, !dbg !22037
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_mac_fid_item to %struct.mlxsw_item*), i16 zeroext %1) #8, !dbg !22037
  ret i32 %call, !dbg !22037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_mac_system_port_get(i8* %buf, i16 zeroext %index) #0 !dbg !22039 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22040, metadata !DIExpression()), !dbg !22041
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22042, metadata !DIExpression()), !dbg !22041
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22041
  %1 = load i16, i16* %index.addr, align 2, !dbg !22041
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_mac_system_port_item to %struct.mlxsw_item*), i16 zeroext %1) #8, !dbg !22041
  ret i32 %call, !dbg !22041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_memcpy_from(i8* %buf, i8* %dst, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !22043 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22046, metadata !DIExpression()), !dbg !22047
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !22048, metadata !DIExpression()), !dbg !22049
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !22050, metadata !DIExpression()), !dbg !22051
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22052, metadata !DIExpression()), !dbg !22053
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !22054, metadata !DIExpression()), !dbg !22055
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !22056
  %1 = load i16, i16* %index.addr, align 2, !dbg !22057
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #8, !dbg !22058
  store i32 %call, i32* %offset, align 4, !dbg !22055
  %2 = load i8*, i8** %dst.addr, align 8, !dbg !22059
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !22060
  %4 = load i32, i32* %offset, align 4, !dbg !22061
  %idxprom = zext i32 %4 to i64, !dbg !22060
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !22060
  %5 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !22062
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %5, i32 0, i32 6, !dbg !22063
  %bytes = bitcast %union.anon.168* %size to i16*, !dbg !22064
  %6 = load i16, i16* %bytes, align 2, !dbg !22064
  %conv = zext i16 %6 to i64, !dbg !22062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %arrayidx, i64 %conv, i1 false), !dbg !22065
  ret void, !dbg !22066
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_mac_lag_unpack(i8* %payload, i32 %rec_index, i8* %mac, i16* %p_vid, i16* %p_lag_id) #0 !dbg !22067 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %p_vid.addr = alloca i16*, align 8
  %p_lag_id.addr = alloca i16*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22070, metadata !DIExpression()), !dbg !22071
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !22072, metadata !DIExpression()), !dbg !22073
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !22074, metadata !DIExpression()), !dbg !22075
  store i16* %p_vid, i16** %p_vid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_vid.addr, metadata !22076, metadata !DIExpression()), !dbg !22077
  store i16* %p_lag_id, i16** %p_lag_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_lag_id.addr, metadata !22078, metadata !DIExpression()), !dbg !22079
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22080
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !22081
  %conv = trunc i32 %1 to i16, !dbg !22081
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !22082
  call void @mlxsw_reg_sfn_rec_mac_memcpy_from(i8* %0, i16 zeroext %conv, i8* %2) #8, !dbg !22083
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !22084
  %4 = load i32, i32* %rec_index.addr, align 4, !dbg !22085
  %conv1 = trunc i32 %4 to i16, !dbg !22085
  %call = call i32 @mlxsw_reg_sfn_mac_fid_get(i8* %3, i16 zeroext %conv1) #8, !dbg !22086
  %conv2 = trunc i32 %call to i16, !dbg !22086
  %5 = load i16*, i16** %p_vid.addr, align 8, !dbg !22087
  store i16 %conv2, i16* %5, align 2, !dbg !22088
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !22089
  %7 = load i32, i32* %rec_index.addr, align 4, !dbg !22090
  %conv3 = trunc i32 %7 to i16, !dbg !22090
  %call4 = call i32 @mlxsw_reg_sfn_mac_lag_lag_id_get(i8* %6, i16 zeroext %conv3) #8, !dbg !22091
  %conv5 = trunc i32 %call4 to i16, !dbg !22091
  %8 = load i16*, i16** %p_lag_id.addr, align 8, !dbg !22092
  store i16 %conv5, i16* %8, align 2, !dbg !22093
  ret void, !dbg !22094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port* @mlxsw_sp_lag_rep_port(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id) #0 !dbg !22095 {
entry:
  %retval = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %max_lag_members = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !22098, metadata !DIExpression()), !dbg !22099
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22100, metadata !DIExpression()), !dbg !22101
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !22102, metadata !DIExpression()), !dbg !22103
  call void @llvm.dbg.declare(metadata i64* %max_lag_members, metadata !22104, metadata !DIExpression()), !dbg !22105
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22106, metadata !DIExpression()), !dbg !22107
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !22108
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !22108
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22108
  %call = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %1, i32 16) #8, !dbg !22108
  store i64 %call, i64* %max_lag_members, align 8, !dbg !22109
  store i32 0, i32* %i, align 4, !dbg !22110
  br label %for.cond, !dbg !22112

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !22113
  %conv = sext i32 %2 to i64, !dbg !22113
  %3 = load i64, i64* %max_lag_members, align 8, !dbg !22115
  %cmp = icmp ult i64 %conv, %3, !dbg !22116
  br i1 %cmp, label %for.body, label %for.end, !dbg !22117

for.body:                                         ; preds = %for.cond
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !22118
  %5 = load i16, i16* %lag_id.addr, align 2, !dbg !22120
  %6 = load i32, i32* %i, align 4, !dbg !22121
  %conv2 = trunc i32 %6 to i8, !dbg !22121
  %call3 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_lagged_get(%struct.mlxsw_sp* %4, i16 zeroext %5, i8 zeroext %conv2) #8, !dbg !22122
  store %struct.mlxsw_sp_port* %call3, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22123
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22124
  %tobool = icmp ne %struct.mlxsw_sp_port* %7, null, !dbg !22124
  br i1 %tobool, label %if.then, label %if.end, !dbg !22126

if.then:                                          ; preds = %for.body
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22127
  store %struct.mlxsw_sp_port* %8, %struct.mlxsw_sp_port** %retval, align 8, !dbg !22128
  br label %return, !dbg !22128

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !22129

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !22130
  %inc = add i32 %9, 1, !dbg !22130
  store i32 %inc, i32* %i, align 4, !dbg !22130
  br label %for.cond, !dbg !22131, !llvm.loop !22132

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_port* null, %struct.mlxsw_sp_port** %retval, align 8, !dbg !22134
  br label %return, !dbg !22134

return:                                           ; preds = %for.end, %if.then
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %retval, align 8, !dbg !22135
  ret %struct.mlxsw_sp_port* %10, !dbg !22135
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_fid_lag_vid_valid(%struct.mlxsw_sp_fid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_mac_lag_lag_id_get(i8* %buf, i16 zeroext %index) #0 !dbg !22136 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22137, metadata !DIExpression()), !dbg !22138
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22139, metadata !DIExpression()), !dbg !22138
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22138
  %1 = load i16, i16* %index.addr, align 2, !dbg !22138
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_mac_lag_lag_id_item to %struct.mlxsw_item*), i16 zeroext %1) #8, !dbg !22138
  ret i32 %call, !dbg !22138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sfn_uc_tunnel_unpack(i8* %payload, i32 %rec_index, i8* %mac, i16* %p_fid, i32* %p_uip, i32* %p_proto) #0 !dbg !22140 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec_index.addr = alloca i32, align 4
  %mac.addr = alloca i8*, align 8
  %p_fid.addr = alloca i16*, align 8
  %p_uip.addr = alloca i32*, align 8
  %p_proto.addr = alloca i32*, align 8
  %uip_msb = alloca i32, align 4
  %uip_lsb = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22144, metadata !DIExpression()), !dbg !22145
  store i32 %rec_index, i32* %rec_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec_index.addr, metadata !22146, metadata !DIExpression()), !dbg !22147
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !22148, metadata !DIExpression()), !dbg !22149
  store i16* %p_fid, i16** %p_fid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_fid.addr, metadata !22150, metadata !DIExpression()), !dbg !22151
  store i32* %p_uip, i32** %p_uip.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_uip.addr, metadata !22152, metadata !DIExpression()), !dbg !22153
  store i32* %p_proto, i32** %p_proto.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_proto.addr, metadata !22154, metadata !DIExpression()), !dbg !22155
  call void @llvm.dbg.declare(metadata i32* %uip_msb, metadata !22156, metadata !DIExpression()), !dbg !22157
  call void @llvm.dbg.declare(metadata i32* %uip_lsb, metadata !22158, metadata !DIExpression()), !dbg !22159
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22160
  %1 = load i32, i32* %rec_index.addr, align 4, !dbg !22161
  %conv = trunc i32 %1 to i16, !dbg !22161
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !22162
  call void @mlxsw_reg_sfn_rec_mac_memcpy_from(i8* %0, i16 zeroext %conv, i8* %2) #8, !dbg !22163
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !22164
  %4 = load i32, i32* %rec_index.addr, align 4, !dbg !22165
  %conv1 = trunc i32 %4 to i16, !dbg !22165
  %call = call i32 @mlxsw_reg_sfn_mac_fid_get(i8* %3, i16 zeroext %conv1) #8, !dbg !22166
  %conv2 = trunc i32 %call to i16, !dbg !22166
  %5 = load i16*, i16** %p_fid.addr, align 8, !dbg !22167
  store i16 %conv2, i16* %5, align 2, !dbg !22168
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !22169
  %7 = load i32, i32* %rec_index.addr, align 4, !dbg !22170
  %conv3 = trunc i32 %7 to i16, !dbg !22170
  %call4 = call i32 @mlxsw_reg_sfn_uc_tunnel_uip_msb_get(i8* %6, i16 zeroext %conv3) #8, !dbg !22171
  store i32 %call4, i32* %uip_msb, align 4, !dbg !22172
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !22173
  %9 = load i32, i32* %rec_index.addr, align 4, !dbg !22174
  %conv5 = trunc i32 %9 to i16, !dbg !22174
  %call6 = call i32 @mlxsw_reg_sfn_uc_tunnel_uip_lsb_get(i8* %8, i16 zeroext %conv5) #8, !dbg !22175
  store i32 %call6, i32* %uip_lsb, align 4, !dbg !22176
  %10 = load i32, i32* %uip_msb, align 4, !dbg !22177
  %shl = shl i32 %10, 24, !dbg !22178
  %11 = load i32, i32* %uip_lsb, align 4, !dbg !22179
  %or = or i32 %shl, %11, !dbg !22180
  %12 = load i32*, i32** %p_uip.addr, align 8, !dbg !22181
  store i32 %or, i32* %12, align 4, !dbg !22182
  %13 = load i8*, i8** %payload.addr, align 8, !dbg !22183
  %14 = load i32, i32* %rec_index.addr, align 4, !dbg !22184
  %conv7 = trunc i32 %14 to i16, !dbg !22184
  %call8 = call i32 @mlxsw_reg_sfn_uc_tunnel_protocol_get(i8* %13, i16 zeroext %conv7) #8, !dbg !22185
  %15 = load i32*, i32** %p_proto.addr, align 8, !dbg !22186
  store i32 %call8, i32* %15, align 4, !dbg !22187
  ret void, !dbg !22188
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_fid* @mlxsw_sp_fid_lookup_by_index(%struct.mlxsw_sp*, i16 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_nve_learned_ip_resolve(%struct.mlxsw_sp*, i32, i32, %union.mlxsw_sp_l3addr*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_sp_fdb_notify_mac_uc_tunnel_process(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp_fid* %fid, i1 zeroext %adding, %struct.net_device** %nve_dev, i16* %p_vid, i32* %p_vni) #0 !dbg !22189 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %fid.addr = alloca %struct.mlxsw_sp_fid*, align 8
  %adding.addr = alloca i8, align 1
  %nve_dev.addr = alloca %struct.net_device**, align 8
  %p_vid.addr = alloca i16*, align 8
  %p_vni.addr = alloca i32*, align 8
  %bridge_device = alloca %struct.mlxsw_sp_bridge_device*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %nve_ifindex = alloca i32, align 4
  %err = alloca i32, align 4
  %vxlan = alloca %struct.vxlan_dev*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !22193, metadata !DIExpression()), !dbg !22194
  store %struct.mlxsw_sp_fid* %fid, %struct.mlxsw_sp_fid** %fid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_fid** %fid.addr, metadata !22195, metadata !DIExpression()), !dbg !22196
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !22197, metadata !DIExpression()), !dbg !22198
  store %struct.net_device** %nve_dev, %struct.net_device*** %nve_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device*** %nve_dev.addr, metadata !22199, metadata !DIExpression()), !dbg !22200
  store i16* %p_vid, i16** %p_vid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_vid.addr, metadata !22201, metadata !DIExpression()), !dbg !22202
  store i32* %p_vni, i32** %p_vni.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_vni.addr, metadata !22203, metadata !DIExpression()), !dbg !22204
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_bridge_device** %bridge_device, metadata !22205, metadata !DIExpression()), !dbg !22206
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !22207, metadata !DIExpression()), !dbg !22208
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22209, metadata !DIExpression()), !dbg !22210
  call void @llvm.dbg.declare(metadata i32* %nve_ifindex, metadata !22211, metadata !DIExpression()), !dbg !22212
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22213, metadata !DIExpression()), !dbg !22214
  %0 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid.addr, align 8, !dbg !22215
  %call = call i32 @mlxsw_sp_fid_nve_ifindex(%struct.mlxsw_sp_fid* %0, i32* %nve_ifindex) #8, !dbg !22216
  store i32 %call, i32* %err, align 4, !dbg !22217
  %1 = load i32, i32* %err, align 4, !dbg !22218
  %tobool = icmp ne i32 %1, 0, !dbg !22218
  br i1 %tobool, label %if.then, label %if.end, !dbg !22220

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !22221
  store i32 %2, i32* %retval, align 4, !dbg !22222
  br label %return, !dbg !22222

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid.addr, align 8, !dbg !22223
  %4 = load i32*, i32** %p_vni.addr, align 8, !dbg !22224
  %call1 = call i32 @mlxsw_sp_fid_vni(%struct.mlxsw_sp_fid* %3, i32* %4) #8, !dbg !22225
  store i32 %call1, i32* %err, align 4, !dbg !22226
  %5 = load i32, i32* %err, align 4, !dbg !22227
  %tobool2 = icmp ne i32 %5, 0, !dbg !22227
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !22229

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !22230
  store i32 %6, i32* %retval, align 4, !dbg !22231
  br label %return, !dbg !22231

if.end4:                                          ; preds = %if.end
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !22232
  %call5 = call %struct.net* @mlxsw_sp_net(%struct.mlxsw_sp* %7) #8, !dbg !22233
  %8 = load i32, i32* %nve_ifindex, align 4, !dbg !22234
  %call6 = call %struct.net_device* @__dev_get_by_index(%struct.net* %call5, i32 %8) #8, !dbg !22235
  store %struct.net_device* %call6, %struct.net_device** %dev, align 8, !dbg !22236
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22237
  %tobool7 = icmp ne %struct.net_device* %9, null, !dbg !22237
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !22239

if.then8:                                         ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !22240
  br label %return, !dbg !22240

if.end9:                                          ; preds = %if.end4
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22241
  %11 = load %struct.net_device**, %struct.net_device*** %nve_dev.addr, align 8, !dbg !22242
  store %struct.net_device* %10, %struct.net_device** %11, align 8, !dbg !22243
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22244
  %call10 = call zeroext i1 @netif_running(%struct.net_device* %12) #8, !dbg !22246
  br i1 %call10, label %if.end12, label %if.then11, !dbg !22247

if.then11:                                        ; preds = %if.end9
  store i32 -22, i32* %retval, align 4, !dbg !22248
  br label %return, !dbg !22248

if.end12:                                         ; preds = %if.end9
  %13 = load i8, i8* %adding.addr, align 1, !dbg !22249
  %tobool13 = trunc i8 %13 to i1, !dbg !22249
  br i1 %tobool13, label %land.lhs.true, label %if.end16, !dbg !22251

land.lhs.true:                                    ; preds = %if.end12
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22252
  %call14 = call zeroext i1 @br_port_flag_is_set(%struct.net_device* %14, i64 32) #8, !dbg !22253
  br i1 %call14, label %if.end16, label %if.then15, !dbg !22254

if.then15:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !22255
  br label %return, !dbg !22255

if.end16:                                         ; preds = %land.lhs.true, %if.end12
  %15 = load i8, i8* %adding.addr, align 1, !dbg !22256
  %tobool17 = trunc i8 %15 to i1, !dbg !22256
  br i1 %tobool17, label %land.lhs.true18, label %if.end25, !dbg !22258

land.lhs.true18:                                  ; preds = %if.end16
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22259
  %call19 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %16) #8, !dbg !22260
  br i1 %call19, label %if.then20, label %if.end25, !dbg !22261

if.then20:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !22262, metadata !DIExpression()), !dbg !22264
  %17 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22265
  %call21 = call i8* @netdev_priv(%struct.net_device* %17) #8, !dbg !22266
  %18 = bitcast i8* %call21 to %struct.vxlan_dev*, !dbg !22266
  store %struct.vxlan_dev* %18, %struct.vxlan_dev** %vxlan, align 8, !dbg !22264
  %19 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !22267
  %cfg = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %19, i32 0, i32 12, !dbg !22269
  %flags = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %cfg, i32 0, i32 11, !dbg !22270
  %20 = load i32, i32* %flags, align 8, !dbg !22270
  %and = and i32 %20, 1, !dbg !22271
  %tobool22 = icmp ne i32 %and, 0, !dbg !22271
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !22272

if.then23:                                        ; preds = %if.then20
  store i32 -22, i32* %retval, align 4, !dbg !22273
  br label %return, !dbg !22273

if.end24:                                         ; preds = %if.then20
  br label %if.end25, !dbg !22274

if.end25:                                         ; preds = %if.end24, %land.lhs.true18, %if.end16
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22275
  %call26 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %21) #8, !dbg !22276
  store %struct.net_device* %call26, %struct.net_device** %br_dev, align 8, !dbg !22277
  %22 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !22278
  %tobool27 = icmp ne %struct.net_device* %22, null, !dbg !22278
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !22280

if.then28:                                        ; preds = %if.end25
  store i32 -22, i32* %retval, align 4, !dbg !22281
  br label %return, !dbg !22281

if.end29:                                         ; preds = %if.end25
  %23 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !22282
  %bridge = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %23, i32 0, i32 8, !dbg !22283
  %24 = load %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_bridge** %bridge, align 8, !dbg !22283
  %25 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !22284
  %call30 = call %struct.mlxsw_sp_bridge_device* @mlxsw_sp_bridge_device_find(%struct.mlxsw_sp_bridge* %24, %struct.net_device* %25) #8, !dbg !22285
  store %struct.mlxsw_sp_bridge_device* %call30, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !22286
  %26 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !22287
  %tobool31 = icmp ne %struct.mlxsw_sp_bridge_device* %26, null, !dbg !22287
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !22289

if.then32:                                        ; preds = %if.end29
  store i32 -22, i32* %retval, align 4, !dbg !22290
  br label %return, !dbg !22290

if.end33:                                         ; preds = %if.end29
  %27 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !22291
  %ops = getelementptr inbounds %struct.mlxsw_sp_bridge_device, %struct.mlxsw_sp_bridge_device* %27, i32 0, i32 5, !dbg !22292
  %28 = load %struct.mlxsw_sp_bridge_ops*, %struct.mlxsw_sp_bridge_ops** %ops, align 8, !dbg !22292
  %fid_vid = getelementptr inbounds %struct.mlxsw_sp_bridge_ops, %struct.mlxsw_sp_bridge_ops* %28, i32 0, i32 5, !dbg !22293
  %29 = load i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)*, i16 (%struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_fid*)** %fid_vid, align 8, !dbg !22293
  %30 = load %struct.mlxsw_sp_bridge_device*, %struct.mlxsw_sp_bridge_device** %bridge_device, align 8, !dbg !22294
  %31 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid.addr, align 8, !dbg !22295
  %call34 = call zeroext i16 %29(%struct.mlxsw_sp_bridge_device* %30, %struct.mlxsw_sp_fid* %31) #8, !dbg !22291
  %32 = load i16*, i16** %p_vid.addr, align 8, !dbg !22296
  store i16 %call34, i16* %32, align 2, !dbg !22297
  store i32 0, i32* %retval, align 4, !dbg !22298
  br label %return, !dbg !22298

return:                                           ; preds = %if.end33, %if.then32, %if.then28, %if.then23, %if.then15, %if.then11, %if.then8, %if.then3, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !22299
  ret i32 %33, !dbg !22299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_nve_call_notifiers(%struct.net_device* %dev, i8* %mac, i32 %proto, %union.mlxsw_sp_l3addr* %addr, i32 %vni, i1 zeroext %adding) #0 !dbg !22300 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mac.addr = alloca i8*, align 8
  %proto.addr = alloca i32, align 4
  %addr.addr = alloca %union.mlxsw_sp_l3addr*, align 8
  %vni.addr = alloca i32, align 4
  %adding.addr = alloca i8, align 1
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22303, metadata !DIExpression()), !dbg !22304
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !22305, metadata !DIExpression()), !dbg !22306
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !22307, metadata !DIExpression()), !dbg !22308
  store %union.mlxsw_sp_l3addr* %addr, %union.mlxsw_sp_l3addr** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr** %addr.addr, metadata !22309, metadata !DIExpression()), !dbg !22310
  store i32 %vni, i32* %vni.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vni.addr, metadata !22311, metadata !DIExpression()), !dbg !22312
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !22313, metadata !DIExpression()), !dbg !22314
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22315
  %call = call zeroext i1 @netif_is_vxlan(%struct.net_device* %0) #8, !dbg !22317
  br i1 %call, label %if.then, label %if.end, !dbg !22318

if.then:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22319
  %2 = load i8*, i8** %mac.addr, align 8, !dbg !22320
  %3 = load i32, i32* %proto.addr, align 4, !dbg !22321
  %4 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !22322
  %5 = load i32, i32* %vni.addr, align 4, !dbg !22323
  %6 = load i8, i8* %adding.addr, align 1, !dbg !22324
  %tobool = trunc i8 %6 to i1, !dbg !22324
  call void @mlxsw_sp_fdb_vxlan_call_notifiers(%struct.net_device* %1, i8* %2, i32 %3, %union.mlxsw_sp_l3addr* %4, i32 %5, i1 zeroext %tobool) #8, !dbg !22325
  br label %if.end, !dbg !22325

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !22326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_uc_tunnel_uip_msb_get(i8* %buf, i16 zeroext %index) #0 !dbg !22327 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22328, metadata !DIExpression()), !dbg !22329
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22330, metadata !DIExpression()), !dbg !22329
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22329
  %1 = load i16, i16* %index.addr, align 2, !dbg !22329
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_uc_tunnel_uip_msb_item to %struct.mlxsw_item*), i16 zeroext %1) #8, !dbg !22329
  ret i32 %call, !dbg !22329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_uc_tunnel_uip_lsb_get(i8* %buf, i16 zeroext %index) #0 !dbg !22331 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22332, metadata !DIExpression()), !dbg !22333
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22334, metadata !DIExpression()), !dbg !22333
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22333
  %1 = load i16, i16* %index.addr, align 2, !dbg !22333
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_uc_tunnel_uip_lsb_item to %struct.mlxsw_item*), i16 zeroext %1) #8, !dbg !22333
  ret i32 %call, !dbg !22333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_sfn_uc_tunnel_protocol_get(i8* %buf, i16 zeroext %index) #0 !dbg !22335 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22336, metadata !DIExpression()), !dbg !22337
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22338, metadata !DIExpression()), !dbg !22337
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22337
  %1 = load i16, i16* %index.addr, align 2, !dbg !22337
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sfn_uc_tunnel_protocol_item to %struct.mlxsw_item*), i16 zeroext %1) #8, !dbg !22337
  ret i32 %call, !dbg !22337
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_fid_nve_ifindex(%struct.mlxsw_sp_fid*, i32*) #2

; Function Attrs: noredzone
declare dso_local %struct.net_device* @__dev_get_by_index(%struct.net*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net* @mlxsw_sp_net(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !22339 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !22342, metadata !DIExpression()), !dbg !22343
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !22344
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !22345
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22345
  %call = call %struct.net* @mlxsw_core_net(%struct.mlxsw_core* %1) #8, !dbg !22346
  ret %struct.net* %call, !dbg !22347
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @br_port_flag_is_set(%struct.net_device*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net* @mlxsw_core_net(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !22348 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !22351, metadata !DIExpression()), !dbg !22352
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !22353
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !22353
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #8, !dbg !22354
  %call1 = call %struct.net* @devlink_net(%struct.devlink* %call) #8, !dbg !22355
  ret %struct.net* %call1, !dbg !22356
}

; Function Attrs: noredzone
declare dso_local %struct.net* @devlink_net(%struct.devlink*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devlink* @priv_to_devlink(i8* %priv) #0 !dbg !22357 {
entry:
  %priv.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devlink*, align 8
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !22360, metadata !DIExpression()), !dbg !22361
  br label %do.body, !dbg !22362

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !22363
  %tobool = icmp ne i8* %0, null, !dbg !22363
  %lnot = xor i1 %tobool, true, !dbg !22363
  %lnot1 = xor i1 %lnot, true, !dbg !22363
  %lnot2 = xor i1 %lnot1, true, !dbg !22363
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !22363
  %conv = sext i32 %lnot.ext to i64, !dbg !22363
  %tobool3 = icmp ne i64 %conv, 0, !dbg !22363
  br i1 %tobool3, label %if.then, label %if.end, !dbg !22366

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !22363

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !22367

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !22369

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !22367

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i64 0, i64 0), i32 1358, i32 0, i64 12) #9, !dbg !22371, !srcloc !22373
  br label %do.end7, !dbg !22371

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !22367

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 638) #9, !dbg !22374, !srcloc !22377
  unreachable, !dbg !22378

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !22367

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !22367

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !22366

do.end11:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !22379, metadata !DIExpression()), !dbg !22381
  %1 = load i8*, i8** %priv.addr, align 8, !dbg !22381
  store i8* %1, i8** %__mptr, align 8, !dbg !22381
  br label %do.body12, !dbg !22381

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !22382

do.end13:                                         ; preds = %do.body12
  %2 = load i8*, i8** %__mptr, align 8, !dbg !22381
  %add.ptr = getelementptr i8, i8* %2, i64 -352, !dbg !22381
  %3 = bitcast i8* %add.ptr to %struct.devlink*, !dbg !22381
  store %struct.devlink* %3, %struct.devlink** %tmp, align 8, !dbg !22382
  %4 = load %struct.devlink*, %struct.devlink** %tmp, align 8, !dbg !22381
  ret %struct.devlink* %4, !dbg !22384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fdb_vxlan_call_notifiers(%struct.net_device* %dev, i8* %mac, i32 %proto, %union.mlxsw_sp_l3addr* %addr, i32 %vni, i1 zeroext %adding) #0 !dbg !22385 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mac.addr = alloca i8*, align 8
  %proto.addr = alloca i32, align 4
  %addr.addr = alloca %union.mlxsw_sp_l3addr*, align 8
  %vni.addr = alloca i32, align 4
  %adding.addr = alloca i8, align 1
  %info = alloca %struct.switchdev_notifier_vxlan_fdb_info, align 8
  %vxlan = alloca %struct.vxlan_dev*, align 8
  %type = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22386, metadata !DIExpression()), !dbg !22387
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !22388, metadata !DIExpression()), !dbg !22389
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !22390, metadata !DIExpression()), !dbg !22391
  store %union.mlxsw_sp_l3addr* %addr, %union.mlxsw_sp_l3addr** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr** %addr.addr, metadata !22392, metadata !DIExpression()), !dbg !22393
  store i32 %vni, i32* %vni.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vni.addr, metadata !22394, metadata !DIExpression()), !dbg !22395
  %frombool = zext i1 %adding to i8
  store i8 %frombool, i8* %adding.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adding.addr, metadata !22396, metadata !DIExpression()), !dbg !22397
  call void @llvm.dbg.declare(metadata %struct.switchdev_notifier_vxlan_fdb_info* %info, metadata !22398, metadata !DIExpression()), !dbg !22399
  call void @llvm.dbg.declare(metadata %struct.vxlan_dev** %vxlan, metadata !22400, metadata !DIExpression()), !dbg !22401
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22402
  %call = call i8* @netdev_priv(%struct.net_device* %0) #8, !dbg !22403
  %1 = bitcast i8* %call to %struct.vxlan_dev*, !dbg !22403
  store %struct.vxlan_dev* %1, %struct.vxlan_dev** %vxlan, align 8, !dbg !22401
  call void @llvm.dbg.declare(metadata i32* %type, metadata !22404, metadata !DIExpression()), !dbg !22405
  %2 = load i8, i8* %adding.addr, align 1, !dbg !22406
  %tobool = trunc i8 %2 to i1, !dbg !22406
  %3 = zext i1 %tobool to i64, !dbg !22406
  %cond = select i1 %tobool, i32 10, i32 11, !dbg !22406
  store i32 %cond, i32* %type, align 4, !dbg !22407
  %4 = load i32, i32* %proto.addr, align 4, !dbg !22408
  %5 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !22409
  %remote_ip = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 1, !dbg !22410
  call void @mlxsw_sp_switchdev_addr_vxlan_convert(i32 %4, %union.mlxsw_sp_l3addr* %5, %union.vxlan_addr* %remote_ip) #8, !dbg !22411
  %6 = load %struct.vxlan_dev*, %struct.vxlan_dev** %vxlan, align 8, !dbg !22412
  %cfg = getelementptr inbounds %struct.vxlan_dev, %struct.vxlan_dev* %6, i32 0, i32 12, !dbg !22413
  %dst_port = getelementptr inbounds %struct.vxlan_config, %struct.vxlan_config* %cfg, i32 0, i32 5, !dbg !22414
  %7 = load i16, i16* %dst_port, align 4, !dbg !22414
  %remote_port = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 2, !dbg !22415
  store i16 %7, i16* %remote_port, align 4, !dbg !22416
  %8 = load i32, i32* %vni.addr, align 4, !dbg !22417
  %remote_vni = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 3, !dbg !22418
  store i32 %8, i32* %remote_vni, align 8, !dbg !22419
  %remote_ifindex = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 4, !dbg !22420
  store i32 0, i32* %remote_ifindex, align 4, !dbg !22421
  %eth_addr = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 5, !dbg !22422
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %eth_addr, i64 0, i64 0, !dbg !22423
  %9 = load i8*, i8** %mac.addr, align 8, !dbg !22424
  call void @ether_addr_copy(i8* %arraydecay, i8* %9) #8, !dbg !22425
  %10 = load i32, i32* %vni.addr, align 4, !dbg !22426
  %vni1 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 6, !dbg !22427
  store i32 %10, i32* %vni1, align 8, !dbg !22428
  %11 = load i8, i8* %adding.addr, align 1, !dbg !22429
  %tobool2 = trunc i8 %11 to i1, !dbg !22429
  %offloaded = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 7, !dbg !22430
  %frombool3 = zext i1 %tobool2 to i8, !dbg !22431
  store i8 %frombool3, i8* %offloaded, align 4, !dbg !22431
  %12 = load i32, i32* %type, align 4, !dbg !22432
  %conv = zext i32 %12 to i64, !dbg !22432
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22433
  %info4 = getelementptr inbounds %struct.switchdev_notifier_vxlan_fdb_info, %struct.switchdev_notifier_vxlan_fdb_info* %info, i32 0, i32 0, !dbg !22434
  %call5 = call i32 @call_switchdev_notifiers(i64 %conv, %struct.net_device* %13, %struct.switchdev_notifier_info* %info4, %struct.netlink_ext_ack* null) #8, !dbg !22435
  ret void, !dbg !22436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_switchdev_addr_vxlan_convert(i32 %proto, %union.mlxsw_sp_l3addr* %addr, %union.vxlan_addr* %vxlan_addr) #0 !dbg !22437 {
entry:
  %proto.addr = alloca i32, align 4
  %addr.addr = alloca %union.mlxsw_sp_l3addr*, align 8
  %vxlan_addr.addr = alloca %union.vxlan_addr*, align 8
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !22441, metadata !DIExpression()), !dbg !22442
  store %union.mlxsw_sp_l3addr* %addr, %union.mlxsw_sp_l3addr** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.mlxsw_sp_l3addr** %addr.addr, metadata !22443, metadata !DIExpression()), !dbg !22444
  store %union.vxlan_addr* %vxlan_addr, %union.vxlan_addr** %vxlan_addr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.vxlan_addr** %vxlan_addr.addr, metadata !22445, metadata !DIExpression()), !dbg !22446
  %0 = load i32, i32* %proto.addr, align 4, !dbg !22447
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !22448

sw.bb:                                            ; preds = %entry
  %1 = load %union.vxlan_addr*, %union.vxlan_addr** %vxlan_addr.addr, align 8, !dbg !22449
  %sa = bitcast %union.vxlan_addr* %1 to %struct.sockaddr*, !dbg !22451
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 0, !dbg !22452
  store i16 2, i16* %sa_family, align 4, !dbg !22453
  %2 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !22454
  %addr4 = bitcast %union.mlxsw_sp_l3addr* %2 to i32*, !dbg !22455
  %3 = load i32, i32* %addr4, align 4, !dbg !22455
  %4 = load %union.vxlan_addr*, %union.vxlan_addr** %vxlan_addr.addr, align 8, !dbg !22456
  %sin = bitcast %union.vxlan_addr* %4 to %struct.sockaddr_in*, !dbg !22457
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin, i32 0, i32 2, !dbg !22458
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !22459
  store i32 %3, i32* %s_addr, align 4, !dbg !22460
  br label %sw.epilog, !dbg !22461

sw.bb1:                                           ; preds = %entry
  %5 = load %union.vxlan_addr*, %union.vxlan_addr** %vxlan_addr.addr, align 8, !dbg !22462
  %sa2 = bitcast %union.vxlan_addr* %5 to %struct.sockaddr*, !dbg !22463
  %sa_family3 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa2, i32 0, i32 0, !dbg !22464
  store i16 10, i16* %sa_family3, align 4, !dbg !22465
  %6 = load %union.vxlan_addr*, %union.vxlan_addr** %vxlan_addr.addr, align 8, !dbg !22466
  %sin6 = bitcast %union.vxlan_addr* %6 to %struct.sockaddr_in6*, !dbg !22467
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sin6, i32 0, i32 3, !dbg !22468
  %7 = load %union.mlxsw_sp_l3addr*, %union.mlxsw_sp_l3addr** %addr.addr, align 8, !dbg !22469
  %addr6 = bitcast %union.mlxsw_sp_l3addr* %7 to %struct.in6_addr*, !dbg !22470
  %8 = bitcast %struct.in6_addr* %sin6_addr to i8*, !dbg !22470
  %9 = bitcast %struct.in6_addr* %addr6 to i8*, !dbg !22470
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 16, i1 false), !dbg !22470
  br label %sw.epilog, !dbg !22471

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  ret void, !dbg !22472
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_schedule_dw(%struct.delayed_work*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !22473 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !22474, metadata !DIExpression()), !dbg !22475
  %0 = load i32, i32* %m.addr, align 4, !dbg !22476
  %conv = zext i32 %0 to i64, !dbg !22476
  %add = add i64 %conv, 4, !dbg !22477
  %sub = sub i64 %add, 1, !dbg !22478
  %div = sdiv i64 %sub, 4, !dbg !22479
  ret i64 %div, !dbg !22480
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #2

; Function Attrs: noredzone
declare dso_local i32 @unregister_switchdev_blocking_notifier(%struct.notifier_block*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone willreturn }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind willreturn }
attributes #8 = { noredzone }
attributes #9 = { nounwind }
attributes #10 = { noredzone nounwind readnone }
attributes #11 = { noredzone nounwind }
attributes #12 = { cold noredzone }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!11497, !11498, !11499, !11500}
!llvm.ident = !{!11501}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mlxsw_sp_switchdev_notifier", scope: !2, file: !3, line: 3170, type: !2169, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !10369, globals: !11314, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !12, !18, !23, !29, !63, !104, !135, !142, !173, !179, !185, !191, !198, !206, !212, !224, !230, !237, !242, !251, !259, !265, !272, !279, !287, !307, !314, !319, !326, !332, !338, !342, !346, !350, !355, !360, !369, !382, !390, !396, !403, !407, !411, !418, !424, !9862, !10047, !10052, !10057, !10061, !10068, !10097, !10101, !10107, !10111, !10120, !10130, !10137, !10142, !10149, !10154, !10161, !10166, !10174, !10184, !10191, !10200, !10206, !10223, !10254, !10265, !10319, !10352, !10356, !10359, !10365}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !6, line: 115, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!10 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!11 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !13, line: 41, baseType: !14, size: 32, elements: !15)
!13 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!14 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !19, line: 65, baseType: !14, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22}
!21 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !24, line: 16, baseType: !14, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !30, line: 170, baseType: !14, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!32 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!37 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!38 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!39 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!40 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!41 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!42 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!43 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!44 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!45 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!46 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!47 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!48 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!49 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!50 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!51 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!52 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!53 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!54 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!55 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!56 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!57 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!58 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!59 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!60 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !30, line: 204, baseType: !14, size: 32, elements: !64)
!64 = !{!65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103}
!65 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!69 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!71 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!72 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!103 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !105, line: 369, baseType: !14, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!107 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!113 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!114 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!115 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!116 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!117 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!118 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!119 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!120 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!121 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!122 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!123 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!124 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!125 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!126 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!127 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!128 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!129 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!130 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!131 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!132 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!133 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!134 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !105, line: 578, baseType: !14, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141}
!137 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !30, line: 130, baseType: !14, size: 32, elements: !143)
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172}
!144 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !174, line: 26, baseType: !14, size: 32, elements: !175)
!174 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !180, line: 546, baseType: !14, size: 32, elements: !181)
!180 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!181 = !{!182, !183, !184}
!182 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !186, line: 44, baseType: !14, size: 32, elements: !187)
!186 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!187 = !{!188, !189, !190}
!188 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !192, line: 343, baseType: !14, size: 32, elements: !193)
!192 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!193 = !{!194, !195, !196, !197}
!194 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!195 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!196 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!197 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !199, line: 524, baseType: !14, size: 32, elements: !200)
!199 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!200 = !{!201, !202, !203, !204, !205}
!201 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!202 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!203 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!204 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!205 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !199, line: 502, baseType: !14, size: 32, elements: !207)
!207 = !{!208, !209, !210, !211}
!208 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!209 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!210 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!211 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !213, line: 49, baseType: !14, size: 32, elements: !214)
!213 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!214 = !{!215, !216, !217, !218, !219, !220, !221, !222, !223}
!215 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!216 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!217 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!218 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!219 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!220 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!221 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!222 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!223 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!224 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !225, line: 118, baseType: !14, size: 32, elements: !226)
!225 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!226 = !{!227, !228, !229}
!227 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !231, line: 19, baseType: !14, size: 32, elements: !232)
!231 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !234, !235, !236}
!233 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!236 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !225, line: 315, baseType: !14, size: 32, elements: !238)
!238 = !{!239, !240, !241}
!239 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !243, line: 296, baseType: !14, size: 32, elements: !244)
!243 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!244 = !{!245, !246, !247, !248, !249, !250}
!245 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!246 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!249 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!250 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !252, line: 9, baseType: !14, size: 32, elements: !253)
!252 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!253 = !{!254, !255, !256, !257, !258}
!254 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!255 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!256 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!257 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!258 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !260, line: 54, baseType: !14, size: 32, elements: !261)
!260 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!261 = !{!262, !263, !264}
!262 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!263 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!264 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !266, line: 15, baseType: !14, size: 32, elements: !267)
!266 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!267 = !{!268, !269, !270, !271}
!268 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!269 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!270 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!271 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !273, line: 59, baseType: !14, size: 32, elements: !274)
!273 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!274 = !{!275, !276, !277, !278}
!275 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!277 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!278 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!279 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !280, line: 48, baseType: !14, size: 32, elements: !281)
!280 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!281 = !{!282, !283, !284, !285, !286}
!282 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!283 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!284 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!285 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!286 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !6, line: 836, baseType: !14, size: 32, elements: !288)
!288 = !{!289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306}
!289 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!290 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!291 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!292 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!293 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!294 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!295 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!296 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!297 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!298 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!299 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!300 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!301 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!302 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!303 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!304 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!305 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!306 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!307 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !6, line: 860, baseType: !14, size: 32, elements: !308)
!308 = !{!309, !310, !311, !312, !313}
!309 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!310 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!311 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!312 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!313 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_dpipe_field_mapping_type", file: !315, line: 541, baseType: !14, size: 32, elements: !316)
!315 = !DIFile(filename: "./include/uapi/linux/devlink.h", directory: "/home/lizy2001/genbc/linux")
!316 = !{!317, !318}
!317 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX", value: 1, isUnsigned: true)
!319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_action", file: !315, line: 304, baseType: !14, size: 32, elements: !320)
!320 = !{!321, !322, !323, !324, !325}
!321 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_UNSPEC", value: 0, isUnsigned: true)
!322 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_DRIVER_REINIT", value: 1, isUnsigned: true)
!323 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_FW_ACTIVATE", value: 2, isUnsigned: true)
!324 = !DIEnumerator(name: "__DEVLINK_RELOAD_ACTION_MAX", value: 3, isUnsigned: true)
!325 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_MAX", value: 2, isUnsigned: true)
!326 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_limit", file: !315, line: 314, baseType: !14, size: 32, elements: !327)
!327 = !{!328, !329, !330, !331}
!328 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_UNSPEC", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_NO_RESET", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "__DEVLINK_RELOAD_LIMIT_MAX", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_MAX", value: 1, isUnsigned: true)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_type", file: !315, line: 134, baseType: !14, size: 32, elements: !333)
!333 = !{!334, !335, !336, !337}
!334 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_NOTSET", value: 0, isUnsigned: true)
!335 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_AUTO", value: 1, isUnsigned: true)
!336 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_ETH", value: 2, isUnsigned: true)
!337 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_IB", value: 3, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_pool_type", file: !315, line: 141, baseType: !14, size: 32, elements: !339)
!339 = !{!340, !341}
!340 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_INGRESS", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_EGRESS", value: 1, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_threshold_type", file: !315, line: 159, baseType: !14, size: 32, elements: !343)
!343 = !{!344, !345}
!344 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_STATIC", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC", value: 1, isUnsigned: true)
!346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_encap_mode", file: !315, line: 178, baseType: !14, size: 32, elements: !347)
!347 = !{!348, !349}
!348 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_NONE", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_BASIC", value: 1, isUnsigned: true)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_type", file: !315, line: 291, baseType: !14, size: 32, elements: !351)
!351 = !{!352, !353, !354}
!352 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_DROP", value: 0, isUnsigned: true)
!353 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_EXCEPTION", value: 1, isUnsigned: true)
!354 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_CONTROL", value: 2, isUnsigned: true)
!355 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_action", file: !315, line: 268, baseType: !14, size: 32, elements: !356)
!356 = !{!357, !358, !359}
!357 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_DROP", value: 0, isUnsigned: true)
!358 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_TRAP", value: 1, isUnsigned: true)
!359 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_MIRROR", value: 2, isUnsigned: true)
!360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_flavour", file: !315, line: 183, baseType: !14, size: 32, elements: !361)
!361 = !{!362, !363, !364, !365, !366, !367, !368}
!362 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PHYSICAL", value: 0, isUnsigned: true)
!363 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_CPU", value: 1, isUnsigned: true)
!364 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_DSA", value: 2, isUnsigned: true)
!365 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_PF", value: 3, isUnsigned: true)
!366 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_VF", value: 4, isUnsigned: true)
!367 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_VIRTUAL", value: 5, isUnsigned: true)
!368 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_UNUSED", value: 6, isUnsigned: true)
!369 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !370, line: 585, baseType: !14, size: 32, elements: !371)
!370 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!371 = !{!372, !373, !374, !375, !376, !377, !378, !379, !380, !381}
!372 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!377 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!378 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!379 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!380 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!381 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !370, line: 602, baseType: !14, size: 32, elements: !383)
!383 = !{!384, !385, !386, !387, !388, !389}
!384 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!387 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!388 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!389 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !370, line: 615, baseType: !14, size: 32, elements: !391)
!391 = !{!392, !393, !394, !395}
!392 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!395 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !370, line: 626, baseType: !14, size: 32, elements: !397)
!397 = !{!398, !399, !400, !401, !402}
!398 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!399 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!400 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!401 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!402 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !370, line: 638, baseType: !14, size: 32, elements: !404)
!404 = !{!405, !406}
!405 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!406 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !370, line: 647, baseType: !14, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!410 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !412, line: 54, baseType: !14, size: 32, elements: !413)
!412 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!413 = !{!414, !415, !416, !417}
!414 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!415 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!416 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!417 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!418 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !6, line: 423, baseType: !14, size: 32, elements: !419)
!419 = !{!420, !421, !422, !423}
!420 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!421 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!422 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!423 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!424 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !425, file: !6, line: 2085, baseType: !14, size: 32, elements: !10040)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !6, line: 1858, size: 15808, elements: !426)
!426 = !{!427, !432, !455, !472, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !489, !497, !498, !499, !500, !501, !502, !503, !504, !505, !531, !541, !542, !543, !548, !549, !553, !556, !8730, !9241, !9304, !9336, !9337, !9338, !9339, !9340, !9341, !9342, !9343, !9344, !9345, !9346, !9347, !9348, !9349, !9350, !9351, !9352, !9353, !9354, !9355, !9356, !9357, !9358, !9359, !9360, !9361, !9362, !9367, !9368, !9369, !9370, !9371, !9372, !9373, !9376, !9379, !9380, !9383, !9386, !9387, !9400, !9401, !9402, !9403, !9404, !9405, !9412, !9413, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850, !9853, !9854, !9855, !9856, !9857, !9858, !9859, !9860, !9861, !9866, !9867, !9868, !9869, !9906, !9907, !9909, !9910, !9979, !9980, !9981, !9982, !9988, !9990, !9993, !9996, !9998, !9999, !10000, !10001, !10002, !10031, !10032}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !425, file: !6, line: 1859, baseType: !428, size: 128)
!428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 128, elements: !430)
!429 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!430 = !{!431}
!431 = !DISubrange(count: 16)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !425, file: !6, line: 1860, baseType: !433, size: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !6, line: 938, size: 384, elements: !435)
!435 = !{!436, !444, !450, !452}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !434, file: !6, line: 939, baseType: !437, size: 128)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !438, line: 186, size: 128, elements: !439)
!438 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!439 = !{!440, !442}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !437, file: !438, line: 187, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !437, file: !438, line: 187, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !434, file: !6, line: 940, baseType: !445, size: 128, offset: 128)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !438, line: 178, size: 128, elements: !446)
!446 = !{!447, !449}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !445, file: !438, line: 179, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !445, file: !438, line: 179, baseType: !448, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !434, file: !6, line: 941, baseType: !451, size: 64, offset: 256)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !434, file: !6, line: 942, baseType: !453, size: 64, offset: 320)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !425, file: !6, line: 1861, baseType: !456, size: 64, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !6, line: 930, size: 128, elements: !458)
!458 = !{!459, !468}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !457, file: !6, line: 931, baseType: !460, size: 128, align: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !438, line: 216, size: 128, align: 64, elements: !461)
!461 = !{!462, !464}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !460, file: !438, line: 217, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !460, file: !438, line: 218, baseType: !465, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{null, !463}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !457, file: !6, line: 932, baseType: !469, offset: 128)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, elements: !470)
!470 = !{!471}
!471 = !DISubrange(count: -1)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !425, file: !6, line: 1866, baseType: !473, size: 64, offset: 256)
!473 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !425, file: !6, line: 1867, baseType: !473, size: 64, offset: 320)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !425, file: !6, line: 1868, baseType: !473, size: 64, offset: 384)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !425, file: !6, line: 1869, baseType: !7, size: 32, offset: 448)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !425, file: !6, line: 1877, baseType: !473, size: 64, offset: 512)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !425, file: !6, line: 1879, baseType: !445, size: 128, offset: 576)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !425, file: !6, line: 1880, baseType: !445, size: 128, offset: 704)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !425, file: !6, line: 1881, baseType: !445, size: 128, offset: 832)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !425, file: !6, line: 1882, baseType: !445, size: 128, offset: 960)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !425, file: !6, line: 1883, baseType: !445, size: 128, offset: 1088)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !425, file: !6, line: 1884, baseType: !445, size: 128, offset: 1216)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !425, file: !6, line: 1889, baseType: !485, size: 256, offset: 1344)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !425, file: !6, line: 1886, size: 256, elements: !486)
!486 = !{!487, !488}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !485, file: !6, line: 1887, baseType: !445, size: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !485, file: !6, line: 1888, baseType: !445, size: 128, offset: 128)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !425, file: !6, line: 1891, baseType: !490, size: 64, offset: 1600)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !491, line: 12, baseType: !492)
!491 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !493, line: 23, baseType: !494)
!493 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !495, line: 31, baseType: !496)
!495 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!496 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !425, file: !6, line: 1892, baseType: !490, size: 64, offset: 1664)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !425, file: !6, line: 1893, baseType: !490, size: 64, offset: 1728)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !425, file: !6, line: 1894, baseType: !490, size: 64, offset: 1792)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !425, file: !6, line: 1895, baseType: !490, size: 64, offset: 1856)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !425, file: !6, line: 1896, baseType: !490, size: 64, offset: 1920)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !425, file: !6, line: 1897, baseType: !490, size: 64, offset: 1984)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !425, file: !6, line: 1899, baseType: !7, size: 32, offset: 2048)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !425, file: !6, line: 1900, baseType: !7, size: 32, offset: 2080)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !425, file: !6, line: 1902, baseType: !506, size: 1472, offset: 2112)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !6, line: 169, size: 1472, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !506, file: !6, line: 170, baseType: !473, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !506, file: !6, line: 171, baseType: !473, size: 64, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !506, file: !6, line: 172, baseType: !473, size: 64, offset: 128)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !506, file: !6, line: 173, baseType: !473, size: 64, offset: 192)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !506, file: !6, line: 174, baseType: !473, size: 64, offset: 256)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !506, file: !6, line: 175, baseType: !473, size: 64, offset: 320)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !506, file: !6, line: 176, baseType: !473, size: 64, offset: 384)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !506, file: !6, line: 177, baseType: !473, size: 64, offset: 448)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !506, file: !6, line: 178, baseType: !473, size: 64, offset: 512)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !506, file: !6, line: 179, baseType: !473, size: 64, offset: 576)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !506, file: !6, line: 180, baseType: !473, size: 64, offset: 640)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !506, file: !6, line: 181, baseType: !473, size: 64, offset: 704)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !506, file: !6, line: 182, baseType: !473, size: 64, offset: 768)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !506, file: !6, line: 183, baseType: !473, size: 64, offset: 832)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !506, file: !6, line: 184, baseType: !473, size: 64, offset: 896)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !506, file: !6, line: 185, baseType: !473, size: 64, offset: 960)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !506, file: !6, line: 186, baseType: !473, size: 64, offset: 1024)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !506, file: !6, line: 187, baseType: !473, size: 64, offset: 1088)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !506, file: !6, line: 188, baseType: !473, size: 64, offset: 1152)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !506, file: !6, line: 189, baseType: !473, size: 64, offset: 1216)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !506, file: !6, line: 190, baseType: !473, size: 64, offset: 1280)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !506, file: !6, line: 191, baseType: !473, size: 64, offset: 1344)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !506, file: !6, line: 192, baseType: !473, size: 64, offset: 1408)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !425, file: !6, line: 1904, baseType: !532, size: 64, offset: 3584)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !533, line: 13, baseType: !534)
!533 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !438, line: 175, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !438, line: 173, size: 64, elements: !536)
!536 = !{!537}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !535, file: !438, line: 174, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !493, line: 22, baseType: !539)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !495, line: 30, baseType: !540)
!540 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !425, file: !6, line: 1905, baseType: !532, size: 64, offset: 3648)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !425, file: !6, line: 1906, baseType: !532, size: 64, offset: 3712)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !425, file: !6, line: 1909, baseType: !544, size: 32, offset: 3776)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !438, line: 168, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !438, line: 166, size: 32, elements: !546)
!546 = !{!547}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !545, file: !438, line: 167, baseType: !7, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !425, file: !6, line: 1910, baseType: !544, size: 32, offset: 3808)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !425, file: !6, line: 1913, baseType: !550, size: 64, offset: 3840)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !6, line: 1913, flags: DIFlagFwdDecl)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !425, file: !6, line: 1914, baseType: !554, size: 64, offset: 3904)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !6, line: 1914, flags: DIFlagFwdDecl)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !425, file: !6, line: 1916, baseType: !557, size: 64, offset: 3968)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !6, line: 1283, size: 4416, elements: !560)
!560 = !{!561, !565, !569, !570, !571, !7881, !7885, !7889, !7893, !7894, !7898, !7899, !8010, !8015, !8019, !8023, !8027, !8059, !8063, !8067, !8072, !8076, !8077, !8082, !8086, !8090, !8094, !8095, !8115, !8119, !8134, !8140, !8144, !8153, !8157, !8158, !8162, !8166, !8170, !8174, !8178, !8182, !8186, !8190, !8205, !8209, !8251, !8255, !8260, !8264, !8268, !8272, !8281, !8282, !8286, !8298, !8299, !8303, !8307, !8311, !8315, !8316, !8320, !8321, !8374, !8394, !8398, !8696, !8726}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !559, file: !6, line: 1284, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!7, !451}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !559, file: !6, line: 1285, baseType: !566, size: 64, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{null, !451}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !559, file: !6, line: 1286, baseType: !562, size: 64, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !559, file: !6, line: 1287, baseType: !562, size: 64, offset: 192)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !559, file: !6, line: 1288, baseType: !572, size: 64, offset: 256)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!575, !576, !451}
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !6, line: 120, baseType: !5)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !578, line: 713, size: 1600, elements: !579)
!578 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!579 = !{!580, !602, !7776, !7781, !7785, !7794, !7795, !7796, !7797, !7798, !7799, !7801, !7802, !7803, !7804, !7805, !7806, !7807, !7809, !7810, !7811, !7812, !7813, !7814, !7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7845, !7846, !7847, !7848, !7849, !7850, !7855, !7860, !7865, !7866, !7867, !7868, !7869, !7870, !7871, !7872, !7873, !7875, !7876, !7878, !7879, !7880}
!580 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 714, baseType: !581, size: 192)
!581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 714, size: 192, elements: !582)
!582 = !{!583, !593, !601}
!583 = !DIDerivedType(tag: DW_TAG_member, scope: !581, file: !578, line: 715, baseType: !584, size: 192)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !581, file: !578, line: 715, size: 192, elements: !585)
!585 = !{!586, !587, !588}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !584, file: !578, line: 717, baseType: !576, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !584, file: !578, line: 718, baseType: !576, size: 64, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, scope: !584, file: !578, line: 720, baseType: !589, size: 64, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !584, file: !578, line: 720, size: 64, elements: !590)
!590 = !{!591, !592}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !589, file: !578, line: 721, baseType: !451, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !589, file: !578, line: 726, baseType: !473, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !581, file: !578, line: 729, baseType: !594, size: 192, align: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !595, line: 24, size: 192, align: 64, elements: !596)
!595 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!596 = !{!597, !598, !600}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !594, file: !595, line: 25, baseType: !473, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !594, file: !595, line: 26, baseType: !599, size: 64, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !594, file: !595, line: 27, baseType: !599, size: 64, offset: 128)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !581, file: !578, line: 730, baseType: !445, size: 128)
!602 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 733, baseType: !603, size: 64, offset: 192)
!603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 733, size: 64, elements: !604)
!604 = !{!605, !7775}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !603, file: !578, line: 734, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !608, line: 347, size: 5568, elements: !609)
!608 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!609 = !{!610, !7542, !7549, !7550, !7551, !7552, !7553, !7554, !7561, !7562, !7563, !7564, !7565, !7572, !7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7760, !7761, !7764, !7765, !7766, !7767, !7768, !7769, !7770, !7771, !7774}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !607, file: !608, line: 352, baseType: !611, size: 1088)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !608, line: 162, size: 1088, elements: !612)
!612 = !{!613, !626, !636, !647, !648, !651, !652, !653, !654, !655, !656, !661, !7502, !7503, !7504, !7505, !7506, !7513, !7515, !7527, !7528, !7534, !7535, !7536}
!613 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 166, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 166, size: 64, elements: !615)
!615 = !{!616, !618}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !614, file: !608, line: 167, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !608, line: 115, baseType: !494)
!618 = !DIDerivedType(tag: DW_TAG_member, scope: !614, file: !608, line: 168, baseType: !619, size: 64)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !614, file: !608, line: 168, size: 64, elements: !620)
!620 = !{!621, !625}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !619, file: !608, line: 169, baseType: !622, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !623, line: 32, baseType: !624)
!623 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !495, line: 27, baseType: !14)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !619, file: !608, line: 170, baseType: !622, size: 32, offset: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 173, baseType: !627, size: 32, offset: 64)
!627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 173, size: 32, elements: !628)
!628 = !{!629, !630}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !627, file: !608, line: 174, baseType: !14, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !627, file: !608, line: 175, baseType: !631, size: 32)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 32, elements: !634)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !495, line: 24, baseType: !633)
!633 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!634 = !{!635}
!635 = !DISubrange(count: 2)
!636 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 178, baseType: !637, size: 32, offset: 96)
!637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 178, size: 32, elements: !638)
!638 = !{!639, !641}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !637, file: !608, line: 179, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !608, line: 114, baseType: !624)
!641 = !DIDerivedType(tag: DW_TAG_member, scope: !637, file: !608, line: 180, baseType: !642, size: 32)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !637, file: !608, line: 180, size: 32, elements: !643)
!643 = !{!644, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !642, file: !608, line: 181, baseType: !645, size: 16)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !623, line: 30, baseType: !632)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !642, file: !608, line: 182, baseType: !632, size: 16, offset: 16)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !611, file: !608, line: 186, baseType: !633, size: 16, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !611, file: !608, line: 187, baseType: !649, size: 8, offset: 144)
!649 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !650)
!650 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !611, file: !608, line: 188, baseType: !650, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !611, file: !608, line: 189, baseType: !650, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !611, file: !608, line: 190, baseType: !650, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !611, file: !608, line: 191, baseType: !650, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !611, file: !608, line: 192, baseType: !7, size: 32, offset: 160)
!656 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 193, baseType: !657, size: 128, offset: 192)
!657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 193, size: 128, elements: !658)
!658 = !{!659, !660}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !657, file: !608, line: 194, baseType: !437, size: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !657, file: !608, line: 195, baseType: !437, size: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !611, file: !608, line: 197, baseType: !662, size: 64, offset: 320)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !608, line: 1127, size: 3264, elements: !664)
!664 = !{!665, !670, !686, !687, !691, !698, !702, !706, !710, !714, !729, !734, !735, !7350, !7354, !7358, !7359, !7360, !7364, !7365, !7366, !7367, !7368, !7372, !7373, !7379, !7383, !7384, !7385, !7386, !7388, !7389, !7391, !7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399, !7401, !7402, !7403, !7404, !7460, !7473, !7498, !7499, !7500, !7501}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !663, file: !608, line: 1128, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{null, !606, !669}
!669 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !663, file: !608, line: 1130, baseType: !671, size: 64, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!7, !606, !674, !7}
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !676, line: 32, size: 128, elements: !677)
!676 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!677 = !{!678, !682}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !675, file: !676, line: 33, baseType: !679, size: 16)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !676, line: 26, baseType: !680)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !681, line: 10, baseType: !633)
!681 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!682 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !675, file: !676, line: 34, baseType: !683, size: 112, offset: 16)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 112, elements: !684)
!684 = !{!685}
!685 = !DISubrange(count: 14)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !663, file: !608, line: 1133, baseType: !671, size: 64, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !663, file: !608, line: 1136, baseType: !688, size: 64, offset: 192)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{!7, !606, !7}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !663, file: !608, line: 1138, baseType: !692, size: 64, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!606, !606, !7, !695, !696}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !438, line: 30, baseType: !697)
!697 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !663, file: !608, line: 1141, baseType: !699, size: 64, offset: 320)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!7, !606, !7, !473}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !663, file: !608, line: 1143, baseType: !703, size: 64, offset: 384)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!7, !606}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !663, file: !608, line: 1144, baseType: !707, size: 64, offset: 448)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !606}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !663, file: !608, line: 1145, baseType: !711, size: 64, offset: 512)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{null, !606, !7}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !663, file: !608, line: 1146, baseType: !715, size: 64, offset: 576)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!7, !606, !7, !7, !718, !14}
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !719, line: 20, baseType: !720)
!719 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !719, line: 14, size: 128, elements: !721)
!721 = !{!722, !728}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !719, line: 15, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !719, line: 15, size: 64, elements: !724)
!724 = !{!725, !727}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !723, file: !719, line: 16, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !723, file: !719, line: 17, baseType: !726, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !720, file: !719, line: 19, baseType: !696, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !663, file: !608, line: 1149, baseType: !730, size: 64, offset: 640)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!7, !606, !7, !7, !733, !695}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !663, file: !608, line: 1152, baseType: !711, size: 64, offset: 704)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !663, file: !608, line: 1157, baseType: !736, size: 64, offset: 768)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!7, !606, !739, !750}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !676, line: 50, size: 768, elements: !741)
!741 = !{!742, !743, !744, !7341, !7346, !7347, !7348, !7349}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !740, file: !676, line: 51, baseType: !726, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !740, file: !676, line: 52, baseType: !7, size: 32, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !740, file: !676, line: 53, baseType: !745, size: 320, offset: 128)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !746, line: 29, size: 320, elements: !747)
!746 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!747 = !{!748, !749, !754, !755, !7332}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !745, file: !746, line: 35, baseType: !14, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !745, file: !746, line: 36, baseType: !750, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !438, line: 55, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !752, line: 72, baseType: !753)
!752 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !752, line: 16, baseType: !473)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !745, file: !746, line: 37, baseType: !750, size: 64, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_member, scope: !745, file: !746, line: 38, baseType: !756, size: 64, offset: 192)
!756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !745, file: !746, line: 38, size: 64, elements: !757)
!757 = !{!758, !766, !773, !7331}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !756, file: !746, line: 39, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !762, line: 17, size: 128, elements: !763)
!762 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !761, file: !762, line: 19, baseType: !726, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !761, file: !762, line: 20, baseType: !751, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !756, file: !746, line: 40, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !746, line: 15, size: 128, elements: !770)
!770 = !{!771, !772}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !769, file: !746, line: 16, baseType: !726, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !769, file: !746, line: 17, baseType: !750, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !756, file: !746, line: 41, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !777, line: 31, size: 128, elements: !778)
!777 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!778 = !{!779, !7329, !7330}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !776, file: !777, line: 32, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !782, line: 68, size: 512, align: 128, elements: !783)
!782 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!783 = !{!784, !785, !7321, !7328}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !781, file: !782, line: 69, baseType: !473, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, scope: !781, file: !782, line: 77, baseType: !786, size: 320, offset: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !781, file: !782, line: 77, size: 320, elements: !787)
!787 = !{!788, !7215, !7220, !7246, !7254, !7260, !7272, !7320}
!788 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 78, baseType: !789, size: 320)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 78, size: 320, elements: !790)
!790 = !{!791, !792, !7213, !7214}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !789, file: !782, line: 84, baseType: !445, size: 128)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !789, file: !782, line: 86, baseType: !793, size: 64, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !243, line: 451, size: 1216, align: 64, elements: !795)
!795 = !{!796, !7102, !7103, !7104, !7105, !7106, !7107, !7108, !7109, !7110, !7208, !7209, !7210, !7211, !7212}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !794, file: !243, line: 452, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !243, line: 610, size: 4224, elements: !799)
!799 = !{!800, !802, !803, !811, !818, !819, !7035, !7036, !7037, !7038, !7043, !7044, !7045, !7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053, !7054, !7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7078, !7086, !7087, !7088, !7098, !7099, !7100, !7101}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !798, file: !243, line: 611, baseType: !801, size: 16)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !438, line: 19, baseType: !633)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !798, file: !243, line: 612, baseType: !633, size: 16, offset: 16)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !798, file: !243, line: 613, baseType: !804, size: 32, offset: 32)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !805, line: 23, baseType: !806)
!805 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !805, line: 21, size: 32, elements: !807)
!807 = !{!808}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !806, file: !805, line: 22, baseType: !809, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !438, line: 32, baseType: !810)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !752, line: 49, baseType: !14)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !798, file: !243, line: 614, baseType: !812, size: 32, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !805, line: 28, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !805, line: 26, size: 32, elements: !814)
!814 = !{!815}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !813, file: !805, line: 27, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !438, line: 33, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !752, line: 50, baseType: !14)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !798, file: !243, line: 615, baseType: !14, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !798, file: !243, line: 622, baseType: !820, size: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !243, line: 1864, size: 1536, align: 512, elements: !823)
!823 = !{!824, !6912, !6922, !6926, !6932, !6936, !6940, !6944, !6948, !6952, !6956, !6957, !6961, !6965, !6985, !7011, !7015, !7021, !7026, !7030, !7031}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !822, file: !243, line: 1865, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!828, !797, !828, !14}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !830, line: 89, size: 1536, elements: !831)
!830 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!831 = !{!832, !833, !843, !851, !852, !868, !869, !873, !900, !968, !6897, !6898, !6899, !6904, !6905, !6906}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !829, file: !830, line: 91, baseType: !14, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !829, file: !830, line: 92, baseType: !834, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !835, line: 277, baseType: !836)
!835 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !835, line: 277, size: 32, elements: !837)
!837 = !{!838}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !836, file: !835, line: 277, baseType: !839, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !835, line: 70, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !835, line: 65, size: 32, elements: !841)
!841 = !{!842}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !840, file: !835, line: 66, baseType: !14, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !829, file: !830, line: 93, baseType: !844, size: 128, offset: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !845, line: 38, size: 128, elements: !846)
!845 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!846 = !{!847, !849}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !844, file: !845, line: 39, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !844, file: !845, line: 39, baseType: !850, size: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !829, file: !830, line: 94, baseType: !828, size: 64, offset: 192)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !829, file: !830, line: 95, baseType: !853, size: 128, offset: 256)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !830, line: 47, size: 128, elements: !854)
!854 = !{!855, !865}
!855 = !DIDerivedType(tag: DW_TAG_member, scope: !853, file: !830, line: 48, baseType: !856, size: 64)
!856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !853, file: !830, line: 48, size: 64, elements: !857)
!857 = !{!858, !864}
!858 = !DIDerivedType(tag: DW_TAG_member, scope: !856, file: !830, line: 49, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !856, file: !830, line: 49, size: 64, elements: !860)
!860 = !{!861, !863}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !859, file: !830, line: 50, baseType: !862, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !493, line: 21, baseType: !624)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !859, file: !830, line: 50, baseType: !862, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !856, file: !830, line: 52, baseType: !492, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !853, file: !830, line: 54, baseType: !866, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !829, file: !830, line: 96, baseType: !797, size: 64, offset: 384)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !829, file: !830, line: 98, baseType: !870, size: 256, offset: 448)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 256, elements: !871)
!871 = !{!872}
!872 = !DISubrange(count: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !829, file: !830, line: 101, baseType: !874, size: 32, offset: 704)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !875, line: 25, size: 32, elements: !876)
!875 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!876 = !{!877}
!877 = !DIDerivedType(tag: DW_TAG_member, scope: !874, file: !875, line: 26, baseType: !878, size: 32)
!878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !874, file: !875, line: 26, size: 32, elements: !879)
!879 = !{!880}
!880 = !DIDerivedType(tag: DW_TAG_member, scope: !878, file: !875, line: 30, baseType: !881, size: 32)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !878, file: !875, line: 30, size: 32, elements: !882)
!882 = !{!883, !899}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !881, file: !875, line: 31, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !885, line: 83, baseType: !886)
!885 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !885, line: 71, elements: !887)
!887 = !{!888}
!888 = !DIDerivedType(tag: DW_TAG_member, scope: !886, file: !885, line: 72, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !886, file: !885, line: 72, elements: !890)
!890 = !{!891}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !889, file: !885, line: 73, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !885, line: 20, elements: !893)
!893 = !{!894}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !892, file: !885, line: 21, baseType: !895)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !896, line: 25, baseType: !897)
!896 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !896, line: 25, elements: !898)
!898 = !{}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !881, file: !875, line: 32, baseType: !7, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !829, file: !830, line: 102, baseType: !901, size: 64, offset: 768)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !830, line: 135, size: 1024, align: 512, elements: !904)
!904 = !{!905, !909, !910, !917, !923, !927, !931, !935, !936, !940, !944, !956, !962}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !903, file: !830, line: 136, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!7, !828, !14}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !903, file: !830, line: 137, baseType: !906, size: 64, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !903, file: !830, line: 138, baseType: !911, size: 64, offset: 128)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!7, !914, !916}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !903, file: !830, line: 139, baseType: !918, size: 64, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!7, !914, !14, !453, !921}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !853)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !903, file: !830, line: 141, baseType: !924, size: 64, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!7, !914}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !903, file: !830, line: 142, baseType: !928, size: 64, offset: 320)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!7, !828}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !903, file: !830, line: 143, baseType: !932, size: 64, offset: 384)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{null, !828}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !903, file: !830, line: 144, baseType: !932, size: 64, offset: 448)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !903, file: !830, line: 145, baseType: !937, size: 64, offset: 512)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{null, !828, !797}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !903, file: !830, line: 146, baseType: !941, size: 64, offset: 576)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!733, !828, !733, !7}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !903, file: !830, line: 147, baseType: !945, size: 64, offset: 640)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!948, !950}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !830, line: 18, flags: DIFlagFwdDecl)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !952, line: 8, size: 128, elements: !953)
!952 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !951, file: !952, line: 9, baseType: !948, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !951, file: !952, line: 10, baseType: !828, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !903, file: !830, line: 148, baseType: !957, size: 64, offset: 704)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!7, !960, !696}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !903, file: !830, line: 149, baseType: !963, size: 64, offset: 768)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!828, !828, !966}
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !829, file: !830, line: 103, baseType: !969, size: 64, offset: 832)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !243, line: 1416, size: 9472, elements: !971)
!971 = !{!972, !973, !976, !977, !978, !981, !1026, !6569, !6651, !6734, !6738, !6739, !6740, !6741, !6742, !6743, !6744, !6745, !6750, !6754, !6755, !6756, !6757, !6760, !6761, !6762, !6803, !6830, !6831, !6832, !6833, !6834, !6835, !6838, !6839, !6845, !6846, !6847, !6848, !6849, !6850, !6851, !6866, !6867, !6868, !6869, !6870, !6871, !6872, !6873, !6888, !6889, !6890, !6891, !6892, !6893, !6894, !6895, !6896}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !970, file: !243, line: 1417, baseType: !445, size: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !970, file: !243, line: 1418, baseType: !974, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !438, line: 16, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !438, line: 13, baseType: !862)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !970, file: !243, line: 1419, baseType: !650, size: 8, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !970, file: !243, line: 1420, baseType: !473, size: 64, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !970, file: !243, line: 1421, baseType: !979, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !438, line: 46, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !752, line: 88, baseType: !540)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !970, file: !243, line: 1422, baseType: !982, size: 64, offset: 320)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !243, line: 2228, size: 576, elements: !984)
!984 = !{!985, !986, !987, !993, !997, !1001, !1005, !1009, !1010, !1014, !1017, !1018, !1019, !1023, !1024, !1025}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !983, file: !243, line: 2229, baseType: !453, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !983, file: !243, line: 2230, baseType: !7, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !983, file: !243, line: 2238, baseType: !988, size: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!7, !991}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !243, line: 69, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !983, file: !243, line: 2239, baseType: !994, size: 64, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !243, line: 70, flags: DIFlagFwdDecl)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !983, file: !243, line: 2240, baseType: !998, size: 64, offset: 256)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!828, !982, !7, !453, !726}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !983, file: !243, line: 2242, baseType: !1002, size: 64, offset: 320)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{null, !969}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !983, file: !243, line: 2243, baseType: !1006, size: 64, offset: 384)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1008, line: 76, flags: DIFlagFwdDecl)
!1008 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !983, file: !243, line: 2244, baseType: !982, size: 64, offset: 448)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !983, file: !243, line: 2245, baseType: !1011, size: 64, offset: 512)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !438, line: 182, size: 64, elements: !1012)
!1012 = !{!1013}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1011, file: !438, line: 183, baseType: !441, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !983, file: !243, line: 2247, baseType: !1015, offset: 576)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1016, line: 187, elements: !898)
!1016 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !983, file: !243, line: 2248, baseType: !1015, offset: 576)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !983, file: !243, line: 2249, baseType: !1015, offset: 576)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !983, file: !243, line: 2250, baseType: !1020, offset: 576)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, elements: !1021)
!1021 = !{!1022}
!1022 = !DISubrange(count: 3)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !983, file: !243, line: 2252, baseType: !1015, offset: 576)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !983, file: !243, line: 2253, baseType: !1015, offset: 576)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !983, file: !243, line: 2254, baseType: !1015, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !970, file: !243, line: 1423, baseType: !1027, size: 64, offset: 384)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !243, line: 1935, size: 1472, elements: !1030)
!1030 = !{!1031, !1035, !1039, !1040, !1044, !1064, !1068, !1069, !1070, !1074, !1078, !1079, !1080, !1081, !1087, !1091, !1092, !6546, !6547, !6548, !6549, !6553, !6568}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1029, file: !243, line: 1936, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!797, !969}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1029, file: !243, line: 1937, baseType: !1036, size: 64, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !797}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1029, file: !243, line: 1938, baseType: !1036, size: 64, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1029, file: !243, line: 1940, baseType: !1041, size: 64, offset: 192)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !797, !7}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1029, file: !243, line: 1941, baseType: !1045, size: 64, offset: 256)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!7, !797, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !13, line: 51, size: 320, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1049, file: !13, line: 52, baseType: !669, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1049, file: !13, line: 54, baseType: !669, size: 64, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1049, file: !13, line: 61, baseType: !979, size: 64, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1049, file: !13, line: 62, baseType: !979, size: 64, offset: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1049, file: !13, line: 64, baseType: !12, size: 32, offset: 256)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1049, file: !13, line: 66, baseType: !14, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1049, file: !13, line: 67, baseType: !14, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1049, file: !13, line: 68, baseType: !14, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1049, file: !13, line: 69, baseType: !14, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1049, file: !13, line: 70, baseType: !14, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1049, file: !13, line: 71, baseType: !14, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1049, file: !13, line: 79, baseType: !14, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1049, file: !13, line: 81, baseType: !14, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1029, file: !243, line: 1942, baseType: !1065, size: 64, offset: 320)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!7, !797}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1029, file: !243, line: 1943, baseType: !1036, size: 64, offset: 384)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1029, file: !243, line: 1944, baseType: !1002, size: 64, offset: 448)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1029, file: !243, line: 1945, baseType: !1071, size: 64, offset: 512)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!7, !969, !7}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1029, file: !243, line: 1946, baseType: !1075, size: 64, offset: 576)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!7, !969}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1029, file: !243, line: 1947, baseType: !1075, size: 64, offset: 640)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1029, file: !243, line: 1948, baseType: !1075, size: 64, offset: 704)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1029, file: !243, line: 1949, baseType: !1075, size: 64, offset: 768)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1029, file: !243, line: 1950, baseType: !1082, size: 64, offset: 832)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!7, !828, !1085}
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !243, line: 57, flags: DIFlagFwdDecl)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1029, file: !243, line: 1951, baseType: !1088, size: 64, offset: 896)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!7, !969, !695, !733}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1029, file: !243, line: 1952, baseType: !1002, size: 64, offset: 960)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1029, file: !243, line: 1954, baseType: !1093, size: 64, offset: 1024)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!7, !1096, !828}
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1098, line: 16, size: 896, elements: !1099)
!1098 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1114, !1136, !1137, !6545}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1097, file: !1098, line: 17, baseType: !733, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1097, file: !1098, line: 18, baseType: !750, size: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1097, file: !1098, line: 19, baseType: !750, size: 64, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1097, file: !1098, line: 20, baseType: !750, size: 64, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1097, file: !1098, line: 21, baseType: !750, size: 64, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1097, file: !1098, line: 22, baseType: !979, size: 64, offset: 320)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1097, file: !1098, line: 23, baseType: !979, size: 64, offset: 384)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1097, file: !1098, line: 24, baseType: !1108, size: 192, offset: 448)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1109, line: 53, size: 192, elements: !1110)
!1109 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1110 = !{!1111, !1112, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1108, file: !1109, line: 54, baseType: !532, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1108, file: !1109, line: 55, baseType: !884, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1108, file: !1109, line: 59, baseType: !445, size: 128, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1097, file: !1098, line: 25, baseType: !1115, size: 64, offset: 640)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1098, line: 31, size: 256, elements: !1118)
!1118 = !{!1119, !1124, !1128, !1132}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1117, file: !1098, line: 32, baseType: !1120, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!726, !1096, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1117, file: !1098, line: 33, baseType: !1125, size: 64, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{null, !1096, !726}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1117, file: !1098, line: 34, baseType: !1129, size: 64, offset: 128)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!726, !1096, !726, !1123}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1117, file: !1098, line: 35, baseType: !1133, size: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!7, !1096, !726}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1097, file: !1098, line: 26, baseType: !7, size: 32, offset: 704)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1097, file: !1098, line: 27, baseType: !1138, size: 64, offset: 768)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !243, line: 916, size: 1856, align: 32, elements: !1141)
!1141 = !{!1142, !1152, !1153, !1154, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6526, !6527, !6536, !6537, !6538, !6539, !6540, !6541, !6544}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1140, file: !243, line: 920, baseType: !1143, size: 128)
!1143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1140, file: !243, line: 917, size: 128, elements: !1144)
!1144 = !{!1145, !1151}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1143, file: !243, line: 918, baseType: !1146, size: 64)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1147, line: 58, size: 64, elements: !1148)
!1147 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1148 = !{!1149}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1146, file: !1147, line: 59, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1143, file: !243, line: 919, baseType: !460, size: 128, align: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1140, file: !243, line: 921, baseType: !951, size: 128, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1140, file: !243, line: 922, baseType: !797, size: 64, offset: 256)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1140, file: !243, line: 923, baseType: !1155, size: 64, offset: 320)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !243, line: 1822, size: 2048, elements: !1158)
!1158 = !{!1159, !1160, !1165, !1172, !1176, !1220, !1221, !1225, !1238, !1239, !1260, !1264, !1265, !6359, !6360, !6364, !6369, !6370, !6374, !6378, !6470, !6474, !6475, !6479, !6480, !6484, !6488, !6493, !6497, !6501, !6505, !6509}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1157, file: !243, line: 1823, baseType: !1006, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1157, file: !243, line: 1824, baseType: !1161, size: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!979, !1164, !979, !7}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1157, file: !243, line: 1825, baseType: !1166, size: 64, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!1169, !1164, !733, !750, !1123}
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !438, line: 60, baseType: !1170)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !752, line: 73, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !752, line: 15, baseType: !669)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1157, file: !243, line: 1826, baseType: !1173, size: 64, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!1169, !1164, !453, !750, !1123}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1157, file: !243, line: 1827, baseType: !1177, size: 64, offset: 256)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!1169, !1180, !1219}
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !243, line: 320, size: 384, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1189, !1190, !1191, !1193, !1194}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1181, file: !243, line: 321, baseType: !1164, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1181, file: !243, line: 326, baseType: !979, size: 64, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1181, file: !243, line: 327, baseType: !1186, size: 64, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{null, !1180, !669, !669}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1181, file: !243, line: 328, baseType: !726, size: 64, offset: 192)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1181, file: !243, line: 329, baseType: !7, size: 32, offset: 256)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1181, file: !243, line: 330, baseType: !1192, size: 16, offset: 288)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !493, line: 19, baseType: !632)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1181, file: !243, line: 331, baseType: !1192, size: 16, offset: 304)
!1194 = !DIDerivedType(tag: DW_TAG_member, scope: !1181, file: !243, line: 332, baseType: !1195, size: 64, offset: 320)
!1195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1181, file: !243, line: 332, size: 64, elements: !1196)
!1196 = !{!1197, !1198}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1195, file: !243, line: 333, baseType: !14, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1195, file: !243, line: 334, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1201, line: 569, size: 448, elements: !1202)
!1201 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1202 = !{!1203, !1204, !1205}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1200, file: !1201, line: 570, baseType: !780, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1200, file: !1201, line: 571, baseType: !7, size: 32, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1200, file: !1201, line: 572, baseType: !1206, size: 320, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1207, line: 14, baseType: !1208)
!1207 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1207, line: 29, size: 320, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1218}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1208, file: !1207, line: 30, baseType: !14, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1208, file: !1207, line: 31, baseType: !726, size: 64, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1208, file: !1207, line: 32, baseType: !1213, size: 64, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1207, line: 16, baseType: !1214)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!7, !1217, !14, !7, !726}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1208, file: !1207, line: 33, baseType: !445, size: 128, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1157, file: !243, line: 1828, baseType: !1177, size: 64, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1157, file: !243, line: 1829, baseType: !1222, size: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!7, !1180, !696}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1157, file: !243, line: 1830, baseType: !1226, size: 64, offset: 448)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!7, !1164, !1229}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !243, line: 1776, size: 128, elements: !1231)
!1231 = !{!1232, !1237}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1230, file: !243, line: 1777, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !243, line: 1773, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!7, !1229, !453, !7, !979, !492, !14}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1230, file: !243, line: 1778, baseType: !979, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1157, file: !243, line: 1831, baseType: !1226, size: 64, offset: 512)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1157, file: !243, line: 1832, baseType: !1240, size: 64, offset: 576)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!1243, !1164, !1244}
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !623, line: 52, baseType: !14)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1246, line: 43, size: 128, elements: !1247)
!1246 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1247 = !{!1248, !1259}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1245, file: !1246, line: 44, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1246, line: 37, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{null, !1164, !1253, !1244}
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1207, line: 40, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1207, line: 36, size: 128, elements: !1256)
!1256 = !{!1257, !1258}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1255, file: !1207, line: 37, baseType: !884)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1255, file: !1207, line: 38, baseType: !445, size: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1245, file: !1246, line: 45, baseType: !1243, size: 32, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1157, file: !243, line: 1833, baseType: !1261, size: 64, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!669, !1164, !14, !473}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1157, file: !243, line: 1834, baseType: !1261, size: 64, offset: 704)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1157, file: !243, line: 1835, baseType: !1266, size: 64, offset: 768)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!7, !1164, !1269}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !782, line: 305, size: 1472, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1276, !1277, !1278, !6336, !6342, !6343, !6348, !6349, !6352, !6353, !6354, !6355, !6356, !6357}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1270, file: !782, line: 308, baseType: !473, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1270, file: !782, line: 309, baseType: !473, size: 64, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1270, file: !782, line: 313, baseType: !1269, size: 64, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1270, file: !782, line: 313, baseType: !1269, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1270, file: !782, line: 315, baseType: !594, size: 192, align: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1270, file: !782, line: 323, baseType: !473, size: 64, offset: 448)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1270, file: !782, line: 327, baseType: !1279, size: 64, offset: 512)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !782, line: 388, size: 7296, elements: !1281)
!1281 = !{!1282, !6334}
!1282 = !DIDerivedType(tag: DW_TAG_member, scope: !1280, file: !782, line: 389, baseType: !1283, size: 7296)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1280, file: !782, line: 389, size: 7296, elements: !1284)
!1284 = !{!1285, !1286, !1290, !1291, !1295, !1296, !1297, !1298, !1299, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1350, !1358, !1361, !1401, !1402, !6318, !6319, !6322, !6323, !6324, !6327, !6328, !6329, !6332, !6333}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1283, file: !782, line: 390, baseType: !1269, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1283, file: !782, line: 391, baseType: !1287, size: 64, offset: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !595, line: 31, size: 64, elements: !1288)
!1288 = !{!1289}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1287, file: !595, line: 32, baseType: !599, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1283, file: !782, line: 392, baseType: !492, size: 64, offset: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1283, file: !782, line: 394, baseType: !1292, size: 64, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!473, !1164, !473, !473, !473, !473}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1283, file: !782, line: 398, baseType: !473, size: 64, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1283, file: !782, line: 399, baseType: !473, size: 64, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1283, file: !782, line: 405, baseType: !473, size: 64, offset: 384)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1283, file: !782, line: 406, baseType: !473, size: 64, offset: 448)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1283, file: !782, line: 407, baseType: !1300, size: 64, offset: 512)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1302, line: 286, baseType: !1303)
!1302 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 286, size: 64, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1303, file: !1302, line: 286, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1307, line: 18, baseType: !473)
!1307 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1283, file: !782, line: 416, baseType: !544, size: 32, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1283, file: !782, line: 428, baseType: !544, size: 32, offset: 608)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1283, file: !782, line: 437, baseType: !544, size: 32, offset: 640)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1283, file: !782, line: 447, baseType: !544, size: 32, offset: 672)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1283, file: !782, line: 450, baseType: !532, size: 64, offset: 704)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1283, file: !782, line: 452, baseType: !7, size: 32, offset: 768)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1283, file: !782, line: 454, baseType: !884, offset: 800)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1283, file: !782, line: 457, baseType: !1316, size: 256, offset: 832)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1317, line: 35, size: 256, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1320, !1321, !1323}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1316, file: !1317, line: 36, baseType: !532, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1316, file: !1317, line: 42, baseType: !532, size: 64, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1316, file: !1317, line: 46, baseType: !1322, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !885, line: 29, baseType: !892)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1316, file: !1317, line: 47, baseType: !445, size: 128, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1283, file: !782, line: 459, baseType: !445, size: 128, offset: 1088)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1283, file: !782, line: 466, baseType: !473, size: 64, offset: 1216)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1283, file: !782, line: 467, baseType: !473, size: 64, offset: 1280)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1283, file: !782, line: 469, baseType: !473, size: 64, offset: 1344)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1283, file: !782, line: 470, baseType: !473, size: 64, offset: 1408)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1283, file: !782, line: 471, baseType: !534, size: 64, offset: 1472)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1283, file: !782, line: 472, baseType: !473, size: 64, offset: 1536)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1283, file: !782, line: 473, baseType: !473, size: 64, offset: 1600)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1283, file: !782, line: 474, baseType: !473, size: 64, offset: 1664)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1283, file: !782, line: 475, baseType: !473, size: 64, offset: 1728)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1283, file: !782, line: 477, baseType: !884, offset: 1792)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1283, file: !782, line: 478, baseType: !473, size: 64, offset: 1792)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1283, file: !782, line: 478, baseType: !473, size: 64, offset: 1856)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1283, file: !782, line: 478, baseType: !473, size: 64, offset: 1920)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1283, file: !782, line: 478, baseType: !473, size: 64, offset: 1984)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1283, file: !782, line: 479, baseType: !473, size: 64, offset: 2048)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1283, file: !782, line: 479, baseType: !473, size: 64, offset: 2112)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1283, file: !782, line: 479, baseType: !473, size: 64, offset: 2176)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1283, file: !782, line: 480, baseType: !473, size: 64, offset: 2240)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1283, file: !782, line: 480, baseType: !473, size: 64, offset: 2304)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1283, file: !782, line: 480, baseType: !473, size: 64, offset: 2368)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1283, file: !782, line: 480, baseType: !473, size: 64, offset: 2432)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1283, file: !782, line: 482, baseType: !1347, size: 2816, offset: 2496)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 2816, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 44)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1283, file: !782, line: 488, baseType: !1351, size: 256, offset: 5312)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1352, line: 60, size: 256, elements: !1353)
!1352 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1351, file: !1352, line: 61, baseType: !1355, size: 256)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 256, elements: !1356)
!1356 = !{!1357}
!1357 = !DISubrange(count: 4)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1283, file: !782, line: 490, baseType: !1359, size: 64, offset: 5568)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !782, line: 490, flags: DIFlagFwdDecl)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1283, file: !782, line: 493, baseType: !1362, size: 896, offset: 5632)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1363, line: 53, baseType: !1364)
!1363 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1363, line: 13, size: 896, elements: !1365)
!1365 = !{!1366, !1367, !1368, !1369, !1372, !1373, !1374, !1375, !1395, !1396, !1397}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1364, file: !1363, line: 18, baseType: !492, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1364, file: !1363, line: 28, baseType: !534, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1364, file: !1363, line: 31, baseType: !1316, size: 256, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1364, file: !1363, line: 32, baseType: !1370, size: 64, offset: 384)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1363, line: 32, flags: DIFlagFwdDecl)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1364, file: !1363, line: 37, baseType: !633, size: 16, offset: 448)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1364, file: !1363, line: 40, baseType: !1108, size: 192, offset: 512)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1364, file: !1363, line: 41, baseType: !726, size: 64, offset: 704)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1364, file: !1363, line: 42, baseType: !1376, size: 64, offset: 768)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1379, line: 13, size: 896, elements: !1380)
!1379 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1380 = !{!1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1378, file: !1379, line: 14, baseType: !726, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1378, file: !1379, line: 15, baseType: !473, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1378, file: !1379, line: 17, baseType: !473, size: 64, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1378, file: !1379, line: 17, baseType: !473, size: 64, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1378, file: !1379, line: 19, baseType: !669, size: 64, offset: 256)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1378, file: !1379, line: 21, baseType: !669, size: 64, offset: 320)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1378, file: !1379, line: 22, baseType: !669, size: 64, offset: 384)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1378, file: !1379, line: 23, baseType: !669, size: 64, offset: 448)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1378, file: !1379, line: 24, baseType: !669, size: 64, offset: 512)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1378, file: !1379, line: 25, baseType: !669, size: 64, offset: 576)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1378, file: !1379, line: 26, baseType: !669, size: 64, offset: 640)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1378, file: !1379, line: 27, baseType: !669, size: 64, offset: 704)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1378, file: !1379, line: 28, baseType: !669, size: 64, offset: 768)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1378, file: !1379, line: 29, baseType: !669, size: 64, offset: 832)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1364, file: !1363, line: 44, baseType: !544, size: 32, offset: 832)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1364, file: !1363, line: 50, baseType: !1192, size: 16, offset: 864)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1364, file: !1363, line: 51, baseType: !1398, size: 16, offset: 880)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !493, line: 18, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !495, line: 23, baseType: !1400)
!1400 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1283, file: !782, line: 495, baseType: !473, size: 64, offset: 6528)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1283, file: !782, line: 497, baseType: !1403, size: 64, offset: 6592)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !782, line: 381, size: 384, elements: !1405)
!1405 = !{!1406, !1407, !6317}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1404, file: !782, line: 382, baseType: !544, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1404, file: !782, line: 383, baseType: !1408, size: 128, offset: 64)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !782, line: 376, size: 128, elements: !1409)
!1409 = !{!1410, !6315}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1408, file: !782, line: 377, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1413, line: 640, size: 48640, elements: !1414)
!1413 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1414 = !{!1415, !1421, !1423, !1424, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1441, !1459, !1470, !1559, !1560, !1561, !1572, !1573, !1575, !1576, !1577, !1578, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1662, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1694, !1696, !1697, !1698, !1710, !1711, !1712, !1713, !1714, !1715, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1739, !1744, !2082, !2083, !2084, !2085, !2086, !2089, !2092, !2095, !2098, !4169, !4265, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4313, !4314, !4315, !4316, !4317, !4322, !4323, !4324, !4327, !4328, !5912, !5921, !5924, !5925, !5926, !5929, !5930, !6009, !6010, !6013, !6014, !6017, !6018, !6019, !6023, !6024, !6025, !6038, !6039, !6040, !6050, !6055, !6113, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6149}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1412, file: !1413, line: 646, baseType: !1416, size: 128)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1417, line: 56, size: 128, elements: !1418)
!1417 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1416, file: !1417, line: 57, baseType: !473, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1416, file: !1417, line: 58, baseType: !862, size: 32, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1412, file: !1413, line: 649, baseType: !1422, size: 64, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !669)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1412, file: !1413, line: 657, baseType: !726, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1412, file: !1413, line: 658, baseType: !1425, size: 32, offset: 256)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1426, line: 113, baseType: !1427)
!1426 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1426, line: 111, size: 32, elements: !1428)
!1428 = !{!1429}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1427, file: !1426, line: 112, baseType: !544, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1412, file: !1413, line: 660, baseType: !14, size: 32, offset: 288)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1412, file: !1413, line: 661, baseType: !14, size: 32, offset: 320)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1412, file: !1413, line: 684, baseType: !7, size: 32, offset: 352)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1412, file: !1413, line: 686, baseType: !7, size: 32, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1412, file: !1413, line: 687, baseType: !7, size: 32, offset: 416)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1412, file: !1413, line: 688, baseType: !7, size: 32, offset: 448)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1412, file: !1413, line: 689, baseType: !14, size: 32, offset: 480)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1412, file: !1413, line: 691, baseType: !1438, size: 64, offset: 512)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1440)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1413, line: 691, flags: DIFlagFwdDecl)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1412, file: !1413, line: 692, baseType: !1442, size: 832, offset: 576)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1413, line: 451, size: 832, elements: !1443)
!1443 = !{!1444, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1442, file: !1413, line: 453, baseType: !1445, size: 128)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1413, line: 325, size: 128, elements: !1446)
!1446 = !{!1447, !1448}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1445, file: !1413, line: 326, baseType: !473, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1445, file: !1413, line: 327, baseType: !862, size: 32, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1442, file: !1413, line: 454, baseType: !594, size: 192, align: 64, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1442, file: !1413, line: 455, baseType: !445, size: 128, offset: 320)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1442, file: !1413, line: 456, baseType: !14, size: 32, offset: 448)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1442, file: !1413, line: 458, baseType: !492, size: 64, offset: 512)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1442, file: !1413, line: 459, baseType: !492, size: 64, offset: 576)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1442, file: !1413, line: 460, baseType: !492, size: 64, offset: 640)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1442, file: !1413, line: 461, baseType: !492, size: 64, offset: 704)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1442, file: !1413, line: 463, baseType: !492, size: 64, offset: 768)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1442, file: !1413, line: 465, baseType: !1458, offset: 832)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1413, line: 415, elements: !898)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1412, file: !1413, line: 693, baseType: !1460, size: 384, offset: 1408)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1413, line: 489, size: 384, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466, !1467, !1468}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1460, file: !1413, line: 490, baseType: !445, size: 128)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1460, file: !1413, line: 491, baseType: !473, size: 64, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1460, file: !1413, line: 492, baseType: !473, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1460, file: !1413, line: 493, baseType: !14, size: 32, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1460, file: !1413, line: 494, baseType: !633, size: 16, offset: 288)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1460, file: !1413, line: 495, baseType: !633, size: 16, offset: 304)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1460, file: !1413, line: 497, baseType: !1469, size: 64, offset: 320)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1412, file: !1413, line: 697, baseType: !1471, size: 1792, offset: 1792)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1413, line: 507, size: 1792, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1556, !1557}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1471, file: !1413, line: 508, baseType: !594, size: 192, align: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1471, file: !1413, line: 515, baseType: !492, size: 64, offset: 192)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1471, file: !1413, line: 516, baseType: !492, size: 64, offset: 256)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1471, file: !1413, line: 517, baseType: !492, size: 64, offset: 320)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1471, file: !1413, line: 518, baseType: !492, size: 64, offset: 384)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1471, file: !1413, line: 519, baseType: !492, size: 64, offset: 448)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1471, file: !1413, line: 526, baseType: !538, size: 64, offset: 512)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1471, file: !1413, line: 527, baseType: !492, size: 64, offset: 576)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1471, file: !1413, line: 528, baseType: !14, size: 32, offset: 640)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1471, file: !1413, line: 554, baseType: !14, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1471, file: !1413, line: 555, baseType: !14, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1471, file: !1413, line: 556, baseType: !14, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1471, file: !1413, line: 557, baseType: !14, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1471, file: !1413, line: 563, baseType: !1487, size: 512, offset: 704)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !19, line: 118, size: 512, elements: !1488)
!1488 = !{!1489, !1497, !1498, !1503, !1550, !1553, !1554, !1555}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1487, file: !19, line: 119, baseType: !1490, size: 256)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1491, line: 9, size: 256, elements: !1492)
!1491 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1492 = !{!1493, !1494}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1490, file: !1491, line: 10, baseType: !594, size: 192, align: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1490, file: !1491, line: 11, baseType: !1495, size: 64, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1496, line: 29, baseType: !538)
!1496 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1487, file: !19, line: 120, baseType: !1495, size: 64, offset: 256)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1487, file: !19, line: 121, baseType: !1499, size: 64, offset: 320)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!18, !1502}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1487, file: !19, line: 122, baseType: !1504, size: 64, offset: 384)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !19, line: 159, size: 512, align: 512, elements: !1506)
!1506 = !{!1507, !1527, !1528, !1531, !1536, !1537, !1545, !1549}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1505, file: !19, line: 160, baseType: !1508, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !19, line: 214, size: 4608, align: 512, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1509, file: !19, line: 215, baseType: !1322)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1509, file: !19, line: 216, baseType: !14, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1509, file: !19, line: 217, baseType: !14, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1509, file: !19, line: 218, baseType: !14, size: 32, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1509, file: !19, line: 219, baseType: !14, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1509, file: !19, line: 220, baseType: !14, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1509, file: !19, line: 221, baseType: !14, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1509, file: !19, line: 222, baseType: !14, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1509, file: !19, line: 233, baseType: !1495, size: 64, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1509, file: !19, line: 234, baseType: !1502, size: 64, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1509, file: !19, line: 235, baseType: !1495, size: 64, offset: 256)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1509, file: !19, line: 236, baseType: !1502, size: 64, offset: 320)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1509, file: !19, line: 237, baseType: !1524, size: 4096, offset: 512)
!1524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1505, size: 4096, elements: !1525)
!1525 = !{!1526}
!1526 = !DISubrange(count: 8)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1505, file: !19, line: 161, baseType: !14, size: 32, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1505, file: !19, line: 162, baseType: !1529, size: 32, offset: 96)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !438, line: 27, baseType: !1530)
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !752, line: 96, baseType: !7)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1505, file: !19, line: 163, baseType: !1532, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !835, line: 276, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !835, line: 276, size: 32, elements: !1534)
!1534 = !{!1535}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1533, file: !835, line: 276, baseType: !839, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1505, file: !19, line: 164, baseType: !1502, size: 64, offset: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1505, file: !19, line: 165, baseType: !1538, size: 128, offset: 256)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1491, line: 14, size: 128, elements: !1539)
!1539 = !{!1540}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1538, file: !1491, line: 15, baseType: !1541, size: 128)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !595, line: 125, size: 128, elements: !1542)
!1542 = !{!1543, !1544}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1541, file: !595, line: 126, baseType: !1287, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1541, file: !595, line: 127, baseType: !599, size: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1505, file: !19, line: 166, baseType: !1546, size: 64, offset: 384)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!1495}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1505, file: !19, line: 167, baseType: !1495, size: 64, offset: 448)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1487, file: !19, line: 123, baseType: !1551, size: 8, offset: 448)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !493, line: 17, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !495, line: 21, baseType: !650)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1487, file: !19, line: 124, baseType: !1551, size: 8, offset: 456)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1487, file: !19, line: 125, baseType: !1551, size: 8, offset: 464)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1487, file: !19, line: 126, baseType: !1551, size: 8, offset: 472)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1471, file: !1413, line: 572, baseType: !1487, size: 512, offset: 1216)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1471, file: !1413, line: 580, baseType: !1558, size: 64, offset: 1728)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1412, file: !1413, line: 721, baseType: !14, size: 32, offset: 3584)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1412, file: !1413, line: 722, baseType: !7, size: 32, offset: 3616)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1412, file: !1413, line: 723, baseType: !1562, size: 64, offset: 3648)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1565, line: 17, baseType: !1566)
!1565 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1565, line: 17, size: 64, elements: !1567)
!1567 = !{!1568}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1566, file: !1565, line: 17, baseType: !1569, size: 64)
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 64, elements: !1570)
!1570 = !{!1571}
!1571 = !DISubrange(count: 1)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1412, file: !1413, line: 724, baseType: !1564, size: 64, offset: 3712)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1412, file: !1413, line: 749, baseType: !1574, offset: 3776)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1413, line: 290, elements: !898)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1412, file: !1413, line: 751, baseType: !445, size: 128, offset: 3776)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1412, file: !1413, line: 757, baseType: !1279, size: 64, offset: 3904)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1412, file: !1413, line: 758, baseType: !1279, size: 64, offset: 3968)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1412, file: !1413, line: 761, baseType: !1579, size: 320, offset: 4032)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1352, line: 34, size: 320, elements: !1580)
!1580 = !{!1581, !1582}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1579, file: !1352, line: 35, baseType: !492, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1579, file: !1352, line: 36, baseType: !1583, size: 256, offset: 64)
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 256, elements: !1356)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1412, file: !1413, line: 766, baseType: !7, size: 32, offset: 4352)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1412, file: !1413, line: 767, baseType: !7, size: 32, offset: 4384)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1412, file: !1413, line: 768, baseType: !7, size: 32, offset: 4416)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1412, file: !1413, line: 770, baseType: !7, size: 32, offset: 4448)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1412, file: !1413, line: 772, baseType: !473, size: 64, offset: 4480)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1412, file: !1413, line: 775, baseType: !14, size: 32, offset: 4544)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1412, file: !1413, line: 778, baseType: !14, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1412, file: !1413, line: 779, baseType: !14, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1412, file: !1413, line: 780, baseType: !14, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1412, file: !1413, line: 803, baseType: !14, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1412, file: !1413, line: 806, baseType: !14, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1412, file: !1413, line: 807, baseType: !14, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1412, file: !1413, line: 809, baseType: !14, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1412, file: !1413, line: 815, baseType: !14, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1412, file: !1413, line: 831, baseType: !473, size: 64, offset: 4672)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1412, file: !1413, line: 833, baseType: !1600, size: 384, offset: 4736)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !24, line: 25, size: 384, elements: !1601)
!1601 = !{!1602, !1607}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1600, file: !24, line: 26, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!669, !1606}
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, scope: !1600, file: !24, line: 27, baseType: !1608, size: 320, offset: 64)
!1608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1600, file: !24, line: 27, size: 320, elements: !1609)
!1609 = !{!1610, !1620, !1647}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1608, file: !24, line: 36, baseType: !1611, size: 320)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1608, file: !24, line: 29, size: 320, elements: !1612)
!1612 = !{!1613, !1615, !1616, !1617, !1618, !1619}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1611, file: !24, line: 30, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1611, file: !24, line: 31, baseType: !862, size: 32, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1611, file: !24, line: 32, baseType: !862, size: 32, offset: 96)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1611, file: !24, line: 33, baseType: !862, size: 32, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1611, file: !24, line: 34, baseType: !492, size: 64, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1611, file: !24, line: 35, baseType: !1614, size: 64, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1608, file: !24, line: 46, baseType: !1621, size: 192)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1608, file: !24, line: 38, size: 192, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1646}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1621, file: !24, line: 39, baseType: !1529, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1621, file: !24, line: 40, baseType: !23, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !24, line: 41, baseType: !1626, size: 64, offset: 64)
!1626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !24, line: 41, size: 64, elements: !1627)
!1627 = !{!1628, !1636}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1626, file: !24, line: 42, baseType: !1629, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1631, line: 7, size: 128, elements: !1632)
!1631 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1632 = !{!1633, !1635}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1630, file: !1631, line: 8, baseType: !1634, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !752, line: 93, baseType: !540)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1630, file: !1631, line: 9, baseType: !540, size: 64, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1626, file: !24, line: 43, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1639, line: 7, size: 64, elements: !1640)
!1639 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1640 = !{!1641, !1645}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1638, file: !1639, line: 8, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1639, line: 5, baseType: !1643)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !493, line: 20, baseType: !1644)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !495, line: 26, baseType: !7)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1638, file: !1639, line: 9, baseType: !1643, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1621, file: !24, line: 45, baseType: !492, size: 64, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1608, file: !24, line: 54, baseType: !1648, size: 256)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1608, file: !24, line: 48, size: 256, elements: !1649)
!1649 = !{!1650, !1658, !1659, !1660, !1661}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1648, file: !24, line: 49, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1653, line: 36, size: 64, elements: !1654)
!1653 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1654 = !{!1655, !1656, !1657}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1652, file: !1653, line: 37, baseType: !7, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1652, file: !1653, line: 38, baseType: !1400, size: 16, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1652, file: !1653, line: 39, baseType: !1400, size: 16, offset: 48)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1648, file: !24, line: 50, baseType: !7, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1648, file: !24, line: 51, baseType: !7, size: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1648, file: !24, line: 52, baseType: !473, size: 64, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1648, file: !24, line: 53, baseType: !473, size: 64, offset: 192)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1412, file: !1413, line: 835, baseType: !1663, size: 32, offset: 5120)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !438, line: 22, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !752, line: 28, baseType: !7)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1412, file: !1413, line: 836, baseType: !1663, size: 32, offset: 5152)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1412, file: !1413, line: 840, baseType: !473, size: 64, offset: 5184)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1412, file: !1413, line: 849, baseType: !1411, size: 64, offset: 5248)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1412, file: !1413, line: 852, baseType: !1411, size: 64, offset: 5312)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1412, file: !1413, line: 857, baseType: !445, size: 128, offset: 5376)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1412, file: !1413, line: 858, baseType: !445, size: 128, offset: 5504)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1412, file: !1413, line: 859, baseType: !1411, size: 64, offset: 5632)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1412, file: !1413, line: 867, baseType: !445, size: 128, offset: 5696)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1412, file: !1413, line: 868, baseType: !445, size: 128, offset: 5824)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1412, file: !1413, line: 871, baseType: !1675, size: 64, offset: 5952)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !252, line: 59, size: 768, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1681, !1683, !1684, !1685, !1686}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1676, file: !252, line: 61, baseType: !1425, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1676, file: !252, line: 62, baseType: !14, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1676, file: !252, line: 63, baseType: !884, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1676, file: !252, line: 65, baseType: !1682, size: 256, offset: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 256, elements: !1356)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1676, file: !252, line: 66, baseType: !1011, size: 64, offset: 320)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1676, file: !252, line: 68, baseType: !1254, size: 128, offset: 384)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1676, file: !252, line: 69, baseType: !460, size: 128, align: 64, offset: 512)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1676, file: !252, line: 70, baseType: !1687, size: 128, offset: 640)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 128, elements: !1570)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !252, line: 54, size: 128, elements: !1689)
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1688, file: !252, line: 55, baseType: !7, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1688, file: !252, line: 56, baseType: !1692, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !252, line: 56, flags: DIFlagFwdDecl)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1412, file: !1413, line: 872, baseType: !1695, size: 512, offset: 6016)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 512, elements: !1356)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1412, file: !1413, line: 873, baseType: !445, size: 128, offset: 6528)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1412, file: !1413, line: 874, baseType: !445, size: 128, offset: 6656)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1412, file: !1413, line: 876, baseType: !1699, size: 64, offset: 6784)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1701, line: 26, size: 192, elements: !1702)
!1701 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1700, file: !1701, line: 27, baseType: !14, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1700, file: !1701, line: 28, baseType: !1705, size: 128, offset: 64)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1706, line: 43, size: 128, elements: !1707)
!1706 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1705, file: !1706, line: 44, baseType: !1322)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1705, file: !1706, line: 45, baseType: !445, size: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1412, file: !1413, line: 879, baseType: !695, size: 64, offset: 6848)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1412, file: !1413, line: 882, baseType: !695, size: 64, offset: 6912)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1412, file: !1413, line: 884, baseType: !492, size: 64, offset: 6976)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1412, file: !1413, line: 885, baseType: !492, size: 64, offset: 7040)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1412, file: !1413, line: 890, baseType: !492, size: 64, offset: 7104)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1412, file: !1413, line: 891, baseType: !1716, size: 128, offset: 7168)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1413, line: 242, size: 128, elements: !1717)
!1717 = !{!1718, !1719, !1720}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1716, file: !1413, line: 244, baseType: !492, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1716, file: !1413, line: 245, baseType: !492, size: 64, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1716, file: !1413, line: 246, baseType: !1322, offset: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1412, file: !1413, line: 900, baseType: !473, size: 64, offset: 7296)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1412, file: !1413, line: 901, baseType: !473, size: 64, offset: 7360)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1412, file: !1413, line: 904, baseType: !492, size: 64, offset: 7424)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1412, file: !1413, line: 907, baseType: !492, size: 64, offset: 7488)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1412, file: !1413, line: 910, baseType: !473, size: 64, offset: 7552)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1412, file: !1413, line: 911, baseType: !473, size: 64, offset: 7616)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1412, file: !1413, line: 914, baseType: !1728, size: 640, offset: 7680)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1729, line: 123, size: 640, elements: !1730)
!1729 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1730 = !{!1731, !1737, !1738}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1728, file: !1729, line: 124, baseType: !1732, size: 576)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1733, size: 576, elements: !1021)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1729, line: 108, size: 192, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1733, file: !1729, line: 109, baseType: !492, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1733, file: !1729, line: 110, baseType: !1538, size: 128, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1728, file: !1729, line: 125, baseType: !14, size: 32, offset: 576)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1728, file: !1729, line: 126, baseType: !14, size: 32, offset: 608)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1412, file: !1413, line: 917, baseType: !1740, size: 192, offset: 8320)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1729, line: 134, size: 192, elements: !1741)
!1741 = !{!1742, !1743}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1740, file: !1729, line: 135, baseType: !460, size: 128, align: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1740, file: !1729, line: 136, baseType: !14, size: 32, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1412, file: !1413, line: 923, baseType: !1745, size: 64, offset: 8512)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1748, line: 111, size: 1280, elements: !1749)
!1748 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1767, !1768, !1769, !1770, !1771, !1772, !1882, !1883, !1884, !1885, !1911, !2067, !2077}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1747, file: !1748, line: 112, baseType: !544, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1747, file: !1748, line: 120, baseType: !804, size: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1747, file: !1748, line: 121, baseType: !812, size: 32, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1747, file: !1748, line: 122, baseType: !804, size: 32, offset: 96)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1747, file: !1748, line: 123, baseType: !812, size: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1747, file: !1748, line: 124, baseType: !804, size: 32, offset: 160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1747, file: !1748, line: 125, baseType: !812, size: 32, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1747, file: !1748, line: 126, baseType: !804, size: 32, offset: 224)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1747, file: !1748, line: 127, baseType: !812, size: 32, offset: 256)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1747, file: !1748, line: 128, baseType: !14, size: 32, offset: 288)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1747, file: !1748, line: 129, baseType: !1761, size: 64, offset: 320)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1762, line: 26, baseType: !1763)
!1762 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1762, line: 24, size: 64, elements: !1764)
!1764 = !{!1765}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1763, file: !1762, line: 25, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 64, elements: !634)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1747, file: !1748, line: 130, baseType: !1761, size: 64, offset: 384)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1747, file: !1748, line: 131, baseType: !1761, size: 64, offset: 448)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1747, file: !1748, line: 132, baseType: !1761, size: 64, offset: 512)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1747, file: !1748, line: 133, baseType: !1761, size: 64, offset: 576)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1747, file: !1748, line: 135, baseType: !650, size: 8, offset: 640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1747, file: !1748, line: 137, baseType: !1773, size: 64, offset: 704)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1775, line: 189, size: 1664, elements: !1776)
!1775 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1776 = !{!1777, !1778, !1781, !1786, !1787, !1790, !1791, !1798, !1799, !1800, !1801, !1804, !1805, !1806, !1807, !1808, !1846, !1867}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1774, file: !1775, line: 190, baseType: !1425, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1774, file: !1775, line: 191, baseType: !1779, size: 32, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1775, line: 28, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !438, line: 98, baseType: !1643)
!1781 = !DIDerivedType(tag: DW_TAG_member, scope: !1774, file: !1775, line: 192, baseType: !1782, size: 192, offset: 64)
!1782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1774, file: !1775, line: 192, size: 192, elements: !1783)
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1782, file: !1775, line: 193, baseType: !445, size: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1782, file: !1775, line: 194, baseType: !594, size: 192, align: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1774, file: !1775, line: 199, baseType: !1316, size: 256, offset: 256)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1774, file: !1775, line: 200, baseType: !1788, size: 64, offset: 512)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1775, line: 200, flags: DIFlagFwdDecl)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1774, file: !1775, line: 201, baseType: !726, size: 64, offset: 576)
!1791 = !DIDerivedType(tag: DW_TAG_member, scope: !1774, file: !1775, line: 202, baseType: !1792, size: 64, offset: 640)
!1792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1774, file: !1775, line: 202, size: 64, elements: !1793)
!1793 = !{!1794, !1797}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1792, file: !1775, line: 203, baseType: !1795, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1796, line: 8, baseType: !539)
!1796 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1792, file: !1775, line: 204, baseType: !1795, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1774, file: !1775, line: 206, baseType: !1795, size: 64, offset: 704)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1774, file: !1775, line: 207, baseType: !804, size: 32, offset: 768)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1774, file: !1775, line: 208, baseType: !812, size: 32, offset: 800)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1774, file: !1775, line: 209, baseType: !1802, size: 32, offset: 832)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1775, line: 31, baseType: !1803)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !438, line: 104, baseType: !862)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1774, file: !1775, line: 210, baseType: !633, size: 16, offset: 864)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1774, file: !1775, line: 211, baseType: !633, size: 16, offset: 880)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1774, file: !1775, line: 215, baseType: !1400, size: 16, offset: 896)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1774, file: !1775, line: 222, baseType: !473, size: 64, offset: 960)
!1808 = !DIDerivedType(tag: DW_TAG_member, scope: !1774, file: !1775, line: 239, baseType: !1809, size: 320, offset: 1024)
!1809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1774, file: !1775, line: 239, size: 320, elements: !1810)
!1810 = !{!1811, !1838}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1809, file: !1775, line: 240, baseType: !1812, size: 320)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1775, line: 108, size: 320, elements: !1813)
!1813 = !{!1814, !1815, !1827, !1830, !1837}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1812, file: !1775, line: 110, baseType: !473, size: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, scope: !1812, file: !1775, line: 111, baseType: !1816, size: 64, offset: 64)
!1816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1812, file: !1775, line: 111, size: 64, elements: !1817)
!1817 = !{!1818, !1826}
!1818 = !DIDerivedType(tag: DW_TAG_member, scope: !1816, file: !1775, line: 112, baseType: !1819, size: 64)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1816, file: !1775, line: 112, size: 64, elements: !1820)
!1820 = !{!1821, !1822}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1819, file: !1775, line: 114, baseType: !1192, size: 16)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1819, file: !1775, line: 115, baseType: !1823, size: 48, offset: 16)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 48, elements: !1824)
!1824 = !{!1825}
!1825 = !DISubrange(count: 6)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1816, file: !1775, line: 121, baseType: !473, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1812, file: !1775, line: 123, baseType: !1828, size: 64, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1775, line: 96, flags: DIFlagFwdDecl)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1812, file: !1775, line: 124, baseType: !1831, size: 64, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1775, line: 102, size: 192, elements: !1833)
!1833 = !{!1834, !1835, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1832, file: !1775, line: 103, baseType: !460, size: 128, align: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1832, file: !1775, line: 104, baseType: !1425, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1832, file: !1775, line: 105, baseType: !696, size: 8, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1812, file: !1775, line: 125, baseType: !453, size: 64, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1809, file: !1775, line: 241, baseType: !1839, size: 320)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1809, file: !1775, line: 241, size: 320, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1839, file: !1775, line: 242, baseType: !473, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1839, file: !1775, line: 243, baseType: !473, size: 64, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1839, file: !1775, line: 244, baseType: !1828, size: 64, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1839, file: !1775, line: 245, baseType: !1831, size: 64, offset: 192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1839, file: !1775, line: 246, baseType: !733, size: 64, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, scope: !1774, file: !1775, line: 254, baseType: !1847, size: 256, offset: 1344)
!1847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1774, file: !1775, line: 254, size: 256, elements: !1848)
!1848 = !{!1849, !1855}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1847, file: !1775, line: 255, baseType: !1850, size: 256)
!1850 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1775, line: 128, size: 256, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1850, file: !1775, line: 129, baseType: !726, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1850, file: !1775, line: 130, baseType: !1854, size: 256)
!1854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 256, elements: !1356)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1847, file: !1775, line: 256, baseType: !1856, size: 256)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1847, file: !1775, line: 256, size: 256, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1856, file: !1775, line: 258, baseType: !445, size: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1856, file: !1775, line: 259, baseType: !1860, size: 128, offset: 128)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1861, line: 22, size: 128, elements: !1862)
!1861 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1862 = !{!1863, !1866}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1860, file: !1861, line: 23, baseType: !1864, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1861, line: 23, flags: DIFlagFwdDecl)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1860, file: !1861, line: 24, baseType: !473, size: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1774, file: !1775, line: 274, baseType: !1868, size: 64, offset: 1600)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1775, line: 170, size: 192, elements: !1870)
!1870 = !{!1871, !1880, !1881}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1869, file: !1775, line: 171, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1775, line: 165, baseType: !1873)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!7, !1773, !1876, !1878, !1773}
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1829)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1869, file: !1775, line: 172, baseType: !1773, size: 64, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1869, file: !1775, line: 173, baseType: !1828, size: 64, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1747, file: !1748, line: 138, baseType: !1773, size: 64, offset: 768)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1747, file: !1748, line: 139, baseType: !1773, size: 64, offset: 832)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1747, file: !1748, line: 140, baseType: !1773, size: 64, offset: 896)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1747, file: !1748, line: 145, baseType: !1886, size: 64, offset: 960)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1888, line: 13, size: 896, elements: !1889)
!1888 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1887, file: !1888, line: 14, baseType: !1425, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1887, file: !1888, line: 15, baseType: !544, size: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1887, file: !1888, line: 16, baseType: !544, size: 32, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1887, file: !1888, line: 21, baseType: !532, size: 64, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1887, file: !1888, line: 27, baseType: !473, size: 64, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1887, file: !1888, line: 28, baseType: !473, size: 64, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1887, file: !1888, line: 29, baseType: !532, size: 64, offset: 320)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1887, file: !1888, line: 32, baseType: !437, size: 128, offset: 384)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1887, file: !1888, line: 33, baseType: !804, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1887, file: !1888, line: 37, baseType: !532, size: 64, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1887, file: !1888, line: 44, baseType: !1901, size: 256, offset: 640)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1902, line: 15, size: 256, elements: !1903)
!1902 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1903 = !{!1904, !1905, !1906, !1907, !1908, !1909, !1910}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1901, file: !1902, line: 16, baseType: !1322)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1901, file: !1902, line: 18, baseType: !7, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1901, file: !1902, line: 19, baseType: !7, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1901, file: !1902, line: 20, baseType: !7, size: 32, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1901, file: !1902, line: 21, baseType: !7, size: 32, offset: 96)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1901, file: !1902, line: 22, baseType: !473, size: 64, offset: 128)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1901, file: !1902, line: 23, baseType: !473, size: 64, offset: 192)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1747, file: !1748, line: 146, baseType: !1912, size: 64, offset: 1024)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1914, line: 56, size: 4160, elements: !1915)
!1914 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1915 = !{!1916, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1955, !1956, !1957, !1958, !1959, !1971, !2052, !2053, !2065}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1913, file: !1914, line: 57, baseType: !1917, size: 576)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1914, line: 23, size: 576, elements: !1918)
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1917, file: !1914, line: 24, baseType: !862, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !1914, line: 25, baseType: !1921, size: 512, offset: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1917, file: !1914, line: 25, size: 512, elements: !1922)
!1922 = !{!1923, !1932}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1921, file: !1914, line: 26, baseType: !1924, size: 480)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 480, elements: !1930)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1914, line: 17, size: 96, elements: !1926)
!1926 = !{!1927, !1928, !1929}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1925, file: !1914, line: 18, baseType: !862, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1925, file: !1914, line: 19, baseType: !862, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1925, file: !1914, line: 20, baseType: !862, size: 32, offset: 64)
!1930 = !{!1931}
!1931 = !DISubrange(count: 5)
!1932 = !DIDerivedType(tag: DW_TAG_member, scope: !1921, file: !1914, line: 27, baseType: !1933, size: 128)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1921, file: !1914, line: 27, size: 128, elements: !1934)
!1934 = !{!1935, !1937}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1933, file: !1914, line: 28, baseType: !1936, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1933, file: !1914, line: 29, baseType: !1936, size: 64, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1913, file: !1914, line: 58, baseType: !1917, size: 576, offset: 576)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1913, file: !1914, line: 59, baseType: !1917, size: 576, offset: 1152)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1913, file: !1914, line: 60, baseType: !544, size: 32, offset: 1728)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1913, file: !1914, line: 61, baseType: !1912, size: 64, offset: 1792)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1913, file: !1914, line: 62, baseType: !7, size: 32, offset: 1856)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1913, file: !1914, line: 63, baseType: !804, size: 32, offset: 1888)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1913, file: !1914, line: 64, baseType: !812, size: 32, offset: 1920)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1913, file: !1914, line: 65, baseType: !1946, size: 192, offset: 1984)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1947, line: 7, size: 192, elements: !1948)
!1947 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1948 = !{!1949, !1950, !1954}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1946, file: !1947, line: 8, baseType: !532, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1946, file: !1947, line: 9, baseType: !1951, size: 64, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!1953 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1947, line: 5, flags: DIFlagFwdDecl)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1946, file: !1947, line: 10, baseType: !14, size: 32, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1913, file: !1914, line: 66, baseType: !473, size: 64, offset: 2176)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1913, file: !1914, line: 74, baseType: !445, size: 128, offset: 2240)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1913, file: !1914, line: 75, baseType: !1773, size: 64, offset: 2368)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1913, file: !1914, line: 76, baseType: !1316, size: 256, offset: 2432)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1913, file: !1914, line: 83, baseType: !1960, size: 256, offset: 2688)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1961, line: 102, size: 256, elements: !1962)
!1961 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1962 = !{!1963, !1964, !1965}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1960, file: !1961, line: 103, baseType: !532, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1960, file: !1961, line: 104, baseType: !445, size: 128, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1960, file: !1961, line: 105, baseType: !1966, size: 64, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1961, line: 21, baseType: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{null, !1970}
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1913, file: !1914, line: 85, baseType: !1972, size: 768, offset: 2944)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1973, line: 156, size: 768, elements: !1974)
!1973 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1974 = !{!1975, !1980}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1972, file: !1973, line: 157, baseType: !1976, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!7, !1979}
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1972, file: !1973, line: 158, baseType: !1981, size: 704, offset: 64)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1973, line: 150, size: 704, elements: !1982)
!1982 = !{!1983, !2051}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1981, file: !1973, line: 152, baseType: !1984, size: 640)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1973, line: 131, size: 640, elements: !1985)
!1985 = !{!1986, !2019, !2020, !2021, !2041, !2042, !2044, !2050}
!1986 = !DIDerivedType(tag: DW_TAG_member, scope: !1984, file: !1973, line: 132, baseType: !1987, size: 192)
!1987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1984, file: !1973, line: 132, size: 192, elements: !1988)
!1988 = !{!1989, !2018}
!1989 = !DIDerivedType(tag: DW_TAG_member, scope: !1987, file: !1973, line: 133, baseType: !1990, size: 192)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1987, file: !1973, line: 133, size: 192, elements: !1991)
!1991 = !{!1992, !2015, !2016, !2017}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1990, file: !1973, line: 134, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1973, line: 112, size: 512, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2000, !2001, !2007, !2013, !2014}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1994, file: !1973, line: 113, baseType: !453, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1994, file: !1973, line: 114, baseType: !726, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1994, file: !1973, line: 115, baseType: !7, size: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1994, file: !1973, line: 116, baseType: !801, size: 16, offset: 160)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1994, file: !1973, line: 117, baseType: !1993, size: 64, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1994, file: !1973, line: 118, baseType: !2002, size: 64, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1973, line: 47, baseType: !2004)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!7, !1993, !7, !726, !2006, !1123}
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1994, file: !1973, line: 119, baseType: !2008, size: 64, offset: 320)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1973, line: 94, size: 192, elements: !2010)
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2009, file: !1973, line: 95, baseType: !544, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2009, file: !1973, line: 96, baseType: !1254, size: 128, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1994, file: !1973, line: 120, baseType: !726, size: 64, offset: 384)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1994, file: !1973, line: 121, baseType: !726, size: 64, offset: 448)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1990, file: !1973, line: 135, baseType: !7, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1990, file: !1973, line: 136, baseType: !7, size: 32, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1990, file: !1973, line: 137, baseType: !7, size: 32, offset: 128)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1987, file: !1973, line: 139, baseType: !460, size: 128, align: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1984, file: !1973, line: 141, baseType: !1699, size: 64, offset: 192)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1984, file: !1973, line: 142, baseType: !1993, size: 64, offset: 256)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1984, file: !1973, line: 143, baseType: !2022, size: 64, offset: 320)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1973, line: 161, size: 960, elements: !2024)
!2024 = !{!2025, !2026, !2030, !2037}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2023, file: !1973, line: 162, baseType: !1972, size: 768)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2023, file: !1973, line: 163, baseType: !2027, size: 64, offset: 768)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!1979, !2022}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2023, file: !1973, line: 164, baseType: !2031, size: 64, offset: 832)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{null, !2034, !1993, !2035, !2036}
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2023, file: !1973, line: 167, baseType: !2038, size: 64, offset: 896)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!7, !2034, !1993}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1984, file: !1973, line: 144, baseType: !1979, size: 64, offset: 384)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1984, file: !1973, line: 145, baseType: !2043, size: 64, offset: 448)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1984, file: !1973, line: 146, baseType: !2045, size: 64, offset: 512)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1973, line: 124, size: 256, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2046, file: !1973, line: 125, baseType: !594, size: 192, align: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2046, file: !1973, line: 126, baseType: !2034, size: 64, offset: 192)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1984, file: !1973, line: 147, baseType: !1011, size: 64, offset: 576)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1981, file: !1973, line: 153, baseType: !1287, size: 64, offset: 640)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1913, file: !1914, line: 86, baseType: !2034, size: 64, offset: 3712)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1913, file: !1914, line: 88, baseType: !2054, size: 64, offset: 3776)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1914, line: 92, size: 576, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2055, file: !1914, line: 93, baseType: !437, size: 128)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2055, file: !1914, line: 94, baseType: !1912, size: 64, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2055, file: !1914, line: 95, baseType: !804, size: 32, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2055, file: !1914, line: 96, baseType: !7, size: 32, offset: 224)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2055, file: !1914, line: 97, baseType: !2062, size: 320, offset: 256)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 320, elements: !2063)
!2063 = !{!2064}
!2064 = !DISubrange(count: 10)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1913, file: !1914, line: 89, baseType: !2066, size: 320, offset: 3840)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !2063)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1747, file: !1748, line: 147, baseType: !2068, size: 64, offset: 1088)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1748, line: 25, size: 64, elements: !2070)
!2070 = !{!2071, !2072, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2069, file: !1748, line: 26, baseType: !544, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2069, file: !1748, line: 27, baseType: !7, size: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2069, file: !1748, line: 28, baseType: !2074, offset: 64)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !812, elements: !2075)
!2075 = !{!2076}
!2076 = !DISubrange(count: 0)
!2077 = !DIDerivedType(tag: DW_TAG_member, scope: !1747, file: !1748, line: 149, baseType: !2078, size: 128, offset: 1152)
!2078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1747, file: !1748, line: 149, size: 128, elements: !2079)
!2079 = !{!2080, !2081}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2078, file: !1748, line: 150, baseType: !7, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2078, file: !1748, line: 151, baseType: !460, size: 128, align: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1412, file: !1413, line: 926, baseType: !1745, size: 64, offset: 8576)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1412, file: !1413, line: 929, baseType: !1745, size: 64, offset: 8640)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1412, file: !1413, line: 933, baseType: !1773, size: 64, offset: 8704)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1412, file: !1413, line: 943, baseType: !428, size: 128, offset: 8768)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1412, file: !1413, line: 945, baseType: !2087, size: 64, offset: 8896)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1413, line: 49, flags: DIFlagFwdDecl)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1412, file: !1413, line: 956, baseType: !2090, size: 64, offset: 8960)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1413, line: 45, flags: DIFlagFwdDecl)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1412, file: !1413, line: 959, baseType: !2093, size: 64, offset: 9024)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1413, line: 959, flags: DIFlagFwdDecl)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1412, file: !1413, line: 962, baseType: !2096, size: 64, offset: 9088)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1413, line: 66, flags: DIFlagFwdDecl)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1412, file: !1413, line: 966, baseType: !2099, size: 64, offset: 9152)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2101, line: 31, size: 576, elements: !2102)
!2101 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2102 = !{!2103, !2104, !2107, !2110, !2113, !2114, !4152, !4155, !4156}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2100, file: !2101, line: 32, baseType: !544, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2100, file: !2101, line: 33, baseType: !2105, size: 64, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2101, line: 9, flags: DIFlagFwdDecl)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2100, file: !2101, line: 34, baseType: !2108, size: 64, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2101, line: 10, flags: DIFlagFwdDecl)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2100, file: !2101, line: 35, baseType: !2111, size: 64, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2101, line: 8, flags: DIFlagFwdDecl)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2100, file: !2101, line: 36, baseType: !1692, size: 64, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2100, file: !2101, line: 37, baseType: !2115, size: 64, offset: 320)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2117, line: 56, size: 16896, elements: !2118)
!2117 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2118 = !{!2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2147, !2148, !2149, !2153, !2154, !2155, !2156, !2157, !2160, !2162, !2163, !2178, !2179, !2180, !2181, !2191, !2260, !2266, !2272, !2285, !2695, !3465, !3466, !3481, !4124, !4125, !4151}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2116, file: !2117, line: 60, baseType: !1425, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2116, file: !2117, line: 63, baseType: !1425, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2116, file: !2117, line: 66, baseType: !884, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2116, file: !2117, line: 68, baseType: !14, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2116, file: !2117, line: 70, baseType: !14, size: 32, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2116, file: !2117, line: 71, baseType: !7, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2116, file: !2117, line: 73, baseType: !884, offset: 160)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2116, file: !2117, line: 74, baseType: !544, size: 32, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2116, file: !2117, line: 76, baseType: !445, size: 128, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2116, file: !2117, line: 77, baseType: !445, size: 128, offset: 320)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2116, file: !2117, line: 83, baseType: !1146, size: 64, offset: 448)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2116, file: !2117, line: 86, baseType: !1831, size: 64, offset: 512)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2116, file: !2117, line: 88, baseType: !1912, size: 64, offset: 576)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2116, file: !2117, line: 89, baseType: !2054, size: 64, offset: 640)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2116, file: !2117, line: 90, baseType: !2134, size: 192, offset: 704)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2135, line: 19, size: 192, elements: !2136)
!2135 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2136 = !{!2137, !2145, !2146}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2134, file: !2135, line: 20, baseType: !2138, size: 128)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2139, line: 292, size: 128, elements: !2140)
!2139 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2140 = !{!2141, !2142, !2144}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2138, file: !2139, line: 293, baseType: !884)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2138, file: !2139, line: 295, baseType: !2143, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !438, line: 148, baseType: !14)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2138, file: !2139, line: 296, baseType: !726, size: 64, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2134, file: !2135, line: 21, baseType: !14, size: 32, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2134, file: !2135, line: 22, baseType: !14, size: 32, offset: 160)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2116, file: !2117, line: 92, baseType: !1946, size: 192, offset: 896)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2116, file: !2117, line: 94, baseType: !445, size: 128, offset: 1088)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2116, file: !2117, line: 95, baseType: !2150, size: 64, offset: 1216)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !2152, line: 17, flags: DIFlagFwdDecl)
!2152 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2116, file: !2117, line: 96, baseType: !2150, size: 64, offset: 1280)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2116, file: !2117, line: 99, baseType: !1972, size: 768, offset: 1344)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2116, file: !2117, line: 102, baseType: !606, size: 64, offset: 2112)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2116, file: !2117, line: 103, baseType: !606, size: 64, offset: 2176)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2116, file: !2117, line: 105, baseType: !2158, size: 64, offset: 2240)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2117, line: 48, flags: DIFlagFwdDecl)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2116, file: !2117, line: 107, baseType: !2161, size: 64, offset: 2304)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2116, file: !2117, line: 108, baseType: !2161, size: 64, offset: 2368)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2116, file: !2117, line: 109, baseType: !2164, size: 64, offset: 2432)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2165, line: 70, size: 64, elements: !2166)
!2165 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2166 = !{!2167}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2164, file: !2165, line: 71, baseType: !2168, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2165, line: 54, size: 192, elements: !2170)
!2170 = !{!2171, !2176, !2177}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2169, file: !2165, line: 55, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2165, line: 51, baseType: !2173)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!7, !2168, !473, !726}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2169, file: !2165, line: 56, baseType: !2168, size: 64, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2169, file: !2165, line: 57, baseType: !7, size: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2116, file: !2117, line: 114, baseType: !862, size: 32, offset: 2496)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2116, file: !2117, line: 116, baseType: !451, size: 64, offset: 2560)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2116, file: !2117, line: 119, baseType: !445, size: 128, offset: 2624)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2116, file: !2117, line: 121, baseType: !2182, size: 256, offset: 2752)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2183, line: 8, size: 256, elements: !2184)
!2183 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2184 = !{!2185, !2186, !2187, !2188}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2182, file: !2183, line: 10, baseType: !2034, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2182, file: !2183, line: 12, baseType: !7, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2182, file: !2183, line: 15, baseType: !695, size: 64, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2182, file: !2183, line: 16, baseType: !2189, size: 64, offset: 192)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2183, line: 6, flags: DIFlagFwdDecl)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2116, file: !2117, line: 122, baseType: !2192, size: 832, offset: 3008)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2152, line: 7, size: 832, elements: !2193)
!2193 = !{!2194, !2201, !2212, !2220, !2228, !2229, !2237, !2245, !2246, !2247, !2248, !2249, !2255}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2192, file: !2152, line: 8, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2197, line: 92, size: 1024, elements: !2198)
!2197 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2198 = !{!2199}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2196, file: !2197, line: 93, baseType: !2200, size: 1024)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 1024, elements: !430)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2192, file: !2152, line: 9, baseType: !2202, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2197, line: 51, size: 2368, elements: !2204)
!2204 = !{!2205, !2209}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2203, file: !2197, line: 53, baseType: !2206, size: 2368)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 2368, elements: !2207)
!2207 = !{!2208}
!2208 = !DISubrange(count: 37)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2203, file: !2197, line: 54, baseType: !2210, offset: 2368)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2211, line: 68, elements: !898)
!2211 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2192, file: !2152, line: 10, baseType: !2213, size: 64, offset: 128)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2197, line: 104, size: 7936, elements: !2215)
!2215 = !{!2216}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2214, file: !2197, line: 105, baseType: !2217, size: 7936)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 7936, elements: !2218)
!2218 = !{!2219}
!2219 = !DISubrange(count: 124)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2192, file: !2152, line: 11, baseType: !2221, size: 64, offset: 192)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2197, line: 98, size: 576, elements: !2223)
!2223 = !{!2224}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2222, file: !2197, line: 99, baseType: !2225, size: 576)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 576, elements: !2226)
!2226 = !{!2227}
!2227 = !DISubrange(count: 9)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2192, file: !2152, line: 12, baseType: !2221, size: 64, offset: 256)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2192, file: !2152, line: 13, baseType: !2230, size: 64, offset: 320)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2197, line: 59, size: 1792, elements: !2232)
!2232 = !{!2233}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2231, file: !2197, line: 60, baseType: !2234, size: 1792)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 1792, elements: !2235)
!2235 = !{!2236}
!2236 = !DISubrange(count: 28)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2192, file: !2152, line: 14, baseType: !2238, size: 64, offset: 384)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2197, line: 64, size: 32768, elements: !2240)
!2240 = !{!2241}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2239, file: !2197, line: 65, baseType: !2242, size: 32768)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 32768, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 512)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2192, file: !2152, line: 17, baseType: !2150, size: 64, offset: 448)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2192, file: !2152, line: 18, baseType: !2221, size: 64, offset: 512)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2192, file: !2152, line: 19, baseType: !2221, size: 64, offset: 576)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2192, file: !2152, line: 20, baseType: !2202, size: 64, offset: 640)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2192, file: !2152, line: 21, baseType: !2250, size: 64, offset: 704)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2197, line: 71, size: 384, elements: !2252)
!2252 = !{!2253}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2251, file: !2197, line: 72, baseType: !2254, size: 384)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 384, elements: !1824)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2192, file: !2152, line: 22, baseType: !2256, size: 64, offset: 768)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2197, line: 81, size: 32768, elements: !2258)
!2258 = !{!2259}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2257, file: !2197, line: 82, baseType: !2242, size: 32768)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2116, file: !2117, line: 123, baseType: !2261, size: 256, offset: 3840)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2262, line: 11, size: 256, elements: !2263)
!2262 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2263 = !{!2264, !2265}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2261, file: !2262, line: 12, baseType: !1108, size: 192)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2261, file: !2262, line: 13, baseType: !1011, size: 64, offset: 192)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2116, file: !2117, line: 124, baseType: !2267, size: 128, offset: 4096)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2268, line: 9, size: 128, elements: !2269)
!2268 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270, !2271}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2267, file: !2268, line: 10, baseType: !7, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2267, file: !2268, line: 11, baseType: !2034, size: 64, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2116, file: !2117, line: 125, baseType: !2273, size: 512, offset: 4224)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2274, line: 11, size: 512, elements: !2275)
!2274 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2275 = !{!2276, !2277, !2278, !2279, !2280}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2273, file: !2274, line: 12, baseType: !1287, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2273, file: !2274, line: 13, baseType: !2161, size: 64, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2273, file: !2274, line: 15, baseType: !14, size: 32, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2273, file: !2274, line: 16, baseType: !862, size: 32, offset: 160)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2273, file: !2274, line: 17, baseType: !2281, size: 320, offset: 192)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2165, line: 65, size: 320, elements: !2282)
!2282 = !{!2283, !2284}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2281, file: !2165, line: 66, baseType: !1316, size: 256)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2281, file: !2165, line: 67, baseType: !2168, size: 64, offset: 256)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2116, file: !2117, line: 126, baseType: !2286, size: 5440, offset: 4736)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2287, line: 43, size: 5440, elements: !2288)
!2287 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2288 = !{!2289, !2290, !2291, !2292, !2293, !2294, !2297, !2298, !2311, !2312, !2313, !2314, !2315, !2316, !2318, !2319, !2332, !2333, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2568, !2569, !2570, !2571, !2572, !2580, !2581, !2582, !2586, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2606, !2607, !2609, !2610, !2684, !2685, !2686, !2687, !2688}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2286, file: !2287, line: 45, baseType: !2034, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2286, file: !2287, line: 46, baseType: !2034, size: 64, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2286, file: !2287, line: 47, baseType: !2034, size: 64, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2286, file: !2287, line: 48, baseType: !2034, size: 64, offset: 192)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2286, file: !2287, line: 49, baseType: !2034, size: 64, offset: 256)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2286, file: !2287, line: 51, baseType: !2295, size: 64, offset: 320)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2287, line: 16, flags: DIFlagFwdDecl)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2286, file: !2287, line: 52, baseType: !2295, size: 64, offset: 384)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2286, file: !2287, line: 53, baseType: !2299, size: 64, offset: 448)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2301, line: 122, size: 320, elements: !2302)
!2301 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!2302 = !{!2303, !2304, !2305, !2310}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2300, file: !2301, line: 123, baseType: !2299, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !2300, file: !2301, line: 124, baseType: !606, size: 64, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, scope: !2300, file: !2301, line: 125, baseType: !2306, size: 64, offset: 128)
!2306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2300, file: !2301, line: 125, size: 64, elements: !2307)
!2307 = !{!2308, !2309}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2306, file: !2301, line: 126, baseType: !707, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !2306, file: !2301, line: 127, baseType: !606, size: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2300, file: !2301, line: 129, baseType: !460, size: 128, align: 64, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2286, file: !2287, line: 54, baseType: !1108, size: 192, offset: 512)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2286, file: !2287, line: 62, baseType: !696, size: 8, offset: 704)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2286, file: !2287, line: 66, baseType: !2161, size: 64, offset: 768)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2286, file: !2287, line: 67, baseType: !696, size: 8, offset: 832)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2286, file: !2287, line: 68, baseType: !606, size: 64, offset: 896)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2286, file: !2287, line: 70, baseType: !2317, size: 64, offset: 960)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2286, file: !2287, line: 71, baseType: !606, size: 64, offset: 1024)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2286, file: !2287, line: 73, baseType: !2320, size: 64, offset: 1088)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2322, line: 61, size: 128, elements: !2323)
!2322 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!2323 = !{!2324, !2325, !2331}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2321, file: !2322, line: 62, baseType: !1287, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2321, file: !2322, line: 63, baseType: !2326, size: 32, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !835, line: 805, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !835, line: 798, size: 32, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2327, file: !835, line: 803, baseType: !834, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2327, file: !835, line: 804, baseType: !884, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2321, file: !2322, line: 64, baseType: !7, size: 32, offset: 96)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2286, file: !2287, line: 74, baseType: !2317, size: 64, offset: 1152)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2286, file: !2287, line: 75, baseType: !2334, size: 64, offset: 1216)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2336, line: 9, size: 1728, elements: !2337)
!2336 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2337 = !{!2338, !2339, !2340, !2341, !2342, !2484, !2485, !2486, !2487, !2488}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2335, file: !2336, line: 11, baseType: !669, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2335, file: !2336, line: 12, baseType: !669, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2335, file: !2336, line: 13, baseType: !7, size: 32, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2335, file: !2336, line: 14, baseType: !7, size: 32, offset: 160)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2335, file: !2336, line: 15, baseType: !2343, size: 64, offset: 192)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2336, line: 98, size: 960, elements: !2345)
!2345 = !{!2346, !2347, !2418, !2422, !2423, !2426, !2427, !2482, !2483}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2344, file: !2336, line: 99, baseType: !14, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2344, file: !2336, line: 101, baseType: !2348, size: 64, offset: 64)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{null, !2351, !2416}
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2336, line: 77, size: 1408, elements: !2353)
!2353 = !{!2354, !2360, !2392, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2352, file: !2336, line: 78, baseType: !2355, size: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2356, line: 17, size: 64, elements: !2357)
!2356 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2357 = !{!2358}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2355, file: !2356, line: 18, baseType: !2359, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2352, file: !2336, line: 82, baseType: !2361, size: 352, offset: 64)
!2361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2352, file: !2336, line: 79, size: 352, elements: !2362)
!2362 = !{!2363, !2372}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2361, file: !2336, line: 80, baseType: !2364, size: 160)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2336, line: 41, size: 160, elements: !2365)
!2365 = !{!2366, !2367, !2368, !2369, !2370, !2371}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2364, file: !2336, line: 42, baseType: !622, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2364, file: !2336, line: 43, baseType: !622, size: 32, offset: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2364, file: !2336, line: 44, baseType: !862, size: 32, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2364, file: !2336, line: 45, baseType: !862, size: 32, offset: 96)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2364, file: !2336, line: 46, baseType: !645, size: 16, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2364, file: !2336, line: 47, baseType: !1192, size: 16, offset: 144)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2361, file: !2336, line: 81, baseType: !2373, size: 352)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2336, line: 50, size: 352, elements: !2374)
!2374 = !{!2375, !2388, !2389, !2390, !2391}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2373, file: !2336, line: 51, baseType: !2376, size: 128)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2377, line: 33, size: 128, elements: !2378)
!2377 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2378 = !{!2379}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2376, file: !2377, line: 40, baseType: !2380, size: 128)
!2380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !2377, line: 34, size: 128, elements: !2381)
!2381 = !{!2382, !2384, !2386}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2380, file: !2377, line: 35, baseType: !2383, size: 128)
!2383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 128, elements: !430)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2380, file: !2377, line: 37, baseType: !2385, size: 128)
!2385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 128, elements: !1525)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2380, file: !2377, line: 38, baseType: !2387, size: 128)
!2387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 128, elements: !1356)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2373, file: !2336, line: 52, baseType: !2376, size: 128, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2373, file: !2336, line: 53, baseType: !862, size: 32, offset: 256)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2373, file: !2336, line: 54, baseType: !622, size: 32, offset: 288)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2373, file: !2336, line: 55, baseType: !862, size: 32, offset: 320)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2352, file: !2336, line: 83, baseType: !2393, size: 320, offset: 448)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2394, line: 11, size: 320, elements: !2395)
!2394 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2395 = !{!2396, !2397, !2398, !2403}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2393, file: !2394, line: 16, baseType: !437, size: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2393, file: !2394, line: 17, baseType: !473, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2393, file: !2394, line: 18, baseType: !2399, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{null, !2402}
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2393, file: !2394, line: 19, baseType: !862, size: 32, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2352, file: !2336, line: 84, baseType: !884, offset: 768)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2352, file: !2336, line: 85, baseType: !1425, size: 32, offset: 768)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2352, file: !2336, line: 86, baseType: !1287, size: 64, offset: 832)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2352, file: !2336, line: 87, baseType: !576, size: 64, offset: 896)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2352, file: !2336, line: 88, baseType: !576, size: 64, offset: 960)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2352, file: !2336, line: 89, baseType: !1495, size: 64, offset: 1024)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2352, file: !2336, line: 90, baseType: !7, size: 32, offset: 1088)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2352, file: !2336, line: 91, baseType: !7, size: 32, offset: 1120)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2352, file: !2336, line: 92, baseType: !1552, size: 8, offset: 1152)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2352, file: !2336, line: 93, baseType: !1192, size: 16, offset: 1168)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2352, file: !2336, line: 94, baseType: !2334, size: 64, offset: 1216)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2352, file: !2336, line: 95, baseType: !460, size: 128, align: 64, offset: 1280)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2344, file: !2336, line: 103, baseType: !2419, size: 64, offset: 128)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DISubroutineType(types: !2421)
!2421 = !{null, !2351}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2344, file: !2336, line: 104, baseType: !2399, size: 64, offset: 192)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2344, file: !2336, line: 105, baseType: !2424, size: 64, offset: 256)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !782, line: 117, flags: DIFlagFwdDecl)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2344, file: !2336, line: 106, baseType: !453, size: 64, offset: 320)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2344, file: !2336, line: 107, baseType: !2428, size: 320, offset: 384)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2356, line: 56, size: 320, elements: !2429)
!2429 = !{!2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2442, !2444}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2428, file: !2356, line: 57, baseType: !1192, size: 16)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2428, file: !2356, line: 58, baseType: !1192, size: 16, offset: 16)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2428, file: !2356, line: 59, baseType: !1192, size: 16, offset: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2428, file: !2356, line: 60, baseType: !1192, size: 16, offset: 48)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2428, file: !2356, line: 61, baseType: !14, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2428, file: !2356, line: 62, baseType: !1192, size: 16, offset: 96)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2428, file: !2356, line: 63, baseType: !696, size: 8, offset: 112)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2428, file: !2356, line: 64, baseType: !2438, size: 64, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2356, line: 38, baseType: !2439)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!862, !2416, !862, !862}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2428, file: !2356, line: 65, baseType: !2443, size: 64, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2356, line: 39, baseType: !2439)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2428, file: !2356, line: 66, baseType: !2445, size: 64, offset: 256)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2356, line: 40, baseType: !2446)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!7, !2449, !2416}
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2356, line: 33, size: 128, elements: !2451)
!2451 = !{!2452, !2481}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2450, file: !2356, line: 34, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2356, line: 81, size: 1024, elements: !2455)
!2455 = !{!2456, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2454, file: !2356, line: 82, baseType: !2457, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2459, line: 76, size: 448, elements: !2460)
!2459 = !DIFile(filename: "./include/linux/rhashtable.h", directory: "/home/lizy2001/genbc/linux")
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2466, !2467, !2469}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2458, file: !2459, line: 77, baseType: !14, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !2458, file: !2459, line: 78, baseType: !14, size: 32, offset: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2458, file: !2459, line: 79, baseType: !862, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !2458, file: !2459, line: 80, baseType: !445, size: 128, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2458, file: !2459, line: 81, baseType: !460, size: 128, align: 64, offset: 256)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "future_tbl", scope: !2458, file: !2459, line: 83, baseType: !2457, size: 64, offset: 384)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dep_map", scope: !2458, file: !2459, line: 85, baseType: !2468, offset: 448)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1016, line: 192, elements: !898)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2458, file: !2459, line: 87, baseType: !2470, offset: 448)
!2470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2471, elements: !470)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_lock_head", file: !2459, line: 47, elements: !898)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2454, file: !2356, line: 83, baseType: !14, size: 32, offset: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2454, file: !2356, line: 84, baseType: !14, size: 32, offset: 96)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2454, file: !2356, line: 85, baseType: !2428, size: 320, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2454, file: !2356, line: 86, baseType: !696, size: 8, offset: 448)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2454, file: !2356, line: 87, baseType: !1960, size: 256, offset: 512)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2454, file: !2356, line: 88, baseType: !1108, size: 192, offset: 768)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2454, file: !2356, line: 89, baseType: !884, offset: 960)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2454, file: !2356, line: 90, baseType: !544, size: 32, offset: 960)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2450, file: !2356, line: 35, baseType: !2416, size: 64, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2344, file: !2336, line: 108, baseType: !1425, size: 32, offset: 704)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2344, file: !2336, line: 109, baseType: !1700, size: 192, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2335, file: !2336, line: 16, baseType: !2115, size: 64, offset: 256)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2335, file: !2336, line: 17, baseType: !696, size: 8, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2335, file: !2336, line: 19, baseType: !2454, size: 1024, offset: 384)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2335, file: !2336, line: 22, baseType: !532, size: 64, offset: 1408)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2335, file: !2336, line: 23, baseType: !1960, size: 256, offset: 1472)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2286, file: !2287, line: 87, baseType: !7, size: 32, offset: 1280)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2286, file: !2287, line: 88, baseType: !7, size: 32, offset: 1312)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2286, file: !2287, line: 89, baseType: !7, size: 32, offset: 1344)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2286, file: !2287, line: 90, baseType: !7, size: 32, offset: 1376)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2286, file: !2287, line: 91, baseType: !7, size: 32, offset: 1408)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2286, file: !2287, line: 92, baseType: !7, size: 32, offset: 1440)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2286, file: !2287, line: 94, baseType: !2496, size: 128, offset: 1472)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2287, line: 21, size: 128, elements: !2497)
!2497 = !{!2498, !2499, !2501}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2496, file: !2287, line: 22, baseType: !2326, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2496, file: !2287, line: 23, baseType: !2500, size: 64, offset: 32)
!2500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !634)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2496, file: !2287, line: 24, baseType: !696, size: 8, offset: 96)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2286, file: !2287, line: 96, baseType: !7, size: 32, offset: 1600)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2286, file: !2287, line: 97, baseType: !7, size: 32, offset: 1632)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2286, file: !2287, line: 99, baseType: !7, size: 32, offset: 1664)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2286, file: !2287, line: 100, baseType: !7, size: 32, offset: 1696)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2286, file: !2287, line: 101, baseType: !7, size: 32, offset: 1728)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2286, file: !2287, line: 102, baseType: !7, size: 32, offset: 1760)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2286, file: !2287, line: 103, baseType: !7, size: 32, offset: 1792)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2286, file: !2287, line: 104, baseType: !7, size: 32, offset: 1824)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2286, file: !2287, line: 106, baseType: !7, size: 32, offset: 1856)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2286, file: !2287, line: 107, baseType: !7, size: 32, offset: 1888)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2286, file: !2287, line: 111, baseType: !7, size: 32, offset: 1920)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2286, file: !2287, line: 112, baseType: !7, size: 32, offset: 1952)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2286, file: !2287, line: 114, baseType: !7, size: 32, offset: 1984)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2286, file: !2287, line: 116, baseType: !7, size: 32, offset: 2016)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2286, file: !2287, line: 117, baseType: !7, size: 32, offset: 2048)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2286, file: !2287, line: 121, baseType: !7, size: 32, offset: 2080)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2286, file: !2287, line: 122, baseType: !7, size: 32, offset: 2112)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2286, file: !2287, line: 123, baseType: !7, size: 32, offset: 2144)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2286, file: !2287, line: 124, baseType: !7, size: 32, offset: 2176)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2286, file: !2287, line: 125, baseType: !7, size: 32, offset: 2208)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2286, file: !2287, line: 126, baseType: !862, size: 32, offset: 2240)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2286, file: !2287, line: 128, baseType: !7, size: 32, offset: 2272)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2286, file: !2287, line: 129, baseType: !7, size: 32, offset: 2304)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2286, file: !2287, line: 130, baseType: !7, size: 32, offset: 2336)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2286, file: !2287, line: 132, baseType: !7, size: 32, offset: 2368)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2286, file: !2287, line: 133, baseType: !7, size: 32, offset: 2400)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2286, file: !2287, line: 134, baseType: !7, size: 32, offset: 2432)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2286, file: !2287, line: 135, baseType: !7, size: 32, offset: 2464)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2286, file: !2287, line: 136, baseType: !7, size: 32, offset: 2496)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2286, file: !2287, line: 137, baseType: !7, size: 32, offset: 2528)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2286, file: !2287, line: 138, baseType: !7, size: 32, offset: 2560)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2286, file: !2287, line: 139, baseType: !7, size: 32, offset: 2592)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2286, file: !2287, line: 140, baseType: !14, size: 32, offset: 2624)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2286, file: !2287, line: 141, baseType: !7, size: 32, offset: 2656)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2286, file: !2287, line: 142, baseType: !7, size: 32, offset: 2688)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2286, file: !2287, line: 143, baseType: !7, size: 32, offset: 2720)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2286, file: !2287, line: 144, baseType: !7, size: 32, offset: 2752)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2286, file: !2287, line: 145, baseType: !7, size: 32, offset: 2784)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2286, file: !2287, line: 146, baseType: !7, size: 32, offset: 2816)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2286, file: !2287, line: 147, baseType: !7, size: 32, offset: 2848)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2286, file: !2287, line: 148, baseType: !7, size: 32, offset: 2880)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2286, file: !2287, line: 149, baseType: !7, size: 32, offset: 2912)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2286, file: !2287, line: 150, baseType: !7, size: 32, offset: 2944)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2286, file: !2287, line: 151, baseType: !7, size: 32, offset: 2976)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2286, file: !2287, line: 152, baseType: !7, size: 32, offset: 3008)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2286, file: !2287, line: 153, baseType: !7, size: 32, offset: 3040)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2286, file: !2287, line: 154, baseType: !7, size: 32, offset: 3072)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2286, file: !2287, line: 155, baseType: !7, size: 32, offset: 3104)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2286, file: !2287, line: 156, baseType: !7, size: 32, offset: 3136)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2286, file: !2287, line: 157, baseType: !7, size: 32, offset: 3168)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2286, file: !2287, line: 158, baseType: !7, size: 32, offset: 3200)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2286, file: !2287, line: 159, baseType: !7, size: 32, offset: 3232)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2286, file: !2287, line: 160, baseType: !7, size: 32, offset: 3264)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2286, file: !2287, line: 161, baseType: !7, size: 32, offset: 3296)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2286, file: !2287, line: 162, baseType: !7, size: 32, offset: 3328)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2286, file: !2287, line: 163, baseType: !7, size: 32, offset: 3360)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2286, file: !2287, line: 164, baseType: !7, size: 32, offset: 3392)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2286, file: !2287, line: 165, baseType: !7, size: 32, offset: 3424)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2286, file: !2287, line: 166, baseType: !7, size: 32, offset: 3456)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2286, file: !2287, line: 167, baseType: !7, size: 32, offset: 3488)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2286, file: !2287, line: 168, baseType: !7, size: 32, offset: 3520)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2286, file: !2287, line: 169, baseType: !7, size: 32, offset: 3552)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2286, file: !2287, line: 170, baseType: !7, size: 32, offset: 3584)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2286, file: !2287, line: 171, baseType: !7, size: 32, offset: 3616)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2286, file: !2287, line: 172, baseType: !2567, size: 96, offset: 3648)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1021)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2286, file: !2287, line: 173, baseType: !2567, size: 96, offset: 3744)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2286, file: !2287, line: 174, baseType: !7, size: 32, offset: 3840)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2286, file: !2287, line: 175, baseType: !473, size: 64, offset: 3904)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2286, file: !2287, line: 176, baseType: !473, size: 64, offset: 3968)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2286, file: !2287, line: 177, baseType: !2573, size: 192, offset: 4032)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2287, line: 34, size: 192, elements: !2574)
!2574 = !{!2575, !2576, !2579}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2573, file: !2287, line: 35, baseType: !544, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2573, file: !2287, line: 37, baseType: !2577, size: 64, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2287, line: 32, flags: DIFlagFwdDecl)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2573, file: !2287, line: 38, baseType: !7, size: 32, offset: 128)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2286, file: !2287, line: 178, baseType: !7, size: 32, offset: 4224)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2286, file: !2287, line: 179, baseType: !7, size: 32, offset: 4256)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2286, file: !2287, line: 180, baseType: !2583, size: 64, offset: 4288)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2585)
!2585 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2287, line: 180, flags: DIFlagFwdDecl)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2286, file: !2287, line: 181, baseType: !2587, size: 64, offset: 4352)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2287, line: 41, flags: DIFlagFwdDecl)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2286, file: !2287, line: 182, baseType: !884, offset: 4416)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2286, file: !2287, line: 183, baseType: !14, size: 32, offset: 4416)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2286, file: !2287, line: 184, baseType: !544, size: 32, offset: 4448)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2286, file: !2287, line: 185, baseType: !473, size: 64, offset: 4480)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2286, file: !2287, line: 186, baseType: !7, size: 32, offset: 4544)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2286, file: !2287, line: 188, baseType: !7, size: 32, offset: 4576)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2286, file: !2287, line: 189, baseType: !7, size: 32, offset: 4608)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2286, file: !2287, line: 195, baseType: !7, size: 32, offset: 4640)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2286, file: !2287, line: 196, baseType: !7, size: 32, offset: 4672)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2286, file: !2287, line: 197, baseType: !7, size: 32, offset: 4704)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2286, file: !2287, line: 198, baseType: !7, size: 32, offset: 4736)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2286, file: !2287, line: 200, baseType: !2601, size: 96, offset: 4768)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2287, line: 27, size: 96, elements: !2602)
!2602 = !{!2603, !2604}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2601, file: !2287, line: 28, baseType: !2326, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2601, file: !2287, line: 29, baseType: !2605, size: 64, offset: 32)
!2605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !812, size: 64, elements: !634)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2286, file: !2287, line: 202, baseType: !544, size: 32, offset: 4864)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2286, file: !2287, line: 205, baseType: !2608, size: 64, offset: 4928)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2286, file: !2287, line: 206, baseType: !7, size: 32, offset: 4992)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2286, file: !2287, line: 222, baseType: !2611, size: 64, offset: 5056)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2613, line: 28, size: 512, elements: !2614)
!2613 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2614 = !{!2615, !2616, !2617, !2621, !2682, !2683}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2612, file: !2613, line: 29, baseType: !7, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2612, file: !2613, line: 30, baseType: !445, size: 128, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2612, file: !2613, line: 31, baseType: !2618, size: 64, offset: 192)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!14, !2115}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2612, file: !2613, line: 32, baseType: !2622, size: 64, offset: 256)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{!7, !2115, !2168, !2625}
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2627, line: 75, size: 384, elements: !2628)
!2627 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2628 = !{!2629, !2630, !2638, !2677, !2681}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2626, file: !2627, line: 76, baseType: !453, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2626, file: !2627, line: 77, baseType: !2631, size: 64, offset: 64)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2633)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2634, line: 213, size: 32, elements: !2635)
!2634 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2635 = !{!2636, !2637}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2633, file: !2634, line: 214, baseType: !632, size: 16)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2633, file: !2634, line: 215, baseType: !632, size: 16, offset: 16)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2626, file: !2627, line: 78, baseType: !2639, size: 64, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2641)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2642, line: 315, size: 128, elements: !2643)
!2642 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2643 = !{!2644, !2645, !2646, !2647}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2641, file: !2642, line: 316, baseType: !1551, size: 8)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2641, file: !2642, line: 317, baseType: !1551, size: 8, offset: 8)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2641, file: !2642, line: 318, baseType: !1192, size: 16, offset: 16)
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2641, file: !2642, line: 319, baseType: !2648, size: 64, offset: 64)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2641, file: !2642, line: 319, size: 64, elements: !2649)
!2649 = !{!2650, !2652, !2653, !2654, !2655, !2661, !2667, !2672, !2676}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2648, file: !2642, line: 320, baseType: !2651, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2648, file: !2642, line: 321, baseType: !2651, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2648, file: !2642, line: 322, baseType: !453, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2648, file: !2642, line: 323, baseType: !2639, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2648, file: !2642, line: 324, baseType: !2656, size: 64)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2642, line: 189, size: 128, elements: !2658)
!2658 = !{!2659, !2660}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2657, file: !2642, line: 190, baseType: !492, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2657, file: !2642, line: 190, baseType: !492, size: 64, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2648, file: !2642, line: 325, baseType: !2662, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2642, line: 193, size: 128, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2663, file: !2642, line: 194, baseType: !538, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2663, file: !2642, line: 194, baseType: !538, size: 64, offset: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2648, file: !2642, line: 326, baseType: !2668, size: 32)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2648, file: !2642, line: 326, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2668, file: !2642, line: 327, baseType: !1398, size: 16)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2668, file: !2642, line: 327, baseType: !1398, size: 16, offset: 16)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2648, file: !2642, line: 329, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!7, !2631, !2625}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2648, file: !2642, line: 349, baseType: !1192, size: 16)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2626, file: !2627, line: 79, baseType: !2678, size: 160, offset: 192)
!2678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 160, elements: !2679)
!2679 = !{!2680}
!2680 = !DISubrange(count: 20)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2626, file: !2627, line: 80, baseType: !1551, size: 8, offset: 352)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2612, file: !2613, line: 34, baseType: !1006, size: 64, offset: 320)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2612, file: !2613, line: 35, baseType: !460, size: 128, align: 64, offset: 384)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2286, file: !2287, line: 223, baseType: !14, size: 32, offset: 5120)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2286, file: !2287, line: 225, baseType: !2611, size: 64, offset: 5184)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2286, file: !2287, line: 226, baseType: !14, size: 32, offset: 5248)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2286, file: !2287, line: 228, baseType: !544, size: 32, offset: 5280)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2286, file: !2287, line: 229, baseType: !2689, size: 128, offset: 5312)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2690, line: 22, baseType: !2691)
!2690 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2690, line: 20, size: 128, elements: !2692)
!2692 = !{!2693}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2691, file: !2690, line: 21, baseType: !2694, size: 128)
!2694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 128, elements: !634)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2116, file: !2117, line: 128, baseType: !2696, size: 4608, offset: 10176)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2697, line: 56, size: 4608, elements: !2698)
!2697 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2698 = !{!2699, !2739, !2793, !2794, !2795, !2796, !3425, !3426, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3456, !3457, !3458, !3459}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2696, file: !2697, line: 57, baseType: !2700, size: 1600)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2697, line: 15, size: 1600, elements: !2701)
!2701 = !{!2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2700, file: !2697, line: 17, baseType: !2034, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2700, file: !2697, line: 18, baseType: !2034, size: 64, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2700, file: !2697, line: 19, baseType: !2034, size: 64, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2700, file: !2697, line: 20, baseType: !2034, size: 64, offset: 192)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2700, file: !2697, line: 21, baseType: !2034, size: 64, offset: 256)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2700, file: !2697, line: 23, baseType: !7, size: 32, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2700, file: !2697, line: 24, baseType: !7, size: 32, offset: 352)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2700, file: !2697, line: 25, baseType: !7, size: 32, offset: 384)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2700, file: !2697, line: 26, baseType: !7, size: 32, offset: 416)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2700, file: !2697, line: 27, baseType: !7, size: 32, offset: 448)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2700, file: !2697, line: 28, baseType: !7, size: 32, offset: 480)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2700, file: !2697, line: 29, baseType: !7, size: 32, offset: 512)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2700, file: !2697, line: 30, baseType: !7, size: 32, offset: 544)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2700, file: !2697, line: 31, baseType: !7, size: 32, offset: 576)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2700, file: !2697, line: 32, baseType: !7, size: 32, offset: 608)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2700, file: !2697, line: 33, baseType: !7, size: 32, offset: 640)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2700, file: !2697, line: 34, baseType: !7, size: 32, offset: 672)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2700, file: !2697, line: 35, baseType: !7, size: 32, offset: 704)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2700, file: !2697, line: 36, baseType: !7, size: 32, offset: 736)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2700, file: !2697, line: 37, baseType: !7, size: 32, offset: 768)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2700, file: !2697, line: 38, baseType: !7, size: 32, offset: 800)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2700, file: !2697, line: 39, baseType: !2724, size: 256, offset: 832)
!2724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !1356)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2700, file: !2697, line: 40, baseType: !2608, size: 64, offset: 1088)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2700, file: !2697, line: 41, baseType: !7, size: 32, offset: 1152)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2700, file: !2697, line: 42, baseType: !7, size: 32, offset: 1184)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2700, file: !2697, line: 43, baseType: !7, size: 32, offset: 1216)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2700, file: !2697, line: 44, baseType: !7, size: 32, offset: 1248)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2700, file: !2697, line: 45, baseType: !7, size: 32, offset: 1280)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2700, file: !2697, line: 46, baseType: !7, size: 32, offset: 1312)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2700, file: !2697, line: 47, baseType: !7, size: 32, offset: 1344)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2700, file: !2697, line: 48, baseType: !7, size: 32, offset: 1376)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2700, file: !2697, line: 49, baseType: !7, size: 32, offset: 1408)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2700, file: !2697, line: 50, baseType: !7, size: 32, offset: 1440)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2700, file: !2697, line: 51, baseType: !7, size: 32, offset: 1472)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2700, file: !2697, line: 52, baseType: !7, size: 32, offset: 1504)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2700, file: !2697, line: 53, baseType: !696, size: 8, offset: 1536)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2696, file: !2697, line: 58, baseType: !2740, size: 64, offset: 1600)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2742, line: 12, size: 1600, elements: !2743)
!2742 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2743 = !{!2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !2741, file: !2742, line: 13, baseType: !1644, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !2741, file: !2742, line: 14, baseType: !1644, size: 32, offset: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !2741, file: !2742, line: 15, baseType: !1644, size: 32, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !2741, file: !2742, line: 16, baseType: !1644, size: 32, offset: 96)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !2741, file: !2742, line: 17, baseType: !1644, size: 32, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !2741, file: !2742, line: 18, baseType: !1644, size: 32, offset: 160)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !2741, file: !2742, line: 19, baseType: !1644, size: 32, offset: 192)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !2741, file: !2742, line: 20, baseType: !1644, size: 32, offset: 224)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !2741, file: !2742, line: 21, baseType: !1644, size: 32, offset: 256)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !2741, file: !2742, line: 22, baseType: !1644, size: 32, offset: 288)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !2741, file: !2742, line: 23, baseType: !1644, size: 32, offset: 320)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !2741, file: !2742, line: 24, baseType: !1644, size: 32, offset: 352)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !2741, file: !2742, line: 25, baseType: !1644, size: 32, offset: 384)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !2741, file: !2742, line: 26, baseType: !1644, size: 32, offset: 416)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !2741, file: !2742, line: 27, baseType: !1644, size: 32, offset: 448)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !2741, file: !2742, line: 28, baseType: !1644, size: 32, offset: 480)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !2741, file: !2742, line: 29, baseType: !1644, size: 32, offset: 512)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !2741, file: !2742, line: 30, baseType: !1644, size: 32, offset: 544)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !2741, file: !2742, line: 31, baseType: !1644, size: 32, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !2741, file: !2742, line: 32, baseType: !1644, size: 32, offset: 608)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !2741, file: !2742, line: 33, baseType: !1644, size: 32, offset: 640)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !2741, file: !2742, line: 34, baseType: !1644, size: 32, offset: 672)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !2741, file: !2742, line: 35, baseType: !1644, size: 32, offset: 704)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !2741, file: !2742, line: 36, baseType: !1644, size: 32, offset: 736)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !2741, file: !2742, line: 45, baseType: !1644, size: 32, offset: 768)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !2741, file: !2742, line: 46, baseType: !1644, size: 32, offset: 800)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !2741, file: !2742, line: 47, baseType: !1644, size: 32, offset: 832)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !2741, file: !2742, line: 55, baseType: !1644, size: 32, offset: 864)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !2741, file: !2742, line: 56, baseType: !1644, size: 32, offset: 896)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !2741, file: !2742, line: 57, baseType: !1644, size: 32, offset: 928)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !2741, file: !2742, line: 58, baseType: !1644, size: 32, offset: 960)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !2741, file: !2742, line: 59, baseType: !1644, size: 32, offset: 992)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !2741, file: !2742, line: 60, baseType: !1644, size: 32, offset: 1024)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !2741, file: !2742, line: 61, baseType: !1644, size: 32, offset: 1056)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !2741, file: !2742, line: 62, baseType: !1644, size: 32, offset: 1088)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !2741, file: !2742, line: 66, baseType: !2780, size: 160, offset: 1120)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !2742, line: 63, size: 160, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2780, file: !2742, line: 64, baseType: !696, size: 8)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !2780, file: !2742, line: 65, baseType: !2376, size: 128, offset: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !2741, file: !2742, line: 67, baseType: !1644, size: 32, offset: 1280)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !2741, file: !2742, line: 68, baseType: !1644, size: 32, offset: 1312)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !2741, file: !2742, line: 69, baseType: !1644, size: 32, offset: 1344)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !2741, file: !2742, line: 73, baseType: !624, size: 32, offset: 1376)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !2741, file: !2742, line: 74, baseType: !624, size: 32, offset: 1408)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !2741, file: !2742, line: 75, baseType: !1644, size: 32, offset: 1440)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !2741, file: !2742, line: 76, baseType: !1644, size: 32, offset: 1472)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !2741, file: !2742, line: 77, baseType: !1644, size: 32, offset: 1504)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !2741, file: !2742, line: 79, baseType: !2034, size: 64, offset: 1536)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2696, file: !2697, line: 59, baseType: !2740, size: 64, offset: 1664)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2696, file: !2697, line: 60, baseType: !2320, size: 64, offset: 1728)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2696, file: !2697, line: 61, baseType: !2334, size: 64, offset: 1792)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2696, file: !2697, line: 71, baseType: !2797, size: 64, offset: 1856)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2799, line: 163, size: 1280, elements: !2800)
!2799 = !DIFile(filename: "./include/net/ip6_fib.h", directory: "/home/lizy2001/genbc/linux")
!2800 = !{!2801, !2824, !2825, !2826, !2831, !2832, !2833, !2834, !2844, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !3423}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_table", scope: !2798, file: !2799, line: 164, baseType: !2802, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2799, line: 390, size: 896, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2821, !2822, !2823}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_hlist", scope: !2803, file: !2799, line: 391, baseType: !437, size: 128)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_id", scope: !2803, file: !2799, line: 392, baseType: !862, size: 32, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_lock", scope: !2803, file: !2799, line: 393, baseType: !884, offset: 160)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_root", scope: !2803, file: !2799, line: 394, baseType: !2809, size: 512, offset: 192)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_node", file: !2799, line: 72, size: 512, elements: !2810)
!2810 = !{!2811, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2809, file: !2799, line: 73, baseType: !2812, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2809, file: !2799, line: 74, baseType: !2812, size: 64, offset: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2809, file: !2799, line: 75, baseType: !2812, size: 64, offset: 128)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !2809, file: !2799, line: 79, baseType: !2797, size: 64, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "fn_bit", scope: !2809, file: !2799, line: 81, baseType: !632, size: 16, offset: 256)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "fn_flags", scope: !2809, file: !2799, line: 82, baseType: !632, size: 16, offset: 272)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "fn_sernum", scope: !2809, file: !2799, line: 83, baseType: !7, size: 32, offset: 288)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "rr_ptr", scope: !2809, file: !2799, line: 84, baseType: !2797, size: 64, offset: 320)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2809, file: !2799, line: 85, baseType: !460, size: 128, align: 64, offset: 384)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_peers", scope: !2803, file: !2799, line: 395, baseType: !2321, size: 128, offset: 704)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2803, file: !2799, line: 396, baseType: !14, size: 32, offset: 832)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2803, file: !2799, line: 397, baseType: !14, size: 32, offset: 864)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_next", scope: !2798, file: !2799, line: 165, baseType: !2797, size: 64, offset: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_node", scope: !2798, file: !2799, line: 166, baseType: !2812, size: 64, offset: 128)
!2826 = !DIDerivedType(tag: DW_TAG_member, scope: !2798, file: !2799, line: 173, baseType: !2827, size: 128, offset: 192)
!2827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2798, file: !2799, line: 173, size: 128, elements: !2828)
!2828 = !{!2829, !2830}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_siblings", scope: !2827, file: !2799, line: 174, baseType: !445, size: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !2827, file: !2799, line: 175, baseType: !445, size: 128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nsiblings", scope: !2798, file: !2799, line: 177, baseType: !14, size: 32, offset: 320)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_ref", scope: !2798, file: !2799, line: 179, baseType: !1425, size: 32, offset: 352)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2798, file: !2799, line: 180, baseType: !473, size: 64, offset: 384)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metrics", scope: !2798, file: !2799, line: 181, baseType: !2835, size: 64, offset: 448)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_metrics", file: !2837, line: 81, size: 576, align: 32, elements: !2838)
!2837 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2838 = !{!2839, !2843}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !2836, file: !2837, line: 82, baseType: !2840, size: 544)
!2840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 544, elements: !2841)
!2841 = !{!2842}
!2842 = !DISubrange(count: 17)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2836, file: !2837, line: 83, baseType: !1425, size: 32, offset: 544)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_dst", scope: !2798, file: !2799, line: 184, baseType: !2845, size: 160, offset: 512)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6key", file: !2799, line: 129, size: 160, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2845, file: !2799, line: 130, baseType: !2376, size: 128)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "plen", scope: !2845, file: !2799, line: 131, baseType: !7, size: 32, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_flags", scope: !2798, file: !2799, line: 185, baseType: !862, size: 32, offset: 672)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_src", scope: !2798, file: !2799, line: 186, baseType: !2845, size: 160, offset: 704)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_prefsrc", scope: !2798, file: !2799, line: 187, baseType: !2845, size: 160, offset: 864)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metric", scope: !2798, file: !2799, line: 189, baseType: !862, size: 32, offset: 1024)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_protocol", scope: !2798, file: !2799, line: 190, baseType: !1551, size: 8, offset: 1056)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_type", scope: !2798, file: !2799, line: 191, baseType: !1551, size: 8, offset: 1064)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "should_flush", scope: !2798, file: !2799, line: 192, baseType: !1551, size: 1, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nocount", scope: !2798, file: !2799, line: 193, baseType: !1551, size: 1, offset: 1073, flags: DIFlagBitField, extraData: i64 1072)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nopolicy", scope: !2798, file: !2799, line: 194, baseType: !1551, size: 1, offset: 1074, flags: DIFlagBitField, extraData: i64 1072)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_destroying", scope: !2798, file: !2799, line: 195, baseType: !1551, size: 1, offset: 1075, flags: DIFlagBitField, extraData: i64 1072)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !2798, file: !2799, line: 196, baseType: !1551, size: 1, offset: 1076, flags: DIFlagBitField, extraData: i64 1072)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "trap", scope: !2798, file: !2799, line: 197, baseType: !1551, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2798, file: !2799, line: 198, baseType: !1551, size: 2, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2798, file: !2799, line: 200, baseType: !460, size: 128, align: 64, offset: 1088)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !2798, file: !2799, line: 201, baseType: !2864, size: 64, offset: 1216)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nexthop", file: !2866, line: 84, size: 1088, elements: !2867)
!2866 = !DIFile(filename: "./include/net/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2867 = !{!2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2865, file: !2866, line: 85, baseType: !594, size: 192, align: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "fi_list", scope: !2865, file: !2866, line: 86, baseType: !445, size: 128, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "f6i_list", scope: !2865, file: !2866, line: 87, baseType: !445, size: 128, offset: 320)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_list", scope: !2865, file: !2866, line: 88, baseType: !445, size: 128, offset: 448)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "grp_list", scope: !2865, file: !2866, line: 89, baseType: !445, size: 128, offset: 576)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2865, file: !2866, line: 90, baseType: !2115, size: 64, offset: 704)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2865, file: !2866, line: 92, baseType: !862, size: 32, offset: 768)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2865, file: !2866, line: 94, baseType: !1551, size: 8, offset: 800)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "nh_flags", scope: !2865, file: !2866, line: 95, baseType: !1551, size: 8, offset: 808)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "is_group", scope: !2865, file: !2866, line: 96, baseType: !696, size: 8, offset: 816)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2865, file: !2866, line: 98, baseType: !1425, size: 32, offset: 832)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2865, file: !2866, line: 99, baseType: !460, size: 128, align: 64, offset: 896)
!2880 = !DIDerivedType(tag: DW_TAG_member, scope: !2865, file: !2866, line: 101, baseType: !2881, size: 64, offset: 1024)
!2881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2865, file: !2866, line: 101, size: 64, elements: !2882)
!2882 = !{!2883, !3405}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "nh_info", scope: !2881, file: !2866, line: 102, baseType: !2884, size: 64)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_info", file: !2866, line: 51, size: 1088, elements: !2886)
!2886 = !{!2887, !2888, !2889, !2890, !2891, !2892}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "dev_hash", scope: !2885, file: !2866, line: 52, baseType: !437, size: 128)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !2885, file: !2866, line: 53, baseType: !2864, size: 64, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2885, file: !2866, line: 55, baseType: !1551, size: 8, offset: 192)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "reject_nh", scope: !2885, file: !2866, line: 56, baseType: !696, size: 8, offset: 200)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !2885, file: !2866, line: 57, baseType: !696, size: 8, offset: 208)
!2892 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2866, line: 59, baseType: !2893, size: 832, offset: 256)
!2893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2866, line: 59, size: 832, elements: !2894)
!2894 = !{!2895, !3255, !3288}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhc", scope: !2893, file: !2866, line: 60, baseType: !2896, size: 576)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_common", file: !2897, line: 80, size: 576, elements: !2898)
!2897 = !DIFile(filename: "./include/net/ip_fib.h", directory: "/home/lizy2001/genbc/linux")
!2898 = !{!2899, !2900, !2901, !2902, !2903, !2904, !2905, !2925, !2930, !2931, !2932, !3235, !3236}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_dev", scope: !2896, file: !2897, line: 81, baseType: !451, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_oif", scope: !2896, file: !2897, line: 82, baseType: !7, size: 32, offset: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_scope", scope: !2896, file: !2897, line: 83, baseType: !650, size: 8, offset: 96)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_family", scope: !2896, file: !2897, line: 84, baseType: !1551, size: 8, offset: 104)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw_family", scope: !2896, file: !2897, line: 85, baseType: !1551, size: 8, offset: 112)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_flags", scope: !2896, file: !2897, line: 86, baseType: !650, size: 8, offset: 120)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_lwtstate", scope: !2896, file: !2897, line: 87, baseType: !2906, size: 64, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2908, line: 25, size: 384, elements: !2909)
!2908 = !DIFile(filename: "./include/net/lwtunnel.h", directory: "/home/lizy2001/genbc/linux")
!2909 = !{!2910, !2911, !2912, !2913, !2914, !2918, !2922, !2923}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2907, file: !2908, line: 26, baseType: !632, size: 16)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2907, file: !2908, line: 27, baseType: !632, size: 16, offset: 16)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !2907, file: !2908, line: 28, baseType: !632, size: 16, offset: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2907, file: !2908, line: 29, baseType: !544, size: 32, offset: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "orig_output", scope: !2907, file: !2908, line: 30, baseType: !2915, size: 64, offset: 128)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{!7, !2115, !606, !576}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "orig_input", scope: !2907, file: !2908, line: 31, baseType: !2919, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!7, !576}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2907, file: !2908, line: 32, baseType: !460, size: 128, align: 64, offset: 256)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2907, file: !2908, line: 33, baseType: !2924, offset: 384)
!2924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, elements: !470)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw", scope: !2896, file: !2897, line: 92, baseType: !2926, size: 128, offset: 192)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2896, file: !2897, line: 89, size: 128, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2926, file: !2897, line: 90, baseType: !622, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2926, file: !2897, line: 91, baseType: !2376, size: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_weight", scope: !2896, file: !2897, line: 94, baseType: !7, size: 32, offset: 320)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_upper_bound", scope: !2896, file: !2897, line: 95, baseType: !544, size: 32, offset: 352)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_pcpu_rth_output", scope: !2896, file: !2897, line: 98, baseType: !2933, size: 64, offset: 384)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtable", file: !2936, line: 49, size: 1408, elements: !2937)
!2936 = !DIFile(filename: "./include/net/route.h", directory: "/home/lizy2001/genbc/linux")
!2937 = !{!2938, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3229, !3230, !3231, !3232}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2935, file: !2936, line: 50, baseType: !2939, size: 896)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2837, line: 24, size: 896, elements: !2940)
!2940 = !{!2941, !2942, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2939, file: !2837, line: 25, baseType: !451, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2939, file: !2837, line: 26, baseType: !2943, size: 64, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2945, line: 15, size: 1088, elements: !2946)
!2945 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2946 = !{!2947, !2948, !2949, !2953, !2958, !2964, !2965, !2969, !2973, !2977, !2981, !2985, !2989, !2993, !2994, !3190, !3194, !3195}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2944, file: !2945, line: 16, baseType: !633, size: 16)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2944, file: !2945, line: 17, baseType: !14, size: 32, offset: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2944, file: !2945, line: 19, baseType: !2950, size: 64, offset: 64)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!7, !2943}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2944, file: !2945, line: 20, baseType: !2954, size: 64, offset: 128)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!2957, !2957, !624}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2944, file: !2945, line: 21, baseType: !2959, size: 64, offset: 192)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!14, !2962}
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2939)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2944, file: !2945, line: 22, baseType: !2959, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2944, file: !2945, line: 23, baseType: !2966, size: 64, offset: 320)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!1614, !2957, !473}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2944, file: !2945, line: 24, baseType: !2970, size: 64, offset: 384)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{null, !2957}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2944, file: !2945, line: 25, baseType: !2974, size: 64, offset: 448)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{null, !2957, !451, !7}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2944, file: !2945, line: 27, baseType: !2978, size: 64, offset: 512)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!2957, !2957}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2944, file: !2945, line: 28, baseType: !2982, size: 64, offset: 576)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{null, !576}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2944, file: !2945, line: 29, baseType: !2986, size: 64, offset: 640)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{null, !2957, !606, !576, !862, !696}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2944, file: !2945, line: 32, baseType: !2990, size: 64, offset: 704)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{null, !2957, !606, !576}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2944, file: !2945, line: 34, baseType: !2915, size: 64, offset: 768)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2944, file: !2945, line: 35, baseType: !2995, size: 64, offset: 832)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!2998, !2962, !576, !2416}
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !3000, line: 134, size: 2624, elements: !3001)
!3000 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!3001 = !{!3002, !3003, !3141, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3168, !3172, !3185, !3186, !3187, !3188}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2999, file: !3000, line: 135, baseType: !2998, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2999, file: !3000, line: 136, baseType: !3004, size: 64, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !3000, line: 194, size: 3840, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3018, !3024, !3028, !3046, !3050, !3051, !3055, !3059, !3060, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3093, !3094, !3101, !3102, !3103, !3104, !3112, !3113, !3129, !3139}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3005, file: !3000, line: 195, baseType: !7, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !3005, file: !3000, line: 196, baseType: !14, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3005, file: !3000, line: 197, baseType: !14, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3005, file: !3000, line: 198, baseType: !645, size: 16, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3005, file: !3000, line: 199, baseType: !3012, size: 64, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!624, !2416, !3015, !3017}
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !425)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !3005, file: !3000, line: 202, baseType: !3019, size: 64, offset: 192)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!696, !3022, !2416}
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2999)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3005, file: !3000, line: 203, baseType: !3025, size: 64, offset: 256)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!7, !2998}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !3005, file: !3000, line: 204, baseType: !3029, size: 64, offset: 320)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!7, !3032}
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !3000, line: 171, size: 256, elements: !3034)
!3034 = !{!3035, !3036, !3041, !3042, !3043, !3044}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3033, file: !3000, line: 172, baseType: !3032, size: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3033, file: !3000, line: 173, baseType: !3037, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2117, line: 318, baseType: !3038)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2117, line: 314, size: 64, elements: !3039)
!3039 = !{!3040}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3038, file: !2117, line: 316, baseType: !2115, size: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3033, file: !3000, line: 174, baseType: !451, size: 64, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3033, file: !3000, line: 175, baseType: !1551, size: 8, offset: 192)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3033, file: !3000, line: 176, baseType: !1551, size: 8, offset: 200)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3033, file: !3000, line: 177, baseType: !3045, offset: 208)
!3045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, elements: !470)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !3005, file: !3000, line: 205, baseType: !3047, size: 64, offset: 384)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{null, !3032}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !3005, file: !3000, line: 206, baseType: !2982, size: 64, offset: 448)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !3005, file: !3000, line: 207, baseType: !3052, size: 64, offset: 512)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{!7, !2416}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !3005, file: !3000, line: 208, baseType: !3056, size: 64, offset: 576)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!696, !3015, !2625}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3005, file: !3000, line: 210, baseType: !733, size: 64, offset: 640)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !3005, file: !3000, line: 211, baseType: !3061, size: 1152, offset: 704)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !3000, line: 70, size: 1152, elements: !3062)
!3062 = !{!3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3077}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3061, file: !3000, line: 71, baseType: !3037, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3061, file: !3000, line: 72, baseType: !451, size: 64, offset: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3061, file: !3000, line: 73, baseType: !445, size: 128, offset: 128)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !3061, file: !3000, line: 74, baseType: !3025, size: 64, offset: 256)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3061, file: !3000, line: 75, baseType: !3004, size: 64, offset: 320)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !3061, file: !3000, line: 77, baseType: !726, size: 64, offset: 384)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3061, file: !3000, line: 79, baseType: !7, size: 32, offset: 448)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3061, file: !3000, line: 80, baseType: !1425, size: 32, offset: 480)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3061, file: !3000, line: 81, baseType: !460, size: 128, align: 64, offset: 512)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !3061, file: !3000, line: 83, baseType: !7, size: 32, offset: 640)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3061, file: !3000, line: 84, baseType: !3074, size: 416, offset: 672)
!3074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 416, elements: !3075)
!3075 = !{!3076}
!3076 = !DISubrange(count: 13)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !3061, file: !3000, line: 85, baseType: !1569, size: 64, offset: 1088)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !3005, file: !3000, line: 212, baseType: !445, size: 128, offset: 1856)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !3005, file: !3000, line: 213, baseType: !7, size: 32, offset: 1984)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !3005, file: !3000, line: 214, baseType: !7, size: 32, offset: 2016)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !3005, file: !3000, line: 215, baseType: !7, size: 32, offset: 2048)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !3005, file: !3000, line: 216, baseType: !7, size: 32, offset: 2080)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !3005, file: !3000, line: 217, baseType: !473, size: 64, offset: 2112)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !3005, file: !3000, line: 218, baseType: !3085, size: 704, offset: 2176)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1961, line: 115, size: 704, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3092}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3085, file: !1961, line: 116, baseType: !1960, size: 256)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3085, file: !1961, line: 117, baseType: !2393, size: 320, offset: 256)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3085, file: !1961, line: 120, baseType: !3090, size: 64, offset: 576)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1961, line: 18, flags: DIFlagFwdDecl)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3085, file: !1961, line: 121, baseType: !7, size: 32, offset: 640)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !3005, file: !3000, line: 219, baseType: !2393, size: 320, offset: 2880)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !3005, file: !3000, line: 220, baseType: !3095, size: 192, offset: 3200)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !578, line: 291, size: 192, elements: !3096)
!3096 = !{!3097, !3098, !3099, !3100}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3095, file: !578, line: 293, baseType: !576, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3095, file: !578, line: 294, baseType: !576, size: 64, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3095, file: !578, line: 296, baseType: !624, size: 32, offset: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3095, file: !578, line: 297, baseType: !884, offset: 160)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !3005, file: !3000, line: 221, baseType: !544, size: 32, offset: 3392)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !3005, file: !3000, line: 222, baseType: !544, size: 32, offset: 3424)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !3005, file: !3000, line: 223, baseType: !445, size: 128, offset: 3456)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3005, file: !3000, line: 224, baseType: !3105, offset: 3584)
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3106, line: 20, baseType: !3107)
!3106 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3106, line: 11, elements: !3108)
!3108 = !{!3109}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3107, file: !3106, line: 12, baseType: !3110)
!3110 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !896, line: 33, baseType: !3111)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !896, line: 31, elements: !898)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !3005, file: !3000, line: 225, baseType: !473, size: 64, offset: 3584)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3005, file: !3000, line: 226, baseType: !3114, size: 64, offset: 3648)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !3000, line: 112, size: 768, elements: !3116)
!3116 = !{!3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !3115, file: !3000, line: 113, baseType: !473, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !3115, file: !3000, line: 114, baseType: !473, size: 64, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !3115, file: !3000, line: 115, baseType: !473, size: 64, offset: 128)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !3115, file: !3000, line: 117, baseType: !473, size: 64, offset: 192)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !3115, file: !3000, line: 119, baseType: !473, size: 64, offset: 256)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !3115, file: !3000, line: 120, baseType: !473, size: 64, offset: 320)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !3115, file: !3000, line: 122, baseType: !473, size: 64, offset: 384)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !3115, file: !3000, line: 123, baseType: !473, size: 64, offset: 448)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !3115, file: !3000, line: 125, baseType: !473, size: 64, offset: 512)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !3115, file: !3000, line: 126, baseType: !473, size: 64, offset: 576)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !3115, file: !3000, line: 128, baseType: !473, size: 64, offset: 640)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !3115, file: !3000, line: 129, baseType: !473, size: 64, offset: 704)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !3005, file: !3000, line: 227, baseType: !3130, size: 64, offset: 3712)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !3000, line: 186, size: 384, elements: !3132)
!3132 = !{!3133, !3135, !3136, !3138}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !3131, file: !3000, line: 187, baseType: !3134, size: 64)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !3131, file: !3000, line: 188, baseType: !14, size: 32, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !3131, file: !3000, line: 189, baseType: !3137, size: 128, offset: 96)
!3137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 128, elements: !1356)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3131, file: !3000, line: 190, baseType: !460, size: 128, align: 64, offset: 256)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !3005, file: !3000, line: 228, baseType: !3140, size: 64, offset: 3776)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2999, file: !3000, line: 137, baseType: !3142, size: 64, offset: 128)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2999, file: !3000, line: 138, baseType: !473, size: 64, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2999, file: !3000, line: 139, baseType: !473, size: 64, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2999, file: !3000, line: 140, baseType: !3105, offset: 320)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2999, file: !3000, line: 141, baseType: !1425, size: 32, offset: 320)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2999, file: !3000, line: 142, baseType: !14, size: 32, offset: 352)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2999, file: !3000, line: 143, baseType: !3095, size: 192, offset: 384)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2999, file: !3000, line: 144, baseType: !2393, size: 320, offset: 576)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2999, file: !3000, line: 145, baseType: !473, size: 64, offset: 896)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2999, file: !3000, line: 146, baseType: !544, size: 32, offset: 960)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2999, file: !3000, line: 147, baseType: !1552, size: 8, offset: 992)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2999, file: !3000, line: 148, baseType: !1552, size: 8, offset: 1000)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2999, file: !3000, line: 149, baseType: !1552, size: 8, offset: 1008)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2999, file: !3000, line: 150, baseType: !1552, size: 8, offset: 1016)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2999, file: !3000, line: 151, baseType: !1551, size: 8, offset: 1024)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2999, file: !3000, line: 152, baseType: !2326, size: 32, offset: 1056)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2999, file: !3000, line: 153, baseType: !870, size: 256, align: 64, offset: 1088)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2999, file: !3000, line: 154, baseType: !3160, size: 832, offset: 1344)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !6, line: 244, size: 832, elements: !3161)
!3161 = !{!3162, !3163, !3164}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !3160, file: !6, line: 245, baseType: !14, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !3160, file: !6, line: 246, baseType: !2326, size: 32, offset: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !3160, file: !6, line: 254, baseType: !3165, size: 768, offset: 64)
!3165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 768, elements: !3166)
!3166 = !{!3167}
!3167 = !DISubrange(count: 12)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2999, file: !3000, line: 155, baseType: !3169, size: 64, offset: 2176)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!7, !2998, !576}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2999, file: !3000, line: 156, baseType: !3173, size: 64, offset: 2240)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3175)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !3000, line: 163, size: 320, elements: !3176)
!3176 = !{!3177, !3178, !3182, !3183, !3184}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3175, file: !3000, line: 164, baseType: !7, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !3175, file: !3000, line: 165, baseType: !3179, size: 64, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{null, !2998, !576}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !3175, file: !3000, line: 166, baseType: !3179, size: 64, offset: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3175, file: !3000, line: 167, baseType: !3169, size: 64, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !3175, file: !3000, line: 168, baseType: !3169, size: 64, offset: 256)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2999, file: !3000, line: 157, baseType: !445, size: 128, offset: 2304)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2999, file: !3000, line: 158, baseType: !460, size: 128, align: 64, offset: 2432)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2999, file: !3000, line: 159, baseType: !451, size: 64, offset: 2560)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2999, file: !3000, line: 160, baseType: !3189, offset: 2624)
!3189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, elements: !2075)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2944, file: !2945, line: 38, baseType: !3191, size: 64, offset: 896)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = !DISubroutineType(types: !3193)
!3193 = !{null, !2962, !2416}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2944, file: !2945, line: 41, baseType: !2424, size: 64, offset: 960)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2944, file: !2945, line: 43, baseType: !3196, size: 64, offset: 1024)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3197, line: 97, size: 64, elements: !3198)
!3197 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3198 = !{!3199}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3196, file: !3197, line: 98, baseType: !538, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2939, file: !2837, line: 27, baseType: !473, size: 64, offset: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2939, file: !2837, line: 28, baseType: !473, size: 64, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2939, file: !2837, line: 32, baseType: !726, size: 64, offset: 256)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2939, file: !2837, line: 34, baseType: !2919, size: 64, offset: 320)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2939, file: !2837, line: 35, baseType: !2915, size: 64, offset: 384)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2939, file: !2837, line: 37, baseType: !633, size: 16, offset: 448)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2939, file: !2837, line: 54, baseType: !1400, size: 16, offset: 464)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2939, file: !2837, line: 59, baseType: !633, size: 16, offset: 480)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2939, file: !2837, line: 60, baseType: !633, size: 16, offset: 496)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2939, file: !2837, line: 67, baseType: !544, size: 32, offset: 512)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2939, file: !2837, line: 69, baseType: !7, size: 32, offset: 544)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2939, file: !2837, line: 70, baseType: !473, size: 64, offset: 576)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2939, file: !2837, line: 71, baseType: !2906, size: 64, offset: 640)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2939, file: !2837, line: 72, baseType: !460, size: 128, align: 64, offset: 704)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2939, file: !2837, line: 73, baseType: !1400, size: 16, offset: 832)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2939, file: !2837, line: 74, baseType: !1400, size: 16, offset: 848)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2939, file: !2837, line: 75, baseType: !624, size: 32, offset: 864)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2935, file: !2936, line: 52, baseType: !7, size: 32, offset: 896)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "rt_flags", scope: !2935, file: !2936, line: 53, baseType: !14, size: 32, offset: 928)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !2935, file: !2936, line: 54, baseType: !632, size: 16, offset: 960)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "rt_is_input", scope: !2935, file: !2936, line: 55, baseType: !1552, size: 8, offset: 976)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uses_gateway", scope: !2935, file: !2936, line: 56, baseType: !1552, size: 8, offset: 984)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "rt_iif", scope: !2935, file: !2936, line: 58, baseType: !7, size: 32, offset: 992)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw_family", scope: !2935, file: !2936, line: 60, baseType: !1551, size: 8, offset: 1024)
!3224 = !DIDerivedType(tag: DW_TAG_member, scope: !2935, file: !2936, line: 62, baseType: !3225, size: 128, offset: 1056)
!3225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2935, file: !2936, line: 62, size: 128, elements: !3226)
!3226 = !{!3227, !3228}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw4", scope: !3225, file: !2936, line: 63, baseType: !622, size: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw6", scope: !3225, file: !2936, line: 64, baseType: !2376, size: 128)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mtu_locked", scope: !2935, file: !2936, line: 68, baseType: !862, size: 1, offset: 1184, flags: DIFlagBitField, extraData: i64 1184)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "rt_pmtu", scope: !2935, file: !2936, line: 69, baseType: !862, size: 31, offset: 1185, flags: DIFlagBitField, extraData: i64 1184)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached", scope: !2935, file: !2936, line: 71, baseType: !445, size: 128, offset: 1216)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached_list", scope: !2935, file: !2936, line: 72, baseType: !3233, size: 64, offset: 1344)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncached_list", file: !2936, line: 48, flags: DIFlagFwdDecl)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_rth_input", scope: !2896, file: !2897, line: 99, baseType: !2934, size: 64, offset: 448)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_exceptions", scope: !2896, file: !2897, line: 100, baseType: !3237, size: 64, offset: 512)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fnhe_hash_bucket", file: !2897, line: 72, size: 64, elements: !3239)
!3239 = !{!3240}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !3238, file: !2897, line: 73, baseType: !3241, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_exception", file: !2897, line: 58, size: 640, elements: !3243)
!3243 = !{!3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_next", scope: !3242, file: !2897, line: 59, baseType: !3241, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3242, file: !2897, line: 60, baseType: !7, size: 32, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_daddr", scope: !3242, file: !2897, line: 61, baseType: !622, size: 32, offset: 96)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_pmtu", scope: !3242, file: !2897, line: 62, baseType: !862, size: 32, offset: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_mtu_locked", scope: !3242, file: !2897, line: 63, baseType: !696, size: 8, offset: 160)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_gw", scope: !3242, file: !2897, line: 64, baseType: !622, size: 32, offset: 192)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_expires", scope: !3242, file: !2897, line: 65, baseType: !473, size: 64, offset: 256)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_input", scope: !3242, file: !2897, line: 66, baseType: !2934, size: 64, offset: 320)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_output", scope: !3242, file: !2897, line: 67, baseType: !2934, size: 64, offset: 384)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_stamp", scope: !3242, file: !2897, line: 68, baseType: !473, size: 64, offset: 448)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3242, file: !2897, line: 69, baseType: !460, size: 128, align: 64, offset: 512)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !2893, file: !2866, line: 61, baseType: !3256, size: 832)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh", file: !2897, line: 103, size: 832, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3286, !3287}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !3256, file: !2897, line: 104, baseType: !2896, size: 576)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "nh_hash", scope: !3256, file: !2897, line: 105, baseType: !437, size: 128, offset: 576)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !3256, file: !2897, line: 106, baseType: !3261, size: 64, offset: 704)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_info", file: !2897, line: 131, size: 1024, elements: !3263)
!3263 = !{!3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "fib_hash", scope: !3262, file: !2897, line: 132, baseType: !437, size: 128)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "fib_lhash", scope: !3262, file: !2897, line: 133, baseType: !437, size: 128, offset: 128)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !3262, file: !2897, line: 134, baseType: !445, size: 128, offset: 256)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "fib_net", scope: !3262, file: !2897, line: 135, baseType: !2115, size: 64, offset: 384)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "fib_treeref", scope: !3262, file: !2897, line: 136, baseType: !7, size: 32, offset: 448)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "fib_clntref", scope: !3262, file: !2897, line: 137, baseType: !1425, size: 32, offset: 480)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "fib_flags", scope: !3262, file: !2897, line: 138, baseType: !14, size: 32, offset: 512)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dead", scope: !3262, file: !2897, line: 139, baseType: !650, size: 8, offset: 544)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "fib_protocol", scope: !3262, file: !2897, line: 140, baseType: !650, size: 8, offset: 552)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "fib_scope", scope: !3262, file: !2897, line: 141, baseType: !650, size: 8, offset: 560)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "fib_type", scope: !3262, file: !2897, line: 142, baseType: !650, size: 8, offset: 568)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "fib_prefsrc", scope: !3262, file: !2897, line: 143, baseType: !622, size: 32, offset: 576)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "fib_tb_id", scope: !3262, file: !2897, line: 144, baseType: !862, size: 32, offset: 608)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "fib_priority", scope: !3262, file: !2897, line: 145, baseType: !862, size: 32, offset: 640)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "fib_metrics", scope: !3262, file: !2897, line: 146, baseType: !2835, size: 64, offset: 704)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhs", scope: !3262, file: !2897, line: 151, baseType: !7, size: 32, offset: 768)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh_is_v6", scope: !3262, file: !2897, line: 152, baseType: !696, size: 8, offset: 800)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "nh_updated", scope: !3262, file: !2897, line: 153, baseType: !696, size: 8, offset: 808)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !3262, file: !2897, line: 154, baseType: !2864, size: 64, offset: 832)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3262, file: !2897, line: 155, baseType: !460, size: 128, align: 64, offset: 896)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !3262, file: !2897, line: 156, baseType: !3285, offset: 1024)
!3285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3256, elements: !470)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr", scope: !3256, file: !2897, line: 110, baseType: !622, size: 32, offset: 768)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr_genid", scope: !3256, file: !2897, line: 111, baseType: !7, size: 32, offset: 800)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !2893, file: !2866, line: 62, baseType: !3289, size: 704)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_nh", file: !2799, line: 152, size: 704, elements: !3290)
!3290 = !{!3291, !3292, !3399}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !3289, file: !2799, line: 153, baseType: !2896, size: 576)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_pcpu", scope: !3289, file: !2799, line: 159, baseType: !3293, size: 64, offset: 576)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2799, line: 205, size: 1856, elements: !3296)
!3296 = !{!3297, !3298, !3299, !3300, !3301, !3302, !3303, !3395, !3396, !3397, !3398}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3295, file: !2799, line: 206, baseType: !2939, size: 896)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3295, file: !2799, line: 207, baseType: !2797, size: 64, offset: 896)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "sernum", scope: !3295, file: !2799, line: 208, baseType: !7, size: 32, offset: 960)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_dst", scope: !3295, file: !2799, line: 210, baseType: !2845, size: 160, offset: 992)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_src", scope: !3295, file: !2799, line: 211, baseType: !2845, size: 160, offset: 1152)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_gateway", scope: !3295, file: !2799, line: 212, baseType: !2376, size: 128, offset: 1312)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_idev", scope: !3295, file: !2799, line: 213, baseType: !3304, size: 64, offset: 1472)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !3306, line: 163, size: 4544, elements: !3307)
!3306 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!3307 = !{!3308, !3309, !3310, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3390, !3391, !3392, !3393, !3394}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3305, file: !3306, line: 164, baseType: !451, size: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !3305, file: !3306, line: 166, baseType: !445, size: 128, offset: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !3305, file: !3306, line: 168, baseType: !3311, size: 64, offset: 192)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !3306, line: 114, size: 1152, elements: !3313)
!3313 = !{!3314, !3315, !3316, !3317, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !3312, file: !3306, line: 115, baseType: !2376, size: 128)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !3312, file: !3306, line: 116, baseType: !3304, size: 64, offset: 128)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3312, file: !3306, line: 117, baseType: !3311, size: 64, offset: 192)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !3312, file: !3306, line: 118, baseType: !3318, size: 64, offset: 256)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !3306, line: 99, size: 384, elements: !3320)
!3320 = !{!3321, !3322, !3323, !3325, !3326, !3327}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !3319, file: !3306, line: 100, baseType: !3318, size: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !3319, file: !3306, line: 101, baseType: !2376, size: 128, offset: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !3319, file: !3306, line: 102, baseType: !3324, size: 128, offset: 192)
!3324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 128, elements: !634)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !3319, file: !3306, line: 103, baseType: !650, size: 8, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !3319, file: !3306, line: 104, baseType: !650, size: 8, offset: 328)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !3319, file: !3306, line: 105, baseType: !650, size: 8, offset: 336)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !3312, file: !3306, line: 119, baseType: !3318, size: 64, offset: 320)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !3312, file: !3306, line: 120, baseType: !14, size: 32, offset: 384)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !3312, file: !3306, line: 121, baseType: !650, size: 8, offset: 416)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !3312, file: !3306, line: 122, baseType: !3324, size: 128, offset: 448)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !3312, file: !3306, line: 123, baseType: !2393, size: 320, offset: 576)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !3312, file: !3306, line: 124, baseType: !14, size: 32, offset: 896)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !3312, file: !3306, line: 125, baseType: !7, size: 32, offset: 928)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !3312, file: !3306, line: 126, baseType: !1425, size: 32, offset: 960)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !3312, file: !3306, line: 127, baseType: !884, offset: 992)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !3312, file: !3306, line: 128, baseType: !473, size: 64, offset: 1024)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !3312, file: !3306, line: 129, baseType: !473, size: 64, offset: 1088)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !3305, file: !3306, line: 169, baseType: !3311, size: 64, offset: 256)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !3305, file: !3306, line: 170, baseType: !884, offset: 320)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !3305, file: !3306, line: 172, baseType: !650, size: 8, offset: 320)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !3305, file: !3306, line: 173, baseType: !650, size: 8, offset: 328)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !3305, file: !3306, line: 174, baseType: !650, size: 8, offset: 336)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !3305, file: !3306, line: 175, baseType: !650, size: 8, offset: 344)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !3305, file: !3306, line: 177, baseType: !473, size: 64, offset: 384)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !3305, file: !3306, line: 178, baseType: !473, size: 64, offset: 448)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !3305, file: !3306, line: 179, baseType: !473, size: 64, offset: 512)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !3305, file: !3306, line: 180, baseType: !473, size: 64, offset: 576)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !3305, file: !3306, line: 182, baseType: !2393, size: 320, offset: 640)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !3305, file: !3306, line: 183, baseType: !2393, size: 320, offset: 960)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !3305, file: !3306, line: 184, baseType: !2393, size: 320, offset: 1280)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !3305, file: !3306, line: 186, baseType: !3353, size: 64, offset: 1600)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !3306, line: 140, size: 704, elements: !3355)
!3355 = !{!3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !3354, file: !3306, line: 141, baseType: !2376, size: 128)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !3354, file: !3306, line: 142, baseType: !2797, size: 64, offset: 128)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !3354, file: !3306, line: 143, baseType: !3353, size: 64, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !3354, file: !3306, line: 144, baseType: !437, size: 128, offset: 256)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !3354, file: !3306, line: 145, baseType: !7, size: 32, offset: 384)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !3354, file: !3306, line: 146, baseType: !1425, size: 32, offset: 416)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !3354, file: !3306, line: 147, baseType: !473, size: 64, offset: 448)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !3354, file: !3306, line: 148, baseType: !473, size: 64, offset: 512)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3354, file: !3306, line: 149, baseType: !460, size: 128, align: 64, offset: 576)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3305, file: !3306, line: 187, baseType: !3105, offset: 1664)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3305, file: !3306, line: 188, baseType: !1425, size: 32, offset: 1664)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !3305, file: !3306, line: 189, baseType: !624, size: 32, offset: 1696)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3305, file: !3306, line: 190, baseType: !7, size: 32, offset: 1728)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !3305, file: !3306, line: 192, baseType: !862, size: 32, offset: 1760)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !3305, file: !3306, line: 193, baseType: !445, size: 128, offset: 1792)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !3305, file: !3306, line: 195, baseType: !2376, size: 128, offset: 1920)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !3305, file: !3306, line: 197, baseType: !3142, size: 64, offset: 2048)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !3305, file: !3306, line: 198, baseType: !2741, size: 1600, offset: 2112)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3305, file: !3306, line: 199, baseType: !3375, size: 256, offset: 3712)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !3306, line: 156, size: 256, elements: !3376)
!3376 = !{!3377, !3378, !3379, !3385}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !3375, file: !3306, line: 157, baseType: !2150, size: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3375, file: !3306, line: 158, baseType: !2202, size: 64, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !3375, file: !3306, line: 159, baseType: !3380, size: 64, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !2197, line: 75, size: 384, elements: !3382)
!3382 = !{!3383}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3381, file: !2197, line: 76, baseType: !3384, size: 384)
!3384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 384, elements: !1824)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !3375, file: !3306, line: 160, baseType: !3386, size: 64, offset: 192)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !2197, line: 85, size: 32768, elements: !3388)
!3388 = !{!3389}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3387, file: !2197, line: 86, baseType: !2242, size: 32768)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !3305, file: !3306, line: 201, baseType: !2393, size: 320, offset: 3968)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !3305, file: !3306, line: 202, baseType: !1644, size: 32, offset: 4288)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !3305, file: !3306, line: 203, baseType: !1552, size: 8, offset: 4320)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !3305, file: !3306, line: 205, baseType: !473, size: 64, offset: 4352)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3305, file: !3306, line: 206, baseType: !460, size: 128, align: 64, offset: 4416)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_flags", scope: !3295, file: !2799, line: 214, baseType: !862, size: 32, offset: 1536)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached", scope: !3295, file: !2799, line: 216, baseType: !445, size: 128, offset: 1600)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached_list", scope: !3295, file: !2799, line: 217, baseType: !3233, size: 64, offset: 1728)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_nfheader_len", scope: !3295, file: !2799, line: 220, baseType: !633, size: 16, offset: 1792)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_exception_bucket", scope: !3289, file: !2799, line: 160, baseType: !3400, size: 64, offset: 640)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_exception_bucket", file: !2799, line: 136, size: 128, elements: !3402)
!3402 = !{!3403, !3404}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !3401, file: !2799, line: 137, baseType: !1011, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3401, file: !2799, line: 138, baseType: !7, size: 32, offset: 64)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "nh_grp", scope: !2881, file: !2866, line: 103, baseType: !3406, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_group", file: !2866, line: 75, size: 128, elements: !3408)
!3408 = !{!3409, !3410, !3411, !3412, !3413, !3414}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !3407, file: !2866, line: 76, baseType: !3406, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "num_nh", scope: !3407, file: !2866, line: 77, baseType: !1192, size: 16, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !3407, file: !2866, line: 78, baseType: !696, size: 8, offset: 80)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !3407, file: !2866, line: 79, baseType: !696, size: 8, offset: 88)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "has_v4", scope: !3407, file: !2866, line: 80, baseType: !696, size: 8, offset: 96)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "nh_entries", scope: !3407, file: !2866, line: 81, baseType: !3415, offset: 128)
!3415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3416, elements: !470)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_grp_entry", file: !2866, line: 66, size: 320, elements: !3417)
!3417 = !{!3418, !3419, !3420, !3421, !3422}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !3416, file: !2866, line: 67, baseType: !2864, size: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3416, file: !2866, line: 68, baseType: !1551, size: 8, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "upper_bound", scope: !3416, file: !2866, line: 69, baseType: !544, size: 32, offset: 96)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !3416, file: !2866, line: 71, baseType: !445, size: 128, offset: 128)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !3416, file: !2866, line: 72, baseType: !2864, size: 64, offset: 256)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !2798, file: !2799, line: 202, baseType: !3424, offset: 1280)
!3424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3289, elements: !470)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2696, file: !2697, line: 72, baseType: !3294, size: 64, offset: 1920)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2696, file: !2697, line: 73, baseType: !3427, size: 64, offset: 1984)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2799, line: 368, size: 224, elements: !3429)
!3429 = !{!3430, !3431, !3432, !3433, !3434, !3435, !3436}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nodes", scope: !3428, file: !2799, line: 369, baseType: !624, size: 32)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "fib_route_nodes", scope: !3428, file: !2799, line: 370, baseType: !624, size: 32, offset: 32)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_entries", scope: !3428, file: !2799, line: 371, baseType: !624, size: 32, offset: 64)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_cache", scope: !3428, file: !2799, line: 372, baseType: !624, size: 32, offset: 96)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "fib_discarded_routes", scope: !3428, file: !2799, line: 373, baseType: !624, size: 32, offset: 128)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_alloc", scope: !3428, file: !2799, line: 376, baseType: !544, size: 32, offset: 160)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_uncache", scope: !3428, file: !2799, line: 377, baseType: !544, size: 32, offset: 192)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2696, file: !2697, line: 74, baseType: !2393, size: 320, offset: 2048)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2696, file: !2697, line: 75, baseType: !2161, size: 64, offset: 2368)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2696, file: !2697, line: 76, baseType: !2802, size: 64, offset: 2432)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2696, file: !2697, line: 77, baseType: !445, size: 128, offset: 2496)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2696, file: !2697, line: 78, baseType: !2944, size: 1088, offset: 2624)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2696, file: !2697, line: 79, baseType: !3105, offset: 3712)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2696, file: !2697, line: 80, baseType: !884, offset: 3712)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2696, file: !2697, line: 81, baseType: !14, size: 32, offset: 3712)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2696, file: !2697, line: 82, baseType: !473, size: 64, offset: 3776)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2696, file: !2697, line: 94, baseType: !2317, size: 64, offset: 3840)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2696, file: !2697, line: 95, baseType: !606, size: 64, offset: 3904)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2696, file: !2697, line: 96, baseType: !606, size: 64, offset: 3968)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2696, file: !2697, line: 97, baseType: !606, size: 64, offset: 4032)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2696, file: !2697, line: 98, baseType: !606, size: 64, offset: 4096)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2696, file: !2697, line: 107, baseType: !544, size: 32, offset: 4160)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2696, file: !2697, line: 108, baseType: !544, size: 32, offset: 4192)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2696, file: !2697, line: 109, baseType: !3454, size: 64, offset: 4224)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2697, line: 109, flags: DIFlagFwdDecl)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2696, file: !2697, line: 110, baseType: !2611, size: 64, offset: 4288)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2696, file: !2697, line: 111, baseType: !2611, size: 64, offset: 4352)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2696, file: !2697, line: 112, baseType: !14, size: 32, offset: 4416)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2696, file: !2697, line: 117, baseType: !3460, size: 128, offset: 4480)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2696, file: !2697, line: 113, size: 128, elements: !3461)
!3461 = !{!3462, !3463, !3464}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3460, file: !2697, line: 114, baseType: !1011, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3460, file: !2697, line: 115, baseType: !884, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3460, file: !2697, line: 116, baseType: !862, size: 32, offset: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2116, file: !2117, line: 162, baseType: !3095, size: 192, offset: 14784)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2116, file: !2117, line: 164, baseType: !3467, size: 64, offset: 14976)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3469, line: 28, size: 192, elements: !3470)
!3469 = !DIFile(filename: "./include/net/netns/generic.h", directory: "/home/lizy2001/genbc/linux")
!3470 = !{!3471}
!3471 = !DIDerivedType(tag: DW_TAG_member, scope: !3468, file: !3469, line: 29, baseType: !3472, size: 192)
!3472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3468, file: !3469, line: 29, size: 192, elements: !3473)
!3473 = !{!3474, !3479}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3472, file: !3469, line: 33, baseType: !3475, size: 192)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3472, file: !3469, line: 30, size: 192, elements: !3476)
!3476 = !{!3477, !3478}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3475, file: !3469, line: 31, baseType: !14, size: 32)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3475, file: !3469, line: 32, baseType: !460, size: 128, align: 64, offset: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3472, file: !3469, line: 35, baseType: !3480)
!3480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, elements: !2075)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2116, file: !2117, line: 167, baseType: !3482, size: 512, offset: 15040)
!3482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3483, line: 14, size: 512, elements: !3484)
!3483 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3484 = !{!3485, !4120, !4122}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3482, file: !3483, line: 16, baseType: !3486, size: 128)
!3486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3487, size: 128, elements: !634)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !105, line: 1037, size: 128, elements: !3489)
!3489 = !{!3490, !3491}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3488, file: !105, line: 1038, baseType: !460, size: 128, align: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3488, file: !105, line: 1039, baseType: !3492, offset: 128)
!3492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3493, elements: !470)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !105, line: 1032, size: 192, elements: !3494)
!3494 = !{!3495, !4116}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3493, file: !105, line: 1033, baseType: !3496, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3498, line: 525, size: 448, elements: !3499)
!3498 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3499 = !{!3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3518, !4092, !4106, !4112, !4114}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3497, file: !3498, line: 526, baseType: !1192, size: 16)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3497, file: !3498, line: 527, baseType: !1192, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3497, file: !3498, line: 528, baseType: !1192, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3497, file: !3498, line: 529, baseType: !1192, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3497, file: !3498, line: 530, baseType: !1192, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3497, file: !3498, line: 531, baseType: !1192, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3497, file: !3498, line: 532, baseType: !1192, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3497, file: !3498, line: 533, baseType: !1192, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3497, file: !3498, line: 534, baseType: !1192, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3497, file: !3498, line: 535, baseType: !1192, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3497, file: !3498, line: 536, baseType: !1192, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3497, file: !3498, line: 537, baseType: !1192, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3497, file: !3498, line: 538, baseType: !29, size: 32, offset: 32)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3497, file: !3498, line: 539, baseType: !63, size: 32, offset: 64)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3497, file: !3498, line: 540, baseType: !862, size: 32, offset: 96)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3497, file: !3498, line: 541, baseType: !862, size: 32, offset: 128)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3497, file: !3498, line: 542, baseType: !3517, size: 64, offset: 160)
!3517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 64, elements: !1525)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3497, file: !3498, line: 543, baseType: !3519, size: 64, offset: 256)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !105, line: 757, size: 4928, elements: !3521)
!3521 = !{!3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3543, !3544, !3545, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3602, !3603, !3605, !3606, !4010, !4011, !4012, !4021, !4023, !4024, !4025, !4026, !4027, !4029, !4030, !4045, !4046, !4052, !4058, !4066, !4068, !4069, !4070, !4071, !4072, !4080, !4087}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3520, file: !105, line: 758, baseType: !534, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3520, file: !105, line: 759, baseType: !862, size: 32, offset: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3520, file: !105, line: 760, baseType: !862, size: 32, offset: 96)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3520, file: !105, line: 761, baseType: !862, size: 32, offset: 128)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3520, file: !105, line: 762, baseType: !862, size: 32, offset: 160)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3520, file: !105, line: 763, baseType: !862, size: 32, offset: 192)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3520, file: !105, line: 764, baseType: !862, size: 32, offset: 224)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3520, file: !105, line: 765, baseType: !862, size: 32, offset: 256)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3520, file: !105, line: 766, baseType: !862, size: 32, offset: 288)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3520, file: !105, line: 767, baseType: !862, size: 32, offset: 320)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3520, file: !105, line: 768, baseType: !862, size: 32, offset: 352)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3520, file: !105, line: 769, baseType: !862, size: 32, offset: 384)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3520, file: !105, line: 770, baseType: !862, size: 32, offset: 416)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3520, file: !105, line: 771, baseType: !3536, size: 64, offset: 448)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3538)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !105, line: 751, size: 96, elements: !3539)
!3539 = !{!3540, !3541, !3542}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3538, file: !105, line: 752, baseType: !862, size: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3538, file: !105, line: 753, baseType: !104, size: 32, offset: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3538, file: !105, line: 754, baseType: !862, size: 32, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3520, file: !105, line: 772, baseType: !1108, size: 192, offset: 512)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3520, file: !105, line: 773, baseType: !3496, size: 64, offset: 704)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3520, file: !105, line: 774, baseType: !3546, size: 64, offset: 768)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !105, line: 586, size: 2944, elements: !3548)
!3548 = !{!3549, !3550, !3551, !3552, !3553, !3565, !3566, !3568, !3569, !3570, !3571}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3547, file: !105, line: 588, baseType: !437, size: 128)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3547, file: !105, line: 590, baseType: !1108, size: 192, offset: 128)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3547, file: !105, line: 591, baseType: !1425, size: 32, offset: 320)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3547, file: !105, line: 592, baseType: !492, size: 64, offset: 384)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3547, file: !105, line: 597, baseType: !3554, size: 256, offset: 448)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3547, file: !105, line: 593, size: 256, elements: !3555)
!3555 = !{!3556, !3563, !3564}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3554, file: !105, line: 594, baseType: !3557, size: 112)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !105, line: 509, size: 112, elements: !3558)
!3558 = !{!3559, !3560, !3561}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3557, file: !105, line: 510, baseType: !1551, size: 8)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3557, file: !105, line: 511, baseType: !1551, size: 8, offset: 8)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3557, file: !105, line: 512, baseType: !3562, size: 96, offset: 16)
!3562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 96, elements: !3166)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3554, file: !105, line: 595, baseType: !726, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3554, file: !105, line: 596, baseType: !696, size: 8, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3547, file: !105, line: 602, baseType: !3496, size: 64, offset: 704)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3547, file: !105, line: 604, baseType: !3567, size: 192, offset: 768)
!3567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 192, elements: !1021)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3547, file: !105, line: 606, baseType: !2567, size: 96, offset: 960)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3547, file: !105, line: 608, baseType: !726, size: 64, offset: 1088)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3547, file: !105, line: 609, baseType: !492, size: 64, offset: 1152)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3547, file: !105, line: 610, baseType: !3572, size: 1728, offset: 1216)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !105, line: 569, size: 1728, elements: !3573)
!3573 = !{!3574, !3575, !3576, !3580, !3581, !3587}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3572, file: !105, line: 570, baseType: !473, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3572, file: !105, line: 571, baseType: !473, size: 64, offset: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3572, file: !105, line: 572, baseType: !3577, size: 1024, offset: 128)
!3577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 1024, elements: !3578)
!3578 = !{!3579}
!3579 = !DISubrange(count: 128)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3572, file: !105, line: 573, baseType: !445, size: 128, offset: 1152)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3572, file: !105, line: 574, baseType: !3582, size: 384, offset: 1280)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3583, line: 40, size: 384, elements: !3584)
!3583 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3584 = !{!3585}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3582, file: !3583, line: 41, baseType: !3586, size: 384)
!3586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !594, size: 384, elements: !634)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3572, file: !105, line: 575, baseType: !696, size: 8, offset: 1664)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3520, file: !105, line: 775, baseType: !29, size: 32, offset: 832)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3520, file: !105, line: 776, baseType: !63, size: 32, offset: 864)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3520, file: !105, line: 777, baseType: !696, size: 8, offset: 896)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3520, file: !105, line: 778, baseType: !696, size: 8, offset: 904)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3520, file: !105, line: 779, baseType: !696, size: 8, offset: 912)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3520, file: !105, line: 780, baseType: !696, size: 8, offset: 920)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3520, file: !105, line: 781, baseType: !696, size: 8, offset: 928)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3520, file: !105, line: 782, baseType: !696, size: 8, offset: 936)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3520, file: !105, line: 783, baseType: !135, size: 32, offset: 960)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3520, file: !105, line: 784, baseType: !437, size: 128, offset: 1024)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3520, file: !105, line: 786, baseType: !3599, size: 64, offset: 1152)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3601)
!3601 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !105, line: 33, flags: DIFlagFwdDecl)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3520, file: !105, line: 788, baseType: !453, size: 64, offset: 1216)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3520, file: !105, line: 789, baseType: !3604, size: 64, offset: 1280)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3520, file: !105, line: 790, baseType: !726, size: 64, offset: 1344)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3520, file: !105, line: 791, baseType: !3607, size: 64, offset: 1408)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !105, line: 734, size: 384, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3613, !4006, !4007, !4008, !4009}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3608, file: !105, line: 735, baseType: !726, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3608, file: !105, line: 736, baseType: !726, size: 64, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3608, file: !105, line: 737, baseType: !726, size: 64, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_member, scope: !3608, file: !105, line: 738, baseType: !3614, size: 128, offset: 192)
!3614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3608, file: !105, line: 738, size: 128, elements: !3615)
!3615 = !{!3616}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3614, file: !105, line: 742, baseType: !3617, size: 128)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3614, file: !105, line: 739, size: 128, elements: !3618)
!3618 = !{!3619, !4005}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3617, file: !105, line: 740, baseType: !3620, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !105, line: 141, size: 2048, elements: !3622)
!3622 = !{!3623, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3991, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3621, file: !105, line: 145, baseType: !3624, size: 64, align: 512)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3626)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !105, line: 54, size: 2368, elements: !3627)
!3627 = !{!3628, !3827, !3831, !3835, !3839, !3843, !3844, !3848, !3854, !3855, !3856, !3857, !3858, !3862, !3866, !3870, !3871, !3872, !3876, !3880, !3892, !3896, !3900, !3909, !3913, !3917, !3921, !3926, !3930, !3934, !3938, !3944, !3948, !3955, !3959, !3961, !3962}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3626, file: !105, line: 56, baseType: !3629, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!7, !3632}
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !30, line: 483, size: 960, align: 64, elements: !3634)
!3634 = !{!3635, !3651, !3662, !3673, !3697, !3703, !3711, !3728, !3741, !3747, !3756, !3761, !3769, !3781, !3801, !3808, !3812, !3816, !3821}
!3635 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !30, line: 484, baseType: !3636, size: 512)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 484, size: 512, elements: !3637)
!3637 = !{!3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3636, file: !30, line: 485, baseType: !624, size: 32)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3636, file: !30, line: 486, baseType: !624, size: 32, offset: 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3636, file: !30, line: 487, baseType: !624, size: 32, offset: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3636, file: !30, line: 488, baseType: !624, size: 32, offset: 96)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3636, file: !30, line: 489, baseType: !624, size: 32, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3636, file: !30, line: 492, baseType: !624, size: 32, offset: 160)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3636, file: !30, line: 493, baseType: !624, size: 32, offset: 192)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3636, file: !30, line: 496, baseType: !428, size: 128, offset: 224)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3636, file: !30, line: 497, baseType: !624, size: 32, offset: 352)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3636, file: !30, line: 498, baseType: !624, size: 32, offset: 384)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3636, file: !30, line: 499, baseType: !624, size: 32, offset: 416)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3636, file: !30, line: 500, baseType: !624, size: 32, offset: 448)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3636, file: !30, line: 501, baseType: !624, size: 32, offset: 480)
!3651 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !30, line: 507, baseType: !3652, size: 256)
!3652 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 507, size: 256, elements: !3653)
!3653 = !{!3654, !3655, !3656, !3661}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3652, file: !30, line: 508, baseType: !624, size: 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3652, file: !30, line: 509, baseType: !494, size: 64, align: 64, offset: 64)
!3656 = !DIDerivedType(tag: DW_TAG_member, scope: !3652, file: !30, line: 510, baseType: !3657, size: 64, offset: 128)
!3657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3652, file: !30, line: 510, size: 64, elements: !3658)
!3658 = !{!3659, !3660}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3657, file: !30, line: 511, baseType: !494, size: 64, align: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3657, file: !30, line: 512, baseType: !494, size: 64, align: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3652, file: !30, line: 514, baseType: !494, size: 64, offset: 192)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3633, file: !30, line: 532, baseType: !3663, size: 448)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 517, size: 448, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3663, file: !30, line: 518, baseType: !494, size: 64, align: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3663, file: !30, line: 521, baseType: !494, size: 64, align: 64, offset: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3663, file: !30, line: 522, baseType: !494, size: 64, align: 64, offset: 128)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3663, file: !30, line: 523, baseType: !494, size: 64, align: 64, offset: 192)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3663, file: !30, line: 524, baseType: !624, size: 32, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3663, file: !30, line: 529, baseType: !624, size: 32, offset: 288)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3663, file: !30, line: 530, baseType: !494, size: 64, offset: 320)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3663, file: !30, line: 531, baseType: !494, size: 64, offset: 384)
!3673 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !30, line: 534, baseType: !3674, size: 960)
!3674 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 534, size: 960, elements: !3675)
!3675 = !{!3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3674, file: !30, line: 535, baseType: !624, size: 32)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3674, file: !30, line: 536, baseType: !624, size: 32, offset: 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3674, file: !30, line: 537, baseType: !494, size: 64, align: 64, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3674, file: !30, line: 538, baseType: !494, size: 64, align: 64, offset: 128)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3674, file: !30, line: 539, baseType: !624, size: 32, offset: 192)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3674, file: !30, line: 540, baseType: !624, size: 32, offset: 224)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3674, file: !30, line: 541, baseType: !494, size: 64, align: 64, offset: 256)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3674, file: !30, line: 542, baseType: !624, size: 32, offset: 320)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3674, file: !30, line: 543, baseType: !624, size: 32, offset: 352)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3674, file: !30, line: 544, baseType: !428, size: 128, offset: 384)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3674, file: !30, line: 545, baseType: !624, size: 32, offset: 512)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3674, file: !30, line: 550, baseType: !624, size: 32, offset: 544)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3674, file: !30, line: 551, baseType: !624, size: 32, offset: 576)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3674, file: !30, line: 552, baseType: !624, size: 32, offset: 608)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3674, file: !30, line: 553, baseType: !494, size: 64, align: 64, offset: 640)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3674, file: !30, line: 554, baseType: !624, size: 32, offset: 704)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3674, file: !30, line: 555, baseType: !624, size: 32, offset: 736)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3674, file: !30, line: 556, baseType: !494, size: 64, align: 64, offset: 768)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3674, file: !30, line: 557, baseType: !624, size: 32, offset: 832)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3674, file: !30, line: 558, baseType: !624, size: 32, offset: 864)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3674, file: !30, line: 559, baseType: !624, size: 32, offset: 896)
!3697 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !30, line: 562, baseType: !3698, size: 128)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 562, size: 128, elements: !3699)
!3699 = !{!3700, !3701, !3702}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3698, file: !30, line: 563, baseType: !494, size: 64, align: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3698, file: !30, line: 564, baseType: !624, size: 32, offset: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3698, file: !30, line: 565, baseType: !624, size: 32, offset: 96)
!3703 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !30, line: 568, baseType: !3704, size: 160)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 568, size: 160, elements: !3705)
!3705 = !{!3706, !3707, !3708, !3709, !3710}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3704, file: !30, line: 569, baseType: !624, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3704, file: !30, line: 570, baseType: !624, size: 32, offset: 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3704, file: !30, line: 571, baseType: !624, size: 32, offset: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3704, file: !30, line: 572, baseType: !624, size: 32, offset: 96)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3704, file: !30, line: 573, baseType: !624, size: 32, offset: 128)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3633, file: !30, line: 600, baseType: !3712, size: 576)
!3712 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 579, size: 576, elements: !3713)
!3713 = !{!3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3712, file: !30, line: 580, baseType: !624, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3712, file: !30, line: 581, baseType: !624, size: 32, offset: 32)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3712, file: !30, line: 582, baseType: !624, size: 32, offset: 64)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3712, file: !30, line: 583, baseType: !624, size: 32, offset: 96)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3712, file: !30, line: 587, baseType: !494, size: 64, align: 64, offset: 128)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3712, file: !30, line: 588, baseType: !494, size: 64, align: 64, offset: 192)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3712, file: !30, line: 589, baseType: !624, size: 32, offset: 256)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3712, file: !30, line: 590, baseType: !624, size: 32, offset: 288)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3712, file: !30, line: 591, baseType: !624, size: 32, offset: 320)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3712, file: !30, line: 592, baseType: !624, size: 32, offset: 352)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3712, file: !30, line: 596, baseType: !494, size: 64, align: 64, offset: 384)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3712, file: !30, line: 597, baseType: !494, size: 64, align: 64, offset: 448)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3712, file: !30, line: 598, baseType: !624, size: 32, offset: 512)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3712, file: !30, line: 599, baseType: !624, size: 32, offset: 544)
!3728 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !30, line: 602, baseType: !3729, size: 96)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 602, size: 96, elements: !3730)
!3730 = !{!3731, !3739, !3740}
!3731 = !DIDerivedType(tag: DW_TAG_member, scope: !3729, file: !30, line: 603, baseType: !3732, size: 32)
!3732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3729, file: !30, line: 603, size: 32, elements: !3733)
!3733 = !{!3734, !3735, !3736, !3737, !3738}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3732, file: !30, line: 604, baseType: !624, size: 32)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3732, file: !30, line: 605, baseType: !624, size: 32)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3732, file: !30, line: 606, baseType: !624, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3732, file: !30, line: 607, baseType: !624, size: 32)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3732, file: !30, line: 608, baseType: !624, size: 32)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3729, file: !30, line: 610, baseType: !624, size: 32, offset: 32)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3729, file: !30, line: 611, baseType: !624, size: 32, offset: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3633, file: !30, line: 618, baseType: !3742, size: 128)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 614, size: 128, elements: !3743)
!3743 = !{!3744, !3745, !3746}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3742, file: !30, line: 615, baseType: !624, size: 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3742, file: !30, line: 616, baseType: !624, size: 32, offset: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3742, file: !30, line: 617, baseType: !494, size: 64, align: 64, offset: 64)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3633, file: !30, line: 627, baseType: !3748, size: 256)
!3748 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 620, size: 256, elements: !3749)
!3749 = !{!3750, !3751, !3752, !3753, !3754, !3755}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3748, file: !30, line: 621, baseType: !624, size: 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3748, file: !30, line: 622, baseType: !624, size: 32, offset: 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3748, file: !30, line: 623, baseType: !624, size: 32, offset: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3748, file: !30, line: 624, baseType: !624, size: 32, offset: 96)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3748, file: !30, line: 625, baseType: !494, size: 64, align: 64, offset: 128)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3748, file: !30, line: 626, baseType: !624, size: 32, offset: 192)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3633, file: !30, line: 632, baseType: !3757, size: 128)
!3757 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 629, size: 128, elements: !3758)
!3758 = !{!3759, !3760}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3757, file: !30, line: 630, baseType: !494, size: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3757, file: !30, line: 631, baseType: !624, size: 32, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !30, line: 634, baseType: !3762, size: 256)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 634, size: 256, elements: !3763)
!3763 = !{!3764, !3765, !3766, !3767, !3768}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3762, file: !30, line: 635, baseType: !494, size: 64, align: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3762, file: !30, line: 636, baseType: !494, size: 64, align: 64, offset: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3762, file: !30, line: 637, baseType: !624, size: 32, offset: 128)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3762, file: !30, line: 638, baseType: !624, size: 32, offset: 160)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3762, file: !30, line: 639, baseType: !624, size: 32, offset: 192)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3633, file: !30, line: 656, baseType: !3770, size: 384)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 642, size: 384, elements: !3771)
!3771 = !{!3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3770, file: !30, line: 643, baseType: !624, size: 32)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3770, file: !30, line: 644, baseType: !624, size: 32, offset: 32)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3770, file: !30, line: 645, baseType: !624, size: 32, offset: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3770, file: !30, line: 646, baseType: !624, size: 32, offset: 96)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3770, file: !30, line: 647, baseType: !494, size: 64, align: 64, offset: 128)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3770, file: !30, line: 652, baseType: !624, size: 32, offset: 192)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3770, file: !30, line: 653, baseType: !624, size: 32, offset: 224)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3770, file: !30, line: 654, baseType: !494, size: 64, offset: 256)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3770, file: !30, line: 655, baseType: !494, size: 64, offset: 320)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3633, file: !30, line: 673, baseType: !3782, size: 256)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 658, size: 256, elements: !3783)
!3783 = !{!3784, !3785, !3790, !3791, !3792}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3782, file: !30, line: 659, baseType: !624, size: 32)
!3785 = !DIDerivedType(tag: DW_TAG_member, scope: !3782, file: !30, line: 660, baseType: !3786, size: 32, offset: 32)
!3786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3782, file: !30, line: 660, size: 32, elements: !3787)
!3787 = !{!3788, !3789}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3786, file: !30, line: 661, baseType: !624, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3786, file: !30, line: 662, baseType: !624, size: 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3782, file: !30, line: 664, baseType: !624, size: 32, offset: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3782, file: !30, line: 665, baseType: !624, size: 32, offset: 96)
!3792 = !DIDerivedType(tag: DW_TAG_member, scope: !3782, file: !30, line: 666, baseType: !3793, size: 128, offset: 128)
!3793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3782, file: !30, line: 666, size: 128, elements: !3794)
!3794 = !{!3795, !3796}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3793, file: !30, line: 667, baseType: !624, size: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, scope: !3793, file: !30, line: 668, baseType: !3797, size: 128)
!3797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3793, file: !30, line: 668, size: 128, elements: !3798)
!3798 = !{!3799, !3800}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3797, file: !30, line: 669, baseType: !494, size: 64, align: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3797, file: !30, line: 670, baseType: !624, size: 32, offset: 64)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3633, file: !30, line: 683, baseType: !3802, size: 128)
!3802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 675, size: 128, elements: !3803)
!3803 = !{!3804, !3805, !3806, !3807}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3802, file: !30, line: 676, baseType: !624, size: 32)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3802, file: !30, line: 678, baseType: !624, size: 32, offset: 32)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3802, file: !30, line: 679, baseType: !624, size: 32, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3802, file: !30, line: 682, baseType: !624, size: 32, offset: 96)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3633, file: !30, line: 687, baseType: !3809, size: 32)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 685, size: 32, elements: !3810)
!3810 = !{!3811}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3809, file: !30, line: 686, baseType: !624, size: 32)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3633, file: !30, line: 691, baseType: !3813, size: 32)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 689, size: 32, elements: !3814)
!3814 = !{!3815}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3813, file: !30, line: 690, baseType: !624, size: 32)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3633, file: !30, line: 696, baseType: !3817, size: 64)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 693, size: 64, elements: !3818)
!3818 = !{!3819, !3820}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3817, file: !30, line: 694, baseType: !624, size: 32)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3817, file: !30, line: 695, baseType: !624, size: 32, offset: 32)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3633, file: !30, line: 702, baseType: !3822, size: 96)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !30, line: 698, size: 96, elements: !3823)
!3823 = !{!3824, !3825, !3826}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3822, file: !30, line: 699, baseType: !624, size: 32)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3822, file: !30, line: 700, baseType: !624, size: 32, offset: 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3822, file: !30, line: 701, baseType: !624, size: 32, offset: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3626, file: !105, line: 57, baseType: !3828, size: 64, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!3620, !3632}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3626, file: !105, line: 58, baseType: !3832, size: 64, offset: 128)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{null, !3620, !1164}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3626, file: !105, line: 59, baseType: !3836, size: 64, offset: 192)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{null, !3620}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3626, file: !105, line: 60, baseType: !3840, size: 64, offset: 256)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!7, !3620, !726, !726}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3626, file: !105, line: 61, baseType: !3836, size: 64, offset: 320)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3626, file: !105, line: 62, baseType: !3845, size: 64, offset: 384)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!726, !3620, !726}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3626, file: !105, line: 63, baseType: !3849, size: 64, offset: 448)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!7, !3620, !3852, !3632}
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3633)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3626, file: !105, line: 65, baseType: !3849, size: 64, offset: 512)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3626, file: !105, line: 68, baseType: !3849, size: 64, offset: 576)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3626, file: !105, line: 70, baseType: !3849, size: 64, offset: 640)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3626, file: !105, line: 74, baseType: !3845, size: 64, offset: 704)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3626, file: !105, line: 75, baseType: !3859, size: 64, offset: 768)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!7, !3620, !726, !726, !492}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3626, file: !105, line: 76, baseType: !3863, size: 64, offset: 832)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!7, !3620, !726}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3626, file: !105, line: 77, baseType: !3867, size: 64, offset: 896)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!7, !3620, !726, !492}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3626, file: !105, line: 78, baseType: !3863, size: 64, offset: 960)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3626, file: !105, line: 79, baseType: !3863, size: 64, offset: 1024)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3626, file: !105, line: 82, baseType: !3873, size: 64, offset: 1088)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!726, !3620, !1164, !7}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3626, file: !105, line: 84, baseType: !3877, size: 64, offset: 1152)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{null, !726}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3626, file: !105, line: 85, baseType: !3881, size: 64, offset: 1216)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!7, !3620, !3884}
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !30, line: 65, size: 64, elements: !3886)
!3886 = !{!3887, !3888, !3889, !3890, !3891}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3885, file: !30, line: 66, baseType: !1552, size: 8)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3885, file: !30, line: 67, baseType: !1552, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3885, file: !30, line: 68, baseType: !1552, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3885, file: !30, line: 69, baseType: !1399, size: 16, offset: 16)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3885, file: !30, line: 70, baseType: !1644, size: 32, offset: 32)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3626, file: !105, line: 86, baseType: !3893, size: 64, offset: 1280)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!862, !726}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3626, file: !105, line: 87, baseType: !3897, size: 64, offset: 1344)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{null, !3620, !726, !1096}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3626, file: !105, line: 89, baseType: !3901, size: 64, offset: 1408)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!7, !3904, !3906, !3599, !3599}
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3621)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3908)
!3908 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !105, line: 32, flags: DIFlagFwdDecl)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3626, file: !105, line: 95, baseType: !3910, size: 64, offset: 1472)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!7, !3620, !3519}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3626, file: !105, line: 96, baseType: !3914, size: 64, offset: 1536)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{null, !3620, !3519}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3626, file: !105, line: 97, baseType: !3918, size: 64, offset: 1600)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{null, !3620, !862, !3496, !3496}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3626, file: !105, line: 101, baseType: !3922, size: 64, offset: 1664)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!7, !3904, !3925, !862}
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3626, file: !105, line: 103, baseType: !3927, size: 64, offset: 1728)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!7, !3904, !492, !1614}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3626, file: !105, line: 105, baseType: !3931, size: 64, offset: 1792)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!7, !3620, !1269}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3626, file: !105, line: 106, baseType: !3935, size: 64, offset: 1856)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!1243, !3620, !1164, !1244}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3626, file: !105, line: 110, baseType: !3939, size: 64, offset: 1920)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{!7, !3942, !726, !862}
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !105, line: 38, flags: DIFlagFwdDecl)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3626, file: !105, line: 112, baseType: !3945, size: 64, offset: 1984)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{null, !3942, !726, !862}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3626, file: !105, line: 114, baseType: !3949, size: 64, offset: 2048)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!3952, !726}
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !105, line: 37, flags: DIFlagFwdDecl)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3626, file: !105, line: 125, baseType: !3956, size: 64, offset: 2112)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!696, !3904, !3904}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3626, file: !105, line: 129, baseType: !3960, size: 64, offset: 2176)
!3960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3626, file: !105, line: 130, baseType: !695, size: 64, offset: 2240)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3626, file: !105, line: 133, baseType: !3963, size: 64, offset: 2304)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3965)
!3965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !105, line: 46, size: 256, elements: !3966)
!3966 = !{!3967, !3968, !3975, !3977}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3965, file: !105, line: 47, baseType: !1115, size: 64)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3965, file: !105, line: 48, baseType: !3969, size: 64, offset: 64)
!3969 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !105, line: 43, baseType: !3970)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!7, !726, !3973}
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !105, line: 36, flags: DIFlagFwdDecl)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3965, file: !105, line: 49, baseType: !3976, size: 64, offset: 128)
!3976 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !105, line: 45, baseType: !3877)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3965, file: !105, line: 50, baseType: !862, size: 32, offset: 192)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3621, file: !105, line: 146, baseType: !3620, size: 64, offset: 64)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3621, file: !105, line: 150, baseType: !142, size: 32, offset: 128)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3621, file: !105, line: 151, baseType: !862, size: 32, offset: 160)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3621, file: !105, line: 152, baseType: !862, size: 32, offset: 192)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3621, file: !105, line: 153, baseType: !862, size: 32, offset: 224)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3621, file: !105, line: 154, baseType: !862, size: 32, offset: 256)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3621, file: !105, line: 155, baseType: !7, size: 32, offset: 288)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3621, file: !105, line: 156, baseType: !862, size: 32, offset: 320)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3621, file: !105, line: 157, baseType: !7, size: 32, offset: 352)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3621, file: !105, line: 158, baseType: !862, size: 32, offset: 384)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3621, file: !105, line: 159, baseType: !862, size: 32, offset: 416)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3621, file: !105, line: 160, baseType: !3990, size: 64, offset: 448)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3621, file: !105, line: 161, baseType: !3992, size: 128, offset: 512)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !105, line: 136, size: 128, elements: !3993)
!3993 = !{!3994, !3995}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3992, file: !105, line: 137, baseType: !862, size: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3992, file: !105, line: 138, baseType: !1886, size: 64, offset: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3621, file: !105, line: 162, baseType: !428, size: 128, offset: 640)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3621, file: !105, line: 163, baseType: !862, size: 32, offset: 768)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3621, file: !105, line: 164, baseType: !696, size: 8, offset: 800)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3621, file: !105, line: 165, baseType: !696, size: 8, offset: 808)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3621, file: !105, line: 171, baseType: !534, size: 64, align: 512, offset: 1024)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3621, file: !105, line: 172, baseType: !534, size: 64, offset: 1088)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3621, file: !105, line: 173, baseType: !1960, size: 256, offset: 1152)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3621, file: !105, line: 174, baseType: !1108, size: 192, offset: 1408)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3621, file: !105, line: 175, baseType: !492, size: 64, offset: 1600)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3617, file: !105, line: 741, baseType: !862, size: 32, offset: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3608, file: !105, line: 744, baseType: !696, size: 8, offset: 320)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3608, file: !105, line: 745, baseType: !1551, size: 8, offset: 328)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3608, file: !105, line: 746, baseType: !1192, size: 16, offset: 336)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3608, file: !105, line: 747, baseType: !862, size: 32, offset: 352)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3520, file: !105, line: 792, baseType: !862, size: 32, offset: 1472)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3520, file: !105, line: 793, baseType: !3572, size: 1728, offset: 1536)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3520, file: !105, line: 794, baseType: !4013, size: 64, offset: 3264)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4015)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !105, line: 432, size: 64, elements: !4016)
!4016 = !{!4017}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !4015, file: !105, line: 433, baseType: !4018, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!7, !3496, !3852, !3632}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3520, file: !105, line: 795, baseType: !4022, size: 64, offset: 3328)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3520, file: !105, line: 796, baseType: !1108, size: 192, offset: 3392)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3520, file: !105, line: 797, baseType: !3496, size: 64, offset: 3584)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3520, file: !105, line: 798, baseType: !1886, size: 64, offset: 3648)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3520, file: !105, line: 799, baseType: !492, size: 64, offset: 3712)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3520, file: !105, line: 800, baseType: !4028, size: 128, offset: 3776)
!4028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3620, size: 128, elements: !634)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3520, file: !105, line: 801, baseType: !428, size: 128, offset: 3904)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3520, file: !105, line: 805, baseType: !4031, size: 64, offset: 4032)
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !105, line: 478, size: 576, elements: !4033)
!4033 = !{!4034, !4035, !4036, !4039, !4040, !4041, !4042, !4043, !4044}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !4032, file: !105, line: 479, baseType: !3496, size: 64)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !4032, file: !105, line: 480, baseType: !451, size: 64, offset: 64)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !4032, file: !105, line: 481, baseType: !4037, size: 64, offset: 128)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !105, line: 209, flags: DIFlagFwdDecl)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !4032, file: !105, line: 482, baseType: !726, size: 64, offset: 192)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !4032, file: !105, line: 483, baseType: !445, size: 128, offset: 256)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !4032, file: !105, line: 484, baseType: !696, size: 8, offset: 384)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !4032, file: !105, line: 485, baseType: !696, size: 8, offset: 392)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !4032, file: !105, line: 486, baseType: !726, size: 64, offset: 448)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !4032, file: !105, line: 487, baseType: !862, size: 32, offset: 512)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3520, file: !105, line: 806, baseType: !3990, size: 64, offset: 4096)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3520, file: !105, line: 807, baseType: !4047, size: 64, offset: 4160)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !30, line: 4963, size: 64, elements: !4049)
!4049 = !{!4050, !4051}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !4048, file: !30, line: 4964, baseType: !624, size: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !4048, file: !30, line: 4965, baseType: !624, size: 32, offset: 32)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3520, file: !105, line: 808, baseType: !4053, size: 64, offset: 4224)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !105, line: 724, size: 32, elements: !4055)
!4055 = !{!4056, !4057}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !4054, file: !105, line: 725, baseType: !1192, size: 16)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !4054, file: !105, line: 726, baseType: !696, size: 8, offset: 16)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3520, file: !105, line: 815, baseType: !4059, size: 64, offset: 4288)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !30, line: 4971, size: 128, elements: !4061)
!4061 = !{!4062, !4063, !4064, !4065}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !4060, file: !30, line: 4972, baseType: !624, size: 32)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !4060, file: !30, line: 4973, baseType: !624, size: 32, offset: 32)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !4060, file: !30, line: 4974, baseType: !624, size: 32, offset: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !4060, file: !30, line: 4975, baseType: !624, size: 32, offset: 96)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3520, file: !105, line: 823, baseType: !4067, size: 64, offset: 4352)
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3520, file: !105, line: 824, baseType: !862, size: 32, offset: 4416)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3520, file: !105, line: 825, baseType: !862, size: 32, offset: 4448)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3520, file: !105, line: 830, baseType: !862, size: 32, offset: 4480)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3520, file: !105, line: 831, baseType: !862, size: 32, offset: 4512)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3520, file: !105, line: 832, baseType: !4073, size: 64, offset: 4544)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !4075, line: 17, size: 96, elements: !4076)
!4075 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!4076 = !{!4077, !4078, !4079}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !4074, file: !4075, line: 18, baseType: !7, size: 32)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4074, file: !4075, line: 18, baseType: !7, size: 32, offset: 32)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4074, file: !4075, line: 18, baseType: !7, size: 32, offset: 64)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3520, file: !105, line: 833, baseType: !4081, size: 64, offset: 4608)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !105, line: 503, size: 128, align: 128, elements: !4083)
!4083 = !{!4084, !4085, !4086}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !4082, file: !105, line: 504, baseType: !492, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !4082, file: !105, line: 505, baseType: !492, size: 64, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !4082, file: !105, line: 506, baseType: !2210, offset: 128)
!4087 = !DIDerivedType(tag: DW_TAG_member, scope: !3520, file: !105, line: 834, baseType: !4088, size: 256, offset: 4672)
!4088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3520, file: !105, line: 834, size: 256, elements: !4089)
!4089 = !{!4090, !4091}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4088, file: !105, line: 835, baseType: !1960, size: 256)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4088, file: !105, line: 836, baseType: !460, size: 128, align: 64)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3497, file: !3498, line: 544, baseType: !4093, size: 64, offset: 320)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3498, line: 512, size: 128, elements: !4095)
!4095 = !{!4096, !4097}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4094, file: !3498, line: 513, baseType: !1192, size: 16)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4094, file: !3498, line: 514, baseType: !4098, size: 64, offset: 64)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !4100, line: 24, size: 64, elements: !4101)
!4100 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!4101 = !{!4102, !4103, !4104, !4105}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !4099, file: !4100, line: 25, baseType: !632, size: 16)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !4099, file: !4100, line: 26, baseType: !1552, size: 8, offset: 16)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !4099, file: !4100, line: 27, baseType: !1552, size: 8, offset: 24)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !4099, file: !4100, line: 28, baseType: !624, size: 32, offset: 32)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3497, file: !3498, line: 545, baseType: !4107, size: 64, offset: 384)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!14, !2416, !4110}
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3885)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3497, file: !3498, line: 548, baseType: !4113, offset: 448)
!4113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4099, elements: !2075)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3497, file: !3498, line: 549, baseType: !4115, offset: 448)
!4115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3885, elements: !470)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3493, file: !105, line: 1034, baseType: !4117, size: 128, offset: 64)
!4117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4118, size: 128, elements: !634)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !105, line: 1034, flags: DIFlagFwdDecl)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3482, file: !3483, line: 17, baseType: !4121, size: 128, offset: 128)
!4121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3496, size: 128, elements: !634)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3482, file: !3483, line: 18, baseType: !4123, size: 256, offset: 256)
!4123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, size: 256, elements: !634)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2116, file: !2117, line: 174, baseType: !534, size: 64, offset: 15552)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2116, file: !2117, line: 183, baseType: !4126, size: 1216, offset: 15616)
!4126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !4127, line: 15, size: 1216, elements: !4128)
!4127 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!4128 = !{!4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4142, !4143, !4144, !4147, !4150}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !4126, file: !4127, line: 17, baseType: !2150, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !4126, file: !4127, line: 18, baseType: !2150, size: 64, offset: 64)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !4126, file: !4127, line: 19, baseType: !2150, size: 64, offset: 128)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !4126, file: !4127, line: 20, baseType: !2150, size: 64, offset: 192)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !4126, file: !4127, line: 21, baseType: !2150, size: 64, offset: 256)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !4126, file: !4127, line: 22, baseType: !2150, size: 64, offset: 320)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !4126, file: !4127, line: 23, baseType: !2150, size: 64, offset: 384)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !4126, file: !4127, line: 24, baseType: !2150, size: 64, offset: 448)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !4126, file: !4127, line: 25, baseType: !2150, size: 64, offset: 512)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !4126, file: !4127, line: 26, baseType: !2150, size: 64, offset: 576)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !4126, file: !4127, line: 30, baseType: !4140, size: 64, offset: 640)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !4127, line: 11, flags: DIFlagFwdDecl)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !4126, file: !4127, line: 31, baseType: !884, offset: 704)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !4126, file: !4127, line: 32, baseType: !2393, size: 320, offset: 704)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !4126, file: !4127, line: 33, baseType: !4145, size: 64, offset: 1024)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !4127, line: 12, flags: DIFlagFwdDecl)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !4126, file: !4127, line: 34, baseType: !4148, size: 64, offset: 1088)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4149 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !4127, line: 13, flags: DIFlagFwdDecl)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !4126, file: !4127, line: 37, baseType: !1011, size: 64, offset: 1152)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2116, file: !2117, line: 191, baseType: !606, size: 64, offset: 16832)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2100, file: !2101, line: 38, baseType: !4153, size: 64, offset: 384)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2101, line: 38, flags: DIFlagFwdDecl)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2100, file: !2101, line: 39, baseType: !4153, size: 64, offset: 448)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2100, file: !2101, line: 40, baseType: !4157, size: 64, offset: 512)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !4159, line: 856, size: 448, elements: !4160)
!4159 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!4160 = !{!4161, !4162, !4163, !4164, !4165}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4158, file: !4159, line: 857, baseType: !1425, size: 32)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4158, file: !4159, line: 858, baseType: !1946, size: 192, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !4158, file: !4159, line: 859, baseType: !1912, size: 64, offset: 256)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !4158, file: !4159, line: 860, baseType: !2054, size: 64, offset: 320)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !4158, file: !4159, line: 861, baseType: !4166, size: 64, offset: 384)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !4168, line: 16, flags: DIFlagFwdDecl)
!4168 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1412, file: !1413, line: 969, baseType: !4170, size: 64, offset: 9216)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4172, line: 82, size: 7296, elements: !4173)
!4172 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4173 = !{!4174, !4175, !4176, !4177, !4178, !4179, !4180, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4209, !4218, !4219, !4221, !4222, !4223, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4251, !4252, !4259, !4260, !4261, !4262, !4263, !4264}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4171, file: !4172, line: 83, baseType: !1425, size: 32)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4171, file: !4172, line: 84, baseType: !544, size: 32, offset: 32)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4171, file: !4172, line: 85, baseType: !7, size: 32, offset: 64)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4171, file: !4172, line: 86, baseType: !445, size: 128, offset: 128)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4171, file: !4172, line: 88, baseType: !1254, size: 128, offset: 256)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4171, file: !4172, line: 91, baseType: !1411, size: 64, offset: 384)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4171, file: !4172, line: 94, baseType: !4181, size: 192, offset: 448)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4182, line: 30, size: 192, elements: !4183)
!4182 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4183 = !{!4184, !4185}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4181, file: !4182, line: 31, baseType: !445, size: 128)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4181, file: !4182, line: 32, baseType: !4186, size: 64, offset: 128)
!4186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4187, line: 25, baseType: !4188)
!4187 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4187, line: 23, size: 64, elements: !4189)
!4189 = !{!4190}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4188, file: !4187, line: 24, baseType: !1569, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4171, file: !4172, line: 97, baseType: !1011, size: 64, offset: 640)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4171, file: !4172, line: 100, baseType: !7, size: 32, offset: 704)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4171, file: !4172, line: 106, baseType: !7, size: 32, offset: 736)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4171, file: !4172, line: 107, baseType: !1411, size: 64, offset: 768)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4171, file: !4172, line: 110, baseType: !7, size: 32, offset: 832)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4171, file: !4172, line: 111, baseType: !14, size: 32, offset: 864)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4171, file: !4172, line: 122, baseType: !14, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4171, file: !4172, line: 123, baseType: !14, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4171, file: !4172, line: 128, baseType: !7, size: 32, offset: 928)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4171, file: !4172, line: 129, baseType: !445, size: 128, offset: 960)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4171, file: !4172, line: 132, baseType: !1487, size: 512, offset: 1088)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4171, file: !4172, line: 133, baseType: !1495, size: 64, offset: 1600)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4171, file: !4172, line: 140, baseType: !4204, size: 256, offset: 1664)
!4204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4205, size: 256, elements: !634)
!4205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4172, line: 38, size: 128, elements: !4206)
!4206 = !{!4207, !4208}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4205, file: !4172, line: 39, baseType: !492, size: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4205, file: !4172, line: 40, baseType: !492, size: 64, offset: 64)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4171, file: !4172, line: 146, baseType: !4210, size: 192, offset: 1920)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4172, line: 66, size: 192, elements: !4211)
!4211 = !{!4212}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4210, file: !4172, line: 67, baseType: !4213, size: 192)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4172, line: 47, size: 192, elements: !4214)
!4214 = !{!4215, !4216, !4217}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4213, file: !4172, line: 48, baseType: !534, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4213, file: !4172, line: 49, baseType: !534, size: 64, offset: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4213, file: !4172, line: 50, baseType: !534, size: 64, offset: 128)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4171, file: !4172, line: 150, baseType: !1728, size: 640, offset: 2112)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4171, file: !4172, line: 153, baseType: !4220, size: 256, offset: 2752)
!4220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1675, size: 256, elements: !1356)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4171, file: !4172, line: 159, baseType: !1675, size: 64, offset: 3008)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4171, file: !4172, line: 162, baseType: !7, size: 32, offset: 3072)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4171, file: !4172, line: 164, baseType: !4224, size: 64, offset: 3136)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4172, line: 164, flags: DIFlagFwdDecl)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4171, file: !4172, line: 175, baseType: !2326, size: 32, offset: 3200)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4171, file: !4172, line: 176, baseType: !492, size: 64, offset: 3264)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4171, file: !4172, line: 176, baseType: !492, size: 64, offset: 3328)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4171, file: !4172, line: 176, baseType: !492, size: 64, offset: 3392)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4171, file: !4172, line: 176, baseType: !492, size: 64, offset: 3456)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4171, file: !4172, line: 177, baseType: !492, size: 64, offset: 3520)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4171, file: !4172, line: 178, baseType: !492, size: 64, offset: 3584)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4171, file: !4172, line: 179, baseType: !1716, size: 128, offset: 3648)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4171, file: !4172, line: 180, baseType: !473, size: 64, offset: 3776)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4171, file: !4172, line: 180, baseType: !473, size: 64, offset: 3840)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4171, file: !4172, line: 180, baseType: !473, size: 64, offset: 3904)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4171, file: !4172, line: 180, baseType: !473, size: 64, offset: 3968)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4171, file: !4172, line: 181, baseType: !473, size: 64, offset: 4032)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4171, file: !4172, line: 181, baseType: !473, size: 64, offset: 4096)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4171, file: !4172, line: 181, baseType: !473, size: 64, offset: 4160)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4171, file: !4172, line: 181, baseType: !473, size: 64, offset: 4224)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4171, file: !4172, line: 182, baseType: !473, size: 64, offset: 4288)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4171, file: !4172, line: 182, baseType: !473, size: 64, offset: 4352)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4171, file: !4172, line: 182, baseType: !473, size: 64, offset: 4416)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4171, file: !4172, line: 182, baseType: !473, size: 64, offset: 4480)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4171, file: !4172, line: 183, baseType: !473, size: 64, offset: 4544)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4171, file: !4172, line: 183, baseType: !473, size: 64, offset: 4608)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4171, file: !4172, line: 184, baseType: !4249, offset: 4672)
!4249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4250, line: 12, elements: !898)
!4250 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4171, file: !4172, line: 192, baseType: !496, size: 64, offset: 4672)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4171, file: !4172, line: 203, baseType: !4253, size: 2048, offset: 4736)
!4253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4254, size: 2048, elements: !430)
!4254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4255, line: 43, size: 128, elements: !4256)
!4255 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4256 = !{!4257, !4258}
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4254, file: !4255, line: 44, baseType: !753, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4254, file: !4255, line: 45, baseType: !753, size: 64, offset: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4171, file: !4172, line: 220, baseType: !696, size: 8, offset: 6784)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4171, file: !4172, line: 221, baseType: !1400, size: 16, offset: 6800)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4171, file: !4172, line: 222, baseType: !1400, size: 16, offset: 6816)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4171, file: !4172, line: 224, baseType: !1279, size: 64, offset: 6848)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4171, file: !4172, line: 227, baseType: !1108, size: 192, offset: 6912)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4171, file: !4172, line: 233, baseType: !1108, size: 192, offset: 7104)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1412, file: !1413, line: 970, baseType: !4266, size: 64, offset: 9280)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4172, line: 20, size: 16576, elements: !4268)
!4268 = !{!4269, !4270, !4271, !4272}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4267, file: !4172, line: 21, baseType: !884)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4267, file: !4172, line: 22, baseType: !1425, size: 32)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4267, file: !4172, line: 23, baseType: !1254, size: 128, offset: 64)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4267, file: !4172, line: 24, baseType: !4273, size: 16384, offset: 192)
!4273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4274, size: 16384, elements: !4294)
!4274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4182, line: 49, size: 256, elements: !4275)
!4275 = !{!4276}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4274, file: !4182, line: 50, baseType: !4277, size: 256)
!4277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4182, line: 35, size: 256, elements: !4278)
!4278 = !{!4279, !4286, !4287, !4293}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4277, file: !4182, line: 37, baseType: !4280, size: 64)
!4280 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4281, line: 19, baseType: !4282)
!4281 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4281, line: 18, baseType: !4284)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{null, !7}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4277, file: !4182, line: 38, baseType: !473, size: 64, offset: 64)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4277, file: !4182, line: 44, baseType: !4288, size: 64, offset: 128)
!4288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4281, line: 22, baseType: !4289)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4281, line: 21, baseType: !4291)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{null}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4277, file: !4182, line: 46, baseType: !4186, size: 64, offset: 192)
!4294 = !{!4295}
!4295 = !DISubrange(count: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1412, file: !1413, line: 971, baseType: !4186, size: 64, offset: 9344)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1412, file: !1413, line: 972, baseType: !4186, size: 64, offset: 9408)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1412, file: !1413, line: 974, baseType: !4186, size: 64, offset: 9472)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1412, file: !1413, line: 975, baseType: !4181, size: 192, offset: 9536)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1412, file: !1413, line: 976, baseType: !473, size: 64, offset: 9728)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1412, file: !1413, line: 977, baseType: !750, size: 64, offset: 9792)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1412, file: !1413, line: 978, baseType: !14, size: 32, offset: 9856)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1412, file: !1413, line: 980, baseType: !463, size: 64, offset: 9920)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1412, file: !1413, line: 989, baseType: !4305, size: 128, offset: 9984)
!4305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4306, line: 35, size: 128, elements: !4307)
!4306 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4307 = !{!4308, !4309, !4310}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4305, file: !4306, line: 36, baseType: !7, size: 32)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4305, file: !4306, line: 37, baseType: !544, size: 32, offset: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4305, file: !4306, line: 38, baseType: !4311, size: 64, offset: 64)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4306, line: 23, flags: DIFlagFwdDecl)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1412, file: !1413, line: 992, baseType: !492, size: 64, offset: 10112)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1412, file: !1413, line: 993, baseType: !492, size: 64, offset: 10176)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1412, file: !1413, line: 996, baseType: !884, offset: 10240)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1412, file: !1413, line: 999, baseType: !1322, offset: 10240)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1412, file: !1413, line: 1001, baseType: !4318, size: 64, offset: 10240)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1413, line: 636, size: 64, elements: !4319)
!4319 = !{!4320}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4318, file: !1413, line: 637, baseType: !4321, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1412, file: !1413, line: 1005, baseType: !1541, size: 128, offset: 10304)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1412, file: !1413, line: 1007, baseType: !1411, size: 64, offset: 10432)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1412, file: !1413, line: 1009, baseType: !4325, size: 64, offset: 10496)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1413, line: 1009, flags: DIFlagFwdDecl)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1412, file: !1413, line: 1043, baseType: !726, size: 64, offset: 10560)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1412, file: !1413, line: 1046, baseType: !4329, size: 64, offset: 10624)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !4331, line: 554, size: 128, elements: !4332)
!4331 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!4332 = !{!4333, !5911}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4330, file: !4331, line: 555, baseType: !4334, size: 64)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !4336, line: 203, size: 832, elements: !4337)
!4336 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!4337 = !{!4338, !4339, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5879, !5884, !5885, !5904, !5905, !5906, !5907, !5908, !5910}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !4335, file: !4336, line: 204, baseType: !4334, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !4335, file: !4336, line: 205, baseType: !4340, size: 64, offset: 64)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !4342, line: 167, size: 8512, elements: !4343)
!4342 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!4343 = !{!4344, !4345, !4346, !4347, !4349, !4350, !4351, !5189, !5190, !5353, !5847, !5848, !5849, !5850, !5851, !5852, !5855, !5856, !5859, !5860, !5861, !5864}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4341, file: !4342, line: 171, baseType: !7, size: 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !4341, file: !4342, line: 172, baseType: !7, size: 32, offset: 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !4341, file: !4342, line: 173, baseType: !7, size: 32, offset: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !4341, file: !4342, line: 176, baseType: !4348, size: 256, offset: 96)
!4348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 256, elements: !871)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4341, file: !4342, line: 178, baseType: !633, size: 16, offset: 352)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !4341, file: !4342, line: 179, baseType: !633, size: 16, offset: 368)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !4341, file: !4342, line: 186, baseType: !4352, size: 64, offset: 384)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !4342, line: 149, size: 256, elements: !4354)
!4354 = !{!4355, !4356, !4357, !5187}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4353, file: !4342, line: 150, baseType: !460, size: 128, align: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4353, file: !4342, line: 151, baseType: !7, size: 32, offset: 128)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !4353, file: !4342, line: 152, baseType: !4358, size: 64, offset: 192)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !4342, line: 53, size: 6592, elements: !4360)
!4360 = !{!4361, !4363, !4364, !4365, !4368, !4389, !5170, !5171, !5172, !5173, !5181}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !4359, file: !4342, line: 54, baseType: !4362, size: 64)
!4362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !438, line: 125, baseType: !492)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !4359, file: !4342, line: 60, baseType: !4362, size: 64, offset: 64)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !4359, file: !4342, line: 64, baseType: !473, size: 64, offset: 128)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !4359, file: !4342, line: 65, baseType: !4366, size: 64, offset: 192)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !4342, line: 65, flags: DIFlagFwdDecl)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4359, file: !4342, line: 66, baseType: !4369, size: 128, offset: 256)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4370, line: 105, size: 128, elements: !4371)
!4370 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4369, file: !4370, line: 110, baseType: !473, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4369, file: !4370, line: 118, baseType: !4374, size: 64, offset: 64)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64)
!4375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4370, line: 95, size: 448, elements: !4376)
!4376 = !{!4377, !4378, !4384, !4385, !4386, !4387, !4388}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4375, file: !4370, line: 96, baseType: !532, size: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4375, file: !4370, line: 97, baseType: !4379, size: 64, offset: 64)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4370, line: 60, baseType: !4381)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{null, !4383}
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4375, file: !4370, line: 98, baseType: !4379, size: 64, offset: 128)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4375, file: !4370, line: 99, baseType: !696, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4375, file: !4370, line: 100, baseType: !696, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4375, file: !4370, line: 101, baseType: !460, size: 128, align: 64, offset: 256)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4375, file: !4370, line: 102, baseType: !4383, size: 64, offset: 384)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !4359, file: !4342, line: 68, baseType: !4390, size: 5568, offset: 384)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !192, line: 461, size: 5568, elements: !4391)
!4391 = !{!4392, !4752, !4754, !4757, !4758, !4809, !4882, !4883, !4884, !4885, !4886, !4895, !4989, !5002, !5006, !5007, !5011, !5012, !5013, !5014, !5018, !5024, !5025, !5028, !5032, !5122, !5123, !5124, !5125, !5126, !5158, !5159, !5160, !5163, !5166, !5167, !5168, !5169}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4390, file: !192, line: 462, baseType: !4393, size: 512)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !4394, line: 64, size: 512, elements: !4395)
!4394 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!4395 = !{!4396, !4397, !4398, !4400, !4440, !4536, !4742, !4747, !4748, !4749, !4750, !4751}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4393, file: !4394, line: 65, baseType: !453, size: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4393, file: !4394, line: 66, baseType: !445, size: 128, offset: 64)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4393, file: !4394, line: 67, baseType: !4399, size: 64, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !4393, file: !4394, line: 68, baseType: !4401, size: 64, offset: 256)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !4394, line: 192, size: 704, elements: !4403)
!4403 = !{!4404, !4405, !4406, !4407}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4402, file: !4394, line: 193, baseType: !445, size: 128)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4402, file: !4394, line: 194, baseType: !884, offset: 128)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4402, file: !4394, line: 195, baseType: !4393, size: 512, offset: 128)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !4402, file: !4394, line: 196, baseType: !4408, size: 64, offset: 640)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4410)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !4394, line: 156, size: 192, elements: !4411)
!4411 = !{!4412, !4417, !4422}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4410, file: !4394, line: 157, baseType: !4413, size: 64)
!4413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4414)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!7, !4401, !4399}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4410, file: !4394, line: 158, baseType: !4418, size: 64, offset: 64)
!4418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4419)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!453, !4401, !4399}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4410, file: !4394, line: 159, baseType: !4423, size: 64, offset: 128)
!4423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4424)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!7, !4401, !4399, !4427}
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !4394, line: 148, size: 20736, elements: !4429)
!4429 = !{!4430, !4432, !4434, !4435, !4439}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !4428, file: !4394, line: 149, baseType: !4431, size: 192)
!4431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !1021)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !4428, file: !4394, line: 150, baseType: !4433, size: 4096, offset: 192)
!4433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 4096, elements: !4294)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !4428, file: !4394, line: 151, baseType: !7, size: 32, offset: 4288)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4428, file: !4394, line: 152, baseType: !4436, size: 16384, offset: 4320)
!4436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 16384, elements: !4437)
!4437 = !{!4438}
!4438 = !DISubrange(count: 2048)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !4428, file: !4394, line: 153, baseType: !7, size: 32, offset: 20704)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !4393, file: !4394, line: 69, baseType: !4441, size: 64, offset: 320)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !4394, line: 138, size: 448, elements: !4443)
!4443 = !{!4444, !4448, !4467, !4469, !4502, !4528, !4532}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4442, file: !4394, line: 139, baseType: !4445, size: 64)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{null, !4399}
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !4442, file: !4394, line: 140, baseType: !4449, size: 64, offset: 64)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4451)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4452, line: 230, size: 128, elements: !4453)
!4452 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4453 = !{!4454, !4463}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4451, file: !4452, line: 231, baseType: !4455, size: 64)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!1169, !4399, !4458, !733}
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4452, line: 30, size: 128, elements: !4460)
!4460 = !{!4461, !4462}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4459, file: !4452, line: 31, baseType: !453, size: 64)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4459, file: !4452, line: 32, baseType: !801, size: 16, offset: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4451, file: !4452, line: 232, baseType: !4464, size: 64, offset: 64)
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{!1169, !4399, !4458, !453, !750}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !4442, file: !4394, line: 141, baseType: !4468, size: 64, offset: 128)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !4442, file: !4394, line: 142, baseType: !4470, size: 64, offset: 192)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4473)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4452, line: 84, size: 320, elements: !4474)
!4474 = !{!4475, !4476, !4480, !4499, !4500}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4473, file: !4452, line: 85, baseType: !453, size: 64)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4473, file: !4452, line: 86, baseType: !4477, size: 64, offset: 64)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!801, !4399, !4458, !7}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4473, file: !4452, line: 88, baseType: !4481, size: 64, offset: 128)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!801, !4399, !4484, !7}
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4452, line: 168, size: 448, elements: !4486)
!4486 = !{!4487, !4488, !4489, !4490, !4494, !4495}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4485, file: !4452, line: 169, baseType: !4459, size: 128)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4485, file: !4452, line: 170, baseType: !750, size: 64, offset: 128)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4485, file: !4452, line: 171, baseType: !726, size: 64, offset: 192)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4485, file: !4452, line: 172, baseType: !4491, size: 64, offset: 256)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!1169, !1164, !4399, !4484, !733, !979, !750}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4485, file: !4452, line: 174, baseType: !4491, size: 64, offset: 320)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4485, file: !4452, line: 176, baseType: !4496, size: 64, offset: 384)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!7, !1164, !4399, !4484, !1269}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4473, file: !4452, line: 90, baseType: !4468, size: 64, offset: 192)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4473, file: !4452, line: 91, baseType: !4501, size: 64, offset: 256)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !4442, file: !4394, line: 143, baseType: !4503, size: 64, offset: 256)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{!4506, !4399}
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4508)
!4508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !174, line: 39, size: 384, elements: !4509)
!4509 = !{!4510, !4511, !4515, !4519, !4523, !4527}
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4508, file: !174, line: 40, baseType: !173, size: 32)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4508, file: !174, line: 41, baseType: !4512, size: 64, offset: 64)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!696}
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4508, file: !174, line: 42, baseType: !4516, size: 64, offset: 128)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!726}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4508, file: !174, line: 43, baseType: !4520, size: 64, offset: 192)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{!2416, !606}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4508, file: !174, line: 44, baseType: !4524, size: 64, offset: 256)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 64)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!2416}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4508, file: !174, line: 45, baseType: !3877, size: 64, offset: 320)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4442, file: !4394, line: 144, baseType: !4529, size: 64, offset: 320)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!2416, !4399}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4442, file: !4394, line: 145, baseType: !4533, size: 64, offset: 384)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4534, size: 64)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{null, !4399, !2035, !2036}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !4393, file: !4394, line: 70, baseType: !4537, size: 64, offset: 384)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !4539, line: 123, size: 1024, elements: !4540)
!4539 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!4540 = !{!4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4735, !4736, !4737, !4738, !4739}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4538, file: !4539, line: 124, baseType: !544, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4538, file: !4539, line: 125, baseType: !544, size: 32, offset: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4538, file: !4539, line: 135, baseType: !4537, size: 64, offset: 64)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4538, file: !4539, line: 136, baseType: !453, size: 64, offset: 128)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4538, file: !4539, line: 138, baseType: !594, size: 192, align: 64, offset: 192)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4538, file: !4539, line: 140, baseType: !2416, size: 64, offset: 384)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4538, file: !4539, line: 141, baseType: !14, size: 32, offset: 448)
!4548 = !DIDerivedType(tag: DW_TAG_member, scope: !4538, file: !4539, line: 142, baseType: !4549, size: 256, offset: 512)
!4549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4538, file: !4539, line: 142, size: 256, elements: !4550)
!4550 = !{!4551, !4591, !4595}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4549, file: !4539, line: 143, baseType: !4552, size: 192)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !4539, line: 91, size: 192, elements: !4553)
!4553 = !{!4554, !4555, !4556}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4552, file: !4539, line: 92, baseType: !473, size: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4552, file: !4539, line: 94, baseType: !1287, size: 64, offset: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4552, file: !4539, line: 100, baseType: !4557, size: 64, offset: 128)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !4539, line: 180, size: 704, elements: !4559)
!4559 = !{!4560, !4561, !4562, !4563, !4564, !4565, !4589, !4590}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4558, file: !4539, line: 182, baseType: !4537, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4558, file: !4539, line: 183, baseType: !14, size: 32, offset: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4558, file: !4539, line: 186, baseType: !2134, size: 192, offset: 128)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4558, file: !4539, line: 187, baseType: !862, size: 32, offset: 320)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4558, file: !4539, line: 188, baseType: !862, size: 32, offset: 352)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4558, file: !4539, line: 189, baseType: !4566, size: 64, offset: 384)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !4539, line: 168, size: 320, elements: !4568)
!4568 = !{!4569, !4573, !4577, !4581, !4585}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4567, file: !4539, line: 169, baseType: !4570, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4571, size: 64)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!7, !1096, !4557}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4567, file: !4539, line: 171, baseType: !4574, size: 64, offset: 64)
!4574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 64)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{!7, !4537, !453, !801}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4567, file: !4539, line: 173, baseType: !4578, size: 64, offset: 128)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!7, !4537}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4567, file: !4539, line: 174, baseType: !4582, size: 64, offset: 192)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!7, !4537, !4537, !453}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4567, file: !4539, line: 176, baseType: !4586, size: 64, offset: 256)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!7, !1096, !4537, !4557}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4558, file: !4539, line: 192, baseType: !445, size: 128, offset: 448)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4558, file: !4539, line: 194, baseType: !1254, size: 128, offset: 576)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4549, file: !4539, line: 144, baseType: !4592, size: 64)
!4592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !4539, line: 103, size: 64, elements: !4593)
!4593 = !{!4594}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4592, file: !4539, line: 104, baseType: !4537, size: 64)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4549, file: !4539, line: 145, baseType: !4596, size: 256)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !4539, line: 107, size: 256, elements: !4597)
!4597 = !{!4598, !4730, !4733, !4734}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4596, file: !4539, line: 108, baseType: !4599, size: 64)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4601)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !4539, line: 217, size: 768, elements: !4602)
!4602 = !{!4603, !4707, !4711, !4712, !4713, !4714, !4715, !4719, !4720, !4721, !4722, !4726}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4601, file: !4539, line: 222, baseType: !4604, size: 64)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4605, size: 64)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{!7, !4607}
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !4539, line: 197, size: 1088, elements: !4609)
!4609 = !{!4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4608, file: !4539, line: 199, baseType: !4537, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4608, file: !4539, line: 200, baseType: !1164, size: 64, offset: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4608, file: !4539, line: 201, baseType: !1096, size: 64, offset: 128)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4608, file: !4539, line: 202, baseType: !726, size: 64, offset: 192)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4608, file: !4539, line: 205, baseType: !1108, size: 192, offset: 256)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4608, file: !4539, line: 206, baseType: !1108, size: 192, offset: 448)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4608, file: !4539, line: 207, baseType: !7, size: 32, offset: 640)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4608, file: !4539, line: 208, baseType: !445, size: 128, offset: 704)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4608, file: !4539, line: 209, baseType: !733, size: 64, offset: 832)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4608, file: !4539, line: 211, baseType: !750, size: 64, offset: 896)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4608, file: !4539, line: 212, baseType: !696, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4608, file: !4539, line: 213, baseType: !696, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4608, file: !4539, line: 214, baseType: !4623, size: 64, offset: 1024)
!4623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4624, size: 64)
!4624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4625)
!4625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !180, line: 557, size: 832, elements: !4626)
!4626 = !{!4627, !4631, !4632, !4636, !4640, !4681, !4685, !4689, !4693, !4694, !4695, !4699, !4703}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4625, file: !180, line: 558, baseType: !4628, size: 64)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 64)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{null, !1269}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4625, file: !180, line: 559, baseType: !4628, size: 64, offset: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4625, file: !180, line: 560, baseType: !4633, size: 64, offset: 128)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!7, !1269, !473}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4625, file: !180, line: 561, baseType: !4637, size: 64, offset: 192)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DISubroutineType(types: !4639)
!4639 = !{!7, !1269}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4625, file: !180, line: 562, baseType: !4641, size: 64, offset: 256)
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{!4644, !4645}
!4644 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !782, line: 682, baseType: !14)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 64)
!4646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !180, line: 508, size: 768, elements: !4647)
!4647 = !{!4648, !4649, !4650, !4651, !4652, !4653, !4660, !4667, !4673, !4674, !4675, !4677, !4679}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4646, file: !180, line: 509, baseType: !1269, size: 64)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4646, file: !180, line: 510, baseType: !14, size: 32, offset: 64)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4646, file: !180, line: 511, baseType: !2143, size: 32, offset: 96)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4646, file: !180, line: 512, baseType: !473, size: 64, offset: 128)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4646, file: !180, line: 513, baseType: !473, size: 64, offset: 192)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4646, file: !180, line: 514, baseType: !4654, size: 64, offset: 256)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1302, line: 385, baseType: !4656)
!4656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 385, size: 64, elements: !4657)
!4657 = !{!4658}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4656, file: !1302, line: 385, baseType: !4659, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1307, line: 15, baseType: !473)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4646, file: !180, line: 516, baseType: !4661, size: 64, offset: 320)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1302, line: 359, baseType: !4663)
!4663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 359, size: 64, elements: !4664)
!4664 = !{!4665}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4663, file: !1302, line: 359, baseType: !4666, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1307, line: 16, baseType: !473)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4646, file: !180, line: 519, baseType: !4668, size: 64, offset: 384)
!4668 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1307, line: 21, baseType: !4669)
!4669 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1307, line: 21, size: 64, elements: !4670)
!4670 = !{!4671}
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4669, file: !1307, line: 21, baseType: !4672, size: 64)
!4672 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1307, line: 14, baseType: !473)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4646, file: !180, line: 521, baseType: !780, size: 64, offset: 448)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4646, file: !180, line: 522, baseType: !780, size: 64, offset: 512)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4646, file: !180, line: 528, baseType: !4676, size: 64, offset: 576)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4646, file: !180, line: 532, baseType: !4678, size: 64, offset: 640)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4646, file: !180, line: 536, baseType: !4680, size: 64, offset: 704)
!4680 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1302, line: 509, baseType: !780)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4625, file: !180, line: 563, baseType: !4682, size: 64, offset: 320)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!4644, !4645, !179}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4625, file: !180, line: 565, baseType: !4686, size: 64, offset: 384)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{null, !4645, !473, !473}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4625, file: !180, line: 567, baseType: !4690, size: 64, offset: 448)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!473, !1269}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4625, file: !180, line: 571, baseType: !4641, size: 64, offset: 512)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4625, file: !180, line: 574, baseType: !4641, size: 64, offset: 576)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4625, file: !180, line: 579, baseType: !4696, size: 64, offset: 640)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!7, !1269, !473, !726, !7, !7}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4625, file: !180, line: 585, baseType: !4700, size: 64, offset: 704)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!453, !1269}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4625, file: !180, line: 615, baseType: !4704, size: 64, offset: 768)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!780, !1269, !473}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4601, file: !4539, line: 223, baseType: !4708, size: 64, offset: 64)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{null, !4607}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4601, file: !4539, line: 236, baseType: !1133, size: 64, offset: 128)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4601, file: !4539, line: 238, baseType: !1120, size: 64, offset: 192)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4601, file: !4539, line: 239, baseType: !1129, size: 64, offset: 256)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4601, file: !4539, line: 240, baseType: !1125, size: 64, offset: 320)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4601, file: !4539, line: 242, baseType: !4716, size: 64, offset: 384)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!1169, !4607, !733, !750, !979}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4601, file: !4539, line: 252, baseType: !750, size: 64, offset: 448)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4601, file: !4539, line: 259, baseType: !696, size: 8, offset: 512)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4601, file: !4539, line: 260, baseType: !4716, size: 64, offset: 576)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4601, file: !4539, line: 263, baseType: !4723, size: 64, offset: 640)
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{!1243, !4607, !1244}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4601, file: !4539, line: 266, baseType: !4727, size: 64, offset: 704)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!7, !4607, !1269}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4596, file: !4539, line: 109, baseType: !4731, size: 64, offset: 64)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !4539, line: 31, flags: DIFlagFwdDecl)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4596, file: !4539, line: 110, baseType: !979, size: 64, offset: 128)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4596, file: !4539, line: 111, baseType: !4537, size: 64, offset: 192)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4538, file: !4539, line: 148, baseType: !726, size: 64, offset: 768)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4538, file: !4539, line: 154, baseType: !492, size: 64, offset: 832)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4538, file: !4539, line: 156, baseType: !633, size: 16, offset: 896)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4538, file: !4539, line: 157, baseType: !801, size: 16, offset: 912)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4538, file: !4539, line: 158, baseType: !4740, size: 64, offset: 960)
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4741, size: 64)
!4741 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !4539, line: 32, flags: DIFlagFwdDecl)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4393, file: !4394, line: 71, baseType: !4743, size: 32, offset: 448)
!4743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4744, line: 19, size: 32, elements: !4745)
!4744 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4745 = !{!4746}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4743, file: !4744, line: 20, baseType: !1425, size: 32)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !4393, file: !4394, line: 75, baseType: !14, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !4393, file: !4394, line: 76, baseType: !14, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !4393, file: !4394, line: 77, baseType: !14, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !4393, file: !4394, line: 78, baseType: !14, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !4393, file: !4394, line: 79, baseType: !14, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4390, file: !192, line: 463, baseType: !4753, size: 64, offset: 512)
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4390, file: !192, line: 465, baseType: !4755, size: 64, offset: 576)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !192, line: 36, flags: DIFlagFwdDecl)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !4390, file: !192, line: 467, baseType: !453, size: 64, offset: 640)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4390, file: !192, line: 468, baseType: !4759, size: 64, offset: 704)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4761)
!4761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !192, line: 87, size: 384, elements: !4762)
!4762 = !{!4763, !4764, !4765, !4769, !4774, !4778}
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4761, file: !192, line: 88, baseType: !453, size: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4761, file: !192, line: 89, baseType: !4470, size: 64, offset: 64)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4761, file: !192, line: 90, baseType: !4766, size: 64, offset: 128)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = !DISubroutineType(types: !4768)
!4768 = !{!7, !4753, !4427}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4761, file: !192, line: 91, baseType: !4770, size: 64, offset: 192)
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4771, size: 64)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!733, !4753, !4773, !2035, !2036}
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4761, file: !192, line: 93, baseType: !4775, size: 64, offset: 256)
!4775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4776, size: 64)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{null, !4753}
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4761, file: !192, line: 95, baseType: !4779, size: 64, offset: 320)
!4779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4781)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !199, line: 278, size: 1472, elements: !4782)
!4782 = !{!4783, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4781, file: !199, line: 279, baseType: !4784, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4785, size: 64)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{!7, !4753}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4781, file: !199, line: 280, baseType: !4775, size: 64, offset: 64)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4781, file: !199, line: 281, baseType: !4784, size: 64, offset: 128)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4781, file: !199, line: 282, baseType: !4784, size: 64, offset: 192)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4781, file: !199, line: 283, baseType: !4784, size: 64, offset: 256)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4781, file: !199, line: 284, baseType: !4784, size: 64, offset: 320)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4781, file: !199, line: 285, baseType: !4784, size: 64, offset: 384)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4781, file: !199, line: 286, baseType: !4784, size: 64, offset: 448)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4781, file: !199, line: 287, baseType: !4784, size: 64, offset: 512)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4781, file: !199, line: 288, baseType: !4784, size: 64, offset: 576)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4781, file: !199, line: 289, baseType: !4784, size: 64, offset: 640)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4781, file: !199, line: 290, baseType: !4784, size: 64, offset: 704)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4781, file: !199, line: 291, baseType: !4784, size: 64, offset: 768)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4781, file: !199, line: 292, baseType: !4784, size: 64, offset: 832)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4781, file: !199, line: 293, baseType: !4784, size: 64, offset: 896)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4781, file: !199, line: 294, baseType: !4784, size: 64, offset: 960)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4781, file: !199, line: 295, baseType: !4784, size: 64, offset: 1024)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4781, file: !199, line: 296, baseType: !4784, size: 64, offset: 1088)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4781, file: !199, line: 297, baseType: !4784, size: 64, offset: 1152)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4781, file: !199, line: 298, baseType: !4784, size: 64, offset: 1216)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4781, file: !199, line: 299, baseType: !4784, size: 64, offset: 1280)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4781, file: !199, line: 300, baseType: !4784, size: 64, offset: 1344)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4781, file: !199, line: 301, baseType: !4784, size: 64, offset: 1408)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4390, file: !192, line: 470, baseType: !4810, size: 64, offset: 768)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4812, line: 82, size: 1408, elements: !4813)
!4812 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4813 = !{!4814, !4815, !4816, !4817, !4818, !4819, !4820, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4877, !4880, !4881}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4811, file: !4812, line: 83, baseType: !453, size: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4811, file: !4812, line: 84, baseType: !453, size: 64, offset: 64)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4811, file: !4812, line: 85, baseType: !4753, size: 64, offset: 128)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4811, file: !4812, line: 86, baseType: !4470, size: 64, offset: 192)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4811, file: !4812, line: 87, baseType: !4470, size: 64, offset: 256)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4811, file: !4812, line: 88, baseType: !4470, size: 64, offset: 320)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4811, file: !4812, line: 90, baseType: !4821, size: 64, offset: 384)
!4821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4822, size: 64)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{!7, !4753, !4824}
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !186, line: 95, size: 1152, elements: !4826)
!4826 = !{!4827, !4828, !4829, !4830, !4831, !4832, !4833, !4837, !4841, !4842, !4843, !4844, !4845, !4853, !4854, !4855, !4856, !4857, !4858}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4825, file: !186, line: 96, baseType: !453, size: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4825, file: !186, line: 97, baseType: !4810, size: 64, offset: 64)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4825, file: !186, line: 99, baseType: !1006, size: 64, offset: 128)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4825, file: !186, line: 100, baseType: !453, size: 64, offset: 192)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4825, file: !186, line: 102, baseType: !696, size: 8, offset: 256)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4825, file: !186, line: 103, baseType: !185, size: 32, offset: 288)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4825, file: !186, line: 105, baseType: !4834, size: 64, offset: 320)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4836)
!4836 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !186, line: 105, flags: DIFlagFwdDecl)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4825, file: !186, line: 106, baseType: !4838, size: 64, offset: 384)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4840)
!4840 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !186, line: 106, flags: DIFlagFwdDecl)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4825, file: !186, line: 108, baseType: !4784, size: 64, offset: 448)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4825, file: !186, line: 109, baseType: !4775, size: 64, offset: 512)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4825, file: !186, line: 110, baseType: !4784, size: 64, offset: 576)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4825, file: !186, line: 111, baseType: !4775, size: 64, offset: 640)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4825, file: !186, line: 112, baseType: !4846, size: 64, offset: 704)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!7, !4753, !4849}
!4849 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !199, line: 52, baseType: !4850)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !199, line: 50, size: 32, elements: !4851)
!4851 = !{!4852}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4850, file: !199, line: 51, baseType: !7, size: 32)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4825, file: !186, line: 113, baseType: !4784, size: 64, offset: 768)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4825, file: !186, line: 114, baseType: !4470, size: 64, offset: 832)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4825, file: !186, line: 115, baseType: !4470, size: 64, offset: 896)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4825, file: !186, line: 117, baseType: !4779, size: 64, offset: 960)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4825, file: !186, line: 118, baseType: !4775, size: 64, offset: 1024)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4825, file: !186, line: 120, baseType: !4859, size: 64, offset: 1088)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !186, line: 120, flags: DIFlagFwdDecl)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4811, file: !4812, line: 91, baseType: !4766, size: 64, offset: 448)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4811, file: !4812, line: 92, baseType: !4784, size: 64, offset: 512)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4811, file: !4812, line: 93, baseType: !4775, size: 64, offset: 576)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4811, file: !4812, line: 94, baseType: !4784, size: 64, offset: 640)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4811, file: !4812, line: 95, baseType: !4775, size: 64, offset: 704)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4811, file: !4812, line: 97, baseType: !4784, size: 64, offset: 768)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4811, file: !4812, line: 98, baseType: !4784, size: 64, offset: 832)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4811, file: !4812, line: 100, baseType: !4846, size: 64, offset: 896)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4811, file: !4812, line: 101, baseType: !4784, size: 64, offset: 960)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4811, file: !4812, line: 103, baseType: !4784, size: 64, offset: 1024)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4811, file: !4812, line: 105, baseType: !4784, size: 64, offset: 1088)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4811, file: !4812, line: 107, baseType: !4779, size: 64, offset: 1152)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4811, file: !4812, line: 109, baseType: !4874, size: 64, offset: 1216)
!4874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 64)
!4875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4876)
!4876 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4812, line: 109, flags: DIFlagFwdDecl)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4811, file: !4812, line: 111, baseType: !4878, size: 64, offset: 1280)
!4878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4879, size: 64)
!4879 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4812, line: 111, flags: DIFlagFwdDecl)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4811, file: !4812, line: 112, baseType: !1015, offset: 1344)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4811, file: !4812, line: 114, baseType: !696, size: 8, offset: 1344)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4390, file: !192, line: 471, baseType: !4824, size: 64, offset: 832)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !4390, file: !192, line: 473, baseType: !726, size: 64, offset: 896)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4390, file: !192, line: 475, baseType: !726, size: 64, offset: 960)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4390, file: !192, line: 480, baseType: !1108, size: 192, offset: 1024)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !4390, file: !192, line: 484, baseType: !4887, size: 576, offset: 1216)
!4887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !192, line: 361, size: 576, elements: !4888)
!4888 = !{!4889, !4890, !4891, !4892, !4893, !4894}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4887, file: !192, line: 362, baseType: !445, size: 128)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4887, file: !192, line: 363, baseType: !445, size: 128, offset: 128)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4887, file: !192, line: 364, baseType: !445, size: 128, offset: 256)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4887, file: !192, line: 365, baseType: !445, size: 128, offset: 384)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4887, file: !192, line: 366, baseType: !696, size: 8, offset: 512)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4887, file: !192, line: 367, baseType: !191, size: 32, offset: 544)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4390, file: !192, line: 485, baseType: !4896, size: 2304, offset: 1792)
!4896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !199, line: 565, size: 2304, elements: !4897)
!4897 = !{!4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972, !4982, !4986}
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4896, file: !199, line: 566, baseType: !4849, size: 32)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4896, file: !199, line: 567, baseType: !14, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4896, file: !199, line: 568, baseType: !14, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4896, file: !199, line: 569, baseType: !696, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4896, file: !199, line: 570, baseType: !696, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4896, file: !199, line: 571, baseType: !696, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4896, file: !199, line: 572, baseType: !696, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4896, file: !199, line: 573, baseType: !696, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4896, file: !199, line: 574, baseType: !696, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4896, file: !199, line: 575, baseType: !696, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4896, file: !199, line: 576, baseType: !696, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4896, file: !199, line: 577, baseType: !862, size: 32, offset: 64)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4896, file: !199, line: 578, baseType: !884, offset: 96)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4896, file: !199, line: 580, baseType: !445, size: 128, offset: 128)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4896, file: !199, line: 581, baseType: !1700, size: 192, offset: 256)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4896, file: !199, line: 582, baseType: !4914, size: 64, offset: 448)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4916, line: 43, size: 1472, elements: !4917)
!4916 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4917 = !{!4918, !4919, !4920, !4921, !4922, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4915, file: !4916, line: 44, baseType: !453, size: 64)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4915, file: !4916, line: 45, baseType: !7, size: 32, offset: 64)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4915, file: !4916, line: 46, baseType: !445, size: 128, offset: 128)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4915, file: !4916, line: 47, baseType: !884, offset: 256)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4915, file: !4916, line: 48, baseType: !4923, size: 64, offset: 256)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !199, line: 533, flags: DIFlagFwdDecl)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4915, file: !4916, line: 49, baseType: !2393, size: 320, offset: 320)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4915, file: !4916, line: 50, baseType: !473, size: 64, offset: 640)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4915, file: !4916, line: 51, baseType: !1495, size: 64, offset: 704)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4915, file: !4916, line: 52, baseType: !1495, size: 64, offset: 768)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4915, file: !4916, line: 53, baseType: !1495, size: 64, offset: 832)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4915, file: !4916, line: 54, baseType: !1495, size: 64, offset: 896)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4915, file: !4916, line: 55, baseType: !1495, size: 64, offset: 960)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4915, file: !4916, line: 56, baseType: !473, size: 64, offset: 1024)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4915, file: !4916, line: 57, baseType: !473, size: 64, offset: 1088)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4915, file: !4916, line: 58, baseType: !473, size: 64, offset: 1152)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4915, file: !4916, line: 59, baseType: !473, size: 64, offset: 1216)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4915, file: !4916, line: 60, baseType: !473, size: 64, offset: 1280)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4915, file: !4916, line: 61, baseType: !4753, size: 64, offset: 1344)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4915, file: !4916, line: 62, baseType: !696, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4915, file: !4916, line: 63, baseType: !696, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4896, file: !199, line: 583, baseType: !696, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4896, file: !199, line: 584, baseType: !696, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4896, file: !199, line: 585, baseType: !696, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4896, file: !199, line: 586, baseType: !14, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4896, file: !199, line: 587, baseType: !14, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4896, file: !199, line: 592, baseType: !1487, size: 512, offset: 576)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4896, file: !199, line: 593, baseType: !492, size: 64, offset: 1088)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4896, file: !199, line: 594, baseType: !1960, size: 256, offset: 1152)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4896, file: !199, line: 595, baseType: !1254, size: 128, offset: 1408)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4896, file: !199, line: 596, baseType: !4923, size: 64, offset: 1536)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4896, file: !199, line: 597, baseType: !544, size: 32, offset: 1600)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4896, file: !199, line: 598, baseType: !544, size: 32, offset: 1632)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4896, file: !199, line: 599, baseType: !14, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4896, file: !199, line: 600, baseType: !14, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4896, file: !199, line: 601, baseType: !14, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4896, file: !199, line: 602, baseType: !14, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4896, file: !199, line: 603, baseType: !14, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4896, file: !199, line: 604, baseType: !696, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4896, file: !199, line: 605, baseType: !14, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4896, file: !199, line: 606, baseType: !14, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4896, file: !199, line: 607, baseType: !14, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4896, file: !199, line: 608, baseType: !14, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4896, file: !199, line: 609, baseType: !14, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4896, file: !199, line: 610, baseType: !14, size: 32, offset: 1696)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4896, file: !199, line: 611, baseType: !198, size: 32, offset: 1728)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4896, file: !199, line: 612, baseType: !206, size: 32, offset: 1760)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4896, file: !199, line: 613, baseType: !7, size: 32, offset: 1792)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4896, file: !199, line: 614, baseType: !7, size: 32, offset: 1824)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4896, file: !199, line: 615, baseType: !492, size: 64, offset: 1856)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4896, file: !199, line: 616, baseType: !492, size: 64, offset: 1920)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4896, file: !199, line: 617, baseType: !492, size: 64, offset: 1984)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4896, file: !199, line: 618, baseType: !492, size: 64, offset: 2048)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4896, file: !199, line: 620, baseType: !4973, size: 64, offset: 2112)
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 64)
!4974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !199, line: 536, size: 256, elements: !4975)
!4975 = !{!4976, !4977, !4978, !4979}
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4974, file: !199, line: 537, baseType: !884)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4974, file: !199, line: 538, baseType: !14, size: 32)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4974, file: !199, line: 540, baseType: !445, size: 128, offset: 64)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4974, file: !199, line: 543, baseType: !4980, size: 64, offset: 192)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !199, line: 534, flags: DIFlagFwdDecl)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4896, file: !199, line: 621, baseType: !4983, size: 64, offset: 2176)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{null, !4753, !1643}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4896, file: !199, line: 622, baseType: !4987, size: 64, offset: 2240)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !199, line: 622, flags: DIFlagFwdDecl)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !4390, file: !192, line: 486, baseType: !4990, size: 64, offset: 4096)
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !199, line: 642, size: 1792, elements: !4992)
!4992 = !{!4993, !4994, !4995, !4999, !5000, !5001}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4991, file: !199, line: 643, baseType: !4781, size: 1472)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4991, file: !199, line: 644, baseType: !4784, size: 64, offset: 1472)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4991, file: !199, line: 645, baseType: !4996, size: 64, offset: 1536)
!4996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4997, size: 64)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{null, !4753, !696}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4991, file: !199, line: 646, baseType: !4784, size: 64, offset: 1600)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4991, file: !199, line: 647, baseType: !4775, size: 64, offset: 1664)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4991, file: !199, line: 648, baseType: !4775, size: 64, offset: 1728)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !4390, file: !192, line: 493, baseType: !5003, size: 64, offset: 4160)
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !5005, line: 13, flags: DIFlagFwdDecl)
!5005 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !4390, file: !192, line: 499, baseType: !445, size: 128, offset: 4224)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !4390, file: !192, line: 502, baseType: !5008, size: 64, offset: 4352)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5010)
!5010 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !192, line: 502, flags: DIFlagFwdDecl)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4390, file: !192, line: 504, baseType: !3925, size: 64, offset: 4416)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !4390, file: !192, line: 505, baseType: !492, size: 64, offset: 4480)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !4390, file: !192, line: 510, baseType: !492, size: 64, offset: 4544)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !4390, file: !192, line: 511, baseType: !5015, size: 64, offset: 4608)
!5015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5017)
!5017 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !192, line: 511, flags: DIFlagFwdDecl)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4390, file: !192, line: 513, baseType: !5019, size: 64, offset: 4672)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 64)
!5020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !192, line: 288, size: 128, elements: !5021)
!5021 = !{!5022, !5023}
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5020, file: !192, line: 293, baseType: !14, size: 32)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5020, file: !192, line: 294, baseType: !473, size: 64, offset: 64)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !4390, file: !192, line: 515, baseType: !445, size: 128, offset: 4736)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !4390, file: !192, line: 526, baseType: !5026, offset: 4864)
!5026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5027, line: 5, elements: !898)
!5027 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4390, file: !192, line: 528, baseType: !5029, size: 64, offset: 4864)
!5029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5030, size: 64)
!5030 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5031, line: 14, flags: DIFlagFwdDecl)
!5031 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4390, file: !192, line: 529, baseType: !5033, size: 64, offset: 4928)
!5033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5034, size: 64)
!5034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5035, line: 17, size: 192, elements: !5036)
!5035 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5036 = !{!5037, !5038, !5121}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5034, file: !5035, line: 18, baseType: !5033, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5034, file: !5035, line: 19, baseType: !5039, size: 64, offset: 64)
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5040, size: 64)
!5040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5041)
!5041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5035, line: 110, size: 1152, elements: !5042)
!5042 = !{!5043, !5047, !5051, !5057, !5063, !5067, !5071, !5076, !5080, !5081, !5085, !5089, !5093, !5104, !5105, !5106, !5107, !5117}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5041, file: !5035, line: 111, baseType: !5044, size: 64)
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 64)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!5033, !5033}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5041, file: !5035, line: 112, baseType: !5048, size: 64, offset: 64)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{null, !5033}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5041, file: !5035, line: 113, baseType: !5052, size: 64, offset: 128)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!696, !5055}
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5034)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5041, file: !5035, line: 114, baseType: !5058, size: 64, offset: 192)
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5059, size: 64)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{!2416, !5055, !5061}
!5061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5062, size: 64)
!5062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4390)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5041, file: !5035, line: 116, baseType: !5064, size: 64, offset: 256)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{!696, !5055, !453}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5041, file: !5035, line: 118, baseType: !5068, size: 64, offset: 320)
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!7, !5055, !453, !14, !726, !750}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5041, file: !5035, line: 123, baseType: !5072, size: 64, offset: 384)
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5073, size: 64)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!7, !5055, !453, !5075, !750}
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5041, file: !5035, line: 126, baseType: !5077, size: 64, offset: 448)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!453, !5055}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5041, file: !5035, line: 127, baseType: !5077, size: 64, offset: 512)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5041, file: !5035, line: 128, baseType: !5082, size: 64, offset: 576)
!5082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5083, size: 64)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{!5033, !5055}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5041, file: !5035, line: 130, baseType: !5086, size: 64, offset: 640)
!5086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5087, size: 64)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!5033, !5055, !5033}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5041, file: !5035, line: 133, baseType: !5090, size: 64, offset: 704)
!5090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5091, size: 64)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{!5033, !5055, !453}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5041, file: !5035, line: 135, baseType: !5094, size: 64, offset: 768)
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 64)
!5095 = !DISubroutineType(types: !5096)
!5096 = !{!7, !5055, !453, !453, !14, !14, !5097}
!5097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5098, size: 64)
!5098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5035, line: 43, size: 640, elements: !5099)
!5099 = !{!5100, !5101, !5102}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5098, file: !5035, line: 44, baseType: !5033, size: 64)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5098, file: !5035, line: 45, baseType: !14, size: 32, offset: 64)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5098, file: !5035, line: 46, baseType: !5103, size: 512, offset: 128)
!5103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 512, elements: !1525)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5041, file: !5035, line: 140, baseType: !5086, size: 64, offset: 832)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5041, file: !5035, line: 143, baseType: !5082, size: 64, offset: 896)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5041, file: !5035, line: 145, baseType: !5044, size: 64, offset: 960)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5041, file: !5035, line: 146, baseType: !5108, size: 64, offset: 1024)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!7, !5055, !5111}
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5035, line: 29, size: 128, elements: !5113)
!5113 = !{!5114, !5115, !5116}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5112, file: !5035, line: 30, baseType: !14, size: 32)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5112, file: !5035, line: 31, baseType: !14, size: 32, offset: 32)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5112, file: !5035, line: 32, baseType: !5055, size: 64, offset: 64)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5041, file: !5035, line: 148, baseType: !5118, size: 64, offset: 1088)
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 64)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!7, !5055, !4753}
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5034, file: !5035, line: 20, baseType: !4753, size: 64, offset: 128)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !4390, file: !192, line: 534, baseType: !974, size: 32, offset: 4992)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4390, file: !192, line: 535, baseType: !862, size: 32, offset: 5024)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !4390, file: !192, line: 537, baseType: !884, offset: 5056)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !4390, file: !192, line: 538, baseType: !445, size: 128, offset: 5056)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4390, file: !192, line: 540, baseType: !5127, size: 64, offset: 5184)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5129, line: 54, size: 960, elements: !5130)
!5129 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5130 = !{!5131, !5132, !5133, !5134, !5135, !5136, !5137, !5141, !5145, !5146, !5147, !5148, !5152, !5156, !5157}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5128, file: !5129, line: 55, baseType: !453, size: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5128, file: !5129, line: 56, baseType: !1006, size: 64, offset: 64)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5128, file: !5129, line: 58, baseType: !4470, size: 64, offset: 128)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5128, file: !5129, line: 59, baseType: !4470, size: 64, offset: 192)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5128, file: !5129, line: 60, baseType: !4399, size: 64, offset: 256)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5128, file: !5129, line: 62, baseType: !4766, size: 64, offset: 320)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5128, file: !5129, line: 63, baseType: !5138, size: 64, offset: 384)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!733, !4753, !4773}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5128, file: !5129, line: 65, baseType: !5142, size: 64, offset: 448)
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5143, size: 64)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{null, !5127}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5128, file: !5129, line: 66, baseType: !4775, size: 64, offset: 512)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5128, file: !5129, line: 68, baseType: !4784, size: 64, offset: 576)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5128, file: !5129, line: 70, baseType: !4506, size: 64, offset: 640)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5128, file: !5129, line: 71, baseType: !5149, size: 64, offset: 704)
!5149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5150, size: 64)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{!2416, !4753}
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5128, file: !5129, line: 73, baseType: !5153, size: 64, offset: 768)
!5153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5154, size: 64)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{null, !4753, !2035, !2036}
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5128, file: !5129, line: 75, baseType: !4779, size: 64, offset: 832)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5128, file: !5129, line: 77, baseType: !4878, size: 64, offset: 896)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4390, file: !192, line: 541, baseType: !4470, size: 64, offset: 5248)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4390, file: !192, line: 543, baseType: !4775, size: 64, offset: 5312)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !4390, file: !192, line: 544, baseType: !5161, size: 64, offset: 5376)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !192, line: 45, flags: DIFlagFwdDecl)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !4390, file: !192, line: 545, baseType: !5164, size: 64, offset: 5440)
!5164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5165, size: 64)
!5165 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !192, line: 47, flags: DIFlagFwdDecl)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !4390, file: !192, line: 547, baseType: !696, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4390, file: !192, line: 548, baseType: !696, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !4390, file: !192, line: 549, baseType: !696, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !4390, file: !192, line: 550, baseType: !696, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !4359, file: !4342, line: 69, baseType: !4399, size: 64, offset: 5952)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !4359, file: !4342, line: 70, baseType: !7, size: 32, offset: 6016)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !4359, file: !4342, line: 70, baseType: !7, size: 32, offset: 6048)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4359, file: !4342, line: 71, baseType: !5174, size: 64, offset: 6080)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !4342, line: 48, size: 808, elements: !5176)
!5176 = !{!5177, !5179}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !5175, file: !4342, line: 49, baseType: !5178, size: 296)
!5178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 296, elements: !2207)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !5175, file: !4342, line: 50, baseType: !5180, size: 512, offset: 296)
!5180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 512, elements: !4294)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !4359, file: !4342, line: 75, baseType: !5182, size: 448, offset: 6144)
!5182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1961, line: 124, size: 448, elements: !5183)
!5183 = !{!5184, !5185, !5186}
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5182, file: !1961, line: 125, baseType: !1960, size: 256)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5182, file: !1961, line: 126, baseType: !460, size: 128, align: 64, offset: 256)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5182, file: !1961, line: 129, baseType: !3090, size: 64, offset: 384)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !4353, file: !4342, line: 153, baseType: !5188, offset: 256)
!5188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4358, elements: !470)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !4341, file: !4342, line: 187, baseType: !4359, size: 6592, offset: 448)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4341, file: !4342, line: 189, baseType: !5191, size: 64, offset: 7040)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 64)
!5192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5193)
!5193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !225, line: 1844, size: 960, elements: !5194)
!5194 = !{!5195, !5200, !5283, !5287, !5291, !5295, !5296, !5300, !5304, !5308, !5314, !5318, !5344, !5348, !5349}
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !5193, file: !225, line: 1845, baseType: !5196, size: 64)
!5196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5197, size: 64)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{!5199, !4334}
!5199 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !4336, line: 515, baseType: !14)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5193, file: !225, line: 1846, baseType: !5201, size: 64, offset: 64)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 64)
!5202 = !DISubroutineType(types: !5203)
!5203 = !{!7, !5204, !5282}
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 64)
!5205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !4336, line: 22, size: 1344, elements: !5206)
!5206 = !{!5207, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5280, !5281}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !5205, file: !4336, line: 23, baseType: !974, size: 32)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !5205, file: !4336, line: 24, baseType: !7, size: 32, offset: 32)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !5205, file: !4336, line: 25, baseType: !797, size: 64, offset: 64)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !5205, file: !4336, line: 26, baseType: !969, size: 64, offset: 128)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !5205, file: !4336, line: 27, baseType: !1108, size: 192, offset: 192)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !5205, file: !4336, line: 28, baseType: !726, size: 64, offset: 384)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !5205, file: !4336, line: 29, baseType: !726, size: 64, offset: 448)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !5205, file: !4336, line: 30, baseType: !7, size: 32, offset: 512)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !5205, file: !4336, line: 31, baseType: !696, size: 8, offset: 544)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !5205, file: !4336, line: 33, baseType: !445, size: 128, offset: 576)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !5205, file: !4336, line: 35, baseType: !5204, size: 64, offset: 704)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !5205, file: !4336, line: 36, baseType: !1551, size: 8, offset: 768)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !5205, file: !4336, line: 37, baseType: !4358, size: 64, offset: 832)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !5205, file: !4336, line: 39, baseType: !14, size: 32, offset: 896)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !5205, file: !4336, line: 41, baseType: !884, offset: 928)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !5205, file: !4336, line: 42, baseType: !4340, size: 64, offset: 960)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !5205, file: !4336, line: 43, baseType: !5224, size: 64, offset: 1024)
!5224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 64)
!5225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !213, line: 165, size: 4672, elements: !5226)
!5226 = !{!5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5273, !5274, !5275, !5276, !5278, !5279}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5225, file: !213, line: 166, baseType: !492, size: 64)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5225, file: !213, line: 167, baseType: !594, size: 192, align: 64, offset: 64)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !5225, file: !213, line: 168, baseType: !445, size: 128, offset: 256)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5225, file: !213, line: 169, baseType: !473, size: 64, offset: 384)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !5225, file: !213, line: 170, baseType: !473, size: 64, offset: 448)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5225, file: !213, line: 172, baseType: !4743, size: 32, offset: 512)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !5225, file: !213, line: 173, baseType: !14, size: 32, offset: 544)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !5225, file: !213, line: 174, baseType: !14, size: 32, offset: 576)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !5225, file: !213, line: 175, baseType: !14, size: 32, offset: 608)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !5225, file: !213, line: 175, baseType: !14, size: 32, offset: 640)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !5225, file: !213, line: 181, baseType: !532, size: 64, offset: 704)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !5225, file: !213, line: 183, baseType: !5239, size: 2688, offset: 768)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !213, line: 107, size: 2688, elements: !5240)
!5240 = !{!5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5266, !5267, !5268, !5269, !5270, !5271, !5272}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !5239, file: !213, line: 108, baseType: !5224, size: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5239, file: !213, line: 110, baseType: !473, size: 64, offset: 64)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !5239, file: !213, line: 111, baseType: !473, size: 64, offset: 128)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !5239, file: !213, line: 113, baseType: !445, size: 128, offset: 192)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !5239, file: !213, line: 114, baseType: !445, size: 128, offset: 320)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !5239, file: !213, line: 115, baseType: !445, size: 128, offset: 448)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !5239, file: !213, line: 116, baseType: !445, size: 128, offset: 576)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5239, file: !213, line: 117, baseType: !884, offset: 704)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !5239, file: !213, line: 119, baseType: !5250, size: 256, offset: 704)
!5250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3196, size: 256, elements: !1356)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !5239, file: !213, line: 121, baseType: !473, size: 64, offset: 960)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !5239, file: !213, line: 123, baseType: !473, size: 64, offset: 1024)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !5239, file: !213, line: 124, baseType: !473, size: 64, offset: 1088)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !5239, file: !213, line: 125, baseType: !473, size: 64, offset: 1152)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !5239, file: !213, line: 126, baseType: !473, size: 64, offset: 1216)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !5239, file: !213, line: 127, baseType: !473, size: 64, offset: 1280)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !5239, file: !213, line: 135, baseType: !473, size: 64, offset: 1344)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !5239, file: !213, line: 136, baseType: !473, size: 64, offset: 1408)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !5239, file: !213, line: 138, baseType: !5260, size: 128, offset: 1472)
!5260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !5261, line: 76, size: 128, elements: !5262)
!5261 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!5262 = !{!5263, !5264, !5265}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !5260, file: !5261, line: 78, baseType: !3196, size: 64)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5260, file: !5261, line: 80, baseType: !14, size: 32, offset: 64)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5260, file: !5261, line: 81, baseType: !1322, offset: 96)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !5239, file: !213, line: 139, baseType: !7, size: 32, offset: 1600)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !5239, file: !213, line: 140, baseType: !212, size: 32, offset: 1632)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !5239, file: !213, line: 142, baseType: !884, offset: 1664)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !5239, file: !213, line: 143, baseType: !445, size: 128, offset: 1664)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !5239, file: !213, line: 144, baseType: !3085, size: 704, offset: 1792)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !5239, file: !213, line: 146, baseType: !473, size: 64, offset: 2496)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !5239, file: !213, line: 148, baseType: !445, size: 128, offset: 2560)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !5225, file: !213, line: 184, baseType: !445, size: 128, offset: 3456)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !5225, file: !213, line: 190, baseType: !1254, size: 128, offset: 3584)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5225, file: !213, line: 192, baseType: !4753, size: 64, offset: 3712)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5225, file: !213, line: 193, baseType: !5277, size: 512, offset: 3776)
!5277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 512, elements: !4294)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5225, file: !213, line: 194, baseType: !4753, size: 64, offset: 4288)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !5225, file: !213, line: 196, baseType: !2393, size: 320, offset: 4352)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !5205, file: !4336, line: 46, baseType: !7, size: 32, offset: 1088)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !5205, file: !4336, line: 48, baseType: !1108, size: 192, offset: 1152)
!5282 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !438, line: 150, baseType: !14)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5193, file: !225, line: 1847, baseType: !5284, size: 64, offset: 128)
!5284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5285, size: 64)
!5285 = !DISubroutineType(types: !5286)
!5286 = !{null, !4340, !5282}
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !5193, file: !225, line: 1848, baseType: !5288, size: 64, offset: 192)
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5289, size: 64)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!7, !5204, !4362, !780, !14}
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5193, file: !225, line: 1849, baseType: !5292, size: 64, offset: 256)
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5293, size: 64)
!5293 = !DISubroutineType(types: !5294)
!5294 = !{!7, !5204, !5282, !14, !473}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5193, file: !225, line: 1850, baseType: !5292, size: 64, offset: 320)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !5193, file: !225, line: 1851, baseType: !5297, size: 64, offset: 384)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!14, !4340, !14}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5193, file: !225, line: 1853, baseType: !5301, size: 64, offset: 448)
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = !DISubroutineType(types: !5303)
!5303 = !{null, !4340}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !5193, file: !225, line: 1854, baseType: !5305, size: 64, offset: 512)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!7, !4340}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !5193, file: !225, line: 1855, baseType: !5309, size: 64, offset: 576)
!5309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5310, size: 64)
!5310 = !DISubroutineType(types: !5311)
!5311 = !{!7, !5204, !5312}
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5313, size: 64)
!5313 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !243, line: 51, flags: DIFlagFwdDecl)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !5193, file: !225, line: 1857, baseType: !5315, size: 64, offset: 640)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = !DISubroutineType(types: !5317)
!5317 = !{null, !5204, !473}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !5193, file: !225, line: 1858, baseType: !5319, size: 64, offset: 704)
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 64)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{!7, !4340, !4362, !14, !5322, !726}
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !225, line: 354, baseType: !5323)
!5323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5324, size: 64)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{!7, !5326, !14, !726}
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 64)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !5328, line: 106, size: 512, elements: !5329)
!5328 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!5329 = !{!5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5339, !5340}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5327, file: !5328, line: 107, baseType: !494, size: 64)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5327, file: !5328, line: 108, baseType: !494, size: 64, offset: 64)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !5327, file: !5328, line: 109, baseType: !494, size: 64, offset: 128)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5327, file: !5328, line: 110, baseType: !1552, size: 8, offset: 192)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !5327, file: !5328, line: 111, baseType: !1552, size: 8, offset: 200)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !5327, file: !5328, line: 112, baseType: !1552, size: 8, offset: 208)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5327, file: !5328, line: 113, baseType: !1552, size: 8, offset: 216)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !5327, file: !5328, line: 114, baseType: !5338, size: 32, offset: 224)
!5338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 32, elements: !1356)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5327, file: !5328, line: 115, baseType: !494, size: 64, offset: 256)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5327, file: !5328, line: 116, baseType: !5341, size: 192, offset: 320)
!5341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 192, elements: !5342)
!5342 = !{!5343}
!5343 = !DISubrange(count: 24)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5193, file: !225, line: 1860, baseType: !5345, size: 64, offset: 768)
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 64)
!5346 = !DISubroutineType(types: !5347)
!5347 = !{!733, !4340, !4773}
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5193, file: !225, line: 1861, baseType: !1006, size: 64, offset: 832)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !5193, file: !225, line: 1862, baseType: !5350, size: 64, offset: 896)
!5350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 64)
!5351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5352)
!5352 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !225, line: 41, flags: DIFlagFwdDecl)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4341, file: !4342, line: 190, baseType: !5354, size: 64, offset: 7104)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !225, line: 399, size: 14464, elements: !5356)
!5356 = !{!5357, !5487, !5609, !5610, !5613, !5616, !5620, !5621, !5622, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5681, !5690, !5691, !5692, !5693, !5694, !5724, !5725, !5726, !5727, !5728, !5729, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5802, !5803, !5804, !5805, !5808, !5809, !5842, !5843, !5844, !5845}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !5355, file: !225, line: 400, baseType: !5358, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5359, size: 64)
!5359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !225, line: 130, size: 2176, elements: !5360)
!5360 = !{!5361, !5362, !5365, !5368, !5369, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5383, !5390, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5485, !5486}
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5359, file: !225, line: 131, baseType: !5354, size: 64)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !5359, file: !225, line: 132, baseType: !5363, size: 64, offset: 64)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !225, line: 132, flags: DIFlagFwdDecl)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !5359, file: !225, line: 133, baseType: !5366, size: 64, offset: 128)
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5367, size: 64)
!5367 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !225, line: 133, flags: DIFlagFwdDecl)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !5359, file: !225, line: 135, baseType: !14, size: 32, offset: 192)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !5359, file: !225, line: 136, baseType: !5370, size: 32, offset: 224)
!5370 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !225, line: 66, baseType: !624)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5359, file: !225, line: 138, baseType: !7, size: 32, offset: 256)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !5359, file: !225, line: 139, baseType: !7, size: 32, offset: 288)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !5359, file: !225, line: 142, baseType: !14, size: 32, offset: 320)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !5359, file: !225, line: 143, baseType: !4362, size: 64, offset: 384)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !5359, file: !225, line: 145, baseType: !4334, size: 64, offset: 448)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !5359, file: !225, line: 146, baseType: !4334, size: 64, offset: 512)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !5359, file: !225, line: 148, baseType: !445, size: 128, offset: 576)
!5378 = !DIDerivedType(tag: DW_TAG_member, scope: !5359, file: !225, line: 157, baseType: !5379, size: 128, offset: 704)
!5379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5359, file: !225, line: 157, size: 128, elements: !5380)
!5380 = !{!5381, !5382}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5379, file: !225, line: 158, baseType: !437, size: 128)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !5379, file: !225, line: 159, baseType: !445, size: 128)
!5383 = !DIDerivedType(tag: DW_TAG_member, scope: !5359, file: !225, line: 167, baseType: !5384, size: 192, offset: 832)
!5384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5359, file: !225, line: 167, size: 192, elements: !5385)
!5385 = !{!5386, !5387, !5388, !5389}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5384, file: !225, line: 168, baseType: !594, size: 192, align: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !5384, file: !225, line: 169, baseType: !776, size: 128)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !5384, file: !225, line: 170, baseType: !726, size: 64)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5384, file: !225, line: 171, baseType: !7, size: 32)
!5390 = !DIDerivedType(tag: DW_TAG_member, scope: !5359, file: !225, line: 180, baseType: !5391, size: 256, offset: 1024)
!5391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5359, file: !225, line: 180, size: 256, elements: !5392)
!5392 = !{!5393, !5428}
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !5391, file: !225, line: 184, baseType: !5394, size: 192)
!5394 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5391, file: !225, line: 181, size: 192, elements: !5395)
!5395 = !{!5396, !5426}
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !5394, file: !225, line: 182, baseType: !5397, size: 64)
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5399, line: 73, size: 448, elements: !5400)
!5399 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5400 = !{!5401, !5402, !5415, !5420, !5425}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5398, file: !5399, line: 74, baseType: !5354, size: 64)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5398, file: !5399, line: 75, baseType: !5403, size: 64, offset: 64)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5399, line: 99, size: 704, elements: !5405)
!5405 = !{!5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5404, file: !5399, line: 100, baseType: !532, size: 64)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5404, file: !5399, line: 101, baseType: !544, size: 32, offset: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5404, file: !5399, line: 102, baseType: !544, size: 32, offset: 96)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5404, file: !5399, line: 105, baseType: !884, offset: 128)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5404, file: !5399, line: 107, baseType: !633, size: 16, offset: 128)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5404, file: !5399, line: 109, baseType: !2138, size: 128, offset: 192)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5404, file: !5399, line: 110, baseType: !5397, size: 64, offset: 320)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5404, file: !5399, line: 111, baseType: !1011, size: 64, offset: 384)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5404, file: !5399, line: 113, baseType: !1960, size: 256, offset: 448)
!5415 = !DIDerivedType(tag: DW_TAG_member, scope: !5398, file: !5399, line: 83, baseType: !5416, size: 128, offset: 128)
!5416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5398, file: !5399, line: 83, size: 128, elements: !5417)
!5417 = !{!5418, !5419}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5416, file: !5399, line: 84, baseType: !445, size: 128)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5416, file: !5399, line: 85, baseType: !2424, size: 64)
!5420 = !DIDerivedType(tag: DW_TAG_member, scope: !5398, file: !5399, line: 87, baseType: !5421, size: 128, offset: 256)
!5421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5398, file: !5399, line: 87, size: 128, elements: !5422)
!5422 = !{!5423, !5424}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5421, file: !5399, line: 88, baseType: !437, size: 128)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5421, file: !5399, line: 89, baseType: !460, size: 128, align: 64)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5398, file: !5399, line: 92, baseType: !14, size: 32, offset: 384)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5394, file: !225, line: 183, baseType: !5427, size: 128, offset: 64)
!5427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 128, elements: !634)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5391, file: !225, line: 190, baseType: !5429, size: 256)
!5429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5391, file: !225, line: 186, size: 256, elements: !5430)
!5430 = !{!5431, !5432, !5433}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5429, file: !225, line: 187, baseType: !14, size: 32)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5429, file: !225, line: 188, baseType: !445, size: 128, offset: 64)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5429, file: !225, line: 189, baseType: !5434, size: 64, offset: 192)
!5434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5435, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !225, line: 62, baseType: !5436)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{null, !5358, !5438}
!5438 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !4336, line: 58, baseType: !1551)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !5359, file: !225, line: 193, baseType: !4340, size: 64, offset: 1280)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5359, file: !225, line: 194, baseType: !4358, size: 64, offset: 1344)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !5359, file: !225, line: 200, baseType: !492, size: 64, offset: 1408)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !5359, file: !225, line: 202, baseType: !492, size: 64, offset: 1472)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !5359, file: !225, line: 212, baseType: !633, size: 16, offset: 1536)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !5359, file: !225, line: 218, baseType: !633, size: 16, offset: 1552)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !5359, file: !225, line: 221, baseType: !633, size: 16, offset: 1568)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !5359, file: !225, line: 229, baseType: !633, size: 16, offset: 1584)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5359, file: !225, line: 230, baseType: !633, size: 16, offset: 1600)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5359, file: !225, line: 232, baseType: !224, size: 32, offset: 1632)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5359, file: !225, line: 233, baseType: !1425, size: 32, offset: 1664)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5359, file: !225, line: 235, baseType: !14, size: 32, offset: 1696)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !5359, file: !225, line: 236, baseType: !473, size: 64, offset: 1728)
!5452 = !DIDerivedType(tag: DW_TAG_member, scope: !5359, file: !225, line: 238, baseType: !5453, size: 256, offset: 1792)
!5453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5359, file: !225, line: 238, size: 256, elements: !5454)
!5454 = !{!5455, !5484}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5453, file: !225, line: 239, baseType: !5456, size: 256)
!5456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5457, line: 23, size: 256, elements: !5458)
!5457 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5458 = !{!5459, !5481, !5483}
!5459 = !DIDerivedType(tag: DW_TAG_member, scope: !5456, file: !5457, line: 24, baseType: !5460, size: 128)
!5460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5456, file: !5457, line: 24, size: 128, elements: !5461)
!5461 = !{!5462, !5474}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5460, file: !5457, line: 25, baseType: !5463, size: 128)
!5463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5464, line: 58, size: 128, elements: !5465)
!5464 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5465 = !{!5466, !5467, !5472, !5473}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5463, file: !5464, line: 59, baseType: !1146, size: 64)
!5467 = !DIDerivedType(tag: DW_TAG_member, scope: !5463, file: !5464, line: 60, baseType: !5468, size: 32, offset: 64)
!5468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5463, file: !5464, line: 60, size: 32, elements: !5469)
!5469 = !{!5470, !5471}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5468, file: !5464, line: 61, baseType: !14, size: 32)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5468, file: !5464, line: 62, baseType: !544, size: 32)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5463, file: !5464, line: 65, baseType: !1192, size: 16, offset: 96)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5463, file: !5464, line: 65, baseType: !1192, size: 16, offset: 112)
!5474 = !DIDerivedType(tag: DW_TAG_member, scope: !5460, file: !5457, line: 26, baseType: !5475, size: 128)
!5475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5460, file: !5457, line: 26, size: 128, elements: !5476)
!5476 = !{!5477, !5478, !5479, !5480}
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5475, file: !5457, line: 27, baseType: !1146, size: 64)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5475, file: !5457, line: 28, baseType: !14, size: 32, offset: 64)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5475, file: !5457, line: 30, baseType: !1192, size: 16, offset: 96)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5475, file: !5457, line: 30, baseType: !1192, size: 16, offset: 112)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5456, file: !5457, line: 34, baseType: !5482, size: 64, offset: 128)
!5482 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5457, line: 17, baseType: !3877)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5456, file: !5457, line: 35, baseType: !726, size: 64, offset: 192)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5453, file: !225, line: 240, baseType: !492, size: 64)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !5359, file: !225, line: 246, baseType: !5434, size: 64, offset: 2048)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !5359, file: !225, line: 247, baseType: !726, size: 64, offset: 2112)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !5355, file: !225, line: 401, baseType: !5488, size: 64, offset: 64)
!5488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5489, size: 64)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !231, line: 101, size: 4992, elements: !5490)
!5490 = !{!5491, !5603, !5604, !5605, !5606, !5607}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5489, file: !231, line: 103, baseType: !5492, size: 64)
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5493, size: 64)
!5493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !231, line: 66, size: 2240, elements: !5494)
!5494 = !{!5495, !5496, !5578, !5579, !5580, !5593, !5594, !5595, !5597, !5598, !5602}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5493, file: !231, line: 69, baseType: !2424, size: 64)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5493, file: !231, line: 72, baseType: !5497, size: 1408, offset: 64)
!5497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !231, line: 29, size: 1408, elements: !5498)
!5498 = !{!5499, !5503, !5507, !5511, !5515, !5519, !5523, !5527, !5532, !5536, !5540, !5546, !5550, !5551, !5555, !5559, !5563, !5567, !5568, !5572, !5573, !5577}
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5497, file: !231, line: 30, baseType: !5500, size: 64)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!7, !5354, !5492}
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5497, file: !231, line: 31, baseType: !5504, size: 64, offset: 64)
!5504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5505, size: 64)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{null, !5488}
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5497, file: !231, line: 32, baseType: !5508, size: 64, offset: 128)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!7, !5366, !14}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5497, file: !231, line: 33, baseType: !5512, size: 64, offset: 192)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{null, !5366, !14}
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5497, file: !231, line: 34, baseType: !5516, size: 64, offset: 256)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{null, !5366}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5497, file: !231, line: 36, baseType: !5520, size: 64, offset: 320)
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 64)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{!696, !5354, !5358, !4334}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5497, file: !231, line: 37, baseType: !5524, size: 64, offset: 384)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!696, !5366, !4334, !14}
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5497, file: !231, line: 38, baseType: !5528, size: 64, offset: 448)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DISubroutineType(types: !5530)
!5530 = !{!7, !5354, !5531, !4334}
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5358, size: 64)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5497, file: !231, line: 39, baseType: !5533, size: 64, offset: 512)
!5533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5534, size: 64)
!5534 = !DISubroutineType(types: !5535)
!5535 = !{null, !5354, !5358, !230}
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5497, file: !231, line: 40, baseType: !5537, size: 64, offset: 576)
!5537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{null, !5354, !5358, !5358}
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5497, file: !231, line: 41, baseType: !5541, size: 64, offset: 640)
!5541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5542, size: 64)
!5542 = !DISubroutineType(types: !5543)
!5543 = !{null, !14, !5544}
!5544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5545, size: 64)
!5545 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !231, line: 26, flags: DIFlagFwdDecl)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5497, file: !231, line: 42, baseType: !5547, size: 64, offset: 704)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{null, !5358}
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5497, file: !231, line: 43, baseType: !5547, size: 64, offset: 768)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5497, file: !231, line: 44, baseType: !5552, size: 64, offset: 832)
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!5553 = !DISubroutineType(types: !5554)
!5554 = !{null, !5366, !448, !696}
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5497, file: !231, line: 45, baseType: !5556, size: 64, offset: 896)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{!5358, !5366}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5497, file: !231, line: 46, baseType: !5560, size: 64, offset: 960)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!696, !5366}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5497, file: !231, line: 47, baseType: !5564, size: 64, offset: 1024)
!5564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5565, size: 64)
!5565 = !DISubroutineType(types: !5566)
!5566 = !{null, !5358, !492}
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5497, file: !231, line: 48, baseType: !5547, size: 64, offset: 1088)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5497, file: !231, line: 49, baseType: !5569, size: 64, offset: 1152)
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 64)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!5358, !5354, !5358}
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5497, file: !231, line: 50, baseType: !5569, size: 64, offset: 1216)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5497, file: !231, line: 51, baseType: !5574, size: 64, offset: 1280)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{null, !5397}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5497, file: !231, line: 52, baseType: !5574, size: 64, offset: 1344)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5493, file: !231, line: 74, baseType: !750, size: 64, offset: 1472)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5493, file: !231, line: 75, baseType: !750, size: 64, offset: 1536)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5493, file: !231, line: 76, baseType: !5581, size: 64, offset: 1600)
!5581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5582, size: 64)
!5582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !231, line: 57, size: 256, elements: !5583)
!5583 = !{!5584, !5585, !5589}
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5582, file: !231, line: 58, baseType: !4459, size: 128)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5582, file: !231, line: 59, baseType: !5586, size: 64, offset: 128)
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!1169, !5488, !733}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5582, file: !231, line: 60, baseType: !5590, size: 64, offset: 192)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{!1169, !5488, !453, !750}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5493, file: !231, line: 77, baseType: !453, size: 64, offset: 1664)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5493, file: !231, line: 78, baseType: !453, size: 64, offset: 1728)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5493, file: !231, line: 79, baseType: !5596, size: 32, offset: 1792)
!5596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5493, file: !231, line: 80, baseType: !1006, size: 64, offset: 1856)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5493, file: !231, line: 87, baseType: !5599, size: 176, offset: 1920)
!5599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 176, elements: !5600)
!5600 = !{!5601}
!5601 = !DISubrange(count: 22)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5493, file: !231, line: 88, baseType: !445, size: 128, offset: 2112)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5489, file: !231, line: 104, baseType: !726, size: 64, offset: 64)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5489, file: !231, line: 105, baseType: !4393, size: 512, offset: 128)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5489, file: !231, line: 106, baseType: !1108, size: 192, offset: 640)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5489, file: !231, line: 107, baseType: !14, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5489, file: !231, line: 108, baseType: !5608, size: 4096, offset: 896)
!5608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 4096, elements: !4294)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !5355, file: !225, line: 403, baseType: !4369, size: 128, offset: 128)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5355, file: !225, line: 405, baseType: !5611, size: 64, offset: 256)
!5611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5612, size: 64)
!5612 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !225, line: 43, flags: DIFlagFwdDecl)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !5355, file: !225, line: 406, baseType: !5614, size: 64, offset: 320)
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 64)
!5615 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !225, line: 42, flags: DIFlagFwdDecl)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !5355, file: !225, line: 408, baseType: !5617, size: 64, offset: 384)
!5617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5618, size: 64)
!5618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5619)
!5619 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !225, line: 408, flags: DIFlagFwdDecl)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !5355, file: !225, line: 411, baseType: !5363, size: 64, offset: 448)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5355, file: !225, line: 413, baseType: !14, size: 32, offset: 512)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !5355, file: !225, line: 416, baseType: !5623, size: 64, offset: 576)
!5623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5355, file: !225, line: 417, baseType: !14, size: 32, offset: 640)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !5355, file: !225, line: 419, baseType: !5224, size: 64, offset: 704)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !5355, file: !225, line: 425, baseType: !726, size: 64, offset: 768)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !5355, file: !225, line: 430, baseType: !473, size: 64, offset: 832)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !5355, file: !225, line: 436, baseType: !544, size: 32, offset: 896)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5355, file: !225, line: 442, baseType: !7, size: 32, offset: 928)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !5355, file: !225, line: 447, baseType: !2143, size: 32, offset: 960)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5355, file: !225, line: 449, baseType: !884, offset: 992)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5355, file: !225, line: 454, baseType: !4393, size: 512, offset: 1024)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !5355, file: !225, line: 459, baseType: !4399, size: 64, offset: 1536)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !5355, file: !225, line: 462, baseType: !5635, size: 128, offset: 1600)
!5635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !4342, line: 159, size: 128, elements: !5636)
!5636 = !{!5637, !5666, !5667, !5668, !5669}
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5635, file: !4342, line: 160, baseType: !5638, size: 64)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 64)
!5639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5640)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !225, line: 1664, size: 320, elements: !5641)
!5641 = !{!5642, !5656, !5657, !5660, !5665}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5640, file: !225, line: 1665, baseType: !5643, size: 64)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 64)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !225, line: 1660, baseType: !5645)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!5438, !5647}
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !225, line: 1651, size: 320, elements: !5649)
!5649 = !{!5650, !5651, !5652, !5653, !5654, !5655}
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5648, file: !225, line: 1652, baseType: !726, size: 64)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5648, file: !225, line: 1653, baseType: !726, size: 64, offset: 64)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5648, file: !225, line: 1654, baseType: !4362, size: 64, offset: 128)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5648, file: !225, line: 1655, baseType: !14, size: 32, offset: 192)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5648, file: !225, line: 1656, baseType: !633, size: 16, offset: 224)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5648, file: !225, line: 1657, baseType: !453, size: 64, offset: 256)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5640, file: !225, line: 1666, baseType: !5643, size: 64, offset: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5640, file: !225, line: 1667, baseType: !5658, size: 64, offset: 128)
!5658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5659, size: 64)
!5659 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !225, line: 1661, baseType: !5548)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5640, file: !225, line: 1668, baseType: !5661, size: 64, offset: 192)
!5661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5662, size: 64)
!5662 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !225, line: 1662, baseType: !5663)
!5663 = !DISubroutineType(types: !5664)
!5664 = !{null, !5358, !14}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5640, file: !225, line: 1669, baseType: !453, size: 64, offset: 256)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5635, file: !4342, line: 161, baseType: !650, size: 8, offset: 64)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5635, file: !4342, line: 162, baseType: !650, size: 8, offset: 72)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5635, file: !4342, line: 163, baseType: !650, size: 8, offset: 80)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5635, file: !4342, line: 164, baseType: !650, size: 8, offset: 88)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5355, file: !225, line: 466, baseType: !4753, size: 64, offset: 1728)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !5355, file: !225, line: 467, baseType: !206, size: 32, offset: 1792)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !5355, file: !225, line: 468, baseType: !14, size: 32, offset: 1824)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !5355, file: !225, line: 474, baseType: !473, size: 64, offset: 1856)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !5355, file: !225, line: 476, baseType: !14, size: 32, offset: 1920)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !5355, file: !225, line: 477, baseType: !14, size: 32, offset: 1952)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !5355, file: !225, line: 484, baseType: !14, size: 32, offset: 1984)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !5355, file: !225, line: 485, baseType: !7, size: 32, offset: 2016)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !5355, file: !225, line: 487, baseType: !5679, size: 64, offset: 2048)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !225, line: 44, flags: DIFlagFwdDecl)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !5355, file: !225, line: 488, baseType: !5682, size: 5120, offset: 2112)
!5682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5683, size: 5120, elements: !430)
!5683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !4336, line: 540, size: 320, elements: !5684)
!5684 = !{!5685, !5686, !5687, !5688, !5689}
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5683, file: !4336, line: 541, baseType: !492, size: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5683, file: !4336, line: 542, baseType: !492, size: 64, offset: 64)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5683, file: !4336, line: 543, baseType: !492, size: 64, offset: 128)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5683, file: !4336, line: 544, baseType: !862, size: 32, offset: 192)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5683, file: !4336, line: 545, baseType: !492, size: 64, offset: 256)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5355, file: !225, line: 490, baseType: !2393, size: 320, offset: 7232)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !5355, file: !225, line: 491, baseType: !1960, size: 256, offset: 7552)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !5355, file: !225, line: 493, baseType: !544, size: 32, offset: 7808)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5355, file: !225, line: 495, baseType: !445, size: 128, offset: 7872)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !5355, file: !225, line: 502, baseType: !5695, size: 896, offset: 8000)
!5695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !225, line: 321, size: 896, elements: !5696)
!5696 = !{!5697, !5698, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5695, file: !225, line: 322, baseType: !473, size: 64)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5695, file: !225, line: 323, baseType: !473, size: 64, offset: 64)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5695, file: !225, line: 324, baseType: !473, size: 64, offset: 128)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5695, file: !225, line: 326, baseType: !14, size: 32, offset: 192)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5695, file: !225, line: 327, baseType: !14, size: 32, offset: 224)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5695, file: !225, line: 328, baseType: !14, size: 32, offset: 256)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5695, file: !225, line: 329, baseType: !14, size: 32, offset: 288)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5695, file: !225, line: 330, baseType: !14, size: 32, offset: 320)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5695, file: !225, line: 331, baseType: !14, size: 32, offset: 352)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5695, file: !225, line: 332, baseType: !14, size: 32, offset: 384)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5695, file: !225, line: 333, baseType: !14, size: 32, offset: 416)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5695, file: !225, line: 334, baseType: !14, size: 32, offset: 448)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5695, file: !225, line: 335, baseType: !14, size: 32, offset: 480)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5695, file: !225, line: 336, baseType: !14, size: 32, offset: 512)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5695, file: !225, line: 337, baseType: !14, size: 32, offset: 544)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5695, file: !225, line: 338, baseType: !14, size: 32, offset: 576)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5695, file: !225, line: 339, baseType: !14, size: 32, offset: 608)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5695, file: !225, line: 340, baseType: !14, size: 32, offset: 640)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5695, file: !225, line: 341, baseType: !14, size: 32, offset: 672)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5695, file: !225, line: 342, baseType: !14, size: 32, offset: 704)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5695, file: !225, line: 344, baseType: !633, size: 16, offset: 736)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5695, file: !225, line: 345, baseType: !633, size: 16, offset: 752)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5695, file: !225, line: 346, baseType: !633, size: 16, offset: 768)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5695, file: !225, line: 348, baseType: !650, size: 8, offset: 784)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5695, file: !225, line: 349, baseType: !650, size: 8, offset: 792)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5695, file: !225, line: 350, baseType: !650, size: 8, offset: 800)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5695, file: !225, line: 351, baseType: !237, size: 32, offset: 832)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !5355, file: !225, line: 504, baseType: !14, size: 32, offset: 8896)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !5355, file: !225, line: 534, baseType: !14, size: 32, offset: 8928)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !5355, file: !225, line: 535, baseType: !14, size: 32, offset: 8960)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5355, file: !225, line: 536, baseType: !7, size: 32, offset: 8992)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !5355, file: !225, line: 537, baseType: !1108, size: 192, offset: 9024)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !5355, file: !225, line: 544, baseType: !5730, size: 64, offset: 9216)
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5731, size: 64)
!5731 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !225, line: 40, flags: DIFlagFwdDecl)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !5355, file: !225, line: 546, baseType: !445, size: 128, offset: 9280)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !5355, file: !225, line: 547, baseType: !884, offset: 9408)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5355, file: !225, line: 548, baseType: !3085, size: 704, offset: 9408)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5355, file: !225, line: 550, baseType: !1108, size: 192, offset: 10112)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !5355, file: !225, line: 551, baseType: !1108, size: 192, offset: 10304)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !5355, file: !225, line: 557, baseType: !445, size: 128, offset: 10496)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !5355, file: !225, line: 558, baseType: !884, offset: 10624)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !5355, file: !225, line: 560, baseType: !7, size: 32, offset: 10624)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !5355, file: !225, line: 563, baseType: !5741, size: 256, offset: 10688)
!5741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5742, line: 18, size: 256, elements: !5743)
!5742 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5743 = !{!5744, !5745, !5746, !5747}
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5741, file: !5742, line: 19, baseType: !4753, size: 64)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5741, file: !5742, line: 20, baseType: !7, size: 32, offset: 64)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5741, file: !5742, line: 21, baseType: !5354, size: 64, offset: 128)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5741, file: !5742, line: 22, baseType: !5748, size: 64, offset: 192)
!5748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5749, size: 64)
!5749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5750)
!5750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5742, line: 10, size: 256, elements: !5751)
!5751 = !{!5752, !5793, !5797, !5801}
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5750, file: !5742, line: 11, baseType: !5753, size: 64)
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5754, size: 64)
!5754 = !DISubroutineType(types: !5755)
!5755 = !{!7, !5756}
!5756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5757, size: 64)
!5757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5758, line: 22, size: 1280, elements: !5759)
!5758 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5759 = !{!5760, !5761, !5762, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792}
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5757, file: !5758, line: 23, baseType: !1644, size: 32)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5757, file: !5758, line: 24, baseType: !624, size: 32, offset: 32)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5757, file: !5758, line: 25, baseType: !624, size: 32, offset: 64)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5757, file: !5758, line: 28, baseType: !624, size: 32, offset: 96)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5757, file: !5758, line: 29, baseType: !494, size: 64, offset: 128)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5757, file: !5758, line: 30, baseType: !494, size: 64, offset: 192)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5757, file: !5758, line: 31, baseType: !624, size: 32, offset: 256)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5757, file: !5758, line: 32, baseType: !624, size: 32, offset: 288)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5757, file: !5758, line: 33, baseType: !624, size: 32, offset: 320)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5757, file: !5758, line: 34, baseType: !624, size: 32, offset: 352)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5757, file: !5758, line: 35, baseType: !494, size: 64, offset: 384)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5757, file: !5758, line: 38, baseType: !624, size: 32, offset: 448)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5757, file: !5758, line: 40, baseType: !624, size: 32, offset: 480)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5757, file: !5758, line: 41, baseType: !624, size: 32, offset: 512)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5757, file: !5758, line: 42, baseType: !624, size: 32, offset: 544)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5757, file: !5758, line: 43, baseType: !494, size: 64, offset: 576)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5757, file: !5758, line: 44, baseType: !494, size: 64, offset: 640)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5757, file: !5758, line: 46, baseType: !624, size: 32, offset: 704)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5757, file: !5758, line: 47, baseType: !624, size: 32, offset: 736)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5757, file: !5758, line: 48, baseType: !494, size: 64, offset: 768)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5757, file: !5758, line: 49, baseType: !624, size: 32, offset: 832)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5757, file: !5758, line: 51, baseType: !624, size: 32, offset: 864)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5757, file: !5758, line: 52, baseType: !624, size: 32, offset: 896)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5757, file: !5758, line: 53, baseType: !624, size: 32, offset: 928)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5757, file: !5758, line: 54, baseType: !624, size: 32, offset: 960)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5757, file: !5758, line: 55, baseType: !624, size: 32, offset: 992)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5757, file: !5758, line: 56, baseType: !624, size: 32, offset: 1024)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5757, file: !5758, line: 57, baseType: !624, size: 32, offset: 1056)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5757, file: !5758, line: 58, baseType: !1644, size: 32, offset: 1088)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5757, file: !5758, line: 59, baseType: !1644, size: 32, offset: 1120)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5757, file: !5758, line: 60, baseType: !494, size: 64, offset: 1152)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5757, file: !5758, line: 61, baseType: !624, size: 32, offset: 1216)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5757, file: !5758, line: 63, baseType: !624, size: 32, offset: 1248)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5750, file: !5742, line: 12, baseType: !5794, size: 64, offset: 64)
!5794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5795, size: 64)
!5795 = !DISubroutineType(types: !5796)
!5796 = !{!7, !5358, !5756, !5282}
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5750, file: !5742, line: 14, baseType: !5798, size: 64, offset: 128)
!5798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5799, size: 64)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!7, !5358, !5756}
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5750, file: !5742, line: 15, baseType: !5547, size: 64, offset: 192)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5355, file: !225, line: 570, baseType: !460, size: 128, align: 64, offset: 10944)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !5355, file: !225, line: 571, baseType: !1254, size: 128, offset: 11072)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !5355, file: !225, line: 576, baseType: !1108, size: 192, offset: 11200)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5355, file: !225, line: 578, baseType: !5806, size: 64, offset: 11392)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5807, size: 64)
!5807 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !225, line: 578, flags: DIFlagFwdDecl)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !5355, file: !225, line: 579, baseType: !445, size: 128, offset: 11456)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !5355, file: !225, line: 580, baseType: !5810, size: 2368, offset: 11584)
!5810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !4331, line: 682, size: 2368, elements: !5811)
!5811 = !{!5812, !5813, !5814, !5835, !5836, !5837, !5838, !5839, !5840, !5841}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5810, file: !4331, line: 683, baseType: !2424, size: 64)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5810, file: !4331, line: 684, baseType: !14, size: 32, offset: 64)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5810, file: !4331, line: 686, baseType: !5815, size: 448, offset: 128)
!5815 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5816, line: 26, baseType: !5817)
!5816 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5816, line: 16, size: 448, elements: !5818)
!5818 = !{!5819, !5820, !5821, !5822, !5823, !5824, !5829, !5834}
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5817, file: !5816, line: 17, baseType: !884)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5817, file: !5816, line: 18, baseType: !7, size: 32)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5817, file: !5816, line: 19, baseType: !7, size: 32, offset: 32)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5817, file: !5816, line: 20, baseType: !4067, size: 64, offset: 64)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5817, file: !5816, line: 22, baseType: !726, size: 64, offset: 128)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5817, file: !5816, line: 23, baseType: !5825, size: 64, offset: 192)
!5825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5826, size: 64)
!5826 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5816, line: 13, baseType: !5827)
!5827 = !DISubroutineType(types: !5828)
!5828 = !{!726, !2143, !726}
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5817, file: !5816, line: 24, baseType: !5830, size: 64, offset: 256)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5816, line: 14, baseType: !5832)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{null, !726, !726}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5817, file: !5816, line: 25, baseType: !1254, size: 128, offset: 320)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5810, file: !4331, line: 687, baseType: !5815, size: 448, offset: 576)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5810, file: !4331, line: 689, baseType: !5815, size: 448, offset: 1024)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5810, file: !4331, line: 690, baseType: !5815, size: 448, offset: 1472)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5810, file: !4331, line: 697, baseType: !884, offset: 1920)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5810, file: !4331, line: 698, baseType: !4330, size: 128, offset: 1920)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5810, file: !4331, line: 699, baseType: !1960, size: 256, offset: 2048)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5810, file: !4331, line: 700, baseType: !3090, size: 64, offset: 2304)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !5355, file: !225, line: 582, baseType: !828, size: 64, offset: 13952)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !5355, file: !225, line: 589, baseType: !696, size: 8, offset: 14016)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5355, file: !225, line: 591, baseType: !750, size: 64, offset: 14080)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !5355, file: !225, line: 594, baseType: !5846, size: 320, offset: 14144)
!5846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 320, elements: !1930)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !4341, file: !4342, line: 191, baseType: !726, size: 64, offset: 7168)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4341, file: !4342, line: 193, baseType: !7, size: 32, offset: 7232)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4341, file: !4342, line: 194, baseType: !473, size: 64, offset: 7296)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !4341, file: !4342, line: 196, baseType: !1316, size: 256, offset: 7360)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !4341, file: !4342, line: 197, baseType: !4399, size: 64, offset: 7616)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !4341, file: !4342, line: 199, baseType: !5853, size: 64, offset: 7680)
!5853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5854, size: 64)
!5854 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !4342, line: 199, flags: DIFlagFwdDecl)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !4341, file: !4342, line: 200, baseType: !544, size: 32, offset: 7744)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !4341, file: !4342, line: 201, baseType: !5857, size: 64, offset: 7808)
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !4342, line: 156, flags: DIFlagFwdDecl)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !4341, file: !4342, line: 203, baseType: !4393, size: 512, offset: 7872)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !4341, file: !4342, line: 208, baseType: !7, size: 32, offset: 8384)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4341, file: !4342, line: 209, baseType: !5862, size: 64, offset: 8448)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !4342, line: 157, flags: DIFlagFwdDecl)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !4341, file: !4342, line: 210, baseType: !2468, offset: 8512)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !4335, file: !4336, line: 206, baseType: !14, size: 32, offset: 128)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !4335, file: !4336, line: 210, baseType: !633, size: 16, offset: 160)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !4335, file: !4336, line: 211, baseType: !633, size: 16, offset: 176)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !4335, file: !4336, line: 212, baseType: !633, size: 16, offset: 192)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !4335, file: !4336, line: 213, baseType: !5438, size: 8, offset: 208)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !4335, file: !4336, line: 214, baseType: !1551, size: 8, offset: 216)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !4335, file: !4336, line: 215, baseType: !544, size: 32, offset: 224)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !4335, file: !4336, line: 217, baseType: !5873, size: 192, offset: 256)
!5873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !777, line: 37, size: 192, elements: !5874)
!5874 = !{!5875, !5876, !5877, !5878}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5873, file: !777, line: 38, baseType: !4362, size: 64)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5873, file: !777, line: 40, baseType: !14, size: 32, offset: 64)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5873, file: !777, line: 42, baseType: !14, size: 32, offset: 96)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5873, file: !777, line: 44, baseType: !14, size: 32, offset: 128)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !4335, file: !4336, line: 219, baseType: !5880, size: 64, offset: 448)
!5880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5881, size: 64)
!5881 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !4336, line: 19, baseType: !5882)
!5882 = !DISubroutineType(types: !5883)
!5883 = !{null, !4334}
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !4335, file: !4336, line: 221, baseType: !726, size: 64, offset: 512)
!5885 = !DIDerivedType(tag: DW_TAG_member, scope: !4335, file: !4336, line: 240, baseType: !5886, size: 64, offset: 576)
!5886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4335, file: !4336, line: 240, size: 64, elements: !5887)
!5887 = !{!5888}
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5886, file: !4336, line: 242, baseType: !5889, size: 64)
!5889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5890, size: 64)
!5890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !4331, line: 313, size: 832, elements: !5891)
!5891 = !{!5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5902}
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5890, file: !4331, line: 314, baseType: !4334, size: 64)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5890, file: !4331, line: 316, baseType: !5873, size: 192, offset: 64)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5890, file: !4331, line: 318, baseType: !633, size: 16, offset: 256)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5890, file: !4331, line: 319, baseType: !633, size: 16, offset: 272)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5890, file: !4331, line: 320, baseType: !633, size: 16, offset: 288)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5890, file: !4331, line: 321, baseType: !633, size: 16, offset: 304)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5890, file: !4331, line: 323, baseType: !5873, size: 192, offset: 320)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5890, file: !4331, line: 325, baseType: !1960, size: 256, offset: 512)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5890, file: !4331, line: 327, baseType: !5901, size: 64, offset: 768)
!5901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5890, file: !4331, line: 328, baseType: !5903, offset: 832)
!5903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !776, elements: !470)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !4335, file: !4336, line: 246, baseType: !633, size: 16, offset: 640)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !4335, file: !4336, line: 252, baseType: !633, size: 16, offset: 656)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !4335, file: !4336, line: 254, baseType: !544, size: 32, offset: 672)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !4335, file: !4336, line: 256, baseType: !5901, size: 64, offset: 704)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !4335, file: !4336, line: 258, baseType: !5909, size: 64, offset: 768)
!5909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !4335, file: !4336, line: 265, baseType: !5903, offset: 832)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4330, file: !4331, line: 556, baseType: !4334, size: 64, offset: 64)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1412, file: !1413, line: 1050, baseType: !5913, size: 64, offset: 10688)
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 64)
!5914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !225, line: 1236, size: 320, elements: !5915)
!5915 = !{!5916, !5917, !5918, !5919, !5920}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5914, file: !225, line: 1237, baseType: !445, size: 128)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5914, file: !225, line: 1238, baseType: !445, size: 128, offset: 128)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5914, file: !225, line: 1239, baseType: !633, size: 16, offset: 256)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5914, file: !225, line: 1240, baseType: !696, size: 8, offset: 272)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5914, file: !225, line: 1241, baseType: !696, size: 8, offset: 280)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1412, file: !1413, line: 1054, baseType: !5922, size: 64, offset: 10752)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1413, line: 55, flags: DIFlagFwdDecl)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1412, file: !1413, line: 1056, baseType: !5224, size: 64, offset: 10816)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1412, file: !1413, line: 1058, baseType: !5403, size: 64, offset: 10880)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1412, file: !1413, line: 1061, baseType: !5927, size: 64, offset: 10944)
!5927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5928, size: 64)
!5928 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1413, line: 43, flags: DIFlagFwdDecl)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1412, file: !1413, line: 1064, baseType: !473, size: 64, offset: 11008)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1412, file: !1413, line: 1065, baseType: !5931, size: 64, offset: 11072)
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5932, size: 64)
!5932 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4182, line: 14, baseType: !5933)
!5933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4182, line: 12, size: 384, elements: !5934)
!5934 = !{!5935}
!5935 = !DIDerivedType(tag: DW_TAG_member, scope: !5933, file: !4182, line: 13, baseType: !5936, size: 384)
!5936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5933, file: !4182, line: 13, size: 384, elements: !5937)
!5937 = !{!5938, !5939, !5940, !5941}
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5936, file: !4182, line: 13, baseType: !7, size: 32)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5936, file: !4182, line: 13, baseType: !7, size: 32, offset: 32)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5936, file: !4182, line: 13, baseType: !7, size: 32, offset: 64)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5936, file: !4182, line: 13, baseType: !5942, size: 256, offset: 128)
!5942 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5943, line: 32, size: 256, elements: !5944)
!5943 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5944 = !{!5945, !5950, !5963, !5969, !5978, !5998, !6003}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5942, file: !5943, line: 37, baseType: !5946, size: 64)
!5946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5942, file: !5943, line: 34, size: 64, elements: !5947)
!5947 = !{!5948, !5949}
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5946, file: !5943, line: 35, baseType: !1664, size: 32)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5946, file: !5943, line: 36, baseType: !810, size: 32, offset: 32)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5942, file: !5943, line: 45, baseType: !5951, size: 192)
!5951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5942, file: !5943, line: 40, size: 192, elements: !5952)
!5952 = !{!5953, !5955, !5956, !5962}
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5951, file: !5943, line: 41, baseType: !5954, size: 32)
!5954 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !752, line: 95, baseType: !7)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5951, file: !5943, line: 42, baseType: !7, size: 32, offset: 32)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5951, file: !5943, line: 43, baseType: !5957, size: 64, offset: 64)
!5957 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5943, line: 11, baseType: !5958)
!5958 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5943, line: 8, size: 64, elements: !5959)
!5959 = !{!5960, !5961}
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5958, file: !5943, line: 9, baseType: !7, size: 32)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5958, file: !5943, line: 10, baseType: !726, size: 64)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5951, file: !5943, line: 44, baseType: !7, size: 32, offset: 128)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5942, file: !5943, line: 52, baseType: !5964, size: 128)
!5964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5942, file: !5943, line: 48, size: 128, elements: !5965)
!5965 = !{!5966, !5967, !5968}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5964, file: !5943, line: 49, baseType: !1664, size: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5964, file: !5943, line: 50, baseType: !810, size: 32, offset: 32)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5964, file: !5943, line: 51, baseType: !5957, size: 64, offset: 64)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5942, file: !5943, line: 61, baseType: !5970, size: 256)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5942, file: !5943, line: 55, size: 256, elements: !5971)
!5971 = !{!5972, !5973, !5974, !5975, !5977}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5970, file: !5943, line: 56, baseType: !1664, size: 32)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5970, file: !5943, line: 57, baseType: !810, size: 32, offset: 32)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5970, file: !5943, line: 58, baseType: !7, size: 32, offset: 64)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5970, file: !5943, line: 59, baseType: !5976, size: 64, offset: 128)
!5976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !752, line: 94, baseType: !1171)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5970, file: !5943, line: 60, baseType: !5976, size: 64, offset: 192)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5942, file: !5943, line: 95, baseType: !5979, size: 256)
!5979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5942, file: !5943, line: 64, size: 256, elements: !5980)
!5980 = !{!5981, !5982}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5979, file: !5943, line: 65, baseType: !726, size: 64)
!5982 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !5943, line: 77, baseType: !5983, size: 192, offset: 64)
!5983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !5943, line: 77, size: 192, elements: !5984)
!5984 = !{!5985, !5986, !5993}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5983, file: !5943, line: 82, baseType: !1400, size: 16)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5983, file: !5943, line: 88, baseType: !5987, size: 192)
!5987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5983, file: !5943, line: 84, size: 192, elements: !5988)
!5988 = !{!5989, !5991, !5992}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5987, file: !5943, line: 85, baseType: !5990, size: 64)
!5990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 64, elements: !1525)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5987, file: !5943, line: 86, baseType: !726, size: 64, offset: 64)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5987, file: !5943, line: 87, baseType: !726, size: 64, offset: 128)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5983, file: !5943, line: 93, baseType: !5994, size: 96)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5983, file: !5943, line: 90, size: 96, elements: !5995)
!5995 = !{!5996, !5997}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5994, file: !5943, line: 91, baseType: !5990, size: 64)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5994, file: !5943, line: 92, baseType: !624, size: 32, offset: 64)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5942, file: !5943, line: 101, baseType: !5999, size: 128)
!5999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5942, file: !5943, line: 98, size: 128, elements: !6000)
!6000 = !{!6001, !6002}
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5999, file: !5943, line: 99, baseType: !669, size: 64)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5999, file: !5943, line: 100, baseType: !7, size: 32, offset: 64)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5942, file: !5943, line: 108, baseType: !6004, size: 128)
!6004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5942, file: !5943, line: 104, size: 128, elements: !6005)
!6005 = !{!6006, !6007, !6008}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !6004, file: !5943, line: 105, baseType: !726, size: 64)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !6004, file: !5943, line: 106, baseType: !7, size: 32, offset: 64)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !6004, file: !5943, line: 107, baseType: !14, size: 32, offset: 96)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1412, file: !1413, line: 1067, baseType: !4249, offset: 11136)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1412, file: !1413, line: 1099, baseType: !6011, size: 64, offset: 11136)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1413, line: 56, flags: DIFlagFwdDecl)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1412, file: !1413, line: 1103, baseType: !445, size: 128, offset: 11200)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1412, file: !1413, line: 1104, baseType: !6015, size: 64, offset: 11328)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1413, line: 46, flags: DIFlagFwdDecl)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1412, file: !1413, line: 1105, baseType: !1108, size: 192, offset: 11392)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1412, file: !1413, line: 1106, baseType: !14, size: 32, offset: 11584)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1412, file: !1413, line: 1109, baseType: !6020, size: 128, offset: 11648)
!6020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6021, size: 128, elements: !634)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1413, line: 51, flags: DIFlagFwdDecl)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1412, file: !1413, line: 1110, baseType: !1108, size: 192, offset: 11776)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1412, file: !1413, line: 1111, baseType: !445, size: 128, offset: 11968)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1412, file: !1413, line: 1173, baseType: !6026, size: 64, offset: 12096)
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !6028, line: 62, size: 256, align: 256, elements: !6029)
!6028 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!6029 = !{!6030, !6031, !6032, !6037}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !6027, file: !6028, line: 75, baseType: !624, size: 32)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !6027, file: !6028, line: 90, baseType: !624, size: 32, offset: 32)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !6027, file: !6028, line: 124, baseType: !6033, size: 64, offset: 64)
!6033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6027, file: !6028, line: 109, size: 64, elements: !6034)
!6034 = !{!6035, !6036}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !6033, file: !6028, line: 110, baseType: !494, size: 64)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6033, file: !6028, line: 112, baseType: !494, size: 64)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6027, file: !6028, line: 144, baseType: !624, size: 32, offset: 128)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1412, file: !1413, line: 1174, baseType: !862, size: 32, offset: 12160)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1412, file: !1413, line: 1179, baseType: !473, size: 64, offset: 12224)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1412, file: !1413, line: 1182, baseType: !6041, size: 128, offset: 12288)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1352, line: 76, size: 128, elements: !6042)
!6042 = !{!6043, !6048, !6049}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6041, file: !1352, line: 85, baseType: !6044, size: 64)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !6045, line: 7, size: 64, elements: !6046)
!6045 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!6046 = !{!6047}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !6044, file: !6045, line: 12, baseType: !1566, size: 64)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !6041, file: !1352, line: 88, baseType: !696, size: 8, offset: 64)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !6041, file: !1352, line: 95, baseType: !696, size: 8, offset: 72)
!6050 = !DIDerivedType(tag: DW_TAG_member, scope: !1412, file: !1413, line: 1184, baseType: !6051, size: 128, offset: 12416)
!6051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1412, file: !1413, line: 1184, size: 128, elements: !6052)
!6052 = !{!6053, !6054}
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !6051, file: !1413, line: 1185, baseType: !1425, size: 32)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6051, file: !1413, line: 1186, baseType: !460, size: 128, align: 64)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1412, file: !1413, line: 1190, baseType: !6056, size: 64, offset: 12544)
!6056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6057, size: 64)
!6057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !6058, line: 57, size: 1088, elements: !6059)
!6058 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6059 = !{!6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6084, !6085, !6112}
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6057, file: !6058, line: 58, baseType: !1108, size: 192)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !6057, file: !6058, line: 59, baseType: !1254, size: 128, offset: 192)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !6057, file: !6058, line: 59, baseType: !1254, size: 128, offset: 320)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6057, file: !6058, line: 60, baseType: !14, size: 32, offset: 448)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6057, file: !6058, line: 61, baseType: !14, size: 32, offset: 480)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !6057, file: !6058, line: 62, baseType: !14, size: 32, offset: 512)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !6057, file: !6058, line: 63, baseType: !14, size: 32, offset: 544)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !6057, file: !6058, line: 67, baseType: !14, size: 32, offset: 576)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !6057, file: !6058, line: 68, baseType: !14, size: 32, offset: 608)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !6057, file: !6058, line: 69, baseType: !14, size: 32, offset: 640)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6057, file: !6058, line: 70, baseType: !14, size: 32, offset: 672)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !6057, file: !6058, line: 71, baseType: !14, size: 32, offset: 704)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !6057, file: !6058, line: 72, baseType: !14, size: 32, offset: 736)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !6057, file: !6058, line: 73, baseType: !780, size: 64, offset: 768)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !6057, file: !6058, line: 74, baseType: !6075, size: 64, offset: 832)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6076, size: 64)
!6076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !243, line: 1314, size: 320, elements: !6077)
!6077 = !{!6078, !6079, !6080, !6081, !6082, !6083}
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !6076, file: !243, line: 1315, baseType: !3105)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6076, file: !243, line: 1316, baseType: !7, size: 32)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !6076, file: !243, line: 1317, baseType: !7, size: 32, offset: 32)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !6076, file: !243, line: 1318, baseType: !6075, size: 64, offset: 64)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !6076, file: !243, line: 1319, baseType: !1164, size: 64, offset: 128)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !6076, file: !243, line: 1320, baseType: !460, size: 128, align: 64, offset: 192)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !6057, file: !6058, line: 75, baseType: !6075, size: 64, offset: 896)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !6057, file: !6058, line: 76, baseType: !6086, size: 64, offset: 960)
!6086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6087, size: 64)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !6058, line: 26, size: 320, elements: !6088)
!6088 = !{!6089, !6090, !6091, !6092, !6110, !6111}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6087, file: !6058, line: 27, baseType: !780, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6087, file: !6058, line: 28, baseType: !14, size: 32, offset: 64)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6087, file: !6058, line: 28, baseType: !14, size: 32, offset: 96)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6087, file: !6058, line: 29, baseType: !6093, size: 64, offset: 128)
!6093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6094, size: 64)
!6094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6095)
!6095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !6058, line: 93, size: 256, elements: !6096)
!6096 = !{!6097, !6101, !6105, !6109}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !6095, file: !6058, line: 101, baseType: !6098, size: 64)
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6099, size: 64)
!6099 = !DISubroutineType(types: !6100)
!6100 = !{!7, !6056, !6086}
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6095, file: !6058, line: 107, baseType: !6102, size: 64, offset: 64)
!6102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6103, size: 64)
!6103 = !DISubroutineType(types: !6104)
!6104 = !{null, !6056, !6086}
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !6095, file: !6058, line: 117, baseType: !6106, size: 64, offset: 128)
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6107, size: 64)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!696, !6056, !6086}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6095, file: !6058, line: 122, baseType: !6106, size: 64, offset: 192)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6087, file: !6058, line: 30, baseType: !14, size: 32, offset: 192)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6087, file: !6058, line: 31, baseType: !473, size: 64, offset: 256)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6057, file: !6058, line: 77, baseType: !1886, size: 64, offset: 1024)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1412, file: !1413, line: 1192, baseType: !6114, size: 128, offset: 12608)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1352, line: 64, size: 128, elements: !6115)
!6115 = !{!6116, !6117, !6118}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6114, file: !1352, line: 65, baseType: !780, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6114, file: !1352, line: 67, baseType: !624, size: 32, offset: 64)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6114, file: !1352, line: 68, baseType: !624, size: 32, offset: 96)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1412, file: !1413, line: 1206, baseType: !7, size: 32, offset: 12736)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1412, file: !1413, line: 1207, baseType: !7, size: 32, offset: 12768)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1412, file: !1413, line: 1209, baseType: !473, size: 64, offset: 12800)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1412, file: !1413, line: 1219, baseType: !492, size: 64, offset: 12864)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1412, file: !1413, line: 1220, baseType: !492, size: 64, offset: 12928)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1412, file: !1413, line: 1317, baseType: !7, size: 32, offset: 12992)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1412, file: !1413, line: 1319, baseType: !1411, size: 64, offset: 13056)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1412, file: !1413, line: 1322, baseType: !6127, size: 64, offset: 13120)
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6128, size: 64)
!6128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !6129, line: 56, size: 512, elements: !6130)
!6129 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!6130 = !{!6131, !6132, !6133, !6134, !6135, !6137, !6138, !6140}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6128, file: !6129, line: 57, baseType: !6127, size: 64)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6128, file: !6129, line: 58, baseType: !726, size: 64, offset: 64)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6128, file: !6129, line: 59, baseType: !473, size: 64, offset: 128)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6128, file: !6129, line: 60, baseType: !473, size: 64, offset: 192)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6128, file: !6129, line: 61, baseType: !6136, size: 64, offset: 256)
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !6128, file: !6129, line: 62, baseType: !14, size: 32, offset: 320)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !6128, file: !6129, line: 63, baseType: !6139, size: 64, offset: 384)
!6139 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !438, line: 153, baseType: !492)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !6128, file: !6129, line: 64, baseType: !2416, size: 64, offset: 448)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1412, file: !1413, line: 1326, baseType: !1425, size: 32, offset: 13184)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1412, file: !1413, line: 1342, baseType: !726, size: 64, offset: 13248)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1412, file: !1413, line: 1343, baseType: !494, size: 64, offset: 13312)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1412, file: !1413, line: 1344, baseType: !492, size: 64, offset: 13376)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1412, file: !1413, line: 1345, baseType: !494, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1412, file: !1413, line: 1346, baseType: !494, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1412, file: !1413, line: 1347, baseType: !494, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1412, file: !1413, line: 1348, baseType: !460, size: 128, align: 64, offset: 13504)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1412, file: !1413, line: 1358, baseType: !6150, size: 34816, offset: 13824)
!6150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !6151, line: 485, size: 34816, elements: !6152)
!6151 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!6152 = !{!6153, !6171, !6172, !6173, !6174, !6175, !6176, !6177, !6178, !6182, !6183, !6184, !6185, !6186, !6187, !6190, !6191, !6192}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !6150, file: !6151, line: 487, baseType: !6154, size: 192)
!6154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6155, size: 192, elements: !1021)
!6155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !6156, line: 16, size: 64, elements: !6157)
!6156 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!6157 = !{!6158, !6159, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170}
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !6155, file: !6156, line: 17, baseType: !1192, size: 16)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !6155, file: !6156, line: 18, baseType: !1192, size: 16, offset: 16)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !6155, file: !6156, line: 19, baseType: !1192, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6155, file: !6156, line: 19, baseType: !1192, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !6155, file: !6156, line: 19, baseType: !1192, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !6155, file: !6156, line: 19, baseType: !1192, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6155, file: !6156, line: 19, baseType: !1192, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !6155, file: !6156, line: 20, baseType: !1192, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !6155, file: !6156, line: 20, baseType: !1192, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !6155, file: !6156, line: 20, baseType: !1192, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !6155, file: !6156, line: 20, baseType: !1192, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6155, file: !6156, line: 20, baseType: !1192, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !6155, file: !6156, line: 20, baseType: !1192, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6150, file: !6151, line: 491, baseType: !473, size: 64, offset: 192)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !6150, file: !6151, line: 495, baseType: !633, size: 16, offset: 256)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !6150, file: !6151, line: 496, baseType: !633, size: 16, offset: 272)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !6150, file: !6151, line: 497, baseType: !633, size: 16, offset: 288)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !6150, file: !6151, line: 498, baseType: !633, size: 16, offset: 304)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !6150, file: !6151, line: 502, baseType: !473, size: 64, offset: 320)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !6150, file: !6151, line: 503, baseType: !473, size: 64, offset: 384)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !6150, file: !6151, line: 514, baseType: !6179, size: 256, offset: 448)
!6179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6180, size: 256, elements: !1356)
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 64)
!6181 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !6151, line: 483, flags: DIFlagFwdDecl)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !6150, file: !6151, line: 516, baseType: !473, size: 64, offset: 704)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !6150, file: !6151, line: 518, baseType: !473, size: 64, offset: 768)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !6150, file: !6151, line: 520, baseType: !473, size: 64, offset: 832)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !6150, file: !6151, line: 521, baseType: !473, size: 64, offset: 896)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !6150, file: !6151, line: 522, baseType: !473, size: 64, offset: 960)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !6150, file: !6151, line: 528, baseType: !6188, size: 64, offset: 1024)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6189, size: 64)
!6189 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !6151, line: 10, flags: DIFlagFwdDecl)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !6150, file: !6151, line: 535, baseType: !473, size: 64, offset: 1088)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !6150, file: !6151, line: 537, baseType: !14, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !6150, file: !6151, line: 540, baseType: !6193, size: 33280, offset: 1536)
!6193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !6194, line: 317, size: 33280, elements: !6195)
!6194 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!6195 = !{!6196, !6197, !6198}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !6193, file: !6194, line: 330, baseType: !14, size: 32)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !6193, file: !6194, line: 337, baseType: !473, size: 64, offset: 64)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6193, file: !6194, line: 348, baseType: !6199, size: 32768, offset: 512)
!6199 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !6194, line: 304, size: 32768, elements: !6200)
!6200 = !{!6201, !6214, !6249, !6299, !6311}
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !6199, file: !6194, line: 305, baseType: !6202, size: 896)
!6202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !6194, line: 12, size: 896, elements: !6203)
!6203 = !{!6204, !6205, !6206, !6207, !6208, !6209, !6210, !6211, !6213}
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6202, file: !6194, line: 13, baseType: !862, size: 32)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6202, file: !6194, line: 14, baseType: !862, size: 32, offset: 32)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6202, file: !6194, line: 15, baseType: !862, size: 32, offset: 64)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6202, file: !6194, line: 16, baseType: !862, size: 32, offset: 96)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6202, file: !6194, line: 17, baseType: !862, size: 32, offset: 128)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6202, file: !6194, line: 18, baseType: !862, size: 32, offset: 160)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6202, file: !6194, line: 19, baseType: !862, size: 32, offset: 192)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6202, file: !6194, line: 22, baseType: !6212, size: 640, offset: 224)
!6212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 640, elements: !2679)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6202, file: !6194, line: 25, baseType: !862, size: 32, offset: 864)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !6199, file: !6194, line: 306, baseType: !6215, size: 4096, align: 128)
!6215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !6194, line: 34, size: 4096, align: 128, elements: !6216)
!6216 = !{!6217, !6218, !6219, !6220, !6221, !6236, !6237, !6238, !6240, !6242, !6244}
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6215, file: !6194, line: 35, baseType: !1192, size: 16)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6215, file: !6194, line: 36, baseType: !1192, size: 16, offset: 16)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6215, file: !6194, line: 37, baseType: !1192, size: 16, offset: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !6215, file: !6194, line: 38, baseType: !1192, size: 16, offset: 48)
!6221 = !DIDerivedType(tag: DW_TAG_member, scope: !6215, file: !6194, line: 39, baseType: !6222, size: 128, offset: 64)
!6222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6215, file: !6194, line: 39, size: 128, elements: !6223)
!6223 = !{!6224, !6229}
!6224 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !6194, line: 40, baseType: !6225, size: 128)
!6225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6222, file: !6194, line: 40, size: 128, elements: !6226)
!6226 = !{!6227, !6228}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !6225, file: !6194, line: 41, baseType: !492, size: 64)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !6225, file: !6194, line: 42, baseType: !492, size: 64, offset: 64)
!6229 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !6194, line: 44, baseType: !6230, size: 128)
!6230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6222, file: !6194, line: 44, size: 128, elements: !6231)
!6231 = !{!6232, !6233, !6234, !6235}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6230, file: !6194, line: 45, baseType: !862, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6230, file: !6194, line: 46, baseType: !862, size: 32, offset: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6230, file: !6194, line: 47, baseType: !862, size: 32, offset: 64)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6230, file: !6194, line: 48, baseType: !862, size: 32, offset: 96)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !6215, file: !6194, line: 51, baseType: !862, size: 32, offset: 192)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !6215, file: !6194, line: 52, baseType: !862, size: 32, offset: 224)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6215, file: !6194, line: 55, baseType: !6239, size: 1024, offset: 256)
!6239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 1024, elements: !871)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !6215, file: !6194, line: 58, baseType: !6241, size: 2048, offset: 1280)
!6241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 2048, elements: !4294)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6215, file: !6194, line: 60, baseType: !6243, size: 384, offset: 3328)
!6243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 384, elements: !3166)
!6244 = !DIDerivedType(tag: DW_TAG_member, scope: !6215, file: !6194, line: 62, baseType: !6245, size: 384, offset: 3712)
!6245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6215, file: !6194, line: 62, size: 384, elements: !6246)
!6246 = !{!6247, !6248}
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !6245, file: !6194, line: 63, baseType: !6243, size: 384)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !6245, file: !6194, line: 64, baseType: !6243, size: 384)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !6199, file: !6194, line: 307, baseType: !6250, size: 1088)
!6250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !6194, line: 79, size: 1088, elements: !6251)
!6251 = !{!6252, !6253, !6254, !6255, !6256, !6257, !6258, !6259, !6260, !6261, !6262, !6263, !6264, !6265, !6266, !6298}
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6250, file: !6194, line: 80, baseType: !862, size: 32)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6250, file: !6194, line: 81, baseType: !862, size: 32, offset: 32)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6250, file: !6194, line: 82, baseType: !862, size: 32, offset: 64)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6250, file: !6194, line: 83, baseType: !862, size: 32, offset: 96)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6250, file: !6194, line: 84, baseType: !862, size: 32, offset: 128)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6250, file: !6194, line: 85, baseType: !862, size: 32, offset: 160)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6250, file: !6194, line: 86, baseType: !862, size: 32, offset: 192)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6250, file: !6194, line: 88, baseType: !6212, size: 640, offset: 224)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !6250, file: !6194, line: 89, baseType: !1551, size: 8, offset: 864)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !6250, file: !6194, line: 90, baseType: !1551, size: 8, offset: 872)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !6250, file: !6194, line: 91, baseType: !1551, size: 8, offset: 880)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !6250, file: !6194, line: 92, baseType: !1551, size: 8, offset: 888)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !6250, file: !6194, line: 93, baseType: !1551, size: 8, offset: 896)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !6250, file: !6194, line: 94, baseType: !1551, size: 8, offset: 904)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6250, file: !6194, line: 95, baseType: !6267, size: 64, offset: 960)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !6269, line: 11, size: 128, elements: !6270)
!6269 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!6270 = !{!6271, !6272}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !6268, file: !6269, line: 12, baseType: !669, size: 64)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6268, file: !6269, line: 13, baseType: !6273, size: 64, offset: 64)
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6274, size: 64)
!6274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !6275, line: 56, size: 1344, elements: !6276)
!6275 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!6276 = !{!6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297}
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6274, file: !6275, line: 61, baseType: !473, size: 64)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6274, file: !6275, line: 62, baseType: !473, size: 64, offset: 64)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !6274, file: !6275, line: 63, baseType: !473, size: 64, offset: 128)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6274, file: !6275, line: 64, baseType: !473, size: 64, offset: 192)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !6274, file: !6275, line: 65, baseType: !473, size: 64, offset: 256)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !6274, file: !6275, line: 66, baseType: !473, size: 64, offset: 320)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !6274, file: !6275, line: 68, baseType: !473, size: 64, offset: 384)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !6274, file: !6275, line: 69, baseType: !473, size: 64, offset: 448)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !6274, file: !6275, line: 70, baseType: !473, size: 64, offset: 512)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !6274, file: !6275, line: 71, baseType: !473, size: 64, offset: 576)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !6274, file: !6275, line: 72, baseType: !473, size: 64, offset: 640)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !6274, file: !6275, line: 73, baseType: !473, size: 64, offset: 704)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !6274, file: !6275, line: 74, baseType: !473, size: 64, offset: 768)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !6274, file: !6275, line: 75, baseType: !473, size: 64, offset: 832)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !6274, file: !6275, line: 76, baseType: !473, size: 64, offset: 896)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !6274, file: !6275, line: 81, baseType: !473, size: 64, offset: 960)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6274, file: !6275, line: 83, baseType: !473, size: 64, offset: 1024)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !6274, file: !6275, line: 84, baseType: !473, size: 64, offset: 1088)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6274, file: !6275, line: 85, baseType: !473, size: 64, offset: 1152)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6274, file: !6275, line: 86, baseType: !473, size: 64, offset: 1216)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !6274, file: !6275, line: 87, baseType: !473, size: 64, offset: 1280)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !6250, file: !6194, line: 96, baseType: !862, size: 32, offset: 1024)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !6199, file: !6194, line: 308, baseType: !6300, size: 4608, align: 512)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !6194, line: 289, size: 4608, align: 512, elements: !6301)
!6301 = !{!6302, !6303, !6310}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !6300, file: !6194, line: 290, baseType: !6215, size: 4096, align: 128)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !6300, file: !6194, line: 291, baseType: !6304, size: 512, offset: 4096)
!6304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !6194, line: 268, size: 512, elements: !6305)
!6305 = !{!6306, !6307, !6308}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !6304, file: !6194, line: 269, baseType: !492, size: 64)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !6304, file: !6194, line: 270, baseType: !492, size: 64, offset: 64)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6304, file: !6194, line: 271, baseType: !6309, size: 384, offset: 128)
!6309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 384, elements: !1824)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !6300, file: !6194, line: 292, baseType: !3189, offset: 4608)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !6199, file: !6194, line: 309, baseType: !6312, size: 32768)
!6312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 32768, elements: !6313)
!6313 = !{!6314}
!6314 = !DISubrange(count: 4096)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1408, file: !782, line: 378, baseType: !6316, size: 64, offset: 64)
!6316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1404, file: !782, line: 384, baseType: !1700, size: 192, offset: 192)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1283, file: !782, line: 500, baseType: !884, offset: 6656)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1283, file: !782, line: 501, baseType: !6320, size: 64, offset: 6656)
!6320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6321, size: 64)
!6321 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !782, line: 387, flags: DIFlagFwdDecl)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1283, file: !782, line: 516, baseType: !1912, size: 64, offset: 6720)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1283, file: !782, line: 519, baseType: !1164, size: 64, offset: 6784)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1283, file: !782, line: 521, baseType: !6325, size: 64, offset: 6848)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 64)
!6326 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !782, line: 521, flags: DIFlagFwdDecl)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1283, file: !782, line: 545, baseType: !544, size: 32, offset: 6912)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1283, file: !782, line: 548, baseType: !696, size: 8, offset: 6944)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1283, file: !782, line: 550, baseType: !6330, offset: 6952)
!6330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !6331, line: 142, elements: !898)
!6331 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1283, file: !782, line: 554, baseType: !1960, size: 256, offset: 6976)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1283, file: !782, line: 557, baseType: !862, size: 32, offset: 7232)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1280, file: !782, line: 565, baseType: !6335, offset: 7296)
!6335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, elements: !470)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1270, file: !782, line: 333, baseType: !6337, size: 64, offset: 576)
!6337 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1302, line: 284, baseType: !6338)
!6338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1302, line: 284, size: 64, elements: !6339)
!6339 = !{!6340}
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !6338, file: !1302, line: 284, baseType: !6341, size: 64)
!6341 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1307, line: 19, baseType: !473)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1270, file: !782, line: 334, baseType: !473, size: 64, offset: 640)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1270, file: !782, line: 343, baseType: !6344, size: 256, offset: 704)
!6344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1270, file: !782, line: 340, size: 256, elements: !6345)
!6345 = !{!6346, !6347}
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6344, file: !782, line: 341, baseType: !594, size: 192, align: 64)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !6344, file: !782, line: 342, baseType: !473, size: 64, offset: 192)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1270, file: !782, line: 351, baseType: !445, size: 128, offset: 960)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1270, file: !782, line: 353, baseType: !6350, size: 64, offset: 1088)
!6350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6351, size: 64)
!6351 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !782, line: 353, flags: DIFlagFwdDecl)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1270, file: !782, line: 356, baseType: !4623, size: 64, offset: 1152)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1270, file: !782, line: 359, baseType: !473, size: 64, offset: 1216)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1270, file: !782, line: 361, baseType: !1164, size: 64, offset: 1280)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1270, file: !782, line: 362, baseType: !726, size: 64, offset: 1344)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1270, file: !782, line: 365, baseType: !532, size: 64, offset: 1408)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1270, file: !782, line: 373, baseType: !6358, offset: 1472)
!6358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !782, line: 296, elements: !898)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1157, file: !243, line: 1836, baseType: !473, size: 64, offset: 832)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1157, file: !243, line: 1837, baseType: !6361, size: 64, offset: 896)
!6361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6362, size: 64)
!6362 = !DISubroutineType(types: !6363)
!6363 = !{!7, !797, !1164}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1157, file: !243, line: 1838, baseType: !6365, size: 64, offset: 960)
!6365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6366, size: 64)
!6366 = !DISubroutineType(types: !6367)
!6367 = !{!7, !1164, !6368}
!6368 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !243, line: 1007, baseType: !726)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1157, file: !243, line: 1839, baseType: !6361, size: 64, offset: 1024)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1157, file: !243, line: 1840, baseType: !6371, size: 64, offset: 1088)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!7, !1164, !979, !979, !7}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1157, file: !243, line: 1841, baseType: !6375, size: 64, offset: 1152)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{!7, !7, !1164, !7}
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1157, file: !243, line: 1842, baseType: !6379, size: 64, offset: 1216)
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 64)
!6380 = !DISubroutineType(types: !6381)
!6381 = !{!7, !1164, !7, !6382}
!6382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6383, size: 64)
!6383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !243, line: 1062, size: 1664, elements: !6384)
!6384 = !{!6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6415, !6446}
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6383, file: !243, line: 1063, baseType: !6382, size: 64)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6383, file: !243, line: 1064, baseType: !445, size: 128, offset: 64)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6383, file: !243, line: 1065, baseType: !437, size: 128, offset: 192)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6383, file: !243, line: 1066, baseType: !445, size: 128, offset: 320)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6383, file: !243, line: 1069, baseType: !445, size: 128, offset: 448)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6383, file: !243, line: 1072, baseType: !6368, size: 64, offset: 576)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6383, file: !243, line: 1073, baseType: !14, size: 32, offset: 640)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6383, file: !243, line: 1074, baseType: !650, size: 8, offset: 672)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6383, file: !243, line: 1075, baseType: !14, size: 32, offset: 704)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6383, file: !243, line: 1076, baseType: !7, size: 32, offset: 736)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6383, file: !243, line: 1077, baseType: !1254, size: 128, offset: 768)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6383, file: !243, line: 1078, baseType: !1164, size: 64, offset: 896)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6383, file: !243, line: 1079, baseType: !979, size: 64, offset: 960)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6383, file: !243, line: 1080, baseType: !979, size: 64, offset: 1024)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6383, file: !243, line: 1082, baseType: !6075, size: 64, offset: 1088)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6383, file: !243, line: 1084, baseType: !473, size: 64, offset: 1152)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6383, file: !243, line: 1085, baseType: !473, size: 64, offset: 1216)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6383, file: !243, line: 1087, baseType: !6403, size: 64, offset: 1280)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6404, size: 64)
!6404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6405)
!6405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !243, line: 1011, size: 128, elements: !6406)
!6406 = !{!6407, !6411}
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6405, file: !243, line: 1012, baseType: !6408, size: 64)
!6408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!6409 = !DISubroutineType(types: !6410)
!6410 = !{null, !6382, !6382}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6405, file: !243, line: 1013, baseType: !6412, size: 64, offset: 64)
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6413 = !DISubroutineType(types: !6414)
!6414 = !{null, !6382}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6383, file: !243, line: 1088, baseType: !6416, size: 64, offset: 1344)
!6416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6417, size: 64)
!6417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6418)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !243, line: 1016, size: 512, elements: !6419)
!6419 = !{!6420, !6424, !6428, !6429, !6433, !6437, !6441, !6445}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6418, file: !243, line: 1017, baseType: !6421, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6422, size: 64)
!6422 = !DISubroutineType(types: !6423)
!6423 = !{!6368, !6368}
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6418, file: !243, line: 1018, baseType: !6425, size: 64, offset: 64)
!6425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6426, size: 64)
!6426 = !DISubroutineType(types: !6427)
!6427 = !{null, !6368}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6418, file: !243, line: 1019, baseType: !6412, size: 64, offset: 128)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6418, file: !243, line: 1020, baseType: !6430, size: 64, offset: 192)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!7, !6382, !7}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6418, file: !243, line: 1021, baseType: !6434, size: 64, offset: 256)
!6434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6435, size: 64)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{!696, !6382}
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6418, file: !243, line: 1022, baseType: !6438, size: 64, offset: 320)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{!7, !6382, !7, !448}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6418, file: !243, line: 1023, baseType: !6442, size: 64, offset: 384)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 64)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{null, !6382, !4067}
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6418, file: !243, line: 1024, baseType: !6434, size: 64, offset: 448)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6383, file: !243, line: 1097, baseType: !6447, size: 256, offset: 1408)
!6447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6383, file: !243, line: 1089, size: 256, elements: !6448)
!6448 = !{!6449, !6458, !6464}
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6447, file: !243, line: 1090, baseType: !6450, size: 256)
!6450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6451, line: 10, size: 256, elements: !6452)
!6451 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6452 = !{!6453, !6454, !6457}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6450, file: !6451, line: 11, baseType: !862, size: 32)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6450, file: !6451, line: 12, baseType: !6455, size: 64, offset: 64)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 64)
!6456 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6451, line: 5, flags: DIFlagFwdDecl)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6450, file: !6451, line: 13, baseType: !445, size: 128, offset: 128)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6447, file: !243, line: 1091, baseType: !6459, size: 64)
!6459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6451, line: 17, size: 64, elements: !6460)
!6460 = !{!6461}
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6459, file: !6451, line: 18, baseType: !6462, size: 64)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6463, size: 64)
!6463 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6451, line: 16, flags: DIFlagFwdDecl)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6447, file: !243, line: 1096, baseType: !6465, size: 192)
!6465 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6447, file: !243, line: 1092, size: 192, elements: !6466)
!6466 = !{!6467, !6468, !6469}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6465, file: !243, line: 1093, baseType: !445, size: 128)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6465, file: !243, line: 1094, baseType: !7, size: 32, offset: 128)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6465, file: !243, line: 1095, baseType: !14, size: 32, offset: 160)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1157, file: !243, line: 1843, baseType: !6471, size: 64, offset: 1280)
!6471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6472, size: 64)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!1169, !1164, !780, !7, !750, !1123, !7}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1157, file: !243, line: 1844, baseType: !1292, size: 64, offset: 1344)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1157, file: !243, line: 1845, baseType: !6476, size: 64, offset: 1408)
!6476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6477, size: 64)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!7, !7}
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1157, file: !243, line: 1846, baseType: !6379, size: 64, offset: 1472)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1157, file: !243, line: 1847, baseType: !6481, size: 64, offset: 1536)
!6481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6482, size: 64)
!6482 = !DISubroutineType(types: !6483)
!6483 = !{!1169, !6056, !1164, !1123, !750, !14}
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1157, file: !243, line: 1848, baseType: !6485, size: 64, offset: 1600)
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6486, size: 64)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{!1169, !1164, !1123, !6056, !750, !14}
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1157, file: !243, line: 1849, baseType: !6489, size: 64, offset: 1664)
!6489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 64)
!6490 = !DISubroutineType(types: !6491)
!6491 = !{!7, !1164, !669, !6492, !4067}
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6382, size: 64)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1157, file: !243, line: 1850, baseType: !6494, size: 64, offset: 1728)
!6494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6495, size: 64)
!6495 = !DISubroutineType(types: !6496)
!6496 = !{!669, !1164, !7, !979, !979}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1157, file: !243, line: 1852, baseType: !6498, size: 64, offset: 1792)
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 64)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{null, !1096, !1164}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1157, file: !243, line: 1856, baseType: !6502, size: 64, offset: 1856)
!6502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6503, size: 64)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!1169, !1164, !979, !1164, !979, !750, !14}
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1157, file: !243, line: 1858, baseType: !6506, size: 64, offset: 1920)
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 64)
!6507 = !DISubroutineType(types: !6508)
!6508 = !{!979, !1164, !979, !1164, !979, !979, !14}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1157, file: !243, line: 1861, baseType: !6371, size: 64, offset: 1984)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1140, file: !243, line: 929, baseType: !884, offset: 384)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1140, file: !243, line: 930, baseType: !242, size: 32, offset: 384)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1140, file: !243, line: 931, baseType: !532, size: 64, offset: 448)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1140, file: !243, line: 932, baseType: !14, size: 32, offset: 512)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1140, file: !243, line: 933, baseType: !5282, size: 32, offset: 544)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1140, file: !243, line: 934, baseType: !1108, size: 192, offset: 576)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1140, file: !243, line: 935, baseType: !979, size: 64, offset: 768)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1140, file: !243, line: 936, baseType: !6518, size: 192, offset: 832)
!6518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !243, line: 885, size: 192, elements: !6519)
!6519 = !{!6520, !6521, !6522, !6523, !6524, !6525}
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6518, file: !243, line: 886, baseType: !3105)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6518, file: !243, line: 887, baseType: !1675, size: 64)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6518, file: !243, line: 888, baseType: !251, size: 32, offset: 64)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6518, file: !243, line: 889, baseType: !804, size: 32, offset: 96)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6518, file: !243, line: 889, baseType: !804, size: 32, offset: 128)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6518, file: !243, line: 890, baseType: !7, size: 32, offset: 160)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1140, file: !243, line: 937, baseType: !1745, size: 64, offset: 1024)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1140, file: !243, line: 938, baseType: !6528, size: 256, offset: 1088)
!6528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !243, line: 896, size: 256, elements: !6529)
!6529 = !{!6530, !6531, !6532, !6533, !6534, !6535}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6528, file: !243, line: 897, baseType: !473, size: 64)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6528, file: !243, line: 898, baseType: !14, size: 32, offset: 64)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6528, file: !243, line: 899, baseType: !14, size: 32, offset: 96)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6528, file: !243, line: 902, baseType: !14, size: 32, offset: 128)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6528, file: !243, line: 903, baseType: !14, size: 32, offset: 160)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6528, file: !243, line: 904, baseType: !979, size: 64, offset: 192)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1140, file: !243, line: 940, baseType: !492, size: 64, offset: 1344)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1140, file: !243, line: 945, baseType: !726, size: 64, offset: 1408)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1140, file: !243, line: 949, baseType: !445, size: 128, offset: 1472)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1140, file: !243, line: 950, baseType: !445, size: 128, offset: 1600)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1140, file: !243, line: 952, baseType: !793, size: 64, offset: 1728)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1140, file: !243, line: 953, baseType: !6542, size: 32, offset: 1792)
!6542 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6543, line: 8, baseType: !862)
!6543 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1140, file: !243, line: 954, baseType: !6542, size: 32, offset: 1824)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1097, file: !1098, line: 28, baseType: !726, size: 64, offset: 832)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1029, file: !243, line: 1955, baseType: !1093, size: 64, offset: 1088)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1029, file: !243, line: 1956, baseType: !1093, size: 64, offset: 1152)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1029, file: !243, line: 1957, baseType: !1093, size: 64, offset: 1216)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1029, file: !243, line: 1963, baseType: !6550, size: 64, offset: 1280)
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!7, !969, !780, !2143}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1029, file: !243, line: 1964, baseType: !6554, size: 64, offset: 1344)
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6555, size: 64)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!669, !969, !6557}
!6557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6558, size: 64)
!6558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6559, line: 12, size: 256, elements: !6560)
!6559 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6560 = !{!6561, !6562, !6563, !6564, !6565}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6558, file: !6559, line: 13, baseType: !2143, size: 32)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6558, file: !6559, line: 16, baseType: !7, size: 32, offset: 32)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6558, file: !6559, line: 23, baseType: !473, size: 64, offset: 64)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6558, file: !6559, line: 30, baseType: !473, size: 64, offset: 128)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6558, file: !6559, line: 33, baseType: !6566, size: 64, offset: 192)
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 64)
!6567 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !6559, line: 33, flags: DIFlagFwdDecl)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1029, file: !243, line: 1966, baseType: !6554, size: 64, offset: 1408)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !970, file: !243, line: 1424, baseType: !6570, size: 64, offset: 448)
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 64)
!6571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6572)
!6572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !260, line: 322, size: 704, elements: !6573)
!6573 = !{!6574, !6620, !6624, !6628, !6629, !6630, !6631, !6632, !6637, !6642, !6646}
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6572, file: !260, line: 323, baseType: !6575, size: 64)
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 64)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{!7, !6578}
!6578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6579, size: 64)
!6579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !260, line: 294, size: 1600, elements: !6580)
!6580 = !{!6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6605, !6606, !6607}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6579, file: !260, line: 295, baseType: !437, size: 128)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6579, file: !260, line: 296, baseType: !445, size: 128, offset: 128)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6579, file: !260, line: 297, baseType: !445, size: 128, offset: 256)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6579, file: !260, line: 298, baseType: !445, size: 128, offset: 384)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6579, file: !260, line: 299, baseType: !1108, size: 192, offset: 512)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6579, file: !260, line: 300, baseType: !884, offset: 704)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6579, file: !260, line: 301, baseType: !544, size: 32, offset: 704)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6579, file: !260, line: 302, baseType: !969, size: 64, offset: 768)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6579, file: !260, line: 303, baseType: !6590, size: 64, offset: 832)
!6590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !260, line: 68, size: 64, elements: !6591)
!6591 = !{!6592, !6604}
!6592 = !DIDerivedType(tag: DW_TAG_member, scope: !6590, file: !260, line: 69, baseType: !6593, size: 32)
!6593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6590, file: !260, line: 69, size: 32, elements: !6594)
!6594 = !{!6595, !6596, !6597}
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6593, file: !260, line: 70, baseType: !804, size: 32)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6593, file: !260, line: 71, baseType: !812, size: 32)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6593, file: !260, line: 72, baseType: !6598, size: 32)
!6598 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6599, line: 24, baseType: !6600)
!6599 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6599, line: 22, size: 32, elements: !6601)
!6601 = !{!6602}
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6600, file: !6599, line: 23, baseType: !6603, size: 32)
!6603 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6599, line: 20, baseType: !810)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6590, file: !260, line: 74, baseType: !259, size: 32, offset: 32)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6579, file: !260, line: 304, baseType: !979, size: 64, offset: 896)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6579, file: !260, line: 305, baseType: !473, size: 64, offset: 960)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6579, file: !260, line: 306, baseType: !6608, size: 576, offset: 1024)
!6608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !260, line: 205, size: 576, elements: !6609)
!6609 = !{!6610, !6612, !6613, !6614, !6615, !6616, !6617, !6618, !6619}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6608, file: !260, line: 206, baseType: !6611, size: 64)
!6611 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !260, line: 66, baseType: !540)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6608, file: !260, line: 207, baseType: !6611, size: 64, offset: 64)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6608, file: !260, line: 208, baseType: !6611, size: 64, offset: 128)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6608, file: !260, line: 209, baseType: !6611, size: 64, offset: 192)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6608, file: !260, line: 210, baseType: !6611, size: 64, offset: 256)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6608, file: !260, line: 211, baseType: !6611, size: 64, offset: 320)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6608, file: !260, line: 212, baseType: !6611, size: 64, offset: 384)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6608, file: !260, line: 213, baseType: !1795, size: 64, offset: 448)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6608, file: !260, line: 214, baseType: !1795, size: 64, offset: 512)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6572, file: !260, line: 324, baseType: !6621, size: 64, offset: 64)
!6621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6622, size: 64)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{!6578, !969, !7}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6572, file: !260, line: 325, baseType: !6625, size: 64, offset: 128)
!6625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6626, size: 64)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{null, !6578}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6572, file: !260, line: 326, baseType: !6575, size: 64, offset: 192)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6572, file: !260, line: 327, baseType: !6575, size: 64, offset: 256)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6572, file: !260, line: 328, baseType: !6575, size: 64, offset: 320)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6572, file: !260, line: 329, baseType: !1071, size: 64, offset: 384)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6572, file: !260, line: 332, baseType: !6633, size: 64, offset: 448)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!6636, !797}
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6611, size: 64)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6572, file: !260, line: 333, baseType: !6638, size: 64, offset: 512)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 64)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!7, !797, !6641}
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6598, size: 64)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6572, file: !260, line: 335, baseType: !6643, size: 64, offset: 576)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{!7, !797, !6636}
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6572, file: !260, line: 337, baseType: !6647, size: 64, offset: 640)
!6647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6648, size: 64)
!6648 = !DISubroutineType(types: !6649)
!6649 = !{!7, !969, !6650}
!6650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6590, size: 64)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !970, file: !243, line: 1425, baseType: !6652, size: 64, offset: 512)
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6653, size: 64)
!6653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6654)
!6654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !260, line: 428, size: 704, elements: !6655)
!6655 = !{!6656, !6660, !6661, !6665, !6666, !6667, !6682, !6705, !6709, !6710, !6733}
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6654, file: !260, line: 429, baseType: !6657, size: 64)
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6658, size: 64)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!7, !969, !7, !7, !960}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6654, file: !260, line: 430, baseType: !1071, size: 64, offset: 64)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6654, file: !260, line: 431, baseType: !6662, size: 64, offset: 128)
!6662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6663, size: 64)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!7, !969, !14}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6654, file: !260, line: 432, baseType: !6662, size: 64, offset: 192)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6654, file: !260, line: 433, baseType: !1071, size: 64, offset: 256)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6654, file: !260, line: 434, baseType: !6668, size: 64, offset: 320)
!6668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6669, size: 64)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{!7, !969, !7, !6671}
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !260, line: 415, size: 256, elements: !6673)
!6673 = !{!6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681}
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6672, file: !260, line: 416, baseType: !7, size: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6672, file: !260, line: 417, baseType: !14, size: 32, offset: 32)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6672, file: !260, line: 418, baseType: !14, size: 32, offset: 64)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6672, file: !260, line: 420, baseType: !14, size: 32, offset: 96)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6672, file: !260, line: 421, baseType: !14, size: 32, offset: 128)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6672, file: !260, line: 422, baseType: !14, size: 32, offset: 160)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6672, file: !260, line: 423, baseType: !14, size: 32, offset: 192)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6672, file: !260, line: 424, baseType: !14, size: 32, offset: 224)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6654, file: !260, line: 435, baseType: !6683, size: 64, offset: 384)
!6683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6684, size: 64)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{!7, !969, !6590, !6686}
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 64)
!6687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !260, line: 343, size: 960, elements: !6688)
!6688 = !{!6689, !6690, !6691, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6702, !6703, !6704}
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6687, file: !260, line: 344, baseType: !7, size: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6687, file: !260, line: 345, baseType: !492, size: 64, offset: 64)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6687, file: !260, line: 346, baseType: !492, size: 64, offset: 128)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6687, file: !260, line: 347, baseType: !492, size: 64, offset: 192)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6687, file: !260, line: 348, baseType: !492, size: 64, offset: 256)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6687, file: !260, line: 349, baseType: !492, size: 64, offset: 320)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6687, file: !260, line: 350, baseType: !492, size: 64, offset: 384)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6687, file: !260, line: 351, baseType: !538, size: 64, offset: 448)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6687, file: !260, line: 353, baseType: !538, size: 64, offset: 512)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6687, file: !260, line: 354, baseType: !7, size: 32, offset: 576)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6687, file: !260, line: 355, baseType: !7, size: 32, offset: 608)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6687, file: !260, line: 356, baseType: !492, size: 64, offset: 640)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6687, file: !260, line: 357, baseType: !492, size: 64, offset: 704)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6687, file: !260, line: 358, baseType: !492, size: 64, offset: 768)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6687, file: !260, line: 359, baseType: !538, size: 64, offset: 832)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6687, file: !260, line: 360, baseType: !7, size: 32, offset: 896)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6654, file: !260, line: 436, baseType: !6706, size: 64, offset: 448)
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6707, size: 64)
!6707 = !DISubroutineType(types: !6708)
!6708 = !{!7, !969, !6650, !6686}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6654, file: !260, line: 438, baseType: !6683, size: 64, offset: 512)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6654, file: !260, line: 439, baseType: !6711, size: 64, offset: 576)
!6711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6712, size: 64)
!6712 = !DISubroutineType(types: !6713)
!6713 = !{!7, !969, !6714}
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !260, line: 409, size: 1408, elements: !6716)
!6716 = !{!6717, !6718}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6715, file: !260, line: 410, baseType: !14, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6715, file: !260, line: 411, baseType: !6719, size: 1344, offset: 64)
!6719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6720, size: 1344, elements: !1021)
!6720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !260, line: 395, size: 448, elements: !6721)
!6721 = !{!6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6732}
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6720, file: !260, line: 396, baseType: !14, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6720, file: !260, line: 397, baseType: !14, size: 32, offset: 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6720, file: !260, line: 399, baseType: !14, size: 32, offset: 64)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6720, file: !260, line: 400, baseType: !14, size: 32, offset: 96)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6720, file: !260, line: 401, baseType: !14, size: 32, offset: 128)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6720, file: !260, line: 402, baseType: !14, size: 32, offset: 160)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6720, file: !260, line: 403, baseType: !14, size: 32, offset: 192)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6720, file: !260, line: 404, baseType: !496, size: 64, offset: 256)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6720, file: !260, line: 405, baseType: !6731, size: 64, offset: 320)
!6731 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !438, line: 126, baseType: !492)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6720, file: !260, line: 406, baseType: !6731, size: 64, offset: 384)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6654, file: !260, line: 440, baseType: !6662, size: 64, offset: 640)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !970, file: !243, line: 1426, baseType: !6735, size: 64, offset: 576)
!6735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6736, size: 64)
!6736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6737)
!6737 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !243, line: 49, flags: DIFlagFwdDecl)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !970, file: !243, line: 1427, baseType: !473, size: 64, offset: 640)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !970, file: !243, line: 1428, baseType: !473, size: 64, offset: 704)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !970, file: !243, line: 1429, baseType: !473, size: 64, offset: 768)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !970, file: !243, line: 1430, baseType: !828, size: 64, offset: 832)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !970, file: !243, line: 1431, baseType: !1316, size: 256, offset: 896)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !970, file: !243, line: 1432, baseType: !7, size: 32, offset: 1152)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !970, file: !243, line: 1433, baseType: !544, size: 32, offset: 1184)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !970, file: !243, line: 1437, baseType: !6746, size: 64, offset: 1216)
!6746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6747, size: 64)
!6747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6748, size: 64)
!6748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6749)
!6749 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !243, line: 1437, flags: DIFlagFwdDecl)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !970, file: !243, line: 1449, baseType: !6751, size: 64, offset: 1280)
!6751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !845, line: 34, size: 64, elements: !6752)
!6752 = !{!6753}
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6751, file: !845, line: 35, baseType: !848, size: 64)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !970, file: !243, line: 1450, baseType: !445, size: 128, offset: 1344)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !970, file: !243, line: 1451, baseType: !5204, size: 64, offset: 1472)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !970, file: !243, line: 1452, baseType: !5224, size: 64, offset: 1536)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !970, file: !243, line: 1453, baseType: !6758, size: 64, offset: 1600)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 64)
!6759 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !243, line: 1453, flags: DIFlagFwdDecl)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !970, file: !243, line: 1454, baseType: !437, size: 128, offset: 1664)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !970, file: !243, line: 1455, baseType: !14, size: 32, offset: 1792)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !970, file: !243, line: 1456, baseType: !6763, size: 2432, offset: 1856)
!6763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !260, line: 518, size: 2432, elements: !6764)
!6764 = !{!6765, !6766, !6767, !6769, !6801}
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6763, file: !260, line: 519, baseType: !14, size: 32)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6763, file: !260, line: 520, baseType: !1316, size: 256, offset: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6763, file: !260, line: 521, baseType: !6768, size: 192, offset: 320)
!6768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 192, elements: !1021)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6763, file: !260, line: 522, baseType: !6770, size: 1728, offset: 512)
!6770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6771, size: 1728, elements: !1021)
!6771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !260, line: 222, size: 576, elements: !6772)
!6772 = !{!6773, !6793, !6794, !6795, !6796, !6797, !6798, !6799, !6800}
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6771, file: !260, line: 223, baseType: !6774, size: 64)
!6774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6775, size: 64)
!6775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !260, line: 443, size: 256, elements: !6776)
!6776 = !{!6777, !6778, !6791, !6792}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6775, file: !260, line: 444, baseType: !7, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6775, file: !260, line: 445, baseType: !6779, size: 64, offset: 64)
!6779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6780, size: 64)
!6780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6781)
!6781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !260, line: 310, size: 512, elements: !6782)
!6782 = !{!6783, !6784, !6785, !6786, !6787, !6788, !6789, !6790}
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6781, file: !260, line: 311, baseType: !1071, size: 64)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6781, file: !260, line: 312, baseType: !1071, size: 64, offset: 64)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6781, file: !260, line: 313, baseType: !1071, size: 64, offset: 128)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6781, file: !260, line: 314, baseType: !1071, size: 64, offset: 192)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6781, file: !260, line: 315, baseType: !6575, size: 64, offset: 256)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6781, file: !260, line: 316, baseType: !6575, size: 64, offset: 320)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6781, file: !260, line: 317, baseType: !6575, size: 64, offset: 384)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6781, file: !260, line: 318, baseType: !6647, size: 64, offset: 448)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6775, file: !260, line: 446, baseType: !1006, size: 64, offset: 128)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6775, file: !260, line: 447, baseType: !6774, size: 64, offset: 192)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6771, file: !260, line: 224, baseType: !7, size: 32, offset: 64)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6771, file: !260, line: 226, baseType: !445, size: 128, offset: 128)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6771, file: !260, line: 227, baseType: !473, size: 64, offset: 256)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6771, file: !260, line: 228, baseType: !14, size: 32, offset: 320)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6771, file: !260, line: 229, baseType: !14, size: 32, offset: 352)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6771, file: !260, line: 230, baseType: !6611, size: 64, offset: 384)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6771, file: !260, line: 231, baseType: !6611, size: 64, offset: 448)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6771, file: !260, line: 232, baseType: !726, size: 64, offset: 512)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6763, file: !260, line: 523, baseType: !6802, size: 192, offset: 2240)
!6802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6779, size: 192, elements: !1021)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !970, file: !243, line: 1458, baseType: !6804, size: 2112, offset: 4288)
!6804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !243, line: 1410, size: 2112, elements: !6805)
!6805 = !{!6806, !6807, !6808}
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6804, file: !243, line: 1411, baseType: !7, size: 32)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6804, file: !243, line: 1412, baseType: !1254, size: 128, offset: 64)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6804, file: !243, line: 1413, baseType: !6809, size: 1920, offset: 192)
!6809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6810, size: 1920, elements: !1021)
!6810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6811, line: 12, size: 640, elements: !6812)
!6811 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6812 = !{!6813, !6821, !6823, !6828, !6829}
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6810, file: !6811, line: 13, baseType: !6814, size: 320)
!6814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6815, line: 17, size: 320, elements: !6816)
!6815 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6816 = !{!6817, !6818, !6819, !6820}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6814, file: !6815, line: 18, baseType: !7, size: 32)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6814, file: !6815, line: 19, baseType: !7, size: 32, offset: 32)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6814, file: !6815, line: 20, baseType: !1254, size: 128, offset: 64)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6814, file: !6815, line: 22, baseType: !460, size: 128, align: 64, offset: 192)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6810, file: !6811, line: 14, baseType: !6822, size: 64, offset: 320)
!6822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6810, file: !6811, line: 15, baseType: !6824, size: 64, offset: 384)
!6824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6825, line: 16, size: 64, elements: !6826)
!6825 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6826 = !{!6827}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6824, file: !6825, line: 17, baseType: !1411, size: 64)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6810, file: !6811, line: 16, baseType: !1254, size: 128, offset: 448)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6810, file: !6811, line: 17, baseType: !544, size: 32, offset: 576)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !970, file: !243, line: 1465, baseType: !726, size: 64, offset: 6400)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !970, file: !243, line: 1468, baseType: !862, size: 32, offset: 6464)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !970, file: !243, line: 1470, baseType: !1795, size: 64, offset: 6528)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !970, file: !243, line: 1471, baseType: !1795, size: 64, offset: 6592)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !970, file: !243, line: 1473, baseType: !624, size: 32, offset: 6656)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !970, file: !243, line: 1474, baseType: !6836, size: 64, offset: 6720)
!6836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6837, size: 64)
!6837 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !243, line: 603, flags: DIFlagFwdDecl)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !970, file: !243, line: 1477, baseType: !4348, size: 256, offset: 6784)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !970, file: !243, line: 1478, baseType: !6840, size: 128, offset: 7040)
!6840 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6841, line: 18, baseType: !6842)
!6841 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6841, line: 16, size: 128, elements: !6843)
!6843 = !{!6844}
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6842, file: !6841, line: 17, baseType: !2383, size: 128)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !970, file: !243, line: 1480, baseType: !14, size: 32, offset: 7168)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !970, file: !243, line: 1481, baseType: !5282, size: 32, offset: 7200)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !970, file: !243, line: 1487, baseType: !1108, size: 192, offset: 7232)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !970, file: !243, line: 1493, baseType: !453, size: 64, offset: 7424)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !970, file: !243, line: 1495, baseType: !901, size: 64, offset: 7488)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !970, file: !243, line: 1500, baseType: !7, size: 32, offset: 7552)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !970, file: !243, line: 1502, baseType: !6852, size: 448, offset: 7616)
!6852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6559, line: 60, size: 448, elements: !6853)
!6853 = !{!6854, !6859, !6860, !6861, !6862, !6863, !6864}
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6852, file: !6559, line: 61, baseType: !6855, size: 64)
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6856, size: 64)
!6856 = !DISubroutineType(types: !6857)
!6857 = !{!473, !6858, !6557}
!6858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6852, size: 64)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6852, file: !6559, line: 63, baseType: !6855, size: 64, offset: 64)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6852, file: !6559, line: 66, baseType: !669, size: 64, offset: 128)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6852, file: !6559, line: 67, baseType: !7, size: 32, offset: 192)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6852, file: !6559, line: 68, baseType: !14, size: 32, offset: 224)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6852, file: !6559, line: 71, baseType: !445, size: 128, offset: 256)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6852, file: !6559, line: 77, baseType: !6865, size: 64, offset: 384)
!6865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !970, file: !243, line: 1505, baseType: !532, size: 64, offset: 8064)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !970, file: !243, line: 1508, baseType: !532, size: 64, offset: 8128)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !970, file: !243, line: 1511, baseType: !7, size: 32, offset: 8192)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !970, file: !243, line: 1514, baseType: !6542, size: 32, offset: 8224)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !970, file: !243, line: 1517, baseType: !3090, size: 64, offset: 8256)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !970, file: !243, line: 1518, baseType: !1011, size: 64, offset: 8320)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !970, file: !243, line: 1525, baseType: !1912, size: 64, offset: 8384)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !970, file: !243, line: 1532, baseType: !6874, size: 64, offset: 8448)
!6874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6875, line: 52, size: 64, elements: !6876)
!6875 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6876 = !{!6877}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6874, file: !6875, line: 53, baseType: !6878, size: 64)
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6879, size: 64)
!6879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6875, line: 40, size: 256, elements: !6880)
!6880 = !{!6881, !6882, !6887}
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6879, file: !6875, line: 42, baseType: !884)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6879, file: !6875, line: 44, baseType: !6883, size: 192)
!6883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6875, line: 28, size: 192, elements: !6884)
!6884 = !{!6885, !6886}
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6883, file: !6875, line: 29, baseType: !445, size: 128)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6883, file: !6875, line: 31, baseType: !669, size: 64, offset: 128)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6879, file: !6875, line: 49, baseType: !669, size: 64, offset: 192)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !970, file: !243, line: 1533, baseType: !6874, size: 64, offset: 8512)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !970, file: !243, line: 1534, baseType: !460, size: 128, align: 64, offset: 8576)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !970, file: !243, line: 1535, baseType: !1960, size: 256, offset: 8704)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !970, file: !243, line: 1537, baseType: !1108, size: 192, offset: 8960)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !970, file: !243, line: 1542, baseType: !7, size: 32, offset: 9152)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !970, file: !243, line: 1545, baseType: !884, offset: 9184)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !970, file: !243, line: 1546, baseType: !445, size: 128, offset: 9216)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !970, file: !243, line: 1548, baseType: !884, offset: 9344)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !970, file: !243, line: 1549, baseType: !445, size: 128, offset: 9344)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !829, file: !830, line: 104, baseType: !473, size: 64, offset: 896)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !829, file: !830, line: 105, baseType: !726, size: 64, offset: 960)
!6899 = !DIDerivedType(tag: DW_TAG_member, scope: !829, file: !830, line: 107, baseType: !6900, size: 128, offset: 1024)
!6900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !829, file: !830, line: 107, size: 128, elements: !6901)
!6901 = !{!6902, !6903}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6900, file: !830, line: 108, baseType: !445, size: 128)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6900, file: !830, line: 109, baseType: !1253, size: 64)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !829, file: !830, line: 111, baseType: !445, size: 128, offset: 1152)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !829, file: !830, line: 112, baseType: !445, size: 128, offset: 1280)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !829, file: !830, line: 120, baseType: !6907, size: 128, offset: 1408)
!6907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !829, file: !830, line: 116, size: 128, elements: !6908)
!6908 = !{!6909, !6910, !6911}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6907, file: !830, line: 117, baseType: !437, size: 128)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6907, file: !830, line: 118, baseType: !844, size: 128)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6907, file: !830, line: 119, baseType: !460, size: 128, align: 64)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !822, file: !243, line: 1866, baseType: !6913, size: 64, offset: 64)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 64)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!453, !828, !797, !6916}
!6916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6917, size: 64)
!6917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6918, line: 10, size: 128, elements: !6919)
!6918 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6919 = !{!6920, !6921}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6917, file: !6918, line: 11, baseType: !3877, size: 64)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6917, file: !6918, line: 12, baseType: !726, size: 64, offset: 64)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !822, file: !243, line: 1867, baseType: !6923, size: 64, offset: 128)
!6923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6924, size: 64)
!6924 = !DISubroutineType(types: !6925)
!6925 = !{!7, !797, !7}
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !822, file: !243, line: 1868, baseType: !6927, size: 64, offset: 192)
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 64)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{!6930, !797, !7}
!6930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6931, size: 64)
!6931 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !243, line: 581, flags: DIFlagFwdDecl)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !822, file: !243, line: 1870, baseType: !6933, size: 64, offset: 256)
!6933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6934, size: 64)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{!7, !828, !733, !7}
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !822, file: !243, line: 1872, baseType: !6937, size: 64, offset: 320)
!6937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6938, size: 64)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{!7, !797, !828, !801, !696}
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !822, file: !243, line: 1873, baseType: !6941, size: 64, offset: 384)
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{!7, !828, !797, !828}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !822, file: !243, line: 1874, baseType: !6945, size: 64, offset: 448)
!6945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6946, size: 64)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{!7, !797, !828}
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !822, file: !243, line: 1875, baseType: !6949, size: 64, offset: 512)
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6950, size: 64)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!7, !797, !828, !453}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !822, file: !243, line: 1876, baseType: !6953, size: 64, offset: 576)
!6953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6954, size: 64)
!6954 = !DISubroutineType(types: !6955)
!6955 = !{!7, !797, !828, !801}
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !822, file: !243, line: 1877, baseType: !6945, size: 64, offset: 640)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !822, file: !243, line: 1878, baseType: !6958, size: 64, offset: 704)
!6958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6959, size: 64)
!6959 = !DISubroutineType(types: !6960)
!6960 = !{!7, !797, !828, !801, !974}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !822, file: !243, line: 1879, baseType: !6962, size: 64, offset: 768)
!6962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6963, size: 64)
!6963 = !DISubroutineType(types: !6964)
!6964 = !{!7, !797, !828, !797, !828, !14}
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !822, file: !243, line: 1881, baseType: !6966, size: 64, offset: 832)
!6966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6967, size: 64)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{!7, !828, !6969}
!6969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6970, size: 64)
!6970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !243, line: 219, size: 640, elements: !6971)
!6971 = !{!6972, !6973, !6974, !6975, !6976, !6977, !6982, !6983, !6984}
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6970, file: !243, line: 220, baseType: !14, size: 32)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6970, file: !243, line: 221, baseType: !801, size: 16, offset: 32)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6970, file: !243, line: 222, baseType: !804, size: 32, offset: 64)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6970, file: !243, line: 223, baseType: !812, size: 32, offset: 96)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6970, file: !243, line: 224, baseType: !979, size: 64, offset: 128)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6970, file: !243, line: 225, baseType: !6978, size: 128, offset: 192)
!6978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1796, line: 13, size: 128, elements: !6979)
!6979 = !{!6980, !6981}
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6978, file: !1796, line: 14, baseType: !1795, size: 64)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6978, file: !1796, line: 15, baseType: !669, size: 64, offset: 64)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6970, file: !243, line: 226, baseType: !6978, size: 128, offset: 320)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6970, file: !243, line: 227, baseType: !6978, size: 128, offset: 448)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6970, file: !243, line: 234, baseType: !1164, size: 64, offset: 576)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !822, file: !243, line: 1882, baseType: !6986, size: 64, offset: 896)
!6986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6987, size: 64)
!6987 = !DISubroutineType(types: !6988)
!6988 = !{!7, !960, !6989, !862, !14}
!6989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6990, size: 64)
!6990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6991, line: 22, size: 1152, elements: !6992)
!6991 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6992 = !{!6993, !6994, !6995, !6996, !6997, !6998, !6999, !7000, !7001, !7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010}
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6990, file: !6991, line: 23, baseType: !862, size: 32)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6990, file: !6991, line: 24, baseType: !801, size: 16, offset: 32)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6990, file: !6991, line: 25, baseType: !14, size: 32, offset: 64)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6990, file: !6991, line: 26, baseType: !1803, size: 32, offset: 96)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6990, file: !6991, line: 27, baseType: !492, size: 64, offset: 128)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6990, file: !6991, line: 28, baseType: !492, size: 64, offset: 192)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6990, file: !6991, line: 37, baseType: !492, size: 64, offset: 256)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6990, file: !6991, line: 38, baseType: !974, size: 32, offset: 320)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6990, file: !6991, line: 39, baseType: !974, size: 32, offset: 352)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6990, file: !6991, line: 40, baseType: !804, size: 32, offset: 384)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6990, file: !6991, line: 41, baseType: !812, size: 32, offset: 416)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6990, file: !6991, line: 42, baseType: !979, size: 64, offset: 448)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6990, file: !6991, line: 43, baseType: !6978, size: 128, offset: 512)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6990, file: !6991, line: 44, baseType: !6978, size: 128, offset: 640)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6990, file: !6991, line: 45, baseType: !6978, size: 128, offset: 768)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6990, file: !6991, line: 46, baseType: !6978, size: 128, offset: 896)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6990, file: !6991, line: 47, baseType: !492, size: 64, offset: 1024)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6990, file: !6991, line: 48, baseType: !492, size: 64, offset: 1088)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !822, file: !243, line: 1883, baseType: !7012, size: 64, offset: 960)
!7012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7013, size: 64)
!7013 = !DISubroutineType(types: !7014)
!7014 = !{!1169, !828, !733, !750}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !822, file: !243, line: 1884, baseType: !7016, size: 64, offset: 1024)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 64)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{!7, !797, !7019, !492, !492}
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !243, line: 50, flags: DIFlagFwdDecl)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !822, file: !243, line: 1886, baseType: !7022, size: 64, offset: 1088)
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 64)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{!7, !797, !7025, !7}
!7025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6978, size: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !822, file: !243, line: 1887, baseType: !7027, size: 64, offset: 1152)
!7027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7028, size: 64)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{!7, !797, !828, !1164, !14, !801}
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !822, file: !243, line: 1890, baseType: !6953, size: 64, offset: 1216)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !822, file: !243, line: 1891, baseType: !7032, size: 64, offset: 1280)
!7032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7033, size: 64)
!7033 = !DISubroutineType(types: !7034)
!7034 = !{!7, !797, !6930, !7}
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !798, file: !243, line: 623, baseType: !969, size: 64, offset: 192)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !798, file: !243, line: 624, baseType: !793, size: 64, offset: 256)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !798, file: !243, line: 631, baseType: !473, size: 64, offset: 320)
!7038 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 639, baseType: !7039, size: 32, offset: 384)
!7039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 639, size: 32, elements: !7040)
!7040 = !{!7041, !7042}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !7039, file: !243, line: 640, baseType: !5596, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !7039, file: !243, line: 641, baseType: !14, size: 32)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !798, file: !243, line: 643, baseType: !974, size: 32, offset: 416)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !798, file: !243, line: 644, baseType: !979, size: 64, offset: 448)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !798, file: !243, line: 645, baseType: !6978, size: 128, offset: 512)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !798, file: !243, line: 646, baseType: !6978, size: 128, offset: 640)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !798, file: !243, line: 647, baseType: !6978, size: 128, offset: 768)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !798, file: !243, line: 648, baseType: !884, offset: 896)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !798, file: !243, line: 649, baseType: !633, size: 16, offset: 896)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !798, file: !243, line: 650, baseType: !1551, size: 8, offset: 912)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !798, file: !243, line: 651, baseType: !1551, size: 8, offset: 920)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !798, file: !243, line: 652, baseType: !6731, size: 64, offset: 960)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !798, file: !243, line: 659, baseType: !473, size: 64, offset: 1024)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !798, file: !243, line: 660, baseType: !1316, size: 256, offset: 1088)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !798, file: !243, line: 662, baseType: !473, size: 64, offset: 1344)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !798, file: !243, line: 663, baseType: !473, size: 64, offset: 1408)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !798, file: !243, line: 665, baseType: !437, size: 128, offset: 1472)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !798, file: !243, line: 666, baseType: !445, size: 128, offset: 1600)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !798, file: !243, line: 675, baseType: !445, size: 128, offset: 1728)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !798, file: !243, line: 676, baseType: !445, size: 128, offset: 1856)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !798, file: !243, line: 677, baseType: !445, size: 128, offset: 1984)
!7062 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 678, baseType: !7063, size: 128, offset: 2112)
!7063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 678, size: 128, elements: !7064)
!7064 = !{!7065, !7066}
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !7063, file: !243, line: 679, baseType: !1011, size: 64)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !7063, file: !243, line: 680, baseType: !460, size: 128, align: 64)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !798, file: !243, line: 682, baseType: !534, size: 64, offset: 2240)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !798, file: !243, line: 683, baseType: !534, size: 64, offset: 2304)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !798, file: !243, line: 684, baseType: !544, size: 32, offset: 2368)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !798, file: !243, line: 685, baseType: !544, size: 32, offset: 2400)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !798, file: !243, line: 686, baseType: !544, size: 32, offset: 2432)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !798, file: !243, line: 688, baseType: !544, size: 32, offset: 2464)
!7073 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 690, baseType: !7074, size: 64, offset: 2496)
!7074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 690, size: 64, elements: !7075)
!7075 = !{!7076, !7077}
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !7074, file: !243, line: 691, baseType: !1155, size: 64)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !7074, file: !243, line: 692, baseType: !1036, size: 64)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !798, file: !243, line: 694, baseType: !7079, size: 64, offset: 2560)
!7079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7080, size: 64)
!7080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !243, line: 1100, size: 384, elements: !7081)
!7081 = !{!7082, !7083, !7084, !7085}
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !7080, file: !243, line: 1101, baseType: !884)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !7080, file: !243, line: 1102, baseType: !445, size: 128)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !7080, file: !243, line: 1103, baseType: !445, size: 128, offset: 128)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !7080, file: !243, line: 1104, baseType: !445, size: 128, offset: 256)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !798, file: !243, line: 695, baseType: !794, size: 1216, align: 64, offset: 2624)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !798, file: !243, line: 696, baseType: !445, size: 128, offset: 3840)
!7088 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 697, baseType: !7089, size: 64, offset: 3968)
!7089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 697, size: 64, elements: !7090)
!7090 = !{!7091, !7092, !7093, !7096, !7097}
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !7089, file: !243, line: 698, baseType: !6056, size: 64)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !7089, file: !243, line: 699, baseType: !5204, size: 64)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !7089, file: !243, line: 700, baseType: !7094, size: 64)
!7094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7095, size: 64)
!7095 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !243, line: 700, flags: DIFlagFwdDecl)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !7089, file: !243, line: 701, baseType: !733, size: 64)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !7089, file: !243, line: 702, baseType: !14, size: 32)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !798, file: !243, line: 705, baseType: !624, size: 32, offset: 4032)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !798, file: !243, line: 708, baseType: !624, size: 32, offset: 4064)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !798, file: !243, line: 709, baseType: !6836, size: 64, offset: 4096)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !798, file: !243, line: 720, baseType: !726, size: 64, offset: 4160)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !794, file: !243, line: 453, baseType: !2138, size: 128, offset: 64)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !794, file: !243, line: 454, baseType: !2143, size: 32, offset: 192)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !794, file: !243, line: 455, baseType: !544, size: 32, offset: 224)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !794, file: !243, line: 460, baseType: !1541, size: 128, offset: 256)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !794, file: !243, line: 461, baseType: !1316, size: 256, offset: 384)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !794, file: !243, line: 462, baseType: !473, size: 64, offset: 640)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !794, file: !243, line: 463, baseType: !473, size: 64, offset: 704)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !794, file: !243, line: 464, baseType: !473, size: 64, offset: 768)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !794, file: !243, line: 465, baseType: !7111, size: 64, offset: 832)
!7111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7112, size: 64)
!7112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7113)
!7113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !243, line: 367, size: 1408, elements: !7114)
!7114 = !{!7115, !7119, !7123, !7127, !7131, !7135, !7147, !7151, !7155, !7159, !7163, !7167, !7171, !7172, !7176, !7182, !7183, !7184, !7188, !7193, !7197, !7204}
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !7113, file: !243, line: 368, baseType: !7116, size: 64)
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7117, size: 64)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{!7, !780, !1048}
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !7113, file: !243, line: 369, baseType: !7120, size: 64, offset: 64)
!7120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7121, size: 64)
!7121 = !DISubroutineType(types: !7122)
!7122 = !{!7, !1164, !780}
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !7113, file: !243, line: 372, baseType: !7124, size: 64, offset: 128)
!7124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7125, size: 64)
!7125 = !DISubroutineType(types: !7126)
!7126 = !{!7, !793, !1048}
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !7113, file: !243, line: 375, baseType: !7128, size: 64, offset: 192)
!7128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7129, size: 64)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!7, !780}
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !7113, file: !243, line: 381, baseType: !7132, size: 64, offset: 256)
!7132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7133, size: 64)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!7, !1164, !793, !448, !14}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !7113, file: !243, line: 383, baseType: !7136, size: 64, offset: 320)
!7136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7137, size: 64)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{null, !7139}
!7139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7140, size: 64)
!7140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1201, line: 795, size: 256, elements: !7141)
!7141 = !{!7142, !7143, !7144, !7145, !7146}
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7140, file: !1201, line: 796, baseType: !1164, size: 64)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !7140, file: !1201, line: 797, baseType: !793, size: 64, offset: 64)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !7140, file: !1201, line: 799, baseType: !473, size: 64, offset: 128)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !7140, file: !1201, line: 800, baseType: !14, size: 32, offset: 192)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !7140, file: !1201, line: 801, baseType: !14, size: 32, offset: 224)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !7113, file: !243, line: 385, baseType: !7148, size: 64, offset: 384)
!7148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7149, size: 64)
!7149 = !DISubroutineType(types: !7150)
!7150 = !{!7, !1164, !793, !979, !14, !14, !6136, !4067}
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !7113, file: !243, line: 388, baseType: !7152, size: 64, offset: 448)
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7153, size: 64)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!7, !1164, !793, !979, !14, !14, !780, !726}
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !7113, file: !243, line: 393, baseType: !7156, size: 64, offset: 512)
!7156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7157, size: 64)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!4362, !793, !4362}
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !7113, file: !243, line: 394, baseType: !7160, size: 64, offset: 576)
!7160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7161, size: 64)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{null, !780, !14, !14}
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !7113, file: !243, line: 395, baseType: !7164, size: 64, offset: 640)
!7164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7165, size: 64)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!7, !780, !2143}
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !7113, file: !243, line: 396, baseType: !7168, size: 64, offset: 704)
!7168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7169, size: 64)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{null, !780}
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !7113, file: !243, line: 397, baseType: !1177, size: 64, offset: 768)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !7113, file: !243, line: 402, baseType: !7173, size: 64, offset: 832)
!7173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7174, size: 64)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{!7, !793, !780, !780, !265}
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !7113, file: !243, line: 404, baseType: !7177, size: 64, offset: 896)
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7178, size: 64)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!696, !780, !7180}
!7180 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !7181, line: 305, baseType: !14)
!7181 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !7113, file: !243, line: 405, baseType: !7168, size: 64, offset: 960)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !7113, file: !243, line: 406, baseType: !7128, size: 64, offset: 1024)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !7113, file: !243, line: 407, baseType: !7185, size: 64, offset: 1088)
!7185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7186, size: 64)
!7186 = !DISubroutineType(types: !7187)
!7187 = !{!7, !780, !473, !473}
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !7113, file: !243, line: 409, baseType: !7189, size: 64, offset: 1152)
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7190, size: 64)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{null, !780, !7192, !7192}
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !7113, file: !243, line: 410, baseType: !7194, size: 64, offset: 1216)
!7194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7195, size: 64)
!7195 = !DISubroutineType(types: !7196)
!7196 = !{!7, !793, !780}
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !7113, file: !243, line: 413, baseType: !7198, size: 64, offset: 1280)
!7198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7199, size: 64)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{!7, !7201, !1164, !7203}
!7201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7202, size: 64)
!7202 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !243, line: 61, flags: DIFlagFwdDecl)
!7203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !7113, file: !243, line: 415, baseType: !7205, size: 64, offset: 1344)
!7205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7206, size: 64)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{null, !1164}
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !794, file: !243, line: 466, baseType: !473, size: 64, offset: 896)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !794, file: !243, line: 467, baseType: !6542, size: 32, offset: 960)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !794, file: !243, line: 468, baseType: !884, offset: 992)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !794, file: !243, line: 469, baseType: !445, size: 128, offset: 1024)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !794, file: !243, line: 470, baseType: !726, size: 64, offset: 1152)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !789, file: !782, line: 87, baseType: !473, size: 64, offset: 192)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !789, file: !782, line: 94, baseType: !473, size: 64, offset: 256)
!7215 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 96, baseType: !7216, size: 64)
!7216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 96, size: 64, elements: !7217)
!7217 = !{!7218}
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !7216, file: !782, line: 101, baseType: !7219, size: 64)
!7219 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !438, line: 143, baseType: !492)
!7220 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 103, baseType: !7221, size: 320)
!7221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 103, size: 320, elements: !7222)
!7222 = !{!7223, !7233, !7234, !7235}
!7223 = !DIDerivedType(tag: DW_TAG_member, scope: !7221, file: !782, line: 104, baseType: !7224, size: 128)
!7224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7221, file: !782, line: 104, size: 128, elements: !7225)
!7225 = !{!7226, !7227}
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !7224, file: !782, line: 105, baseType: !445, size: 128)
!7227 = !DIDerivedType(tag: DW_TAG_member, scope: !7224, file: !782, line: 106, baseType: !7228, size: 128)
!7228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7224, file: !782, line: 106, size: 128, elements: !7229)
!7229 = !{!7230, !7231, !7232}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7228, file: !782, line: 107, baseType: !780, size: 64)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !7228, file: !782, line: 109, baseType: !7, size: 32, offset: 64)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !7228, file: !782, line: 110, baseType: !7, size: 32, offset: 96)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !7221, file: !782, line: 117, baseType: !2424, size: 64, offset: 128)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !7221, file: !782, line: 119, baseType: !726, size: 64, offset: 192)
!7235 = !DIDerivedType(tag: DW_TAG_member, scope: !7221, file: !782, line: 120, baseType: !7236, size: 64, offset: 256)
!7236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7221, file: !782, line: 120, size: 64, elements: !7237)
!7237 = !{!7238, !7239, !7240}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !7236, file: !782, line: 121, baseType: !726, size: 64)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !7236, file: !782, line: 122, baseType: !473, size: 64)
!7240 = !DIDerivedType(tag: DW_TAG_member, scope: !7236, file: !782, line: 123, baseType: !7241, size: 32)
!7241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7236, file: !782, line: 123, size: 32, elements: !7242)
!7242 = !{!7243, !7244, !7245}
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !7241, file: !782, line: 124, baseType: !14, size: 16, flags: DIFlagBitField, extraData: i64 0)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !7241, file: !782, line: 125, baseType: !14, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !7241, file: !782, line: 126, baseType: !14, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7246 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 130, baseType: !7247, size: 192)
!7247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 130, size: 192, elements: !7248)
!7248 = !{!7249, !7250, !7251, !7252, !7253}
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !7247, file: !782, line: 131, baseType: !473, size: 64)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !7247, file: !782, line: 134, baseType: !650, size: 8, offset: 64)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !7247, file: !782, line: 135, baseType: !650, size: 8, offset: 72)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !7247, file: !782, line: 136, baseType: !544, size: 32, offset: 96)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !7247, file: !782, line: 137, baseType: !14, size: 32, offset: 128)
!7254 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 139, baseType: !7255, size: 256)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 139, size: 256, elements: !7256)
!7256 = !{!7257, !7258, !7259}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !7255, file: !782, line: 140, baseType: !473, size: 64)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !7255, file: !782, line: 141, baseType: !544, size: 32, offset: 64)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !7255, file: !782, line: 143, baseType: !445, size: 128, offset: 128)
!7260 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 145, baseType: !7261, size: 256)
!7261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 145, size: 256, elements: !7262)
!7262 = !{!7263, !7264, !7265, !7266, !7271}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !7261, file: !782, line: 146, baseType: !473, size: 64)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !7261, file: !782, line: 147, baseType: !4680, size: 64, offset: 64)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !7261, file: !782, line: 148, baseType: !473, size: 64, offset: 128)
!7266 = !DIDerivedType(tag: DW_TAG_member, scope: !7261, file: !782, line: 149, baseType: !7267, size: 64, offset: 192)
!7267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7261, file: !782, line: 149, size: 64, elements: !7268)
!7268 = !{!7269, !7270}
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !7267, file: !782, line: 150, baseType: !1279, size: 64)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !7267, file: !782, line: 151, baseType: !544, size: 32)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !7261, file: !782, line: 156, baseType: !884, offset: 256)
!7272 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 159, baseType: !7273, size: 128)
!7273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 159, size: 128, elements: !7274)
!7274 = !{!7275, !7319}
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !7273, file: !782, line: 161, baseType: !7276, size: 64)
!7276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7277, size: 64)
!7277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !273, line: 110, size: 1152, elements: !7278)
!7278 = !{!7279, !7289, !7290, !7291, !7292, !7293, !7294, !7306, !7307, !7308}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !7277, file: !273, line: 111, baseType: !7280, size: 384)
!7280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !273, line: 19, size: 384, elements: !7281)
!7281 = !{!7282, !7284, !7285, !7286, !7287, !7288}
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !7280, file: !273, line: 20, baseType: !7283, size: 64)
!7283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !7280, file: !273, line: 21, baseType: !7283, size: 64, offset: 64)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !7280, file: !273, line: 22, baseType: !7283, size: 64, offset: 128)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7280, file: !273, line: 23, baseType: !473, size: 64, offset: 192)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !7280, file: !273, line: 24, baseType: !473, size: 64, offset: 256)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7280, file: !273, line: 25, baseType: !473, size: 64, offset: 320)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7277, file: !273, line: 112, baseType: !4383, size: 64, offset: 384)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !7277, file: !273, line: 113, baseType: !4369, size: 128, offset: 448)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7277, file: !273, line: 114, baseType: !1700, size: 192, offset: 576)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7277, file: !273, line: 115, baseType: !272, size: 32, offset: 768)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7277, file: !273, line: 116, baseType: !14, size: 32, offset: 800)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7277, file: !273, line: 117, baseType: !7295, size: 64, offset: 832)
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7296, size: 64)
!7296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7297)
!7297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !273, line: 67, size: 256, elements: !7298)
!7298 = !{!7299, !7300, !7304, !7305}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !7297, file: !273, line: 73, baseType: !7168, size: 64)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !7297, file: !273, line: 78, baseType: !7301, size: 64, offset: 64)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 64)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{null, !7276}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !7297, file: !273, line: 83, baseType: !7301, size: 64, offset: 128)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !7297, file: !273, line: 89, baseType: !4641, size: 64, offset: 192)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7277, file: !273, line: 118, baseType: !726, size: 64, offset: 896)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !7277, file: !273, line: 119, baseType: !7, size: 32, offset: 960)
!7308 = !DIDerivedType(tag: DW_TAG_member, scope: !7277, file: !273, line: 120, baseType: !7309, size: 128, offset: 1024)
!7309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7277, file: !273, line: 120, size: 128, elements: !7310)
!7310 = !{!7311, !7317}
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7309, file: !273, line: 121, baseType: !7312, size: 128)
!7312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !7313, line: 6, size: 128, elements: !7314)
!7313 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!7314 = !{!7315, !7316}
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7312, file: !7313, line: 7, baseType: !492, size: 64)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7312, file: !7313, line: 8, baseType: !492, size: 64, offset: 64)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !7309, file: !273, line: 122, baseType: !7318)
!7318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7312, elements: !2075)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !7273, file: !782, line: 162, baseType: !726, size: 64, offset: 64)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !786, file: !782, line: 176, baseType: !460, size: 128, align: 64)
!7321 = !DIDerivedType(tag: DW_TAG_member, scope: !781, file: !782, line: 179, baseType: !7322, size: 32, offset: 384)
!7322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !781, file: !782, line: 179, size: 32, elements: !7323)
!7323 = !{!7324, !7325, !7326, !7327}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !7322, file: !782, line: 184, baseType: !544, size: 32)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !7322, file: !782, line: 192, baseType: !14, size: 32)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7322, file: !782, line: 194, baseType: !14, size: 32)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !7322, file: !782, line: 195, baseType: !7, size: 32)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !781, file: !782, line: 199, baseType: !544, size: 32, offset: 416)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !776, file: !777, line: 33, baseType: !14, size: 32, offset: 64)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !776, file: !777, line: 34, baseType: !14, size: 32, offset: 96)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !756, file: !746, line: 42, baseType: !6056, size: 64)
!7332 = !DIDerivedType(tag: DW_TAG_member, scope: !745, file: !746, line: 44, baseType: !7333, size: 64, offset: 256)
!7333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !745, file: !746, line: 44, size: 64, elements: !7334)
!7334 = !{!7335, !7336}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !7333, file: !746, line: 45, baseType: !473, size: 64)
!7336 = !DIDerivedType(tag: DW_TAG_member, scope: !7333, file: !746, line: 46, baseType: !7337, size: 64)
!7337 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7333, file: !746, line: 46, size: 64, elements: !7338)
!7338 = !{!7339, !7340}
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7337, file: !746, line: 47, baseType: !14, size: 32)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !7337, file: !746, line: 48, baseType: !14, size: 32, offset: 32)
!7341 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !676, line: 60, baseType: !7342, size: 64, offset: 448)
!7342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !740, file: !676, line: 60, size: 64, elements: !7343)
!7343 = !{!7344, !7345}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7342, file: !676, line: 61, baseType: !726, size: 64)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7342, file: !676, line: 62, baseType: !726, size: 64)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !740, file: !676, line: 64, baseType: !696, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !740, file: !676, line: 65, baseType: !751, size: 64, offset: 576)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !740, file: !676, line: 66, baseType: !14, size: 32, offset: 640)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !740, file: !676, line: 67, baseType: !1180, size: 64, offset: 704)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !663, file: !608, line: 1159, baseType: !7351, size: 64, offset: 832)
!7351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7352, size: 64)
!7352 = !DISubroutineType(types: !7353)
!7353 = !{!7, !606, !739, !750, !7, !7, !695}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !663, file: !608, line: 1162, baseType: !7355, size: 64, offset: 896)
!7355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7356, size: 64)
!7356 = !DISubroutineType(types: !7357)
!7357 = !{!7, !606, !780, !7, !750, !7}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !663, file: !608, line: 1164, baseType: !671, size: 64, offset: 960)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !663, file: !608, line: 1166, baseType: !671, size: 64, offset: 1024)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !663, file: !608, line: 1169, baseType: !7361, size: 64, offset: 1088)
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 64)
!7362 = !DISubroutineType(types: !7363)
!7363 = !{!7, !606, !576}
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !663, file: !608, line: 1172, baseType: !707, size: 64, offset: 1152)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !663, file: !608, line: 1175, baseType: !703, size: 64, offset: 1216)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !663, file: !608, line: 1176, baseType: !707, size: 64, offset: 1280)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !663, file: !608, line: 1177, baseType: !707, size: 64, offset: 1344)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !663, file: !608, line: 1178, baseType: !7369, size: 64, offset: 1408)
!7369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7370, size: 64)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{!7, !606, !633}
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !663, file: !608, line: 1182, baseType: !14, size: 32, offset: 1472)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !663, file: !608, line: 1185, baseType: !7374, size: 64, offset: 1536)
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 64)
!7375 = !DISubroutineType(types: !7376)
!7376 = !{!696, !7377, !7}
!7377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7378, size: 64)
!7378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !607)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !663, file: !608, line: 1186, baseType: !7380, size: 64, offset: 1600)
!7380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7381, size: 64)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!696, !7377}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !663, file: !608, line: 1188, baseType: !707, size: 64, offset: 1664)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !663, file: !608, line: 1189, baseType: !707, size: 64, offset: 1728)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !663, file: !608, line: 1190, baseType: !6865, size: 64, offset: 1792)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !663, file: !608, line: 1191, baseType: !7387, size: 64, offset: 1856)
!7387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !663, file: !608, line: 1198, baseType: !2608, size: 64, offset: 1920)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !663, file: !608, line: 1199, baseType: !7390, size: 64, offset: 1984)
!7390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !663, file: !608, line: 1201, baseType: !695, size: 64, offset: 2048)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !663, file: !608, line: 1202, baseType: !695, size: 64, offset: 2112)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !663, file: !608, line: 1203, baseType: !862, size: 32, offset: 2176)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !663, file: !608, line: 1204, baseType: !862, size: 32, offset: 2208)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !663, file: !608, line: 1206, baseType: !7, size: 32, offset: 2240)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !663, file: !608, line: 1207, baseType: !696, size: 8, offset: 2272)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !663, file: !608, line: 1209, baseType: !2424, size: 64, offset: 2304)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !663, file: !608, line: 1210, baseType: !14, size: 32, offset: 2368)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !663, file: !608, line: 1211, baseType: !7400, size: 32, offset: 2400)
!7400 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !438, line: 149, baseType: !14)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !663, file: !608, line: 1212, baseType: !14, size: 32, offset: 2432)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !663, file: !608, line: 1213, baseType: !14, size: 32, offset: 2464)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !663, file: !608, line: 1215, baseType: !7387, size: 64, offset: 2496)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !663, file: !608, line: 1217, baseType: !7405, size: 64, offset: 2560)
!7405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7406, size: 64)
!7406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7407, line: 27, size: 512, elements: !7408)
!7407 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7408 = !{!7409, !7410, !7411, !7412, !7413, !7442, !7446, !7450, !7454}
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7406, file: !7407, line: 28, baseType: !7, size: 32)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7406, file: !7407, line: 29, baseType: !14, size: 32, offset: 32)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7406, file: !7407, line: 30, baseType: !2424, size: 64, offset: 64)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7406, file: !7407, line: 31, baseType: !733, size: 64, offset: 128)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7406, file: !7407, line: 32, baseType: !7414, size: 64, offset: 192)
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7415, size: 64)
!7415 = !DISubroutineType(types: !7416)
!7416 = !{!7, !7377, !7417}
!7417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7418, size: 64)
!7418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7407, line: 53, size: 1792, elements: !7419)
!7419 = !{!7420, !7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7431, !7432, !7440, !7441}
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7418, file: !7407, line: 54, baseType: !611, size: 1088)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7418, file: !7407, line: 61, baseType: !7417, size: 64, offset: 1088)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7418, file: !7407, line: 62, baseType: !1192, size: 16, offset: 1152)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7418, file: !7407, line: 63, baseType: !1551, size: 8, offset: 1168)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7418, file: !7407, line: 64, baseType: !1551, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7418, file: !7407, line: 65, baseType: !1551, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7418, file: !7407, line: 66, baseType: !862, size: 32, offset: 1184)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7418, file: !7407, line: 67, baseType: !2393, size: 320, offset: 1216)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7418, file: !7407, line: 68, baseType: !7429, size: 64, offset: 1536)
!7429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 64)
!7430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7406)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7418, file: !7407, line: 69, baseType: !606, size: 64, offset: 1600)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7418, file: !7407, line: 70, baseType: !7433, size: 64, offset: 1664)
!7433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7434, size: 64)
!7434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7407, line: 44, size: 96, elements: !7435)
!7435 = !{!7436, !7437, !7438, !7439}
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7434, file: !7407, line: 45, baseType: !862, size: 32)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7434, file: !7407, line: 46, baseType: !862, size: 32, offset: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7434, file: !7407, line: 47, baseType: !862, size: 32, offset: 64)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7434, file: !7407, line: 48, baseType: !3045, offset: 96)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7418, file: !7407, line: 71, baseType: !862, size: 32, offset: 1728)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7418, file: !7407, line: 72, baseType: !862, size: 32, offset: 1760)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7406, file: !7407, line: 34, baseType: !7443, size: 64, offset: 256)
!7443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7444, size: 64)
!7444 = !DISubroutineType(types: !7445)
!7445 = !{null, !7377, !576, !7417}
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7406, file: !7407, line: 36, baseType: !7447, size: 64, offset: 320)
!7447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7448, size: 64)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{null, !7377, !576}
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7406, file: !7407, line: 38, baseType: !7451, size: 64, offset: 384)
!7451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7452, size: 64)
!7452 = !DISubroutineType(types: !7453)
!7453 = !{null, !7417}
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7406, file: !7407, line: 39, baseType: !7455, size: 64, offset: 448)
!7455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7456, size: 64)
!7456 = !DISubroutineType(types: !7457)
!7457 = !{null, !7458}
!7458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7459, size: 64)
!7459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7418)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !663, file: !608, line: 1218, baseType: !7461, size: 64, offset: 2624)
!7461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7462, size: 64)
!7462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7463, line: 14, size: 320, elements: !7464)
!7463 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7464 = !{!7465, !7466, !7467, !7468, !7472}
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7462, file: !7463, line: 15, baseType: !2424, size: 64)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7462, file: !7463, line: 16, baseType: !733, size: 64, offset: 64)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7462, file: !7463, line: 17, baseType: !14, size: 32, offset: 128)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7462, file: !7463, line: 18, baseType: !7469, size: 64, offset: 192)
!7469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7470, size: 64)
!7470 = !DISubroutineType(types: !7471)
!7471 = !{!7, !606, !606, !726}
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7462, file: !7463, line: 20, baseType: !707, size: 64, offset: 256)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !663, file: !608, line: 1225, baseType: !7474, size: 64, offset: 2688)
!7474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !663, file: !608, line: 1220, size: 64, elements: !7475)
!7475 = !{!7476, !7477, !7492, !7495}
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7474, file: !608, line: 1221, baseType: !2577, size: 64)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7474, file: !608, line: 1222, baseType: !7478, size: 64)
!7478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7479, size: 64)
!7479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !7480, line: 72, size: 192, elements: !7481)
!7480 = !DIFile(filename: "./include/net/udp.h", directory: "/home/lizy2001/genbc/linux")
!7481 = !{!7482, !7489, !7490, !7491}
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !7479, file: !7480, line: 73, baseType: !7483, size: 64)
!7483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7484, size: 64)
!7484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_hslot", file: !7480, line: 58, size: 128, align: 128, elements: !7485)
!7485 = !{!7486, !7487, !7488}
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7484, file: !7480, line: 59, baseType: !1011, size: 64)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7484, file: !7480, line: 60, baseType: !7, size: 32, offset: 64)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7484, file: !7480, line: 61, baseType: !884, offset: 96)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "hash2", scope: !7479, file: !7480, line: 74, baseType: !7483, size: 64, offset: 64)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !7479, file: !7480, line: 75, baseType: !14, size: 32, offset: 128)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !7479, file: !7480, line: 76, baseType: !14, size: 32, offset: 160)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7474, file: !608, line: 1223, baseType: !7493, size: 64)
!7493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7494, size: 64)
!7494 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !608, line: 1108, flags: DIFlagFwdDecl)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7474, file: !608, line: 1224, baseType: !7496, size: 64)
!7496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7497, size: 64)
!7497 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !608, line: 1109, flags: DIFlagFwdDecl)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !663, file: !608, line: 1227, baseType: !1006, size: 64, offset: 2752)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !663, file: !608, line: 1229, baseType: !4348, size: 256, offset: 2816)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !663, file: !608, line: 1231, baseType: !445, size: 128, offset: 3072)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !663, file: !608, line: 1235, baseType: !688, size: 64, offset: 3200)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !611, file: !608, line: 198, baseType: !3037, size: 64, offset: 384)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !611, file: !608, line: 201, baseType: !2376, size: 128, offset: 448)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !611, file: !608, line: 202, baseType: !2376, size: 128, offset: 576)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !611, file: !608, line: 205, baseType: !534, size: 64, offset: 704)
!7506 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 212, baseType: !7507, size: 64, offset: 768)
!7507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 212, size: 64, elements: !7508)
!7508 = !{!7509, !7510, !7511}
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7507, file: !608, line: 213, baseType: !473, size: 64)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7507, file: !608, line: 214, baseType: !606, size: 64)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7507, file: !608, line: 215, baseType: !7512, size: 64)
!7512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !611, file: !608, line: 222, baseType: !7514, offset: 832)
!7514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2075)
!7515 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 224, baseType: !7516, size: 128, offset: 832)
!7516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 224, size: 128, elements: !7517)
!7517 = !{!7518, !7519}
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7516, file: !608, line: 225, baseType: !437, size: 128)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7516, file: !608, line: 226, baseType: !7520, size: 128)
!7520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !7521, line: 25, size: 128, elements: !7522)
!7521 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!7522 = !{!7523, !7525}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7520, file: !7521, line: 26, baseType: !7524, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7520, size: 64)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !7520, file: !7521, line: 26, baseType: !7526, size: 64, offset: 64)
!7526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 64)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !611, file: !608, line: 228, baseType: !633, size: 16, offset: 960)
!7528 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 232, baseType: !7529, size: 32, offset: 992)
!7529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 232, size: 32, elements: !7530)
!7530 = !{!7531, !7532, !7533}
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7529, file: !608, line: 233, baseType: !7, size: 32)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7529, file: !608, line: 234, baseType: !862, size: 32)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7529, file: !608, line: 235, baseType: !862, size: 32)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !611, file: !608, line: 238, baseType: !1425, size: 32, offset: 1024)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !611, file: !608, line: 240, baseType: !7514, offset: 1056)
!7536 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 241, baseType: !7537, size: 32, offset: 1056)
!7537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 241, size: 32, elements: !7538)
!7538 = !{!7539, !7540, !7541}
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7537, file: !608, line: 242, baseType: !862, size: 32)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7537, file: !608, line: 243, baseType: !862, size: 32)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7537, file: !608, line: 244, baseType: !862, size: 32)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !607, file: !608, line: 387, baseType: !7543, size: 192, offset: 1088)
!7543 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !608, line: 108, baseType: !7544)
!7544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 95, size: 192, elements: !7545)
!7545 = !{!7546, !7547, !7548}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7544, file: !608, line: 96, baseType: !884)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7544, file: !608, line: 97, baseType: !7, size: 32)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7544, file: !608, line: 98, baseType: !1254, size: 128, offset: 64)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !607, file: !608, line: 388, baseType: !544, size: 32, offset: 1280)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !607, file: !608, line: 389, baseType: !7, size: 32, offset: 1312)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !607, file: !608, line: 390, baseType: !3095, size: 192, offset: 1344)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !607, file: !608, line: 391, baseType: !576, size: 64, offset: 1536)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !607, file: !608, line: 392, baseType: !3095, size: 192, offset: 1600)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !607, file: !608, line: 406, baseType: !7555, size: 192, offset: 1792)
!7555 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !607, file: !608, line: 401, size: 192, elements: !7556)
!7556 = !{!7557, !7558, !7559, !7560}
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7555, file: !608, line: 402, baseType: !544, size: 32)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7555, file: !608, line: 403, baseType: !7, size: 32, offset: 32)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7555, file: !608, line: 404, baseType: !576, size: 64, offset: 64)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7555, file: !608, line: 405, baseType: !576, size: 64, offset: 128)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !607, file: !608, line: 409, baseType: !7, size: 32, offset: 1984)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !607, file: !608, line: 411, baseType: !14, size: 32, offset: 2016)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !607, file: !608, line: 413, baseType: !14, size: 32, offset: 2048)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !607, file: !608, line: 415, baseType: !7, size: 32, offset: 2080)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !607, file: !608, line: 417, baseType: !7566, size: 64, offset: 2112)
!7566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7567, size: 64)
!7567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3498, line: 552, size: 256, elements: !7568)
!7568 = !{!7569, !7570, !7571}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7567, file: !3498, line: 553, baseType: !1425, size: 32)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7567, file: !3498, line: 554, baseType: !460, size: 128, align: 64, offset: 64)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7567, file: !3498, line: 555, baseType: !3496, size: 64, offset: 192)
!7572 = !DIDerivedType(tag: DW_TAG_member, scope: !607, file: !608, line: 418, baseType: !7573, size: 64, offset: 2176)
!7573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !607, file: !608, line: 418, size: 64, elements: !7574)
!7574 = !{!7575, !7584}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7573, file: !608, line: 419, baseType: !7576, size: 64)
!7576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7577, size: 64)
!7577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7578, line: 98, size: 384, elements: !7579)
!7578 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7579 = !{!7580, !7581, !7582, !7583}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7577, file: !7578, line: 100, baseType: !1254, size: 128)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7577, file: !7578, line: 101, baseType: !6075, size: 64, offset: 128)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7577, file: !7578, line: 102, baseType: !473, size: 64, offset: 192)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7577, file: !7578, line: 103, baseType: !460, size: 128, align: 64, offset: 256)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7573, file: !608, line: 421, baseType: !7576, size: 64)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !607, file: !608, line: 427, baseType: !2957, size: 64, offset: 2240)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !607, file: !608, line: 428, baseType: !2957, size: 64, offset: 2304)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !607, file: !608, line: 429, baseType: !544, size: 32, offset: 2368)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !607, file: !608, line: 430, baseType: !7, size: 32, offset: 2400)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !607, file: !608, line: 433, baseType: !7, size: 32, offset: 2432)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !607, file: !608, line: 434, baseType: !1425, size: 32, offset: 2464)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !607, file: !608, line: 435, baseType: !473, size: 64, offset: 2496)
!7592 = !DIDerivedType(tag: DW_TAG_member, scope: !607, file: !608, line: 436, baseType: !7593, size: 64, offset: 2560)
!7593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !607, file: !608, line: 436, size: 64, elements: !7594)
!7594 = !{!7595, !7596}
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7593, file: !608, line: 437, baseType: !576, size: 64)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7593, file: !608, line: 438, baseType: !1287, size: 64)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !607, file: !608, line: 440, baseType: !576, size: 64, offset: 2624)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !607, file: !608, line: 441, baseType: !3095, size: 192, offset: 2688)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !607, file: !608, line: 442, baseType: !1644, size: 32, offset: 2880)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !607, file: !608, line: 443, baseType: !7, size: 32, offset: 2912)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !607, file: !608, line: 444, baseType: !624, size: 32, offset: 2944)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !607, file: !608, line: 445, baseType: !862, size: 32, offset: 2976)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !607, file: !608, line: 446, baseType: !669, size: 64, offset: 3008)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !607, file: !608, line: 447, baseType: !2393, size: 320, offset: 3072)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !607, file: !608, line: 448, baseType: !624, size: 32, offset: 3392)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !607, file: !608, line: 449, baseType: !624, size: 32, offset: 3424)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !607, file: !608, line: 450, baseType: !473, size: 64, offset: 3456)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !607, file: !608, line: 451, baseType: !473, size: 64, offset: 3520)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !607, file: !608, line: 452, baseType: !6114, size: 128, offset: 3584)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !607, file: !608, line: 453, baseType: !490, size: 64, offset: 3712)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !607, file: !608, line: 454, baseType: !490, size: 64, offset: 3776)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !607, file: !608, line: 455, baseType: !490, size: 64, offset: 3840)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !607, file: !608, line: 456, baseType: !7, size: 32, offset: 3904)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !607, file: !608, line: 457, baseType: !14, size: 32, offset: 3936)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !607, file: !608, line: 458, baseType: !2143, size: 32, offset: 3968)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !607, file: !608, line: 459, baseType: !624, size: 32, offset: 4000)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !607, file: !608, line: 465, baseType: !1551, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !607, file: !608, line: 466, baseType: !1551, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !607, file: !608, line: 467, baseType: !1551, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !607, file: !608, line: 468, baseType: !1551, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !607, file: !608, line: 469, baseType: !1551, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !607, file: !608, line: 470, baseType: !1551, size: 8, offset: 4040)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !607, file: !608, line: 471, baseType: !1192, size: 16, offset: 4048)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !607, file: !608, line: 472, baseType: !1192, size: 16, offset: 4064)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !607, file: !608, line: 473, baseType: !1192, size: 16, offset: 4080)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !607, file: !608, line: 474, baseType: !473, size: 64, offset: 4096)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !607, file: !608, line: 475, baseType: !662, size: 64, offset: 4160)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !607, file: !608, line: 476, baseType: !3105, offset: 4224)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !607, file: !608, line: 477, baseType: !7, size: 32, offset: 4224)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !607, file: !608, line: 478, baseType: !7, size: 32, offset: 4256)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !607, file: !608, line: 479, baseType: !862, size: 32, offset: 4288)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !607, file: !608, line: 480, baseType: !862, size: 32, offset: 4320)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !607, file: !608, line: 481, baseType: !804, size: 32, offset: 4352)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !607, file: !608, line: 482, baseType: !1675, size: 64, offset: 4416)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !607, file: !608, line: 483, baseType: !1745, size: 64, offset: 4480)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !607, file: !608, line: 484, baseType: !669, size: 64, offset: 4544)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !607, file: !608, line: 485, baseType: !1495, size: 64, offset: 4608)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !607, file: !608, line: 489, baseType: !1192, size: 16, offset: 4672)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !607, file: !608, line: 490, baseType: !1551, size: 8, offset: 4688)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !607, file: !608, line: 491, baseType: !862, size: 32, offset: 4704)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !607, file: !608, line: 492, baseType: !544, size: 32, offset: 4736)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !607, file: !608, line: 494, baseType: !1551, size: 8, offset: 4768)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !607, file: !608, line: 495, baseType: !1551, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !607, file: !608, line: 496, baseType: !1551, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !607, file: !608, line: 497, baseType: !1551, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !607, file: !608, line: 499, baseType: !7647, size: 64, offset: 4800)
!7647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7648, size: 64)
!7648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7578, line: 116, size: 704, elements: !7649)
!7649 = !{!7650, !7652, !7653, !7654, !7655, !7656, !7759}
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7648, file: !7578, line: 117, baseType: !7651, size: 32)
!7651 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !280, line: 54, baseType: !279)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7648, file: !7578, line: 119, baseType: !1400, size: 16, offset: 32)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7648, file: !7578, line: 121, baseType: !473, size: 64, offset: 64)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7648, file: !7578, line: 123, baseType: !1164, size: 64, offset: 128)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7648, file: !7578, line: 124, baseType: !606, size: 64, offset: 192)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7648, file: !7578, line: 125, baseType: !7657, size: 64, offset: 256)
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7658, size: 64)
!7658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7659)
!7659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7578, line: 139, size: 1728, elements: !7660)
!7660 = !{!7661, !7662, !7663, !7664, !7668, !7672, !7676, !7680, !7684, !7685, !7689, !7693, !7697, !7701, !7702, !7706, !7710, !7714, !7718, !7722, !7726, !7730, !7734, !7735, !7736, !7756, !7757, !7758}
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7659, file: !7578, line: 140, baseType: !7, size: 32)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7659, file: !7578, line: 141, baseType: !14, size: 32, offset: 32)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7659, file: !7578, line: 142, baseType: !1006, size: 64, offset: 64)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7659, file: !7578, line: 143, baseType: !7665, size: 64, offset: 128)
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7666, size: 64)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!7, !7647}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7659, file: !7578, line: 144, baseType: !7669, size: 64, offset: 192)
!7669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7670, size: 64)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{!7, !7647, !674, !7}
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7659, file: !7578, line: 147, baseType: !7673, size: 64, offset: 256)
!7673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7674, size: 64)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!7, !7647, !674, !7, !7}
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7659, file: !7578, line: 150, baseType: !7677, size: 64, offset: 320)
!7677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7678, size: 64)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!7, !7647, !7647}
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7659, file: !7578, line: 152, baseType: !7681, size: 64, offset: 384)
!7681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7682, size: 64)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{!7, !7647, !7647, !7, !696}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7659, file: !7578, line: 154, baseType: !7669, size: 64, offset: 448)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7659, file: !7578, line: 157, baseType: !7686, size: 64, offset: 512)
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7687, size: 64)
!7687 = !DISubroutineType(types: !7688)
!7688 = !{!1243, !1164, !7647, !1244}
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7659, file: !7578, line: 159, baseType: !7690, size: 64, offset: 576)
!7690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7691, size: 64)
!7691 = !DISubroutineType(types: !7692)
!7692 = !{!7, !7647, !14, !473}
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7659, file: !7578, line: 165, baseType: !7694, size: 64, offset: 640)
!7694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7695, size: 64)
!7695 = !DISubroutineType(types: !7696)
!7696 = !{!7, !7647, !726, !696, !696}
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7659, file: !7578, line: 167, baseType: !7698, size: 64, offset: 704)
!7698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7699, size: 64)
!7699 = !DISubroutineType(types: !7700)
!7700 = !{!7, !7647, !7}
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7659, file: !7578, line: 168, baseType: !7698, size: 64, offset: 768)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7659, file: !7578, line: 169, baseType: !7703, size: 64, offset: 832)
!7703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7704, size: 64)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!7, !7647, !7, !7, !718, !14}
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7659, file: !7578, line: 172, baseType: !7707, size: 64, offset: 896)
!7707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7708, size: 64)
!7708 = !DISubroutineType(types: !7709)
!7709 = !{!7, !7647, !7, !7, !733, !695}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7659, file: !7578, line: 174, baseType: !7711, size: 64, offset: 960)
!7711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7712, size: 64)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{null, !1096, !7647}
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7659, file: !7578, line: 175, baseType: !7715, size: 64, offset: 1024)
!7715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7716, size: 64)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!7, !7647, !739, !750}
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7659, file: !7578, line: 185, baseType: !7719, size: 64, offset: 1088)
!7719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7720, size: 64)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!7, !7647, !739, !750, !7}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7659, file: !7578, line: 187, baseType: !7723, size: 64, offset: 1152)
!7723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7724, size: 64)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!7, !1164, !7647, !1269}
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7659, file: !7578, line: 189, baseType: !7727, size: 64, offset: 1216)
!7727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7728, size: 64)
!7728 = !DISubroutineType(types: !7729)
!7729 = !{!1169, !7647, !780, !7, !750, !7}
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7659, file: !7578, line: 191, baseType: !7731, size: 64, offset: 1280)
!7731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7732, size: 64)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!1169, !7647, !1123, !6056, !750, !14}
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7659, file: !7578, line: 193, baseType: !688, size: 64, offset: 1344)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7659, file: !7578, line: 194, baseType: !7665, size: 64, offset: 1408)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7659, file: !7578, line: 199, baseType: !7737, size: 64, offset: 1472)
!7737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7738, size: 64)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{!7, !606, !7740, !7752}
!7740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7741, size: 64)
!7741 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !243, line: 362, baseType: !7742)
!7742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !243, line: 354, size: 256, elements: !7743)
!7743 = !{!7744, !7745, !7746, !7751}
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7742, file: !243, line: 355, baseType: !750, size: 64)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7742, file: !243, line: 356, baseType: !750, size: 64, offset: 64)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7742, file: !243, line: 360, baseType: !7747, size: 64, offset: 128)
!7747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7742, file: !243, line: 357, size: 64, elements: !7748)
!7748 = !{!7749, !7750}
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7747, file: !243, line: 358, baseType: !733, size: 64)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7747, file: !243, line: 359, baseType: !726, size: 64)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7742, file: !243, line: 361, baseType: !7, size: 32, offset: 192)
!7752 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7578, line: 136, baseType: !7753)
!7753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7754, size: 64)
!7754 = !DISubroutineType(types: !7755)
!7755 = !{!7, !7740, !576, !14, !750}
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7659, file: !7578, line: 201, baseType: !7355, size: 64, offset: 1536)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7659, file: !7578, line: 203, baseType: !736, size: 64, offset: 1600)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7659, file: !7578, line: 205, baseType: !688, size: 64, offset: 1664)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7648, file: !7578, line: 127, baseType: !7577, size: 384, offset: 320)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !607, file: !608, line: 500, baseType: !726, size: 64, offset: 4864)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !607, file: !608, line: 504, baseType: !7762, offset: 4928)
!7762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7763, line: 871, elements: !898)
!7763 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !607, file: !608, line: 505, baseType: !6566, size: 64, offset: 4928)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !607, file: !608, line: 506, baseType: !707, size: 64, offset: 4992)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !607, file: !608, line: 507, baseType: !707, size: 64, offset: 5056)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !607, file: !608, line: 508, baseType: !707, size: 64, offset: 5120)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !607, file: !608, line: 509, baseType: !707, size: 64, offset: 5184)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !607, file: !608, line: 510, baseType: !7361, size: 64, offset: 5248)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !607, file: !608, line: 517, baseType: !707, size: 64, offset: 5312)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !607, file: !608, line: 518, baseType: !7772, size: 64, offset: 5376)
!7772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7773, size: 64)
!7773 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !3498, line: 38, flags: DIFlagFwdDecl)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !607, file: !608, line: 522, baseType: !460, size: 128, align: 64, offset: 5440)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !603, file: !578, line: 735, baseType: !7, size: 32)
!7776 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 738, baseType: !7777, size: 64, offset: 256)
!7777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 738, size: 64, elements: !7778)
!7778 = !{!7779, !7780}
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7777, file: !578, line: 739, baseType: !1495, size: 64)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7777, file: !578, line: 740, baseType: !492, size: 64)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !577, file: !578, line: 748, baseType: !7782, size: 384, align: 64, offset: 320)
!7782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 384, elements: !7783)
!7783 = !{!7784}
!7784 = !DISubrange(count: 48)
!7785 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 750, baseType: !7786, size: 128, offset: 704)
!7786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 750, size: 128, elements: !7787)
!7787 = !{!7788, !7793}
!7788 = !DIDerivedType(tag: DW_TAG_member, scope: !7786, file: !578, line: 751, baseType: !7789, size: 128)
!7789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7786, file: !578, line: 751, size: 128, elements: !7790)
!7790 = !{!7791, !7792}
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7789, file: !578, line: 752, baseType: !473, size: 64)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7789, file: !578, line: 753, baseType: !2982, size: 64, offset: 64)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7786, file: !578, line: 755, baseType: !445, size: 128)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !577, file: !578, line: 761, baseType: !14, size: 32, offset: 832)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !577, file: !578, line: 762, baseType: !14, size: 32, offset: 864)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !577, file: !578, line: 763, baseType: !632, size: 16, offset: 896)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !577, file: !578, line: 764, baseType: !632, size: 16, offset: 912)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !577, file: !578, line: 769, baseType: !632, size: 16, offset: 928)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !577, file: !578, line: 780, baseType: !7800, offset: 944)
!7800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, elements: !2075)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !577, file: !578, line: 782, baseType: !1552, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !577, file: !578, line: 783, baseType: !1552, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !577, file: !578, line: 784, baseType: !1552, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !577, file: !578, line: 785, baseType: !1552, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !577, file: !578, line: 786, baseType: !1552, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !577, file: !578, line: 787, baseType: !1552, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !577, file: !578, line: 795, baseType: !7808, offset: 960)
!7808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, elements: !2075)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !577, file: !578, line: 807, baseType: !7800, offset: 960)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !577, file: !578, line: 809, baseType: !1552, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !577, file: !578, line: 810, baseType: !1552, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !577, file: !578, line: 811, baseType: !1552, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !577, file: !578, line: 812, baseType: !1552, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !577, file: !578, line: 813, baseType: !1552, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !577, file: !578, line: 815, baseType: !1552, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !577, file: !578, line: 816, baseType: !1552, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !577, file: !578, line: 817, baseType: !1552, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !577, file: !578, line: 818, baseType: !1552, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !577, file: !578, line: 819, baseType: !1552, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !577, file: !578, line: 821, baseType: !1552, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !577, file: !578, line: 822, baseType: !1552, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !577, file: !578, line: 823, baseType: !1552, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !577, file: !578, line: 832, baseType: !7800, offset: 976)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !577, file: !578, line: 834, baseType: !1552, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !577, file: !578, line: 835, baseType: !1552, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !577, file: !578, line: 836, baseType: !1552, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !577, file: !578, line: 837, baseType: !1552, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !577, file: !578, line: 838, baseType: !1552, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !577, file: !578, line: 840, baseType: !1552, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !577, file: !578, line: 843, baseType: !1552, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !577, file: !578, line: 844, baseType: !1552, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !577, file: !578, line: 845, baseType: !1552, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !577, file: !578, line: 847, baseType: !1552, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !577, file: !578, line: 848, baseType: !1552, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7835 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 866, baseType: !7836, size: 32, offset: 992)
!7836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 866, size: 32, elements: !7837)
!7837 = !{!7838, !7840}
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7836, file: !578, line: 867, baseType: !7839, size: 32)
!7839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !623, line: 37, baseType: !624)
!7840 = !DIDerivedType(tag: DW_TAG_member, scope: !7836, file: !578, line: 868, baseType: !7841, size: 32)
!7841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7836, file: !578, line: 868, size: 32, elements: !7842)
!7842 = !{!7843, !7844}
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7841, file: !578, line: 869, baseType: !632, size: 16)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7841, file: !578, line: 870, baseType: !632, size: 16, offset: 16)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !577, file: !578, line: 873, baseType: !624, size: 32, offset: 1024)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !577, file: !578, line: 874, baseType: !7, size: 32, offset: 1056)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !577, file: !578, line: 875, baseType: !624, size: 32, offset: 1088)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !577, file: !578, line: 876, baseType: !645, size: 16, offset: 1120)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !577, file: !578, line: 877, baseType: !632, size: 16, offset: 1136)
!7850 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 879, baseType: !7851, size: 32, offset: 1152)
!7851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 879, size: 32, elements: !7852)
!7852 = !{!7853, !7854}
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7851, file: !578, line: 880, baseType: !14, size: 32)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7851, file: !578, line: 881, baseType: !14, size: 32)
!7855 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 888, baseType: !7856, size: 32, offset: 1184)
!7856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 888, size: 32, elements: !7857)
!7857 = !{!7858, !7859}
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7856, file: !578, line: 889, baseType: !624, size: 32)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7856, file: !578, line: 890, baseType: !624, size: 32)
!7860 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 893, baseType: !7861, size: 16, offset: 1216)
!7861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 893, size: 16, elements: !7862)
!7862 = !{!7863, !7864}
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7861, file: !578, line: 894, baseType: !645, size: 16)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7861, file: !578, line: 895, baseType: !1552, size: 8)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !577, file: !578, line: 898, baseType: !632, size: 16, offset: 1232)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !577, file: !578, line: 899, baseType: !632, size: 16, offset: 1248)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !577, file: !578, line: 900, baseType: !632, size: 16, offset: 1264)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !577, file: !578, line: 902, baseType: !645, size: 16, offset: 1280)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !577, file: !578, line: 903, baseType: !632, size: 16, offset: 1296)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !577, file: !578, line: 904, baseType: !632, size: 16, offset: 1312)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !577, file: !578, line: 905, baseType: !632, size: 16, offset: 1328)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !577, file: !578, line: 908, baseType: !7808, offset: 1344)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !577, file: !578, line: 912, baseType: !7874, size: 32, offset: 1344)
!7874 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !578, line: 606, baseType: !14)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !577, file: !578, line: 913, baseType: !7874, size: 32, offset: 1376)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !577, file: !578, line: 914, baseType: !7877, size: 64, offset: 1408)
!7877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !577, file: !578, line: 915, baseType: !7877, size: 64, offset: 1472)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !577, file: !578, line: 916, baseType: !14, size: 32, offset: 1536)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !577, file: !578, line: 917, baseType: !1425, size: 32, offset: 1568)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !559, file: !6, line: 1290, baseType: !7882, size: 64, offset: 320)
!7882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7883, size: 64)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{!490, !576, !451, !490}
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !559, file: !6, line: 1293, baseType: !7886, size: 64, offset: 384)
!7886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7887, size: 64)
!7887 = !DISubroutineType(types: !7888)
!7888 = !{!1192, !451, !576, !451}
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !559, file: !6, line: 1296, baseType: !7890, size: 64, offset: 448)
!7890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7891, size: 64)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{null, !451, !7}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !559, file: !6, line: 1298, baseType: !566, size: 64, offset: 512)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !559, file: !6, line: 1299, baseType: !7895, size: 64, offset: 576)
!7895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7896, size: 64)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!7, !451, !726}
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !559, file: !6, line: 1301, baseType: !562, size: 64, offset: 640)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !559, file: !6, line: 1302, baseType: !7900, size: 64, offset: 704)
!7900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7901, size: 64)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!7, !451, !7903, !7}
!7903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7904, size: 64)
!7904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7905, line: 234, size: 320, elements: !7906)
!7905 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7906 = !{!7907, !7911}
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7904, file: !7905, line: 239, baseType: !7908, size: 128)
!7908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7904, file: !7905, line: 236, size: 128, elements: !7909)
!7909 = !{!7910}
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7908, file: !7905, line: 238, baseType: !428, size: 128)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7904, file: !7905, line: 255, baseType: !7912, size: 192, offset: 128)
!7912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7904, file: !7905, line: 241, size: 192, elements: !7913)
!7913 = !{!7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7931, !7932, !7933, !7934}
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7912, file: !7905, line: 242, baseType: !675, size: 128)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7912, file: !7905, line: 243, baseType: !675, size: 128)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7912, file: !7905, line: 244, baseType: !675, size: 128)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7912, file: !7905, line: 245, baseType: !675, size: 128)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7912, file: !7905, line: 246, baseType: !675, size: 128)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7912, file: !7905, line: 247, baseType: !1400, size: 16)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7912, file: !7905, line: 248, baseType: !7, size: 32)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7912, file: !7905, line: 249, baseType: !7, size: 32)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7912, file: !7905, line: 250, baseType: !7923, size: 192)
!7923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7905, line: 196, size: 192, elements: !7924)
!7924 = !{!7925, !7926, !7927, !7928, !7929, !7930}
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7923, file: !7905, line: 197, baseType: !473, size: 64)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7923, file: !7905, line: 198, baseType: !473, size: 64, offset: 64)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7923, file: !7905, line: 199, baseType: !633, size: 16, offset: 128)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7923, file: !7905, line: 200, baseType: !650, size: 8, offset: 144)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7923, file: !7905, line: 201, baseType: !650, size: 8, offset: 152)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7923, file: !7905, line: 202, baseType: !650, size: 8, offset: 160)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7912, file: !7905, line: 251, baseType: !428, size: 128)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7912, file: !7905, line: 252, baseType: !428, size: 128)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7912, file: !7905, line: 253, baseType: !726, size: 64)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7912, file: !7905, line: 254, baseType: !7935, size: 128)
!7935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7905, line: 207, size: 128, elements: !7936)
!7936 = !{!7937, !7938, !7939}
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7935, file: !7905, line: 208, baseType: !14, size: 32)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7935, file: !7905, line: 209, baseType: !14, size: 32, offset: 32)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7935, file: !7905, line: 222, baseType: !7940, size: 64, offset: 64)
!7940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7935, file: !7905, line: 210, size: 64, elements: !7941)
!7941 = !{!7942, !7950, !7957, !7969, !7975, !7982, !7993, !8001}
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7940, file: !7905, line: 212, baseType: !7943, size: 64)
!7943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7944, size: 64)
!7944 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7945, line: 56, baseType: !7946)
!7945 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 53, size: 32, elements: !7947)
!7947 = !{!7948, !7949}
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7946, file: !7945, line: 54, baseType: !633, size: 16)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7946, file: !7945, line: 55, baseType: !633, size: 16, offset: 16)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7940, file: !7905, line: 213, baseType: !7951, size: 64)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7952, size: 64)
!7952 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7945, line: 80, baseType: !7953)
!7953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 77, size: 64, elements: !7954)
!7954 = !{!7955, !7956}
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7953, file: !7945, line: 78, baseType: !14, size: 32)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7953, file: !7945, line: 79, baseType: !14, size: 32, offset: 32)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7940, file: !7905, line: 214, baseType: !7958, size: 64)
!7958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 64)
!7959 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7945, line: 66, baseType: !7960)
!7960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 58, size: 192, elements: !7961)
!7961 = !{!7962, !7963, !7964, !7965, !7966, !7967, !7968}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7960, file: !7945, line: 59, baseType: !14, size: 32)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7960, file: !7945, line: 60, baseType: !14, size: 32, offset: 32)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7960, file: !7945, line: 61, baseType: !14, size: 32, offset: 64)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7960, file: !7945, line: 62, baseType: !14, size: 32, offset: 96)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7960, file: !7945, line: 63, baseType: !14, size: 32, offset: 128)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7960, file: !7945, line: 64, baseType: !633, size: 16, offset: 160)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7960, file: !7945, line: 65, baseType: !633, size: 16, offset: 176)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7940, file: !7905, line: 215, baseType: !7970, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7971, size: 64)
!7971 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7945, line: 70, baseType: !7972)
!7972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 68, size: 32, elements: !7973)
!7973 = !{!7974}
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7972, file: !7945, line: 69, baseType: !14, size: 32)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7940, file: !7905, line: 216, baseType: !7976, size: 64)
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7977, size: 64)
!7977 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7945, line: 75, baseType: !7978)
!7978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 72, size: 160, elements: !7979)
!7979 = !{!7980, !7981}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7978, file: !7945, line: 73, baseType: !14, size: 32)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7978, file: !7945, line: 74, baseType: !428, size: 128, offset: 32)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7940, file: !7905, line: 217, baseType: !7983, size: 64)
!7983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7984, size: 64)
!7984 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7945, line: 89, baseType: !7985)
!7985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 82, size: 192, elements: !7986)
!7986 = !{!7987, !7988, !7989, !7990, !7991, !7992}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7985, file: !7945, line: 83, baseType: !633, size: 16)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7985, file: !7945, line: 84, baseType: !14, size: 32, offset: 32)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7985, file: !7945, line: 85, baseType: !14, size: 32, offset: 64)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7985, file: !7945, line: 86, baseType: !14, size: 32, offset: 96)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7985, file: !7945, line: 87, baseType: !14, size: 32, offset: 128)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7985, file: !7945, line: 88, baseType: !14, size: 32, offset: 160)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7940, file: !7905, line: 220, baseType: !7994, size: 64)
!7994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7995, size: 64)
!7995 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7945, line: 44, baseType: !7996)
!7996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 40, size: 96, elements: !7997)
!7997 = !{!7998, !7999, !8000}
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7996, file: !7945, line: 41, baseType: !14, size: 32)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7996, file: !7945, line: 42, baseType: !14, size: 32, offset: 32)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7996, file: !7945, line: 43, baseType: !633, size: 16, offset: 64)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7940, file: !7905, line: 221, baseType: !8002, size: 64)
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8003, size: 64)
!8003 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7945, line: 51, baseType: !8004)
!8004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7945, line: 46, size: 128, elements: !8005)
!8005 = !{!8006, !8007, !8008, !8009}
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !8004, file: !7945, line: 47, baseType: !14, size: 32)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !8004, file: !7945, line: 48, baseType: !14, size: 32, offset: 32)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !8004, file: !7945, line: 49, baseType: !633, size: 16, offset: 64)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !8004, file: !7945, line: 50, baseType: !14, size: 32, offset: 96)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !559, file: !6, line: 1304, baseType: !8011, size: 64, offset: 768)
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8012, size: 64)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!7, !451, !8014}
!8014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7923, size: 64)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !559, file: !6, line: 1306, baseType: !8016, size: 64, offset: 832)
!8016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8017, size: 64)
!8017 = !DISubroutineType(types: !8018)
!8018 = !{!7, !451, !7}
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !559, file: !6, line: 1308, baseType: !8020, size: 64, offset: 896)
!8020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8021, size: 64)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{!7, !451, !3142}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !559, file: !6, line: 1310, baseType: !8024, size: 64, offset: 960)
!8024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8025, size: 64)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{null, !451, !14}
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !559, file: !6, line: 1313, baseType: !8028, size: 64, offset: 1024)
!8028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8029, size: 64)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{null, !451, !8031}
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 64)
!8032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !8033, line: 214, size: 1536, elements: !8034)
!8033 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!8034 = !{!8035, !8036, !8037, !8038, !8039, !8040, !8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054, !8055, !8056, !8057, !8058}
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8032, file: !8033, line: 215, baseType: !494, size: 64)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8032, file: !8033, line: 216, baseType: !494, size: 64, offset: 64)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8032, file: !8033, line: 217, baseType: !494, size: 64, offset: 128)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8032, file: !8033, line: 218, baseType: !494, size: 64, offset: 192)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !8032, file: !8033, line: 219, baseType: !494, size: 64, offset: 256)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !8032, file: !8033, line: 220, baseType: !494, size: 64, offset: 320)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !8032, file: !8033, line: 221, baseType: !494, size: 64, offset: 384)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !8032, file: !8033, line: 222, baseType: !494, size: 64, offset: 448)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !8032, file: !8033, line: 223, baseType: !494, size: 64, offset: 512)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !8032, file: !8033, line: 224, baseType: !494, size: 64, offset: 576)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !8032, file: !8033, line: 227, baseType: !494, size: 64, offset: 640)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !8032, file: !8033, line: 228, baseType: !494, size: 64, offset: 704)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !8032, file: !8033, line: 229, baseType: !494, size: 64, offset: 768)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !8032, file: !8033, line: 230, baseType: !494, size: 64, offset: 832)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !8032, file: !8033, line: 231, baseType: !494, size: 64, offset: 896)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !8032, file: !8033, line: 232, baseType: !494, size: 64, offset: 960)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !8032, file: !8033, line: 235, baseType: !494, size: 64, offset: 1024)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !8032, file: !8033, line: 236, baseType: !494, size: 64, offset: 1088)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !8032, file: !8033, line: 237, baseType: !494, size: 64, offset: 1152)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !8032, file: !8033, line: 238, baseType: !494, size: 64, offset: 1216)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !8032, file: !8033, line: 239, baseType: !494, size: 64, offset: 1280)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !8032, file: !8033, line: 242, baseType: !494, size: 64, offset: 1344)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !8032, file: !8033, line: 243, baseType: !494, size: 64, offset: 1408)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !8032, file: !8033, line: 244, baseType: !494, size: 64, offset: 1472)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !559, file: !6, line: 1315, baseType: !8060, size: 64, offset: 1088)
!8060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8061, size: 64)
!8061 = !DISubroutineType(types: !8062)
!8062 = !{!696, !3015, !7}
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !559, file: !6, line: 1316, baseType: !8064, size: 64, offset: 1152)
!8064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8065, size: 64)
!8065 = !DISubroutineType(types: !8066)
!8066 = !{!7, !7, !3015, !726}
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !559, file: !6, line: 1319, baseType: !8068, size: 64, offset: 1216)
!8068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8069, size: 64)
!8069 = !DISubroutineType(types: !8070)
!8070 = !{!8071, !451}
!8071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !559, file: !6, line: 1321, baseType: !8073, size: 64, offset: 1280)
!8073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 64)
!8074 = !DISubroutineType(types: !8075)
!8075 = !{!7, !451, !645, !1192}
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !559, file: !6, line: 1323, baseType: !8073, size: 64, offset: 1344)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !559, file: !6, line: 1331, baseType: !8078, size: 64, offset: 1408)
!8078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8079, size: 64)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!7, !451, !7, !8081}
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !559, file: !6, line: 1333, baseType: !8083, size: 64, offset: 1472)
!8083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8084, size: 64)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{!7, !451, !7, !1192, !1551, !645}
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !559, file: !6, line: 1336, baseType: !8087, size: 64, offset: 1536)
!8087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8088, size: 64)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{!7, !451, !7, !7, !7}
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !559, file: !6, line: 1339, baseType: !8091, size: 64, offset: 1600)
!8091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8092, size: 64)
!8092 = !DISubroutineType(types: !8093)
!8093 = !{!7, !451, !7, !696}
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !559, file: !6, line: 1341, baseType: !8091, size: 64, offset: 1664)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !559, file: !6, line: 1343, baseType: !8096, size: 64, offset: 1728)
!8096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8097, size: 64)
!8097 = !DISubroutineType(types: !8098)
!8098 = !{!7, !451, !7, !8099}
!8099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8100, size: 64)
!8100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !8101, line: 20, size: 576, elements: !8102)
!8101 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!8102 = !{!8103, !8104, !8106, !8107, !8108, !8109, !8110, !8111, !8112, !8113, !8114}
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8100, file: !8101, line: 21, baseType: !624, size: 32)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !8100, file: !8101, line: 22, baseType: !8105, size: 256, offset: 32)
!8105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 256, elements: !871)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !8100, file: !8101, line: 23, baseType: !624, size: 32, offset: 288)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !8100, file: !8101, line: 24, baseType: !624, size: 32, offset: 320)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !8100, file: !8101, line: 25, baseType: !624, size: 32, offset: 352)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !8100, file: !8101, line: 26, baseType: !624, size: 32, offset: 384)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !8100, file: !8101, line: 27, baseType: !624, size: 32, offset: 416)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !8100, file: !8101, line: 28, baseType: !624, size: 32, offset: 448)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !8100, file: !8101, line: 29, baseType: !624, size: 32, offset: 480)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !8100, file: !8101, line: 30, baseType: !624, size: 32, offset: 512)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !8100, file: !8101, line: 31, baseType: !645, size: 16, offset: 544)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !559, file: !6, line: 1346, baseType: !8116, size: 64, offset: 1792)
!8116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8117, size: 64)
!8117 = !DISubroutineType(types: !8118)
!8118 = !{!7, !451, !7, !7}
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !559, file: !6, line: 1348, baseType: !8120, size: 64, offset: 1856)
!8120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8121, size: 64)
!8121 = !DISubroutineType(types: !8122)
!8122 = !{!7, !451, !7, !8123}
!8123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8124, size: 64)
!8124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !8101, line: 9, size: 512, elements: !8125)
!8125 = !{!8126, !8127, !8128, !8129, !8130, !8131, !8132, !8133}
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8124, file: !8101, line: 10, baseType: !494, size: 64)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8124, file: !8101, line: 11, baseType: !494, size: 64, offset: 64)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8124, file: !8101, line: 12, baseType: !494, size: 64, offset: 128)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8124, file: !8101, line: 13, baseType: !494, size: 64, offset: 192)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !8124, file: !8101, line: 14, baseType: !494, size: 64, offset: 256)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !8124, file: !8101, line: 15, baseType: !494, size: 64, offset: 320)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !8124, file: !8101, line: 16, baseType: !494, size: 64, offset: 384)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !8124, file: !8101, line: 17, baseType: !494, size: 64, offset: 448)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !559, file: !6, line: 1352, baseType: !8135, size: 64, offset: 1920)
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 64)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!7, !451, !7, !8138}
!8138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8139, size: 64)
!8139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !559, file: !6, line: 1355, baseType: !8141, size: 64, offset: 1984)
!8141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8142, size: 64)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!7, !451, !7, !576}
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !559, file: !6, line: 1357, baseType: !8145, size: 64, offset: 2048)
!8145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8146, size: 64)
!8146 = !DISubroutineType(types: !8147)
!8147 = !{!7, !451, !7, !8148, !8148}
!8148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8149, size: 64)
!8149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !8033, line: 956, size: 128, elements: !8150)
!8150 = !{!8151, !8152}
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8149, file: !8033, line: 957, baseType: !624, size: 32)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !8149, file: !8033, line: 958, baseType: !494, size: 64, offset: 64)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !559, file: !6, line: 1361, baseType: !8154, size: 64, offset: 2112)
!8154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8155, size: 64)
!8155 = !DISubroutineType(types: !8156)
!8156 = !{!7, !451, !7, !492, !7}
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !559, file: !6, line: 1364, baseType: !8091, size: 64, offset: 2176)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !559, file: !6, line: 1367, baseType: !8159, size: 64, offset: 2240)
!8159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8160, size: 64)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!7, !451, !287, !726}
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !559, file: !6, line: 1400, baseType: !8163, size: 64, offset: 2304)
!8163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8164, size: 64)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{!7, !451, !451, !2625}
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !559, file: !6, line: 1403, baseType: !8167, size: 64, offset: 2368)
!8167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8168, size: 64)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!7, !451, !451}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !559, file: !6, line: 1405, baseType: !8171, size: 64, offset: 2432)
!8171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8172, size: 64)
!8172 = !DISubroutineType(types: !8173)
!8173 = !{!451, !451, !576, !696}
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !559, file: !6, line: 1408, baseType: !8175, size: 64, offset: 2496)
!8175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8176, size: 64)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{!490, !451, !490}
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !559, file: !6, line: 1410, baseType: !8179, size: 64, offset: 2560)
!8179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8180, size: 64)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!7, !451, !490}
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !559, file: !6, line: 1412, baseType: !8183, size: 64, offset: 2624)
!8183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8184, size: 64)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!7, !451, !2998}
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !559, file: !6, line: 1414, baseType: !8187, size: 64, offset: 2688)
!8187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8188, size: 64)
!8188 = !DISubroutineType(types: !8189)
!8189 = !{null, !451, !2998}
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !559, file: !6, line: 1417, baseType: !8191, size: 64, offset: 2752)
!8191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8192, size: 64)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!7, !8194, !8138, !451, !866, !1192, !1192, !2625}
!8194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8195, size: 64)
!8195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !8196, line: 8, size: 96, elements: !8197)
!8196 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!8197 = !{!8198, !8199, !8200, !8201, !8202, !8203, !8204}
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !8195, file: !8196, line: 9, baseType: !1552, size: 8)
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !8195, file: !8196, line: 10, baseType: !1552, size: 8, offset: 8)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !8195, file: !8196, line: 11, baseType: !632, size: 16, offset: 16)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !8195, file: !8196, line: 12, baseType: !1644, size: 32, offset: 32)
!8202 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !8195, file: !8196, line: 13, baseType: !632, size: 16, offset: 64)
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !8195, file: !8196, line: 14, baseType: !1552, size: 8, offset: 80)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !8195, file: !8196, line: 15, baseType: !1552, size: 8, offset: 88)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !559, file: !6, line: 1424, baseType: !8206, size: 64, offset: 2816)
!8206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8207, size: 64)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{!7, !8194, !8138, !451, !866, !1192}
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !559, file: !6, line: 1429, baseType: !8210, size: 64, offset: 2880)
!8210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8211, size: 64)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{!7, !576, !8213, !451, !451, !695}
!8213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8214, size: 64)
!8214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2627, line: 203, size: 1024, elements: !8215)
!8215 = !{!8216, !8217, !8227, !8231, !8235, !8236, !8237, !8238, !8239, !8240, !8241, !8242, !8243, !8244}
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !8214, file: !2627, line: 204, baseType: !576, size: 64)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !8214, file: !2627, line: 205, baseType: !8218, size: 64, offset: 64)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 64)
!8219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8220)
!8220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2634, line: 44, size: 128, elements: !8221)
!8221 = !{!8222, !8223, !8224, !8225, !8226}
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !8220, file: !2634, line: 45, baseType: !624, size: 32)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !8220, file: !2634, line: 46, baseType: !632, size: 16, offset: 32)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !8220, file: !2634, line: 47, baseType: !632, size: 16, offset: 48)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !8220, file: !2634, line: 48, baseType: !624, size: 32, offset: 64)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !8220, file: !2634, line: 49, baseType: !624, size: 32, offset: 96)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8214, file: !2627, line: 206, baseType: !8228, size: 64, offset: 128)
!8228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8229, size: 64)
!8229 = !DISubroutineType(types: !8230)
!8230 = !{!7, !576, !8213}
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8214, file: !2627, line: 208, baseType: !8232, size: 64, offset: 192)
!8232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8233, size: 64)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!7, !8213}
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8214, file: !2627, line: 209, baseType: !726, size: 64, offset: 256)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !8214, file: !2627, line: 211, baseType: !1006, size: 64, offset: 320)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8214, file: !2627, line: 212, baseType: !2625, size: 64, offset: 384)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !8214, file: !2627, line: 213, baseType: !1192, size: 16, offset: 448)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !8214, file: !2627, line: 214, baseType: !1192, size: 16, offset: 464)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !8214, file: !2627, line: 215, baseType: !862, size: 32, offset: 480)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !8214, file: !2627, line: 216, baseType: !14, size: 32, offset: 512)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !8214, file: !2627, line: 216, baseType: !14, size: 32, offset: 544)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !8214, file: !2627, line: 217, baseType: !696, size: 8, offset: 576)
!8244 = !DIDerivedType(tag: DW_TAG_member, scope: !8214, file: !2627, line: 218, baseType: !8245, size: 384, offset: 640)
!8245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8214, file: !2627, line: 218, size: 384, elements: !8246)
!8246 = !{!8247, !8249}
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !8245, file: !2627, line: 219, baseType: !8248, size: 384)
!8248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 384, elements: !7783)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !8245, file: !2627, line: 224, baseType: !8250, size: 384)
!8250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !669, size: 384, elements: !1824)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !559, file: !6, line: 1434, baseType: !8252, size: 64, offset: 2944)
!8252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8253, size: 64)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!7, !576, !8138, !451, !866, !1192, !862, !862, !2625}
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !559, file: !6, line: 1440, baseType: !8256, size: 64, offset: 3008)
!8256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8257, size: 64)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{!7, !451, !8259, !1192, !2625}
!8259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8220, size: 64)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !559, file: !6, line: 1444, baseType: !8261, size: 64, offset: 3072)
!8261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8262, size: 64)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!7, !576, !862, !862, !451, !862, !7}
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !559, file: !6, line: 1449, baseType: !8265, size: 64, offset: 3136)
!8265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8266, size: 64)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!7, !451, !8259, !1192}
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !559, file: !6, line: 1452, baseType: !8269, size: 64, offset: 3200)
!8269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8270, size: 64)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!7, !451, !696}
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !559, file: !6, line: 1454, baseType: !8273, size: 64, offset: 3264)
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8274, size: 64)
!8274 = !DISubroutineType(types: !8275)
!8275 = !{!7, !451, !8276}
!8276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8277, size: 64)
!8277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !6, line: 820, size: 264, elements: !8278)
!8278 = !{!8279, !8280}
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8277, file: !6, line: 821, baseType: !870, size: 256)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !8277, file: !6, line: 822, baseType: !650, size: 8, offset: 256)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !559, file: !6, line: 1456, baseType: !8273, size: 64, offset: 3328)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !559, file: !6, line: 1458, baseType: !8283, size: 64, offset: 3392)
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8284, size: 64)
!8284 = !DISubroutineType(types: !8285)
!8285 = !{!7, !451, !733, !750}
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !559, file: !6, line: 1460, baseType: !8287, size: 64, offset: 3456)
!8287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8288, size: 64)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{null, !451, !8290}
!8290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8291, size: 64)
!8291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !8292, line: 114, size: 64, elements: !8293)
!8292 = !DIFile(filename: "./include/net/udp_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!8293 = !{!8294, !8295, !8296, !8297}
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8291, file: !8292, line: 115, baseType: !633, size: 16)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !8291, file: !8292, line: 116, baseType: !679, size: 16, offset: 16)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8291, file: !8292, line: 117, baseType: !645, size: 16, offset: 32)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "hw_priv", scope: !8291, file: !8292, line: 118, baseType: !1551, size: 8, offset: 48)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !559, file: !6, line: 1462, baseType: !8287, size: 64, offset: 3520)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !559, file: !6, line: 1464, baseType: !8300, size: 64, offset: 3584)
!8300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8301, size: 64)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{!726, !451, !451}
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !559, file: !6, line: 1466, baseType: !8304, size: 64, offset: 3648)
!8304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8305, size: 64)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{null, !451, !726}
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !559, file: !6, line: 1469, baseType: !8308, size: 64, offset: 3712)
!8308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8309, size: 64)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!7, !451, !7, !862}
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !559, file: !6, line: 1472, baseType: !8312, size: 64, offset: 3776)
!8312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8313, size: 64)
!8313 = !DISubroutineType(types: !8314)
!8314 = !{!7, !3015}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !559, file: !6, line: 1473, baseType: !8269, size: 64, offset: 3840)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !559, file: !6, line: 1475, baseType: !8317, size: 64, offset: 3904)
!8317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8318, size: 64)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{!7, !451, !576}
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !559, file: !6, line: 1477, baseType: !7890, size: 64, offset: 3968)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !559, file: !6, line: 1479, baseType: !8322, size: 64, offset: 4032)
!8322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8323, size: 64)
!8323 = !DISubroutineType(types: !8324)
!8324 = !{!7, !451, !8325}
!8325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8326, size: 64)
!8326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !6, line: 894, size: 256, elements: !8327)
!8327 = !{!8328, !8329}
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8326, file: !6, line: 895, baseType: !307, size: 32)
!8329 = !DIDerivedType(tag: DW_TAG_member, scope: !8326, file: !6, line: 896, baseType: !8330, size: 192, offset: 64)
!8330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8326, file: !6, line: 896, size: 192, elements: !8331)
!8331 = !{!8332, !8338, !8367}
!8332 = !DIDerivedType(tag: DW_TAG_member, scope: !8330, file: !6, line: 898, baseType: !8333, size: 192)
!8333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8330, file: !6, line: 898, size: 192, elements: !8334)
!8334 = !{!8335, !8336, !8337}
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8333, file: !6, line: 899, baseType: !862, size: 32)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8333, file: !6, line: 900, baseType: !3496, size: 64, offset: 64)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8333, file: !6, line: 901, baseType: !2625, size: 64, offset: 128)
!8338 = !DIDerivedType(tag: DW_TAG_member, scope: !8330, file: !6, line: 904, baseType: !8339, size: 64)
!8339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8330, file: !6, line: 904, size: 64, elements: !8340)
!8340 = !{!8341}
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !8339, file: !6, line: 905, baseType: !8342, size: 64)
!8342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8343, size: 64)
!8343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !105, line: 222, size: 2560, elements: !8344)
!8344 = !{!8345, !8346, !8347, !8365, !8366}
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !8343, file: !105, line: 223, baseType: !3621, size: 2048)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8343, file: !105, line: 224, baseType: !451, size: 64, offset: 2048)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !8343, file: !105, line: 225, baseType: !8348, size: 64, offset: 2112)
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8349, size: 64)
!8349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8350)
!8350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !105, line: 212, size: 256, elements: !8351)
!8351 = !{!8352, !8356, !8357, !8361}
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !8350, file: !105, line: 213, baseType: !8353, size: 64)
!8353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8354, size: 64)
!8354 = !DISubroutineType(types: !8355)
!8355 = !{!7, !8342, !726, !726}
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !8350, file: !105, line: 215, baseType: !8353, size: 64, offset: 64)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !8350, file: !105, line: 217, baseType: !8358, size: 64, offset: 128)
!8358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8359, size: 64)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!7, !8342, !726, !726, !492}
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !8350, file: !105, line: 219, baseType: !8362, size: 64, offset: 192)
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8363, size: 64)
!8363 = !DISubroutineType(types: !8364)
!8364 = !{!7, !8342, !726}
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !8343, file: !105, line: 226, baseType: !726, size: 64, offset: 2176)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8343, file: !105, line: 227, baseType: !445, size: 128, offset: 2240)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !8330, file: !6, line: 911, baseType: !8368, size: 128)
!8368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8330, file: !6, line: 908, size: 128, elements: !8369)
!8369 = !{!8370, !8373}
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8368, file: !6, line: 909, baseType: !8371, size: 64)
!8371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8372, size: 64)
!8372 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !6, line: 909, flags: DIFlagFwdDecl)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8368, file: !6, line: 910, baseType: !1192, size: 16, offset: 64)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !559, file: !6, line: 1481, baseType: !8375, size: 64, offset: 4096)
!8375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8376, size: 64)
!8376 = !DISubroutineType(types: !8377)
!8377 = !{!7, !451, !7, !8378, !862}
!8378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8379, size: 64)
!8379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8380, size: 64)
!8380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8381, line: 94, size: 256, elements: !8382)
!8381 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8382 = !{!8383, !8384, !8385, !8386, !8387, !8388, !8393}
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8380, file: !8381, line: 95, baseType: !726, size: 64)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8380, file: !8381, line: 96, baseType: !1192, size: 16, offset: 64)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8380, file: !8381, line: 97, baseType: !1192, size: 16, offset: 80)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8380, file: !8381, line: 98, baseType: !862, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8380, file: !8381, line: 99, baseType: !862, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8380, file: !8381, line: 103, baseType: !8389, size: 64, offset: 128)
!8389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8381, line: 50, size: 64, elements: !8390)
!8390 = !{!8391, !8392}
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8389, file: !8381, line: 51, baseType: !862, size: 32)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8389, file: !8381, line: 52, baseType: !862, size: 32, offset: 32)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8380, file: !8381, line: 104, baseType: !451, size: 64, offset: 192)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !559, file: !6, line: 1484, baseType: !8395, size: 64, offset: 4160)
!8395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8396, size: 64)
!8396 = !DISubroutineType(types: !8397)
!8397 = !{!7, !451, !862, !862}
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !559, file: !6, line: 1486, baseType: !8399, size: 64, offset: 4224)
!8399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8400, size: 64)
!8400 = !DISubroutineType(types: !8401)
!8401 = !{!8402, !451}
!8402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8403, size: 64)
!8403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !8404, line: 119, size: 2176, elements: !8405)
!8404 = !DIFile(filename: "./include/net/devlink.h", directory: "/home/lizy2001/genbc/linux")
!8405 = !{!8406, !8407, !8408, !8409, !8656, !8657, !8658, !8659, !8660, !8661, !8662, !8691, !8692, !8693, !8694, !8695}
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8403, file: !8404, line: 120, baseType: !445, size: 128)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !8403, file: !8404, line: 121, baseType: !445, size: 128, offset: 128)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !8403, file: !8404, line: 122, baseType: !445, size: 128, offset: 256)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !8403, file: !8404, line: 123, baseType: !8410, size: 64, offset: 384)
!8410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8411, size: 64)
!8411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink", file: !8404, line: 33, size: 2816, elements: !8412)
!8412 = !{!8413, !8414, !8415, !8416, !8417, !8418, !8419, !8420, !8421, !8422, !8444, !8445, !8446, !8447, !8641, !8642, !8648, !8649, !8650, !8651, !8652, !8653, !8654}
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8411, file: !8404, line: 34, baseType: !445, size: 128)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !8411, file: !8404, line: 35, baseType: !445, size: 128, offset: 128)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !8411, file: !8404, line: 36, baseType: !445, size: 128, offset: 256)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_table_list", scope: !8411, file: !8404, line: 37, baseType: !445, size: 128, offset: 384)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "resource_list", scope: !8411, file: !8404, line: 38, baseType: !445, size: 128, offset: 512)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !8411, file: !8404, line: 39, baseType: !445, size: 128, offset: 640)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !8411, file: !8404, line: 40, baseType: !445, size: 128, offset: 768)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !8411, file: !8404, line: 41, baseType: !445, size: 128, offset: 896)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !8411, file: !8404, line: 42, baseType: !1108, size: 192, offset: 1024)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_headers", scope: !8411, file: !8404, line: 43, baseType: !8423, size: 64, offset: 1216)
!8423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8424, size: 64)
!8424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_headers", file: !8404, line: 320, size: 128, elements: !8425)
!8425 = !{!8426, !8443}
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !8424, file: !8404, line: 321, baseType: !8427, size: 64)
!8427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8428, size: 64)
!8428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8429, size: 64)
!8429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_header", file: !8404, line: 170, size: 256, elements: !8430)
!8430 = !{!8431, !8432, !8433, !8441, !8442}
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8429, file: !8404, line: 171, baseType: !453, size: 64)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8429, file: !8404, line: 172, baseType: !14, size: 32, offset: 64)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !8429, file: !8404, line: 173, baseType: !8434, size: 64, offset: 128)
!8434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8435, size: 64)
!8435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_field", file: !8404, line: 154, size: 192, elements: !8436)
!8436 = !{!8437, !8438, !8439, !8440}
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8435, file: !8404, line: 155, baseType: !453, size: 64)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8435, file: !8404, line: 156, baseType: !14, size: 32, offset: 64)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "bitwidth", scope: !8435, file: !8404, line: 157, baseType: !14, size: 32, offset: 96)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "mapping_type", scope: !8435, file: !8404, line: 158, baseType: !314, size: 32, offset: 128)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "fields_count", scope: !8429, file: !8404, line: 174, baseType: !14, size: 32, offset: 192)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !8429, file: !8404, line: 175, baseType: !696, size: 8, offset: 224)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "headers_count", scope: !8424, file: !8404, line: 322, baseType: !14, size: 32, offset: 64)
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "trap_list", scope: !8411, file: !8404, line: 44, baseType: !445, size: 128, offset: 1280)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_list", scope: !8411, file: !8404, line: 45, baseType: !445, size: 128, offset: 1408)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_list", scope: !8411, file: !8404, line: 46, baseType: !445, size: 128, offset: 1536)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8411, file: !8404, line: 47, baseType: !8448, size: 64, offset: 1664)
!8448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8449, size: 64)
!8449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8450)
!8450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_ops", file: !8404, line: 1159, size: 2432, elements: !8451)
!8451 = !{!8452, !8453, !8454, !8455, !8459, !8463, !8467, !8471, !8475, !8486, !8490, !8494, !8498, !8503, !8507, !8511, !8512, !8516, !8520, !8524, !8528, !8532, !8536, !8541, !8545, !8551, !8561, !8576, !8580, !8584, !8596, !8611, !8615, !8619, !8623, !8627, !8631, !8635}
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "supported_flash_update_params", scope: !8450, file: !8404, line: 1165, baseType: !862, size: 32)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "reload_actions", scope: !8450, file: !8404, line: 1166, baseType: !473, size: 64, offset: 64)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "reload_limits", scope: !8450, file: !8404, line: 1167, baseType: !473, size: 64, offset: 128)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "reload_down", scope: !8450, file: !8404, line: 1168, baseType: !8456, size: 64, offset: 192)
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 64)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{!7, !8410, !696, !319, !326, !2625}
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "reload_up", scope: !8450, file: !8404, line: 1172, baseType: !8460, size: 64, offset: 256)
!8460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8461, size: 64)
!8461 = !DISubroutineType(types: !8462)
!8462 = !{!7, !8410, !319, !326, !1614, !2625}
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !8450, file: !8404, line: 1175, baseType: !8464, size: 64, offset: 320)
!8464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8465, size: 64)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{!7, !8402, !332}
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !8450, file: !8404, line: 1177, baseType: !8468, size: 64, offset: 384)
!8468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8469, size: 64)
!8469 = !DISubroutineType(types: !8470)
!8470 = !{!7, !8410, !14, !14, !2625}
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !8450, file: !8404, line: 1179, baseType: !8472, size: 64, offset: 448)
!8472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8473, size: 64)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!7, !8410, !14, !2625}
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !8450, file: !8404, line: 1181, baseType: !8476, size: 64, offset: 512)
!8476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8477, size: 64)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!7, !8410, !14, !1192, !8479}
!8479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8480, size: 64)
!8480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_sb_pool_info", file: !8404, line: 140, size: 128, elements: !8481)
!8481 = !{!8482, !8483, !8484, !8485}
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "pool_type", scope: !8480, file: !8404, line: 141, baseType: !338, size: 32)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8480, file: !8404, line: 142, baseType: !862, size: 32, offset: 32)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_type", scope: !8480, file: !8404, line: 143, baseType: !342, size: 32, offset: 64)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !8480, file: !8404, line: 144, baseType: !862, size: 32, offset: 96)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !8450, file: !8404, line: 1184, baseType: !8487, size: 64, offset: 576)
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 64)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!7, !8410, !14, !1192, !862, !342, !2625}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !8450, file: !8404, line: 1188, baseType: !8491, size: 64, offset: 640)
!8491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8492, size: 64)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!7, !8402, !14, !1192, !1614}
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !8450, file: !8404, line: 1191, baseType: !8495, size: 64, offset: 704)
!8495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8496, size: 64)
!8496 = !DISubroutineType(types: !8497)
!8497 = !{!7, !8402, !14, !1192, !862, !2625}
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !8450, file: !8404, line: 1194, baseType: !8499, size: 64, offset: 768)
!8499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8500, size: 64)
!8500 = !DISubroutineType(types: !8501)
!8501 = !{!7, !8402, !14, !1192, !338, !8502, !1614}
!8502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !8450, file: !8404, line: 1199, baseType: !8504, size: 64, offset: 832)
!8504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8505, size: 64)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{!7, !8402, !14, !1192, !338, !1192, !862, !2625}
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !8450, file: !8404, line: 1205, baseType: !8508, size: 64, offset: 896)
!8508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8509, size: 64)
!8509 = !DISubroutineType(types: !8510)
!8510 = !{!7, !8410, !14}
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !8450, file: !8404, line: 1207, baseType: !8508, size: 64, offset: 960)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !8450, file: !8404, line: 1209, baseType: !8513, size: 64, offset: 1024)
!8513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8514, size: 64)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{!7, !8402, !14, !1192, !1614, !1614}
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !8450, file: !8404, line: 1212, baseType: !8517, size: 64, offset: 1088)
!8517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8518, size: 64)
!8518 = !DISubroutineType(types: !8519)
!8519 = !{!7, !8402, !14, !1192, !338, !1614, !1614}
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_get", scope: !8450, file: !8404, line: 1218, baseType: !8521, size: 64, offset: 1152)
!8521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8522, size: 64)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{!7, !8410, !8502}
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_set", scope: !8450, file: !8404, line: 1219, baseType: !8525, size: 64, offset: 1216)
!8525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8526, size: 64)
!8526 = !DISubroutineType(types: !8527)
!8527 = !{!7, !8410, !1192, !2625}
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_get", scope: !8450, file: !8404, line: 1221, baseType: !8529, size: 64, offset: 1280)
!8529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8530, size: 64)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{!7, !8410, !8081}
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_set", scope: !8450, file: !8404, line: 1222, baseType: !8533, size: 64, offset: 1344)
!8533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8534, size: 64)
!8534 = !DISubroutineType(types: !8535)
!8535 = !{!7, !8410, !1551, !2625}
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_get", scope: !8450, file: !8404, line: 1224, baseType: !8537, size: 64, offset: 1408)
!8537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8538, size: 64)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!7, !8410, !8540}
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_set", scope: !8450, file: !8404, line: 1226, baseType: !8542, size: 64, offset: 1472)
!8542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8543, size: 64)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{!7, !8410, !346, !2625}
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "info_get", scope: !8450, file: !8404, line: 1229, baseType: !8546, size: 64, offset: 1536)
!8546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8547, size: 64)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!7, !8410, !8549, !2625}
!8549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8550, size: 64)
!8550 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_info_req", file: !8404, line: 586, flags: DIFlagFwdDecl)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "flash_update", scope: !8450, file: !8404, line: 1238, baseType: !8552, size: 64, offset: 1600)
!8552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8553, size: 64)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{!7, !8410, !8555, !2625}
!8555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8556, size: 64)
!8556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_flash_update_params", file: !8404, line: 576, size: 192, elements: !8557)
!8557 = !{!8558, !8559, !8560}
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !8556, file: !8404, line: 577, baseType: !453, size: 64)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !8556, file: !8404, line: 578, baseType: !453, size: 64, offset: 64)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite_mask", scope: !8556, file: !8404, line: 579, baseType: !862, size: 32, offset: 128)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !8450, file: !8404, line: 1249, baseType: !8562, size: 64, offset: 1664)
!8562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8563, size: 64)
!8563 = !DISubroutineType(types: !8564)
!8564 = !{!7, !8410, !8565, !726}
!8565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8566, size: 64)
!8566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8567)
!8567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap", file: !8404, line: 733, size: 256, elements: !8568)
!8568 = !{!8569, !8570, !8571, !8572, !8573, !8574, !8575}
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8567, file: !8404, line: 734, baseType: !350, size: 32)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "init_action", scope: !8567, file: !8404, line: 735, baseType: !355, size: 32, offset: 32)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !8567, file: !8404, line: 736, baseType: !696, size: 8, offset: 64)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8567, file: !8404, line: 737, baseType: !1192, size: 16, offset: 80)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8567, file: !8404, line: 738, baseType: !453, size: 64, offset: 128)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "init_group_id", scope: !8567, file: !8404, line: 739, baseType: !1192, size: 16, offset: 192)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_cap", scope: !8567, file: !8404, line: 740, baseType: !862, size: 32, offset: 224)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !8450, file: !8404, line: 1257, baseType: !8577, size: 64, offset: 1728)
!8577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8578, size: 64)
!8578 = !DISubroutineType(types: !8579)
!8579 = !{null, !8410, !8565, !726}
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !8450, file: !8404, line: 1262, baseType: !8581, size: 64, offset: 1792)
!8581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8582, size: 64)
!8582 = !DISubroutineType(types: !8583)
!8583 = !{!7, !8410, !8565, !355, !2625}
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !8450, file: !8404, line: 1272, baseType: !8585, size: 64, offset: 1856)
!8585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8586, size: 64)
!8586 = !DISubroutineType(types: !8587)
!8587 = !{!7, !8410, !8588}
!8588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8589, size: 64)
!8589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8590)
!8590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_group", file: !8404, line: 710, size: 128, elements: !8591)
!8591 = !{!8592, !8593, !8594, !8595}
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8590, file: !8404, line: 711, baseType: !453, size: 64)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8590, file: !8404, line: 712, baseType: !1192, size: 16, offset: 64)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !8590, file: !8404, line: 713, baseType: !696, size: 8, offset: 80)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "init_policer_id", scope: !8590, file: !8404, line: 714, baseType: !862, size: 32, offset: 96)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !8450, file: !8404, line: 1280, baseType: !8597, size: 64, offset: 1920)
!8597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8598, size: 64)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!7, !8410, !8588, !8600, !2625}
!8600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8601, size: 64)
!8601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8602)
!8602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_policer", file: !8404, line: 690, size: 448, elements: !8603)
!8603 = !{!8604, !8605, !8606, !8607, !8608, !8609, !8610}
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8602, file: !8404, line: 691, baseType: !862, size: 32)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "init_rate", scope: !8602, file: !8404, line: 692, baseType: !492, size: 64, offset: 64)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "init_burst", scope: !8602, file: !8404, line: 693, baseType: !492, size: 64, offset: 128)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !8602, file: !8404, line: 694, baseType: !492, size: 64, offset: 192)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !8602, file: !8404, line: 695, baseType: !492, size: 64, offset: 256)
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !8602, file: !8404, line: 696, baseType: !492, size: 64, offset: 320)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !8602, file: !8404, line: 697, baseType: !492, size: 64, offset: 384)
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_action_set", scope: !8450, file: !8404, line: 1290, baseType: !8612, size: 64, offset: 1984)
!8612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8613, size: 64)
!8613 = !DISubroutineType(types: !8614)
!8614 = !{!7, !8410, !8588, !355, !2625}
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !8450, file: !8404, line: 1300, baseType: !8616, size: 64, offset: 2048)
!8616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8617, size: 64)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{!7, !8410, !8600}
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !8450, file: !8404, line: 1308, baseType: !8620, size: 64, offset: 2112)
!8620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8621, size: 64)
!8621 = !DISubroutineType(types: !8622)
!8622 = !{null, !8410, !8600}
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !8450, file: !8404, line: 1313, baseType: !8624, size: 64, offset: 2176)
!8624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8625, size: 64)
!8625 = !DISubroutineType(types: !8626)
!8626 = !{!7, !8410, !8600, !492, !492, !2625}
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !8450, file: !8404, line: 1323, baseType: !8628, size: 64, offset: 2240)
!8628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8629, size: 64)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{!7, !8410, !8600, !3925}
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_get", scope: !8450, file: !8404, line: 1335, baseType: !8632, size: 64, offset: 2304)
!8632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8633, size: 64)
!8633 = !DISubroutineType(types: !8634)
!8634 = !{!7, !8410, !8402, !8081, !695, !2625}
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_set", scope: !8450, file: !8404, line: 1345, baseType: !8636, size: 64, offset: 2368)
!8636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8637, size: 64)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{!7, !8410, !8402, !8639, !7, !2625}
!8639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8640, size: 64)
!8640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_ids", scope: !8411, file: !8404, line: 48, baseType: !2138, size: 128, offset: 1728)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8411, file: !8404, line: 49, baseType: !8643, size: 384, offset: 1856)
!8643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dev_stats", file: !8404, line: 26, size: 384, elements: !8644)
!8644 = !{!8645, !8647}
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "reload_stats", scope: !8643, file: !8404, line: 27, baseType: !8646, size: 192)
!8646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 192, elements: !1824)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "remote_reload_stats", scope: !8643, file: !8404, line: 28, baseType: !8646, size: 192, offset: 192)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8411, file: !8404, line: 50, baseType: !4753, size: 64, offset: 2240)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !8411, file: !8404, line: 51, baseType: !3037, size: 64, offset: 2304)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8411, file: !8404, line: 52, baseType: !1108, size: 192, offset: 2368)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "reload_failed", scope: !8411, file: !8404, line: 55, baseType: !1551, size: 1, offset: 2560, flags: DIFlagBitField, extraData: i64 2560)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "reload_enabled", scope: !8411, file: !8404, line: 56, baseType: !1551, size: 1, offset: 2561, flags: DIFlagBitField, extraData: i64 2560)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !8411, file: !8404, line: 57, baseType: !1551, size: 1, offset: 2562, flags: DIFlagBitField, extraData: i64 2560)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8411, file: !8404, line: 58, baseType: !8655, align: 256, offset: 2816)
!8655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, elements: !2075)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8403, file: !8404, line: 124, baseType: !14, size: 32, offset: 448)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !8403, file: !8404, line: 125, baseType: !696, size: 8, offset: 480)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "type_lock", scope: !8403, file: !8404, line: 126, baseType: !884, offset: 488)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8403, file: !8404, line: 129, baseType: !332, size: 32, offset: 512)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "desired_type", scope: !8403, file: !8404, line: 130, baseType: !332, size: 32, offset: 544)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "type_dev", scope: !8403, file: !8404, line: 131, baseType: !726, size: 64, offset: 576)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !8403, file: !8404, line: 132, baseType: !8663, size: 480, offset: 640)
!8663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_attrs", file: !8404, line: 106, size: 480, elements: !8664)
!8664 = !{!8665, !8666, !8667, !8668, !8669, !8670}
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !8663, file: !8404, line: 107, baseType: !1551, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "splittable", scope: !8663, file: !8404, line: 108, baseType: !1551, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !8663, file: !8404, line: 109, baseType: !862, size: 32, offset: 32)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "flavour", scope: !8663, file: !8404, line: 110, baseType: !360, size: 32, offset: 64)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "switch_id", scope: !8663, file: !8404, line: 111, baseType: !8277, size: 264, offset: 96)
!8670 = !DIDerivedType(tag: DW_TAG_member, scope: !8663, file: !8404, line: 112, baseType: !8671, size: 96, offset: 384)
!8671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8663, file: !8404, line: 112, size: 96, elements: !8672)
!8672 = !{!8673, !8678, !8684}
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !8671, file: !8404, line: 113, baseType: !8674, size: 64)
!8674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_phys_attrs", file: !8404, line: 61, size: 64, elements: !8675)
!8675 = !{!8676, !8677}
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !8674, file: !8404, line: 62, baseType: !862, size: 32)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "split_subport_number", scope: !8674, file: !8404, line: 66, baseType: !862, size: 32, offset: 32)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "pci_pf", scope: !8671, file: !8404, line: 114, baseType: !8679, size: 64)
!8679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_pf_attrs", file: !8404, line: 75, size: 64, elements: !8680)
!8680 = !{!8681, !8682, !8683}
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !8679, file: !8404, line: 76, baseType: !862, size: 32)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !8679, file: !8404, line: 77, baseType: !1192, size: 16, offset: 32)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !8679, file: !8404, line: 78, baseType: !1551, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 48)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vf", scope: !8671, file: !8404, line: 115, baseType: !8685, size: 96)
!8685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_vf_attrs", file: !8404, line: 88, size: 96, elements: !8686)
!8686 = !{!8687, !8688, !8689, !8690}
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !8685, file: !8404, line: 89, baseType: !862, size: 32)
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !8685, file: !8404, line: 90, baseType: !1192, size: 16, offset: 32)
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8685, file: !8404, line: 91, baseType: !1192, size: 16, offset: 48)
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !8685, file: !8404, line: 92, baseType: !1551, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_set", scope: !8403, file: !8404, line: 133, baseType: !1551, size: 1, offset: 1120, flags: DIFlagBitField, extraData: i64 1120)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "switch_port", scope: !8403, file: !8404, line: 134, baseType: !1551, size: 1, offset: 1121, flags: DIFlagBitField, extraData: i64 1120)
!8693 = !DIDerivedType(tag: DW_TAG_member, name: "type_warn_dw", scope: !8403, file: !8404, line: 135, baseType: !3085, size: 704, offset: 1152)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !8403, file: !8404, line: 136, baseType: !445, size: 128, offset: 1856)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !8403, file: !8404, line: 137, baseType: !1108, size: 192, offset: 1984)
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !559, file: !6, line: 1487, baseType: !8697, size: 64, offset: 4288)
!8697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8698, size: 64)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!7, !451, !8700, !7}
!8700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8701, size: 64)
!8701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !8702, line: 48, size: 416, elements: !8703)
!8702 = !DIFile(filename: "./include/uapi/linux/if_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!8703 = !{!8704, !8705, !8706, !8707, !8708, !8709, !8710}
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8701, file: !8702, line: 49, baseType: !428, size: 128)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !8701, file: !8702, line: 50, baseType: !7, size: 32, offset: 128)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !8701, file: !8702, line: 51, baseType: !645, size: 16, offset: 160)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "o_flags", scope: !8701, file: !8702, line: 52, baseType: !645, size: 16, offset: 176)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "i_key", scope: !8701, file: !8702, line: 53, baseType: !622, size: 32, offset: 192)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "o_key", scope: !8701, file: !8702, line: 54, baseType: !622, size: 32, offset: 224)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "iph", scope: !8701, file: !8702, line: 55, baseType: !8711, size: 160, offset: 256)
!8711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !8712, line: 86, size: 160, elements: !8713)
!8712 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!8713 = !{!8714, !8715, !8716, !8717, !8718, !8719, !8720, !8721, !8722, !8724, !8725}
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !8711, file: !8712, line: 88, baseType: !1552, size: 4, flags: DIFlagBitField, extraData: i64 0)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8711, file: !8712, line: 89, baseType: !1552, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8711, file: !8712, line: 96, baseType: !1552, size: 8, offset: 8)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !8711, file: !8712, line: 97, baseType: !645, size: 16, offset: 16)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8711, file: !8712, line: 98, baseType: !645, size: 16, offset: 32)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !8711, file: !8712, line: 99, baseType: !645, size: 16, offset: 48)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !8711, file: !8712, line: 100, baseType: !1552, size: 8, offset: 64)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8711, file: !8712, line: 101, baseType: !1552, size: 8, offset: 72)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !8711, file: !8712, line: 102, baseType: !8723, size: 16, offset: 80)
!8723 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !623, line: 36, baseType: !632)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !8711, file: !8712, line: 103, baseType: !622, size: 32, offset: 96)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !8711, file: !8712, line: 104, baseType: !622, size: 32, offset: 128)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !559, file: !6, line: 1489, baseType: !8727, size: 64, offset: 4352)
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8728, size: 64)
!8728 = !DISubroutineType(types: !8729)
!8729 = !{!451, !451}
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !425, file: !6, line: 1917, baseType: !8731, size: 64, offset: 4032)
!8731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8732, size: 64)
!8732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8733)
!8733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !412, line: 421, size: 3904, elements: !8734)
!8734 = !{!8735, !8736, !8756, !8757, !8768, !8780, !8784, !8788, !8792, !8793, !8794, !8811, !8812, !8824, !8825, !8855, !8856, !8872, !8876, !8885, !8896, !8900, !8913, !8917, !8921, !8931, !8932, !8933, !8934, !8938, !8939, !9041, !9045, !9055, !9059, !9060, !9061, !9065, !9070, !9074, !9078, !9094, !9098, !9110, !9114, !9115, !9130, !9142, !9143, !9159, !9160, !9173, !9177, !9181, !9182, !9220, !9226, !9237, !9238, !9239, !9240}
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8733, file: !412, line: 422, baseType: !862, size: 32)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8733, file: !412, line: 423, baseType: !8737, size: 64, offset: 64)
!8737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8738, size: 64)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{null, !451, !8740}
!8740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8741, size: 64)
!8741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !370, line: 177, size: 1568, elements: !8742)
!8742 = !{!8743, !8744, !8745, !8746, !8747, !8748, !8749, !8751, !8752, !8753, !8754, !8755}
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8741, file: !370, line: 178, baseType: !624, size: 32)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8741, file: !370, line: 179, baseType: !4348, size: 256, offset: 32)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8741, file: !370, line: 180, baseType: !4348, size: 256, offset: 288)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8741, file: !370, line: 181, baseType: !4348, size: 256, offset: 544)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8741, file: !370, line: 182, baseType: !4348, size: 256, offset: 800)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8741, file: !370, line: 183, baseType: !4348, size: 256, offset: 1056)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8741, file: !370, line: 184, baseType: !8750, size: 96, offset: 1312)
!8750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 96, elements: !3166)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8741, file: !370, line: 185, baseType: !624, size: 32, offset: 1408)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8741, file: !370, line: 186, baseType: !624, size: 32, offset: 1440)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8741, file: !370, line: 187, baseType: !624, size: 32, offset: 1472)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8741, file: !370, line: 188, baseType: !624, size: 32, offset: 1504)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8741, file: !370, line: 189, baseType: !624, size: 32, offset: 1536)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8733, file: !412, line: 424, baseType: !562, size: 64, offset: 128)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8733, file: !412, line: 425, baseType: !8758, size: 64, offset: 192)
!8758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8759, size: 64)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{null, !451, !8761, !726}
!8761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8762, size: 64)
!8762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !370, line: 310, size: 96, elements: !8763)
!8763 = !{!8764, !8765, !8766, !8767}
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8762, file: !370, line: 311, baseType: !624, size: 32)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8762, file: !370, line: 312, baseType: !624, size: 32, offset: 32)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8762, file: !370, line: 313, baseType: !624, size: 32, offset: 64)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8762, file: !370, line: 314, baseType: !7800, offset: 96)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8733, file: !412, line: 426, baseType: !8769, size: 64, offset: 256)
!8769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8770, size: 64)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{null, !451, !8772}
!8772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8773, size: 64)
!8773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !370, line: 203, size: 160, elements: !8774)
!8774 = !{!8775, !8776, !8777, !8778}
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8773, file: !370, line: 204, baseType: !624, size: 32)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8773, file: !370, line: 205, baseType: !624, size: 32, offset: 32)
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8773, file: !370, line: 206, baseType: !624, size: 32, offset: 64)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8773, file: !370, line: 207, baseType: !8779, size: 48, offset: 96)
!8779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 48, elements: !1824)
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8733, file: !412, line: 427, baseType: !8781, size: 64, offset: 320)
!8781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8782, size: 64)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{!7, !451, !8772}
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8733, file: !412, line: 428, baseType: !8785, size: 64, offset: 384)
!8785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8786, size: 64)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!862, !451}
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8733, file: !412, line: 429, baseType: !8789, size: 64, offset: 448)
!8789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8790, size: 64)
!8790 = !DISubroutineType(types: !8791)
!8791 = !{null, !451, !862}
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8733, file: !412, line: 430, baseType: !562, size: 64, offset: 512)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8733, file: !412, line: 431, baseType: !8785, size: 64, offset: 576)
!8794 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8733, file: !412, line: 432, baseType: !8795, size: 64, offset: 640)
!8795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8796, size: 64)
!8796 = !DISubroutineType(types: !8797)
!8797 = !{!7, !451, !8798}
!8798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8799, size: 64)
!8799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !412, line: 93, size: 64, elements: !8800)
!8800 = !{!8801, !8802}
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8799, file: !412, line: 94, baseType: !369, size: 32)
!8802 = !DIDerivedType(tag: DW_TAG_member, scope: !8799, file: !412, line: 95, baseType: !8803, size: 32, offset: 32)
!8803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8799, file: !412, line: 95, size: 32, elements: !8804)
!8804 = !{!8805, !8806, !8807, !8808, !8809, !8810}
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8803, file: !412, line: 96, baseType: !382, size: 32)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8803, file: !412, line: 97, baseType: !390, size: 32)
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8803, file: !412, line: 98, baseType: !396, size: 32)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8803, file: !412, line: 99, baseType: !403, size: 32)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8803, file: !412, line: 100, baseType: !407, size: 32)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8803, file: !412, line: 101, baseType: !1551, size: 8)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8733, file: !412, line: 434, baseType: !562, size: 64, offset: 704)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8733, file: !412, line: 435, baseType: !8813, size: 64, offset: 768)
!8813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8814, size: 64)
!8814 = !DISubroutineType(types: !8815)
!8815 = !{!7, !451, !8816, !8081}
!8816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8817, size: 64)
!8817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !370, line: 335, size: 128, elements: !8818)
!8818 = !{!8819, !8820, !8821, !8822, !8823}
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8817, file: !370, line: 336, baseType: !624, size: 32)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8817, file: !370, line: 337, baseType: !624, size: 32, offset: 32)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8817, file: !370, line: 338, baseType: !624, size: 32, offset: 64)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8817, file: !370, line: 339, baseType: !624, size: 32, offset: 96)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8817, file: !370, line: 340, baseType: !7800, offset: 128)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8733, file: !412, line: 437, baseType: !8813, size: 64, offset: 832)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8733, file: !412, line: 439, baseType: !8826, size: 64, offset: 896)
!8826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8827, size: 64)
!8827 = !DISubroutineType(types: !8828)
!8828 = !{!7, !451, !8829}
!8829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8830, size: 64)
!8830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !370, line: 462, size: 736, elements: !8831)
!8831 = !{!8832, !8833, !8834, !8835, !8836, !8837, !8838, !8839, !8840, !8841, !8842, !8843, !8844, !8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852, !8853, !8854}
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8830, file: !370, line: 463, baseType: !624, size: 32)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8830, file: !370, line: 464, baseType: !624, size: 32, offset: 32)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8830, file: !370, line: 465, baseType: !624, size: 32, offset: 64)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8830, file: !370, line: 466, baseType: !624, size: 32, offset: 96)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8830, file: !370, line: 467, baseType: !624, size: 32, offset: 128)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8830, file: !370, line: 468, baseType: !624, size: 32, offset: 160)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8830, file: !370, line: 469, baseType: !624, size: 32, offset: 192)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8830, file: !370, line: 470, baseType: !624, size: 32, offset: 224)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8830, file: !370, line: 471, baseType: !624, size: 32, offset: 256)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8830, file: !370, line: 472, baseType: !624, size: 32, offset: 288)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8830, file: !370, line: 473, baseType: !624, size: 32, offset: 320)
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8830, file: !370, line: 474, baseType: !624, size: 32, offset: 352)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8830, file: !370, line: 475, baseType: !624, size: 32, offset: 384)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8830, file: !370, line: 476, baseType: !624, size: 32, offset: 416)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8830, file: !370, line: 477, baseType: !624, size: 32, offset: 448)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8830, file: !370, line: 478, baseType: !624, size: 32, offset: 480)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8830, file: !370, line: 479, baseType: !624, size: 32, offset: 512)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8830, file: !370, line: 480, baseType: !624, size: 32, offset: 544)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8830, file: !370, line: 481, baseType: !624, size: 32, offset: 576)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8830, file: !370, line: 482, baseType: !624, size: 32, offset: 608)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8830, file: !370, line: 483, baseType: !624, size: 32, offset: 640)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8830, file: !370, line: 484, baseType: !624, size: 32, offset: 672)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8830, file: !370, line: 485, baseType: !624, size: 32, offset: 704)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8733, file: !412, line: 440, baseType: !8826, size: 64, offset: 960)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8733, file: !412, line: 441, baseType: !8857, size: 64, offset: 1024)
!8857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8858, size: 64)
!8858 = !DISubroutineType(types: !8859)
!8859 = !{null, !451, !8860}
!8860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8861, size: 64)
!8861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !370, line: 513, size: 288, elements: !8862)
!8862 = !{!8863, !8864, !8865, !8866, !8867, !8868, !8869, !8870, !8871}
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8861, file: !370, line: 514, baseType: !624, size: 32)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8861, file: !370, line: 515, baseType: !624, size: 32, offset: 32)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8861, file: !370, line: 516, baseType: !624, size: 32, offset: 64)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8861, file: !370, line: 517, baseType: !624, size: 32, offset: 96)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8861, file: !370, line: 518, baseType: !624, size: 32, offset: 128)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8861, file: !370, line: 519, baseType: !624, size: 32, offset: 160)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8861, file: !370, line: 520, baseType: !624, size: 32, offset: 192)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8861, file: !370, line: 521, baseType: !624, size: 32, offset: 224)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8861, file: !370, line: 522, baseType: !624, size: 32, offset: 256)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8733, file: !412, line: 443, baseType: !8873, size: 64, offset: 1088)
!8873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8874, size: 64)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{!7, !451, !8860}
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8733, file: !412, line: 445, baseType: !8877, size: 64, offset: 1152)
!8877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8878, size: 64)
!8878 = !DISubroutineType(types: !8879)
!8879 = !{null, !451, !8880}
!8880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8881, size: 64)
!8881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !412, line: 260, size: 128, elements: !8882)
!8882 = !{!8883, !8884}
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8881, file: !412, line: 261, baseType: !492, size: 64)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8881, file: !412, line: 262, baseType: !492, size: 64, offset: 64)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8733, file: !412, line: 447, baseType: !8886, size: 64, offset: 1216)
!8886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8887, size: 64)
!8887 = !DISubroutineType(types: !8888)
!8888 = !{null, !451, !8889}
!8889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8890, size: 64)
!8890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !370, line: 575, size: 128, elements: !8891)
!8891 = !{!8892, !8893, !8894, !8895}
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8890, file: !370, line: 576, baseType: !624, size: 32)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8890, file: !370, line: 577, baseType: !624, size: 32, offset: 32)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8890, file: !370, line: 578, baseType: !624, size: 32, offset: 64)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8890, file: !370, line: 579, baseType: !624, size: 32, offset: 96)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8733, file: !412, line: 449, baseType: !8897, size: 64, offset: 1280)
!8897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8898, size: 64)
!8898 = !DISubroutineType(types: !8899)
!8899 = !{!7, !451, !8889}
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8733, file: !412, line: 451, baseType: !8901, size: 64, offset: 1344)
!8901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8902, size: 64)
!8902 = !DISubroutineType(types: !8903)
!8903 = !{null, !451, !8904, !3925}
!8904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8905, size: 64)
!8905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !370, line: 770, size: 128, elements: !8906)
!8906 = !{!8907, !8908, !8909, !8910, !8911}
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8905, file: !370, line: 771, baseType: !624, size: 32)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8905, file: !370, line: 772, baseType: !624, size: 32, offset: 32)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8905, file: !370, line: 773, baseType: !624, size: 32, offset: 64)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8905, file: !370, line: 774, baseType: !624, size: 32, offset: 96)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8905, file: !370, line: 775, baseType: !8912, offset: 128)
!8912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, elements: !2075)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8733, file: !412, line: 452, baseType: !8914, size: 64, offset: 1408)
!8914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8915, size: 64)
!8915 = !DISubroutineType(types: !8916)
!8916 = !{null, !451, !862, !8081}
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8733, file: !412, line: 453, baseType: !8918, size: 64, offset: 1472)
!8918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 64)
!8919 = !DISubroutineType(types: !8920)
!8920 = !{!7, !451, !411}
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8733, file: !412, line: 454, baseType: !8922, size: 64, offset: 1536)
!8922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8923, size: 64)
!8923 = !DISubroutineType(types: !8924)
!8924 = !{null, !451, !8925, !3925}
!8925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8926, size: 64)
!8926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !370, line: 789, size: 64, elements: !8927)
!8927 = !{!8928, !8929, !8930}
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8926, file: !370, line: 790, baseType: !624, size: 32)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8926, file: !370, line: 791, baseType: !624, size: 32, offset: 32)
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8926, file: !370, line: 792, baseType: !8912, offset: 64)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8733, file: !412, line: 456, baseType: !562, size: 64, offset: 1600)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8733, file: !412, line: 457, baseType: !566, size: 64, offset: 1664)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8733, file: !412, line: 458, baseType: !8785, size: 64, offset: 1728)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8733, file: !412, line: 459, baseType: !8935, size: 64, offset: 1792)
!8935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 64)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!7, !451, !862}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8733, file: !412, line: 460, baseType: !8016, size: 64, offset: 1856)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8733, file: !412, line: 461, baseType: !8940, size: 64, offset: 1920)
!8940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8941, size: 64)
!8941 = !DISubroutineType(types: !8942)
!8942 = !{!7, !451, !8943, !1614}
!8943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8944, size: 64)
!8944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !370, line: 1088, size: 1536, elements: !8945)
!8945 = !{!8946, !8947, !8948, !8949, !9035, !9040}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8944, file: !370, line: 1089, baseType: !624, size: 32)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8944, file: !370, line: 1090, baseType: !624, size: 32, offset: 32)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8944, file: !370, line: 1091, baseType: !494, size: 64, offset: 64)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8944, file: !370, line: 1092, baseType: !8950, size: 1344, offset: 128)
!8950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !370, line: 992, size: 1344, elements: !8951)
!8951 = !{!8952, !8953, !9021, !9031, !9032, !9033, !9034}
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8950, file: !370, line: 993, baseType: !624, size: 32)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8950, file: !370, line: 994, baseType: !8954, size: 416, offset: 32)
!8954 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !370, line: 939, size: 416, elements: !8955)
!8955 = !{!8956, !8964, !8965, !8966, !8973, !8974, !8983, !8991, !8992, !8993, !9000, !9001, !9009, !9017}
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8954, file: !370, line: 940, baseType: !8957, size: 128)
!8957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !370, line: 845, size: 128, elements: !8958)
!8958 = !{!8959, !8960, !8961, !8962, !8963}
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8957, file: !370, line: 846, baseType: !622, size: 32)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8957, file: !370, line: 847, baseType: !622, size: 32, offset: 32)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8957, file: !370, line: 848, baseType: !645, size: 16, offset: 64)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8957, file: !370, line: 849, baseType: !645, size: 16, offset: 80)
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8957, file: !370, line: 850, baseType: !1552, size: 8, offset: 96)
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8954, file: !370, line: 941, baseType: !8957, size: 128)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8954, file: !370, line: 942, baseType: !8957, size: 128)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8954, file: !370, line: 943, baseType: !8967, size: 128)
!8967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !370, line: 862, size: 128, elements: !8968)
!8968 = !{!8969, !8970, !8971, !8972}
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8967, file: !370, line: 863, baseType: !622, size: 32)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8967, file: !370, line: 864, baseType: !622, size: 32, offset: 32)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8967, file: !370, line: 865, baseType: !622, size: 32, offset: 64)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8967, file: !370, line: 866, baseType: !1552, size: 8, offset: 96)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8954, file: !370, line: 944, baseType: !8967, size: 128)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8954, file: !370, line: 945, baseType: !8975, size: 128)
!8975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !370, line: 880, size: 128, elements: !8976)
!8976 = !{!8977, !8978, !8979, !8980, !8981, !8982}
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8975, file: !370, line: 881, baseType: !622, size: 32)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8975, file: !370, line: 882, baseType: !622, size: 32, offset: 32)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8975, file: !370, line: 883, baseType: !622, size: 32, offset: 64)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8975, file: !370, line: 884, baseType: !1552, size: 8, offset: 96)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8975, file: !370, line: 885, baseType: !1552, size: 8, offset: 104)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8975, file: !370, line: 886, baseType: !1552, size: 8, offset: 112)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8954, file: !370, line: 946, baseType: !8984, size: 320)
!8984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !370, line: 899, size: 320, elements: !8985)
!8985 = !{!8986, !8987, !8988, !8989, !8990}
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8984, file: !370, line: 900, baseType: !2387, size: 128)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8984, file: !370, line: 901, baseType: !2387, size: 128, offset: 128)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8984, file: !370, line: 902, baseType: !645, size: 16, offset: 256)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8984, file: !370, line: 903, baseType: !645, size: 16, offset: 272)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8984, file: !370, line: 904, baseType: !1552, size: 8, offset: 288)
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8954, file: !370, line: 947, baseType: !8984, size: 320)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8954, file: !370, line: 948, baseType: !8984, size: 320)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8954, file: !370, line: 949, baseType: !8994, size: 320)
!8994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !370, line: 916, size: 320, elements: !8995)
!8995 = !{!8996, !8997, !8998, !8999}
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8994, file: !370, line: 917, baseType: !2387, size: 128)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8994, file: !370, line: 918, baseType: !2387, size: 128, offset: 128)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8994, file: !370, line: 919, baseType: !622, size: 32, offset: 256)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8994, file: !370, line: 920, baseType: !1552, size: 8, offset: 288)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8954, file: !370, line: 950, baseType: !8994, size: 320)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8954, file: !370, line: 951, baseType: !9002, size: 320)
!9002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !370, line: 931, size: 320, elements: !9003)
!9003 = !{!9004, !9005, !9006, !9007, !9008}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !9002, file: !370, line: 932, baseType: !2387, size: 128)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !9002, file: !370, line: 933, baseType: !2387, size: 128, offset: 128)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !9002, file: !370, line: 934, baseType: !622, size: 32, offset: 256)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !9002, file: !370, line: 935, baseType: !1552, size: 8, offset: 288)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !9002, file: !370, line: 936, baseType: !1552, size: 8, offset: 296)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8954, file: !370, line: 952, baseType: !9010, size: 112)
!9010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !9011, line: 164, size: 112, elements: !9012)
!9011 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!9012 = !{!9013, !9015, !9016}
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !9010, file: !9011, line: 165, baseType: !9014, size: 48)
!9014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 48, elements: !1824)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !9010, file: !9011, line: 166, baseType: !9014, size: 48, offset: 48)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !9010, file: !9011, line: 167, baseType: !645, size: 16, offset: 96)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8954, file: !370, line: 953, baseType: !9018, size: 416)
!9018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 416, elements: !9019)
!9019 = !{!9020}
!9020 = !DISubrange(count: 52)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8950, file: !370, line: 995, baseType: !9022, size: 160, offset: 448)
!9022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !370, line: 967, size: 160, elements: !9023)
!9023 = !{!9024, !9026, !9027, !9028, !9029}
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !9022, file: !370, line: 968, baseType: !9025, size: 16)
!9025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 16, elements: !634)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !9022, file: !370, line: 969, baseType: !9014, size: 48, offset: 16)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !9022, file: !370, line: 970, baseType: !645, size: 16, offset: 64)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !9022, file: !370, line: 971, baseType: !645, size: 16, offset: 80)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9022, file: !370, line: 972, baseType: !9030, size: 64, offset: 96)
!9030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 64, elements: !634)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8950, file: !370, line: 996, baseType: !8954, size: 416, offset: 608)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8950, file: !370, line: 997, baseType: !9022, size: 160, offset: 1024)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8950, file: !370, line: 998, baseType: !494, size: 64, offset: 1216)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8950, file: !370, line: 999, baseType: !624, size: 32, offset: 1280)
!9035 = !DIDerivedType(tag: DW_TAG_member, scope: !8944, file: !370, line: 1093, baseType: !9036, size: 32, offset: 1472)
!9036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8944, file: !370, line: 1093, size: 32, elements: !9037)
!9037 = !{!9038, !9039}
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !9036, file: !370, line: 1094, baseType: !624, size: 32)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !9036, file: !370, line: 1095, baseType: !624, size: 32)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8944, file: !370, line: 1097, baseType: !7808, offset: 1504)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8733, file: !412, line: 463, baseType: !9042, size: 64, offset: 1984)
!9042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9043, size: 64)
!9043 = !DISubroutineType(types: !9044)
!9044 = !{!7, !451, !8943}
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8733, file: !412, line: 464, baseType: !9046, size: 64, offset: 2048)
!9046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9047, size: 64)
!9047 = !DISubroutineType(types: !9048)
!9048 = !{!7, !451, !9049}
!9049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9050, size: 64)
!9050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !370, line: 1217, size: 1088, elements: !9051)
!9051 = !{!9052, !9053, !9054}
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9050, file: !370, line: 1218, baseType: !624, size: 32)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !9050, file: !370, line: 1219, baseType: !624, size: 32, offset: 32)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9050, file: !370, line: 1220, baseType: !3577, size: 1024, offset: 64)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8733, file: !412, line: 465, baseType: !9056, size: 64, offset: 2112)
!9056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 64)
!9057 = !DISubroutineType(types: !9058)
!9058 = !{!7, !451, !1614}
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8733, file: !412, line: 466, baseType: !8785, size: 64, offset: 2176)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8733, file: !412, line: 467, baseType: !8785, size: 64, offset: 2240)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8733, file: !412, line: 468, baseType: !9062, size: 64, offset: 2304)
!9062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9063, size: 64)
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!7, !451, !1614, !8081, !8081}
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8733, file: !412, line: 470, baseType: !9066, size: 64, offset: 2368)
!9066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9067, size: 64)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!7, !451, !9069, !8639, !8640}
!9069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8733, file: !412, line: 472, baseType: !9071, size: 64, offset: 2432)
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9072, size: 64)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{!7, !451, !1614, !8081, !8081, !862}
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8733, file: !412, line: 474, baseType: !9075, size: 64, offset: 2496)
!9075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9076, size: 64)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!7, !451, !9069, !8639, !8640, !1614, !696}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8733, file: !412, line: 477, baseType: !9079, size: 64, offset: 2560)
!9079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9080, size: 64)
!9080 = !DISubroutineType(types: !9081)
!9081 = !{null, !451, !9082}
!9082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9083, size: 64)
!9083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !370, line: 541, size: 288, elements: !9084)
!9084 = !{!9085, !9086, !9087, !9088, !9089, !9090, !9091, !9092, !9093}
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9083, file: !370, line: 542, baseType: !624, size: 32)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !9083, file: !370, line: 543, baseType: !624, size: 32, offset: 32)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !9083, file: !370, line: 544, baseType: !624, size: 32, offset: 64)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !9083, file: !370, line: 545, baseType: !624, size: 32, offset: 96)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !9083, file: !370, line: 546, baseType: !624, size: 32, offset: 128)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !9083, file: !370, line: 547, baseType: !624, size: 32, offset: 160)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !9083, file: !370, line: 548, baseType: !624, size: 32, offset: 192)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !9083, file: !370, line: 549, baseType: !624, size: 32, offset: 224)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !9083, file: !370, line: 550, baseType: !624, size: 32, offset: 256)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8733, file: !412, line: 478, baseType: !9095, size: 64, offset: 2624)
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9096, size: 64)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!7, !451, !9082}
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8733, file: !412, line: 479, baseType: !9099, size: 64, offset: 2688)
!9099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9100, size: 64)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!7, !451, !9102}
!9102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9103, size: 64)
!9103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !370, line: 1237, size: 128, elements: !9104)
!9104 = !{!9105, !9106, !9107, !9108, !9109}
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9103, file: !370, line: 1238, baseType: !624, size: 32)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9103, file: !370, line: 1239, baseType: !624, size: 32, offset: 32)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9103, file: !370, line: 1240, baseType: !624, size: 32, offset: 64)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9103, file: !370, line: 1241, baseType: !624, size: 32, offset: 96)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9103, file: !370, line: 1242, baseType: !7800, offset: 128)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8733, file: !412, line: 480, baseType: !9111, size: 64, offset: 2752)
!9111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9112, size: 64)
!9112 = !DISubroutineType(types: !9113)
!9113 = !{!7, !451, !9102, !726}
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8733, file: !412, line: 482, baseType: !9099, size: 64, offset: 2816)
!9115 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8733, file: !412, line: 483, baseType: !9116, size: 64, offset: 2880)
!9116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9117, size: 64)
!9117 = !DISubroutineType(types: !9118)
!9118 = !{!7, !451, !9119}
!9119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9120, size: 64)
!9120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !370, line: 1317, size: 352, elements: !9121)
!9121 = !{!9122, !9123, !9124, !9125, !9126, !9128, !9129}
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9120, file: !370, line: 1318, baseType: !624, size: 32)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !9120, file: !370, line: 1319, baseType: !624, size: 32, offset: 32)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !9120, file: !370, line: 1320, baseType: !1644, size: 32, offset: 64)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !9120, file: !370, line: 1321, baseType: !624, size: 32, offset: 96)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !9120, file: !370, line: 1322, baseType: !9127, size: 96, offset: 128)
!9127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 96, elements: !1021)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !9120, file: !370, line: 1323, baseType: !624, size: 32, offset: 224)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !9120, file: !370, line: 1324, baseType: !9127, size: 96, offset: 256)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8733, file: !412, line: 484, baseType: !9131, size: 64, offset: 2944)
!9131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9132, size: 64)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!7, !451, !9134}
!9134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9135, size: 64)
!9135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !370, line: 382, size: 352, elements: !9136)
!9136 = !{!9137, !9138, !9139, !9140}
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9135, file: !370, line: 383, baseType: !624, size: 32)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9135, file: !370, line: 384, baseType: !624, size: 32, offset: 32)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !9135, file: !370, line: 385, baseType: !624, size: 32, offset: 64)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9135, file: !370, line: 386, baseType: !9141, size: 256, offset: 96)
!9141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 256, elements: !1525)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8733, file: !412, line: 486, baseType: !8813, size: 64, offset: 3008)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8733, file: !412, line: 488, baseType: !9144, size: 64, offset: 3072)
!9144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9145, size: 64)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!7, !451, !9147}
!9147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9148, size: 64)
!9148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !370, line: 360, size: 320, elements: !9149)
!9149 = !{!9150, !9151, !9152, !9153, !9154, !9155, !9156, !9157, !9158}
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9148, file: !370, line: 361, baseType: !624, size: 32)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !9148, file: !370, line: 362, baseType: !624, size: 32, offset: 32)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !9148, file: !370, line: 363, baseType: !624, size: 32, offset: 64)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !9148, file: !370, line: 364, baseType: !624, size: 32, offset: 96)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !9148, file: !370, line: 365, baseType: !624, size: 32, offset: 128)
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !9148, file: !370, line: 366, baseType: !624, size: 32, offset: 160)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !9148, file: !370, line: 367, baseType: !624, size: 32, offset: 192)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !9148, file: !370, line: 368, baseType: !624, size: 32, offset: 224)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9148, file: !370, line: 369, baseType: !1766, size: 64, offset: 256)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8733, file: !412, line: 489, baseType: !9144, size: 64, offset: 3136)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8733, file: !412, line: 490, baseType: !9161, size: 64, offset: 3200)
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9162, size: 64)
!9162 = !DISubroutineType(types: !9163)
!9163 = !{!7, !451, !9164, !726}
!9164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9165, size: 64)
!9165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9166)
!9166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !370, line: 244, size: 128, elements: !9167)
!9167 = !{!9168, !9169, !9170, !9171, !9172}
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9166, file: !370, line: 245, baseType: !624, size: 32)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9166, file: !370, line: 246, baseType: !624, size: 32, offset: 32)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !9166, file: !370, line: 247, baseType: !624, size: 32, offset: 64)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9166, file: !370, line: 248, baseType: !624, size: 32, offset: 96)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9166, file: !370, line: 249, baseType: !3480, offset: 128)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8733, file: !412, line: 492, baseType: !9174, size: 64, offset: 3264)
!9174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9175, size: 64)
!9175 = !DISubroutineType(types: !9176)
!9176 = !{!7, !451, !9164, !2416}
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8733, file: !412, line: 494, baseType: !9178, size: 64, offset: 3328)
!9178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9179, size: 64)
!9179 = !DISubroutineType(types: !9180)
!9180 = !{!7, !451, !862, !8829}
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8733, file: !412, line: 496, baseType: !9178, size: 64, offset: 3392)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8733, file: !412, line: 498, baseType: !9183, size: 64, offset: 3456)
!9183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9184, size: 64)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{!7, !451, !9186}
!9186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9187, size: 64)
!9187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !412, line: 124, size: 768, elements: !9188)
!9188 = !{!9189, !9214}
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9187, file: !412, line: 125, baseType: !9190, size: 384)
!9190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !370, line: 1996, size: 384, elements: !9191)
!9191 = !{!9192, !9193, !9194, !9195, !9196, !9197, !9198, !9199, !9200, !9201, !9204, !9205, !9206, !9207, !9209, !9213}
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9190, file: !370, line: 1997, baseType: !624, size: 32)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !9190, file: !370, line: 1998, baseType: !624, size: 32, offset: 32)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !9190, file: !370, line: 1999, baseType: !1552, size: 8, offset: 64)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9190, file: !370, line: 2000, baseType: !1552, size: 8, offset: 72)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !9190, file: !370, line: 2001, baseType: !1552, size: 8, offset: 80)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !9190, file: !370, line: 2002, baseType: !1552, size: 8, offset: 88)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !9190, file: !370, line: 2003, baseType: !1552, size: 8, offset: 96)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !9190, file: !370, line: 2004, baseType: !1552, size: 8, offset: 104)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !9190, file: !370, line: 2005, baseType: !1552, size: 8, offset: 112)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !9190, file: !370, line: 2006, baseType: !9202, size: 8, offset: 120)
!9202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !495, line: 20, baseType: !9203)
!9203 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !9190, file: !370, line: 2007, baseType: !1552, size: 8, offset: 128)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !9190, file: !370, line: 2008, baseType: !1552, size: 8, offset: 136)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !9190, file: !370, line: 2009, baseType: !1552, size: 8, offset: 144)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !9190, file: !370, line: 2010, baseType: !9208, size: 8, offset: 152)
!9208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 8, elements: !1570)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9190, file: !370, line: 2011, baseType: !9210, size: 224, offset: 160)
!9210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 224, elements: !9211)
!9211 = !{!9212}
!9212 = !DISubrange(count: 7)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !9190, file: !370, line: 2012, baseType: !7808, offset: 384)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !9187, file: !412, line: 130, baseType: !9215, size: 384, offset: 384)
!9215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9187, file: !412, line: 126, size: 384, elements: !9216)
!9216 = !{!9217, !9218, !9219}
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !9215, file: !412, line: 127, baseType: !3324, size: 128)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !9215, file: !412, line: 128, baseType: !3324, size: 128, offset: 128)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !9215, file: !412, line: 129, baseType: !3324, size: 128, offset: 256)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8733, file: !412, line: 500, baseType: !9221, size: 64, offset: 3520)
!9221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9222, size: 64)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!7, !451, !9224}
!9224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9225, size: 64)
!9225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9187)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8733, file: !412, line: 502, baseType: !9227, size: 64, offset: 3584)
!9227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9228, size: 64)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{!7, !451, !9230}
!9230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9231, size: 64)
!9231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !370, line: 1389, size: 128, elements: !9232)
!9232 = !{!9233, !9234, !9235, !9236}
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9231, file: !370, line: 1390, baseType: !624, size: 32)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !9231, file: !370, line: 1392, baseType: !624, size: 32, offset: 32)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !9231, file: !370, line: 1393, baseType: !624, size: 32, offset: 64)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9231, file: !370, line: 1394, baseType: !624, size: 32, offset: 96)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8733, file: !412, line: 504, baseType: !9227, size: 64, offset: 3648)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8733, file: !412, line: 506, baseType: !8922, size: 64, offset: 3712)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8733, file: !412, line: 508, baseType: !9161, size: 64, offset: 3776)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8733, file: !412, line: 510, baseType: !9174, size: 64, offset: 3840)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !425, file: !6, line: 1922, baseType: !9242, size: 64, offset: 4096)
!9242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9243, size: 64)
!9243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9244)
!9244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !9245, line: 202, size: 384, elements: !9246)
!9245 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!9246 = !{!9247, !9251, !9269, !9275, !9280, !9284}
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !9244, file: !9245, line: 203, baseType: !9248, size: 64)
!9248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9249, size: 64)
!9249 = !DISubroutineType(types: !9250)
!9250 = !{!7, !1551}
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !9244, file: !9245, line: 204, baseType: !9252, size: 64, offset: 64)
!9252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9253, size: 64)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{!7, !3015, !9255, !9260}
!9255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9256, size: 64)
!9256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !9245, line: 105, size: 16, elements: !9257)
!9257 = !{!9258, !9259}
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !9256, file: !9245, line: 106, baseType: !1552, size: 8)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !9256, file: !9245, line: 107, baseType: !1552, size: 8, offset: 8)
!9260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9261, size: 64)
!9261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !9245, line: 111, size: 1088, elements: !9262)
!9262 = !{!9263, !9267, !9268}
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !9261, file: !9245, line: 112, baseType: !9264, size: 960)
!9264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9255, size: 960, elements: !9265)
!9265 = !{!9266}
!9266 = !DISubrange(count: 15)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !9261, file: !9245, line: 117, baseType: !9255, size: 64, offset: 960)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !9261, file: !9245, line: 118, baseType: !9255, size: 64, offset: 1024)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !9244, file: !9245, line: 207, baseType: !9270, size: 64, offset: 128)
!9270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9271, size: 64)
!9271 = !DISubroutineType(types: !9272)
!9272 = !{null, !3015, !2998, !862, !1551, !9273}
!9273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9274, size: 64)
!9274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9261)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !9244, file: !9245, line: 210, baseType: !9276, size: 64, offset: 192)
!9276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9277, size: 64)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!7, !3015, !1551, !2998, !8081, !9279}
!9279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8081, size: 64)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !9244, file: !9245, line: 213, baseType: !9281, size: 64, offset: 256)
!9281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9282, size: 64)
!9282 = !DISubroutineType(types: !9283)
!9283 = !{null, !3015, !576, !1551, !8639}
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !9244, file: !9245, line: 216, baseType: !9285, size: 64, offset: 320)
!9285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9286, size: 64)
!9286 = !DISubroutineType(types: !9287)
!9287 = !{null, !2115, !451, !9288, !3304, !9303, !7, !862, !696, !696, !624, !862, !696}
!9288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9289, size: 64)
!9289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9290)
!9290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !9291, line: 27, size: 256, elements: !9292)
!9291 = !DIFile(filename: "./include/net/addrconf.h", directory: "/home/lizy2001/genbc/linux")
!9292 = !{!9293, !9294, !9295, !9296, !9297, !9298, !9299, !9300, !9301, !9302}
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9290, file: !9291, line: 28, baseType: !1552, size: 8)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9290, file: !9291, line: 29, baseType: !1552, size: 8, offset: 8)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !9290, file: !9291, line: 30, baseType: !1552, size: 8, offset: 16)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9290, file: !9291, line: 37, baseType: !1552, size: 6, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !9290, file: !9291, line: 38, baseType: !1552, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 24)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "onlink", scope: !9290, file: !9291, line: 39, baseType: !1552, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 24)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !9290, file: !9291, line: 43, baseType: !622, size: 32, offset: 32)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "prefered", scope: !9290, file: !9291, line: 44, baseType: !622, size: 32, offset: 64)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !9290, file: !9291, line: 45, baseType: !622, size: 32, offset: 96)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !9290, file: !9291, line: 47, baseType: !2376, size: 128, offset: 128)
!9303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !425, file: !6, line: 1933, baseType: !9305, size: 64, offset: 4160)
!9305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9306, size: 64)
!9306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9307)
!9307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !6, line: 270, size: 384, elements: !9308)
!9308 = !{!9309, !9313, !9319, !9324, !9328, !9332}
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !9307, file: !6, line: 271, baseType: !9310, size: 64)
!9310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9311, size: 64)
!9311 = !DISubroutineType(types: !9312)
!9312 = !{!7, !576, !451, !633, !2416, !2416, !14}
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !9307, file: !6, line: 274, baseType: !9314, size: 64, offset: 64)
!9314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9315, size: 64)
!9315 = !DISubroutineType(types: !9316)
!9316 = !{!7, !9317, !7877}
!9317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9318, size: 64)
!9318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !577)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !9307, file: !6, line: 275, baseType: !9320, size: 64, offset: 128)
!9320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9321, size: 64)
!9321 = !DISubroutineType(types: !9322)
!9322 = !{!7, !3022, !9323, !645}
!9323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !9307, file: !6, line: 276, baseType: !9325, size: 64, offset: 192)
!9325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9326, size: 64)
!9326 = !DISubroutineType(types: !9327)
!9327 = !{null, !9323, !3015, !866}
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9307, file: !6, line: 279, baseType: !9329, size: 64, offset: 256)
!9329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9330, size: 64)
!9330 = !DISubroutineType(types: !9331)
!9331 = !{!696, !453, !14}
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !9307, file: !6, line: 280, baseType: !9333, size: 64, offset: 320)
!9333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9334, size: 64)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!645, !9317}
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !425, file: !6, line: 1935, baseType: !14, size: 32, offset: 4224)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !425, file: !6, line: 1936, baseType: !14, size: 32, offset: 4256)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !425, file: !6, line: 1938, baseType: !633, size: 16, offset: 4288)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !425, file: !6, line: 1939, baseType: !633, size: 16, offset: 4304)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !425, file: !6, line: 1941, baseType: !650, size: 8, offset: 4320)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !425, file: !6, line: 1942, baseType: !650, size: 8, offset: 4328)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !425, file: !6, line: 1944, baseType: !650, size: 8, offset: 4336)
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !425, file: !6, line: 1945, baseType: !650, size: 8, offset: 4344)
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !425, file: !6, line: 1952, baseType: !14, size: 32, offset: 4352)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !425, file: !6, line: 1953, baseType: !14, size: 32, offset: 4384)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !425, file: !6, line: 1954, baseType: !14, size: 32, offset: 4416)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !425, file: !6, line: 1955, baseType: !633, size: 16, offset: 4448)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !425, file: !6, line: 1956, baseType: !633, size: 16, offset: 4464)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !425, file: !6, line: 1957, baseType: !650, size: 8, offset: 4480)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !425, file: !6, line: 1958, baseType: !650, size: 8, offset: 4488)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !425, file: !6, line: 1960, baseType: !633, size: 16, offset: 4496)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !425, file: !6, line: 1961, baseType: !633, size: 16, offset: 4512)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !425, file: !6, line: 1964, baseType: !870, size: 256, offset: 4528)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !425, file: !6, line: 1965, baseType: !650, size: 8, offset: 4784)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !425, file: !6, line: 1966, baseType: !650, size: 8, offset: 4792)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !425, file: !6, line: 1967, baseType: !650, size: 8, offset: 4800)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !425, file: !6, line: 1968, baseType: !650, size: 8, offset: 4808)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !425, file: !6, line: 1970, baseType: !633, size: 16, offset: 4816)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !425, file: !6, line: 1971, baseType: !633, size: 16, offset: 4832)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !425, file: !6, line: 1972, baseType: !633, size: 16, offset: 4848)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !425, file: !6, line: 1973, baseType: !884, offset: 4864)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !425, file: !6, line: 1975, baseType: !9363, size: 192, offset: 4864)
!9363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !6, line: 224, size: 192, elements: !9364)
!9364 = !{!9365, !9366}
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9363, file: !6, line: 225, baseType: !445, size: 128)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9363, file: !6, line: 226, baseType: !7, size: 32, offset: 128)
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !425, file: !6, line: 1976, baseType: !9363, size: 192, offset: 5056)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !425, file: !6, line: 1977, baseType: !9363, size: 192, offset: 5248)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !425, file: !6, line: 1980, baseType: !4401, size: 64, offset: 5440)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !425, file: !6, line: 1985, baseType: !14, size: 32, offset: 5504)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !425, file: !6, line: 1986, baseType: !14, size: 32, offset: 5536)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !425, file: !6, line: 1987, baseType: !696, size: 8, offset: 5568)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !425, file: !6, line: 1996, baseType: !9374, size: 64, offset: 5632)
!9374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9375, size: 64)
!9375 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !6, line: 1996, flags: DIFlagFwdDecl)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !425, file: !6, line: 2007, baseType: !9377, size: 64, offset: 5696)
!9377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9378, size: 64)
!9378 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !6, line: 2007, flags: DIFlagFwdDecl)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !425, file: !6, line: 2011, baseType: !3304, size: 64, offset: 5760)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !425, file: !6, line: 2015, baseType: !9381, size: 64, offset: 5824)
!9381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9382, size: 64)
!9382 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !6, line: 62, flags: DIFlagFwdDecl)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !425, file: !6, line: 2016, baseType: !9384, size: 64, offset: 5888)
!9384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9385, size: 64)
!9385 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !6, line: 64, flags: DIFlagFwdDecl)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !425, file: !6, line: 2025, baseType: !7877, size: 64, offset: 5952)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !425, file: !6, line: 2027, baseType: !9388, size: 64, offset: 6016)
!9388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9389, size: 64)
!9389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !6, line: 736, size: 1536, elements: !9390)
!9390 = !{!9391, !9392, !9393}
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9389, file: !6, line: 741, baseType: !4393, size: 512)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9389, file: !6, line: 742, baseType: !451, size: 64, offset: 512)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !9389, file: !6, line: 743, baseType: !9394, size: 512, align: 512, offset: 1024)
!9394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8381, line: 57, size: 512, align: 512, elements: !9395)
!9395 = !{!9396, !9397, !9398, !9399}
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9394, file: !8381, line: 58, baseType: !451, size: 64)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !9394, file: !8381, line: 59, baseType: !862, size: 32, offset: 64)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !9394, file: !8381, line: 60, baseType: !862, size: 32, offset: 96)
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !9394, file: !8381, line: 61, baseType: !8389, size: 64, offset: 128)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !425, file: !6, line: 2028, baseType: !14, size: 32, offset: 6080)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !425, file: !6, line: 2029, baseType: !14, size: 32, offset: 6112)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !425, file: !6, line: 2031, baseType: !3496, size: 64, offset: 6144)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !425, file: !6, line: 2032, baseType: !473, size: 64, offset: 6208)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !425, file: !6, line: 2033, baseType: !7, size: 32, offset: 6272)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !425, file: !6, line: 2034, baseType: !9406, size: 64, offset: 6336)
!9406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9407, size: 64)
!9407 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !6, line: 430, baseType: !9408)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{!9410, !9411}
!9410 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !6, line: 429, baseType: !418)
!9411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !425, file: !6, line: 2035, baseType: !726, size: 64, offset: 6400)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !425, file: !6, line: 2040, baseType: !9414, size: 64, offset: 6464)
!9414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9415, size: 64)
!9415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !6, line: 584, size: 1600, elements: !9416)
!9416 = !{!9417, !9418, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825}
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9415, file: !6, line: 588, baseType: !451, size: 64)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !9415, file: !6, line: 589, baseType: !9419, size: 64, offset: 64)
!9419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9420, size: 64)
!9420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !9421, line: 57, size: 2048, elements: !9422)
!9421 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!9422 = !{!9423, !9427, !9431, !9432, !9433, !9756, !9776, !9777, !9778, !9779, !9780, !9783, !9793, !9794, !9795, !9796, !9797, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812, !9813, !9814}
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9420, file: !9421, line: 58, baseType: !9424, size: 64)
!9424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9425, size: 64)
!9425 = !DISubroutineType(types: !9426)
!9426 = !{!7, !576, !9419, !9411}
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9420, file: !9421, line: 61, baseType: !9428, size: 64, offset: 64)
!9428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9429, size: 64)
!9429 = !DISubroutineType(types: !9430)
!9430 = !{!576, !9419}
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9420, file: !9421, line: 62, baseType: !14, size: 32, offset: 128)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9420, file: !9421, line: 82, baseType: !862, size: 32, offset: 160)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9420, file: !9421, line: 83, baseType: !9434, size: 64, offset: 192)
!9434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9435, size: 64)
!9435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9436)
!9436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !9421, line: 238, size: 1344, elements: !9437)
!9437 = !{!9438, !9440, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9726, !9730, !9731, !9732, !9733, !9737, !9741, !9745, !9749, !9750, !9754, !9755}
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9436, file: !9421, line: 239, baseType: !9439, size: 64)
!9439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9436, size: 64)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !9436, file: !9421, line: 240, baseType: !9441, size: 64, offset: 64)
!9441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9442, size: 64)
!9442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9443)
!9443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !9421, line: 198, size: 896, elements: !9444)
!9444 = !{!9445, !9446, !9461, !9466, !9470, !9474, !9478, !9482, !9486, !9501, !9679, !9683, !9684, !9688}
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9443, file: !9421, line: 199, baseType: !14, size: 32)
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !9443, file: !9421, line: 201, baseType: !9447, size: 64, offset: 64)
!9447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9448, size: 64)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!9414, !9419, !9450}
!9450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9451, size: 64)
!9451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !9452, line: 577, size: 160, elements: !9453)
!9452 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9453 = !{!9454, !9455, !9456, !9457, !9458, !9459, !9460}
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !9451, file: !9452, line: 578, baseType: !650, size: 8)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !9451, file: !9452, line: 579, baseType: !650, size: 8, offset: 8)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !9451, file: !9452, line: 580, baseType: !633, size: 16, offset: 16)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !9451, file: !9452, line: 581, baseType: !7, size: 32, offset: 32)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !9451, file: !9452, line: 582, baseType: !624, size: 32, offset: 64)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !9451, file: !9452, line: 583, baseType: !624, size: 32, offset: 96)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !9451, file: !9452, line: 588, baseType: !624, size: 32, offset: 128)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !9443, file: !9421, line: 202, baseType: !9462, size: 64, offset: 128)
!9462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9463, size: 64)
!9463 = !DISubroutineType(types: !9464)
!9464 = !{!7, !9419, !473, !9419, !9465, !2625}
!9465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9419, size: 64)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !9443, file: !9421, line: 205, baseType: !9467, size: 64, offset: 192)
!9467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9468, size: 64)
!9468 = !DISubroutineType(types: !9469)
!9469 = !{!9419, !9419, !473}
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !9443, file: !9421, line: 206, baseType: !9471, size: 64, offset: 256)
!9471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9472, size: 64)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{null, !9419, !473}
!9474 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !9443, file: !9421, line: 209, baseType: !9475, size: 64, offset: 320)
!9475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9476, size: 64)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!473, !9419, !862}
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9443, file: !9421, line: 210, baseType: !9479, size: 64, offset: 384)
!9479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9480, size: 64)
!9480 = !DISubroutineType(types: !9481)
!9481 = !{!7, !9419, !862, !862, !8138, !2608, !2625}
!9482 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9443, file: !9421, line: 213, baseType: !9483, size: 64, offset: 448)
!9483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9484, size: 64)
!9484 = !DISubroutineType(types: !9485)
!9485 = !{!7, !9419, !473}
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9443, file: !9421, line: 214, baseType: !9487, size: 64, offset: 512)
!9487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9488, size: 64)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{null, !9419, !9490}
!9490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9491, size: 64)
!9491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !9492, line: 15, size: 192, elements: !9493)
!9492 = !DIFile(filename: "./include/net/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9493 = !{!9494, !9495, !9496, !9497}
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !9491, file: !9492, line: 16, baseType: !7, size: 32)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !9491, file: !9492, line: 17, baseType: !7, size: 32, offset: 32)
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9491, file: !9492, line: 18, baseType: !7, size: 32, offset: 64)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9491, file: !9492, line: 19, baseType: !9498, size: 64, offset: 128)
!9498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9499, size: 64)
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!7, !9419, !473, !9490}
!9501 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !9443, file: !9421, line: 217, baseType: !9502, size: 64, offset: 576)
!9502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9503, size: 64)
!9503 = !DISubroutineType(types: !9504)
!9504 = !{!9505, !9419, !473, !2625}
!9505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9506, size: 64)
!9506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !9421, line: 411, size: 9920, elements: !9507)
!9507 = !{!9508, !9509, !9510, !9511, !9512, !9513, !9514, !9515, !9516, !9521, !9522, !9523, !9524, !9525, !9526, !9675, !9676, !9678}
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9506, file: !9421, line: 415, baseType: !1108, size: 192)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !9506, file: !9421, line: 416, baseType: !445, size: 128, offset: 192)
!9510 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9506, file: !9421, line: 417, baseType: !862, size: 32, offset: 320)
!9511 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9506, file: !9421, line: 418, baseType: !862, size: 32, offset: 352)
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9506, file: !9421, line: 419, baseType: !1425, size: 32, offset: 384)
!9513 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !9506, file: !9421, line: 420, baseType: !2115, size: 64, offset: 448)
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9506, file: !9421, line: 421, baseType: !9419, size: 64, offset: 512)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !9506, file: !9421, line: 422, baseType: !1316, size: 256, offset: 576)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !9506, file: !9421, line: 423, baseType: !9517, size: 128, offset: 832)
!9517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !9518, line: 430, size: 128, elements: !9519)
!9518 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!9519 = !{!9520}
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !9517, file: !9518, line: 431, baseType: !445, size: 128)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !9506, file: !9421, line: 424, baseType: !445, size: 128, offset: 960)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !9506, file: !9421, line: 425, baseType: !696, size: 8, offset: 1088)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !9506, file: !9421, line: 426, baseType: !544, size: 32, offset: 1120)
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !9506, file: !9421, line: 427, baseType: !14, size: 32, offset: 1152)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !9506, file: !9421, line: 428, baseType: !14, size: 32, offset: 1184)
!9526 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !9506, file: !9421, line: 432, baseType: !9527, size: 192, offset: 1216)
!9527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9506, file: !9421, line: 429, size: 192, elements: !9528)
!9528 = !{!9529, !9674}
!9529 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9527, file: !9421, line: 430, baseType: !9530, size: 64)
!9530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9531, size: 64)
!9531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !9421, line: 395, size: 832, elements: !9532)
!9532 = !{!9533, !9534, !9664, !9665, !9666, !9667, !9668, !9669, !9670, !9671, !9672, !9673}
!9533 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !9531, file: !9421, line: 397, baseType: !1108, size: 192)
!9534 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !9531, file: !9421, line: 398, baseType: !9535, size: 64, offset: 192)
!9535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9536, size: 64)
!9536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !9421, line: 356, size: 768, elements: !9537)
!9537 = !{!9538, !9539, !9540, !9572, !9573, !9574, !9575, !9658, !9659, !9660, !9661, !9662, !9663}
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9536, file: !9421, line: 358, baseType: !9535, size: 64)
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9536, file: !9421, line: 359, baseType: !726, size: 64, offset: 64)
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9536, file: !9421, line: 362, baseType: !9541, size: 64, offset: 128)
!9541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9542, size: 64)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{!7, !576, !9544, !9546}
!9544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9545, size: 64)
!9545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9536)
!9546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9547, size: 64)
!9547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !9421, line: 275, size: 128, elements: !9548)
!9548 = !{!9549}
!9549 = !DIDerivedType(tag: DW_TAG_member, scope: !9547, file: !9421, line: 276, baseType: !9550, size: 128)
!9550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9547, file: !9421, line: 276, size: 128, elements: !9551)
!9551 = !{!9552, !9557, !9558}
!9552 = !DIDerivedType(tag: DW_TAG_member, scope: !9550, file: !9421, line: 277, baseType: !9553, size: 128)
!9553 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9550, file: !9421, line: 277, size: 128, elements: !9554)
!9554 = !{!9555, !9556}
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9553, file: !9421, line: 278, baseType: !473, size: 64)
!9556 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9553, file: !9421, line: 279, baseType: !862, size: 32, offset: 64)
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9550, file: !9421, line: 281, baseType: !9544, size: 64)
!9558 = !DIDerivedType(tag: DW_TAG_member, scope: !9550, file: !9421, line: 284, baseType: !9559, size: 128)
!9559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9550, file: !9421, line: 284, size: 128, elements: !9560)
!9560 = !{!9561, !9562}
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9559, file: !9421, line: 285, baseType: !696, size: 8)
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9559, file: !9421, line: 286, baseType: !9563, size: 64, offset: 64)
!9563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9564, size: 64)
!9564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9565, line: 59, size: 160, elements: !9566)
!9565 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9566 = !{!9567, !9568, !9569, !9570, !9571}
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9564, file: !9565, line: 60, baseType: !624, size: 32)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9564, file: !9565, line: 61, baseType: !624, size: 32, offset: 32)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9564, file: !9565, line: 62, baseType: !624, size: 32, offset: 64)
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9564, file: !9565, line: 63, baseType: !624, size: 32, offset: 96)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9564, file: !9565, line: 64, baseType: !624, size: 32, offset: 128)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9536, file: !9421, line: 365, baseType: !645, size: 16, offset: 192)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9536, file: !9421, line: 368, baseType: !862, size: 32, offset: 224)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9536, file: !9421, line: 369, baseType: !726, size: 64, offset: 256)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9536, file: !9421, line: 370, baseType: !9576, size: 64, offset: 320)
!9576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9577, size: 64)
!9577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9578)
!9578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !9421, line: 293, size: 1536, elements: !9579)
!9579 = !{!9580, !9581, !9582, !9583, !9587, !9591, !9595, !9599, !9603, !9607, !9611, !9628, !9636, !9637, !9638, !9642, !9646, !9647, !9651, !9652, !9656, !9657}
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9578, file: !9421, line: 294, baseType: !445, size: 128)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9578, file: !9421, line: 295, baseType: !428, size: 128, offset: 128)
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9578, file: !9421, line: 297, baseType: !9541, size: 64, offset: 256)
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9578, file: !9421, line: 300, baseType: !9584, size: 64, offset: 320)
!9584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9585, size: 64)
!9585 = !DISubroutineType(types: !9586)
!9586 = !{!7, !9535}
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9578, file: !9421, line: 301, baseType: !9588, size: 64, offset: 384)
!9588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9589, size: 64)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{null, !9535, !696, !2625}
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9578, file: !9421, line: 304, baseType: !9592, size: 64, offset: 448)
!9592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9593, size: 64)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{!726, !9535, !862}
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9578, file: !9421, line: 305, baseType: !9596, size: 64, offset: 512)
!9596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9597, size: 64)
!9597 = !DISubroutineType(types: !9598)
!9598 = !{null, !9535, !726}
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9578, file: !9421, line: 306, baseType: !9600, size: 64, offset: 576)
!9600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9601, size: 64)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{!7, !2115, !576, !9535, !473, !862, !8138, !4067, !696, !696, !2625}
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9578, file: !9421, line: 311, baseType: !9604, size: 64, offset: 640)
!9604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9605, size: 64)
!9605 = !DISubroutineType(types: !9606)
!9606 = !{!7, !9535, !726, !7192, !696, !2625}
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9578, file: !9421, line: 314, baseType: !9608, size: 64, offset: 704)
!9608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9609, size: 64)
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!696, !9535}
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9578, file: !9421, line: 315, baseType: !9612, size: 64, offset: 768)
!9612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9613, size: 64)
!9613 = !DISubroutineType(types: !9614)
!9614 = !{null, !9535, !9615, !696}
!9615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9616, size: 64)
!9616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !9617, line: 16, size: 256, elements: !9618)
!9617 = !DIFile(filename: "./include/net/pkt_cls.h", directory: "/home/lizy2001/genbc/linux")
!9618 = !{!9619, !9620, !9621, !9622, !9623, !9624}
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !9616, file: !9617, line: 17, baseType: !7, size: 32)
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !9616, file: !9617, line: 18, baseType: !7, size: 32, offset: 32)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9616, file: !9617, line: 19, baseType: !7, size: 32, offset: 64)
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "nonempty", scope: !9616, file: !9617, line: 20, baseType: !696, size: 8, offset: 96)
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !9616, file: !9617, line: 21, baseType: !473, size: 64, offset: 128)
!9624 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9616, file: !9617, line: 22, baseType: !9625, size: 64, offset: 192)
!9625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9626, size: 64)
!9626 = !DISubroutineType(types: !9627)
!9627 = !{!7, !9535, !726, !9615}
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9578, file: !9421, line: 317, baseType: !9629, size: 64, offset: 832)
!9629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9630, size: 64)
!9630 = !DISubroutineType(types: !9631)
!9631 = !{!7, !9535, !696, !9632, !726, !2625}
!9632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9633, size: 64)
!9633 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !9518, line: 450, baseType: !9634)
!9634 = !DISubroutineType(types: !9635)
!9635 = !{!7, !287, !726, !726}
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9578, file: !9421, line: 320, baseType: !9596, size: 64, offset: 896)
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9578, file: !9421, line: 322, baseType: !9596, size: 64, offset: 960)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9578, file: !9421, line: 324, baseType: !9639, size: 64, offset: 1024)
!9639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9640, size: 64)
!9640 = !DISubroutineType(types: !9641)
!9641 = !{null, !726, !862, !473, !726, !473}
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9578, file: !9421, line: 326, baseType: !9643, size: 64, offset: 1088)
!9643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9644, size: 64)
!9644 = !DISubroutineType(types: !9645)
!9645 = !{!726, !2115, !9530, !8138, !2625}
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9578, file: !9421, line: 330, baseType: !3877, size: 64, offset: 1152)
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9578, file: !9421, line: 333, baseType: !9648, size: 64, offset: 1216)
!9648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9649, size: 64)
!9649 = !DISubroutineType(types: !9650)
!9650 = !{!7, !2115, !9535, !726, !576, !9450, !696}
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9578, file: !9421, line: 336, baseType: !9648, size: 64, offset: 1280)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9578, file: !9421, line: 340, baseType: !9653, size: 64, offset: 1344)
!9653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9654, size: 64)
!9654 = !DISubroutineType(types: !9655)
!9655 = !{!7, !576, !2115, !726}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9578, file: !9421, line: 344, baseType: !1006, size: 64, offset: 1408)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9578, file: !9421, line: 345, baseType: !7, size: 32, offset: 1472)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9536, file: !9421, line: 371, baseType: !9530, size: 64, offset: 384)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9536, file: !9421, line: 375, baseType: !884, offset: 448)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !9536, file: !9421, line: 376, baseType: !696, size: 8, offset: 448)
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9536, file: !9421, line: 377, baseType: !1425, size: 32, offset: 480)
!9662 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9536, file: !9421, line: 378, baseType: !460, size: 128, align: 64, offset: 512)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !9536, file: !9421, line: 379, baseType: !437, size: 128, offset: 640)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9531, file: !9421, line: 399, baseType: !445, size: 128, offset: 256)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9531, file: !9421, line: 400, baseType: !9505, size: 64, offset: 384)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9531, file: !9421, line: 401, baseType: !862, size: 32, offset: 448)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9531, file: !9421, line: 402, baseType: !14, size: 32, offset: 480)
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !9531, file: !9421, line: 403, baseType: !14, size: 32, offset: 512)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !9531, file: !9421, line: 404, baseType: !696, size: 8, offset: 544)
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !9531, file: !9421, line: 405, baseType: !696, size: 8, offset: 552)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !9531, file: !9421, line: 406, baseType: !9576, size: 64, offset: 576)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !9531, file: !9421, line: 407, baseType: !726, size: 64, offset: 640)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9531, file: !9421, line: 408, baseType: !460, size: 128, align: 64, offset: 704)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !9527, file: !9421, line: 431, baseType: !445, size: 128, offset: 64)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9506, file: !9421, line: 433, baseType: !460, size: 128, align: 64, offset: 1408)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !9506, file: !9421, line: 434, baseType: !9677, size: 8192, offset: 1536)
!9677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 8192, elements: !3578)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !9506, file: !9421, line: 435, baseType: !1108, size: 192, offset: 9728)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !9443, file: !9421, line: 220, baseType: !9680, size: 64, offset: 640)
!9680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9681, size: 64)
!9681 = !DISubroutineType(types: !9682)
!9682 = !{!473, !9419, !473, !862}
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !9443, file: !9421, line: 222, baseType: !9471, size: 64, offset: 704)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9443, file: !9421, line: 225, baseType: !9685, size: 64, offset: 768)
!9685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9686, size: 64)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{!7, !9419, !473, !576, !9450}
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9443, file: !9421, line: 227, baseType: !9689, size: 64, offset: 832)
!9689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9690, size: 64)
!9690 = !DISubroutineType(types: !9691)
!9691 = !{!7, !9419, !473, !9692}
!9692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9693, size: 64)
!9693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9694, line: 23, size: 768, elements: !9695)
!9694 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9695 = !{!9696, !9697, !9698, !9699, !9700, !9701, !9702, !9703, !9704}
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9693, file: !9694, line: 24, baseType: !4678, size: 64)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9693, file: !9694, line: 25, baseType: !576, size: 64, offset: 64)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9693, file: !9694, line: 26, baseType: !8139, size: 64, offset: 128)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9693, file: !9694, line: 29, baseType: !7, size: 32, offset: 192)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9693, file: !9694, line: 30, baseType: !7, size: 32, offset: 224)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9693, file: !9694, line: 31, baseType: !7, size: 32, offset: 256)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9693, file: !9694, line: 32, baseType: !726, size: 64, offset: 320)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9693, file: !9694, line: 33, baseType: !7, size: 32, offset: 384)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9693, file: !9694, line: 34, baseType: !9705, size: 320, offset: 448)
!9705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9706, line: 34, size: 320, elements: !9707)
!9706 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9707 = !{!9708, !9709, !9710, !9711, !9712, !9713, !9714, !9715}
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9705, file: !9706, line: 35, baseType: !494, size: 64)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9705, file: !9706, line: 36, baseType: !624, size: 32, offset: 64)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9705, file: !9706, line: 37, baseType: !624, size: 32, offset: 96)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9705, file: !9706, line: 38, baseType: !624, size: 32, offset: 128)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9705, file: !9706, line: 40, baseType: !624, size: 32, offset: 160)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9705, file: !9706, line: 41, baseType: !624, size: 32, offset: 192)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9705, file: !9706, line: 42, baseType: !624, size: 32, offset: 224)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9705, file: !9706, line: 43, baseType: !624, size: 32, offset: 256)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9436, file: !9421, line: 241, baseType: !428, size: 128, offset: 128)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9436, file: !9421, line: 242, baseType: !7, size: 32, offset: 256)
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !9436, file: !9421, line: 243, baseType: !14, size: 32, offset: 288)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9436, file: !9421, line: 245, baseType: !9424, size: 64, offset: 320)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9436, file: !9421, line: 248, baseType: !9428, size: 64, offset: 384)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !9436, file: !9421, line: 249, baseType: !9428, size: 64, offset: 448)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9436, file: !9421, line: 251, baseType: !9723, size: 64, offset: 512)
!9723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9724, size: 64)
!9724 = !DISubroutineType(types: !9725)
!9725 = !{!7, !9419, !8139, !2625}
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !9436, file: !9421, line: 253, baseType: !9727, size: 64, offset: 576)
!9727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9728, size: 64)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{null, !9419}
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9436, file: !9421, line: 254, baseType: !9727, size: 64, offset: 640)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9436, file: !9421, line: 255, baseType: !9723, size: 64, offset: 704)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !9436, file: !9421, line: 258, baseType: !9727, size: 64, offset: 768)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !9436, file: !9421, line: 259, baseType: !9734, size: 64, offset: 832)
!9734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9735, size: 64)
!9735 = !DISubroutineType(types: !9736)
!9736 = !{!7, !9419, !14}
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9436, file: !9421, line: 261, baseType: !9738, size: 64, offset: 896)
!9738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9739, size: 64)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{!7, !9419, !576}
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9436, file: !9421, line: 262, baseType: !9742, size: 64, offset: 960)
!9742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9743, size: 64)
!9743 = !DISubroutineType(types: !9744)
!9744 = !{!7, !9419, !9692}
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !9436, file: !9421, line: 264, baseType: !9746, size: 64, offset: 1024)
!9746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9747, size: 64)
!9747 = !DISubroutineType(types: !9748)
!9748 = !{null, !9419, !862}
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !9436, file: !9421, line: 266, baseType: !9746, size: 64, offset: 1088)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !9436, file: !9421, line: 268, baseType: !9751, size: 64, offset: 1152)
!9751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9752, size: 64)
!9752 = !DISubroutineType(types: !9753)
!9753 = !{!862, !9419}
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !9436, file: !9421, line: 269, baseType: !9751, size: 64, offset: 1216)
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9436, file: !9421, line: 271, baseType: !1006, size: 64, offset: 1280)
!9756 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !9420, file: !9421, line: 84, baseType: !9757, size: 64, offset: 256)
!9757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9758, size: 64)
!9758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !9421, line: 41, size: 512, elements: !9759)
!9759 = !{!9760, !9761, !9762, !9773, !9774}
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9758, file: !9421, line: 42, baseType: !460, size: 128, align: 64)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9758, file: !9421, line: 43, baseType: !445, size: 128, offset: 128)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9758, file: !9421, line: 44, baseType: !9763, size: 192, offset: 256)
!9763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9706, line: 102, size: 192, elements: !9764)
!9764 = !{!9765, !9766, !9767, !9768, !9769, !9770, !9771, !9772}
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9763, file: !9706, line: 103, baseType: !650, size: 8)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9763, file: !9706, line: 104, baseType: !650, size: 8, offset: 8)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9763, file: !9706, line: 105, baseType: !1400, size: 16, offset: 16)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9763, file: !9706, line: 106, baseType: !7, size: 32, offset: 32)
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9763, file: !9706, line: 107, baseType: !14, size: 32, offset: 64)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9763, file: !9706, line: 108, baseType: !14, size: 32, offset: 96)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9763, file: !9706, line: 109, baseType: !14, size: 32, offset: 128)
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9763, file: !9706, line: 110, baseType: !14, size: 32, offset: 160)
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9758, file: !9421, line: 45, baseType: !7, size: 32, offset: 448)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9758, file: !9421, line: 46, baseType: !9775, offset: 480)
!9775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1192, elements: !470)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !9420, file: !9421, line: 85, baseType: !437, size: 128, offset: 320)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !9420, file: !9421, line: 86, baseType: !862, size: 32, offset: 448)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9420, file: !9421, line: 87, baseType: !862, size: 32, offset: 480)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !9420, file: !9421, line: 89, baseType: !9414, size: 64, offset: 512)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !9420, file: !9421, line: 91, baseType: !9781, size: 64, offset: 576)
!9781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9782, size: 64)
!9782 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9694, line: 21, flags: DIFlagFwdDecl)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !9420, file: !9421, line: 92, baseType: !9784, size: 64, offset: 640)
!9784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9785, size: 64)
!9785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9694, line: 16, size: 128, align: 128, elements: !9786)
!9786 = !{!9787, !9792}
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9785, file: !9694, line: 17, baseType: !9788, size: 128)
!9788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9694, line: 11, size: 128, elements: !9789)
!9789 = !{!9790, !9791}
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9788, file: !9694, line: 12, baseType: !494, size: 64)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9788, file: !9694, line: 13, baseType: !494, size: 64, offset: 64)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9785, file: !9694, line: 18, baseType: !2210, offset: 128)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !9420, file: !9421, line: 93, baseType: !9563, size: 64, offset: 704)
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9420, file: !9421, line: 94, baseType: !7, size: 32, offset: 768)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9420, file: !9421, line: 95, baseType: !1425, size: 32, offset: 800)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !9420, file: !9421, line: 100, baseType: !3095, size: 192, offset: 832)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9420, file: !9421, line: 101, baseType: !9798, size: 192, offset: 1024)
!9798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !9421, line: 50, size: 192, elements: !9799)
!9799 = !{!9800, !9801, !9802, !9803}
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9798, file: !9421, line: 51, baseType: !576, size: 64)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9798, file: !9421, line: 52, baseType: !576, size: 64, offset: 64)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9798, file: !9421, line: 53, baseType: !624, size: 32, offset: 128)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9798, file: !9421, line: 54, baseType: !884, offset: 160)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9420, file: !9421, line: 102, baseType: !9788, size: 128, offset: 1216)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !9420, file: !9421, line: 103, baseType: !839, size: 32, offset: 1344)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9420, file: !9421, line: 104, baseType: !9564, size: 160, offset: 1376)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9420, file: !9421, line: 105, baseType: !473, size: 64, offset: 1536)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !9420, file: !9421, line: 106, baseType: !9419, size: 64, offset: 1600)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !9420, file: !9421, line: 107, baseType: !3095, size: 192, offset: 1664)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !9420, file: !9421, line: 109, baseType: !884, offset: 1856)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !9420, file: !9421, line: 110, baseType: !884, offset: 1856)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !9420, file: !9421, line: 113, baseType: !696, size: 8, offset: 1856)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9420, file: !9421, line: 114, baseType: !460, size: 128, align: 64, offset: 1920)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !9420, file: !9421, line: 117, baseType: !9815, align: 512, offset: 2048)
!9815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !669, elements: !470)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !9415, file: !6, line: 590, baseType: !9419, size: 64, offset: 128)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9415, file: !6, line: 592, baseType: !4393, size: 512, offset: 192)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !9415, file: !6, line: 597, baseType: !473, size: 64, offset: 704)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !9415, file: !6, line: 602, baseType: !473, size: 64, offset: 768)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !9415, file: !6, line: 605, baseType: !451, size: 64, offset: 832)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !9415, file: !6, line: 612, baseType: !884, offset: 896)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !9415, file: !6, line: 613, baseType: !7, size: 32, offset: 896)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !9415, file: !6, line: 617, baseType: !473, size: 64, offset: 960)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9415, file: !6, line: 619, baseType: !473, size: 64, offset: 1024)
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !9415, file: !6, line: 622, baseType: !9826, size: 512, offset: 1088)
!9826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9827, line: 43, size: 512, elements: !9828)
!9827 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9828 = !{!9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837, !9838, !9839, !9840, !9841}
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9826, file: !9827, line: 45, baseType: !14, size: 32)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9826, file: !9827, line: 46, baseType: !14, size: 32, offset: 32)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9826, file: !9827, line: 47, baseType: !14, size: 32, offset: 64)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9826, file: !9827, line: 51, baseType: !14, size: 32, offset: 96)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9826, file: !9827, line: 52, baseType: !14, size: 32, offset: 128)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9826, file: !9827, line: 54, baseType: !14, size: 32, offset: 160)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9826, file: !9827, line: 55, baseType: !14, size: 32, offset: 192)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9826, file: !9827, line: 56, baseType: !14, size: 32, offset: 224)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9826, file: !9827, line: 58, baseType: !14, size: 32, offset: 256)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9826, file: !9827, line: 59, baseType: !473, size: 64, offset: 320)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9826, file: !9827, line: 62, baseType: !14, size: 32, offset: 384)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9826, file: !9827, line: 63, baseType: !14, size: 32, offset: 416)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9826, file: !9827, line: 64, baseType: !14, size: 32, offset: 448)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !425, file: !6, line: 2045, baseType: !870, size: 256, offset: 6528)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !425, file: !6, line: 2049, baseType: !437, size: 128, offset: 6784)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !425, file: !6, line: 2054, baseType: !9414, size: 64, offset: 6912)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !425, file: !6, line: 2055, baseType: !14, size: 32, offset: 6976)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !425, file: !6, line: 2056, baseType: !14, size: 32, offset: 7008)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !425, file: !6, line: 2057, baseType: !9419, size: 64, offset: 7040)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !425, file: !6, line: 2058, baseType: !14, size: 32, offset: 7104)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !425, file: !6, line: 2059, baseType: !884, offset: 7136)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !425, file: !6, line: 2061, baseType: !9851, size: 64, offset: 7168)
!9851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9852, size: 64)
!9852 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !6, line: 879, flags: DIFlagFwdDecl)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !425, file: !6, line: 2075, baseType: !2393, size: 320, offset: 7232)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !425, file: !6, line: 2076, baseType: !7, size: 32, offset: 7552)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !425, file: !6, line: 2078, baseType: !862, size: 32, offset: 7584)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !425, file: !6, line: 2080, baseType: !445, size: 128, offset: 7616)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !425, file: !6, line: 2081, baseType: !695, size: 64, offset: 7744)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !425, file: !6, line: 2083, baseType: !445, size: 128, offset: 7808)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !425, file: !6, line: 2091, baseType: !424, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !425, file: !6, line: 2093, baseType: !696, size: 8, offset: 7944)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !425, file: !6, line: 2098, baseType: !9862, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9862 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !425, file: !6, line: 2095, baseType: !14, size: 32, elements: !9863)
!9863 = !{!9864, !9865}
!9864 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9865 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !425, file: !6, line: 2100, baseType: !696, size: 8, offset: 7968)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !425, file: !6, line: 2101, baseType: !566, size: 64, offset: 8000)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !425, file: !6, line: 2107, baseType: !3037, size: 64, offset: 8064)
!9869 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !6, line: 2110, baseType: !9870, size: 64, offset: 8128)
!9870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !425, file: !6, line: 2110, size: 64, elements: !9871)
!9871 = !{!9872, !9873, !9894, !9903}
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9870, file: !6, line: 2111, baseType: !726, size: 64)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9870, file: !6, line: 2112, baseType: !9874, size: 64)
!9874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9875, size: 64)
!9875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !6, line: 2542, size: 128, align: 128, elements: !9876)
!9876 = !{!9877, !9892, !9893}
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9875, file: !6, line: 2543, baseType: !9878, size: 64)
!9878 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2211, line: 79, baseType: !9879)
!9879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2211, line: 77, size: 64, elements: !9880)
!9880 = !{!9881}
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9879, file: !2211, line: 78, baseType: !9882, size: 64)
!9882 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9883, line: 26, baseType: !9884)
!9883 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9883, line: 24, size: 64, elements: !9885)
!9885 = !{!9886}
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9884, file: !9883, line: 25, baseType: !9887, size: 64)
!9887 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9888, line: 12, baseType: !9889)
!9888 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9888, line: 10, size: 64, elements: !9890)
!9890 = !{!9891}
!9891 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9889, file: !9888, line: 11, baseType: !532, size: 64)
!9892 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9875, file: !6, line: 2544, baseType: !9878, size: 64, offset: 64)
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9875, file: !6, line: 2545, baseType: !2210, offset: 128)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9870, file: !6, line: 2113, baseType: !9895, size: 64)
!9895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9896, size: 64)
!9896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !6, line: 2534, size: 256, align: 256, elements: !9897)
!9897 = !{!9898, !9899, !9900, !9901, !9902}
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9896, file: !6, line: 2535, baseType: !492, size: 64)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9896, file: !6, line: 2536, baseType: !492, size: 64, offset: 64)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9896, file: !6, line: 2537, baseType: !492, size: 64, offset: 128)
!9901 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9896, file: !6, line: 2538, baseType: !492, size: 64, offset: 192)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9896, file: !6, line: 2539, baseType: !2210, offset: 256)
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9870, file: !6, line: 2114, baseType: !9904, size: 64)
!9904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9905, size: 64)
!9905 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !6, line: 2114, flags: DIFlagFwdDecl)
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !425, file: !6, line: 2124, baseType: !4390, size: 5568, offset: 8192)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !425, file: !6, line: 2125, baseType: !9908, size: 256, offset: 13760)
!9908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4471, size: 256, elements: !1356)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !425, file: !6, line: 2126, baseType: !4471, size: 64, offset: 14016)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !425, file: !6, line: 2128, baseType: !9911, size: 64, offset: 14080)
!9911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9912, size: 64)
!9912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9913)
!9913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9914, line: 59, size: 1600, elements: !9915)
!9914 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9915 = !{!9916, !9917, !9918, !9919, !9920, !9921, !9922, !9926, !9930, !9934, !9938, !9942, !9946, !9947, !9948, !9952, !9953, !9954, !9955, !9959, !9963, !9967, !9971, !9975}
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9913, file: !9914, line: 60, baseType: !445, size: 128)
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9913, file: !9914, line: 62, baseType: !453, size: 64, offset: 128)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9913, file: !9914, line: 64, baseType: !750, size: 64, offset: 192)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9913, file: !9914, line: 65, baseType: !566, size: 64, offset: 256)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9913, file: !9914, line: 67, baseType: !14, size: 32, offset: 320)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9913, file: !9914, line: 68, baseType: !2639, size: 64, offset: 384)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9913, file: !9914, line: 69, baseType: !9923, size: 64, offset: 448)
!9923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9924, size: 64)
!9924 = !DISubroutineType(types: !9925)
!9925 = !{!7, !8138, !8138, !2625}
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9913, file: !9914, line: 73, baseType: !9927, size: 64, offset: 512)
!9927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9928, size: 64)
!9928 = !DISubroutineType(types: !9929)
!9929 = !{!7, !2115, !451, !8138, !8138, !2625}
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9913, file: !9914, line: 78, baseType: !9931, size: 64, offset: 576)
!9931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9932, size: 64)
!9932 = !DISubroutineType(types: !9933)
!9933 = !{!7, !451, !8138, !8138, !2625}
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9913, file: !9914, line: 82, baseType: !9935, size: 64, offset: 640)
!9935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9936, size: 64)
!9936 = !DISubroutineType(types: !9937)
!9937 = !{null, !451, !448}
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9913, file: !9914, line: 85, baseType: !9939, size: 64, offset: 704)
!9939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9940, size: 64)
!9940 = !DISubroutineType(types: !9941)
!9941 = !{!750, !3015}
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9913, file: !9914, line: 86, baseType: !9943, size: 64, offset: 768)
!9943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9944, size: 64)
!9944 = !DISubroutineType(types: !9945)
!9945 = !{!7, !576, !3015}
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9913, file: !9914, line: 89, baseType: !9939, size: 64, offset: 832)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9913, file: !9914, line: 90, baseType: !9943, size: 64, offset: 896)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9913, file: !9914, line: 92, baseType: !9949, size: 64, offset: 960)
!9949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9950, size: 64)
!9950 = !DISubroutineType(types: !9951)
!9951 = !{!14}
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9913, file: !9914, line: 93, baseType: !9949, size: 64, offset: 1024)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9913, file: !9914, line: 95, baseType: !14, size: 32, offset: 1088)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9913, file: !9914, line: 96, baseType: !2639, size: 64, offset: 1152)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9913, file: !9914, line: 97, baseType: !9956, size: 64, offset: 1216)
!9956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9957, size: 64)
!9957 = !DISubroutineType(types: !9958)
!9958 = !{!7, !451, !451, !8138, !8138, !2625}
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9913, file: !9914, line: 102, baseType: !9960, size: 64, offset: 1280)
!9960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9961, size: 64)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{!750, !3015, !3015}
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9913, file: !9914, line: 104, baseType: !9964, size: 64, offset: 1344)
!9964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9965, size: 64)
!9965 = !DISubroutineType(types: !9966)
!9966 = !{!7, !576, !3015, !3015}
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9913, file: !9914, line: 107, baseType: !9968, size: 64, offset: 1408)
!9968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9969, size: 64)
!9969 = !DISubroutineType(types: !9970)
!9970 = !{!2115, !3015}
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9913, file: !9914, line: 108, baseType: !9972, size: 64, offset: 1472)
!9972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9973, size: 64)
!9973 = !DISubroutineType(types: !9974)
!9974 = !{!750, !3015, !7}
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9913, file: !9914, line: 110, baseType: !9976, size: 64, offset: 1536)
!9976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9977, size: 64)
!9977 = !DISubroutineType(types: !9978)
!9978 = !{!7, !576, !3015, !695, !7}
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !425, file: !6, line: 2132, baseType: !14, size: 32, offset: 14144)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !425, file: !6, line: 2134, baseType: !1192, size: 16, offset: 14176)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !425, file: !6, line: 2139, baseType: !1398, size: 16, offset: 14192)
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !425, file: !6, line: 2140, baseType: !9983, size: 512, offset: 14208)
!9983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9984, size: 512, elements: !430)
!9984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !6, line: 793, size: 32, elements: !9985)
!9985 = !{!9986, !9987}
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9984, file: !6, line: 794, baseType: !1192, size: 16)
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9984, file: !6, line: 795, baseType: !1192, size: 16, offset: 16)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !425, file: !6, line: 2141, baseType: !9989, size: 128, offset: 14720)
!9989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 128, elements: !430)
!9990 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !425, file: !6, line: 2149, baseType: !9991, size: 64, offset: 14848)
!9991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9992, size: 64)
!9992 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !412, line: 536, flags: DIFlagFwdDecl)
!9993 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !425, file: !6, line: 2150, baseType: !9994, size: 64, offset: 14912)
!9994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9995, size: 64)
!9995 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !6, line: 60, flags: DIFlagFwdDecl)
!9996 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !425, file: !6, line: 2151, baseType: !9997, size: 64, offset: 14976)
!9997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !425, file: !6, line: 2152, baseType: !9997, size: 64, offset: 15040)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !425, file: !6, line: 2153, baseType: !696, size: 8, offset: 15104)
!10000 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !425, file: !6, line: 2154, baseType: !14, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!10001 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !425, file: !6, line: 2156, baseType: !445, size: 128, offset: 15168)
!10002 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !425, file: !6, line: 2162, baseType: !10003, size: 64, offset: 15296)
!10003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10004, size: 64)
!10004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10005)
!10005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !8292, line: 247, size: 576, elements: !10006)
!10006 = !{!10007, !10011, !10012, !10016, !10024, !10025}
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "set_port", scope: !10005, file: !8292, line: 249, baseType: !10008, size: 64)
!10008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10009, size: 64)
!10009 = !DISubroutineType(types: !10010)
!10010 = !{!7, !451, !14, !14, !8290}
!10011 = !DIDerivedType(tag: DW_TAG_member, name: "unset_port", scope: !10005, file: !8292, line: 252, baseType: !10008, size: 64, offset: 64)
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "sync_table", scope: !10005, file: !8292, line: 257, baseType: !10013, size: 64, offset: 128)
!10013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10014, size: 64)
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!7, !451, !14}
!10016 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !10005, file: !8292, line: 259, baseType: !10017, size: 64, offset: 192)
!10017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10018, size: 64)
!10018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_shared", file: !8292, line: 207, size: 192, elements: !10019)
!10019 = !{!10020, !10023}
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !10018, file: !8292, line: 208, baseType: !10021, size: 64)
!10021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10022, size: 64)
!10022 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !6, line: 69, flags: DIFlagFwdDecl)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !10018, file: !8292, line: 210, baseType: !445, size: 128, offset: 64)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10005, file: !8292, line: 261, baseType: !14, size: 32, offset: 256)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "tables", scope: !10005, file: !8292, line: 266, baseType: !10026, size: 256, offset: 288)
!10026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10027, size: 256, elements: !1356)
!10027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_table_info", file: !8292, line: 263, size: 64, elements: !10028)
!10028 = !{!10029, !10030}
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !10027, file: !8292, line: 264, baseType: !14, size: 32)
!10030 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_types", scope: !10027, file: !8292, line: 265, baseType: !14, size: 32, offset: 32)
!10031 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !425, file: !6, line: 2163, baseType: !10021, size: 64, offset: 15360)
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !425, file: !6, line: 2166, baseType: !10033, size: 384, offset: 15424)
!10033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10034, size: 384, elements: !1021)
!10034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !6, line: 889, size: 128, elements: !10035)
!10035 = !{!10036, !10037}
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !10034, file: !6, line: 890, baseType: !3496, size: 64)
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !10034, file: !6, line: 891, baseType: !10038, size: 64, offset: 64)
!10038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10039, size: 64)
!10039 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !6, line: 880, flags: DIFlagFwdDecl)
!10040 = !{!10041, !10042, !10043, !10044, !10045, !10046}
!10041 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!10042 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!10043 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!10044 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!10045 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!10046 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!10047 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_qpts_trust_state", file: !10048, line: 3252, baseType: !14, size: 32, elements: !10049)
!10048 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/reg.h", directory: "/home/lizy2001/genbc/linux")
!10049 = !{!10050, !10051}
!10050 = !DIEnumerator(name: "MLXSW_REG_QPTS_TRUST_STATE_PCP", value: 1, isUnsigned: true)
!10051 = !DIEnumerator(name: "MLXSW_REG_QPTS_TRUST_STATE_DSCP", value: 2, isUnsigned: true)
!10052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_hdroom_mode", file: !10053, line: 452, baseType: !14, size: 32, elements: !10054)
!10053 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum.h", directory: "/home/lizy2001/genbc/linux")
!10054 = !{!10055, !10056}
!10055 = !DIEnumerator(name: "MLXSW_SP_HDROOM_MODE_DCB", value: 0, isUnsigned: true)
!10056 = !DIEnumerator(name: "MLXSW_SP_HDROOM_MODE_TC", value: 1, isUnsigned: true)
!10057 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_l3proto", file: !10053, line: 616, baseType: !14, size: 32, elements: !10058)
!10058 = !{!10059, !10060}
!10059 = !DIEnumerator(name: "MLXSW_SP_L3_PROTO_IPV4", value: 0, isUnsigned: true)
!10060 = !DIEnumerator(name: "MLXSW_SP_L3_PROTO_IPV6", value: 1, isUnsigned: true)
!10061 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_kvdl_entry_type", file: !10053, line: 675, baseType: !14, size: 32, elements: !10062)
!10062 = !{!10063, !10064, !10065, !10066, !10067}
!10063 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_ADJ", value: 0, isUnsigned: true)
!10064 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_ACTSET", value: 1, isUnsigned: true)
!10065 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_PBS", value: 2, isUnsigned: true)
!10066 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_MCRIGR", value: 3, isUnsigned: true)
!10067 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_TNUMT", value: 4, isUnsigned: true)
!10068 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_afk_element", file: !10069, line: 12, baseType: !14, size: 32, elements: !10070)
!10069 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h", directory: "/home/lizy2001/genbc/linux")
!10070 = !{!10071, !10072, !10073, !10074, !10075, !10076, !10077, !10078, !10079, !10080, !10081, !10082, !10083, !10084, !10085, !10086, !10087, !10088, !10089, !10090, !10091, !10092, !10093, !10094, !10095, !10096}
!10071 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_SYS_PORT", value: 0, isUnsigned: true)
!10072 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DMAC_32_47", value: 1, isUnsigned: true)
!10073 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DMAC_0_31", value: 2, isUnsigned: true)
!10074 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SMAC_32_47", value: 3, isUnsigned: true)
!10075 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SMAC_0_31", value: 4, isUnsigned: true)
!10076 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_ETHERTYPE", value: 5, isUnsigned: true)
!10077 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_PROTO", value: 6, isUnsigned: true)
!10078 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_96_127", value: 7, isUnsigned: true)
!10079 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_64_95", value: 8, isUnsigned: true)
!10080 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_32_63", value: 9, isUnsigned: true)
!10081 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_0_31", value: 10, isUnsigned: true)
!10082 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_96_127", value: 11, isUnsigned: true)
!10083 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_64_95", value: 12, isUnsigned: true)
!10084 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_32_63", value: 13, isUnsigned: true)
!10085 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_0_31", value: 14, isUnsigned: true)
!10086 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_L4_PORT", value: 15, isUnsigned: true)
!10087 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_L4_PORT", value: 16, isUnsigned: true)
!10088 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_VID", value: 17, isUnsigned: true)
!10089 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_PCP", value: 18, isUnsigned: true)
!10090 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_TCP_FLAGS", value: 19, isUnsigned: true)
!10091 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_TTL_", value: 20, isUnsigned: true)
!10092 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_ECN", value: 21, isUnsigned: true)
!10093 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_DSCP", value: 22, isUnsigned: true)
!10094 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_VIRT_ROUTER_8_10", value: 23, isUnsigned: true)
!10095 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_VIRT_ROUTER_0_7", value: 24, isUnsigned: true)
!10096 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_MAX", value: 25, isUnsigned: true)
!10097 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_afk_element_type", file: !10069, line: 41, baseType: !14, size: 32, elements: !10098)
!10098 = !{!10099, !10100}
!10099 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_TYPE_U32", value: 0, isUnsigned: true)
!10100 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_TYPE_BUF", value: 1, isUnsigned: true)
!10101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_mr_route_prio", file: !10053, line: 1155, baseType: !14, size: 32, elements: !10102)
!10102 = !{!10103, !10104, !10105, !10106}
!10103 = !DIEnumerator(name: "MLXSW_SP_MR_ROUTE_PRIO_SG", value: 0, isUnsigned: true)
!10104 = !DIEnumerator(name: "MLXSW_SP_MR_ROUTE_PRIO_STARG", value: 1, isUnsigned: true)
!10105 = !DIEnumerator(name: "MLXSW_SP_MR_ROUTE_PRIO_CATCHALL", value: 2, isUnsigned: true)
!10106 = !DIEnumerator(name: "__MLXSW_SP_MR_ROUTE_PRIO_MAX", value: 3, isUnsigned: true)
!10107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_ptar_key_type", file: !10048, line: 2270, baseType: !14, size: 32, elements: !10108)
!10108 = !{!10109, !10110}
!10109 = !DIEnumerator(name: "MLXSW_REG_PTAR_KEY_TYPE_FLEX", value: 80, isUnsigned: true)
!10110 = !DIEnumerator(name: "MLXSW_REG_PTAR_KEY_TYPE_FLEX2", value: 81, isUnsigned: true)
!10111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_event_trap_id", file: !10112, line: 122, baseType: !14, size: 32, elements: !10113)
!10112 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/trap.h", directory: "/home/lizy2001/genbc/linux")
!10113 = !{!10114, !10115, !10116, !10117, !10118, !10119}
!10114 = !DIEnumerator(name: "MLXSW_TRAP_ID_MFDE", value: 3, isUnsigned: true)
!10115 = !DIEnumerator(name: "MLXSW_TRAP_ID_PUDE", value: 8, isUnsigned: true)
!10116 = !DIEnumerator(name: "MLXSW_TRAP_ID_PMPE", value: 9, isUnsigned: true)
!10117 = !DIEnumerator(name: "MLXSW_TRAP_ID_MTWE", value: 12, isUnsigned: true)
!10118 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP_ING_FIFO", value: 45, isUnsigned: true)
!10119 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP_EGR_FIFO", value: 46, isUnsigned: true)
!10120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_hpkt_action", file: !10048, line: 5850, baseType: !14, size: 32, elements: !10121)
!10121 = !{!10122, !10123, !10124, !10125, !10126, !10127, !10128, !10129}
!10122 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_FORWARD", value: 0, isUnsigned: true)
!10123 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_TO_CPU", value: 1, isUnsigned: true)
!10124 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_MIRROR_TO_CPU", value: 2, isUnsigned: true)
!10125 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_DISCARD", value: 3, isUnsigned: true)
!10126 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_SOFT_DISCARD", value: 4, isUnsigned: true)
!10127 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_AND_SOFT_DISCARD", value: 5, isUnsigned: true)
!10128 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_EXCEPTION_TO_CPU", value: 6, isUnsigned: true)
!10129 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_SET_FW_DEFAULT", value: 15, isUnsigned: true)
!10130 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_fid_type", file: !10053, line: 93, baseType: !14, size: 32, elements: !10131)
!10131 = !{!10132, !10133, !10134, !10135, !10136}
!10132 = !DIEnumerator(name: "MLXSW_SP_FID_TYPE_8021Q", value: 0, isUnsigned: true)
!10133 = !DIEnumerator(name: "MLXSW_SP_FID_TYPE_8021D", value: 1, isUnsigned: true)
!10134 = !DIEnumerator(name: "MLXSW_SP_FID_TYPE_RFID", value: 2, isUnsigned: true)
!10135 = !DIEnumerator(name: "MLXSW_SP_FID_TYPE_DUMMY", value: 3, isUnsigned: true)
!10136 = !DIEnumerator(name: "MLXSW_SP_FID_TYPE_MAX", value: 4, isUnsigned: true)
!10137 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10138, line: 10, baseType: !14, size: 32, elements: !10139)
!10138 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!10139 = !{!10140, !10141}
!10140 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!10141 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!10142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sfd_rec_action", file: !10048, line: 342, baseType: !14, size: 32, elements: !10143)
!10143 = !{!10144, !10145, !10146, !10147, !10148}
!10144 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_ACTION_NOP", value: 0, isUnsigned: true)
!10145 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_ACTION_MIRROR_TO_CPU", value: 1, isUnsigned: true)
!10146 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_ACTION_TRAP", value: 2, isUnsigned: true)
!10147 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_ACTION_FORWARD_IP_ROUTER", value: 3, isUnsigned: true)
!10148 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_ACTION_DISCARD_ERROR", value: 15, isUnsigned: true)
!10149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sfd_rec_policy", file: !10048, line: 308, baseType: !14, size: 32, elements: !10150)
!10150 = !{!10151, !10152, !10153}
!10151 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_POLICY_STATIC_ENTRY", value: 0, isUnsigned: true)
!10152 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_POLICY_DYNAMIC_ENTRY_MLAG", value: 1, isUnsigned: true)
!10153 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_POLICY_DYNAMIC_ENTRY_INGRESS", value: 3, isUnsigned: true)
!10154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ifla_vxlan_df", file: !8033, line: 740, baseType: !14, size: 32, elements: !10155)
!10155 = !{!10156, !10157, !10158, !10159, !10160}
!10156 = !DIEnumerator(name: "VXLAN_DF_UNSET", value: 0, isUnsigned: true)
!10157 = !DIEnumerator(name: "VXLAN_DF_SET", value: 1, isUnsigned: true)
!10158 = !DIEnumerator(name: "VXLAN_DF_INHERIT", value: 2, isUnsigned: true)
!10159 = !DIEnumerator(name: "__VXLAN_DF_END", value: 3, isUnsigned: true)
!10160 = !DIEnumerator(name: "VXLAN_DF_MAX", value: 2, isUnsigned: true)
!10161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_flood_type", file: !10053, line: 420, baseType: !14, size: 32, elements: !10162)
!10162 = !{!10163, !10164, !10165}
!10163 = !DIEnumerator(name: "MLXSW_SP_FLOOD_TYPE_UC", value: 0, isUnsigned: true)
!10164 = !DIEnumerator(name: "MLXSW_SP_FLOOD_TYPE_BC", value: 1, isUnsigned: true)
!10165 = !DIEnumerator(name: "MLXSW_SP_FLOOD_TYPE_MC", value: 2, isUnsigned: true)
!10166 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !6, line: 288, baseType: !14, size: 32, elements: !10167)
!10167 = !{!10168, !10169, !10170, !10171, !10172, !10173}
!10168 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!10169 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!10170 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!10171 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!10172 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!10173 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!10174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sfdf_flush_type", file: !10048, line: 1185, baseType: !14, size: 32, elements: !10175)
!10175 = !{!10176, !10177, !10178, !10179, !10180, !10181, !10182, !10183}
!10176 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_SWID", value: 0, isUnsigned: true)
!10177 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_FID", value: 1, isUnsigned: true)
!10178 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_PORT", value: 2, isUnsigned: true)
!10179 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_PORT_AND_FID", value: 3, isUnsigned: true)
!10180 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_LAG", value: 4, isUnsigned: true)
!10181 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_LAG_AND_FID", value: 5, isUnsigned: true)
!10182 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_NVE", value: 6, isUnsigned: true)
!10183 = !DIEnumerator(name: "MLXSW_REG_SFDF_FLUSH_PER_NVE_AND_FID", value: 7, isUnsigned: true)
!10184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !10185, line: 305, baseType: !14, size: 32, elements: !10186)
!10185 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!10186 = !{!10187, !10188, !10189, !10190}
!10187 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!10188 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!10189 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!10190 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!10191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sfd_op", file: !10048, line: 227, baseType: !14, size: 32, elements: !10192)
!10192 = !{!10193, !10194, !10195, !10196, !10197, !10198, !10199}
!10193 = !DIEnumerator(name: "MLXSW_REG_SFD_OP_QUERY_DUMP", value: 0, isUnsigned: true)
!10194 = !DIEnumerator(name: "MLXSW_REG_SFD_OP_QUERY_QUERY", value: 1, isUnsigned: true)
!10195 = !DIEnumerator(name: "MLXSW_REG_SFD_OP_QUERY_QUERY_AND_CLEAR_ACTIVITY", value: 2, isUnsigned: true)
!10196 = !DIEnumerator(name: "MLXSW_REG_SFD_OP_WRITE_TEST", value: 0, isUnsigned: true)
!10197 = !DIEnumerator(name: "MLXSW_REG_SFD_OP_WRITE_EDIT", value: 1, isUnsigned: true)
!10198 = !DIEnumerator(name: "MLXSW_REG_SFD_OP_WRITE_REMOVE", value: 2, isUnsigned: true)
!10199 = !DIEnumerator(name: "MLXSW_REG_SFD_OP_WRITE_REMOVE_NOTIFICATION", value: 2, isUnsigned: true)
!10200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sfd_rec_type", file: !10048, line: 294, baseType: !14, size: 32, elements: !10201)
!10201 = !{!10202, !10203, !10204, !10205}
!10202 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_TYPE_UNICAST", value: 0, isUnsigned: true)
!10203 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_TYPE_UNICAST_LAG", value: 1, isUnsigned: true)
!10204 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_TYPE_MULTICAST", value: 2, isUnsigned: true)
!10205 = !DIEnumerator(name: "MLXSW_REG_SFD_REC_TYPE_UNICAST_TUNNEL", value: 12, isUnsigned: true)
!10206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "switchdev_notifier_type", file: !10207, line: 200, baseType: !14, size: 32, elements: !10208)
!10207 = !DIFile(filename: "./include/net/switchdev.h", directory: "/home/lizy2001/genbc/linux")
!10208 = !{!10209, !10210, !10211, !10212, !10213, !10214, !10215, !10216, !10217, !10218, !10219, !10220, !10221, !10222}
!10209 = !DIEnumerator(name: "SWITCHDEV_FDB_ADD_TO_BRIDGE", value: 1, isUnsigned: true)
!10210 = !DIEnumerator(name: "SWITCHDEV_FDB_DEL_TO_BRIDGE", value: 2, isUnsigned: true)
!10211 = !DIEnumerator(name: "SWITCHDEV_FDB_ADD_TO_DEVICE", value: 3, isUnsigned: true)
!10212 = !DIEnumerator(name: "SWITCHDEV_FDB_DEL_TO_DEVICE", value: 4, isUnsigned: true)
!10213 = !DIEnumerator(name: "SWITCHDEV_FDB_OFFLOADED", value: 5, isUnsigned: true)
!10214 = !DIEnumerator(name: "SWITCHDEV_FDB_FLUSH_TO_BRIDGE", value: 6, isUnsigned: true)
!10215 = !DIEnumerator(name: "SWITCHDEV_PORT_OBJ_ADD", value: 7, isUnsigned: true)
!10216 = !DIEnumerator(name: "SWITCHDEV_PORT_OBJ_DEL", value: 8, isUnsigned: true)
!10217 = !DIEnumerator(name: "SWITCHDEV_PORT_ATTR_SET", value: 9, isUnsigned: true)
!10218 = !DIEnumerator(name: "SWITCHDEV_VXLAN_FDB_ADD_TO_BRIDGE", value: 10, isUnsigned: true)
!10219 = !DIEnumerator(name: "SWITCHDEV_VXLAN_FDB_DEL_TO_BRIDGE", value: 11, isUnsigned: true)
!10220 = !DIEnumerator(name: "SWITCHDEV_VXLAN_FDB_ADD_TO_DEVICE", value: 12, isUnsigned: true)
!10221 = !DIEnumerator(name: "SWITCHDEV_VXLAN_FDB_DEL_TO_DEVICE", value: 13, isUnsigned: true)
!10222 = !DIEnumerator(name: "SWITCHDEV_VXLAN_FDB_OFFLOADED", value: 14, isUnsigned: true)
!10223 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1961, line: 30, baseType: !669, size: 64, elements: !10224)
!10224 = !{!10225, !10226, !10227, !10228, !10229, !10230, !10231, !10232, !10233, !10234, !10235, !10236, !10237, !10238, !10239, !10240, !10241, !10242, !10243, !10244, !10245, !10246, !10247, !10248, !10249, !10250, !10251, !10252, !10253}
!10225 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!10226 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!10227 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!10228 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!10229 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!10230 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!10231 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!10232 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!10233 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!10234 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!10235 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!10236 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!10237 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!10238 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!10239 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!10240 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!10241 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!10242 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!10243 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!10244 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!10245 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!10246 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!10247 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!10248 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!10249 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!10250 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!10251 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!10252 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!10253 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!10254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "switchdev_attr_id", file: !10207, line: 33, baseType: !14, size: 32, elements: !10255)
!10255 = !{!10256, !10257, !10258, !10259, !10260, !10261, !10262, !10263, !10264}
!10256 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_UNDEFINED", value: 0, isUnsigned: true)
!10257 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_PORT_STP_STATE", value: 1, isUnsigned: true)
!10258 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS", value: 2, isUnsigned: true)
!10259 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_PORT_PRE_BRIDGE_FLAGS", value: 3, isUnsigned: true)
!10260 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_PORT_MROUTER", value: 4, isUnsigned: true)
!10261 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_BRIDGE_AGEING_TIME", value: 5, isUnsigned: true)
!10262 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_BRIDGE_VLAN_FILTERING", value: 6, isUnsigned: true)
!10263 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_BRIDGE_MC_DISABLED", value: 7, isUnsigned: true)
!10264 = !DIEnumerator(name: "SWITCHDEV_ATTR_ID_BRIDGE_MROUTER", value: 8, isUnsigned: true)
!10265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_res_id", file: !10266, line: 10, baseType: !14, size: 32, elements: !10267)
!10266 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/resources.h", directory: "/home/lizy2001/genbc/linux")
!10267 = !{!10268, !10269, !10270, !10271, !10272, !10273, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10292, !10293, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313, !10314, !10315, !10316, !10317, !10318}
!10268 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SIZE", value: 0, isUnsigned: true)
!10269 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_MIN_SIZE", value: 1, isUnsigned: true)
!10270 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_MIN_SIZE", value: 2, isUnsigned: true)
!10271 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_LINEAR_RANGE", value: 3, isUnsigned: true)
!10272 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_ACTION_SETS", value: 4, isUnsigned: true)
!10273 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_TRAP_GROUPS", value: 5, isUnsigned: true)
!10274 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V0", value: 6, isUnsigned: true)
!10275 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V1", value: 7, isUnsigned: true)
!10276 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V2", value: 8, isUnsigned: true)
!10277 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_POOL_SIZE", value: 9, isUnsigned: true)
!10278 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_BANK_SIZE", value: 10, isUnsigned: true)
!10279 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SPAN", value: 11, isUnsigned: true)
!10280 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_PACKETS_BYTES", value: 12, isUnsigned: true)
!10281 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_ROUTER_BASIC", value: 13, isUnsigned: true)
!10282 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SYSTEM_PORT", value: 14, isUnsigned: true)
!10283 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG", value: 15, isUnsigned: true)
!10284 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG_MEMBERS", value: 16, isUnsigned: true)
!10285 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_1X", value: 17, isUnsigned: true)
!10286 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_2X", value: 18, isUnsigned: true)
!10287 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_4X", value: 19, isUnsigned: true)
!10288 = !DIEnumerator(name: "MLXSW_RES_ID_GUARANTEED_SHARED_BUFFER", value: 20, isUnsigned: true)
!10289 = !DIEnumerator(name: "MLXSW_RES_ID_CELL_SIZE", value: 21, isUnsigned: true)
!10290 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_HEADROOM_SIZE", value: 22, isUnsigned: true)
!10291 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_REGIONS", value: 23, isUnsigned: true)
!10292 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_RULES", value: 24, isUnsigned: true)
!10293 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_REGIONS", value: 25, isUnsigned: true)
!10294 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUPS", value: 26, isUnsigned: true)
!10295 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUP_SIZE", value: 27, isUnsigned: true)
!10296 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_FLEX_KEYS", value: 28, isUnsigned: true)
!10297 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ACTION_PER_RULE", value: 29, isUnsigned: true)
!10298 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ACTIONS_PER_SET", value: 30, isUnsigned: true)
!10299 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANKS", value: 31, isUnsigned: true)
!10300 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANK_SIZE", value: 32, isUnsigned: true)
!10301 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_LARGE_KEY_ID", value: 33, isUnsigned: true)
!10302 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_2KB", value: 34, isUnsigned: true)
!10303 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_4KB", value: 35, isUnsigned: true)
!10304 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_8KB", value: 36, isUnsigned: true)
!10305 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_12KB", value: 37, isUnsigned: true)
!10306 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_BF_LOG", value: 38, isUnsigned: true)
!10307 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_GLOBAL_POLICERS", value: 39, isUnsigned: true)
!10308 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_CPU_POLICERS", value: 40, isUnsigned: true)
!10309 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_VRS", value: 41, isUnsigned: true)
!10310 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_RIFS", value: 42, isUnsigned: true)
!10311 = !DIEnumerator(name: "MLXSW_RES_ID_MC_ERIF_LIST_ENTRIES", value: 43, isUnsigned: true)
!10312 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LPM_TREES", value: 44, isUnsigned: true)
!10313 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV4", value: 45, isUnsigned: true)
!10314 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV6", value: 46, isUnsigned: true)
!10315 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_SIZE", value: 47, isUnsigned: true)
!10316 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_SIZE", value: 48, isUnsigned: true)
!10317 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_LINEAR_SIZE", value: 49, isUnsigned: true)
!10318 = !DIEnumerator(name: "__MLXSW_RES_ID_MAX", value: 50, isUnsigned: true)
!10319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_priv_flags", file: !6, line: 1538, baseType: !14, size: 32, elements: !10320)
!10320 = !{!10321, !10322, !10323, !10324, !10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334, !10335, !10336, !10337, !10338, !10339, !10340, !10341, !10342, !10343, !10344, !10345, !10346, !10347, !10348, !10349, !10350, !10351}
!10321 = !DIEnumerator(name: "IFF_802_1Q_VLAN", value: 1, isUnsigned: true)
!10322 = !DIEnumerator(name: "IFF_EBRIDGE", value: 2, isUnsigned: true)
!10323 = !DIEnumerator(name: "IFF_BONDING", value: 4, isUnsigned: true)
!10324 = !DIEnumerator(name: "IFF_ISATAP", value: 8, isUnsigned: true)
!10325 = !DIEnumerator(name: "IFF_WAN_HDLC", value: 16, isUnsigned: true)
!10326 = !DIEnumerator(name: "IFF_XMIT_DST_RELEASE", value: 32, isUnsigned: true)
!10327 = !DIEnumerator(name: "IFF_DONT_BRIDGE", value: 64, isUnsigned: true)
!10328 = !DIEnumerator(name: "IFF_DISABLE_NETPOLL", value: 128, isUnsigned: true)
!10329 = !DIEnumerator(name: "IFF_MACVLAN_PORT", value: 256, isUnsigned: true)
!10330 = !DIEnumerator(name: "IFF_BRIDGE_PORT", value: 512, isUnsigned: true)
!10331 = !DIEnumerator(name: "IFF_OVS_DATAPATH", value: 1024, isUnsigned: true)
!10332 = !DIEnumerator(name: "IFF_TX_SKB_SHARING", value: 2048, isUnsigned: true)
!10333 = !DIEnumerator(name: "IFF_UNICAST_FLT", value: 4096, isUnsigned: true)
!10334 = !DIEnumerator(name: "IFF_TEAM_PORT", value: 8192, isUnsigned: true)
!10335 = !DIEnumerator(name: "IFF_SUPP_NOFCS", value: 16384, isUnsigned: true)
!10336 = !DIEnumerator(name: "IFF_LIVE_ADDR_CHANGE", value: 32768, isUnsigned: true)
!10337 = !DIEnumerator(name: "IFF_MACVLAN", value: 65536, isUnsigned: true)
!10338 = !DIEnumerator(name: "IFF_XMIT_DST_RELEASE_PERM", value: 131072, isUnsigned: true)
!10339 = !DIEnumerator(name: "IFF_L3MDEV_MASTER", value: 262144, isUnsigned: true)
!10340 = !DIEnumerator(name: "IFF_NO_QUEUE", value: 524288, isUnsigned: true)
!10341 = !DIEnumerator(name: "IFF_OPENVSWITCH", value: 1048576, isUnsigned: true)
!10342 = !DIEnumerator(name: "IFF_L3MDEV_SLAVE", value: 2097152, isUnsigned: true)
!10343 = !DIEnumerator(name: "IFF_TEAM", value: 4194304, isUnsigned: true)
!10344 = !DIEnumerator(name: "IFF_RXFH_CONFIGURED", value: 8388608, isUnsigned: true)
!10345 = !DIEnumerator(name: "IFF_PHONY_HEADROOM", value: 16777216, isUnsigned: true)
!10346 = !DIEnumerator(name: "IFF_MACSEC", value: 33554432, isUnsigned: true)
!10347 = !DIEnumerator(name: "IFF_NO_RX_HANDLER", value: 67108864, isUnsigned: true)
!10348 = !DIEnumerator(name: "IFF_FAILOVER", value: 134217728, isUnsigned: true)
!10349 = !DIEnumerator(name: "IFF_FAILOVER_SLAVE", value: 268435456, isUnsigned: true)
!10350 = !DIEnumerator(name: "IFF_L3MDEV_RX_HANDLER", value: 536870912, isUnsigned: true)
!10351 = !DIEnumerator(name: "IFF_LIVE_RENAME_OK", value: 1073741824, isUnsigned: true)
!10352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sfd_uc_tunnel_protocol", file: !10048, line: 545, baseType: !14, size: 32, elements: !10353)
!10353 = !{!10354, !10355}
!10354 = !DIEnumerator(name: "MLXSW_REG_SFD_UC_TUNNEL_PROTOCOL_IPV4", value: 0, isUnsigned: true)
!10355 = !DIEnumerator(name: "MLXSW_REG_SFD_UC_TUNNEL_PROTOCOL_IPV6", value: 1, isUnsigned: true)
!10356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_nve_type", file: !10053, line: 101, baseType: !14, size: 32, elements: !10357)
!10357 = !{!10358}
!10358 = !DIEnumerator(name: "MLXSW_SP_NVE_TYPE_VXLAN", value: 0, isUnsigned: true)
!10359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "switchdev_obj_id", file: !10207, line: 69, baseType: !14, size: 32, elements: !10360)
!10360 = !{!10361, !10362, !10363, !10364}
!10361 = !DIEnumerator(name: "SWITCHDEV_OBJ_ID_UNDEFINED", value: 0, isUnsigned: true)
!10362 = !DIEnumerator(name: "SWITCHDEV_OBJ_ID_PORT_VLAN", value: 1, isUnsigned: true)
!10363 = !DIEnumerator(name: "SWITCHDEV_OBJ_ID_PORT_MDB", value: 2, isUnsigned: true)
!10364 = !DIEnumerator(name: "SWITCHDEV_OBJ_ID_HOST_MDB", value: 3, isUnsigned: true)
!10365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sfn_uc_tunnel_protocol", file: !10048, line: 720, baseType: !14, size: 32, elements: !10366)
!10366 = !{!10367, !10368}
!10367 = !DIEnumerator(name: "MLXSW_REG_SFN_UC_TUNNEL_PROTOCOL_IPV4", value: 0, isUnsigned: true)
!10368 = !DIEnumerator(name: "MLXSW_REG_SFN_UC_TUNNEL_PROTOCOL_IPV6", value: 1, isUnsigned: true)
!10369 = !{!2143, !726, !10370, !10389, !11206, !11212, !2608, !11214, !7, !624, !622, !11215, !11224, !11226, !473, !669, !733, !11227, !8081, !11091, !11239, !695, !9069, !1614, !11286, !8502, !11288, !11289, !11306, !10473, !10057, !8410, !11312}
!10370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10371, size: 64)
!10371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_bridge_device", file: !3, line: 46, size: 576, elements: !10372)
!10372 = !{!10373, !10374, !10375, !10376, !10377, !10378, !10379, !10380}
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10371, file: !3, line: 47, baseType: !451, size: 64)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10371, file: !3, line: 48, baseType: !445, size: 128, offset: 64)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "ports_list", scope: !10371, file: !3, line: 49, baseType: !445, size: 128, offset: 192)
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "mids_list", scope: !10371, file: !3, line: 50, baseType: !445, size: 128, offset: 320)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_enabled", scope: !10371, file: !3, line: 51, baseType: !1551, size: 1, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "multicast_enabled", scope: !10371, file: !3, line: 52, baseType: !1551, size: 1, offset: 449, flags: DIFlagBitField, extraData: i64 448)
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "mrouter", scope: !10371, file: !3, line: 53, baseType: !1551, size: 1, offset: 450, flags: DIFlagBitField, extraData: i64 448)
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10371, file: !3, line: 54, baseType: !10381, size: 64, offset: 512)
!10381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10382, size: 64)
!10382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10383)
!10383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_bridge_ops", file: !3, line: 79, size: 384, elements: !10384)
!10384 = !{!10385, !11184, !11188, !11192, !11196, !11200}
!10385 = !DIDerivedType(tag: DW_TAG_member, name: "port_join", scope: !10383, file: !3, line: 80, baseType: !10386, size: 64)
!10386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10387, size: 64)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{!7, !10370, !10389, !10406, !2625}
!10389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10390, size: 64)
!10390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_bridge_port", file: !3, line: 57, size: 576, elements: !10391)
!10391 = !{!10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401}
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10390, file: !3, line: 58, baseType: !451, size: 64)
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_device", scope: !10390, file: !3, line: 59, baseType: !10370, size: 64, offset: 64)
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10390, file: !3, line: 60, baseType: !445, size: 128, offset: 128)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "vlans_list", scope: !10390, file: !3, line: 61, baseType: !445, size: 128, offset: 256)
!10396 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !10390, file: !3, line: 62, baseType: !14, size: 32, offset: 384)
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "stp_state", scope: !10390, file: !3, line: 63, baseType: !1551, size: 8, offset: 416)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10390, file: !3, line: 64, baseType: !473, size: 64, offset: 448)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "mrouter", scope: !10390, file: !3, line: 65, baseType: !696, size: 8, offset: 512)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "lagged", scope: !10390, file: !3, line: 66, baseType: !696, size: 8, offset: 520)
!10401 = !DIDerivedType(tag: DW_TAG_member, scope: !10390, file: !3, line: 67, baseType: !10402, size: 16, offset: 528)
!10402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10390, file: !3, line: 67, size: 16, elements: !10403)
!10403 = !{!10404, !10405}
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "lag_id", scope: !10402, file: !3, line: 68, baseType: !1192, size: 16)
!10405 = !DIDerivedType(tag: DW_TAG_member, name: "system_port", scope: !10402, file: !3, line: 69, baseType: !1192, size: 16)
!10406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10407, size: 64)
!10407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port", file: !10053, line: 273, size: 8832, elements: !10408)
!10408 = !{!10409, !10410, !10420, !11008, !11009, !11010, !11011, !11012, !11013, !11019, !11055, !11056, !11071, !11089, !11090, !11102, !11105, !11106, !11128, !11129, !11145, !11146, !11147, !11148, !11183}
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10407, file: !10053, line: 274, baseType: !451, size: 64)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_stats", scope: !10407, file: !10053, line: 275, baseType: !10411, size: 64, offset: 64)
!10411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10412, size: 64)
!10412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_pcpu_stats", file: !10053, line: 225, size: 320, elements: !10413)
!10413 = !{!10414, !10415, !10416, !10417, !10418, !10419}
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !10412, file: !10053, line: 226, baseType: !492, size: 64)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !10412, file: !10053, line: 227, baseType: !492, size: 64, offset: 64)
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !10412, file: !10053, line: 228, baseType: !492, size: 64, offset: 128)
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !10412, file: !10053, line: 229, baseType: !492, size: 64, offset: 192)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !10412, file: !10053, line: 230, baseType: !2210, offset: 256)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !10412, file: !10053, line: 231, baseType: !862, size: 32, offset: 256)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp", scope: !10407, file: !10053, line: 276, baseType: !10421, size: 64, offset: 128)
!10421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10422, size: 64)
!10422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp", file: !10053, line: 142, size: 2752, elements: !10423)
!10423 = !{!10424, !10426, !10430, !10453, !10454, !10455, !10461, !10469, !10472, !10491, !10555, !10558, !10562, !10565, !10568, !10571, !10574, !10577, !10578, !10581, !10584, !10587, !10590, !10593, !10620, !10670, !10715, !10740, !10775, !10829, !10834, !10835, !10839, !10843, !10888, !10943, !10957, !10961, !10965, !11006, !11007}
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !10422, file: !10053, line: 143, baseType: !10425, size: 64)
!10425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10406, size: 64)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !10422, file: !10053, line: 144, baseType: !10427, size: 64, offset: 64)
!10427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10428, size: 64)
!10428 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core", file: !10429, line: 26, flags: DIFlagFwdDecl)
!10429 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/cmd.h", directory: "/home/lizy2001/genbc/linux")
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !10422, file: !10053, line: 145, baseType: !10431, size: 64, offset: 128)
!10431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10432, size: 64)
!10432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10433)
!10433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_bus_info", file: !10434, line: 438, size: 2112, elements: !10435)
!10434 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core.h", directory: "/home/lizy2001/genbc/linux")
!10435 = !{!10436, !10437, !10438, !10439, !10446, !10450, !10451, !10452}
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "device_kind", scope: !10433, file: !10434, line: 439, baseType: !453, size: 64)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !10433, file: !10434, line: 440, baseType: !453, size: 64, offset: 64)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10433, file: !10434, line: 441, baseType: !4753, size: 64, offset: 128)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "fw_rev", scope: !10433, file: !10434, line: 442, baseType: !10440, size: 64, offset: 192)
!10440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_fw_rev", file: !10434, line: 431, size: 64, elements: !10441)
!10441 = !{!10442, !10443, !10444, !10445}
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !10440, file: !10434, line: 432, baseType: !1192, size: 16)
!10443 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !10440, file: !10434, line: 433, baseType: !1192, size: 16, offset: 16)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "subminor", scope: !10440, file: !10434, line: 434, baseType: !1192, size: 16, offset: 32)
!10445 = !DIDerivedType(tag: DW_TAG_member, name: "can_reset_minor", scope: !10440, file: !10434, line: 435, baseType: !1192, size: 16, offset: 48)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "vsd", scope: !10433, file: !10434, line: 443, baseType: !10447, size: 1664, offset: 256)
!10447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 1664, elements: !10448)
!10448 = !{!10449}
!10449 = !DISubrange(count: 208)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "psid", scope: !10433, file: !10434, line: 444, baseType: !9989, size: 128, offset: 1920)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "low_frequency", scope: !10433, file: !10434, line: 445, baseType: !1551, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_capable", scope: !10433, file: !10434, line: 446, baseType: !1551, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "base_mac", scope: !10422, file: !10053, line: 146, baseType: !9014, size: 48, offset: 192)
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "mac_mask", scope: !10422, file: !10053, line: 147, baseType: !866, size: 64, offset: 256)
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "lags", scope: !10422, file: !10053, line: 148, baseType: !10456, size: 64, offset: 320)
!10456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10457, size: 64)
!10457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_upper", file: !10053, line: 75, size: 128, elements: !10458)
!10458 = !{!10459, !10460}
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10457, file: !10053, line: 76, baseType: !451, size: 64)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !10457, file: !10053, line: 77, baseType: !14, size: 32, offset: 64)
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "port_mapping", scope: !10422, file: !10053, line: 149, baseType: !10462, size: 64, offset: 384)
!10462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10463, size: 64)
!10463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10464, size: 64)
!10464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_mapping", file: !10053, line: 136, size: 24, elements: !10465)
!10465 = !{!10466, !10467, !10468}
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !10464, file: !10053, line: 137, baseType: !1551, size: 8)
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !10464, file: !10053, line: 138, baseType: !1551, size: 8, offset: 8)
!10468 = !DIDerivedType(tag: DW_TAG_member, name: "lane", scope: !10464, file: !10053, line: 139, baseType: !1551, size: 8, offset: 16)
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !10422, file: !10053, line: 150, baseType: !10470, size: 64, offset: 448)
!10470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10471, size: 64)
!10471 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_sb", file: !10053, line: 114, flags: DIFlagFwdDecl)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !10422, file: !10053, line: 151, baseType: !10473, size: 64, offset: 512)
!10473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10474, size: 64)
!10474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_bridge", file: !3, line: 28, size: 8192, elements: !10475)
!10475 = !{!10476, !10477, !10482, !10483, !10484, !10485, !10489, !10490}
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp", scope: !10474, file: !3, line: 29, baseType: !10421, size: 64)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_notify", scope: !10474, file: !3, line: 34, baseType: !10478, size: 768, offset: 64)
!10478 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10474, file: !3, line: 30, size: 768, elements: !10479)
!10479 = !{!10480, !10481}
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !10478, file: !3, line: 31, baseType: !3085, size: 704)
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !10478, file: !3, line: 33, baseType: !14, size: 32, offset: 704)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "ageing_time", scope: !10474, file: !3, line: 38, baseType: !862, size: 32, offset: 832)
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_enabled_exists", scope: !10474, file: !3, line: 39, baseType: !696, size: 8, offset: 864)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "bridges_list", scope: !10474, file: !3, line: 40, baseType: !445, size: 128, offset: 896)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "mids_bitmap", scope: !10474, file: !3, line: 41, baseType: !10486, size: 7040, offset: 1024)
!10486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 7040, elements: !10487)
!10487 = !{!10488}
!10488 = !DISubrange(count: 110)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_8021q_ops", scope: !10474, file: !3, line: 42, baseType: !10381, size: 64, offset: 8064)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_8021d_ops", scope: !10474, file: !3, line: 43, baseType: !10381, size: 64, offset: 8128)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !10422, file: !10053, line: 152, baseType: !10492, size: 64, offset: 576)
!10492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10493, size: 64)
!10493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_router", file: !10494, line: 18, size: 6848, elements: !10495)
!10494 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_router.h", directory: "/home/lizy2001/genbc/linux")
!10495 = !{!10496, !10497, !10501, !10504, !10505, !10506, !10507, !10508, !10517, !10522, !10523, !10524, !10525, !10526, !10527, !10528, !10529, !10530, !10535, !10540, !10541, !10542, !10554}
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp", scope: !10493, file: !10494, line: 19, baseType: !10421, size: 64)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "rifs", scope: !10493, file: !10494, line: 20, baseType: !10498, size: 64, offset: 64)
!10498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10499, size: 64)
!10499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10500, size: 64)
!10500 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_rif", file: !10053, line: 70, flags: DIFlagFwdDecl)
!10501 = !DIDerivedType(tag: DW_TAG_member, name: "vrs", scope: !10493, file: !10494, line: 21, baseType: !10502, size: 64, offset: 128)
!10502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10503, size: 64)
!10503 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_vr", file: !10494, line: 21, flags: DIFlagFwdDecl)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_ht", scope: !10493, file: !10494, line: 22, baseType: !2454, size: 1024, offset: 192)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_group_ht", scope: !10493, file: !10494, line: 23, baseType: !2454, size: 1024, offset: 1216)
!10506 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_ht", scope: !10493, file: !10494, line: 24, baseType: !2454, size: 1024, offset: 2240)
!10507 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_list", scope: !10493, file: !10494, line: 25, baseType: !445, size: 128, offset: 3264)
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "lpm", scope: !10493, file: !10494, line: 31, baseType: !10509, size: 256, offset: 3392)
!10509 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10493, file: !10494, line: 26, size: 256, elements: !10510)
!10510 = !{!10511, !10515, !10516}
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "proto_trees", scope: !10509, file: !10494, line: 28, baseType: !10512, size: 128)
!10512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10513, size: 128, elements: !634)
!10513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10514, size: 64)
!10514 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_lpm_tree", file: !10494, line: 28, flags: DIFlagFwdDecl)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "trees", scope: !10509, file: !10494, line: 29, baseType: !10513, size: 64, offset: 128)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "tree_count", scope: !10509, file: !10494, line: 30, baseType: !14, size: 32, offset: 192)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "neighs_update", scope: !10493, file: !10494, line: 35, baseType: !10518, size: 768, offset: 3648)
!10518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10493, file: !10494, line: 32, size: 768, elements: !10519)
!10519 = !{!10520, !10521}
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !10518, file: !10494, line: 33, baseType: !3085, size: 704)
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !10518, file: !10494, line: 34, baseType: !473, size: 64, offset: 704)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_probe_dw", scope: !10493, file: !10494, line: 36, baseType: !3085, size: 704, offset: 4416)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_neighs_list", scope: !10493, file: !10494, line: 38, baseType: !445, size: 128, offset: 5120)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "ipip_list", scope: !10493, file: !10494, line: 39, baseType: !445, size: 128, offset: 5248)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "aborted", scope: !10493, file: !10494, line: 40, baseType: !696, size: 8, offset: 5376)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nb", scope: !10493, file: !10494, line: 41, baseType: !2169, size: 192, offset: 5440)
!10527 = !DIDerivedType(tag: DW_TAG_member, name: "netevent_nb", scope: !10493, file: !10494, line: 42, baseType: !2169, size: 192, offset: 5632)
!10528 = !DIDerivedType(tag: DW_TAG_member, name: "inetaddr_nb", scope: !10493, file: !10494, line: 43, baseType: !2169, size: 192, offset: 5824)
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "inet6addr_nb", scope: !10493, file: !10494, line: 44, baseType: !2169, size: 192, offset: 6016)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "rif_ops_arr", scope: !10493, file: !10494, line: 45, baseType: !10531, size: 64, offset: 6208)
!10531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10532, size: 64)
!10532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10533, size: 64)
!10533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10534)
!10534 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_rif_ops", file: !10053, line: 88, flags: DIFlagFwdDecl)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "ipip_ops_arr", scope: !10493, file: !10494, line: 46, baseType: !10536, size: 64, offset: 6272)
!10536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10537, size: 64)
!10537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10538, size: 64)
!10538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10539)
!10539 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ipip_ops", file: !10494, line: 46, flags: DIFlagFwdDecl)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "adj_discard_index", scope: !10493, file: !10494, line: 47, baseType: !862, size: 32, offset: 6336)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "adj_discard_index_valid", scope: !10493, file: !10494, line: 48, baseType: !696, size: 8, offset: 6368)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "nve_decap_config", scope: !10493, file: !10494, line: 49, baseType: !10543, size: 256, offset: 6400)
!10543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_router_nve_decap", file: !10494, line: 10, size: 256, elements: !10544)
!10544 = !{!10545, !10546, !10547, !10548, !10553}
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "ul_tb_id", scope: !10543, file: !10494, line: 11, baseType: !862, size: 32)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_index", scope: !10543, file: !10494, line: 12, baseType: !862, size: 32, offset: 32)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "ul_proto", scope: !10543, file: !10494, line: 13, baseType: !10057, size: 32, offset: 64)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "ul_sip", scope: !10543, file: !10494, line: 14, baseType: !10549, size: 128, offset: 96)
!10549 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mlxsw_sp_l3addr", file: !10053, line: 622, size: 128, elements: !10550)
!10550 = !{!10551, !10552}
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "addr4", scope: !10549, file: !10053, line: 623, baseType: !622, size: 32)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "addr6", scope: !10549, file: !10053, line: 624, baseType: !2376, size: 128)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !10543, file: !10494, line: 15, baseType: !1551, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10493, file: !10494, line: 50, baseType: !1108, size: 192, offset: 6656)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !10422, file: !10053, line: 153, baseType: !10556, size: 64, offset: 640)
!10556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10557, size: 64)
!10557 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_mr", file: !10053, line: 117, flags: DIFlagFwdDecl)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "afa", scope: !10422, file: !10053, line: 154, baseType: !10559, size: 64, offset: 704)
!10559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10560, size: 64)
!10560 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afa", file: !10561, line: 11, flags: DIFlagFwdDecl)
!10561 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h", directory: "/home/lizy2001/genbc/linux")
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !10422, file: !10053, line: 155, baseType: !10563, size: 64, offset: 768)
!10563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10564, size: 64)
!10564 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl", file: !10053, line: 118, flags: DIFlagFwdDecl)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "fid_core", scope: !10422, file: !10053, line: 156, baseType: !10566, size: 64, offset: 832)
!10566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10567, size: 64)
!10567 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_fid_core", file: !10053, line: 120, flags: DIFlagFwdDecl)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "policer_core", scope: !10422, file: !10053, line: 157, baseType: !10569, size: 64, offset: 896)
!10569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10570, size: 64)
!10570 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_policer_core", file: !10053, line: 157, flags: DIFlagFwdDecl)
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl", scope: !10422, file: !10053, line: 158, baseType: !10572, size: 64, offset: 960)
!10572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10573, size: 64)
!10573 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_kvdl", file: !10053, line: 121, flags: DIFlagFwdDecl)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "nve", scope: !10422, file: !10053, line: 159, baseType: !10575, size: 64, offset: 1024)
!10575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10576, size: 64)
!10576 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_nve", file: !10053, line: 122, flags: DIFlagFwdDecl)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "netdevice_nb", scope: !10422, file: !10053, line: 160, baseType: !2169, size: 192, offset: 1088)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !10422, file: !10053, line: 161, baseType: !10579, size: 64, offset: 1280)
!10579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10580, size: 64)
!10580 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_clock", file: !10053, line: 161, flags: DIFlagFwdDecl)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_state", scope: !10422, file: !10053, line: 162, baseType: !10582, size: 64, offset: 1344)
!10582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10583, size: 64)
!10583 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_state", file: !10053, line: 131, flags: DIFlagFwdDecl)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "counter_pool", scope: !10422, file: !10053, line: 163, baseType: !10585, size: 64, offset: 1408)
!10585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10586, size: 64)
!10586 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_counter_pool", file: !10053, line: 119, flags: DIFlagFwdDecl)
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !10422, file: !10053, line: 164, baseType: !10588, size: 64, offset: 1472)
!10588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10589, size: 64)
!10589 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_span", file: !10053, line: 164, flags: DIFlagFwdDecl)
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "trap", scope: !10422, file: !10053, line: 165, baseType: !10591, size: 64, offset: 1536)
!10591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10592, size: 64)
!10592 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_trap", file: !10053, line: 165, flags: DIFlagFwdDecl)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_ops", scope: !10422, file: !10053, line: 166, baseType: !10594, size: 64, offset: 1600)
!10594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10595, size: 64)
!10595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10596)
!10596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_kvdl_ops", file: !10053, line: 697, size: 448, elements: !10597)
!10597 = !{!10598, !10599, !10603, !10607, !10611, !10615, !10619}
!10598 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !10596, file: !10053, line: 698, baseType: !750, size: 64)
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10596, file: !10053, line: 699, baseType: !10600, size: 64, offset: 64)
!10600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10601, size: 64)
!10601 = !DISubroutineType(types: !10602)
!10602 = !{!7, !10421, !726}
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !10596, file: !10053, line: 700, baseType: !10604, size: 64, offset: 128)
!10604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10605, size: 64)
!10605 = !DISubroutineType(types: !10606)
!10606 = !{null, !10421, !726}
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !10596, file: !10053, line: 701, baseType: !10608, size: 64, offset: 192)
!10608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10609, size: 64)
!10609 = !DISubroutineType(types: !10610)
!10610 = !{!7, !10421, !726, !10061, !14, !1614}
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10596, file: !10053, line: 704, baseType: !10612, size: 64, offset: 256)
!10612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10613, size: 64)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{null, !10421, !726, !10061, !14, !7}
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size_query", scope: !10596, file: !10053, line: 707, baseType: !10616, size: 64, offset: 320)
!10616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10617, size: 64)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!7, !10421, !726, !10061, !14, !6822}
!10619 = !DIDerivedType(tag: DW_TAG_member, name: "resources_register", scope: !10596, file: !10053, line: 711, baseType: !10600, size: 64, offset: 384)
!10620 = !DIDerivedType(tag: DW_TAG_member, name: "afa_ops", scope: !10422, file: !10053, line: 167, baseType: !10621, size: 64, offset: 1664)
!10621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10622, size: 64)
!10622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10623)
!10623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afa_ops", file: !10561, line: 14, size: 768, elements: !10624)
!10624 = !{!10625, !10629, !10633, !10637, !10641, !10645, !10649, !10653, !10657, !10661, !10665, !10669}
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_set_add", scope: !10623, file: !10561, line: 15, baseType: !10626, size: 64)
!10626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10627, size: 64)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{!7, !726, !1614, !733, !696}
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_set_del", scope: !10623, file: !10561, line: 17, baseType: !10630, size: 64, offset: 64)
!10630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10631, size: 64)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{null, !726, !862, !696}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_set_activity_get", scope: !10623, file: !10561, line: 18, baseType: !10634, size: 64, offset: 128)
!10634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10635, size: 64)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{!7, !726, !862, !7192}
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_fwd_entry_add", scope: !10623, file: !10561, line: 20, baseType: !10638, size: 64, offset: 192)
!10638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10639, size: 64)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{!7, !726, !1614, !1551}
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_fwd_entry_del", scope: !10623, file: !10561, line: 21, baseType: !10642, size: 64, offset: 256)
!10642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10643, size: 64)
!10643 = !DISubroutineType(types: !10644)
!10644 = !{null, !726, !862}
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "counter_index_get", scope: !10623, file: !10561, line: 22, baseType: !10646, size: 64, offset: 320)
!10646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10647, size: 64)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{!7, !726, !6822}
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "counter_index_put", scope: !10623, file: !10561, line: 23, baseType: !10650, size: 64, offset: 384)
!10650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10651, size: 64)
!10651 = !DISubroutineType(types: !10652)
!10652 = !{null, !726, !14}
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_add", scope: !10623, file: !10561, line: 24, baseType: !10654, size: 64, offset: 448)
!10654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10655, size: 64)
!10655 = !DISubroutineType(types: !10656)
!10656 = !{!7, !726, !1551, !3015, !696, !695}
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_del", scope: !10623, file: !10561, line: 27, baseType: !10658, size: 64, offset: 512)
!10658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10659, size: 64)
!10659 = !DISubroutineType(types: !10660)
!10660 = !{null, !726, !1551, !7, !696}
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "policer_add", scope: !10623, file: !10561, line: 29, baseType: !10662, size: 64, offset: 576)
!10662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10663, size: 64)
!10663 = !DISubroutineType(types: !10664)
!10664 = !{!7, !726, !492, !862, !8502, !2625}
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "policer_del", scope: !10623, file: !10561, line: 32, baseType: !10666, size: 64, offset: 640)
!10666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10667, size: 64)
!10667 = !DISubroutineType(types: !10668)
!10668 = !{null, !726, !1192}
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_first_set", scope: !10623, file: !10561, line: 33, baseType: !696, size: 8, offset: 704)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "afk_ops", scope: !10422, file: !10053, line: 168, baseType: !10671, size: 64, offset: 1728)
!10671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10672, size: 64)
!10672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10673)
!10673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_ops", file: !10069, line: 174, size: 256, elements: !10674)
!10674 = !{!10675, !10706, !10707, !10711}
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !10673, file: !10069, line: 175, baseType: !10676, size: 64)
!10676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10677, size: 64)
!10677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10678)
!10678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_block", file: !10069, line: 114, size: 192, elements: !10679)
!10679 = !{!10680, !10681, !10705}
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !10678, file: !10069, line: 115, baseType: !1192, size: 16)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "instances", scope: !10678, file: !10069, line: 116, baseType: !10682, size: 64, offset: 64)
!10682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10683, size: 64)
!10683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_element_inst", file: !10069, line: 74, size: 320, elements: !10684)
!10684 = !{!10685, !10686, !10687, !10703, !10704}
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !10683, file: !10069, line: 75, baseType: !10068, size: 32)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10683, file: !10069, line: 76, baseType: !10097, size: 32, offset: 32)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !10683, file: !10069, line: 77, baseType: !10688, size: 192, offset: 64)
!10688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_item", file: !10689, line: 11, size: 192, elements: !10690)
!10689 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/item.h", directory: "/home/lizy2001/genbc/linux")
!10690 = !{!10691, !10692, !10693, !10694, !10695, !10696, !10697, !10702}
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10688, file: !10689, line: 12, baseType: !633, size: 16)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !10688, file: !10689, line: 13, baseType: !1400, size: 16, offset: 16)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "in_step_offset", scope: !10688, file: !10689, line: 14, baseType: !633, size: 16, offset: 32)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !10688, file: !10689, line: 15, baseType: !650, size: 8, offset: 48)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "element_size", scope: !10688, file: !10689, line: 16, baseType: !650, size: 8, offset: 56)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "no_real_shift", scope: !10688, file: !10689, line: 17, baseType: !696, size: 8, offset: 64)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10688, file: !10689, line: 21, baseType: !10698, size: 16, offset: 80)
!10698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10688, file: !10689, line: 18, size: 16, elements: !10699)
!10699 = !{!10700, !10701}
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !10698, file: !10689, line: 19, baseType: !650, size: 8)
!10701 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !10698, file: !10689, line: 20, baseType: !633, size: 16)
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10688, file: !10689, line: 22, baseType: !453, size: 64, offset: 128)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "u32_key_diff", scope: !10683, file: !10069, line: 78, baseType: !7, size: 32, offset: 256)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_size_check", scope: !10683, file: !10069, line: 81, baseType: !696, size: 8, offset: 288)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "instances_count", scope: !10678, file: !10069, line: 117, baseType: !14, size: 32, offset: 128)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_count", scope: !10673, file: !10069, line: 176, baseType: !14, size: 32, offset: 64)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "encode_block", scope: !10673, file: !10069, line: 177, baseType: !10708, size: 64, offset: 128)
!10708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10709, size: 64)
!10709 = !DISubroutineType(types: !10710)
!10710 = !{null, !733, !7, !733}
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !10673, file: !10069, line: 178, baseType: !10712, size: 64, offset: 192)
!10712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10713, size: 64)
!10713 = !DISubroutineType(types: !10714)
!10714 = !{null, !733, !7}
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "mr_tcam_ops", scope: !10422, file: !10053, line: 169, baseType: !10716, size: 64, offset: 1792)
!10716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10717, size: 64)
!10717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10718)
!10718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_mr_tcam_ops", file: !10053, line: 1166, size: 448, elements: !10719)
!10719 = !{!10720, !10721, !10722, !10723, !10724, !10732, !10736}
!10720 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !10718, file: !10053, line: 1167, baseType: !750, size: 64)
!10721 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10718, file: !10053, line: 1168, baseType: !10600, size: 64, offset: 64)
!10722 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !10718, file: !10053, line: 1169, baseType: !3877, size: 64, offset: 128)
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "route_priv_size", scope: !10718, file: !10053, line: 1170, baseType: !750, size: 64, offset: 192)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "route_create", scope: !10718, file: !10053, line: 1171, baseType: !10725, size: 64, offset: 256)
!10725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10726, size: 64)
!10726 = !DISubroutineType(types: !10727)
!10727 = !{!7, !10421, !726, !726, !10728, !10730, !10101}
!10728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10729, size: 64)
!10729 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_mr_route_key", file: !10053, line: 1164, flags: DIFlagFwdDecl)
!10730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10731, size: 64)
!10731 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afa_block", file: !10561, line: 12, flags: DIFlagFwdDecl)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "route_destroy", scope: !10718, file: !10053, line: 1176, baseType: !10733, size: 64, offset: 320)
!10733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10734, size: 64)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{null, !10421, !726, !726, !10728}
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "route_update", scope: !10718, file: !10053, line: 1179, baseType: !10737, size: 64, offset: 384)
!10737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10738, size: 64)
!10738 = !DISubroutineType(types: !10739)
!10739 = !{!7, !10421, !726, !10728, !10730}
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "acl_rulei_ops", scope: !10422, file: !10053, line: 170, baseType: !10741, size: 64, offset: 1856)
!10741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10742, size: 64)
!10742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10743)
!10743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_rulei_ops", file: !10053, line: 960, size: 64, elements: !10744)
!10744 = !{!10745}
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "act_mangle_field", scope: !10743, file: !10053, line: 961, baseType: !10746, size: 64)
!10746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10747, size: 64)
!10747 = !DISubroutineType(types: !10748)
!10748 = !{!7, !10421, !10749, !10773, !862, !2625}
!10749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10750, size: 64)
!10750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_rule_info", file: !10053, line: 734, size: 1344, elements: !10751)
!10751 = !{!10752, !10753, !10765, !10766, !10767, !10768, !10769, !10770, !10771, !10772}
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !10750, file: !10053, line: 735, baseType: !14, size: 32)
!10753 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !10750, file: !10053, line: 736, baseType: !10754, size: 1088, offset: 64)
!10754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_element_values", file: !10069, line: 200, size: 1088, elements: !10755)
!10755 = !{!10756, !10760}
!10756 = !DIDerivedType(tag: DW_TAG_member, name: "elusage", scope: !10754, file: !10069, line: 201, baseType: !10757, size: 64)
!10757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_element_usage", file: !10069, line: 127, size: 64, elements: !10758)
!10758 = !{!10759}
!10759 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !10757, file: !10069, line: 128, baseType: !1569, size: 64)
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !10754, file: !10069, line: 205, baseType: !10761, size: 1024, offset: 64)
!10761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10754, file: !10069, line: 202, size: 1024, elements: !10762)
!10762 = !{!10763, !10764}
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10761, file: !10069, line: 203, baseType: !5277, size: 512)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !10761, file: !10069, line: 204, baseType: !5277, size: 512, offset: 512)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "act_block", scope: !10750, file: !10053, line: 737, baseType: !10730, size: 64, offset: 1152)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "action_created", scope: !10750, file: !10053, line: 738, baseType: !1551, size: 1, offset: 1216, flags: DIFlagBitField, extraData: i64 1216)
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_bind_blocker", scope: !10750, file: !10053, line: 739, baseType: !1551, size: 1, offset: 1217, flags: DIFlagBitField, extraData: i64 1216)
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "egress_bind_blocker", scope: !10750, file: !10053, line: 740, baseType: !1551, size: 1, offset: 1218, flags: DIFlagBitField, extraData: i64 1216)
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "counter_valid", scope: !10750, file: !10053, line: 741, baseType: !1551, size: 1, offset: 1219, flags: DIFlagBitField, extraData: i64 1216)
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "policer_index_valid", scope: !10750, file: !10053, line: 742, baseType: !1551, size: 1, offset: 1220, flags: DIFlagBitField, extraData: i64 1216)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "counter_index", scope: !10750, file: !10053, line: 743, baseType: !14, size: 32, offset: 1248)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "policer_index", scope: !10750, file: !10053, line: 744, baseType: !1192, size: 16, offset: 1280)
!10773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10774, size: 64)
!10774 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_mangle_action", file: !10053, line: 958, flags: DIFlagFwdDecl)
!10775 = !DIDerivedType(tag: DW_TAG_member, name: "acl_tcam_ops", scope: !10422, file: !10053, line: 171, baseType: !10776, size: 64, offset: 1920)
!10776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10777, size: 64)
!10777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10778)
!10778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_tcam_ops", file: !10053, line: 973, size: 1152, elements: !10779)
!10779 = !{!10780, !10781, !10782, !10788, !10789, !10790, !10796, !10797, !10801, !10805, !10806, !10807, !10811, !10812, !10813, !10817, !10821, !10825}
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !10778, file: !10053, line: 974, baseType: !10107, size: 32)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !10778, file: !10053, line: 975, baseType: !750, size: 64, offset: 64)
!10782 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10778, file: !10053, line: 976, baseType: !10783, size: 64, offset: 128)
!10783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10784, size: 64)
!10784 = !DISubroutineType(types: !10785)
!10785 = !{!7, !10421, !726, !10786}
!10786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10787, size: 64)
!10787 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_tcam", file: !10053, line: 970, flags: DIFlagFwdDecl)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !10778, file: !10053, line: 978, baseType: !10604, size: 64, offset: 192)
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "region_priv_size", scope: !10778, file: !10053, line: 979, baseType: !750, size: 64, offset: 256)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "region_init", scope: !10778, file: !10053, line: 980, baseType: !10791, size: 64, offset: 320)
!10791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10792, size: 64)
!10792 = !DISubroutineType(types: !10793)
!10793 = !{!7, !10421, !726, !726, !10794, !726}
!10794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10795, size: 64)
!10795 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_tcam_region", file: !10053, line: 971, flags: DIFlagFwdDecl)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "region_fini", scope: !10778, file: !10053, line: 984, baseType: !10604, size: 64, offset: 384)
!10797 = !DIDerivedType(tag: DW_TAG_member, name: "region_associate", scope: !10778, file: !10053, line: 985, baseType: !10798, size: 64, offset: 448)
!10798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10799, size: 64)
!10799 = !DISubroutineType(types: !10800)
!10800 = !{!7, !10421, !10794}
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "region_rehash_hints_get", scope: !10778, file: !10053, line: 987, baseType: !10802, size: 64, offset: 512)
!10802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10803, size: 64)
!10803 = !DISubroutineType(types: !10804)
!10804 = !{!726, !726}
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "region_rehash_hints_put", scope: !10778, file: !10053, line: 988, baseType: !3877, size: 64, offset: 576)
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_priv_size", scope: !10778, file: !10053, line: 989, baseType: !750, size: 64, offset: 640)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_init", scope: !10778, file: !10053, line: 990, baseType: !10808, size: 64, offset: 704)
!10808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10809, size: 64)
!10809 = !DISubroutineType(types: !10810)
!10810 = !{null, !726, !726, !14}
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_fini", scope: !10778, file: !10053, line: 992, baseType: !3877, size: 64, offset: 768)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "entry_priv_size", scope: !10778, file: !10053, line: 993, baseType: !750, size: 64, offset: 832)
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "entry_add", scope: !10778, file: !10053, line: 994, baseType: !10814, size: 64, offset: 896)
!10814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10815, size: 64)
!10815 = !DISubroutineType(types: !10816)
!10816 = !{!7, !10421, !726, !726, !726, !10749}
!10817 = !DIDerivedType(tag: DW_TAG_member, name: "entry_del", scope: !10778, file: !10053, line: 998, baseType: !10818, size: 64, offset: 960)
!10818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10819, size: 64)
!10819 = !DISubroutineType(types: !10820)
!10820 = !{null, !10421, !726, !726, !726}
!10821 = !DIDerivedType(tag: DW_TAG_member, name: "entry_action_replace", scope: !10778, file: !10053, line: 1001, baseType: !10822, size: 64, offset: 1024)
!10822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10823, size: 64)
!10823 = !DISubroutineType(types: !10824)
!10824 = !{!7, !10421, !726, !726, !10749}
!10825 = !DIDerivedType(tag: DW_TAG_member, name: "entry_activity_get", scope: !10778, file: !10053, line: 1004, baseType: !10826, size: 64, offset: 1088)
!10826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10827, size: 64)
!10827 = !DISubroutineType(types: !10828)
!10828 = !{!7, !10421, !726, !726, !7192}
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "nve_ops_arr", scope: !10422, file: !10053, line: 172, baseType: !10830, size: 64, offset: 1984)
!10830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10831, size: 64)
!10831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10832, size: 64)
!10832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10833)
!10833 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_nve_ops", file: !10053, line: 127, flags: DIFlagFwdDecl)
!10834 = !DIDerivedType(tag: DW_TAG_member, name: "rif_ops_arr", scope: !10422, file: !10053, line: 173, baseType: !10531, size: 64, offset: 2048)
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "sb_vals", scope: !10422, file: !10053, line: 174, baseType: !10836, size: 64, offset: 2112)
!10836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10837, size: 64)
!10837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10838)
!10838 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_sb_vals", file: !10053, line: 129, flags: DIFlagFwdDecl)
!10839 = !DIDerivedType(tag: DW_TAG_member, name: "sb_ops", scope: !10422, file: !10053, line: 175, baseType: !10840, size: 64, offset: 2176)
!10840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10841, size: 64)
!10841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10842)
!10842 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_sb_ops", file: !10053, line: 128, flags: DIFlagFwdDecl)
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_speed_ops", scope: !10422, file: !10053, line: 176, baseType: !10844, size: 64, offset: 2240)
!10844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10845, size: 64)
!10845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10846)
!10846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_type_speed_ops", file: !10053, line: 325, size: 640, elements: !10847)
!10847 = !{!10848, !10852, !10856, !10860, !10864, !10868, !10872, !10876, !10880, !10884}
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_supported_port", scope: !10846, file: !10053, line: 326, baseType: !10849, size: 64)
!10849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10850, size: 64)
!10850 = !DISubroutineType(types: !10851)
!10851 = !{null, !10421, !862, !9186}
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_link", scope: !10846, file: !10053, line: 329, baseType: !10853, size: 64, offset: 64)
!10853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10854, size: 64)
!10854 = !DISubroutineType(types: !10855)
!10855 = !{null, !10421, !862, !1551, !2608}
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_speed", scope: !10846, file: !10053, line: 331, baseType: !10857, size: 64, offset: 128)
!10857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10858, size: 64)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{!862, !10421, !862}
!10860 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_speed_duplex", scope: !10846, file: !10053, line: 332, baseType: !10861, size: 64, offset: 192)
!10861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10862, size: 64)
!10862 = !DISubroutineType(types: !10863)
!10863 = !{null, !10421, !696, !862, !9186}
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "ptys_max_speed", scope: !10846, file: !10053, line: 335, baseType: !10865, size: 64, offset: 256)
!10865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10866, size: 64)
!10866 = !DISubroutineType(types: !10867)
!10867 = !{!7, !10406, !1614}
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "to_ptys_advert_link", scope: !10846, file: !10053, line: 336, baseType: !10869, size: 64, offset: 320)
!10869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10870, size: 64)
!10870 = !DISubroutineType(types: !10871)
!10871 = !{!862, !10421, !1551, !9224}
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "to_ptys_speed", scope: !10846, file: !10053, line: 338, baseType: !10873, size: 64, offset: 384)
!10873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10874, size: 64)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!862, !10421, !1551, !862}
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "reg_ptys_eth_pack", scope: !10846, file: !10053, line: 339, baseType: !10877, size: 64, offset: 448)
!10877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10878, size: 64)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{null, !10421, !733, !1551, !862, !696}
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "reg_ptys_eth_unpack", scope: !10846, file: !10053, line: 341, baseType: !10881, size: 64, offset: 512)
!10881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10882, size: 64)
!10882 = !DISubroutineType(types: !10883)
!10883 = !{null, !10421, !733, !1614, !1614, !1614}
!10884 = !DIDerivedType(tag: DW_TAG_member, name: "ptys_proto_cap_masked_get", scope: !10846, file: !10053, line: 345, baseType: !10885, size: 64, offset: 576)
!10885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10886, size: 64)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!862, !862}
!10888 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_ops", scope: !10422, file: !10053, line: 177, baseType: !10889, size: 64, offset: 2304)
!10889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10890, size: 64)
!10890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10891)
!10891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_ops", file: !10053, line: 186, size: 832, elements: !10892)
!10892 = !{!10893, !10897, !10901, !10905, !10909, !10913, !10914, !10925, !10926, !10927, !10931, !10935, !10939}
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "clock_init", scope: !10891, file: !10053, line: 188, baseType: !10894, size: 64)
!10894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10895, size: 64)
!10895 = !DISubroutineType(types: !10896)
!10896 = !{!10579, !10421, !4753}
!10897 = !DIDerivedType(tag: DW_TAG_member, name: "clock_fini", scope: !10891, file: !10053, line: 189, baseType: !10898, size: 64, offset: 64)
!10898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10899, size: 64)
!10899 = !DISubroutineType(types: !10900)
!10900 = !{null, !10579}
!10901 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10891, file: !10053, line: 191, baseType: !10902, size: 64, offset: 128)
!10902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10903, size: 64)
!10903 = !DISubroutineType(types: !10904)
!10904 = !{!10582, !10421}
!10905 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !10891, file: !10053, line: 192, baseType: !10906, size: 64, offset: 192)
!10906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10907, size: 64)
!10907 = !DISubroutineType(types: !10908)
!10908 = !{null, !10582}
!10909 = !DIDerivedType(tag: DW_TAG_member, name: "receive", scope: !10891, file: !10053, line: 197, baseType: !10910, size: 64, offset: 256)
!10910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10911, size: 64)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{null, !10421, !576, !1551}
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "transmitted", scope: !10891, file: !10053, line: 203, baseType: !10910, size: 64, offset: 320)
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_get", scope: !10891, file: !10053, line: 206, baseType: !10915, size: 64, offset: 384)
!10915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10916, size: 64)
!10916 = !DISubroutineType(types: !10917)
!10917 = !{!7, !10406, !10918}
!10918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10919, size: 64)
!10919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hwtstamp_config", file: !10920, line: 62, size: 96, elements: !10921)
!10920 = !DIFile(filename: "./include/uapi/linux/net_tstamp.h", directory: "/home/lizy2001/genbc/linux")
!10921 = !{!10922, !10923, !10924}
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10919, file: !10920, line: 63, baseType: !7, size: 32)
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "tx_type", scope: !10919, file: !10920, line: 64, baseType: !7, size: 32, offset: 32)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filter", scope: !10919, file: !10920, line: 65, baseType: !7, size: 32, offset: 64)
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_set", scope: !10891, file: !10053, line: 208, baseType: !10915, size: 64, offset: 448)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "shaper_work", scope: !10891, file: !10053, line: 210, baseType: !1967, size: 64, offset: 512)
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !10891, file: !10053, line: 211, baseType: !10928, size: 64, offset: 576)
!10928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10929, size: 64)
!10929 = !DISubroutineType(types: !10930)
!10930 = !{!7, !10421, !9119}
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats_count", scope: !10891, file: !10053, line: 213, baseType: !10932, size: 64, offset: 640)
!10932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10933, size: 64)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{!7}
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats_strings", scope: !10891, file: !10053, line: 214, baseType: !10936, size: 64, offset: 704)
!10936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10937, size: 64)
!10937 = !DISubroutineType(types: !10938)
!10938 = !{null, !9279}
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats", scope: !10891, file: !10053, line: 215, baseType: !10940, size: 64, offset: 768)
!10940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10941, size: 64)
!10941 = !DISubroutineType(types: !10942)
!10942 = !{null, !10406, !3925, !7}
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "span_ops", scope: !10422, file: !10053, line: 178, baseType: !10944, size: 64, offset: 2368)
!10944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10945, size: 64)
!10945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10946)
!10946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_span_ops", file: !10947, line: 48, size: 128, elements: !10948)
!10947 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h", directory: "/home/lizy2001/genbc/linux")
!10948 = !{!10949, !10953}
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10946, file: !10947, line: 49, baseType: !10950, size: 64)
!10950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10951, size: 64)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{!7, !10421}
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "policer_id_base_set", scope: !10946, file: !10947, line: 50, baseType: !10954, size: 64, offset: 64)
!10954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10955, size: 64)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{!7, !10421, !1192}
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "policer_core_ops", scope: !10422, file: !10053, line: 179, baseType: !10958, size: 64, offset: 2432)
!10958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10959, size: 64)
!10959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10960)
!10960 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_policer_core_ops", file: !10053, line: 179, flags: DIFlagFwdDecl)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "trap_ops", scope: !10422, file: !10053, line: 180, baseType: !10962, size: 64, offset: 2496)
!10962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10963, size: 64)
!10963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10964)
!10964 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_trap_ops", file: !10053, line: 180, flags: DIFlagFwdDecl)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "listeners", scope: !10422, file: !10053, line: 181, baseType: !10966, size: 64, offset: 2560)
!10966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10967, size: 64)
!10967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10968)
!10968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_listener", file: !10434, line: 76, size: 320, elements: !10969)
!10969 = !{!10970, !10971, !10999, !11000, !11001, !11002, !11003, !11004, !11005}
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !10968, file: !10434, line: 77, baseType: !1192, size: 16)
!10971 = !DIDerivedType(tag: DW_TAG_member, scope: !10968, file: !10434, line: 78, baseType: !10972, size: 128, offset: 64)
!10972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10968, file: !10434, line: 78, size: 128, elements: !10973)
!10973 = !{!10974, !10984}
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "rx_listener", scope: !10972, file: !10434, line: 79, baseType: !10975, size: 128)
!10975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_rx_listener", file: !10434, line: 63, size: 128, elements: !10976)
!10976 = !{!10977, !10981, !10982, !10983}
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10975, file: !10434, line: 64, baseType: !10978, size: 64)
!10978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10979, size: 64)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{null, !576, !1551, !726}
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !10975, file: !10434, line: 65, baseType: !1551, size: 8, offset: 64)
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_reason", scope: !10975, file: !10434, line: 66, baseType: !1551, size: 8, offset: 72)
!10983 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !10975, file: !10434, line: 67, baseType: !1192, size: 16, offset: 80)
!10984 = !DIDerivedType(tag: DW_TAG_member, name: "event_listener", scope: !10972, file: !10434, line: 80, baseType: !10985, size: 128)
!10985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_event_listener", file: !10434, line: 70, size: 128, elements: !10986)
!10986 = !{!10987, !10998}
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10985, file: !10434, line: 71, baseType: !10988, size: 64)
!10988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10989, size: 64)
!10989 = !DISubroutineType(types: !10990)
!10990 = !{null, !10991, !733, !726}
!10991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10992, size: 64)
!10992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10993)
!10993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_reg_info", file: !10048, line: 15, size: 128, elements: !10994)
!10994 = !{!10995, !10996, !10997}
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10993, file: !10048, line: 16, baseType: !1192, size: 16)
!10996 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10993, file: !10048, line: 17, baseType: !1192, size: 16, offset: 16)
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10993, file: !10048, line: 18, baseType: !453, size: 64, offset: 64)
!10998 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !10985, file: !10434, line: 73, baseType: !10111, size: 32, offset: 64)
!10999 = !DIDerivedType(tag: DW_TAG_member, name: "en_action", scope: !10968, file: !10434, line: 82, baseType: !10120, size: 32, offset: 192)
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "dis_action", scope: !10968, file: !10434, line: 83, baseType: !10120, size: 32, offset: 224)
!11001 = !DIDerivedType(tag: DW_TAG_member, name: "en_trap_group", scope: !10968, file: !10434, line: 84, baseType: !1551, size: 8, offset: 256)
!11002 = !DIDerivedType(tag: DW_TAG_member, name: "dis_trap_group", scope: !10968, file: !10434, line: 85, baseType: !1551, size: 8, offset: 264)
!11003 = !DIDerivedType(tag: DW_TAG_member, name: "is_ctrl", scope: !10968, file: !10434, line: 86, baseType: !1551, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!11004 = !DIDerivedType(tag: DW_TAG_member, name: "is_event", scope: !10968, file: !10434, line: 87, baseType: !1551, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!11005 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_on_register", scope: !10968, file: !10434, line: 88, baseType: !1551, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!11006 = !DIDerivedType(tag: DW_TAG_member, name: "listeners_count", scope: !10422, file: !10053, line: 182, baseType: !750, size: 64, offset: 2624)
!11007 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_shaper_bs", scope: !10422, file: !10053, line: 183, baseType: !862, size: 32, offset: 2688)
!11008 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !10407, file: !10053, line: 277, baseType: !1551, size: 8, offset: 192)
!11009 = !DIDerivedType(tag: DW_TAG_member, name: "lagged", scope: !10407, file: !10053, line: 278, baseType: !1551, size: 1, offset: 200, flags: DIFlagBitField, extraData: i64 200)
!11010 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !10407, file: !10053, line: 279, baseType: !1551, size: 1, offset: 201, flags: DIFlagBitField, extraData: i64 200)
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "pvid", scope: !10407, file: !10053, line: 280, baseType: !1192, size: 16, offset: 208)
!11012 = !DIDerivedType(tag: DW_TAG_member, name: "lag_id", scope: !10407, file: !10053, line: 281, baseType: !1192, size: 16, offset: 224)
!11013 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !10407, file: !10053, line: 286, baseType: !11014, size: 8, offset: 240)
!11014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10407, file: !10053, line: 282, size: 8, elements: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !11014, file: !10053, line: 283, baseType: !1551, size: 1, flags: DIFlagBitField, extraData: i64 0)
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !11014, file: !10053, line: 284, baseType: !1551, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !11014, file: !10053, line: 285, baseType: !1551, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!11019 = !DIDerivedType(tag: DW_TAG_member, name: "dcb", scope: !10407, file: !10053, line: 292, baseType: !11020, size: 256, offset: 256)
!11020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10407, file: !10053, line: 287, size: 256, elements: !11021)
!11021 = !{!11022, !11038, !11044, !11054}
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "ets", scope: !11020, file: !10053, line: 288, baseType: !11023, size: 64)
!11023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11024, size: 64)
!11024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee_ets", file: !11025, line: 58, size: 472, elements: !11026)
!11025 = !DIFile(filename: "./include/uapi/linux/dcbnl.h", directory: "/home/lizy2001/genbc/linux")
!11026 = !{!11027, !11028, !11029, !11030, !11032, !11033, !11034, !11035, !11036, !11037}
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "willing", scope: !11024, file: !11025, line: 59, baseType: !1552, size: 8)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "ets_cap", scope: !11024, file: !11025, line: 60, baseType: !1552, size: 8, offset: 8)
!11029 = !DIDerivedType(tag: DW_TAG_member, name: "cbs", scope: !11024, file: !11025, line: 61, baseType: !1552, size: 8, offset: 16)
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "tc_tx_bw", scope: !11024, file: !11025, line: 62, baseType: !11031, size: 64, offset: 24)
!11031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 64, elements: !1525)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "tc_rx_bw", scope: !11024, file: !11025, line: 63, baseType: !11031, size: 64, offset: 88)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "tc_tsa", scope: !11024, file: !11025, line: 64, baseType: !11031, size: 64, offset: 152)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc", scope: !11024, file: !11025, line: 65, baseType: !11031, size: 64, offset: 216)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "tc_reco_bw", scope: !11024, file: !11025, line: 66, baseType: !11031, size: 64, offset: 280)
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "tc_reco_tsa", scope: !11024, file: !11025, line: 67, baseType: !11031, size: 64, offset: 344)
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "reco_prio_tc", scope: !11024, file: !11025, line: 68, baseType: !11031, size: 64, offset: 408)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "maxrate", scope: !11020, file: !10053, line: 289, baseType: !11039, size: 64, offset: 64)
!11039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11040, size: 64)
!11040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee_maxrate", file: !11025, line: 78, size: 512, elements: !11041)
!11041 = !{!11042}
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "tc_maxrate", scope: !11040, file: !11025, line: 79, baseType: !11043, size: 512)
!11043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 512, elements: !1525)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "pfc", scope: !11020, file: !10053, line: 290, baseType: !11045, size: 64, offset: 128)
!11045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11046, size: 64)
!11046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee_pfc", file: !11025, line: 157, size: 1088, elements: !11047)
!11047 = !{!11048, !11049, !11050, !11051, !11052, !11053}
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "pfc_cap", scope: !11046, file: !11025, line: 158, baseType: !1552, size: 8)
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "pfc_en", scope: !11046, file: !11025, line: 159, baseType: !1552, size: 8, offset: 8)
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "mbc", scope: !11046, file: !11025, line: 160, baseType: !1552, size: 8, offset: 16)
!11051 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !11046, file: !11025, line: 161, baseType: !632, size: 16, offset: 32)
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "requests", scope: !11046, file: !11025, line: 162, baseType: !11043, size: 512, offset: 64)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "indications", scope: !11046, file: !11025, line: 163, baseType: !11043, size: 512, offset: 576)
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "trust_state", scope: !11020, file: !10053, line: 291, baseType: !10047, size: 32, offset: 192)
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !10407, file: !10053, line: 293, baseType: !10464, size: 24, offset: 512)
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_hw_stats", scope: !10407, file: !10053, line: 303, baseType: !11057, size: 6400, offset: 576)
!11057 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10407, file: !10053, line: 298, size: 6400, elements: !11058)
!11058 = !{!11059, !11060, !11070}
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !11057, file: !10053, line: 300, baseType: !8032, size: 1536)
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !11057, file: !10053, line: 301, baseType: !11061, size: 4160, offset: 1536)
!11061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_xstats", file: !10053, line: 254, size: 4160, elements: !11062)
!11062 = !{!11063, !11064, !11066, !11067, !11068, !11069}
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "ecn", scope: !11061, file: !10053, line: 255, baseType: !492, size: 64)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "wred_drop", scope: !11061, file: !10053, line: 256, baseType: !11065, size: 1024, offset: 64)
!11065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 1024, elements: !430)
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "tail_drop", scope: !11061, file: !10053, line: 257, baseType: !11065, size: 1024, offset: 1088)
!11067 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !11061, file: !10053, line: 258, baseType: !11065, size: 1024, offset: 2112)
!11068 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !11061, file: !10053, line: 259, baseType: !5103, size: 512, offset: 3136)
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !11061, file: !10053, line: 260, baseType: !5103, size: 512, offset: 3648)
!11070 = !DIDerivedType(tag: DW_TAG_member, name: "update_dw", scope: !11057, file: !10053, line: 302, baseType: !3085, size: 704, offset: 5696)
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !10407, file: !10053, line: 304, baseType: !11072, size: 64, offset: 6976)
!11072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11073, size: 64)
!11073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_sample", file: !10053, line: 234, size: 192, elements: !11074)
!11074 = !{!11075, !11086, !11087, !11088}
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "psample_group", scope: !11073, file: !10053, line: 235, baseType: !11076, size: 64)
!11076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11077, size: 64)
!11077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "psample_group", file: !11078, line: 8, size: 448, elements: !11079)
!11078 = !DIFile(filename: "./include/net/psample.h", directory: "/home/lizy2001/genbc/linux")
!11079 = !{!11080, !11081, !11082, !11083, !11084, !11085}
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11077, file: !11078, line: 9, baseType: !445, size: 128)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !11077, file: !11078, line: 10, baseType: !2115, size: 64, offset: 128)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "group_num", scope: !11077, file: !11078, line: 11, baseType: !862, size: 32, offset: 192)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !11077, file: !11078, line: 12, baseType: !862, size: 32, offset: 224)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !11077, file: !11078, line: 13, baseType: !862, size: 32, offset: 256)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !11077, file: !11078, line: 14, baseType: !460, size: 128, align: 64, offset: 320)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "trunc_size", scope: !11073, file: !10053, line: 236, baseType: !862, size: 32, offset: 64)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !11073, file: !10053, line: 237, baseType: !862, size: 32, offset: 96)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "truncate", scope: !11073, file: !10053, line: 238, baseType: !696, size: 8, offset: 128)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "vlans_list", scope: !10407, file: !10053, line: 305, baseType: !445, size: 128, offset: 7040)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "default_vlan", scope: !10407, file: !10053, line: 306, baseType: !11091, size: 64, offset: 7168)
!11091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11092, size: 64)
!11092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_vlan", file: !10053, line: 244, size: 512, elements: !11093)
!11093 = !{!11094, !11095, !11096, !11099, !11100, !11101}
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11092, file: !10053, line: 245, baseType: !445, size: 128)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp_port", scope: !11092, file: !10053, line: 246, baseType: !10406, size: 64, offset: 128)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "fid", scope: !11092, file: !10053, line: 247, baseType: !11097, size: 64, offset: 192)
!11097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11098, size: 64)
!11098 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_fid", file: !10053, line: 242, flags: DIFlagFwdDecl)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !11092, file: !10053, line: 248, baseType: !1192, size: 16, offset: 256)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_port", scope: !11092, file: !10053, line: 249, baseType: !10389, size: 64, offset: 320)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_vlan_node", scope: !11092, file: !10053, line: 250, baseType: !445, size: 128, offset: 384)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !10407, file: !10053, line: 307, baseType: !11103, size: 64, offset: 7232)
!11103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11104, size: 64)
!11104 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_qdisc_state", file: !10053, line: 134, flags: DIFlagFwdDecl)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "acl_rule_count", scope: !10407, file: !10053, line: 308, baseType: !14, size: 32, offset: 7296)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "ing_flow_block", scope: !10407, file: !10053, line: 309, baseType: !11107, size: 64, offset: 7360)
!11107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11108, size: 64)
!11108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_flow_block", file: !10053, line: 748, size: 704, elements: !11109)
!11109 = !{!11110, !11111, !11117, !11120, !11121, !11122, !11123, !11124, !11125, !11126, !11127}
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "binding_list", scope: !11108, file: !10053, line: 749, baseType: !445, size: 128)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !11108, file: !10053, line: 754, baseType: !11112, size: 192, offset: 128)
!11112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11108, file: !10053, line: 750, size: 192, elements: !11113)
!11113 = !{!11114, !11115, !11116}
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11112, file: !10053, line: 751, baseType: !445, size: 128)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "min_prio", scope: !11112, file: !10053, line: 752, baseType: !14, size: 32, offset: 128)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "max_prio", scope: !11112, file: !10053, line: 753, baseType: !14, size: 32, offset: 160)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "ruleset_zero", scope: !11108, file: !10053, line: 755, baseType: !11118, size: 64, offset: 320)
!11118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11119, size: 64)
!11119 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_ruleset", file: !10053, line: 755, flags: DIFlagFwdDecl)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp", scope: !11108, file: !10053, line: 756, baseType: !10421, size: 64, offset: 384)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "rule_count", scope: !11108, file: !10053, line: 757, baseType: !14, size: 32, offset: 448)
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "disable_count", scope: !11108, file: !10053, line: 758, baseType: !14, size: 32, offset: 480)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_blocker_rule_count", scope: !11108, file: !10053, line: 759, baseType: !14, size: 32, offset: 512)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "egress_blocker_rule_count", scope: !11108, file: !10053, line: 760, baseType: !14, size: 32, offset: 544)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_binding_count", scope: !11108, file: !10053, line: 761, baseType: !14, size: 32, offset: 576)
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "egress_binding_count", scope: !11108, file: !10053, line: 762, baseType: !14, size: 32, offset: 608)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !11108, file: !10053, line: 763, baseType: !2115, size: 64, offset: 640)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "eg_flow_block", scope: !10407, file: !10053, line: 310, baseType: !11107, size: 64, offset: 7424)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "ptp", scope: !10407, file: !10053, line: 317, baseType: !11130, size: 1088, offset: 7488)
!11130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10407, file: !10053, line: 311, size: 1088, elements: !11131)
!11131 = !{!11132, !11133, !11134, !11135, !11136}
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "shaper_dw", scope: !11130, file: !10053, line: 312, baseType: !3085, size: 704)
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_config", scope: !11130, file: !10053, line: 313, baseType: !10919, size: 96, offset: 704)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "ing_types", scope: !11130, file: !10053, line: 314, baseType: !1192, size: 16, offset: 800)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "egr_types", scope: !11130, file: !10053, line: 315, baseType: !1192, size: 16, offset: 816)
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !11130, file: !10053, line: 316, baseType: !11137, size: 256, offset: 832)
!11137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_port_stats", file: !10053, line: 268, size: 256, elements: !11138)
!11138 = !{!11139, !11144}
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "rx_gcd", scope: !11137, file: !10053, line: 269, baseType: !11140, size: 128)
!11140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_port_dir_stats", file: !10053, line: 263, size: 128, elements: !11141)
!11141 = !{!11142, !11143}
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !11140, file: !10053, line: 264, baseType: !492, size: 64)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "timestamps", scope: !11140, file: !10053, line: 265, baseType: !492, size: 64, offset: 64)
!11144 = !DIDerivedType(tag: DW_TAG_member, name: "tx_gcd", scope: !11137, file: !10053, line: 270, baseType: !11140, size: 128, offset: 128)
!11145 = !DIDerivedType(tag: DW_TAG_member, name: "split_base_local_port", scope: !10407, file: !10053, line: 318, baseType: !1551, size: 8, offset: 8576)
!11146 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !10407, file: !10053, line: 319, baseType: !7, size: 32, offset: 8608)
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed", scope: !10407, file: !10053, line: 320, baseType: !862, size: 32, offset: 8640)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "hdroom", scope: !10407, file: !10053, line: 321, baseType: !11149, size: 64, offset: 8704)
!11149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11150, size: 64)
!11150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_hdroom", file: !10053, line: 459, size: 1728, elements: !11151)
!11151 = !{!11152, !11153, !11164, !11175, !11181, !11182}
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !11150, file: !10053, line: 460, baseType: !10052, size: 32)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "prios", scope: !11150, file: !10053, line: 464, baseType: !11154, size: 256, offset: 32)
!11154 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11150, file: !10053, line: 462, size: 256, elements: !11155)
!11155 = !{!11156}
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11154, file: !10053, line: 463, baseType: !11157, size: 256)
!11157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11158, size: 256, elements: !1525)
!11158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_hdroom_prio", file: !10053, line: 432, size: 32, elements: !11159)
!11159 = !{!11160, !11161, !11162, !11163}
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "buf_idx", scope: !11158, file: !10053, line: 436, baseType: !1551, size: 8)
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "ets_buf_idx", scope: !11158, file: !10053, line: 438, baseType: !1551, size: 8, offset: 8)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "set_buf_idx", scope: !11158, file: !10053, line: 440, baseType: !1551, size: 8, offset: 16)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "lossy", scope: !11158, file: !10053, line: 441, baseType: !696, size: 8, offset: 24)
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !11150, file: !10053, line: 467, baseType: !11165, size: 1280, offset: 288)
!11165 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11150, file: !10053, line: 465, size: 1280, elements: !11166)
!11166 = !{!11167}
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !11165, file: !10053, line: 466, baseType: !11168, size: 1280)
!11168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11169, size: 1280, elements: !2063)
!11169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_hdroom_buf", file: !10053, line: 444, size: 128, elements: !11170)
!11170 = !{!11171, !11172, !11173, !11174}
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "thres_cells", scope: !11169, file: !10053, line: 445, baseType: !862, size: 32)
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "size_cells", scope: !11169, file: !10053, line: 446, baseType: !862, size: 32, offset: 32)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "set_size_cells", scope: !11169, file: !10053, line: 448, baseType: !862, size: 32, offset: 64)
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "lossy", scope: !11169, file: !10053, line: 449, baseType: !696, size: 8, offset: 96)
!11175 = !DIDerivedType(tag: DW_TAG_member, name: "int_buf", scope: !11150, file: !10053, line: 478, baseType: !11176, size: 96, offset: 1568)
!11176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11150, file: !10053, line: 468, size: 96, elements: !11177)
!11177 = !{!11178, !11179, !11180}
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "size_cells", scope: !11176, file: !10053, line: 472, baseType: !862, size: 32)
!11179 = !DIDerivedType(tag: DW_TAG_member, name: "reserve_cells", scope: !11176, file: !10053, line: 476, baseType: !862, size: 32, offset: 32)
!11180 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !11176, file: !10053, line: 477, baseType: !696, size: 8, offset: 64)
!11181 = !DIDerivedType(tag: DW_TAG_member, name: "delay_bytes", scope: !11150, file: !10053, line: 479, baseType: !7, size: 32, offset: 1664)
!11182 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !11150, file: !10053, line: 480, baseType: !7, size: 32, offset: 1696)
!11183 = !DIDerivedType(tag: DW_TAG_member, name: "module_overheat_initial_val", scope: !10407, file: !10053, line: 322, baseType: !492, size: 64, offset: 8768)
!11184 = !DIDerivedType(tag: DW_TAG_member, name: "port_leave", scope: !10383, file: !3, line: 84, baseType: !11185, size: 64, offset: 64)
!11185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11186, size: 64)
!11186 = !DISubroutineType(types: !11187)
!11187 = !{null, !10370, !10389, !10406}
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "vxlan_join", scope: !10383, file: !3, line: 87, baseType: !11189, size: 64, offset: 128)
!11189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11190, size: 64)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{!7, !10370, !3015, !1192, !2625}
!11192 = !DIDerivedType(tag: DW_TAG_member, name: "fid_get", scope: !10383, file: !3, line: 91, baseType: !11193, size: 64, offset: 192)
!11193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11194, size: 64)
!11194 = !DISubroutineType(types: !11195)
!11195 = !{!11097, !10370, !1192, !2625}
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "fid_lookup", scope: !10383, file: !3, line: 94, baseType: !11197, size: 64, offset: 256)
!11197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11198, size: 64)
!11198 = !DISubroutineType(types: !11199)
!11199 = !{!11097, !10370, !1192}
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "fid_vid", scope: !10383, file: !3, line: 96, baseType: !11201, size: 64, offset: 320)
!11201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11202, size: 64)
!11202 = !DISubroutineType(types: !11203)
!11203 = !{!1192, !10370, !11204}
!11204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11205, size: 64)
!11205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11098)
!11206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11207, size: 64)
!11207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_bridge_vlan", file: !3, line: 73, size: 320, elements: !11208)
!11208 = !{!11209, !11210, !11211}
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11207, file: !3, line: 74, baseType: !445, size: 128)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "port_vlan_list", scope: !11207, file: !3, line: 75, baseType: !445, size: 128, offset: 128)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !11207, file: !3, line: 76, baseType: !1192, size: 16, offset: 256)
!11212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11213, size: 64)
!11213 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !448)
!11214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!11215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11216, size: 64)
!11216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_mid", file: !10053, line: 105, size: 320, elements: !11217)
!11217 = !{!11218, !11219, !11220, !11221, !11222, !11223}
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11216, file: !10053, line: 106, baseType: !445, size: 128)
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !11216, file: !10053, line: 107, baseType: !9014, size: 48, offset: 128)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "fid", scope: !11216, file: !10053, line: 108, baseType: !1192, size: 16, offset: 176)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !11216, file: !10053, line: 109, baseType: !1192, size: 16, offset: 192)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "in_hw", scope: !11216, file: !10053, line: 110, baseType: !696, size: 8, offset: 208)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "ports_in_mid", scope: !11216, file: !10053, line: 111, baseType: !2608, size: 64, offset: 256)
!11224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11225, size: 64)
!11225 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !429)
!11226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!11227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11228, size: 64)
!11228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_notifier_fdb_info", file: !10207, line: 224, size: 256, elements: !11229)
!11229 = !{!11230, !11235, !11236, !11237, !11238}
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !11228, file: !10207, line: 225, baseType: !11231, size: 128)
!11231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_notifier_info", file: !10207, line: 219, size: 128, elements: !11232)
!11232 = !{!11233, !11234}
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11231, file: !10207, line: 220, baseType: !451, size: 64)
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !11231, file: !10207, line: 221, baseType: !2625, size: 64, offset: 64)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !11228, file: !10207, line: 226, baseType: !866, size: 64, offset: 128)
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !11228, file: !10207, line: 227, baseType: !1192, size: 16, offset: 192)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "added_by_user", scope: !11228, file: !10207, line: 228, baseType: !1551, size: 1, offset: 208, flags: DIFlagBitField, extraData: i64 208)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "offloaded", scope: !11228, file: !10207, line: 229, baseType: !1551, size: 1, offset: 209, flags: DIFlagBitField, extraData: i64 208)
!11239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11240, size: 64)
!11240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_switchdev_event_work", file: !3, line: 2733, size: 960, elements: !11241)
!11241 = !{!11242, !11243, !11284, !11285}
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !11240, file: !3, line: 2734, baseType: !1960, size: 256)
!11243 = !DIDerivedType(tag: DW_TAG_member, scope: !11240, file: !3, line: 2735, baseType: !11244, size: 576, offset: 256)
!11244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11240, file: !3, line: 2735, size: 576, elements: !11245)
!11245 = !{!11246, !11247}
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_info", scope: !11244, file: !3, line: 2736, baseType: !11228, size: 256)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "vxlan_fdb_info", scope: !11244, file: !3, line: 2737, baseType: !11248, size: 576)
!11248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_notifier_vxlan_fdb_info", file: !11249, line: 422, size: 576, elements: !11250)
!11249 = !DIFile(filename: "./include/net/vxlan.h", directory: "/home/lizy2001/genbc/linux")
!11250 = !{!11251, !11252, !11276, !11277, !11278, !11279, !11281, !11282, !11283}
!11251 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !11248, file: !11249, line: 423, baseType: !11231, size: 128)
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !11248, file: !11249, line: 424, baseType: !11253, size: 224, offset: 128)
!11253 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vxlan_addr", file: !11249, line: 192, size: 224, elements: !11254)
!11254 = !{!11255, !11267, !11275}
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !11253, file: !11249, line: 193, baseType: !11256, size: 128)
!11256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !11257, line: 237, size: 128, elements: !11258)
!11257 = !DIFile(filename: "./include/uapi/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!11258 = !{!11259, !11260, !11261, !11265}
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !11256, file: !11257, line: 238, baseType: !680, size: 16)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !11256, file: !11257, line: 239, baseType: !645, size: 16, offset: 16)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !11256, file: !11257, line: 240, baseType: !11262, size: 32, offset: 32)
!11262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !11257, line: 89, size: 32, elements: !11263)
!11263 = !{!11264}
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !11262, file: !11257, line: 90, baseType: !622, size: 32)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !11256, file: !11257, line: 243, baseType: !11266, size: 64, offset: 64)
!11266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 64, elements: !1525)
!11267 = !DIDerivedType(tag: DW_TAG_member, name: "sin6", scope: !11253, file: !11249, line: 194, baseType: !11268, size: 224)
!11268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !2377, line: 50, size: 224, elements: !11269)
!11269 = !{!11270, !11271, !11272, !11273, !11274}
!11270 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !11268, file: !2377, line: 51, baseType: !633, size: 16)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !11268, file: !2377, line: 52, baseType: !645, size: 16, offset: 16)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !11268, file: !2377, line: 53, baseType: !622, size: 32, offset: 32)
!11273 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !11268, file: !2377, line: 54, baseType: !2376, size: 128, offset: 64)
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !11268, file: !2377, line: 55, baseType: !624, size: 32, offset: 192)
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !11253, file: !11249, line: 195, baseType: !675, size: 128)
!11276 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !11248, file: !11249, line: 425, baseType: !645, size: 16, offset: 352)
!11277 = !DIDerivedType(tag: DW_TAG_member, name: "remote_vni", scope: !11248, file: !11249, line: 426, baseType: !622, size: 32, offset: 384)
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ifindex", scope: !11248, file: !11249, line: 427, baseType: !862, size: 32, offset: 416)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "eth_addr", scope: !11248, file: !11249, line: 428, baseType: !11280, size: 48, offset: 448)
!11280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 48, elements: !1824)
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "vni", scope: !11248, file: !11249, line: 429, baseType: !622, size: 32, offset: 512)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "offloaded", scope: !11248, file: !11249, line: 430, baseType: !696, size: 8, offset: 544)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "added_by_user", scope: !11248, file: !11249, line: 431, baseType: !696, size: 8, offset: 552)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11240, file: !3, line: 2739, baseType: !451, size: 64, offset: 832)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !11240, file: !3, line: 2740, baseType: !473, size: 64, offset: 896)
!11286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11287, size: 64)
!11287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!11288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11248, size: 64)
!11289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11290, size: 64)
!11290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_obj_port_vlan", file: !10207, line: 95, size: 320, elements: !11291)
!11291 = !{!11292, !11303, !11304, !11305}
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !11290, file: !10207, line: 96, baseType: !11293, size: 256)
!11293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_obj", file: !10207, line: 86, size: 256, elements: !11294)
!11294 = !{!11295, !11296, !11297, !11298, !11299}
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "orig_dev", scope: !11293, file: !10207, line: 87, baseType: !451, size: 64)
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11293, file: !10207, line: 88, baseType: !10359, size: 32, offset: 64)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11293, file: !10207, line: 89, baseType: !862, size: 32, offset: 96)
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "complete_priv", scope: !11293, file: !10207, line: 90, baseType: !726, size: 64, offset: 128)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !11293, file: !10207, line: 91, baseType: !11300, size: 64, offset: 192)
!11300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11301, size: 64)
!11301 = !DISubroutineType(types: !11302)
!11302 = !{null, !451, !7, !726}
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11290, file: !10207, line: 97, baseType: !1192, size: 16, offset: 256)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "vid_begin", scope: !11290, file: !10207, line: 98, baseType: !1192, size: 16, offset: 272)
!11305 = !DIDerivedType(tag: DW_TAG_member, name: "vid_end", scope: !11290, file: !10207, line: 99, baseType: !1192, size: 16, offset: 288)
!11306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11307, size: 64)
!11307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_obj_port_mdb", file: !10207, line: 106, size: 320, elements: !11308)
!11308 = !{!11309, !11310, !11311}
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !11307, file: !10207, line: 107, baseType: !11293, size: 256)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !11307, file: !10207, line: 108, baseType: !9014, size: 48, offset: 256)
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !11307, file: !10207, line: 109, baseType: !1192, size: 16, offset: 304)
!11312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11313, size: 64)
!11313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11213)
!11314 = !{!0, !11315, !11317, !11319, !11321, !11323, !11325, !11327, !11329, !11331, !11333, !11335, !11337, !11339, !11341, !11343, !11345, !11347, !11349, !11351, !11353, !11355, !11357, !11359, !11361, !11363, !11365, !11373, !11375, !11377, !11379, !11381, !11383, !11385, !11387, !11389, !11391, !11393, !11395, !11404, !11409, !11411, !11416, !11421, !11423, !11426, !11430, !11435, !11437, !11443, !11446, !11448, !11450, !11458, !11461, !11463, !11465, !11467, !11469, !11471, !11476, !11478, !11480, !11482, !11484, !11487, !11489, !11491, !11493, !11495}
!11315 = !DIGlobalVariableExpression(var: !11316, expr: !DIExpression())
!11316 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdf_flush_type_item", scope: !2, file: !10048, line: 1210, type: !10688, isLocal: true, isDefinition: true)
!11317 = !DIGlobalVariableExpression(var: !11318, expr: !DIExpression())
!11318 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdf_flush_static_item", scope: !2, file: !10048, line: 1218, type: !10688, isLocal: true, isDefinition: true)
!11319 = !DIGlobalVariableExpression(var: !11320, expr: !DIExpression())
!11320 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdf_fid_item", scope: !2, file: !10048, line: 1232, type: !10688, isLocal: true, isDefinition: true)
!11321 = !DIGlobalVariableExpression(var: !11322, expr: !DIExpression())
!11322 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdf_port_fid_system_port_item", scope: !2, file: !10048, line: 1244, type: !10688, isLocal: true, isDefinition: true)
!11323 = !DIGlobalVariableExpression(var: !11324, expr: !DIExpression())
!11324 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdf", scope: !2, file: !10048, line: 1177, type: !10992, isLocal: true, isDefinition: true)
!11325 = !DIGlobalVariableExpression(var: !11326, expr: !DIExpression())
!11326 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_op_item", scope: !2, file: !10048, line: 259, type: !10688, isLocal: true, isDefinition: true)
!11327 = !DIGlobalVariableExpression(var: !11328, expr: !DIExpression())
!11328 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_record_locator_item", scope: !2, file: !10048, line: 268, type: !10688, isLocal: true, isDefinition: true)
!11329 = !DIGlobalVariableExpression(var: !11330, expr: !DIExpression())
!11330 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_num_rec_item", scope: !2, file: !10048, line: 277, type: !10688, isLocal: true, isDefinition: true)
!11331 = !DIGlobalVariableExpression(var: !11332, expr: !DIExpression())
!11332 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_rec_swid_item", scope: !2, file: !10048, line: 291, type: !10688, isLocal: true, isDefinition: true)
!11333 = !DIGlobalVariableExpression(var: !11334, expr: !DIExpression())
!11334 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_rec_type_item", scope: !2, file: !10048, line: 305, type: !10688, isLocal: true, isDefinition: true)
!11335 = !DIGlobalVariableExpression(var: !11336, expr: !DIExpression())
!11336 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_rec_mac_item", scope: !2, file: !10048, line: 339, type: !10688, isLocal: true, isDefinition: true)
!11337 = !DIGlobalVariableExpression(var: !11338, expr: !DIExpression())
!11338 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_rec_action_item", scope: !2, file: !10048, line: 359, type: !10688, isLocal: true, isDefinition: true)
!11339 = !DIGlobalVariableExpression(var: !11340, expr: !DIExpression())
!11340 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_rec_policy_item", scope: !2, file: !10048, line: 323, type: !10688, isLocal: true, isDefinition: true)
!11341 = !DIGlobalVariableExpression(var: !11342, expr: !DIExpression())
!11342 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_sub_port_item", scope: !2, file: !10048, line: 368, type: !10688, isLocal: true, isDefinition: true)
!11343 = !DIGlobalVariableExpression(var: !11344, expr: !DIExpression())
!11344 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_fid_vid_item", scope: !2, file: !10048, line: 381, type: !10688, isLocal: true, isDefinition: true)
!11345 = !DIGlobalVariableExpression(var: !11346, expr: !DIExpression())
!11346 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_system_port_item", scope: !2, file: !10048, line: 388, type: !10688, isLocal: true, isDefinition: true)
!11347 = !DIGlobalVariableExpression(var: !11348, expr: !DIExpression())
!11348 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd", scope: !2, file: !10048, line: 219, type: !10992, isLocal: true, isDefinition: true)
!11349 = !DIGlobalVariableExpression(var: !11350, expr: !DIExpression())
!11350 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_mc_pgi_item", scope: !2, file: !10048, line: 497, type: !10688, isLocal: true, isDefinition: true)
!11351 = !DIGlobalVariableExpression(var: !11352, expr: !DIExpression())
!11352 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_mc_fid_vid_item", scope: !2, file: !10048, line: 505, type: !10688, isLocal: true, isDefinition: true)
!11353 = !DIGlobalVariableExpression(var: !11354, expr: !DIExpression())
!11354 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_mc_mid_item", scope: !2, file: !10048, line: 514, type: !10688, isLocal: true, isDefinition: true)
!11355 = !DIGlobalVariableExpression(var: !11356, expr: !DIExpression())
!11356 = distinct !DIGlobalVariable(name: "mlxsw_reg_smid_swid_item", scope: !2, file: !10048, line: 87, type: !10688, isLocal: true, isDefinition: true)
!11357 = !DIGlobalVariableExpression(var: !11358, expr: !DIExpression())
!11358 = distinct !DIGlobalVariable(name: "mlxsw_reg_smid_mid_item", scope: !2, file: !10048, line: 94, type: !10688, isLocal: true, isDefinition: true)
!11359 = !DIGlobalVariableExpression(var: !11360, expr: !DIExpression())
!11360 = distinct !DIGlobalVariable(name: "mlxsw_reg_smid_port_item", scope: !2, file: !10048, line: 100, type: !10688, isLocal: true, isDefinition: true)
!11361 = !DIGlobalVariableExpression(var: !11362, expr: !DIExpression())
!11362 = distinct !DIGlobalVariable(name: "mlxsw_reg_smid_port_mask_item", scope: !2, file: !10048, line: 106, type: !10688, isLocal: true, isDefinition: true)
!11363 = !DIGlobalVariableExpression(var: !11364, expr: !DIExpression())
!11364 = distinct !DIGlobalVariable(name: "mlxsw_reg_smid", scope: !2, file: !10048, line: 81, type: !10992, isLocal: true, isDefinition: true)
!11365 = !DIGlobalVariableExpression(var: !11366, expr: !DIExpression())
!11366 = distinct !DIGlobalVariable(name: "__msg", scope: !11367, file: !3, line: 217, type: !11370, isLocal: true, isDefinition: true)
!11367 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_create", scope: !3, file: !3, line: 206, type: !11368, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11368 = !DISubroutineType(types: !11369)
!11369 = !{!10370, !10473, !451, !2625}
!11370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 448, elements: !11371)
!11371 = !{!11372}
!11372 = !DISubrange(count: 56)
!11373 = !DIGlobalVariableExpression(var: !11374, expr: !DIExpression())
!11374 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdat_swid_item", scope: !2, file: !10048, line: 187, type: !10688, isLocal: true, isDefinition: true)
!11375 = !DIGlobalVariableExpression(var: !11376, expr: !DIExpression())
!11376 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdat_age_time_item", scope: !2, file: !10048, line: 196, type: !10688, isLocal: true, isDefinition: true)
!11377 = !DIGlobalVariableExpression(var: !11378, expr: !DIExpression())
!11378 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdat", scope: !2, file: !10048, line: 181, type: !10992, isLocal: true, isDefinition: true)
!11379 = !DIGlobalVariableExpression(var: !11380, expr: !DIExpression())
!11380 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_tunnel_uip_msb_item", scope: !2, file: !10048, line: 535, type: !10688, isLocal: true, isDefinition: true)
!11381 = !DIGlobalVariableExpression(var: !11382, expr: !DIExpression())
!11382 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_tunnel_uip_lsb_item", scope: !2, file: !10048, line: 564, type: !10688, isLocal: true, isDefinition: true)
!11383 = !DIGlobalVariableExpression(var: !11384, expr: !DIExpression())
!11384 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_tunnel_fid_item", scope: !2, file: !10048, line: 542, type: !10688, isLocal: true, isDefinition: true)
!11385 = !DIGlobalVariableExpression(var: !11386, expr: !DIExpression())
!11386 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_tunnel_protocol_item", scope: !2, file: !10048, line: 554, type: !10688, isLocal: true, isDefinition: true)
!11387 = !DIGlobalVariableExpression(var: !11388, expr: !DIExpression())
!11388 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_lag_sub_port_item", scope: !2, file: !10048, line: 434, type: !10688, isLocal: true, isDefinition: true)
!11389 = !DIGlobalVariableExpression(var: !11390, expr: !DIExpression())
!11390 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_lag_fid_vid_item", scope: !2, file: !10048, line: 447, type: !10688, isLocal: true, isDefinition: true)
!11391 = !DIGlobalVariableExpression(var: !11392, expr: !DIExpression())
!11392 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_lag_lag_vid_item", scope: !2, file: !10048, line: 454, type: !10688, isLocal: true, isDefinition: true)
!11393 = !DIGlobalVariableExpression(var: !11394, expr: !DIExpression())
!11394 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd_uc_lag_lag_id_item", scope: !2, file: !10048, line: 461, type: !10688, isLocal: true, isDefinition: true)
!11395 = !DIGlobalVariableExpression(var: !11396, expr: !DIExpression())
!11396 = distinct !DIGlobalVariable(name: "__msg", scope: !11397, file: !3, line: 3062, type: !11401, isLocal: true, isDefinition: true)
!11397 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_work_prepare", scope: !3, file: !3, line: 3047, type: !11398, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{!7, !11239, !11400}
!11400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11231, size: 64)
!11401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 552, elements: !11402)
!11402 = !{!11403}
!11403 = !DISubrange(count: 69)
!11404 = !DIGlobalVariableExpression(var: !11405, expr: !DIExpression())
!11405 = distinct !DIGlobalVariable(name: "__msg", scope: !11397, file: !3, line: 3067, type: !11406, isLocal: true, isDefinition: true)
!11406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 488, elements: !11407)
!11407 = !{!11408}
!11408 = !DISubrange(count: 61)
!11409 = !DIGlobalVariableExpression(var: !11410, expr: !DIExpression())
!11410 = distinct !DIGlobalVariable(name: "__msg", scope: !11397, file: !3, line: 3071, type: !11406, isLocal: true, isDefinition: true)
!11411 = !DIGlobalVariableExpression(var: !11412, expr: !DIExpression())
!11412 = distinct !DIGlobalVariable(name: "__msg", scope: !11397, file: !3, line: 3075, type: !11413, isLocal: true, isDefinition: true)
!11413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 528, elements: !11414)
!11414 = !{!11415}
!11415 = !DISubrange(count: 66)
!11416 = !DIGlobalVariableExpression(var: !11417, expr: !DIExpression())
!11417 = distinct !DIGlobalVariable(name: "__msg", scope: !11397, file: !3, line: 3079, type: !11418, isLocal: true, isDefinition: true)
!11418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 560, elements: !11419)
!11419 = !{!11420}
!11420 = !DISubrange(count: 70)
!11421 = !DIGlobalVariableExpression(var: !11422, expr: !DIExpression())
!11422 = distinct !DIGlobalVariable(name: "mlxsw_sp_bridge_8021q_ops", scope: !2, file: !3, line: 2101, type: !10382, isLocal: true, isDefinition: true)
!11423 = !DIGlobalVariableExpression(var: !11424, expr: !DIExpression())
!11424 = distinct !DIGlobalVariable(name: "__msg", scope: !11425, file: !3, line: 1984, type: !11401, isLocal: true, isDefinition: true)
!11425 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021q_port_join", scope: !3, file: !3, line: 1978, type: !10387, scopeLine: 1982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11426 = !DIGlobalVariableExpression(var: !11427, expr: !DIExpression())
!11427 = distinct !DIGlobalVariable(name: "__msg", scope: !11428, file: !3, line: 2031, type: !11429, isLocal: true, isDefinition: true)
!11428 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021q_vxlan_join", scope: !3, file: !3, line: 2005, type: !11190, scopeLine: 2008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 352, elements: !1348)
!11430 = !DIGlobalVariableExpression(var: !11431, expr: !DIExpression())
!11431 = distinct !DIGlobalVariable(name: "__msg", scope: !11428, file: !3, line: 2036, type: !11432, isLocal: true, isDefinition: true)
!11432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 336, elements: !11433)
!11433 = !{!11434}
!11434 = !DISubrange(count: 42)
!11435 = !DIGlobalVariableExpression(var: !11436, expr: !DIExpression())
!11436 = distinct !DIGlobalVariable(name: "mlxsw_sp_bridge_8021d_ops", scope: !2, file: !3, line: 2240, type: !10382, isLocal: true, isDefinition: true)
!11437 = !DIGlobalVariableExpression(var: !11438, expr: !DIExpression())
!11438 = distinct !DIGlobalVariable(name: "__msg", scope: !11439, file: !3, line: 2143, type: !11440, isLocal: true, isDefinition: true)
!11439 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021d_port_join", scope: !3, file: !3, line: 2128, type: !10387, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 480, elements: !11441)
!11441 = !{!11442}
!11442 = !DISubrange(count: 60)
!11443 = !DIGlobalVariableExpression(var: !11444, expr: !DIExpression())
!11444 = distinct !DIGlobalVariable(name: "__msg", scope: !11445, file: !3, line: 2189, type: !11429, isLocal: true, isDefinition: true)
!11445 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021d_vxlan_join", scope: !3, file: !3, line: 2173, type: !11190, scopeLine: 2176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11446 = !DIGlobalVariableExpression(var: !11447, expr: !DIExpression())
!11447 = distinct !DIGlobalVariable(name: "__msg", scope: !11445, file: !3, line: 2194, type: !11432, isLocal: true, isDefinition: true)
!11448 = !DIGlobalVariableExpression(var: !11449, expr: !DIExpression())
!11449 = distinct !DIGlobalVariable(name: "mlxsw_sp_switchdev_blocking_notifier", scope: !2, file: !3, line: 3439, type: !2169, isLocal: true, isDefinition: true)
!11450 = !DIGlobalVariableExpression(var: !11451, expr: !DIExpression())
!11451 = distinct !DIGlobalVariable(name: "__msg", scope: !11452, file: !3, line: 3194, type: !11455, isLocal: true, isDefinition: true)
!11452 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_vlan_add", scope: !3, file: !3, line: 3175, type: !11453, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!7, !10421, !10370, !3015, !1192, !696, !696, !2625}
!11455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 440, elements: !11456)
!11456 = !{!11457}
!11457 = !DISubrange(count: 55)
!11458 = !DIGlobalVariableExpression(var: !11459, expr: !DIExpression())
!11459 = distinct !DIGlobalVariable(name: "_rs", scope: !11460, file: !3, line: 2716, type: !1901, isLocal: true, isDefinition: true)
!11460 = distinct !DISubprogram(name: "mlxsw_sp_fdb_notify_work", scope: !3, file: !3, line: 2693, type: !1968, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11461 = !DIGlobalVariableExpression(var: !11462, expr: !DIExpression())
!11462 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_swid_item", scope: !2, file: !10048, line: 602, type: !10688, isLocal: true, isDefinition: true)
!11463 = !DIGlobalVariableExpression(var: !11464, expr: !DIExpression())
!11464 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_end_item", scope: !2, file: !10048, line: 608, type: !10688, isLocal: true, isDefinition: true)
!11465 = !DIGlobalVariableExpression(var: !11466, expr: !DIExpression())
!11466 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_num_rec_item", scope: !2, file: !10048, line: 618, type: !10688, isLocal: true, isDefinition: true)
!11467 = !DIGlobalVariableExpression(var: !11468, expr: !DIExpression())
!11468 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn", scope: !2, file: !10048, line: 596, type: !10992, isLocal: true, isDefinition: true)
!11469 = !DIGlobalVariableExpression(var: !11470, expr: !DIExpression())
!11470 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_rec_type_item", scope: !2, file: !10048, line: 654, type: !10688, isLocal: true, isDefinition: true)
!11471 = !DIGlobalVariableExpression(var: !11472, expr: !DIExpression())
!11472 = distinct !DIGlobalVariable(name: "_rs", scope: !11473, file: !3, line: 2427, type: !1901, isLocal: true, isDefinition: true)
!11473 = distinct !DISubprogram(name: "mlxsw_sp_fdb_notify_mac_process", scope: !3, file: !3, line: 2409, type: !11474, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11474 = !DISubroutineType(types: !11475)
!11475 = !{null, !10421, !733, !7, !696}
!11476 = !DIGlobalVariableExpression(var: !11477, expr: !DIExpression())
!11477 = distinct !DIGlobalVariable(name: "_rs", scope: !11473, file: !3, line: 2453, type: !1901, isLocal: true, isDefinition: true)
!11478 = !DIGlobalVariableExpression(var: !11479, expr: !DIExpression())
!11479 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_rec_mac_item", scope: !2, file: !10048, line: 661, type: !10688, isLocal: true, isDefinition: true)
!11480 = !DIGlobalVariableExpression(var: !11481, expr: !DIExpression())
!11481 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_mac_fid_item", scope: !2, file: !10048, line: 676, type: !10688, isLocal: true, isDefinition: true)
!11482 = !DIGlobalVariableExpression(var: !11483, expr: !DIExpression())
!11483 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_mac_system_port_item", scope: !2, file: !10048, line: 683, type: !10688, isLocal: true, isDefinition: true)
!11484 = !DIGlobalVariableExpression(var: !11485, expr: !DIExpression())
!11485 = distinct !DIGlobalVariable(name: "_rs", scope: !11486, file: !3, line: 2489, type: !1901, isLocal: true, isDefinition: true)
!11486 = distinct !DISubprogram(name: "mlxsw_sp_fdb_notify_mac_lag_process", scope: !3, file: !3, line: 2470, type: !11474, scopeLine: 2473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11487 = !DIGlobalVariableExpression(var: !11488, expr: !DIExpression())
!11488 = distinct !DIGlobalVariable(name: "_rs", scope: !11486, file: !3, line: 2517, type: !1901, isLocal: true, isDefinition: true)
!11489 = !DIGlobalVariableExpression(var: !11490, expr: !DIExpression())
!11490 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_mac_lag_lag_id_item", scope: !2, file: !10048, line: 699, type: !10688, isLocal: true, isDefinition: true)
!11491 = !DIGlobalVariableExpression(var: !11492, expr: !DIExpression())
!11492 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_uc_tunnel_uip_msb_item", scope: !2, file: !10048, line: 717, type: !10688, isLocal: true, isDefinition: true)
!11493 = !DIGlobalVariableExpression(var: !11494, expr: !DIExpression())
!11494 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_uc_tunnel_uip_lsb_item", scope: !2, file: !10048, line: 738, type: !10688, isLocal: true, isDefinition: true)
!11495 = !DIGlobalVariableExpression(var: !11496, expr: !DIExpression())
!11496 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn_uc_tunnel_protocol_item", scope: !2, file: !10048, line: 729, type: !10688, isLocal: true, isDefinition: true)
!11497 = !{i32 7, !"Dwarf Version", i32 4}
!11498 = !{i32 2, !"Debug Info Version", i32 3}
!11499 = !{i32 1, !"wchar_size", i32 2}
!11500 = !{i32 1, !"Code Model", i32 2}
!11501 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!11502 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_is_offloaded", scope: !3, file: !3, line: 132, type: !11503, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11503 = !DISubroutineType(types: !11504)
!11504 = !{!696, !11505, !3015}
!11505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11506, size: 64)
!11506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10422)
!11507 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11502, file: !3, line: 132, type: !11505)
!11508 = !DILocation(line: 132, column: 65, scope: !11502)
!11509 = !DILocalVariable(name: "br_dev", arg: 2, scope: !11502, file: !3, line: 133, type: !3015)
!11510 = !DILocation(line: 133, column: 32, scope: !11502)
!11511 = !DILocation(line: 135, column: 39, scope: !11502)
!11512 = !DILocation(line: 135, column: 49, scope: !11502)
!11513 = !DILocation(line: 135, column: 57, scope: !11502)
!11514 = !DILocation(line: 135, column: 11, scope: !11502)
!11515 = !DILocation(line: 135, column: 10, scope: !11502)
!11516 = !DILocation(line: 135, column: 9, scope: !11502)
!11517 = !DILocation(line: 135, column: 2, scope: !11502)
!11518 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_find", scope: !3, file: !3, line: 120, type: !11519, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11519 = !DISubroutineType(types: !11520)
!11520 = !{!10370, !11521, !3015}
!11521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11522, size: 64)
!11522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10474)
!11523 = !DILocalVariable(name: "bridge", arg: 1, scope: !11518, file: !3, line: 120, type: !11521)
!11524 = !DILocation(line: 120, column: 59, scope: !11518)
!11525 = !DILocalVariable(name: "br_dev", arg: 2, scope: !11518, file: !3, line: 121, type: !3015)
!11526 = !DILocation(line: 121, column: 33, scope: !11518)
!11527 = !DILocalVariable(name: "bridge_device", scope: !11518, file: !3, line: 123, type: !10370)
!11528 = !DILocation(line: 123, column: 33, scope: !11518)
!11529 = !DILocalVariable(name: "__mptr", scope: !11530, file: !3, line: 125, type: !726)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 125, column: 2)
!11531 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 125, column: 2)
!11532 = !DILocation(line: 125, column: 2, scope: !11530)
!11533 = !DILocation(line: 125, column: 2, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 125, column: 2)
!11535 = !DILocation(line: 125, column: 2, scope: !11531)
!11536 = !DILocation(line: 125, column: 2, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 125, column: 2)
!11538 = !DILocation(line: 126, column: 7, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 126, column: 7)
!11540 = !DILocation(line: 126, column: 22, scope: !11539)
!11541 = !DILocation(line: 126, column: 29, scope: !11539)
!11542 = !DILocation(line: 126, column: 26, scope: !11539)
!11543 = !DILocation(line: 126, column: 7, scope: !11537)
!11544 = !DILocation(line: 127, column: 11, scope: !11539)
!11545 = !DILocation(line: 127, column: 4, scope: !11539)
!11546 = !DILocalVariable(name: "__mptr", scope: !11547, file: !3, line: 125, type: !726)
!11547 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 125, column: 2)
!11548 = !DILocation(line: 125, column: 2, scope: !11547)
!11549 = !DILocation(line: 125, column: 2, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 125, column: 2)
!11551 = distinct !{!11551, !11535, !11552}
!11552 = !DILocation(line: 127, column: 11, scope: !11531)
!11553 = !DILocation(line: 129, column: 2, scope: !11518)
!11554 = !DILocation(line: 130, column: 1, scope: !11518)
!11555 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_find", scope: !3, file: !3, line: 309, type: !11556, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11556 = !DISubroutineType(types: !11557)
!11557 = !{!10389, !10473, !451}
!11558 = !DILocalVariable(name: "bridge", arg: 1, scope: !11555, file: !3, line: 309, type: !10473)
!11559 = !DILocation(line: 309, column: 51, scope: !11555)
!11560 = !DILocalVariable(name: "brport_dev", arg: 2, scope: !11555, file: !3, line: 310, type: !451)
!11561 = !DILocation(line: 310, column: 25, scope: !11555)
!11562 = !DILocalVariable(name: "br_dev", scope: !11555, file: !3, line: 312, type: !451)
!11563 = !DILocation(line: 312, column: 21, scope: !11555)
!11564 = !DILocation(line: 312, column: 58, scope: !11555)
!11565 = !DILocation(line: 312, column: 30, scope: !11555)
!11566 = !DILocalVariable(name: "bridge_device", scope: !11555, file: !3, line: 313, type: !10370)
!11567 = !DILocation(line: 313, column: 33, scope: !11555)
!11568 = !DILocation(line: 315, column: 7, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 315, column: 6)
!11570 = !DILocation(line: 315, column: 6, scope: !11555)
!11571 = !DILocation(line: 316, column: 3, scope: !11569)
!11572 = !DILocation(line: 318, column: 46, scope: !11555)
!11573 = !DILocation(line: 318, column: 54, scope: !11555)
!11574 = !DILocation(line: 318, column: 18, scope: !11555)
!11575 = !DILocation(line: 318, column: 16, scope: !11555)
!11576 = !DILocation(line: 319, column: 7, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 319, column: 6)
!11578 = !DILocation(line: 319, column: 6, scope: !11555)
!11579 = !DILocation(line: 320, column: 3, scope: !11577)
!11580 = !DILocation(line: 322, column: 37, scope: !11555)
!11581 = !DILocation(line: 322, column: 52, scope: !11555)
!11582 = !DILocation(line: 322, column: 9, scope: !11555)
!11583 = !DILocation(line: 322, column: 2, scope: !11555)
!11584 = !DILocation(line: 323, column: 1, scope: !11555)
!11585 = distinct !DISubprogram(name: "__mlxsw_sp_bridge_port_find", scope: !3, file: !3, line: 295, type: !11586, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{!10389, !11588, !3015}
!11588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11589, size: 64)
!11589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10371)
!11590 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !11585, file: !3, line: 295, type: !11588)
!11591 = !DILocation(line: 295, column: 66, scope: !11585)
!11592 = !DILocalVariable(name: "brport_dev", arg: 2, scope: !11585, file: !3, line: 296, type: !3015)
!11593 = !DILocation(line: 296, column: 33, scope: !11585)
!11594 = !DILocalVariable(name: "bridge_port", scope: !11585, file: !3, line: 298, type: !10389)
!11595 = !DILocation(line: 298, column: 31, scope: !11585)
!11596 = !DILocalVariable(name: "__mptr", scope: !11597, file: !3, line: 300, type: !726)
!11597 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 300, column: 2)
!11598 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 300, column: 2)
!11599 = !DILocation(line: 300, column: 2, scope: !11597)
!11600 = !DILocation(line: 300, column: 2, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 300, column: 2)
!11602 = !DILocation(line: 300, column: 2, scope: !11598)
!11603 = !DILocation(line: 300, column: 2, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 300, column: 2)
!11605 = !DILocation(line: 301, column: 7, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 301, column: 7)
!11607 = distinct !DILexicalBlock(scope: !11604, file: !3, line: 300, column: 69)
!11608 = !DILocation(line: 301, column: 20, scope: !11606)
!11609 = !DILocation(line: 301, column: 27, scope: !11606)
!11610 = !DILocation(line: 301, column: 24, scope: !11606)
!11611 = !DILocation(line: 301, column: 7, scope: !11607)
!11612 = !DILocation(line: 302, column: 11, scope: !11606)
!11613 = !DILocation(line: 302, column: 4, scope: !11606)
!11614 = !DILocation(line: 303, column: 2, scope: !11607)
!11615 = !DILocalVariable(name: "__mptr", scope: !11616, file: !3, line: 300, type: !726)
!11616 = distinct !DILexicalBlock(scope: !11604, file: !3, line: 300, column: 2)
!11617 = !DILocation(line: 300, column: 2, scope: !11616)
!11618 = !DILocation(line: 300, column: 2, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 300, column: 2)
!11620 = distinct !{!11620, !11602, !11621}
!11621 = !DILocation(line: 303, column: 2, scope: !11598)
!11622 = !DILocation(line: 305, column: 2, scope: !11585)
!11623 = !DILocation(line: 306, column: 1, scope: !11585)
!11624 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_bridge_leave", scope: !3, file: !3, line: 1088, type: !11625, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11625 = !DISubroutineType(types: !11626)
!11626 = !{null, !11091}
!11627 = !DILocalVariable(name: "mlxsw_sp_port_vlan", arg: 1, scope: !11624, file: !3, line: 1088, type: !11091)
!11628 = !DILocation(line: 1088, column: 60, scope: !11624)
!11629 = !DILocalVariable(name: "mlxsw_sp_port", scope: !11624, file: !3, line: 1090, type: !10406)
!11630 = !DILocation(line: 1090, column: 24, scope: !11624)
!11631 = !DILocation(line: 1090, column: 40, scope: !11624)
!11632 = !DILocation(line: 1090, column: 60, scope: !11624)
!11633 = !DILocalVariable(name: "fid", scope: !11624, file: !3, line: 1091, type: !11097)
!11634 = !DILocation(line: 1091, column: 23, scope: !11624)
!11635 = !DILocation(line: 1091, column: 29, scope: !11624)
!11636 = !DILocation(line: 1091, column: 49, scope: !11624)
!11637 = !DILocalVariable(name: "bridge_vlan", scope: !11624, file: !3, line: 1092, type: !11206)
!11638 = !DILocation(line: 1092, column: 31, scope: !11624)
!11639 = !DILocalVariable(name: "bridge_port", scope: !11624, file: !3, line: 1093, type: !10389)
!11640 = !DILocation(line: 1093, column: 31, scope: !11624)
!11641 = !DILocalVariable(name: "vid", scope: !11624, file: !3, line: 1094, type: !1192)
!11642 = !DILocation(line: 1094, column: 6, scope: !11624)
!11643 = !DILocation(line: 1094, column: 12, scope: !11624)
!11644 = !DILocation(line: 1094, column: 32, scope: !11624)
!11645 = !DILocalVariable(name: "last_port", scope: !11624, file: !3, line: 1095, type: !696)
!11646 = !DILocation(line: 1095, column: 7, scope: !11624)
!11647 = !DILocalVariable(name: "last_vlan", scope: !11624, file: !3, line: 1095, type: !696)
!11648 = !DILocation(line: 1095, column: 18, scope: !11624)
!11649 = !DILocalVariable(name: "__ret_warn_on", scope: !11650, file: !3, line: 1097, type: !7)
!11650 = distinct !DILexicalBlock(scope: !11651, file: !3, line: 1097, column: 6)
!11651 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 1097, column: 6)
!11652 = !DILocation(line: 1097, column: 6, scope: !11650)
!11653 = !DILocation(line: 0, scope: !11650)
!11654 = !DILocation(line: 1097, column: 6, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 1097, column: 6)
!11656 = !DILocation(line: 1097, column: 6, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 1097, column: 6)
!11658 = !DILocation(line: 1097, column: 6, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1097, column: 6)
!11660 = !DILocation(line: 1097, column: 6, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1097, column: 6)
!11662 = !{i32 -2134755427, i32 -2134755398, i32 -2134755352, i32 -2134755294, i32 -2134755240, i32 -2134755186, i32 -2134755131, i32 -2134755100}
!11663 = !DILocation(line: 1097, column: 6, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1097, column: 6)
!11665 = !{i32 -2134754661, i32 -2134754654, i32 -2134754602, i32 -2134754571, i32 -2134754541}
!11666 = !DILocation(line: 1097, column: 6, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1097, column: 6)
!11668 = !DILocation(line: 1097, column: 6, scope: !11651)
!11669 = !DILocation(line: 1097, column: 6, scope: !11624)
!11670 = !DILocation(line: 1099, column: 3, scope: !11651)
!11671 = !DILocation(line: 1101, column: 16, scope: !11624)
!11672 = !DILocation(line: 1101, column: 36, scope: !11624)
!11673 = !DILocation(line: 1101, column: 14, scope: !11624)
!11674 = !DILocation(line: 1102, column: 32, scope: !11624)
!11675 = !DILocation(line: 1102, column: 45, scope: !11624)
!11676 = !DILocation(line: 1102, column: 14, scope: !11624)
!11677 = !DILocation(line: 1102, column: 12, scope: !11624)
!11678 = !DILocation(line: 1103, column: 42, scope: !11624)
!11679 = !DILocation(line: 1103, column: 55, scope: !11624)
!11680 = !DILocation(line: 1103, column: 16, scope: !11624)
!11681 = !DILocation(line: 1103, column: 14, scope: !11624)
!11682 = !DILocation(line: 1104, column: 32, scope: !11624)
!11683 = !DILocation(line: 1104, column: 45, scope: !11624)
!11684 = !DILocation(line: 1104, column: 14, scope: !11624)
!11685 = !DILocation(line: 1104, column: 12, scope: !11624)
!11686 = !DILocation(line: 1106, column: 12, scope: !11624)
!11687 = !DILocation(line: 1106, column: 32, scope: !11624)
!11688 = !DILocation(line: 1106, column: 2, scope: !11624)
!11689 = !DILocation(line: 1107, column: 27, scope: !11624)
!11690 = !DILocation(line: 1107, column: 2, scope: !11624)
!11691 = !DILocation(line: 1108, column: 28, scope: !11624)
!11692 = !DILocation(line: 1108, column: 43, scope: !11624)
!11693 = !DILocation(line: 1108, column: 2, scope: !11624)
!11694 = !DILocation(line: 1109, column: 33, scope: !11624)
!11695 = !DILocation(line: 1109, column: 48, scope: !11624)
!11696 = !DILocation(line: 1109, column: 2, scope: !11624)
!11697 = !DILocation(line: 1110, column: 6, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 1110, column: 6)
!11699 = !DILocation(line: 1110, column: 6, scope: !11624)
!11700 = !DILocation(line: 1111, column: 34, scope: !11698)
!11701 = !DILocation(line: 1111, column: 49, scope: !11698)
!11702 = !DILocation(line: 1112, column: 13, scope: !11698)
!11703 = !DILocation(line: 1113, column: 32, scope: !11698)
!11704 = !DILocation(line: 1113, column: 13, scope: !11698)
!11705 = !DILocation(line: 1111, column: 3, scope: !11698)
!11706 = !DILocation(line: 1114, column: 6, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 1114, column: 6)
!11708 = !DILocation(line: 1114, column: 6, scope: !11624)
!11709 = !DILocation(line: 1115, column: 34, scope: !11707)
!11710 = !DILocation(line: 1115, column: 49, scope: !11707)
!11711 = !DILocation(line: 1115, column: 3, scope: !11707)
!11712 = !DILocation(line: 1117, column: 31, scope: !11624)
!11713 = !DILocation(line: 1117, column: 2, scope: !11624)
!11714 = !DILocation(line: 1119, column: 27, scope: !11624)
!11715 = !DILocation(line: 1119, column: 42, scope: !11624)
!11716 = !DILocation(line: 1119, column: 52, scope: !11624)
!11717 = !DILocation(line: 1119, column: 60, scope: !11624)
!11718 = !DILocation(line: 1119, column: 2, scope: !11624)
!11719 = !DILocation(line: 1120, column: 2, scope: !11624)
!11720 = !DILocation(line: 1120, column: 22, scope: !11624)
!11721 = !DILocation(line: 1120, column: 34, scope: !11624)
!11722 = !DILocation(line: 1121, column: 1, scope: !11624)
!11723 = distinct !DISubprogram(name: "list_is_singular", scope: !11724, file: !11724, line: 358, type: !11725, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11724 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!11725 = !DISubroutineType(types: !11726)
!11726 = !{!7, !11727}
!11727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11728, size: 64)
!11728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!11729 = !DILocalVariable(name: "head", arg: 1, scope: !11723, file: !11724, line: 358, type: !11727)
!11730 = !DILocation(line: 358, column: 60, scope: !11723)
!11731 = !DILocation(line: 360, column: 21, scope: !11723)
!11732 = !DILocation(line: 360, column: 10, scope: !11723)
!11733 = !DILocation(line: 360, column: 27, scope: !11723)
!11734 = !DILocation(line: 360, column: 31, scope: !11723)
!11735 = !DILocation(line: 360, column: 37, scope: !11723)
!11736 = !DILocation(line: 360, column: 45, scope: !11723)
!11737 = !DILocation(line: 360, column: 51, scope: !11723)
!11738 = !DILocation(line: 360, column: 42, scope: !11723)
!11739 = !DILocation(line: 0, scope: !11723)
!11740 = !DILocation(line: 360, column: 2, scope: !11723)
!11741 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vlan_find", scope: !3, file: !3, line: 449, type: !11742, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11742 = !DISubroutineType(types: !11743)
!11743 = !{!11206, !11744, !1192}
!11744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11745, size: 64)
!11745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10390)
!11746 = !DILocalVariable(name: "bridge_port", arg: 1, scope: !11741, file: !3, line: 449, type: !11744)
!11747 = !DILocation(line: 449, column: 62, scope: !11741)
!11748 = !DILocalVariable(name: "vid", arg: 2, scope: !11741, file: !3, line: 450, type: !1192)
!11749 = !DILocation(line: 450, column: 10, scope: !11741)
!11750 = !DILocalVariable(name: "bridge_vlan", scope: !11741, file: !3, line: 452, type: !11206)
!11751 = !DILocation(line: 452, column: 31, scope: !11741)
!11752 = !DILocalVariable(name: "__mptr", scope: !11753, file: !3, line: 454, type: !726)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !3, line: 454, column: 2)
!11754 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 454, column: 2)
!11755 = !DILocation(line: 454, column: 2, scope: !11753)
!11756 = !DILocation(line: 454, column: 2, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 454, column: 2)
!11758 = !DILocation(line: 454, column: 2, scope: !11754)
!11759 = !DILocation(line: 454, column: 2, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11754, file: !3, line: 454, column: 2)
!11761 = !DILocation(line: 455, column: 7, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 455, column: 7)
!11763 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 454, column: 67)
!11764 = !DILocation(line: 455, column: 20, scope: !11762)
!11765 = !DILocation(line: 455, column: 27, scope: !11762)
!11766 = !DILocation(line: 455, column: 24, scope: !11762)
!11767 = !DILocation(line: 455, column: 7, scope: !11763)
!11768 = !DILocation(line: 456, column: 11, scope: !11762)
!11769 = !DILocation(line: 456, column: 4, scope: !11762)
!11770 = !DILocation(line: 457, column: 2, scope: !11763)
!11771 = !DILocalVariable(name: "__mptr", scope: !11772, file: !3, line: 454, type: !726)
!11772 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 454, column: 2)
!11773 = !DILocation(line: 454, column: 2, scope: !11772)
!11774 = !DILocation(line: 454, column: 2, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11772, file: !3, line: 454, column: 2)
!11776 = distinct !{!11776, !11758, !11777}
!11777 = !DILocation(line: 457, column: 2, scope: !11754)
!11778 = !DILocation(line: 459, column: 2, scope: !11741)
!11779 = !DILocation(line: 460, column: 1, scope: !11741)
!11780 = distinct !DISubprogram(name: "list_del", scope: !11724, file: !11724, line: 144, type: !11781, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11781 = !DISubroutineType(types: !11782)
!11782 = !{null, !448}
!11783 = !DILocalVariable(name: "entry", arg: 1, scope: !11780, file: !11724, line: 144, type: !448)
!11784 = !DILocation(line: 144, column: 47, scope: !11780)
!11785 = !DILocation(line: 146, column: 19, scope: !11780)
!11786 = !DILocation(line: 146, column: 2, scope: !11780)
!11787 = !DILocation(line: 147, column: 2, scope: !11780)
!11788 = !DILocation(line: 147, column: 9, scope: !11780)
!11789 = !DILocation(line: 147, column: 14, scope: !11780)
!11790 = !DILocation(line: 148, column: 2, scope: !11780)
!11791 = !DILocation(line: 148, column: 9, scope: !11780)
!11792 = !DILocation(line: 148, column: 14, scope: !11780)
!11793 = !DILocation(line: 149, column: 1, scope: !11780)
!11794 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vlan_put", scope: !3, file: !3, line: 498, type: !11795, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11795 = !DISubroutineType(types: !11796)
!11796 = !{null, !11206}
!11797 = !DILocalVariable(name: "bridge_vlan", arg: 1, scope: !11794, file: !3, line: 498, type: !11206)
!11798 = !DILocation(line: 498, column: 67, scope: !11794)
!11799 = !DILocation(line: 500, column: 18, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 500, column: 6)
!11801 = !DILocation(line: 500, column: 31, scope: !11800)
!11802 = !DILocation(line: 500, column: 6, scope: !11800)
!11803 = !DILocation(line: 500, column: 6, scope: !11794)
!11804 = !DILocation(line: 501, column: 32, scope: !11800)
!11805 = !DILocation(line: 501, column: 3, scope: !11800)
!11806 = !DILocation(line: 502, column: 1, scope: !11794)
!11807 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_fdb_flush", scope: !3, file: !3, line: 1259, type: !11808, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{!7, !10421, !10389, !1192}
!11810 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11807, file: !3, line: 1259, type: !10421)
!11811 = !DILocation(line: 1259, column: 49, scope: !11807)
!11812 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !11807, file: !3, line: 1260, type: !10389)
!11813 = !DILocation(line: 1260, column: 40, scope: !11807)
!11814 = !DILocalVariable(name: "fid_index", arg: 3, scope: !11807, file: !3, line: 1261, type: !1192)
!11815 = !DILocation(line: 1261, column: 15, scope: !11807)
!11816 = !DILocalVariable(name: "lagged", scope: !11807, file: !3, line: 1263, type: !696)
!11817 = !DILocation(line: 1263, column: 7, scope: !11807)
!11818 = !DILocation(line: 1263, column: 16, scope: !11807)
!11819 = !DILocation(line: 1263, column: 29, scope: !11807)
!11820 = !DILocalVariable(name: "sfdf_pl", scope: !11807, file: !3, line: 1264, type: !11821)
!11821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 160, elements: !2679)
!11822 = !DILocation(line: 1264, column: 7, scope: !11807)
!11823 = !DILocalVariable(name: "system_port", scope: !11807, file: !3, line: 1265, type: !1192)
!11824 = !DILocation(line: 1265, column: 6, scope: !11807)
!11825 = !DILocation(line: 1267, column: 16, scope: !11807)
!11826 = !DILocation(line: 1267, column: 25, scope: !11807)
!11827 = !DILocation(line: 1267, column: 38, scope: !11807)
!11828 = !DILocation(line: 1267, column: 47, scope: !11807)
!11829 = !DILocation(line: 1267, column: 60, scope: !11807)
!11830 = !DILocation(line: 1267, column: 14, scope: !11807)
!11831 = !DILocation(line: 1268, column: 22, scope: !11807)
!11832 = !DILocation(line: 1268, column: 55, scope: !11807)
!11833 = !DILocation(line: 1268, column: 31, scope: !11807)
!11834 = !DILocation(line: 1268, column: 2, scope: !11807)
!11835 = !DILocation(line: 1269, column: 25, scope: !11807)
!11836 = !DILocation(line: 1269, column: 34, scope: !11807)
!11837 = !DILocation(line: 1269, column: 2, scope: !11807)
!11838 = !DILocation(line: 1270, column: 42, scope: !11807)
!11839 = !DILocation(line: 1270, column: 51, scope: !11807)
!11840 = !DILocation(line: 1270, column: 2, scope: !11807)
!11841 = !DILocation(line: 1272, column: 25, scope: !11807)
!11842 = !DILocation(line: 1272, column: 35, scope: !11807)
!11843 = !DILocation(line: 1272, column: 58, scope: !11807)
!11844 = !DILocation(line: 1272, column: 9, scope: !11807)
!11845 = !DILocation(line: 1272, column: 2, scope: !11807)
!11846 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_mdb_flush", scope: !3, file: !3, line: 1916, type: !11847, scopeLine: 1918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{null, !10406, !10389}
!11849 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !11846, file: !3, line: 1916, type: !10406)
!11850 = !DILocation(line: 1916, column: 54, scope: !11846)
!11851 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !11846, file: !3, line: 1917, type: !10389)
!11852 = !DILocation(line: 1917, column: 40, scope: !11846)
!11853 = !DILocalVariable(name: "bridge_device", scope: !11846, file: !3, line: 1919, type: !10370)
!11854 = !DILocation(line: 1919, column: 33, scope: !11846)
!11855 = !DILocalVariable(name: "mid", scope: !11846, file: !3, line: 1920, type: !11215)
!11856 = !DILocation(line: 1920, column: 23, scope: !11846)
!11857 = !DILocalVariable(name: "tmp", scope: !11846, file: !3, line: 1920, type: !11215)
!11858 = !DILocation(line: 1920, column: 29, scope: !11846)
!11859 = !DILocation(line: 1922, column: 18, scope: !11846)
!11860 = !DILocation(line: 1922, column: 31, scope: !11846)
!11861 = !DILocation(line: 1922, column: 16, scope: !11846)
!11862 = !DILocalVariable(name: "__mptr", scope: !11863, file: !3, line: 1924, type: !726)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 1924, column: 2)
!11864 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 1924, column: 2)
!11865 = !DILocation(line: 1924, column: 2, scope: !11863)
!11866 = !DILocation(line: 1924, column: 2, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 1924, column: 2)
!11868 = !DILocation(line: 1924, column: 2, scope: !11864)
!11869 = !DILocalVariable(name: "__mptr", scope: !11870, file: !3, line: 1924, type: !726)
!11870 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 1924, column: 2)
!11871 = !DILocation(line: 1924, column: 2, scope: !11870)
!11872 = !DILocation(line: 1924, column: 2, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 1924, column: 2)
!11874 = !DILocation(line: 1924, column: 2, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 1924, column: 2)
!11876 = !DILocation(line: 1925, column: 16, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 1925, column: 7)
!11878 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 1924, column: 70)
!11879 = !DILocation(line: 1925, column: 31, scope: !11877)
!11880 = !DILocation(line: 1925, column: 43, scope: !11877)
!11881 = !DILocation(line: 1925, column: 48, scope: !11877)
!11882 = !DILocation(line: 1925, column: 7, scope: !11877)
!11883 = !DILocation(line: 1925, column: 7, scope: !11878)
!11884 = !DILocation(line: 1926, column: 28, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 1925, column: 63)
!11886 = !DILocation(line: 1926, column: 43, scope: !11885)
!11887 = !DILocation(line: 1927, column: 7, scope: !11885)
!11888 = !DILocation(line: 1926, column: 4, scope: !11885)
!11889 = !DILocation(line: 1928, column: 3, scope: !11885)
!11890 = !DILocation(line: 1928, column: 14, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11877, file: !3, line: 1928, column: 14)
!11892 = !DILocation(line: 1928, column: 29, scope: !11891)
!11893 = !DILocation(line: 1928, column: 47, scope: !11891)
!11894 = !DILocation(line: 1929, column: 7, scope: !11891)
!11895 = !DILocation(line: 1929, column: 20, scope: !11891)
!11896 = !DILocation(line: 1928, column: 14, scope: !11877)
!11897 = !DILocation(line: 1930, column: 27, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11891, file: !3, line: 1929, column: 29)
!11899 = !DILocation(line: 1930, column: 42, scope: !11898)
!11900 = !DILocation(line: 1930, column: 47, scope: !11898)
!11901 = !DILocation(line: 1930, column: 4, scope: !11898)
!11902 = !DILocation(line: 1931, column: 3, scope: !11898)
!11903 = !DILocation(line: 1932, column: 2, scope: !11878)
!11904 = !DILocalVariable(name: "__mptr", scope: !11905, file: !3, line: 1924, type: !726)
!11905 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 1924, column: 2)
!11906 = !DILocation(line: 1924, column: 2, scope: !11905)
!11907 = !DILocation(line: 1924, column: 2, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 1924, column: 2)
!11909 = distinct !{!11909, !11868, !11910}
!11910 = !DILocation(line: 1932, column: 2, scope: !11864)
!11911 = !DILocation(line: 1933, column: 1, scope: !11846)
!11912 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_fid_leave", scope: !3, file: !3, line: 1007, type: !11625, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11913 = !DILocalVariable(name: "mlxsw_sp_port_vlan", arg: 1, scope: !11912, file: !3, line: 1007, type: !11091)
!11914 = !DILocation(line: 1007, column: 57, scope: !11912)
!11915 = !DILocalVariable(name: "mlxsw_sp_port", scope: !11912, file: !3, line: 1009, type: !10406)
!11916 = !DILocation(line: 1009, column: 24, scope: !11912)
!11917 = !DILocation(line: 1009, column: 40, scope: !11912)
!11918 = !DILocation(line: 1009, column: 60, scope: !11912)
!11919 = !DILocalVariable(name: "fid", scope: !11912, file: !3, line: 1010, type: !11097)
!11920 = !DILocation(line: 1010, column: 23, scope: !11912)
!11921 = !DILocation(line: 1010, column: 29, scope: !11912)
!11922 = !DILocation(line: 1010, column: 49, scope: !11912)
!11923 = !DILocalVariable(name: "local_port", scope: !11912, file: !3, line: 1011, type: !1551)
!11924 = !DILocation(line: 1011, column: 5, scope: !11912)
!11925 = !DILocation(line: 1011, column: 18, scope: !11912)
!11926 = !DILocation(line: 1011, column: 33, scope: !11912)
!11927 = !DILocalVariable(name: "vid", scope: !11912, file: !3, line: 1012, type: !1192)
!11928 = !DILocation(line: 1012, column: 6, scope: !11912)
!11929 = !DILocation(line: 1012, column: 12, scope: !11912)
!11930 = !DILocation(line: 1012, column: 32, scope: !11912)
!11931 = !DILocation(line: 1014, column: 2, scope: !11912)
!11932 = !DILocation(line: 1014, column: 22, scope: !11912)
!11933 = !DILocation(line: 1014, column: 26, scope: !11912)
!11934 = !DILocation(line: 1015, column: 30, scope: !11912)
!11935 = !DILocation(line: 1015, column: 35, scope: !11912)
!11936 = !DILocation(line: 1015, column: 50, scope: !11912)
!11937 = !DILocation(line: 1015, column: 2, scope: !11912)
!11938 = !DILocation(line: 1016, column: 25, scope: !11912)
!11939 = !DILocation(line: 1016, column: 54, scope: !11912)
!11940 = !DILocation(line: 1016, column: 2, scope: !11912)
!11941 = !DILocation(line: 1017, column: 25, scope: !11912)
!11942 = !DILocation(line: 1017, column: 54, scope: !11912)
!11943 = !DILocation(line: 1017, column: 2, scope: !11912)
!11944 = !DILocation(line: 1018, column: 25, scope: !11912)
!11945 = !DILocation(line: 1018, column: 54, scope: !11912)
!11946 = !DILocation(line: 1018, column: 2, scope: !11912)
!11947 = !DILocation(line: 1019, column: 19, scope: !11912)
!11948 = !DILocation(line: 1019, column: 2, scope: !11912)
!11949 = !DILocation(line: 1020, column: 1, scope: !11912)
!11950 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_put", scope: !3, file: !3, line: 395, type: !11951, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11951 = !DISubroutineType(types: !11952)
!11952 = !{null, !10473, !10389}
!11953 = !DILocalVariable(name: "bridge", arg: 1, scope: !11950, file: !3, line: 395, type: !10473)
!11954 = !DILocation(line: 395, column: 62, scope: !11950)
!11955 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !11950, file: !3, line: 396, type: !10389)
!11956 = !DILocation(line: 396, column: 39, scope: !11950)
!11957 = !DILocalVariable(name: "bridge_device", scope: !11950, file: !3, line: 398, type: !10370)
!11958 = !DILocation(line: 398, column: 33, scope: !11950)
!11959 = !DILocation(line: 400, column: 8, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11950, file: !3, line: 400, column: 6)
!11961 = !DILocation(line: 400, column: 21, scope: !11960)
!11962 = !DILocation(line: 400, column: 6, scope: !11960)
!11963 = !DILocation(line: 400, column: 31, scope: !11960)
!11964 = !DILocation(line: 400, column: 6, scope: !11950)
!11965 = !DILocation(line: 401, column: 3, scope: !11960)
!11966 = !DILocation(line: 402, column: 18, scope: !11950)
!11967 = !DILocation(line: 402, column: 31, scope: !11950)
!11968 = !DILocation(line: 402, column: 16, scope: !11950)
!11969 = !DILocation(line: 403, column: 31, scope: !11950)
!11970 = !DILocation(line: 403, column: 2, scope: !11950)
!11971 = !DILocation(line: 404, column: 29, scope: !11950)
!11972 = !DILocation(line: 404, column: 37, scope: !11950)
!11973 = !DILocation(line: 404, column: 2, scope: !11950)
!11974 = !DILocation(line: 405, column: 1, scope: !11950)
!11975 = distinct !DISubprogram(name: "mlxsw_sp_rif_fdb_op", scope: !3, file: !3, line: 1369, type: !11976, scopeLine: 1371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11976 = !DISubroutineType(types: !11977)
!11977 = !{!7, !10421, !453, !1192, !696}
!11978 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11975, file: !3, line: 1369, type: !10421)
!11979 = !DILocation(line: 1369, column: 42, scope: !11975)
!11980 = !DILocalVariable(name: "mac", arg: 2, scope: !11975, file: !3, line: 1369, type: !453)
!11981 = !DILocation(line: 1369, column: 64, scope: !11975)
!11982 = !DILocalVariable(name: "fid", arg: 3, scope: !11975, file: !3, line: 1369, type: !1192)
!11983 = !DILocation(line: 1369, column: 73, scope: !11975)
!11984 = !DILocalVariable(name: "adding", arg: 4, scope: !11975, file: !3, line: 1370, type: !696)
!11985 = !DILocation(line: 1370, column: 9, scope: !11975)
!11986 = !DILocation(line: 1372, column: 35, scope: !11975)
!11987 = !DILocation(line: 1372, column: 48, scope: !11975)
!11988 = !DILocation(line: 1372, column: 53, scope: !11975)
!11989 = !DILocation(line: 1372, column: 58, scope: !11975)
!11990 = !DILocation(line: 1372, column: 9, scope: !11975)
!11991 = !DILocation(line: 1372, column: 2, scope: !11975)
!11992 = distinct !DISubprogram(name: "__mlxsw_sp_port_fdb_uc_op", scope: !3, file: !3, line: 1332, type: !11993, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{!7, !10421, !1551, !453, !1192, !696, !10142, !10149}
!11995 = !DILocalVariable(name: "s", arg: 1, scope: !11996, file: !10185, line: 445, type: !2424)
!11996 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !10185, file: !10185, line: 445, type: !11997, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11997 = !DISubroutineType(types: !11998)
!11998 = !{!726, !2424, !2143, !750}
!11999 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !12000)
!12000 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !12006)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !10185, line: 540, column: 34)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !10185, line: 540, column: 6)
!12003 = distinct !DISubprogram(name: "kmalloc", scope: !10185, file: !10185, line: 538, type: !12004, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12004 = !DISubroutineType(types: !12005)
!12005 = !{!726, !750, !2143}
!12006 = distinct !DILocation(line: 1341, column: 11, scope: !11992)
!12007 = !DILocalVariable(name: "flags", arg: 2, scope: !11996, file: !10185, line: 446, type: !2143)
!12008 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !12000)
!12009 = !DILocalVariable(name: "size", arg: 3, scope: !11996, file: !10185, line: 446, type: !750)
!12010 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !12000)
!12011 = !DILocalVariable(name: "ret", scope: !11996, file: !10185, line: 448, type: !726)
!12012 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !12000)
!12013 = !DILocalVariable(name: "flags", arg: 1, scope: !12014, file: !10185, line: 318, type: !2143)
!12014 = distinct !DISubprogram(name: "kmalloc_type", scope: !10185, file: !10185, line: 318, type: !12015, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{!10184, !2143}
!12017 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !12018)
!12018 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !12006)
!12019 = !DILocalVariable(name: "size", arg: 1, scope: !12020, file: !10185, line: 346, type: !750)
!12020 = distinct !DISubprogram(name: "kmalloc_index", scope: !10185, file: !10185, line: 346, type: !12021, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12021 = !DISubroutineType(types: !12022)
!12022 = !{!14, !750}
!12023 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !12024)
!12024 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !12006)
!12025 = !DILocalVariable(name: "size", arg: 1, scope: !12026, file: !10185, line: 472, type: !750)
!12026 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !10185, file: !10185, line: 472, type: !12027, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12027 = !DISubroutineType(types: !12028)
!12028 = !{!726, !750, !2143, !14}
!12029 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !12030)
!12030 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !12032)
!12031 = distinct !DISubprogram(name: "kmalloc_large", scope: !10185, file: !10185, line: 478, type: !12004, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12032 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !12006)
!12033 = distinct !DILexicalBlock(scope: !12001, file: !10185, line: 544, column: 7)
!12034 = !DILocalVariable(name: "flags", arg: 2, scope: !12026, file: !10185, line: 472, type: !2143)
!12035 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !12030)
!12036 = !DILocalVariable(name: "order", arg: 3, scope: !12026, file: !10185, line: 472, type: !14)
!12037 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !12030)
!12038 = !DILocalVariable(name: "size", arg: 1, scope: !12031, file: !10185, line: 478, type: !750)
!12039 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !12032)
!12040 = !DILocalVariable(name: "flags", arg: 2, scope: !12031, file: !10185, line: 478, type: !2143)
!12041 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !12032)
!12042 = !DILocalVariable(name: "order", scope: !12031, file: !10185, line: 480, type: !14)
!12043 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !12032)
!12044 = !DILocalVariable(name: "size", arg: 1, scope: !12003, file: !10185, line: 538, type: !750)
!12045 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !12006)
!12046 = !DILocalVariable(name: "flags", arg: 2, scope: !12003, file: !10185, line: 538, type: !2143)
!12047 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !12006)
!12048 = !DILocalVariable(name: "index", scope: !12001, file: !10185, line: 542, type: !14)
!12049 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !12006)
!12050 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11992, file: !3, line: 1332, type: !10421)
!12051 = !DILocation(line: 1332, column: 55, scope: !11992)
!12052 = !DILocalVariable(name: "local_port", arg: 2, scope: !11992, file: !3, line: 1332, type: !1551)
!12053 = !DILocation(line: 1332, column: 68, scope: !11992)
!12054 = !DILocalVariable(name: "mac", arg: 3, scope: !11992, file: !3, line: 1333, type: !453)
!12055 = !DILocation(line: 1333, column: 22, scope: !11992)
!12056 = !DILocalVariable(name: "fid", arg: 4, scope: !11992, file: !3, line: 1333, type: !1192)
!12057 = !DILocation(line: 1333, column: 31, scope: !11992)
!12058 = !DILocalVariable(name: "adding", arg: 5, scope: !11992, file: !3, line: 1333, type: !696)
!12059 = !DILocation(line: 1333, column: 41, scope: !11992)
!12060 = !DILocalVariable(name: "action", arg: 6, scope: !11992, file: !3, line: 1334, type: !10142)
!12061 = !DILocation(line: 1334, column: 40, scope: !11992)
!12062 = !DILocalVariable(name: "policy", arg: 7, scope: !11992, file: !3, line: 1335, type: !10149)
!12063 = !DILocation(line: 1335, column: 40, scope: !11992)
!12064 = !DILocalVariable(name: "sfd_pl", scope: !11992, file: !3, line: 1337, type: !733)
!12065 = !DILocation(line: 1337, column: 8, scope: !11992)
!12066 = !DILocalVariable(name: "num_rec", scope: !11992, file: !3, line: 1338, type: !1551)
!12067 = !DILocation(line: 1338, column: 5, scope: !11992)
!12068 = !DILocalVariable(name: "err", scope: !11992, file: !3, line: 1339, type: !7)
!12069 = !DILocation(line: 1339, column: 6, scope: !11992)
!12070 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !12006)
!12071 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !12006)
!12072 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !12006)
!12073 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !12006)
!12074 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !12006)
!12075 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !12006)
!12076 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !12006)
!12077 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !12006)
!12078 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !12032)
!12079 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !12032)
!12080 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !12032)
!12081 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !12032)
!12082 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !12032)
!12083 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !12030)
!12084 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !12030)
!12085 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !12030)
!12086 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !12030)
!12087 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !12006)
!12088 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !12006)
!12089 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !12024)
!12090 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 348, column: 6)
!12091 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !12024)
!12092 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !12024)
!12093 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !12024)
!12094 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 351, column: 6)
!12095 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !12024)
!12096 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !12024)
!12097 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !12024)
!12098 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !12024)
!12099 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 354, column: 6)
!12100 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !12024)
!12101 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !12024)
!12102 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !12024)
!12103 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !12024)
!12104 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !12024)
!12105 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !12024)
!12106 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !12024)
!12107 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 356, column: 6)
!12108 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !12024)
!12109 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !12024)
!12110 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !12024)
!12111 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !12024)
!12112 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !12024)
!12113 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !12024)
!12114 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !12024)
!12115 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 358, column: 6)
!12116 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !12024)
!12117 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !12024)
!12118 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !12024)
!12119 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !12024)
!12120 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 359, column: 6)
!12121 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !12024)
!12122 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !12024)
!12123 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !12024)
!12124 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !12024)
!12125 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 360, column: 6)
!12126 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !12024)
!12127 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !12024)
!12128 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !12024)
!12129 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !12024)
!12130 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 361, column: 6)
!12131 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !12024)
!12132 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !12024)
!12133 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !12024)
!12134 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !12024)
!12135 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 362, column: 6)
!12136 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !12024)
!12137 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !12024)
!12138 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !12024)
!12139 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !12024)
!12140 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 363, column: 6)
!12141 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !12024)
!12142 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !12024)
!12143 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !12024)
!12144 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !12024)
!12145 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 364, column: 6)
!12146 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !12024)
!12147 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !12024)
!12148 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !12024)
!12149 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !12024)
!12150 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 365, column: 6)
!12151 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !12024)
!12152 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !12024)
!12153 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !12024)
!12154 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !12024)
!12155 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 366, column: 6)
!12156 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !12024)
!12157 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !12024)
!12158 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !12024)
!12159 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !12024)
!12160 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 367, column: 6)
!12161 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !12024)
!12162 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !12024)
!12163 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !12024)
!12164 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !12024)
!12165 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 368, column: 6)
!12166 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !12024)
!12167 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !12024)
!12168 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !12024)
!12169 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !12024)
!12170 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 369, column: 6)
!12171 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !12024)
!12172 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !12024)
!12173 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !12024)
!12174 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !12024)
!12175 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 370, column: 6)
!12176 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !12024)
!12177 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !12024)
!12178 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !12024)
!12179 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !12024)
!12180 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 371, column: 6)
!12181 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !12024)
!12182 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !12024)
!12183 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !12024)
!12184 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !12024)
!12185 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 372, column: 6)
!12186 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !12024)
!12187 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !12024)
!12188 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !12024)
!12189 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !12024)
!12190 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 373, column: 6)
!12191 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !12024)
!12192 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !12024)
!12193 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !12024)
!12194 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !12024)
!12195 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 374, column: 6)
!12196 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !12024)
!12197 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !12024)
!12198 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !12024)
!12199 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !12024)
!12200 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 375, column: 6)
!12201 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !12024)
!12202 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !12024)
!12203 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !12024)
!12204 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !12024)
!12205 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 376, column: 6)
!12206 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !12024)
!12207 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !12024)
!12208 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !12024)
!12209 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !12024)
!12210 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 377, column: 6)
!12211 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !12024)
!12212 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !12024)
!12213 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !12024)
!12214 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !12024)
!12215 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 378, column: 6)
!12216 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !12024)
!12217 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !12024)
!12218 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !12024)
!12219 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !12024)
!12220 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 379, column: 6)
!12221 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !12024)
!12222 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !12024)
!12223 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !12024)
!12224 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !12024)
!12225 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 380, column: 6)
!12226 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !12024)
!12227 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !12024)
!12228 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !12024)
!12229 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !12024)
!12230 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 381, column: 6)
!12231 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !12024)
!12232 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !12024)
!12233 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !12024)
!12234 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !12024)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !10185, line: 382, column: 2)
!12236 = distinct !DILexicalBlock(scope: !12020, file: !10185, line: 382, column: 2)
!12237 = !{i32 -2141946436, i32 -2141946407, i32 -2141946361, i32 -2141946303, i32 -2141946249, i32 -2141946195, i32 -2141946140, i32 -2141946109}
!12238 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !12024)
!12239 = distinct !DILexicalBlock(scope: !12240, file: !10185, line: 382, column: 2)
!12240 = distinct !DILexicalBlock(scope: !12236, file: !10185, line: 382, column: 2)
!12241 = !{i32 -2141945666, i32 -2141945659, i32 -2141945605, i32 -2141945574, i32 -2141945544}
!12242 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !12024)
!12243 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !12024)
!12244 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !12006)
!12245 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !12006)
!12246 = distinct !DILexicalBlock(scope: !12001, file: !10185, line: 549, column: 7)
!12247 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !12006)
!12248 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !12006)
!12249 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !12006)
!12250 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !12018)
!12251 = distinct !DILexicalBlock(scope: !12014, file: !10185, line: 325, column: 6)
!12252 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !12018)
!12253 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !12018)
!12254 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !12018)
!12255 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !12018)
!12256 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !12018)
!12257 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !12018)
!12258 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !12006)
!12259 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !12006)
!12260 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !12006)
!12261 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !12006)
!12262 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !12000)
!12263 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !12000)
!12264 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !12000)
!12265 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !12000)
!12266 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !12000)
!12267 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !12000)
!12268 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !12000)
!12269 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !12000)
!12270 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !12000)
!12271 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !12000)
!12272 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !12006)
!12273 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !12006)
!12274 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !12006)
!12275 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !12006)
!12276 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !12006)
!12277 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !12006)
!12278 = !DILocation(line: 1341, column: 9, scope: !11992)
!12279 = !DILocation(line: 1342, column: 7, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 1342, column: 6)
!12281 = !DILocation(line: 1342, column: 6, scope: !11992)
!12282 = !DILocation(line: 1343, column: 3, scope: !12280)
!12283 = !DILocation(line: 1345, column: 21, scope: !11992)
!12284 = !DILocation(line: 1345, column: 45, scope: !11992)
!12285 = !DILocation(line: 1345, column: 29, scope: !11992)
!12286 = !DILocation(line: 1345, column: 2, scope: !11992)
!12287 = !DILocation(line: 1346, column: 24, scope: !11992)
!12288 = !DILocation(line: 1346, column: 35, scope: !11992)
!12289 = !DILocation(line: 1346, column: 43, scope: !11992)
!12290 = !DILocation(line: 1346, column: 48, scope: !11992)
!12291 = !DILocation(line: 1346, column: 53, scope: !11992)
!12292 = !DILocation(line: 1346, column: 61, scope: !11992)
!12293 = !DILocation(line: 1346, column: 2, scope: !11992)
!12294 = !DILocation(line: 1347, column: 38, scope: !11992)
!12295 = !DILocation(line: 1347, column: 12, scope: !11992)
!12296 = !DILocation(line: 1347, column: 10, scope: !11992)
!12297 = !DILocation(line: 1348, column: 24, scope: !11992)
!12298 = !DILocation(line: 1348, column: 34, scope: !11992)
!12299 = !DILocation(line: 1348, column: 56, scope: !11992)
!12300 = !DILocation(line: 1348, column: 8, scope: !11992)
!12301 = !DILocation(line: 1348, column: 6, scope: !11992)
!12302 = !DILocation(line: 1349, column: 6, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 1349, column: 6)
!12304 = !DILocation(line: 1349, column: 6, scope: !11992)
!12305 = !DILocation(line: 1350, column: 3, scope: !12303)
!12306 = !DILocation(line: 1352, column: 6, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 1352, column: 6)
!12308 = !DILocation(line: 1352, column: 43, scope: !12307)
!12309 = !DILocation(line: 1352, column: 17, scope: !12307)
!12310 = !DILocation(line: 1352, column: 14, scope: !12307)
!12311 = !DILocation(line: 1352, column: 6, scope: !11992)
!12312 = !DILocation(line: 1353, column: 7, scope: !12307)
!12313 = !DILocation(line: 1353, column: 3, scope: !12307)
!12314 = !DILocation(line: 1352, column: 49, scope: !12307)
!12315 = !DILabel(scope: !11992, name: "out", file: !3, line: 1355)
!12316 = !DILocation(line: 1355, column: 1, scope: !11992)
!12317 = !DILocation(line: 1356, column: 8, scope: !11992)
!12318 = !DILocation(line: 1356, column: 2, scope: !11992)
!12319 = !DILocation(line: 1357, column: 9, scope: !11992)
!12320 = !DILocation(line: 1357, column: 2, scope: !11992)
!12321 = !DILocation(line: 1358, column: 1, scope: !11992)
!12322 = distinct !DISubprogram(name: "mlxsw_sp_port_bridge_join", scope: !3, file: !3, line: 2249, type: !12323, scopeLine: 2253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12323 = !DISubroutineType(types: !12324)
!12324 = !{!7, !10406, !451, !451, !2625}
!12325 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !12322, file: !3, line: 2249, type: !10406)
!12326 = !DILocation(line: 2249, column: 53, scope: !12322)
!12327 = !DILocalVariable(name: "brport_dev", arg: 2, scope: !12322, file: !3, line: 2250, type: !451)
!12328 = !DILocation(line: 2250, column: 29, scope: !12322)
!12329 = !DILocalVariable(name: "br_dev", arg: 3, scope: !12322, file: !3, line: 2251, type: !451)
!12330 = !DILocation(line: 2251, column: 29, scope: !12322)
!12331 = !DILocalVariable(name: "extack", arg: 4, scope: !12322, file: !3, line: 2252, type: !2625)
!12332 = !DILocation(line: 2252, column: 34, scope: !12322)
!12333 = !DILocalVariable(name: "mlxsw_sp", scope: !12322, file: !3, line: 2254, type: !10421)
!12334 = !DILocation(line: 2254, column: 19, scope: !12322)
!12335 = !DILocation(line: 2254, column: 30, scope: !12322)
!12336 = !DILocation(line: 2254, column: 45, scope: !12322)
!12337 = !DILocalVariable(name: "bridge_device", scope: !12322, file: !3, line: 2255, type: !10370)
!12338 = !DILocation(line: 2255, column: 33, scope: !12322)
!12339 = !DILocalVariable(name: "bridge_port", scope: !12322, file: !3, line: 2256, type: !10389)
!12340 = !DILocation(line: 2256, column: 31, scope: !12322)
!12341 = !DILocalVariable(name: "err", scope: !12322, file: !3, line: 2257, type: !7)
!12342 = !DILocation(line: 2257, column: 6, scope: !12322)
!12343 = !DILocation(line: 2259, column: 41, scope: !12322)
!12344 = !DILocation(line: 2259, column: 51, scope: !12322)
!12345 = !DILocation(line: 2259, column: 59, scope: !12322)
!12346 = !DILocation(line: 2260, column: 13, scope: !12322)
!12347 = !DILocation(line: 2259, column: 16, scope: !12322)
!12348 = !DILocation(line: 2259, column: 14, scope: !12322)
!12349 = !DILocation(line: 2261, column: 13, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 2261, column: 6)
!12351 = !DILocation(line: 2261, column: 6, scope: !12350)
!12352 = !DILocation(line: 2261, column: 6, scope: !12322)
!12353 = !DILocation(line: 2262, column: 18, scope: !12350)
!12354 = !DILocation(line: 2262, column: 10, scope: !12350)
!12355 = !DILocation(line: 2262, column: 3, scope: !12350)
!12356 = !DILocation(line: 2263, column: 18, scope: !12322)
!12357 = !DILocation(line: 2263, column: 31, scope: !12322)
!12358 = !DILocation(line: 2263, column: 16, scope: !12322)
!12359 = !DILocation(line: 2265, column: 8, scope: !12322)
!12360 = !DILocation(line: 2265, column: 23, scope: !12322)
!12361 = !DILocation(line: 2265, column: 28, scope: !12322)
!12362 = !DILocation(line: 2265, column: 38, scope: !12322)
!12363 = !DILocation(line: 2265, column: 53, scope: !12322)
!12364 = !DILocation(line: 2266, column: 10, scope: !12322)
!12365 = !DILocation(line: 2266, column: 25, scope: !12322)
!12366 = !DILocation(line: 2265, column: 6, scope: !12322)
!12367 = !DILocation(line: 2267, column: 6, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 2267, column: 6)
!12369 = !DILocation(line: 2267, column: 6, scope: !12322)
!12370 = !DILocation(line: 2268, column: 3, scope: !12368)
!12371 = !DILocation(line: 2270, column: 2, scope: !12322)
!12372 = !DILabel(scope: !12322, name: "err_port_join", file: !3, line: 2272)
!12373 = !DILocation(line: 2272, column: 1, scope: !12322)
!12374 = !DILocation(line: 2273, column: 27, scope: !12322)
!12375 = !DILocation(line: 2273, column: 37, scope: !12322)
!12376 = !DILocation(line: 2273, column: 45, scope: !12322)
!12377 = !DILocation(line: 2273, column: 2, scope: !12322)
!12378 = !DILocation(line: 2274, column: 9, scope: !12322)
!12379 = !DILocation(line: 2274, column: 2, scope: !12322)
!12380 = !DILocation(line: 2275, column: 1, scope: !12322)
!12381 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_get", scope: !3, file: !3, line: 363, type: !12382, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12382 = !DISubroutineType(types: !12383)
!12383 = !{!10389, !10473, !451, !2625}
!12384 = !DILocalVariable(name: "bridge", arg: 1, scope: !12381, file: !3, line: 363, type: !10473)
!12385 = !DILocation(line: 363, column: 50, scope: !12381)
!12386 = !DILocalVariable(name: "brport_dev", arg: 2, scope: !12381, file: !3, line: 364, type: !451)
!12387 = !DILocation(line: 364, column: 24, scope: !12381)
!12388 = !DILocalVariable(name: "extack", arg: 3, scope: !12381, file: !3, line: 365, type: !2625)
!12389 = !DILocation(line: 365, column: 29, scope: !12381)
!12390 = !DILocalVariable(name: "br_dev", scope: !12381, file: !3, line: 367, type: !451)
!12391 = !DILocation(line: 367, column: 21, scope: !12381)
!12392 = !DILocation(line: 367, column: 58, scope: !12381)
!12393 = !DILocation(line: 367, column: 30, scope: !12381)
!12394 = !DILocalVariable(name: "bridge_device", scope: !12381, file: !3, line: 368, type: !10370)
!12395 = !DILocation(line: 368, column: 33, scope: !12381)
!12396 = !DILocalVariable(name: "bridge_port", scope: !12381, file: !3, line: 369, type: !10389)
!12397 = !DILocation(line: 369, column: 31, scope: !12381)
!12398 = !DILocalVariable(name: "err", scope: !12381, file: !3, line: 370, type: !7)
!12399 = !DILocation(line: 370, column: 6, scope: !12381)
!12400 = !DILocation(line: 372, column: 42, scope: !12381)
!12401 = !DILocation(line: 372, column: 50, scope: !12381)
!12402 = !DILocation(line: 372, column: 16, scope: !12381)
!12403 = !DILocation(line: 372, column: 14, scope: !12381)
!12404 = !DILocation(line: 373, column: 6, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 373, column: 6)
!12406 = !DILocation(line: 373, column: 6, scope: !12381)
!12407 = !DILocation(line: 374, column: 3, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 373, column: 19)
!12409 = !DILocation(line: 374, column: 16, scope: !12408)
!12410 = !DILocation(line: 374, column: 25, scope: !12408)
!12411 = !DILocation(line: 375, column: 10, scope: !12408)
!12412 = !DILocation(line: 375, column: 3, scope: !12408)
!12413 = !DILocation(line: 378, column: 45, scope: !12381)
!12414 = !DILocation(line: 378, column: 53, scope: !12381)
!12415 = !DILocation(line: 378, column: 61, scope: !12381)
!12416 = !DILocation(line: 378, column: 18, scope: !12381)
!12417 = !DILocation(line: 378, column: 16, scope: !12381)
!12418 = !DILocation(line: 379, column: 13, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 379, column: 6)
!12420 = !DILocation(line: 379, column: 6, scope: !12419)
!12421 = !DILocation(line: 379, column: 6, scope: !12381)
!12422 = !DILocation(line: 380, column: 19, scope: !12419)
!12423 = !DILocation(line: 380, column: 10, scope: !12419)
!12424 = !DILocation(line: 380, column: 3, scope: !12419)
!12425 = !DILocation(line: 382, column: 44, scope: !12381)
!12426 = !DILocation(line: 382, column: 59, scope: !12381)
!12427 = !DILocation(line: 382, column: 16, scope: !12381)
!12428 = !DILocation(line: 382, column: 14, scope: !12381)
!12429 = !DILocation(line: 383, column: 7, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 383, column: 6)
!12431 = !DILocation(line: 383, column: 6, scope: !12381)
!12432 = !DILocation(line: 384, column: 7, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 383, column: 20)
!12434 = !DILocation(line: 385, column: 3, scope: !12433)
!12435 = !DILocation(line: 388, column: 9, scope: !12381)
!12436 = !DILocation(line: 388, column: 2, scope: !12381)
!12437 = !DILabel(scope: !12381, name: "err_bridge_port_create", file: !3, line: 390)
!12438 = !DILocation(line: 390, column: 1, scope: !12381)
!12439 = !DILocation(line: 391, column: 29, scope: !12381)
!12440 = !DILocation(line: 391, column: 37, scope: !12381)
!12441 = !DILocation(line: 391, column: 2, scope: !12381)
!12442 = !DILocation(line: 392, column: 17, scope: !12381)
!12443 = !DILocation(line: 392, column: 9, scope: !12381)
!12444 = !DILocation(line: 392, column: 2, scope: !12381)
!12445 = !DILocation(line: 393, column: 1, scope: !12381)
!12446 = distinct !DISubprogram(name: "IS_ERR", scope: !12447, file: !12447, line: 34, type: !12448, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12447 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!12448 = !DISubroutineType(types: !12449)
!12449 = !{!696, !2416}
!12450 = !DILocalVariable(name: "ptr", arg: 1, scope: !12446, file: !12447, line: 34, type: !2416)
!12451 = !DILocation(line: 34, column: 60, scope: !12446)
!12452 = !DILocation(line: 36, column: 9, scope: !12446)
!12453 = !DILocation(line: 36, column: 2, scope: !12446)
!12454 = distinct !DISubprogram(name: "PTR_ERR", scope: !12447, file: !12447, line: 29, type: !12455, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12455 = !DISubroutineType(types: !12456)
!12456 = !{!669, !2416}
!12457 = !DILocalVariable(name: "ptr", arg: 1, scope: !12454, file: !12447, line: 29, type: !2416)
!12458 = !DILocation(line: 29, column: 61, scope: !12454)
!12459 = !DILocation(line: 31, column: 16, scope: !12454)
!12460 = !DILocation(line: 31, column: 9, scope: !12454)
!12461 = !DILocation(line: 31, column: 2, scope: !12454)
!12462 = distinct !DISubprogram(name: "mlxsw_sp_port_bridge_leave", scope: !3, file: !3, line: 2277, type: !12463, scopeLine: 2280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{null, !10406, !451, !451}
!12465 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !12462, file: !3, line: 2277, type: !10406)
!12466 = !DILocation(line: 2277, column: 55, scope: !12462)
!12467 = !DILocalVariable(name: "brport_dev", arg: 2, scope: !12462, file: !3, line: 2278, type: !451)
!12468 = !DILocation(line: 2278, column: 24, scope: !12462)
!12469 = !DILocalVariable(name: "br_dev", arg: 3, scope: !12462, file: !3, line: 2279, type: !451)
!12470 = !DILocation(line: 2279, column: 24, scope: !12462)
!12471 = !DILocalVariable(name: "mlxsw_sp", scope: !12462, file: !3, line: 2281, type: !10421)
!12472 = !DILocation(line: 2281, column: 19, scope: !12462)
!12473 = !DILocation(line: 2281, column: 30, scope: !12462)
!12474 = !DILocation(line: 2281, column: 45, scope: !12462)
!12475 = !DILocalVariable(name: "bridge_device", scope: !12462, file: !3, line: 2282, type: !10370)
!12476 = !DILocation(line: 2282, column: 33, scope: !12462)
!12477 = !DILocalVariable(name: "bridge_port", scope: !12462, file: !3, line: 2283, type: !10389)
!12478 = !DILocation(line: 2283, column: 31, scope: !12462)
!12479 = !DILocation(line: 2285, column: 46, scope: !12462)
!12480 = !DILocation(line: 2285, column: 56, scope: !12462)
!12481 = !DILocation(line: 2285, column: 64, scope: !12462)
!12482 = !DILocation(line: 2285, column: 18, scope: !12462)
!12483 = !DILocation(line: 2285, column: 16, scope: !12462)
!12484 = !DILocation(line: 2286, column: 7, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12462, file: !3, line: 2286, column: 6)
!12486 = !DILocation(line: 2286, column: 6, scope: !12462)
!12487 = !DILocation(line: 2287, column: 3, scope: !12485)
!12488 = !DILocation(line: 2288, column: 44, scope: !12462)
!12489 = !DILocation(line: 2288, column: 59, scope: !12462)
!12490 = !DILocation(line: 2288, column: 16, scope: !12462)
!12491 = !DILocation(line: 2288, column: 14, scope: !12462)
!12492 = !DILocation(line: 2289, column: 7, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12462, file: !3, line: 2289, column: 6)
!12494 = !DILocation(line: 2289, column: 6, scope: !12462)
!12495 = !DILocation(line: 2290, column: 3, scope: !12493)
!12496 = !DILocation(line: 2292, column: 2, scope: !12462)
!12497 = !DILocation(line: 2292, column: 17, scope: !12462)
!12498 = !DILocation(line: 2292, column: 22, scope: !12462)
!12499 = !DILocation(line: 2292, column: 33, scope: !12462)
!12500 = !DILocation(line: 2292, column: 48, scope: !12462)
!12501 = !DILocation(line: 2293, column: 12, scope: !12462)
!12502 = !DILocation(line: 2294, column: 27, scope: !12462)
!12503 = !DILocation(line: 2294, column: 37, scope: !12462)
!12504 = !DILocation(line: 2294, column: 45, scope: !12462)
!12505 = !DILocation(line: 2294, column: 2, scope: !12462)
!12506 = !DILocation(line: 2295, column: 1, scope: !12462)
!12507 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vxlan_join", scope: !3, file: !3, line: 2297, type: !12508, scopeLine: 2301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12508 = !DISubroutineType(types: !12509)
!12509 = !{!7, !10421, !3015, !3015, !1192, !2625}
!12510 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12507, file: !3, line: 2297, type: !10421)
!12511 = !DILocation(line: 2297, column: 49, scope: !12507)
!12512 = !DILocalVariable(name: "br_dev", arg: 2, scope: !12507, file: !3, line: 2298, type: !3015)
!12513 = !DILocation(line: 2298, column: 36, scope: !12507)
!12514 = !DILocalVariable(name: "vxlan_dev", arg: 3, scope: !12507, file: !3, line: 2299, type: !3015)
!12515 = !DILocation(line: 2299, column: 36, scope: !12507)
!12516 = !DILocalVariable(name: "vid", arg: 4, scope: !12507, file: !3, line: 2299, type: !1192)
!12517 = !DILocation(line: 2299, column: 51, scope: !12507)
!12518 = !DILocalVariable(name: "extack", arg: 5, scope: !12507, file: !3, line: 2300, type: !2625)
!12519 = !DILocation(line: 2300, column: 35, scope: !12507)
!12520 = !DILocalVariable(name: "bridge_device", scope: !12507, file: !3, line: 2302, type: !10370)
!12521 = !DILocation(line: 2302, column: 33, scope: !12507)
!12522 = !DILocation(line: 2304, column: 46, scope: !12507)
!12523 = !DILocation(line: 2304, column: 56, scope: !12507)
!12524 = !DILocation(line: 2304, column: 64, scope: !12507)
!12525 = !DILocation(line: 2304, column: 18, scope: !12507)
!12526 = !DILocation(line: 2304, column: 16, scope: !12507)
!12527 = !DILocalVariable(name: "__ret_warn_on", scope: !12528, file: !3, line: 2305, type: !7)
!12528 = distinct !DILexicalBlock(scope: !12529, file: !3, line: 2305, column: 6)
!12529 = distinct !DILexicalBlock(scope: !12507, file: !3, line: 2305, column: 6)
!12530 = !DILocation(line: 2305, column: 6, scope: !12528)
!12531 = !DILocation(line: 2305, column: 6, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 2305, column: 6)
!12533 = !DILocation(line: 2305, column: 6, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 2305, column: 6)
!12535 = !DILocation(line: 2305, column: 6, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 2305, column: 6)
!12537 = !DILocation(line: 2305, column: 6, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 2305, column: 6)
!12539 = !{i32 -2134706784, i32 -2134706755, i32 -2134706709, i32 -2134706651, i32 -2134706597, i32 -2134706543, i32 -2134706488, i32 -2134706457}
!12540 = !DILocation(line: 2305, column: 6, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 2305, column: 6)
!12542 = !{i32 -2134706018, i32 -2134706011, i32 -2134705959, i32 -2134705928, i32 -2134705898}
!12543 = !DILocation(line: 2305, column: 6, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 2305, column: 6)
!12545 = !DILocation(line: 2305, column: 6, scope: !12529)
!12546 = !DILocation(line: 2305, column: 6, scope: !12507)
!12547 = !DILocation(line: 2306, column: 3, scope: !12529)
!12548 = !DILocation(line: 2308, column: 9, scope: !12507)
!12549 = !DILocation(line: 2308, column: 24, scope: !12507)
!12550 = !DILocation(line: 2308, column: 29, scope: !12507)
!12551 = !DILocation(line: 2308, column: 40, scope: !12507)
!12552 = !DILocation(line: 2308, column: 55, scope: !12507)
!12553 = !DILocation(line: 2308, column: 66, scope: !12507)
!12554 = !DILocation(line: 2309, column: 12, scope: !12507)
!12555 = !DILocation(line: 2308, column: 2, scope: !12507)
!12556 = !DILocation(line: 2310, column: 1, scope: !12507)
!12557 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vxlan_leave", scope: !3, file: !3, line: 2312, type: !12558, scopeLine: 2314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12558 = !DISubroutineType(types: !12559)
!12559 = !{null, !10421, !3015}
!12560 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12557, file: !3, line: 2312, type: !10421)
!12561 = !DILocation(line: 2312, column: 51, scope: !12557)
!12562 = !DILocalVariable(name: "vxlan_dev", arg: 2, scope: !12557, file: !3, line: 2313, type: !3015)
!12563 = !DILocation(line: 2313, column: 31, scope: !12557)
!12564 = !DILocalVariable(name: "vxlan", scope: !12557, file: !3, line: 2315, type: !12565)
!12565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12566, size: 64)
!12566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vxlan_dev", file: !11249, line: 235, size: 19264, elements: !12567)
!12567 = !{!12568, !12573, !12574, !12575, !12587, !12588, !12589, !12590, !12609, !12610, !12614, !12615, !12622, !12641}
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "hlist4", scope: !12566, file: !11249, line: 236, baseType: !12569, size: 192)
!12569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vxlan_dev_node", file: !11249, line: 229, size: 192, elements: !12570)
!12570 = !{!12571, !12572}
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !12569, file: !11249, line: 230, baseType: !437, size: 128)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "vxlan", scope: !12569, file: !11249, line: 231, baseType: !12565, size: 64, offset: 128)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "hlist6", scope: !12566, file: !11249, line: 238, baseType: !12569, size: 192, offset: 192)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12566, file: !11249, line: 240, baseType: !445, size: 128, offset: 384)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "vn4_sock", scope: !12566, file: !11249, line: 241, baseType: !12576, size: 64, offset: 512)
!12576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12577, size: 64)
!12577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vxlan_sock", file: !11249, line: 184, size: 65792, elements: !12578)
!12578 = !{!12579, !12580, !12581, !12585, !12586}
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !12577, file: !11249, line: 185, baseType: !437, size: 128)
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !12577, file: !11249, line: 186, baseType: !7647, size: 64, offset: 128)
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "vni_list", scope: !12577, file: !11249, line: 187, baseType: !12582, size: 65536, offset: 192)
!12582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 65536, elements: !12583)
!12583 = !{!12584}
!12584 = !DISubrange(count: 1024)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !12577, file: !11249, line: 188, baseType: !1425, size: 32, offset: 65728)
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12577, file: !11249, line: 189, baseType: !862, size: 32, offset: 65760)
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "vn6_sock", scope: !12566, file: !11249, line: 243, baseType: !12576, size: 64, offset: 576)
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !12566, file: !11249, line: 245, baseType: !451, size: 64, offset: 640)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !12566, file: !11249, line: 246, baseType: !2115, size: 64, offset: 704)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "default_dst", scope: !12566, file: !11249, line: 247, baseType: !12591, size: 768, offset: 768)
!12591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vxlan_rdst", file: !11249, line: 198, size: 768, elements: !12592)
!12592 = !{!12593, !12594, !12595, !12596, !12597, !12598, !12599, !12600, !12601}
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !12591, file: !11249, line: 199, baseType: !11253, size: 224)
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !12591, file: !11249, line: 200, baseType: !645, size: 16, offset: 224)
!12595 = !DIDerivedType(tag: DW_TAG_member, name: "offloaded", scope: !12591, file: !11249, line: 201, baseType: !1551, size: 1, offset: 240, flags: DIFlagBitField, extraData: i64 240)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "remote_vni", scope: !12591, file: !11249, line: 202, baseType: !622, size: 32, offset: 256)
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ifindex", scope: !12591, file: !11249, line: 203, baseType: !862, size: 32, offset: 288)
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "remote_dev", scope: !12591, file: !11249, line: 204, baseType: !451, size: 64, offset: 320)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12591, file: !11249, line: 205, baseType: !445, size: 128, offset: 384)
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !12591, file: !11249, line: 206, baseType: !460, size: 128, align: 64, offset: 512)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "dst_cache", scope: !12591, file: !11249, line: 207, baseType: !12602, size: 128, offset: 640)
!12602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_cache", file: !12603, line: 11, size: 128, elements: !12604)
!12603 = !DIFile(filename: "./include/net/dst_cache.h", directory: "/home/lizy2001/genbc/linux")
!12604 = !{!12605, !12608}
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !12602, file: !12603, line: 12, baseType: !12606, size: 64)
!12606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12607, size: 64)
!12607 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_cache_pcpu", file: !12603, line: 12, flags: DIFlagFwdDecl)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ts", scope: !12602, file: !12603, line: 13, baseType: !473, size: 64, offset: 64)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "age_timer", scope: !12566, file: !11249, line: 249, baseType: !2393, size: 320, offset: 1536)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "hash_lock", scope: !12566, file: !11249, line: 250, baseType: !12611, offset: 1856)
!12611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !884, elements: !12612)
!12612 = !{!12613}
!12613 = !DISubrange(count: 256)
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "addrcnt", scope: !12566, file: !11249, line: 251, baseType: !14, size: 32, offset: 1856)
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "gro_cells", scope: !12566, file: !11249, line: 252, baseType: !12616, size: 64, offset: 1920)
!12616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_cells", file: !12617, line: 11, size: 64, elements: !12618)
!12617 = !DIFile(filename: "./include/net/gro_cells.h", directory: "/home/lizy2001/genbc/linux")
!12618 = !{!12619}
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "cells", scope: !12616, file: !12617, line: 12, baseType: !12620, size: 64)
!12620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12621, size: 64)
!12621 = !DICompositeType(tag: DW_TAG_structure_type, name: "gro_cell", file: !12617, line: 9, flags: DIFlagFwdDecl)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !12566, file: !11249, line: 254, baseType: !12623, size: 896, offset: 1984)
!12623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vxlan_config", file: !11249, line: 210, size: 896, elements: !12624)
!12624 = !{!12625, !12626, !12627, !12628, !12629, !12630, !12631, !12632, !12633, !12634, !12635, !12636, !12637, !12638, !12639, !12640}
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !12623, file: !11249, line: 211, baseType: !11253, size: 224)
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !12623, file: !11249, line: 212, baseType: !11253, size: 224, offset: 224)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "vni", scope: !12623, file: !11249, line: 213, baseType: !622, size: 32, offset: 448)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ifindex", scope: !12623, file: !11249, line: 214, baseType: !7, size: 32, offset: 480)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !12623, file: !11249, line: 215, baseType: !7, size: 32, offset: 512)
!12630 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port", scope: !12623, file: !11249, line: 216, baseType: !645, size: 16, offset: 544)
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "port_min", scope: !12623, file: !11249, line: 217, baseType: !1192, size: 16, offset: 560)
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "port_max", scope: !12623, file: !11249, line: 218, baseType: !1192, size: 16, offset: 576)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !12623, file: !11249, line: 219, baseType: !1551, size: 8, offset: 592)
!12634 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !12623, file: !11249, line: 220, baseType: !1551, size: 8, offset: 600)
!12635 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !12623, file: !11249, line: 221, baseType: !622, size: 32, offset: 608)
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12623, file: !11249, line: 222, baseType: !862, size: 32, offset: 640)
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "age_interval", scope: !12623, file: !11249, line: 223, baseType: !473, size: 64, offset: 704)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "addrmax", scope: !12623, file: !11249, line: 224, baseType: !14, size: 32, offset: 768)
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "no_share", scope: !12623, file: !11249, line: 225, baseType: !696, size: 8, offset: 800)
!12640 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !12623, file: !11249, line: 226, baseType: !10154, size: 32, offset: 832)
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_head", scope: !12566, file: !11249, line: 256, baseType: !12642, size: 16384, offset: 2880)
!12642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 16384, elements: !12612)
!12643 = !DILocation(line: 2315, column: 20, scope: !12557)
!12644 = !DILocation(line: 2315, column: 40, scope: !12557)
!12645 = !DILocation(line: 2315, column: 28, scope: !12557)
!12646 = !DILocalVariable(name: "fid", scope: !12557, file: !3, line: 2316, type: !11097)
!12647 = !DILocation(line: 2316, column: 23, scope: !12557)
!12648 = !DILocation(line: 2319, column: 35, scope: !12557)
!12649 = !DILocation(line: 2319, column: 45, scope: !12557)
!12650 = !DILocation(line: 2319, column: 52, scope: !12557)
!12651 = !DILocation(line: 2319, column: 56, scope: !12557)
!12652 = !DILocation(line: 2319, column: 8, scope: !12557)
!12653 = !DILocation(line: 2319, column: 6, scope: !12557)
!12654 = !DILocation(line: 2320, column: 7, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 2320, column: 6)
!12656 = !DILocation(line: 2320, column: 6, scope: !12557)
!12657 = !DILocation(line: 2321, column: 3, scope: !12655)
!12658 = !DILocation(line: 2323, column: 27, scope: !12557)
!12659 = !DILocation(line: 2323, column: 37, scope: !12557)
!12660 = !DILocation(line: 2323, column: 2, scope: !12557)
!12661 = !DILocation(line: 2327, column: 19, scope: !12557)
!12662 = !DILocation(line: 2327, column: 2, scope: !12557)
!12663 = !DILocation(line: 2328, column: 19, scope: !12557)
!12664 = !DILocation(line: 2328, column: 2, scope: !12557)
!12665 = !DILocation(line: 2329, column: 1, scope: !12557)
!12666 = distinct !DISubprogram(name: "netdev_priv", scope: !6, file: !6, line: 2322, type: !12667, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!726, !3015}
!12669 = !DILocalVariable(name: "dev", arg: 1, scope: !12666, file: !6, line: 2322, type: !3015)
!12670 = !DILocation(line: 2322, column: 58, scope: !12666)
!12671 = !DILocation(line: 2324, column: 17, scope: !12666)
!12672 = !DILocation(line: 2324, column: 9, scope: !12666)
!12673 = !DILocation(line: 2324, column: 21, scope: !12666)
!12674 = !DILocation(line: 2324, column: 2, scope: !12666)
!12675 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_event", scope: !3, file: !3, line: 3089, type: !2174, scopeLine: 3091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12676 = !DILocalVariable(name: "unused", arg: 1, scope: !12675, file: !3, line: 3089, type: !2168)
!12677 = !DILocation(line: 3089, column: 60, scope: !12675)
!12678 = !DILocalVariable(name: "event", arg: 2, scope: !12675, file: !3, line: 3090, type: !473)
!12679 = !DILocation(line: 3090, column: 23, scope: !12675)
!12680 = !DILocalVariable(name: "ptr", arg: 3, scope: !12675, file: !3, line: 3090, type: !726)
!12681 = !DILocation(line: 3090, column: 36, scope: !12675)
!12682 = !DILocalVariable(name: "dev", scope: !12675, file: !3, line: 3092, type: !451)
!12683 = !DILocation(line: 3092, column: 21, scope: !12675)
!12684 = !DILocation(line: 3092, column: 58, scope: !12675)
!12685 = !DILocation(line: 3092, column: 27, scope: !12675)
!12686 = !DILocalVariable(name: "switchdev_work", scope: !12675, file: !3, line: 3093, type: !11239)
!12687 = !DILocation(line: 3093, column: 40, scope: !12675)
!12688 = !DILocalVariable(name: "fdb_info", scope: !12675, file: !3, line: 3094, type: !11227)
!12689 = !DILocation(line: 3094, column: 38, scope: !12675)
!12690 = !DILocalVariable(name: "info", scope: !12675, file: !3, line: 3095, type: !11400)
!12691 = !DILocation(line: 3095, column: 34, scope: !12675)
!12692 = !DILocation(line: 3095, column: 41, scope: !12675)
!12693 = !DILocalVariable(name: "br_dev", scope: !12675, file: !3, line: 3096, type: !451)
!12694 = !DILocation(line: 3096, column: 21, scope: !12675)
!12695 = !DILocalVariable(name: "err", scope: !12675, file: !3, line: 3097, type: !7)
!12696 = !DILocation(line: 3097, column: 6, scope: !12675)
!12697 = !DILocation(line: 3099, column: 6, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 3099, column: 6)
!12699 = !DILocation(line: 3099, column: 12, scope: !12698)
!12700 = !DILocation(line: 3099, column: 6, scope: !12675)
!12701 = !DILocation(line: 3100, column: 40, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 3099, column: 40)
!12703 = !DILocation(line: 3100, column: 45, scope: !12702)
!12704 = !DILocation(line: 3100, column: 9, scope: !12702)
!12705 = !DILocation(line: 3100, column: 7, scope: !12702)
!12706 = !DILocation(line: 3103, column: 30, scope: !12702)
!12707 = !DILocation(line: 3103, column: 10, scope: !12702)
!12708 = !DILocation(line: 3103, column: 3, scope: !12702)
!12709 = !DILocation(line: 3107, column: 43, scope: !12675)
!12710 = !DILocation(line: 3107, column: 11, scope: !12675)
!12711 = !DILocation(line: 3107, column: 9, scope: !12675)
!12712 = !DILocation(line: 3108, column: 7, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 3108, column: 6)
!12714 = !DILocation(line: 3108, column: 6, scope: !12675)
!12715 = !DILocation(line: 3109, column: 3, scope: !12713)
!12716 = !DILocation(line: 3110, column: 30, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 3110, column: 6)
!12718 = !DILocation(line: 3110, column: 7, scope: !12717)
!12719 = !DILocation(line: 3110, column: 6, scope: !12675)
!12720 = !DILocation(line: 3111, column: 3, scope: !12717)
!12721 = !DILocation(line: 3112, column: 40, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 3112, column: 6)
!12723 = !DILocation(line: 3112, column: 7, scope: !12722)
!12724 = !DILocation(line: 3112, column: 6, scope: !12675)
!12725 = !DILocation(line: 3113, column: 3, scope: !12722)
!12726 = !DILocation(line: 3115, column: 19, scope: !12675)
!12727 = !DILocation(line: 3115, column: 17, scope: !12675)
!12728 = !DILocation(line: 3116, column: 7, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 3116, column: 6)
!12730 = !DILocation(line: 3116, column: 6, scope: !12675)
!12731 = !DILocation(line: 3117, column: 3, scope: !12729)
!12732 = !DILocation(line: 3119, column: 24, scope: !12675)
!12733 = !DILocation(line: 3119, column: 2, scope: !12675)
!12734 = !DILocation(line: 3119, column: 18, scope: !12675)
!12735 = !DILocation(line: 3119, column: 22, scope: !12675)
!12736 = !DILocation(line: 3120, column: 26, scope: !12675)
!12737 = !DILocation(line: 3120, column: 2, scope: !12675)
!12738 = !DILocation(line: 3120, column: 18, scope: !12675)
!12739 = !DILocation(line: 3120, column: 24, scope: !12675)
!12740 = !DILocation(line: 3122, column: 10, scope: !12675)
!12741 = !DILocation(line: 3122, column: 2, scope: !12675)
!12742 = !DILocalVariable(name: "__mptr", scope: !12743, file: !3, line: 3127, type: !726)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 3127, column: 14)
!12744 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 3122, column: 17)
!12745 = !DILocation(line: 3127, column: 14, scope: !12743)
!12746 = !DILocation(line: 3127, column: 14, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12743, file: !3, line: 3127, column: 14)
!12748 = !DILocation(line: 3127, column: 12, scope: !12744)
!12749 = !DILocation(line: 3130, column: 3, scope: !12744)
!12750 = !DILocation(line: 3130, column: 3, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 3130, column: 3)
!12752 = !DILocation(line: 3132, column: 11, scope: !12744)
!12753 = !DILocation(line: 3132, column: 27, scope: !12744)
!12754 = !DILocation(line: 3132, column: 3, scope: !12744)
!12755 = !DILocation(line: 3132, column: 37, scope: !12744)
!12756 = !DILocation(line: 3134, column: 35, scope: !12744)
!12757 = !DILocation(line: 3134, column: 3, scope: !12744)
!12758 = !DILocation(line: 3134, column: 19, scope: !12744)
!12759 = !DILocation(line: 3134, column: 28, scope: !12744)
!12760 = !DILocation(line: 3134, column: 33, scope: !12744)
!12761 = !DILocation(line: 3135, column: 8, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 3135, column: 7)
!12763 = !DILocation(line: 3135, column: 24, scope: !12762)
!12764 = !DILocation(line: 3135, column: 33, scope: !12762)
!12765 = !DILocation(line: 3135, column: 7, scope: !12744)
!12766 = !DILocation(line: 3136, column: 4, scope: !12762)
!12767 = !DILocation(line: 3137, column: 25, scope: !12744)
!12768 = !DILocation(line: 3137, column: 41, scope: !12744)
!12769 = !DILocation(line: 3137, column: 50, scope: !12744)
!12770 = !DILocation(line: 3138, column: 5, scope: !12744)
!12771 = !DILocation(line: 3138, column: 15, scope: !12744)
!12772 = !DILocation(line: 3137, column: 3, scope: !12744)
!12773 = !DILocation(line: 3143, column: 12, scope: !12744)
!12774 = !DILocation(line: 3143, column: 3, scope: !12744)
!12775 = !DILocation(line: 3144, column: 3, scope: !12744)
!12776 = !DILocation(line: 3147, column: 3, scope: !12744)
!12777 = !DILocation(line: 3147, column: 3, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 3147, column: 3)
!12779 = !DILocation(line: 3149, column: 47, scope: !12744)
!12780 = !DILocation(line: 3150, column: 12, scope: !12744)
!12781 = !DILocation(line: 3149, column: 9, scope: !12744)
!12782 = !DILocation(line: 3149, column: 7, scope: !12744)
!12783 = !DILocation(line: 3151, column: 7, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 3151, column: 7)
!12785 = !DILocation(line: 3151, column: 7, scope: !12744)
!12786 = !DILocation(line: 3152, column: 4, scope: !12784)
!12787 = !DILocation(line: 3153, column: 12, scope: !12744)
!12788 = !DILocation(line: 3153, column: 3, scope: !12744)
!12789 = !DILocation(line: 3154, column: 3, scope: !12744)
!12790 = !DILocation(line: 3156, column: 9, scope: !12744)
!12791 = !DILocation(line: 3156, column: 3, scope: !12744)
!12792 = !DILocation(line: 3157, column: 3, scope: !12744)
!12793 = !DILocation(line: 3160, column: 28, scope: !12675)
!12794 = !DILocation(line: 3160, column: 44, scope: !12675)
!12795 = !DILocation(line: 3160, column: 2, scope: !12675)
!12796 = !DILocation(line: 3162, column: 2, scope: !12675)
!12797 = !DILabel(scope: !12675, name: "err_vxlan_work_prepare", file: !3, line: 3164)
!12798 = !DILocation(line: 3164, column: 1, scope: !12675)
!12799 = !DILabel(scope: !12675, name: "err_addr_alloc", file: !3, line: 3165)
!12800 = !DILocation(line: 3165, column: 1, scope: !12675)
!12801 = !DILocation(line: 3166, column: 8, scope: !12675)
!12802 = !DILocation(line: 3166, column: 2, scope: !12675)
!12803 = !DILocation(line: 3167, column: 2, scope: !12675)
!12804 = !DILocation(line: 3168, column: 1, scope: !12675)
!12805 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_stp_state", scope: !3, file: !3, line: 3444, type: !12806, scopeLine: 3445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{!1551, !10389}
!12808 = !DILocalVariable(name: "bridge_port", arg: 1, scope: !12805, file: !3, line: 3444, type: !10389)
!12809 = !DILocation(line: 3444, column: 61, scope: !12805)
!12810 = !DILocation(line: 3446, column: 9, scope: !12805)
!12811 = !DILocation(line: 3446, column: 22, scope: !12805)
!12812 = !DILocation(line: 3446, column: 2, scope: !12805)
!12813 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_init", scope: !3, file: !3, line: 3496, type: !10951, scopeLine: 3497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12814 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12813, file: !3, line: 3496, type: !10421)
!12815 = !DILocation(line: 3496, column: 46, scope: !12813)
!12816 = !DILocalVariable(name: "bridge", scope: !12813, file: !3, line: 3498, type: !10473)
!12817 = !DILocation(line: 3498, column: 26, scope: !12813)
!12818 = !DILocation(line: 3500, column: 11, scope: !12813)
!12819 = !DILocation(line: 3500, column: 9, scope: !12813)
!12820 = !DILocation(line: 3501, column: 7, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12813, file: !3, line: 3501, column: 6)
!12822 = !DILocation(line: 3501, column: 6, scope: !12813)
!12823 = !DILocation(line: 3502, column: 3, scope: !12821)
!12824 = !DILocation(line: 3503, column: 21, scope: !12813)
!12825 = !DILocation(line: 3503, column: 2, scope: !12813)
!12826 = !DILocation(line: 3503, column: 12, scope: !12813)
!12827 = !DILocation(line: 3503, column: 19, scope: !12813)
!12828 = !DILocation(line: 3504, column: 21, scope: !12813)
!12829 = !DILocation(line: 3504, column: 2, scope: !12813)
!12830 = !DILocation(line: 3504, column: 10, scope: !12813)
!12831 = !DILocation(line: 3504, column: 19, scope: !12813)
!12832 = !DILocation(line: 3506, column: 18, scope: !12813)
!12833 = !DILocation(line: 3506, column: 28, scope: !12813)
!12834 = !DILocation(line: 3506, column: 36, scope: !12813)
!12835 = !DILocation(line: 3506, column: 2, scope: !12813)
!12836 = !DILocation(line: 3508, column: 2, scope: !12813)
!12837 = !DILocation(line: 3508, column: 10, scope: !12813)
!12838 = !DILocation(line: 3508, column: 27, scope: !12813)
!12839 = !DILocation(line: 3509, column: 2, scope: !12813)
!12840 = !DILocation(line: 3509, column: 10, scope: !12813)
!12841 = !DILocation(line: 3509, column: 27, scope: !12813)
!12842 = !DILocation(line: 3511, column: 27, scope: !12813)
!12843 = !DILocation(line: 3511, column: 9, scope: !12813)
!12844 = !DILocation(line: 3511, column: 2, scope: !12813)
!12845 = !DILocation(line: 3512, column: 1, scope: !12813)
!12846 = distinct !DISubprogram(name: "kzalloc", scope: !10185, file: !10185, line: 662, type: !12004, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12847 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !12848)
!12848 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !12849)
!12849 = distinct !DILocation(line: 664, column: 9, scope: !12846)
!12850 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !12848)
!12851 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !12848)
!12852 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !12848)
!12853 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !12854)
!12854 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !12849)
!12855 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !12856)
!12856 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !12849)
!12857 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !12858)
!12858 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !12859)
!12859 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !12849)
!12860 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !12858)
!12861 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !12858)
!12862 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !12859)
!12863 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !12859)
!12864 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !12859)
!12865 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !12849)
!12866 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !12849)
!12867 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !12849)
!12868 = !DILocalVariable(name: "size", arg: 1, scope: !12846, file: !10185, line: 662, type: !750)
!12869 = !DILocation(line: 662, column: 36, scope: !12846)
!12870 = !DILocalVariable(name: "flags", arg: 2, scope: !12846, file: !10185, line: 662, type: !2143)
!12871 = !DILocation(line: 662, column: 48, scope: !12846)
!12872 = !DILocation(line: 664, column: 17, scope: !12846)
!12873 = !DILocation(line: 664, column: 23, scope: !12846)
!12874 = !DILocation(line: 664, column: 29, scope: !12846)
!12875 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !12849)
!12876 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !12849)
!12877 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !12849)
!12878 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !12849)
!12879 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !12849)
!12880 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !12849)
!12881 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !12849)
!12882 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !12849)
!12883 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !12859)
!12884 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !12859)
!12885 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !12859)
!12886 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !12859)
!12887 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !12859)
!12888 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !12858)
!12889 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !12858)
!12890 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !12858)
!12891 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !12858)
!12892 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !12849)
!12893 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !12849)
!12894 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !12856)
!12895 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !12856)
!12896 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !12856)
!12897 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !12856)
!12898 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !12856)
!12899 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !12856)
!12900 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !12856)
!12901 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !12856)
!12902 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !12856)
!12903 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !12856)
!12904 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !12856)
!12905 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !12856)
!12906 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !12856)
!12907 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !12856)
!12908 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !12856)
!12909 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !12856)
!12910 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !12856)
!12911 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !12856)
!12912 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !12856)
!12913 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !12856)
!12914 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !12856)
!12915 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !12856)
!12916 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !12856)
!12917 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !12856)
!12918 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !12856)
!12919 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !12856)
!12920 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !12856)
!12921 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !12856)
!12922 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !12856)
!12923 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !12856)
!12924 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !12856)
!12925 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !12856)
!12926 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !12856)
!12927 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !12856)
!12928 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !12856)
!12929 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !12856)
!12930 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !12856)
!12931 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !12856)
!12932 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !12856)
!12933 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !12856)
!12934 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !12856)
!12935 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !12856)
!12936 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !12856)
!12937 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !12856)
!12938 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !12856)
!12939 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !12856)
!12940 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !12856)
!12941 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !12856)
!12942 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !12856)
!12943 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !12856)
!12944 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !12856)
!12945 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !12856)
!12946 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !12856)
!12947 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !12856)
!12948 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !12856)
!12949 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !12856)
!12950 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !12856)
!12951 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !12856)
!12952 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !12856)
!12953 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !12856)
!12954 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !12856)
!12955 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !12856)
!12956 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !12856)
!12957 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !12856)
!12958 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !12856)
!12959 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !12856)
!12960 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !12856)
!12961 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !12856)
!12962 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !12856)
!12963 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !12856)
!12964 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !12856)
!12965 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !12856)
!12966 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !12856)
!12967 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !12856)
!12968 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !12856)
!12969 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !12856)
!12970 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !12856)
!12971 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !12856)
!12972 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !12856)
!12973 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !12856)
!12974 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !12856)
!12975 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !12856)
!12976 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !12856)
!12977 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !12856)
!12978 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !12856)
!12979 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !12856)
!12980 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !12856)
!12981 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !12856)
!12982 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !12856)
!12983 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !12856)
!12984 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !12856)
!12985 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !12856)
!12986 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !12856)
!12987 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !12856)
!12988 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !12856)
!12989 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !12856)
!12990 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !12856)
!12991 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !12856)
!12992 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !12856)
!12993 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !12856)
!12994 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !12856)
!12995 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !12856)
!12996 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !12856)
!12997 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !12856)
!12998 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !12856)
!12999 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !12856)
!13000 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !12856)
!13001 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !12856)
!13002 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !12856)
!13003 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !12856)
!13004 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !12856)
!13005 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !12856)
!13006 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !12856)
!13007 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !12856)
!13008 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !12856)
!13009 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !12856)
!13010 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !12856)
!13011 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !12856)
!13012 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !12856)
!13013 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !12856)
!13014 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !12856)
!13015 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !12849)
!13016 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !12849)
!13017 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !12849)
!13018 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !12849)
!13019 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !12849)
!13020 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !12854)
!13021 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !12854)
!13022 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !12854)
!13023 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !12854)
!13024 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !12854)
!13025 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !12854)
!13026 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !12854)
!13027 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !12849)
!13028 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !12849)
!13029 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !12849)
!13030 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !12849)
!13031 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !12848)
!13032 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !12848)
!13033 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !12848)
!13034 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !12848)
!13035 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !12848)
!13036 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !12848)
!13037 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !12848)
!13038 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !12848)
!13039 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !12848)
!13040 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !12848)
!13041 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !12849)
!13042 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !12849)
!13043 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !12849)
!13044 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !12849)
!13045 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !12849)
!13046 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !12849)
!13047 = !DILocation(line: 664, column: 2, scope: !12846)
!13048 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !11724, file: !11724, line: 33, type: !11781, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13049 = !DILocalVariable(name: "list", arg: 1, scope: !13048, file: !11724, line: 33, type: !448)
!13050 = !DILocation(line: 33, column: 53, scope: !13048)
!13051 = !DILocation(line: 35, column: 2, scope: !13048)
!13052 = !DILocation(line: 35, column: 2, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13048, file: !11724, line: 35, column: 2)
!13054 = !DILocation(line: 35, column: 2, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13053, file: !11724, line: 35, column: 2)
!13056 = !DILocation(line: 35, column: 2, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13053, file: !11724, line: 35, column: 2)
!13058 = !DILocation(line: 36, column: 15, scope: !13048)
!13059 = !DILocation(line: 36, column: 2, scope: !13048)
!13060 = !DILocation(line: 36, column: 8, scope: !13048)
!13061 = !DILocation(line: 36, column: 13, scope: !13048)
!13062 = !DILocation(line: 37, column: 1, scope: !13048)
!13063 = distinct !DISubprogram(name: "mlxsw_sp_fdb_init", scope: !3, file: !3, line: 3449, type: !10951, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13064 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !13063, file: !3, line: 3449, type: !10421)
!13065 = !DILocation(line: 3449, column: 47, scope: !13063)
!13066 = !DILocalVariable(name: "bridge", scope: !13063, file: !3, line: 3451, type: !10473)
!13067 = !DILocation(line: 3451, column: 26, scope: !13063)
!13068 = !DILocation(line: 3451, column: 35, scope: !13063)
!13069 = !DILocation(line: 3451, column: 45, scope: !13063)
!13070 = !DILocalVariable(name: "nb", scope: !13063, file: !3, line: 3452, type: !2168)
!13071 = !DILocation(line: 3452, column: 25, scope: !13063)
!13072 = !DILocalVariable(name: "err", scope: !13063, file: !3, line: 3453, type: !7)
!13073 = !DILocation(line: 3453, column: 6, scope: !13063)
!13074 = !DILocation(line: 3455, column: 28, scope: !13063)
!13075 = !DILocation(line: 3455, column: 8, scope: !13063)
!13076 = !DILocation(line: 3455, column: 6, scope: !13063)
!13077 = !DILocation(line: 3456, column: 6, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3456, column: 6)
!13079 = !DILocation(line: 3456, column: 6, scope: !13063)
!13080 = !DILocation(line: 3457, column: 3, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13078, file: !3, line: 3456, column: 11)
!13082 = !DILocation(line: 3458, column: 10, scope: !13081)
!13083 = !DILocation(line: 3458, column: 3, scope: !13081)
!13084 = !DILocation(line: 3461, column: 8, scope: !13063)
!13085 = !DILocation(line: 3461, column: 6, scope: !13063)
!13086 = !DILocation(line: 3462, column: 6, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3462, column: 6)
!13088 = !DILocation(line: 3462, column: 6, scope: !13063)
!13089 = !DILocation(line: 3463, column: 3, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13087, file: !3, line: 3462, column: 11)
!13091 = !DILocation(line: 3464, column: 10, scope: !13090)
!13092 = !DILocation(line: 3464, column: 3, scope: !13090)
!13093 = !DILocation(line: 3467, column: 5, scope: !13063)
!13094 = !DILocation(line: 3468, column: 45, scope: !13063)
!13095 = !DILocation(line: 3468, column: 8, scope: !13063)
!13096 = !DILocation(line: 3468, column: 6, scope: !13063)
!13097 = !DILocation(line: 3469, column: 6, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3469, column: 6)
!13099 = !DILocation(line: 3469, column: 6, scope: !13063)
!13100 = !DILocation(line: 3470, column: 3, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 3469, column: 11)
!13102 = !DILocation(line: 3471, column: 3, scope: !13101)
!13103 = !DILocation(line: 3474, column: 2, scope: !13063)
!13104 = !DILocation(line: 3474, column: 2, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3474, column: 2)
!13106 = !DILocation(line: 3474, column: 2, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13105, file: !3, line: 3474, column: 2)
!13108 = !DILocation(line: 3475, column: 2, scope: !13063)
!13109 = !DILocation(line: 3475, column: 10, scope: !13063)
!13110 = !DILocation(line: 3475, column: 21, scope: !13063)
!13111 = !DILocation(line: 3475, column: 30, scope: !13063)
!13112 = !DILocation(line: 3476, column: 36, scope: !13063)
!13113 = !DILocation(line: 3476, column: 2, scope: !13063)
!13114 = !DILocation(line: 3477, column: 2, scope: !13063)
!13115 = !DILabel(scope: !13063, name: "err_register_switchdev_blocking_notifier", file: !3, line: 3479)
!13116 = !DILocation(line: 3479, column: 1, scope: !13063)
!13117 = !DILocation(line: 3480, column: 2, scope: !13063)
!13118 = !DILocation(line: 3481, column: 9, scope: !13063)
!13119 = !DILocation(line: 3481, column: 2, scope: !13063)
!13120 = !DILocation(line: 3482, column: 1, scope: !13063)
!13121 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_fini", scope: !3, file: !3, line: 3514, type: !13122, scopeLine: 3515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{null, !10421}
!13124 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !13121, file: !3, line: 3514, type: !10421)
!13125 = !DILocation(line: 3514, column: 47, scope: !13121)
!13126 = !DILocation(line: 3516, column: 20, scope: !13121)
!13127 = !DILocation(line: 3516, column: 2, scope: !13121)
!13128 = !DILocalVariable(name: "__ret_warn_on", scope: !13129, file: !3, line: 3517, type: !7)
!13129 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 3517, column: 2)
!13130 = !DILocation(line: 3517, column: 2, scope: !13129)
!13131 = !DILocation(line: 3517, column: 2, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 3517, column: 2)
!13133 = !DILocation(line: 3517, column: 2, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 3517, column: 2)
!13135 = !DILocation(line: 3517, column: 2, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 3517, column: 2)
!13137 = !DILocation(line: 3517, column: 2, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 3517, column: 2)
!13139 = !{i32 -2134680504, i32 -2134680475, i32 -2134680429, i32 -2134680371, i32 -2134680317, i32 -2134680263, i32 -2134680208, i32 -2134680177}
!13140 = !DILocation(line: 3517, column: 2, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 3517, column: 2)
!13142 = !{i32 -2134679738, i32 -2134679731, i32 -2134679679, i32 -2134679648, i32 -2134679618}
!13143 = !DILocation(line: 3517, column: 2, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 3517, column: 2)
!13145 = !DILocation(line: 3518, column: 8, scope: !13121)
!13146 = !DILocation(line: 3518, column: 18, scope: !13121)
!13147 = !DILocation(line: 3518, column: 2, scope: !13121)
!13148 = !DILocation(line: 3519, column: 1, scope: !13121)
!13149 = distinct !DISubprogram(name: "mlxsw_sp_fdb_fini", scope: !3, file: !3, line: 3484, type: !13122, scopeLine: 3485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13150 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !13149, file: !3, line: 3484, type: !10421)
!13151 = !DILocation(line: 3484, column: 48, scope: !13149)
!13152 = !DILocalVariable(name: "nb", scope: !13149, file: !3, line: 3486, type: !2168)
!13153 = !DILocation(line: 3486, column: 25, scope: !13149)
!13154 = !DILocation(line: 3488, column: 28, scope: !13149)
!13155 = !DILocation(line: 3488, column: 38, scope: !13149)
!13156 = !DILocation(line: 3488, column: 46, scope: !13149)
!13157 = !DILocation(line: 3488, column: 57, scope: !13149)
!13158 = !DILocation(line: 3488, column: 2, scope: !13149)
!13159 = !DILocation(line: 3490, column: 5, scope: !13149)
!13160 = !DILocation(line: 3491, column: 41, scope: !13149)
!13161 = !DILocation(line: 3491, column: 2, scope: !13149)
!13162 = !DILocation(line: 3493, column: 2, scope: !13149)
!13163 = !DILocation(line: 3494, column: 1, scope: !13149)
!13164 = distinct !DISubprogram(name: "list_empty", scope: !11724, file: !11724, line: 280, type: !11725, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13165 = !DILocalVariable(name: "head", arg: 1, scope: !13164, file: !11724, line: 280, type: !11727)
!13166 = !DILocation(line: 280, column: 54, scope: !13164)
!13167 = !DILocation(line: 282, column: 9, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13164, file: !11724, line: 282, column: 9)
!13169 = !DILocation(line: 282, column: 9, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13168, file: !11724, line: 282, column: 9)
!13171 = !DILocation(line: 282, column: 34, scope: !13164)
!13172 = !DILocation(line: 282, column: 31, scope: !13164)
!13173 = !DILocation(line: 282, column: 2, scope: !13164)
!13174 = distinct !DISubprogram(name: "__list_del_entry", scope: !11724, file: !11724, line: 130, type: !11781, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13175 = !DILocalVariable(name: "entry", arg: 1, scope: !13174, file: !11724, line: 130, type: !448)
!13176 = !DILocation(line: 130, column: 55, scope: !13174)
!13177 = !DILocation(line: 132, column: 30, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13174, file: !11724, line: 132, column: 6)
!13179 = !DILocation(line: 132, column: 7, scope: !13178)
!13180 = !DILocation(line: 132, column: 6, scope: !13174)
!13181 = !DILocation(line: 133, column: 3, scope: !13178)
!13182 = !DILocation(line: 135, column: 13, scope: !13174)
!13183 = !DILocation(line: 135, column: 20, scope: !13174)
!13184 = !DILocation(line: 135, column: 26, scope: !13174)
!13185 = !DILocation(line: 135, column: 33, scope: !13174)
!13186 = !DILocation(line: 135, column: 2, scope: !13174)
!13187 = !DILocation(line: 136, column: 1, scope: !13174)
!13188 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !11724, file: !11724, line: 51, type: !13189, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13189 = !DISubroutineType(types: !13190)
!13190 = !{!696, !448}
!13191 = !DILocalVariable(name: "entry", arg: 1, scope: !13188, file: !11724, line: 51, type: !448)
!13192 = !DILocation(line: 51, column: 61, scope: !13188)
!13193 = !DILocation(line: 53, column: 2, scope: !13188)
!13194 = distinct !DISubprogram(name: "__list_del", scope: !11724, file: !11724, line: 110, type: !13195, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13195 = !DISubroutineType(types: !13196)
!13196 = !{null, !448, !448}
!13197 = !DILocalVariable(name: "prev", arg: 1, scope: !13194, file: !11724, line: 110, type: !448)
!13198 = !DILocation(line: 110, column: 50, scope: !13194)
!13199 = !DILocalVariable(name: "next", arg: 2, scope: !13194, file: !11724, line: 110, type: !448)
!13200 = !DILocation(line: 110, column: 75, scope: !13194)
!13201 = !DILocation(line: 112, column: 15, scope: !13194)
!13202 = !DILocation(line: 112, column: 2, scope: !13194)
!13203 = !DILocation(line: 112, column: 8, scope: !13194)
!13204 = !DILocation(line: 112, column: 13, scope: !13194)
!13205 = !DILocation(line: 113, column: 2, scope: !13194)
!13206 = !DILocation(line: 113, column: 2, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13194, file: !11724, line: 113, column: 2)
!13208 = !DILocation(line: 113, column: 2, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13207, file: !11724, line: 113, column: 2)
!13210 = !DILocation(line: 113, column: 2, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13207, file: !11724, line: 113, column: 2)
!13212 = !DILocation(line: 114, column: 1, scope: !13194)
!13213 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vlan_destroy", scope: !3, file: !3, line: 479, type: !11795, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13214 = !DILocalVariable(name: "bridge_vlan", arg: 1, scope: !13213, file: !3, line: 479, type: !11206)
!13215 = !DILocation(line: 479, column: 59, scope: !13213)
!13216 = !DILocation(line: 481, column: 12, scope: !13213)
!13217 = !DILocation(line: 481, column: 25, scope: !13213)
!13218 = !DILocation(line: 481, column: 2, scope: !13213)
!13219 = !DILocalVariable(name: "__ret_warn_on", scope: !13220, file: !3, line: 482, type: !7)
!13220 = distinct !DILexicalBlock(scope: !13213, file: !3, line: 482, column: 2)
!13221 = !DILocation(line: 482, column: 2, scope: !13220)
!13222 = !DILocation(line: 482, column: 2, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 482, column: 2)
!13224 = !DILocation(line: 482, column: 2, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13223, file: !3, line: 482, column: 2)
!13226 = !DILocation(line: 482, column: 2, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 482, column: 2)
!13228 = !DILocation(line: 482, column: 2, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 482, column: 2)
!13230 = !{i32 -2134808751, i32 -2134808722, i32 -2134808676, i32 -2134808618, i32 -2134808564, i32 -2134808510, i32 -2134808455, i32 -2134808424}
!13231 = !DILocation(line: 482, column: 2, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 482, column: 2)
!13233 = !{i32 -2134807986, i32 -2134807979, i32 -2134807927, i32 -2134807896, i32 -2134807866}
!13234 = !DILocation(line: 482, column: 2, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 482, column: 2)
!13236 = !DILocation(line: 483, column: 8, scope: !13213)
!13237 = !DILocation(line: 483, column: 2, scope: !13213)
!13238 = !DILocation(line: 484, column: 1, scope: !13213)
!13239 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_destroy", scope: !3, file: !3, line: 355, type: !13240, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13240 = !DISubroutineType(types: !13241)
!13241 = !{null, !10389}
!13242 = !DILocalVariable(name: "bridge_port", arg: 1, scope: !13239, file: !3, line: 355, type: !10389)
!13243 = !DILocation(line: 355, column: 59, scope: !13239)
!13244 = !DILocation(line: 357, column: 12, scope: !13239)
!13245 = !DILocation(line: 357, column: 25, scope: !13239)
!13246 = !DILocation(line: 357, column: 2, scope: !13239)
!13247 = !DILocalVariable(name: "__ret_warn_on", scope: !13248, file: !3, line: 358, type: !7)
!13248 = distinct !DILexicalBlock(scope: !13239, file: !3, line: 358, column: 2)
!13249 = !DILocation(line: 358, column: 2, scope: !13248)
!13250 = !DILocation(line: 358, column: 2, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13248, file: !3, line: 358, column: 2)
!13252 = !DILocation(line: 358, column: 2, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13251, file: !3, line: 358, column: 2)
!13254 = !DILocation(line: 358, column: 2, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 358, column: 2)
!13256 = !DILocation(line: 358, column: 2, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 358, column: 2)
!13258 = !{i32 -2134824046, i32 -2134824017, i32 -2134823971, i32 -2134823913, i32 -2134823859, i32 -2134823805, i32 -2134823750, i32 -2134823719}
!13259 = !DILocation(line: 358, column: 2, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 358, column: 2)
!13261 = !{i32 -2134823281, i32 -2134823274, i32 -2134823222, i32 -2134823191, i32 -2134823161}
!13262 = !DILocation(line: 358, column: 2, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 358, column: 2)
!13264 = !DILocation(line: 359, column: 8, scope: !13239)
!13265 = !DILocation(line: 359, column: 2, scope: !13239)
!13266 = !DILocation(line: 360, column: 1, scope: !13239)
!13267 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_put", scope: !3, file: !3, line: 287, type: !13268, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13268 = !DISubroutineType(types: !13269)
!13269 = !{null, !10473, !10370}
!13270 = !DILocalVariable(name: "bridge", arg: 1, scope: !13267, file: !3, line: 287, type: !10473)
!13271 = !DILocation(line: 287, column: 52, scope: !13267)
!13272 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !13267, file: !3, line: 288, type: !10370)
!13273 = !DILocation(line: 288, column: 38, scope: !13267)
!13274 = !DILocation(line: 290, column: 18, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 290, column: 6)
!13276 = !DILocation(line: 290, column: 33, scope: !13275)
!13277 = !DILocation(line: 290, column: 6, scope: !13275)
!13278 = !DILocation(line: 290, column: 6, scope: !13267)
!13279 = !DILocation(line: 291, column: 34, scope: !13275)
!13280 = !DILocation(line: 291, column: 42, scope: !13275)
!13281 = !DILocation(line: 291, column: 3, scope: !13275)
!13282 = !DILocation(line: 292, column: 1, scope: !13267)
!13283 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_destroy", scope: !3, file: !3, line: 258, type: !13268, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13284 = !DILocalVariable(name: "bridge", arg: 1, scope: !13283, file: !3, line: 258, type: !10473)
!13285 = !DILocation(line: 258, column: 56, scope: !13283)
!13286 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !13283, file: !3, line: 259, type: !10370)
!13287 = !DILocation(line: 259, column: 42, scope: !13283)
!13288 = !DILocation(line: 261, column: 36, scope: !13283)
!13289 = !DILocation(line: 261, column: 44, scope: !13283)
!13290 = !DILocation(line: 261, column: 59, scope: !13283)
!13291 = !DILocation(line: 261, column: 2, scope: !13283)
!13292 = !DILocation(line: 262, column: 38, scope: !13283)
!13293 = !DILocation(line: 262, column: 46, scope: !13283)
!13294 = !DILocation(line: 263, column: 10, scope: !13283)
!13295 = !DILocation(line: 263, column: 25, scope: !13283)
!13296 = !DILocation(line: 262, column: 2, scope: !13283)
!13297 = !DILocation(line: 264, column: 12, scope: !13283)
!13298 = !DILocation(line: 264, column: 27, scope: !13283)
!13299 = !DILocation(line: 264, column: 2, scope: !13283)
!13300 = !DILocation(line: 265, column: 6, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13283, file: !3, line: 265, column: 6)
!13302 = !DILocation(line: 265, column: 21, scope: !13301)
!13303 = !DILocation(line: 265, column: 6, scope: !13283)
!13304 = !DILocation(line: 266, column: 3, scope: !13301)
!13305 = !DILocation(line: 266, column: 11, scope: !13301)
!13306 = !DILocation(line: 266, column: 31, scope: !13301)
!13307 = !DILocalVariable(name: "__ret_warn_on", scope: !13308, file: !3, line: 267, type: !7)
!13308 = distinct !DILexicalBlock(scope: !13283, file: !3, line: 267, column: 2)
!13309 = !DILocation(line: 267, column: 2, scope: !13308)
!13310 = !DILocation(line: 267, column: 2, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13308, file: !3, line: 267, column: 2)
!13312 = !DILocation(line: 267, column: 2, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 267, column: 2)
!13314 = !DILocation(line: 267, column: 2, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 267, column: 2)
!13316 = !DILocation(line: 267, column: 2, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 267, column: 2)
!13318 = !{i32 -2134835998, i32 -2134835969, i32 -2134835923, i32 -2134835865, i32 -2134835811, i32 -2134835757, i32 -2134835702, i32 -2134835671}
!13319 = !DILocation(line: 267, column: 2, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 267, column: 2)
!13321 = !{i32 -2134835233, i32 -2134835226, i32 -2134835174, i32 -2134835143, i32 -2134835113}
!13322 = !DILocation(line: 267, column: 2, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 267, column: 2)
!13324 = !DILocalVariable(name: "__ret_warn_on", scope: !13325, file: !3, line: 268, type: !7)
!13325 = distinct !DILexicalBlock(scope: !13283, file: !3, line: 268, column: 2)
!13326 = !DILocation(line: 268, column: 2, scope: !13325)
!13327 = !DILocation(line: 268, column: 2, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 268, column: 2)
!13329 = !DILocation(line: 268, column: 2, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13328, file: !3, line: 268, column: 2)
!13331 = !DILocation(line: 268, column: 2, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13330, file: !3, line: 268, column: 2)
!13333 = !DILocation(line: 268, column: 2, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13330, file: !3, line: 268, column: 2)
!13335 = !{i32 -2134834503, i32 -2134834474, i32 -2134834428, i32 -2134834370, i32 -2134834316, i32 -2134834262, i32 -2134834207, i32 -2134834176}
!13336 = !DILocation(line: 268, column: 2, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13330, file: !3, line: 268, column: 2)
!13338 = !{i32 -2134829677, i32 -2134829670, i32 -2134829618, i32 -2134829587, i32 -2134829557}
!13339 = !DILocation(line: 268, column: 2, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13330, file: !3, line: 268, column: 2)
!13341 = !DILocation(line: 269, column: 8, scope: !13283)
!13342 = !DILocation(line: 269, column: 2, scope: !13283)
!13343 = !DILocation(line: 270, column: 1, scope: !13283)
!13344 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_vxlan_fini", scope: !3, file: !3, line: 193, type: !13345, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13345 = !DISubroutineType(types: !13346)
!13346 = !{null, !10473, !451}
!13347 = !DILocalVariable(name: "bridge", arg: 1, scope: !13344, file: !3, line: 193, type: !10473)
!13348 = !DILocation(line: 193, column: 71, scope: !13344)
!13349 = !DILocalVariable(name: "br_dev", arg: 2, scope: !13344, file: !3, line: 194, type: !451)
!13350 = !DILocation(line: 194, column: 31, scope: !13344)
!13351 = !DILocalVariable(name: "dev", scope: !13344, file: !3, line: 196, type: !451)
!13352 = !DILocation(line: 196, column: 21, scope: !13344)
!13353 = !DILocalVariable(name: "iter", scope: !13344, file: !3, line: 197, type: !448)
!13354 = !DILocation(line: 197, column: 20, scope: !13344)
!13355 = !DILocation(line: 199, column: 2, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13344, file: !3, line: 199, column: 2)
!13357 = !DILocation(line: 199, column: 2, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 199, column: 2)
!13359 = !DILocation(line: 200, column: 22, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13361, file: !3, line: 200, column: 7)
!13361 = distinct !DILexicalBlock(scope: !13358, file: !3, line: 199, column: 47)
!13362 = !DILocation(line: 200, column: 7, scope: !13360)
!13363 = !DILocation(line: 200, column: 27, scope: !13360)
!13364 = !DILocation(line: 200, column: 44, scope: !13360)
!13365 = !DILocation(line: 200, column: 30, scope: !13360)
!13366 = !DILocation(line: 200, column: 7, scope: !13361)
!13367 = !DILocation(line: 201, column: 32, scope: !13360)
!13368 = !DILocation(line: 201, column: 40, scope: !13360)
!13369 = !DILocation(line: 201, column: 50, scope: !13360)
!13370 = !DILocation(line: 201, column: 4, scope: !13360)
!13371 = !DILocation(line: 202, column: 2, scope: !13361)
!13372 = distinct !{!13372, !13355, !13373}
!13373 = !DILocation(line: 202, column: 2, scope: !13356)
!13374 = !DILocation(line: 203, column: 1, scope: !13344)
!13375 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_rifs_destroy", scope: !3, file: !3, line: 147, type: !13376, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13376 = !DISubroutineType(types: !13377)
!13377 = !{null, !10421, !451}
!13378 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !13375, file: !3, line: 147, type: !10421)
!13379 = !DILocation(line: 147, column: 66, scope: !13375)
!13380 = !DILocalVariable(name: "dev", arg: 2, scope: !13375, file: !3, line: 148, type: !451)
!13381 = !DILocation(line: 148, column: 26, scope: !13375)
!13382 = !DILocalVariable(name: "priv", scope: !13375, file: !3, line: 150, type: !13383)
!13383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_nested_priv", file: !6, line: 4542, size: 128, elements: !13384)
!13384 = !{!13385, !13386}
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13383, file: !6, line: 4543, baseType: !650, size: 8)
!13386 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13383, file: !6, line: 4544, baseType: !726, size: 64, offset: 64)
!13387 = !DILocation(line: 150, column: 28, scope: !13375)
!13388 = !DILocation(line: 150, column: 35, scope: !13375)
!13389 = !DILocation(line: 151, column: 19, scope: !13375)
!13390 = !DILocation(line: 151, column: 11, scope: !13375)
!13391 = !DILocation(line: 154, column: 30, scope: !13375)
!13392 = !DILocation(line: 154, column: 40, scope: !13375)
!13393 = !DILocation(line: 154, column: 2, scope: !13375)
!13394 = !DILocation(line: 155, column: 32, scope: !13375)
!13395 = !DILocation(line: 155, column: 2, scope: !13375)
!13396 = !DILocation(line: 158, column: 1, scope: !13375)
!13397 = distinct !DISubprogram(name: "netif_is_vxlan", scope: !11249, file: !11249, line: 416, type: !13398, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!696, !3015}
!13400 = !DILocalVariable(name: "dev", arg: 1, scope: !13397, file: !11249, line: 416, type: !3015)
!13401 = !DILocation(line: 416, column: 60, scope: !13397)
!13402 = !DILocation(line: 418, column: 9, scope: !13397)
!13403 = !DILocation(line: 418, column: 14, scope: !13397)
!13404 = !DILocation(line: 418, column: 28, scope: !13397)
!13405 = !DILocation(line: 419, column: 17, scope: !13397)
!13406 = !DILocation(line: 419, column: 22, scope: !13397)
!13407 = !DILocation(line: 419, column: 37, scope: !13397)
!13408 = !DILocation(line: 419, column: 10, scope: !13397)
!13409 = !DILocation(line: 419, column: 9, scope: !13397)
!13410 = !DILocation(line: 0, scope: !13397)
!13411 = !DILocation(line: 418, column: 2, scope: !13397)
!13412 = distinct !DISubprogram(name: "netif_running", scope: !6, file: !6, line: 3556, type: !13398, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13413 = !DILocalVariable(name: "dev", arg: 1, scope: !13412, file: !6, line: 3556, type: !3015)
!13414 = !DILocation(line: 3556, column: 59, scope: !13412)
!13415 = !DILocation(line: 3558, column: 39, scope: !13412)
!13416 = !DILocation(line: 3558, column: 44, scope: !13412)
!13417 = !DILocation(line: 3558, column: 9, scope: !13412)
!13418 = !DILocation(line: 3558, column: 2, scope: !13412)
!13419 = distinct !DISubprogram(name: "test_bit", scope: !13420, file: !13420, line: 132, type: !13421, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13420 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13421 = !DISubroutineType(types: !13422)
!13422 = !{!696, !669, !13423}
!13423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13424, size: 64)
!13424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13425)
!13425 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !473)
!13426 = !DILocalVariable(name: "nr", arg: 1, scope: !13427, file: !13428, line: 210, type: !669)
!13427 = distinct !DISubprogram(name: "variable_test_bit", scope: !13428, file: !13428, line: 210, type: !13421, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13428 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!13429 = !DILocation(line: 210, column: 52, scope: !13427, inlinedAt: !13430)
!13430 = distinct !DILocation(line: 135, column: 9, scope: !13419)
!13431 = !DILocalVariable(name: "addr", arg: 2, scope: !13427, file: !13428, line: 210, type: !13423)
!13432 = !DILocation(line: 210, column: 86, scope: !13427, inlinedAt: !13430)
!13433 = !DILocalVariable(name: "oldbit", scope: !13427, file: !13428, line: 212, type: !696)
!13434 = !DILocation(line: 212, column: 7, scope: !13427, inlinedAt: !13430)
!13435 = !DILocalVariable(name: "nr", arg: 1, scope: !13436, file: !13428, line: 204, type: !669)
!13436 = distinct !DISubprogram(name: "constant_test_bit", scope: !13428, file: !13428, line: 204, type: !13421, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13437 = !DILocation(line: 204, column: 52, scope: !13436, inlinedAt: !13438)
!13438 = distinct !DILocation(line: 135, column: 9, scope: !13419)
!13439 = !DILocalVariable(name: "addr", arg: 2, scope: !13436, file: !13428, line: 204, type: !13423)
!13440 = !DILocation(line: 204, column: 86, scope: !13436, inlinedAt: !13438)
!13441 = !DILocalVariable(name: "v", arg: 1, scope: !13442, file: !13443, line: 69, type: !13446)
!13442 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !13443, file: !13443, line: 69, type: !13444, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13443 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13444 = !DISubroutineType(types: !13445)
!13445 = !{null, !13446, !750}
!13446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13447, size: 64)
!13447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13448)
!13448 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!13449 = !DILocation(line: 69, column: 73, scope: !13442, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 134, column: 2, scope: !13419)
!13451 = !DILocalVariable(name: "size", arg: 2, scope: !13442, file: !13443, line: 69, type: !750)
!13452 = !DILocation(line: 69, column: 83, scope: !13442, inlinedAt: !13450)
!13453 = !DILocalVariable(name: "nr", arg: 1, scope: !13419, file: !13420, line: 132, type: !669)
!13454 = !DILocation(line: 132, column: 34, scope: !13419)
!13455 = !DILocalVariable(name: "addr", arg: 2, scope: !13419, file: !13420, line: 132, type: !13423)
!13456 = !DILocation(line: 132, column: 68, scope: !13419)
!13457 = !DILocation(line: 134, column: 25, scope: !13419)
!13458 = !DILocation(line: 134, column: 32, scope: !13419)
!13459 = !DILocation(line: 134, column: 30, scope: !13419)
!13460 = !DILocation(line: 71, column: 19, scope: !13442, inlinedAt: !13450)
!13461 = !DILocation(line: 71, column: 22, scope: !13442, inlinedAt: !13450)
!13462 = !DILocation(line: 71, column: 2, scope: !13442, inlinedAt: !13450)
!13463 = !DILocation(line: 72, column: 2, scope: !13442, inlinedAt: !13450)
!13464 = !DILocation(line: 135, column: 9, scope: !13419)
!13465 = !DILocation(line: 206, column: 19, scope: !13436, inlinedAt: !13438)
!13466 = !DILocation(line: 206, column: 22, scope: !13436, inlinedAt: !13438)
!13467 = !DILocation(line: 206, column: 15, scope: !13436, inlinedAt: !13438)
!13468 = !DILocation(line: 207, column: 4, scope: !13436, inlinedAt: !13438)
!13469 = !DILocation(line: 207, column: 9, scope: !13436, inlinedAt: !13438)
!13470 = !DILocation(line: 207, column: 12, scope: !13436, inlinedAt: !13438)
!13471 = !DILocation(line: 206, column: 44, scope: !13436, inlinedAt: !13438)
!13472 = !DILocation(line: 207, column: 37, scope: !13436, inlinedAt: !13438)
!13473 = !DILocation(line: 217, column: 33, scope: !13427, inlinedAt: !13430)
!13474 = !DILocation(line: 217, column: 46, scope: !13427, inlinedAt: !13430)
!13475 = !DILocation(line: 214, column: 2, scope: !13427, inlinedAt: !13430)
!13476 = !{i32 -2147107416, i32 -2147107356}
!13477 = !DILocation(line: 219, column: 9, scope: !13427, inlinedAt: !13430)
!13478 = !DILocation(line: 135, column: 2, scope: !13419)
!13479 = distinct !DISubprogram(name: "kasan_check_read", scope: !13480, file: !13480, line: 34, type: !13481, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13480 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13481 = !DISubroutineType(types: !13482)
!13482 = !{!696, !13446, !14}
!13483 = !DILocalVariable(name: "p", arg: 1, scope: !13479, file: !13480, line: 34, type: !13446)
!13484 = !DILocation(line: 34, column: 58, scope: !13479)
!13485 = !DILocalVariable(name: "size", arg: 2, scope: !13479, file: !13480, line: 34, type: !14)
!13486 = !DILocation(line: 34, column: 74, scope: !13479)
!13487 = !DILocation(line: 36, column: 2, scope: !13479)
!13488 = distinct !DISubprogram(name: "kcsan_check_access", scope: !13489, file: !13489, line: 178, type: !13490, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13489 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13490 = !DISubroutineType(types: !13491)
!13491 = !{null, !13446, !750, !7}
!13492 = !DILocalVariable(name: "ptr", arg: 1, scope: !13488, file: !13489, line: 178, type: !13446)
!13493 = !DILocation(line: 178, column: 60, scope: !13488)
!13494 = !DILocalVariable(name: "size", arg: 2, scope: !13488, file: !13489, line: 178, type: !750)
!13495 = !DILocation(line: 178, column: 72, scope: !13488)
!13496 = !DILocalVariable(name: "type", arg: 3, scope: !13488, file: !13489, line: 179, type: !7)
!13497 = !DILocation(line: 179, column: 15, scope: !13488)
!13498 = !DILocation(line: 179, column: 23, scope: !13488)
!13499 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_upper_rif_destroy", scope: !3, file: !3, line: 138, type: !13500, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{!7, !451, !13502}
!13502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13383, size: 64)
!13503 = !DILocalVariable(name: "dev", arg: 1, scope: !13499, file: !3, line: 138, type: !451)
!13504 = !DILocation(line: 138, column: 72, scope: !13499)
!13505 = !DILocalVariable(name: "priv", arg: 2, scope: !13499, file: !3, line: 139, type: !13502)
!13506 = !DILocation(line: 139, column: 38, scope: !13499)
!13507 = !DILocalVariable(name: "mlxsw_sp", scope: !13499, file: !3, line: 141, type: !10421)
!13508 = !DILocation(line: 141, column: 19, scope: !13499)
!13509 = !DILocation(line: 141, column: 30, scope: !13499)
!13510 = !DILocation(line: 141, column: 36, scope: !13499)
!13511 = !DILocation(line: 143, column: 30, scope: !13499)
!13512 = !DILocation(line: 143, column: 40, scope: !13499)
!13513 = !DILocation(line: 143, column: 2, scope: !13499)
!13514 = !DILocation(line: 144, column: 2, scope: !13499)
!13515 = distinct !DISubprogram(name: "mlxsw_reg_sfdf_pack", scope: !10048, file: !10048, line: 1220, type: !13516, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{null, !733, !10174}
!13518 = !DILocalVariable(name: "payload", arg: 1, scope: !13515, file: !10048, line: 1220, type: !733)
!13519 = !DILocation(line: 1220, column: 46, scope: !13515)
!13520 = !DILocalVariable(name: "type", arg: 2, scope: !13515, file: !10048, line: 1221, type: !10174)
!13521 = !DILocation(line: 1221, column: 43, scope: !13515)
!13522 = !DILocation(line: 1223, column: 2, scope: !13515)
!13523 = !DILocation(line: 1224, column: 32, scope: !13515)
!13524 = !DILocation(line: 1224, column: 41, scope: !13515)
!13525 = !DILocation(line: 1224, column: 2, scope: !13515)
!13526 = !DILocation(line: 1225, column: 34, scope: !13515)
!13527 = !DILocation(line: 1225, column: 2, scope: !13515)
!13528 = !DILocation(line: 1226, column: 1, scope: !13515)
!13529 = distinct !DISubprogram(name: "mlxsw_sp_fdb_flush_type", scope: !3, file: !3, line: 1252, type: !13530, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{!10174, !696}
!13532 = !DILocalVariable(name: "lagged", arg: 1, scope: !13529, file: !3, line: 1252, type: !696)
!13533 = !DILocation(line: 1252, column: 68, scope: !13529)
!13534 = !DILocation(line: 1254, column: 9, scope: !13529)
!13535 = !DILocation(line: 1254, column: 2, scope: !13529)
!13536 = distinct !DISubprogram(name: "mlxsw_reg_sfdf_fid_set", scope: !10048, file: !10048, line: 1232, type: !13537, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{null, !733, !862}
!13539 = !DILocalVariable(name: "buf", arg: 1, scope: !13536, file: !10048, line: 1232, type: !733)
!13540 = !DILocation(line: 1232, column: 1, scope: !13536)
!13541 = !DILocalVariable(name: "val", arg: 2, scope: !13536, file: !10048, line: 1232, type: !862)
!13542 = distinct !DISubprogram(name: "mlxsw_reg_sfdf_port_fid_system_port_set", scope: !10048, file: !10048, line: 1244, type: !13537, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13543 = !DILocalVariable(name: "buf", arg: 1, scope: !13542, file: !10048, line: 1244, type: !733)
!13544 = !DILocation(line: 1244, column: 1, scope: !13542)
!13545 = !DILocalVariable(name: "val", arg: 2, scope: !13542, file: !10048, line: 1244, type: !862)
!13546 = distinct !DISubprogram(name: "mlxsw_reg_sfdf_flush_type_set", scope: !10048, file: !10048, line: 1210, type: !13537, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13547 = !DILocalVariable(name: "buf", arg: 1, scope: !13546, file: !10048, line: 1210, type: !733)
!13548 = !DILocation(line: 1210, column: 1, scope: !13546)
!13549 = !DILocalVariable(name: "val", arg: 2, scope: !13546, file: !10048, line: 1210, type: !862)
!13550 = distinct !DISubprogram(name: "mlxsw_reg_sfdf_flush_static_set", scope: !10048, file: !10048, line: 1218, type: !13537, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13551 = !DILocalVariable(name: "buf", arg: 1, scope: !13550, file: !10048, line: 1218, type: !733)
!13552 = !DILocation(line: 1218, column: 1, scope: !13550)
!13553 = !DILocalVariable(name: "val", arg: 2, scope: !13550, file: !10048, line: 1218, type: !862)
!13554 = distinct !DISubprogram(name: "__mlxsw_item_set32", scope: !10689, file: !10689, line: 127, type: !13555, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13555 = !DISubroutineType(types: !13556)
!13556 = !{null, !733, !13557, !633, !862}
!13557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13558, size: 64)
!13558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10688)
!13559 = !DILocalVariable(name: "buf", arg: 1, scope: !13554, file: !10689, line: 127, type: !733)
!13560 = !DILocation(line: 127, column: 45, scope: !13554)
!13561 = !DILocalVariable(name: "item", arg: 2, scope: !13554, file: !10689, line: 127, type: !13557)
!13562 = !DILocation(line: 127, column: 75, scope: !13554)
!13563 = !DILocalVariable(name: "index", arg: 3, scope: !13554, file: !10689, line: 128, type: !633)
!13564 = !DILocation(line: 128, column: 26, scope: !13554)
!13565 = !DILocalVariable(name: "val", arg: 4, scope: !13554, file: !10689, line: 128, type: !862)
!13566 = !DILocation(line: 128, column: 37, scope: !13554)
!13567 = !DILocalVariable(name: "offset", scope: !13554, file: !10689, line: 130, type: !14)
!13568 = !DILocation(line: 130, column: 15, scope: !13554)
!13569 = !DILocation(line: 130, column: 44, scope: !13554)
!13570 = !DILocation(line: 130, column: 50, scope: !13554)
!13571 = !DILocation(line: 130, column: 24, scope: !13554)
!13572 = !DILocalVariable(name: "b", scope: !13554, file: !10689, line: 132, type: !11214)
!13573 = !DILocation(line: 132, column: 10, scope: !13554)
!13574 = !DILocation(line: 132, column: 25, scope: !13554)
!13575 = !DILocation(line: 132, column: 14, scope: !13554)
!13576 = !DILocalVariable(name: "mask", scope: !13554, file: !10689, line: 133, type: !862)
!13577 = !DILocation(line: 133, column: 6, scope: !13554)
!13578 = !DILocation(line: 133, column: 13, scope: !13554)
!13579 = !DILocation(line: 133, column: 48, scope: !13554)
!13580 = !DILocation(line: 133, column: 54, scope: !13554)
!13581 = !DILocation(line: 133, column: 45, scope: !13554)
!13582 = !DILocalVariable(name: "tmp", scope: !13554, file: !10689, line: 134, type: !862)
!13583 = !DILocation(line: 134, column: 6, scope: !13554)
!13584 = !DILocation(line: 136, column: 7, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13554, file: !10689, line: 136, column: 6)
!13586 = !DILocation(line: 136, column: 13, scope: !13585)
!13587 = !DILocation(line: 136, column: 6, scope: !13554)
!13588 = !DILocation(line: 137, column: 11, scope: !13585)
!13589 = !DILocation(line: 137, column: 17, scope: !13585)
!13590 = !DILocation(line: 137, column: 7, scope: !13585)
!13591 = !DILocation(line: 137, column: 3, scope: !13585)
!13592 = !DILocation(line: 138, column: 9, scope: !13554)
!13593 = !DILocation(line: 138, column: 6, scope: !13554)
!13594 = !DILocation(line: 139, column: 8, scope: !13554)
!13595 = !DILocation(line: 139, column: 6, scope: !13554)
!13596 = !DILocation(line: 140, column: 10, scope: !13554)
!13597 = !DILocation(line: 140, column: 9, scope: !13554)
!13598 = !DILocation(line: 140, column: 6, scope: !13554)
!13599 = !DILocation(line: 141, column: 9, scope: !13554)
!13600 = !DILocation(line: 141, column: 6, scope: !13554)
!13601 = !DILocation(line: 142, column: 14, scope: !13554)
!13602 = !DILocation(line: 142, column: 2, scope: !13554)
!13603 = !DILocation(line: 142, column: 4, scope: !13554)
!13604 = !DILocation(line: 142, column: 12, scope: !13554)
!13605 = !DILocation(line: 143, column: 1, scope: !13554)
!13606 = distinct !DISubprogram(name: "__mlxsw_item_offset", scope: !10689, file: !10689, line: 26, type: !13607, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13607 = !DISubroutineType(types: !13608)
!13608 = !{!14, !13557, !633, !750}
!13609 = !DILocalVariable(name: "item", arg: 1, scope: !13606, file: !10689, line: 26, type: !13557)
!13610 = !DILocation(line: 26, column: 46, scope: !13606)
!13611 = !DILocalVariable(name: "index", arg: 2, scope: !13606, file: !10689, line: 26, type: !633)
!13612 = !DILocation(line: 26, column: 67, scope: !13606)
!13613 = !DILocalVariable(name: "typesize", arg: 3, scope: !13606, file: !10689, line: 27, type: !750)
!13614 = !DILocation(line: 27, column: 14, scope: !13606)
!13615 = !DILocation(line: 29, column: 2, scope: !13606)
!13616 = !DILocation(line: 29, column: 2, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13618, file: !10689, line: 29, column: 2)
!13618 = distinct !DILexicalBlock(scope: !13606, file: !10689, line: 29, column: 2)
!13619 = !DILocation(line: 0, scope: !13617)
!13620 = !DILocation(line: 29, column: 2, scope: !13618)
!13621 = !DILocation(line: 29, column: 2, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13617, file: !10689, line: 29, column: 2)
!13623 = !DILocation(line: 29, column: 2, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13622, file: !10689, line: 29, column: 2)
!13625 = !DILocation(line: 29, column: 2, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13622, file: !10689, line: 29, column: 2)
!13627 = !{i32 -2137092064, i32 -2137092035, i32 -2137091989, i32 -2137091931, i32 -2137091877, i32 -2137091823, i32 -2137091768, i32 -2137091737}
!13628 = !DILocation(line: 29, column: 2, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13630, file: !10689, line: 29, column: 2)
!13630 = distinct !DILexicalBlock(scope: !13622, file: !10689, line: 29, column: 2)
!13631 = !{i32 -2137091273, i32 -2137091266, i32 -2137091212, i32 -2137091181, i32 -2137091151}
!13632 = !DILocation(line: 29, column: 2, scope: !13630)
!13633 = !DILocation(line: 30, column: 6, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13606, file: !10689, line: 30, column: 6)
!13635 = !DILocation(line: 30, column: 12, scope: !13634)
!13636 = !DILocation(line: 30, column: 21, scope: !13634)
!13637 = !DILocation(line: 30, column: 19, scope: !13634)
!13638 = !DILocation(line: 30, column: 30, scope: !13634)
!13639 = !DILocation(line: 30, column: 35, scope: !13634)
!13640 = !DILocation(line: 31, column: 6, scope: !13634)
!13641 = !DILocation(line: 31, column: 12, scope: !13634)
!13642 = !DILocation(line: 31, column: 19, scope: !13634)
!13643 = !DILocation(line: 31, column: 17, scope: !13634)
!13644 = !DILocation(line: 31, column: 28, scope: !13634)
!13645 = !DILocation(line: 31, column: 33, scope: !13634)
!13646 = !DILocation(line: 32, column: 6, scope: !13634)
!13647 = !DILocation(line: 32, column: 12, scope: !13634)
!13648 = !DILocation(line: 32, column: 29, scope: !13634)
!13649 = !DILocation(line: 32, column: 27, scope: !13634)
!13650 = !DILocation(line: 32, column: 38, scope: !13634)
!13651 = !DILocation(line: 30, column: 6, scope: !13606)
!13652 = !DILocation(line: 33, column: 3, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13634, file: !10689, line: 32, column: 44)
!13654 = !DILocation(line: 36, column: 3, scope: !13653)
!13655 = !DILocation(line: 36, column: 3, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13653, file: !10689, line: 36, column: 3)
!13657 = !DILocation(line: 36, column: 3, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13656, file: !10689, line: 36, column: 3)
!13659 = !DILocation(line: 36, column: 3, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13656, file: !10689, line: 36, column: 3)
!13661 = !{i32 -2137090642, i32 -2137090613, i32 -2137090567, i32 -2137090509, i32 -2137090455, i32 -2137090401, i32 -2137090346, i32 -2137090315}
!13662 = !DILocation(line: 36, column: 3, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13664, file: !10689, line: 36, column: 3)
!13664 = distinct !DILexicalBlock(scope: !13656, file: !10689, line: 36, column: 3)
!13665 = !{i32 -2137089851, i32 -2137089844, i32 -2137089790, i32 -2137089759, i32 -2137089729}
!13666 = !DILocation(line: 36, column: 3, scope: !13664)
!13667 = !DILocation(line: 37, column: 2, scope: !13653)
!13668 = !DILocation(line: 39, column: 11, scope: !13606)
!13669 = !DILocation(line: 39, column: 17, scope: !13606)
!13670 = !DILocation(line: 39, column: 26, scope: !13606)
!13671 = !DILocation(line: 39, column: 32, scope: !13606)
!13672 = !DILocation(line: 39, column: 39, scope: !13606)
!13673 = !DILocation(line: 39, column: 37, scope: !13606)
!13674 = !DILocation(line: 39, column: 24, scope: !13606)
!13675 = !DILocation(line: 39, column: 47, scope: !13606)
!13676 = !DILocation(line: 39, column: 53, scope: !13606)
!13677 = !DILocation(line: 39, column: 45, scope: !13606)
!13678 = !DILocation(line: 39, column: 10, scope: !13606)
!13679 = !DILocation(line: 40, column: 3, scope: !13606)
!13680 = !DILocation(line: 39, column: 69, scope: !13606)
!13681 = !DILocation(line: 39, column: 9, scope: !13606)
!13682 = !DILocation(line: 39, column: 2, scope: !13606)
!13683 = distinct !DISubprogram(name: "__fswab32", scope: !13684, file: !13684, line: 57, type: !13685, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13684 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!13685 = !DISubroutineType(types: !13686)
!13686 = !{!624, !624}
!13687 = !DILocalVariable(name: "val", arg: 1, scope: !13683, file: !13684, line: 57, type: !624)
!13688 = !DILocation(line: 57, column: 57, scope: !13683)
!13689 = !DILocation(line: 60, column: 23, scope: !13683)
!13690 = !DILocation(line: 60, column: 9, scope: !13683)
!13691 = !DILocation(line: 60, column: 2, scope: !13683)
!13692 = distinct !DISubprogram(name: "__arch_swab32", scope: !13693, file: !13693, line: 8, type: !13685, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13693 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!13694 = !DILocalVariable(name: "val", arg: 1, scope: !13692, file: !13693, line: 8, type: !624)
!13695 = !DILocation(line: 8, column: 61, scope: !13692)
!13696 = !DILocation(line: 10, column: 38, scope: !13692)
!13697 = !DILocation(line: 10, column: 2, scope: !13692)
!13698 = !{i32 455781}
!13699 = !DILocation(line: 11, column: 9, scope: !13692)
!13700 = !DILocation(line: 11, column: 2, scope: !13692)
!13701 = distinct !DISubprogram(name: "mlxsw_reg_sfd_pack", scope: !10048, file: !10048, line: 279, type: !13702, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{null, !733, !10191, !862}
!13704 = !DILocalVariable(name: "payload", arg: 1, scope: !13701, file: !10048, line: 279, type: !733)
!13705 = !DILocation(line: 279, column: 45, scope: !13701)
!13706 = !DILocalVariable(name: "op", arg: 2, scope: !13701, file: !10048, line: 279, type: !10191)
!13707 = !DILocation(line: 279, column: 76, scope: !13701)
!13708 = !DILocalVariable(name: "record_locator", arg: 3, scope: !13701, file: !10048, line: 280, type: !862)
!13709 = !DILocation(line: 280, column: 15, scope: !13701)
!13710 = !DILocation(line: 282, column: 2, scope: !13701)
!13711 = !DILocation(line: 283, column: 23, scope: !13701)
!13712 = !DILocation(line: 283, column: 32, scope: !13701)
!13713 = !DILocation(line: 283, column: 2, scope: !13701)
!13714 = !DILocation(line: 284, column: 35, scope: !13701)
!13715 = !DILocation(line: 284, column: 44, scope: !13701)
!13716 = !DILocation(line: 284, column: 2, scope: !13701)
!13717 = !DILocation(line: 285, column: 1, scope: !13701)
!13718 = distinct !DISubprogram(name: "mlxsw_sp_sfd_op", scope: !3, file: !3, line: 1281, type: !13719, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!10191, !696}
!13721 = !DILocalVariable(name: "adding", arg: 1, scope: !13718, file: !3, line: 1281, type: !696)
!13722 = !DILocation(line: 1281, column: 51, scope: !13718)
!13723 = !DILocation(line: 1283, column: 9, scope: !13718)
!13724 = !DILocation(line: 1283, column: 2, scope: !13718)
!13725 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_pack", scope: !10048, file: !10048, line: 406, type: !13726, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13726 = !DISubroutineType(types: !13727)
!13727 = !{null, !733, !7, !10149, !453, !1192, !10142, !1551}
!13728 = !DILocalVariable(name: "payload", arg: 1, scope: !13725, file: !10048, line: 406, type: !733)
!13729 = !DILocation(line: 406, column: 48, scope: !13725)
!13730 = !DILocalVariable(name: "rec_index", arg: 2, scope: !13725, file: !10048, line: 406, type: !7)
!13731 = !DILocation(line: 406, column: 61, scope: !13725)
!13732 = !DILocalVariable(name: "policy", arg: 3, scope: !13725, file: !10048, line: 407, type: !10149)
!13733 = !DILocation(line: 407, column: 37, scope: !13725)
!13734 = !DILocalVariable(name: "mac", arg: 4, scope: !13725, file: !10048, line: 408, type: !453)
!13735 = !DILocation(line: 408, column: 19, scope: !13725)
!13736 = !DILocalVariable(name: "fid_vid", arg: 5, scope: !13725, file: !10048, line: 408, type: !1192)
!13737 = !DILocation(line: 408, column: 28, scope: !13725)
!13738 = !DILocalVariable(name: "action", arg: 6, scope: !13725, file: !10048, line: 409, type: !10142)
!13739 = !DILocation(line: 409, column: 37, scope: !13725)
!13740 = !DILocalVariable(name: "local_port", arg: 7, scope: !13725, file: !10048, line: 410, type: !1551)
!13741 = !DILocation(line: 410, column: 10, scope: !13725)
!13742 = !DILocation(line: 412, column: 25, scope: !13725)
!13743 = !DILocation(line: 412, column: 34, scope: !13725)
!13744 = !DILocation(line: 413, column: 43, scope: !13725)
!13745 = !DILocation(line: 413, column: 48, scope: !13725)
!13746 = !DILocation(line: 412, column: 2, scope: !13725)
!13747 = !DILocation(line: 414, column: 31, scope: !13725)
!13748 = !DILocation(line: 414, column: 40, scope: !13725)
!13749 = !DILocation(line: 414, column: 51, scope: !13725)
!13750 = !DILocation(line: 414, column: 2, scope: !13725)
!13751 = !DILocation(line: 415, column: 32, scope: !13725)
!13752 = !DILocation(line: 415, column: 41, scope: !13725)
!13753 = !DILocation(line: 415, column: 2, scope: !13725)
!13754 = !DILocation(line: 416, column: 31, scope: !13725)
!13755 = !DILocation(line: 416, column: 40, scope: !13725)
!13756 = !DILocation(line: 416, column: 51, scope: !13725)
!13757 = !DILocation(line: 416, column: 2, scope: !13725)
!13758 = !DILocation(line: 417, column: 35, scope: !13725)
!13759 = !DILocation(line: 417, column: 44, scope: !13725)
!13760 = !DILocation(line: 417, column: 55, scope: !13725)
!13761 = !DILocation(line: 417, column: 2, scope: !13725)
!13762 = !DILocation(line: 418, column: 1, scope: !13725)
!13763 = distinct !DISubprogram(name: "mlxsw_reg_sfd_num_rec_get", scope: !10048, file: !10048, line: 277, type: !13764, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13764 = !DISubroutineType(types: !13765)
!13765 = !{!862, !453}
!13766 = !DILocalVariable(name: "buf", arg: 1, scope: !13763, file: !10048, line: 277, type: !453)
!13767 = !DILocation(line: 277, column: 1, scope: !13763)
!13768 = distinct !DISubprogram(name: "get_order", scope: !13769, file: !13769, line: 29, type: !13770, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13769 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13770 = !DISubroutineType(types: !13771)
!13771 = !{!7, !473}
!13772 = !DILocalVariable(name: "x", arg: 1, scope: !13773, file: !13428, line: 366, type: !494)
!13773 = distinct !DISubprogram(name: "fls64", scope: !13428, file: !13428, line: 366, type: !13774, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13774 = !DISubroutineType(types: !13775)
!13775 = !{!7, !494}
!13776 = !DILocation(line: 366, column: 40, scope: !13773, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 46, column: 9, scope: !13768)
!13778 = !DILocalVariable(name: "bitpos", scope: !13773, file: !13428, line: 368, type: !7)
!13779 = !DILocation(line: 368, column: 6, scope: !13773, inlinedAt: !13777)
!13780 = !DILocalVariable(name: "size", arg: 1, scope: !13768, file: !13769, line: 29, type: !473)
!13781 = !DILocation(line: 29, column: 63, scope: !13768)
!13782 = !DILocation(line: 31, column: 27, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13768, file: !13769, line: 31, column: 6)
!13784 = !DILocation(line: 31, column: 6, scope: !13783)
!13785 = !DILocation(line: 31, column: 6, scope: !13768)
!13786 = !DILocation(line: 32, column: 8, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !13769, line: 32, column: 7)
!13788 = distinct !DILexicalBlock(scope: !13783, file: !13769, line: 31, column: 34)
!13789 = !DILocation(line: 32, column: 7, scope: !13788)
!13790 = !DILocation(line: 33, column: 4, scope: !13787)
!13791 = !DILocation(line: 35, column: 7, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13788, file: !13769, line: 35, column: 7)
!13793 = !DILocation(line: 35, column: 12, scope: !13792)
!13794 = !DILocation(line: 35, column: 7, scope: !13788)
!13795 = !DILocation(line: 36, column: 4, scope: !13792)
!13796 = !DILocation(line: 38, column: 10, scope: !13788)
!13797 = !DILocation(line: 38, column: 28, scope: !13788)
!13798 = !DILocation(line: 38, column: 41, scope: !13788)
!13799 = !DILocation(line: 38, column: 3, scope: !13788)
!13800 = !DILocation(line: 41, column: 6, scope: !13768)
!13801 = !DILocation(line: 42, column: 7, scope: !13768)
!13802 = !DILocation(line: 46, column: 15, scope: !13768)
!13803 = !DILocation(line: 374, column: 2, scope: !13773, inlinedAt: !13777)
!13804 = !DILocation(line: 376, column: 14, scope: !13773, inlinedAt: !13777)
!13805 = !{i32 335557}
!13806 = !DILocation(line: 377, column: 9, scope: !13773, inlinedAt: !13777)
!13807 = !DILocation(line: 377, column: 16, scope: !13773, inlinedAt: !13777)
!13808 = !DILocation(line: 46, column: 2, scope: !13768)
!13809 = !DILocation(line: 48, column: 1, scope: !13768)
!13810 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13811, file: !13811, line: 30, type: !13812, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13811 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13812 = !DISubroutineType(types: !13813)
!13813 = !{!7, !492}
!13814 = !DILocation(line: 366, column: 40, scope: !13773, inlinedAt: !13815)
!13815 = distinct !DILocation(line: 32, column: 9, scope: !13810)
!13816 = !DILocation(line: 368, column: 6, scope: !13773, inlinedAt: !13815)
!13817 = !DILocalVariable(name: "n", arg: 1, scope: !13810, file: !13811, line: 30, type: !492)
!13818 = !DILocation(line: 30, column: 21, scope: !13810)
!13819 = !DILocation(line: 32, column: 15, scope: !13810)
!13820 = !DILocation(line: 374, column: 2, scope: !13773, inlinedAt: !13815)
!13821 = !DILocation(line: 376, column: 14, scope: !13773, inlinedAt: !13815)
!13822 = !DILocation(line: 377, column: 9, scope: !13773, inlinedAt: !13815)
!13823 = !DILocation(line: 377, column: 16, scope: !13773, inlinedAt: !13815)
!13824 = !DILocation(line: 32, column: 18, scope: !13810)
!13825 = !DILocation(line: 32, column: 2, scope: !13810)
!13826 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13827, file: !13827, line: 137, type: !13828, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13827 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13828 = !DISubroutineType(types: !13829)
!13829 = !{!726, !2424, !2416, !750, !2143}
!13830 = !DILocalVariable(name: "s", arg: 1, scope: !13826, file: !13827, line: 137, type: !2424)
!13831 = !DILocation(line: 137, column: 54, scope: !13826)
!13832 = !DILocalVariable(name: "object", arg: 2, scope: !13826, file: !13827, line: 137, type: !2416)
!13833 = !DILocation(line: 137, column: 69, scope: !13826)
!13834 = !DILocalVariable(name: "size", arg: 3, scope: !13826, file: !13827, line: 138, type: !750)
!13835 = !DILocation(line: 138, column: 12, scope: !13826)
!13836 = !DILocalVariable(name: "flags", arg: 4, scope: !13826, file: !13827, line: 138, type: !2143)
!13837 = !DILocation(line: 138, column: 24, scope: !13826)
!13838 = !DILocation(line: 140, column: 17, scope: !13826)
!13839 = !DILocation(line: 140, column: 2, scope: !13826)
!13840 = distinct !DISubprogram(name: "mlxsw_reg_sfd_op_set", scope: !10048, file: !10048, line: 259, type: !13537, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13841 = !DILocalVariable(name: "buf", arg: 1, scope: !13840, file: !10048, line: 259, type: !733)
!13842 = !DILocation(line: 259, column: 1, scope: !13840)
!13843 = !DILocalVariable(name: "val", arg: 2, scope: !13840, file: !10048, line: 259, type: !862)
!13844 = distinct !DISubprogram(name: "mlxsw_reg_sfd_record_locator_set", scope: !10048, file: !10048, line: 268, type: !13537, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13845 = !DILocalVariable(name: "buf", arg: 1, scope: !13844, file: !10048, line: 268, type: !733)
!13846 = !DILocation(line: 268, column: 1, scope: !13844)
!13847 = !DILocalVariable(name: "val", arg: 2, scope: !13844, file: !10048, line: 268, type: !862)
!13848 = distinct !DISubprogram(name: "mlxsw_reg_sfd_rec_pack", scope: !10048, file: !10048, line: 391, type: !13849, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13849 = !DISubroutineType(types: !13850)
!13850 = !{null, !733, !7, !10200, !453, !10142}
!13851 = !DILocalVariable(name: "payload", arg: 1, scope: !13848, file: !10048, line: 391, type: !733)
!13852 = !DILocation(line: 391, column: 49, scope: !13848)
!13853 = !DILocalVariable(name: "rec_index", arg: 2, scope: !13848, file: !10048, line: 391, type: !7)
!13854 = !DILocation(line: 391, column: 62, scope: !13848)
!13855 = !DILocalVariable(name: "rec_type", arg: 3, scope: !13848, file: !10048, line: 392, type: !10200)
!13856 = !DILocation(line: 392, column: 36, scope: !13848)
!13857 = !DILocalVariable(name: "mac", arg: 4, scope: !13848, file: !10048, line: 393, type: !453)
!13858 = !DILocation(line: 393, column: 20, scope: !13848)
!13859 = !DILocalVariable(name: "action", arg: 5, scope: !13848, file: !10048, line: 394, type: !10142)
!13860 = !DILocation(line: 394, column: 38, scope: !13848)
!13861 = !DILocalVariable(name: "num_rec", scope: !13848, file: !10048, line: 396, type: !1551)
!13862 = !DILocation(line: 396, column: 5, scope: !13848)
!13863 = !DILocation(line: 396, column: 41, scope: !13848)
!13864 = !DILocation(line: 396, column: 15, scope: !13848)
!13865 = !DILocation(line: 398, column: 6, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13848, file: !10048, line: 398, column: 6)
!13867 = !DILocation(line: 398, column: 19, scope: !13866)
!13868 = !DILocation(line: 398, column: 16, scope: !13866)
!13869 = !DILocation(line: 398, column: 6, scope: !13848)
!13870 = !DILocation(line: 399, column: 29, scope: !13866)
!13871 = !DILocation(line: 399, column: 38, scope: !13866)
!13872 = !DILocation(line: 399, column: 48, scope: !13866)
!13873 = !DILocation(line: 399, column: 3, scope: !13866)
!13874 = !DILocation(line: 400, column: 29, scope: !13848)
!13875 = !DILocation(line: 400, column: 38, scope: !13848)
!13876 = !DILocation(line: 400, column: 2, scope: !13848)
!13877 = !DILocation(line: 401, column: 29, scope: !13848)
!13878 = !DILocation(line: 401, column: 38, scope: !13848)
!13879 = !DILocation(line: 401, column: 49, scope: !13848)
!13880 = !DILocation(line: 401, column: 2, scope: !13848)
!13881 = !DILocation(line: 402, column: 34, scope: !13848)
!13882 = !DILocation(line: 402, column: 43, scope: !13848)
!13883 = !DILocation(line: 402, column: 54, scope: !13848)
!13884 = !DILocation(line: 402, column: 2, scope: !13848)
!13885 = !DILocation(line: 403, column: 31, scope: !13848)
!13886 = !DILocation(line: 403, column: 40, scope: !13848)
!13887 = !DILocation(line: 403, column: 51, scope: !13848)
!13888 = !DILocation(line: 403, column: 2, scope: !13848)
!13889 = !DILocation(line: 404, column: 1, scope: !13848)
!13890 = distinct !DISubprogram(name: "mlxsw_reg_sfd_rec_policy_set", scope: !10048, file: !10048, line: 323, type: !13891, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13891 = !DISubroutineType(types: !13892)
!13892 = !{null, !733, !633, !862}
!13893 = !DILocalVariable(name: "buf", arg: 1, scope: !13890, file: !10048, line: 323, type: !733)
!13894 = !DILocation(line: 323, column: 1, scope: !13890)
!13895 = !DILocalVariable(name: "index", arg: 2, scope: !13890, file: !10048, line: 323, type: !633)
!13896 = !DILocalVariable(name: "val", arg: 3, scope: !13890, file: !10048, line: 323, type: !862)
!13897 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_sub_port_set", scope: !10048, file: !10048, line: 368, type: !13891, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13898 = !DILocalVariable(name: "buf", arg: 1, scope: !13897, file: !10048, line: 368, type: !733)
!13899 = !DILocation(line: 368, column: 1, scope: !13897)
!13900 = !DILocalVariable(name: "index", arg: 2, scope: !13897, file: !10048, line: 368, type: !633)
!13901 = !DILocalVariable(name: "val", arg: 3, scope: !13897, file: !10048, line: 368, type: !862)
!13902 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_fid_vid_set", scope: !10048, file: !10048, line: 381, type: !13891, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13903 = !DILocalVariable(name: "buf", arg: 1, scope: !13902, file: !10048, line: 381, type: !733)
!13904 = !DILocation(line: 381, column: 1, scope: !13902)
!13905 = !DILocalVariable(name: "index", arg: 2, scope: !13902, file: !10048, line: 381, type: !633)
!13906 = !DILocalVariable(name: "val", arg: 3, scope: !13902, file: !10048, line: 381, type: !862)
!13907 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_system_port_set", scope: !10048, file: !10048, line: 388, type: !13891, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13908 = !DILocalVariable(name: "buf", arg: 1, scope: !13907, file: !10048, line: 388, type: !733)
!13909 = !DILocation(line: 388, column: 1, scope: !13907)
!13910 = !DILocalVariable(name: "index", arg: 2, scope: !13907, file: !10048, line: 388, type: !633)
!13911 = !DILocalVariable(name: "val", arg: 3, scope: !13907, file: !10048, line: 388, type: !862)
!13912 = distinct !DISubprogram(name: "mlxsw_reg_sfd_num_rec_set", scope: !10048, file: !10048, line: 277, type: !13537, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13913 = !DILocalVariable(name: "buf", arg: 1, scope: !13912, file: !10048, line: 277, type: !733)
!13914 = !DILocation(line: 277, column: 1, scope: !13912)
!13915 = !DILocalVariable(name: "val", arg: 2, scope: !13912, file: !10048, line: 277, type: !862)
!13916 = distinct !DISubprogram(name: "mlxsw_reg_sfd_rec_swid_set", scope: !10048, file: !10048, line: 291, type: !13891, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13917 = !DILocalVariable(name: "buf", arg: 1, scope: !13916, file: !10048, line: 291, type: !733)
!13918 = !DILocation(line: 291, column: 1, scope: !13916)
!13919 = !DILocalVariable(name: "index", arg: 2, scope: !13916, file: !10048, line: 291, type: !633)
!13920 = !DILocalVariable(name: "val", arg: 3, scope: !13916, file: !10048, line: 291, type: !862)
!13921 = distinct !DISubprogram(name: "mlxsw_reg_sfd_rec_type_set", scope: !10048, file: !10048, line: 305, type: !13891, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13922 = !DILocalVariable(name: "buf", arg: 1, scope: !13921, file: !10048, line: 305, type: !733)
!13923 = !DILocation(line: 305, column: 1, scope: !13921)
!13924 = !DILocalVariable(name: "index", arg: 2, scope: !13921, file: !10048, line: 305, type: !633)
!13925 = !DILocalVariable(name: "val", arg: 3, scope: !13921, file: !10048, line: 305, type: !862)
!13926 = distinct !DISubprogram(name: "mlxsw_reg_sfd_rec_mac_memcpy_to", scope: !10048, file: !10048, line: 339, type: !13927, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13927 = !DISubroutineType(types: !13928)
!13928 = !{null, !733, !633, !453}
!13929 = !DILocalVariable(name: "buf", arg: 1, scope: !13926, file: !10048, line: 339, type: !733)
!13930 = !DILocation(line: 339, column: 1, scope: !13926)
!13931 = !DILocalVariable(name: "index", arg: 2, scope: !13926, file: !10048, line: 339, type: !633)
!13932 = !DILocalVariable(name: "src", arg: 3, scope: !13926, file: !10048, line: 339, type: !453)
!13933 = distinct !DISubprogram(name: "mlxsw_reg_sfd_rec_action_set", scope: !10048, file: !10048, line: 359, type: !13891, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13934 = !DILocalVariable(name: "buf", arg: 1, scope: !13933, file: !10048, line: 359, type: !733)
!13935 = !DILocation(line: 359, column: 1, scope: !13933)
!13936 = !DILocalVariable(name: "index", arg: 2, scope: !13933, file: !10048, line: 359, type: !633)
!13937 = !DILocalVariable(name: "val", arg: 3, scope: !13933, file: !10048, line: 359, type: !862)
!13938 = distinct !DISubprogram(name: "__mlxsw_item_memcpy_to", scope: !10689, file: !10689, line: 187, type: !13939, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13939 = !DISubroutineType(types: !13940)
!13940 = !{null, !733, !453, !13557, !633}
!13941 = !DILocalVariable(name: "buf", arg: 1, scope: !13938, file: !10689, line: 187, type: !733)
!13942 = !DILocation(line: 187, column: 49, scope: !13938)
!13943 = !DILocalVariable(name: "src", arg: 2, scope: !13938, file: !10689, line: 187, type: !453)
!13944 = !DILocation(line: 187, column: 66, scope: !13938)
!13945 = !DILocalVariable(name: "item", arg: 3, scope: !13938, file: !10689, line: 188, type: !13557)
!13946 = !DILocation(line: 188, column: 33, scope: !13938)
!13947 = !DILocalVariable(name: "index", arg: 4, scope: !13938, file: !10689, line: 189, type: !633)
!13948 = !DILocation(line: 189, column: 23, scope: !13938)
!13949 = !DILocalVariable(name: "offset", scope: !13938, file: !10689, line: 191, type: !14)
!13950 = !DILocation(line: 191, column: 15, scope: !13938)
!13951 = !DILocation(line: 191, column: 44, scope: !13938)
!13952 = !DILocation(line: 191, column: 50, scope: !13938)
!13953 = !DILocation(line: 191, column: 24, scope: !13938)
!13954 = !DILocation(line: 193, column: 10, scope: !13938)
!13955 = !DILocation(line: 193, column: 14, scope: !13938)
!13956 = !DILocation(line: 193, column: 23, scope: !13938)
!13957 = !DILocation(line: 193, column: 28, scope: !13938)
!13958 = !DILocation(line: 193, column: 34, scope: !13938)
!13959 = !DILocation(line: 193, column: 39, scope: !13938)
!13960 = !DILocation(line: 193, column: 2, scope: !13938)
!13961 = !DILocation(line: 194, column: 1, scope: !13938)
!13962 = distinct !DISubprogram(name: "__mlxsw_item_get32", scope: !10689, file: !10689, line: 111, type: !13963, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13963 = !DISubroutineType(types: !13964)
!13964 = !{!862, !453, !13557, !633}
!13965 = !DILocalVariable(name: "buf", arg: 1, scope: !13962, file: !10689, line: 111, type: !453)
!13966 = !DILocation(line: 111, column: 50, scope: !13962)
!13967 = !DILocalVariable(name: "item", arg: 2, scope: !13962, file: !10689, line: 112, type: !13557)
!13968 = !DILocation(line: 112, column: 35, scope: !13962)
!13969 = !DILocalVariable(name: "index", arg: 3, scope: !13962, file: !10689, line: 113, type: !633)
!13970 = !DILocation(line: 113, column: 25, scope: !13962)
!13971 = !DILocalVariable(name: "offset", scope: !13962, file: !10689, line: 115, type: !14)
!13972 = !DILocation(line: 115, column: 15, scope: !13962)
!13973 = !DILocation(line: 115, column: 44, scope: !13962)
!13974 = !DILocation(line: 115, column: 50, scope: !13962)
!13975 = !DILocation(line: 115, column: 24, scope: !13962)
!13976 = !DILocalVariable(name: "b", scope: !13962, file: !10689, line: 116, type: !11214)
!13977 = !DILocation(line: 116, column: 10, scope: !13962)
!13978 = !DILocation(line: 116, column: 25, scope: !13962)
!13979 = !DILocation(line: 116, column: 14, scope: !13962)
!13980 = !DILocalVariable(name: "tmp", scope: !13962, file: !10689, line: 117, type: !862)
!13981 = !DILocation(line: 117, column: 6, scope: !13962)
!13982 = !DILocation(line: 119, column: 8, scope: !13962)
!13983 = !DILocation(line: 119, column: 6, scope: !13962)
!13984 = !DILocation(line: 120, column: 10, scope: !13962)
!13985 = !DILocation(line: 120, column: 16, scope: !13962)
!13986 = !DILocation(line: 120, column: 6, scope: !13962)
!13987 = !DILocation(line: 121, column: 9, scope: !13962)
!13988 = !DILocation(line: 121, column: 6, scope: !13962)
!13989 = !DILocation(line: 122, column: 6, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13962, file: !10689, line: 122, column: 6)
!13991 = !DILocation(line: 122, column: 12, scope: !13990)
!13992 = !DILocation(line: 122, column: 6, scope: !13962)
!13993 = !DILocation(line: 123, column: 11, scope: !13990)
!13994 = !DILocation(line: 123, column: 17, scope: !13990)
!13995 = !DILocation(line: 123, column: 7, scope: !13990)
!13996 = !DILocation(line: 123, column: 3, scope: !13990)
!13997 = !DILocation(line: 124, column: 9, scope: !13962)
!13998 = !DILocation(line: 124, column: 2, scope: !13962)
!13999 = distinct !DISubprogram(name: "__mlxsw_sp_port_mdb_del", scope: !3, file: !3, line: 1860, type: !14000, scopeLine: 1863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14000 = !DISubroutineType(types: !14001)
!14001 = !{!7, !10406, !10389, !11215}
!14002 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13999, file: !3, line: 1860, type: !10406)
!14003 = !DILocation(line: 1860, column: 47, scope: !13999)
!14004 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !13999, file: !3, line: 1861, type: !10389)
!14005 = !DILocation(line: 1861, column: 33, scope: !13999)
!14006 = !DILocalVariable(name: "mid", arg: 3, scope: !13999, file: !3, line: 1862, type: !11215)
!14007 = !DILocation(line: 1862, column: 25, scope: !13999)
!14008 = !DILocalVariable(name: "dev", scope: !13999, file: !3, line: 1864, type: !451)
!14009 = !DILocation(line: 1864, column: 21, scope: !13999)
!14010 = !DILocation(line: 1864, column: 27, scope: !13999)
!14011 = !DILocation(line: 1864, column: 42, scope: !13999)
!14012 = !DILocalVariable(name: "err", scope: !13999, file: !3, line: 1865, type: !7)
!14013 = !DILocation(line: 1865, column: 6, scope: !13999)
!14014 = !DILocation(line: 1867, column: 6, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !13999, file: !3, line: 1867, column: 6)
!14016 = !DILocation(line: 1867, column: 19, scope: !14015)
!14017 = !DILocation(line: 1867, column: 34, scope: !14015)
!14018 = !DILocation(line: 1867, column: 52, scope: !14015)
!14019 = !DILocation(line: 1868, column: 7, scope: !14015)
!14020 = !DILocation(line: 1868, column: 20, scope: !14015)
!14021 = !DILocation(line: 1867, column: 6, scope: !13999)
!14022 = !DILocation(line: 1869, column: 32, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14015, file: !3, line: 1868, column: 29)
!14024 = !DILocation(line: 1869, column: 47, scope: !14023)
!14025 = !DILocation(line: 1869, column: 52, scope: !14023)
!14026 = !DILocation(line: 1869, column: 9, scope: !14023)
!14027 = !DILocation(line: 1869, column: 7, scope: !14023)
!14028 = !DILocation(line: 1870, column: 7, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14023, file: !3, line: 1870, column: 7)
!14030 = !DILocation(line: 1870, column: 7, scope: !14023)
!14031 = !DILocation(line: 1871, column: 15, scope: !14029)
!14032 = !DILocation(line: 1871, column: 4, scope: !14029)
!14033 = !DILocation(line: 1872, column: 2, scope: !14023)
!14034 = !DILocation(line: 1874, column: 38, scope: !13999)
!14035 = !DILocation(line: 1874, column: 53, scope: !13999)
!14036 = !DILocation(line: 1874, column: 8, scope: !13999)
!14037 = !DILocation(line: 1874, column: 6, scope: !13999)
!14038 = !DILocation(line: 1875, column: 6, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !13999, file: !3, line: 1875, column: 6)
!14040 = !DILocation(line: 1875, column: 6, scope: !13999)
!14041 = !DILocation(line: 1876, column: 14, scope: !14039)
!14042 = !DILocation(line: 1876, column: 3, scope: !14039)
!14043 = !DILocation(line: 1878, column: 9, scope: !13999)
!14044 = !DILocation(line: 1878, column: 2, scope: !13999)
!14045 = distinct !DISubprogram(name: "mlxsw_sp_port_smid_set", scope: !3, file: !3, line: 1501, type: !14046, scopeLine: 1503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{!7, !10406, !1192, !696}
!14048 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !14049)
!14049 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 1508, column: 12, scope: !14045)
!14051 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !14049)
!14052 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !14049)
!14053 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !14049)
!14054 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !14055)
!14055 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !14050)
!14056 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !14057)
!14057 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !14050)
!14058 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !14059)
!14059 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !14050)
!14061 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !14059)
!14062 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !14059)
!14063 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !14060)
!14064 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !14060)
!14065 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !14060)
!14066 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !14050)
!14067 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !14050)
!14068 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !14050)
!14069 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !14045, file: !3, line: 1501, type: !10406)
!14070 = !DILocation(line: 1501, column: 57, scope: !14045)
!14071 = !DILocalVariable(name: "mid_idx", arg: 2, scope: !14045, file: !3, line: 1502, type: !1192)
!14072 = !DILocation(line: 1502, column: 11, scope: !14045)
!14073 = !DILocalVariable(name: "add", arg: 3, scope: !14045, file: !3, line: 1502, type: !696)
!14074 = !DILocation(line: 1502, column: 25, scope: !14045)
!14075 = !DILocalVariable(name: "mlxsw_sp", scope: !14045, file: !3, line: 1504, type: !10421)
!14076 = !DILocation(line: 1504, column: 19, scope: !14045)
!14077 = !DILocation(line: 1504, column: 30, scope: !14045)
!14078 = !DILocation(line: 1504, column: 45, scope: !14045)
!14079 = !DILocalVariable(name: "smid_pl", scope: !14045, file: !3, line: 1505, type: !733)
!14080 = !DILocation(line: 1505, column: 8, scope: !14045)
!14081 = !DILocalVariable(name: "err", scope: !14045, file: !3, line: 1506, type: !7)
!14082 = !DILocation(line: 1506, column: 6, scope: !14045)
!14083 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !14050)
!14084 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !14050)
!14085 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !14050)
!14086 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !14050)
!14087 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !14050)
!14088 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !14050)
!14089 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !14050)
!14090 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !14050)
!14091 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !14060)
!14092 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !14060)
!14093 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !14060)
!14094 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !14060)
!14095 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !14060)
!14096 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !14059)
!14097 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !14059)
!14098 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !14059)
!14099 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !14059)
!14100 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !14050)
!14101 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !14050)
!14102 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !14057)
!14103 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !14057)
!14104 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !14057)
!14105 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !14057)
!14106 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !14057)
!14107 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !14057)
!14108 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !14057)
!14109 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !14057)
!14110 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !14057)
!14111 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !14057)
!14112 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !14057)
!14113 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !14057)
!14114 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !14057)
!14115 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !14057)
!14116 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !14057)
!14117 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !14057)
!14118 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !14057)
!14119 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !14057)
!14120 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !14057)
!14121 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !14057)
!14122 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !14057)
!14123 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !14057)
!14124 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !14057)
!14125 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !14057)
!14126 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !14057)
!14127 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !14057)
!14128 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !14057)
!14129 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !14057)
!14130 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !14057)
!14131 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !14057)
!14132 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !14057)
!14133 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !14057)
!14134 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !14057)
!14135 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !14057)
!14136 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !14057)
!14137 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !14057)
!14138 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !14057)
!14139 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !14057)
!14140 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !14057)
!14141 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !14057)
!14142 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !14057)
!14143 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !14057)
!14144 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !14057)
!14145 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !14057)
!14146 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !14057)
!14147 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !14057)
!14148 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !14057)
!14149 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !14057)
!14150 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !14057)
!14151 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !14057)
!14152 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !14057)
!14153 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !14057)
!14154 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !14057)
!14155 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !14057)
!14156 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !14057)
!14157 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !14057)
!14158 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !14057)
!14159 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !14057)
!14160 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !14057)
!14161 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !14057)
!14162 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !14057)
!14163 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !14057)
!14164 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !14057)
!14165 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !14057)
!14166 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !14057)
!14167 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !14057)
!14168 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !14057)
!14169 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !14057)
!14170 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !14057)
!14171 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !14057)
!14172 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !14057)
!14173 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !14057)
!14174 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !14057)
!14175 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !14057)
!14176 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !14057)
!14177 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !14057)
!14178 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !14057)
!14179 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !14057)
!14180 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !14057)
!14181 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !14057)
!14182 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !14057)
!14183 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !14057)
!14184 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !14057)
!14185 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !14057)
!14186 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !14057)
!14187 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !14057)
!14188 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !14057)
!14189 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !14057)
!14190 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !14057)
!14191 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !14057)
!14192 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !14057)
!14193 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !14057)
!14194 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !14057)
!14195 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !14057)
!14196 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !14057)
!14197 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !14057)
!14198 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !14057)
!14199 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !14057)
!14200 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !14057)
!14201 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !14057)
!14202 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !14057)
!14203 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !14057)
!14204 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !14057)
!14205 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !14057)
!14206 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !14057)
!14207 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !14057)
!14208 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !14057)
!14209 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !14057)
!14210 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !14057)
!14211 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !14057)
!14212 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !14057)
!14213 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !14057)
!14214 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !14057)
!14215 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !14057)
!14216 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !14057)
!14217 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !14057)
!14218 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !14057)
!14219 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !14057)
!14220 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !14057)
!14221 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !14057)
!14222 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !14057)
!14223 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !14050)
!14224 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !14050)
!14225 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !14050)
!14226 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !14050)
!14227 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !14050)
!14228 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !14055)
!14229 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !14055)
!14230 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !14055)
!14231 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !14055)
!14232 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !14055)
!14233 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !14055)
!14234 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !14055)
!14235 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !14050)
!14236 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !14050)
!14237 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !14050)
!14238 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !14050)
!14239 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !14049)
!14240 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !14049)
!14241 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !14049)
!14242 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !14049)
!14243 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !14049)
!14244 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !14049)
!14245 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !14049)
!14246 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !14049)
!14247 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !14049)
!14248 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !14049)
!14249 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !14050)
!14250 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !14050)
!14251 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !14050)
!14252 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !14050)
!14253 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !14050)
!14254 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !14050)
!14255 = !DILocation(line: 1508, column: 10, scope: !14045)
!14256 = !DILocation(line: 1509, column: 7, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 1509, column: 6)
!14258 = !DILocation(line: 1509, column: 6, scope: !14045)
!14259 = !DILocation(line: 1510, column: 3, scope: !14257)
!14260 = !DILocation(line: 1512, column: 22, scope: !14045)
!14261 = !DILocation(line: 1512, column: 31, scope: !14045)
!14262 = !DILocation(line: 1512, column: 40, scope: !14045)
!14263 = !DILocation(line: 1512, column: 55, scope: !14045)
!14264 = !DILocation(line: 1512, column: 67, scope: !14045)
!14265 = !DILocation(line: 1512, column: 2, scope: !14045)
!14266 = !DILocation(line: 1513, column: 24, scope: !14045)
!14267 = !DILocation(line: 1513, column: 34, scope: !14045)
!14268 = !DILocation(line: 1513, column: 57, scope: !14045)
!14269 = !DILocation(line: 1513, column: 8, scope: !14045)
!14270 = !DILocation(line: 1513, column: 6, scope: !14045)
!14271 = !DILocation(line: 1514, column: 8, scope: !14045)
!14272 = !DILocation(line: 1514, column: 2, scope: !14045)
!14273 = !DILocation(line: 1515, column: 9, scope: !14045)
!14274 = !DILocation(line: 1515, column: 2, scope: !14045)
!14275 = !DILocation(line: 1516, column: 1, scope: !14045)
!14276 = distinct !DISubprogram(name: "mlxsw_sp_port_remove_from_mid", scope: !3, file: !3, line: 1668, type: !14277, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14277 = !DISubroutineType(types: !14278)
!14278 = !{!7, !10406, !11215}
!14279 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !14276, file: !3, line: 1668, type: !10406)
!14280 = !DILocation(line: 1668, column: 64, scope: !14276)
!14281 = !DILocalVariable(name: "mid", arg: 2, scope: !14276, file: !3, line: 1669, type: !11215)
!14282 = !DILocation(line: 1669, column: 28, scope: !14276)
!14283 = !DILocalVariable(name: "mlxsw_sp", scope: !14276, file: !3, line: 1671, type: !10421)
!14284 = !DILocation(line: 1671, column: 19, scope: !14276)
!14285 = !DILocation(line: 1671, column: 30, scope: !14276)
!14286 = !DILocation(line: 1671, column: 45, scope: !14276)
!14287 = !DILocalVariable(name: "err", scope: !14276, file: !3, line: 1672, type: !7)
!14288 = !DILocation(line: 1672, column: 6, scope: !14276)
!14289 = !DILocation(line: 1674, column: 12, scope: !14276)
!14290 = !DILocation(line: 1674, column: 27, scope: !14276)
!14291 = !DILocation(line: 1674, column: 39, scope: !14276)
!14292 = !DILocation(line: 1674, column: 44, scope: !14276)
!14293 = !DILocation(line: 1674, column: 2, scope: !14276)
!14294 = !DILocation(line: 1675, column: 19, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14276, file: !3, line: 1675, column: 6)
!14296 = !DILocation(line: 1675, column: 24, scope: !14295)
!14297 = !DILocation(line: 1676, column: 26, scope: !14295)
!14298 = !DILocation(line: 1676, column: 36, scope: !14295)
!14299 = !DILocation(line: 1676, column: 5, scope: !14295)
!14300 = !DILocation(line: 1675, column: 6, scope: !14295)
!14301 = !DILocation(line: 1675, column: 6, scope: !14276)
!14302 = !DILocation(line: 1677, column: 38, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14295, file: !3, line: 1676, column: 44)
!14304 = !DILocation(line: 1677, column: 48, scope: !14303)
!14305 = !DILocation(line: 1677, column: 9, scope: !14303)
!14306 = !DILocation(line: 1677, column: 7, scope: !14303)
!14307 = !DILocation(line: 1678, column: 13, scope: !14303)
!14308 = !DILocation(line: 1678, column: 18, scope: !14303)
!14309 = !DILocation(line: 1678, column: 3, scope: !14303)
!14310 = !DILocation(line: 1679, column: 9, scope: !14303)
!14311 = !DILocation(line: 1679, column: 14, scope: !14303)
!14312 = !DILocation(line: 1679, column: 3, scope: !14303)
!14313 = !DILocation(line: 1680, column: 9, scope: !14303)
!14314 = !DILocation(line: 1680, column: 3, scope: !14303)
!14315 = !DILocation(line: 1681, column: 2, scope: !14303)
!14316 = !DILocation(line: 1682, column: 9, scope: !14276)
!14317 = !DILocation(line: 1682, column: 2, scope: !14276)
!14318 = distinct !DISubprogram(name: "clear_bit", scope: !14319, file: !14319, line: 39, type: !14320, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14319 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!14320 = !DISubroutineType(types: !14321)
!14321 = !{null, !669, !14322}
!14322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13425, size: 64)
!14323 = !DILocalVariable(name: "nr", arg: 1, scope: !14324, file: !13428, line: 72, type: !669)
!14324 = distinct !DISubprogram(name: "arch_clear_bit", scope: !13428, file: !13428, line: 72, type: !14320, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14325 = !DILocation(line: 72, column: 21, scope: !14324, inlinedAt: !14326)
!14326 = distinct !DILocation(line: 42, column: 2, scope: !14318)
!14327 = !DILocalVariable(name: "addr", arg: 2, scope: !14324, file: !13428, line: 72, type: !14322)
!14328 = !DILocation(line: 72, column: 49, scope: !14324, inlinedAt: !14326)
!14329 = !DILocalVariable(name: "v", arg: 1, scope: !14330, file: !13443, line: 84, type: !13446)
!14330 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !13443, file: !13443, line: 84, type: !13444, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14331 = !DILocation(line: 84, column: 74, scope: !14330, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 41, column: 2, scope: !14318)
!14333 = !DILocalVariable(name: "size", arg: 2, scope: !14330, file: !13443, line: 84, type: !750)
!14334 = !DILocation(line: 84, column: 84, scope: !14330, inlinedAt: !14332)
!14335 = !DILocalVariable(name: "nr", arg: 1, scope: !14318, file: !14319, line: 39, type: !669)
!14336 = !DILocation(line: 39, column: 35, scope: !14318)
!14337 = !DILocalVariable(name: "addr", arg: 2, scope: !14318, file: !14319, line: 39, type: !14322)
!14338 = !DILocation(line: 39, column: 63, scope: !14318)
!14339 = !DILocation(line: 41, column: 26, scope: !14318)
!14340 = !DILocation(line: 41, column: 33, scope: !14318)
!14341 = !DILocation(line: 41, column: 31, scope: !14318)
!14342 = !DILocation(line: 86, column: 20, scope: !14330, inlinedAt: !14332)
!14343 = !DILocation(line: 86, column: 23, scope: !14330, inlinedAt: !14332)
!14344 = !DILocation(line: 86, column: 2, scope: !14330, inlinedAt: !14332)
!14345 = !DILocation(line: 87, column: 2, scope: !14330, inlinedAt: !14332)
!14346 = !DILocation(line: 42, column: 17, scope: !14318)
!14347 = !DILocation(line: 42, column: 21, scope: !14318)
!14348 = !DILocation(line: 74, column: 27, scope: !14349, inlinedAt: !14326)
!14349 = distinct !DILexicalBlock(scope: !14324, file: !13428, line: 74, column: 6)
!14350 = !DILocation(line: 74, column: 6, scope: !14349, inlinedAt: !14326)
!14351 = !DILocation(line: 74, column: 6, scope: !14324, inlinedAt: !14326)
!14352 = !DILocation(line: 76, column: 6, scope: !14353, inlinedAt: !14326)
!14353 = distinct !DILexicalBlock(scope: !14349, file: !13428, line: 74, column: 32)
!14354 = !DILocation(line: 77, column: 13, scope: !14353, inlinedAt: !14326)
!14355 = !DILocation(line: 77, column: 12, scope: !14353, inlinedAt: !14326)
!14356 = !DILocation(line: 75, column: 3, scope: !14353, inlinedAt: !14326)
!14357 = !{i32 -2147115710}
!14358 = !DILocation(line: 78, column: 2, scope: !14353, inlinedAt: !14326)
!14359 = !DILocation(line: 80, column: 8, scope: !14360, inlinedAt: !14326)
!14360 = distinct !DILexicalBlock(scope: !14349, file: !13428, line: 78, column: 9)
!14361 = !DILocation(line: 80, column: 32, scope: !14360, inlinedAt: !14326)
!14362 = !DILocation(line: 79, column: 3, scope: !14360, inlinedAt: !14326)
!14363 = !{i32 -2147115578}
!14364 = !DILocation(line: 43, column: 1, scope: !14318)
!14365 = distinct !DISubprogram(name: "bitmap_empty", scope: !14366, file: !14366, line: 382, type: !14367, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14366 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!14367 = !DISubroutineType(types: !14368)
!14368 = !{!7, !14369, !14}
!14369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7283, size: 64)
!14370 = !DILocalVariable(name: "src", arg: 1, scope: !14365, file: !14366, line: 382, type: !14369)
!14371 = !DILocation(line: 382, column: 53, scope: !14365)
!14372 = !DILocalVariable(name: "nbits", arg: 2, scope: !14365, file: !14366, line: 382, type: !14)
!14373 = !DILocation(line: 382, column: 67, scope: !14365)
!14374 = !DILocation(line: 384, column: 6, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14365, file: !14366, line: 384, column: 6)
!14376 = !DILocation(line: 384, column: 6, scope: !14365)
!14377 = !DILocation(line: 385, column: 14, scope: !14375)
!14378 = !DILocation(line: 385, column: 13, scope: !14375)
!14379 = !DILocation(line: 385, column: 20, scope: !14375)
!14380 = !DILocation(line: 385, column: 18, scope: !14375)
!14381 = !DILocation(line: 385, column: 10, scope: !14375)
!14382 = !DILocation(line: 385, column: 3, scope: !14375)
!14383 = !DILocation(line: 387, column: 24, scope: !14365)
!14384 = !DILocation(line: 387, column: 29, scope: !14365)
!14385 = !DILocation(line: 387, column: 9, scope: !14365)
!14386 = !DILocation(line: 387, column: 39, scope: !14365)
!14387 = !DILocation(line: 387, column: 36, scope: !14365)
!14388 = !DILocation(line: 387, column: 2, scope: !14365)
!14389 = !DILocation(line: 388, column: 1, scope: !14365)
!14390 = distinct !DISubprogram(name: "mlxsw_sp_mc_remove_mdb_entry", scope: !3, file: !3, line: 1615, type: !14391, scopeLine: 1617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14391 = !DISubroutineType(types: !14392)
!14392 = !{!7, !10421, !11215}
!14393 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !14390, file: !3, line: 1615, type: !10421)
!14394 = !DILocation(line: 1615, column: 58, scope: !14390)
!14395 = !DILocalVariable(name: "mid", arg: 2, scope: !14390, file: !3, line: 1616, type: !11215)
!14396 = !DILocation(line: 1616, column: 27, scope: !14390)
!14397 = !DILocation(line: 1618, column: 7, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 1618, column: 6)
!14399 = !DILocation(line: 1618, column: 12, scope: !14398)
!14400 = !DILocation(line: 1618, column: 6, scope: !14390)
!14401 = !DILocation(line: 1619, column: 3, scope: !14398)
!14402 = !DILocation(line: 1621, column: 12, scope: !14390)
!14403 = !DILocation(line: 1621, column: 17, scope: !14390)
!14404 = !DILocation(line: 1621, column: 22, scope: !14390)
!14405 = !DILocation(line: 1621, column: 32, scope: !14390)
!14406 = !DILocation(line: 1621, column: 40, scope: !14390)
!14407 = !DILocation(line: 1621, column: 2, scope: !14390)
!14408 = !DILocation(line: 1622, column: 2, scope: !14390)
!14409 = !DILocation(line: 1622, column: 7, scope: !14390)
!14410 = !DILocation(line: 1622, column: 13, scope: !14390)
!14411 = !DILocation(line: 1623, column: 30, scope: !14390)
!14412 = !DILocation(line: 1623, column: 40, scope: !14390)
!14413 = !DILocation(line: 1623, column: 45, scope: !14390)
!14414 = !DILocation(line: 1623, column: 51, scope: !14390)
!14415 = !DILocation(line: 1623, column: 56, scope: !14390)
!14416 = !DILocation(line: 1623, column: 61, scope: !14390)
!14417 = !DILocation(line: 1623, column: 66, scope: !14390)
!14418 = !DILocation(line: 1623, column: 9, scope: !14390)
!14419 = !DILocation(line: 1623, column: 2, scope: !14390)
!14420 = !DILocation(line: 1625, column: 1, scope: !14390)
!14421 = distinct !DISubprogram(name: "kasan_check_write", scope: !13480, file: !13480, line: 38, type: !13481, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14422 = !DILocalVariable(name: "p", arg: 1, scope: !14421, file: !13480, line: 38, type: !13446)
!14423 = !DILocation(line: 38, column: 59, scope: !14421)
!14424 = !DILocalVariable(name: "size", arg: 2, scope: !14421, file: !13480, line: 38, type: !14)
!14425 = !DILocation(line: 38, column: 75, scope: !14421)
!14426 = !DILocation(line: 40, column: 2, scope: !14421)
!14427 = distinct !DISubprogram(name: "mlxsw_sp_port_mdb_op", scope: !3, file: !3, line: 1443, type: !14428, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14428 = !DISubroutineType(types: !14429)
!14429 = !{!7, !10421, !453, !1192, !1192, !696}
!14430 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !14431)
!14431 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !14432)
!14432 = distinct !DILocation(line: 1450, column: 11, scope: !14427)
!14433 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !14431)
!14434 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !14431)
!14435 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !14431)
!14436 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !14437)
!14437 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !14432)
!14438 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !14439)
!14439 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !14432)
!14440 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !14441)
!14441 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !14442)
!14442 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !14432)
!14443 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !14441)
!14444 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !14441)
!14445 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !14442)
!14446 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !14442)
!14447 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !14442)
!14448 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !14432)
!14449 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !14432)
!14450 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !14432)
!14451 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !14427, file: !3, line: 1443, type: !10421)
!14452 = !DILocation(line: 1443, column: 50, scope: !14427)
!14453 = !DILocalVariable(name: "addr", arg: 2, scope: !14427, file: !3, line: 1443, type: !453)
!14454 = !DILocation(line: 1443, column: 72, scope: !14427)
!14455 = !DILocalVariable(name: "fid", arg: 3, scope: !14427, file: !3, line: 1444, type: !1192)
!14456 = !DILocation(line: 1444, column: 9, scope: !14427)
!14457 = !DILocalVariable(name: "mid_idx", arg: 4, scope: !14427, file: !3, line: 1444, type: !1192)
!14458 = !DILocation(line: 1444, column: 18, scope: !14427)
!14459 = !DILocalVariable(name: "adding", arg: 5, scope: !14427, file: !3, line: 1444, type: !696)
!14460 = !DILocation(line: 1444, column: 32, scope: !14427)
!14461 = !DILocalVariable(name: "sfd_pl", scope: !14427, file: !3, line: 1446, type: !733)
!14462 = !DILocation(line: 1446, column: 8, scope: !14427)
!14463 = !DILocalVariable(name: "num_rec", scope: !14427, file: !3, line: 1447, type: !1551)
!14464 = !DILocation(line: 1447, column: 5, scope: !14427)
!14465 = !DILocalVariable(name: "err", scope: !14427, file: !3, line: 1448, type: !7)
!14466 = !DILocation(line: 1448, column: 6, scope: !14427)
!14467 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !14432)
!14468 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !14432)
!14469 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !14432)
!14470 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !14432)
!14471 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !14432)
!14472 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !14432)
!14473 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !14432)
!14474 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !14432)
!14475 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !14442)
!14476 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !14442)
!14477 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !14442)
!14478 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !14442)
!14479 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !14442)
!14480 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !14441)
!14481 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !14441)
!14482 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !14441)
!14483 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !14441)
!14484 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !14432)
!14485 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !14432)
!14486 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !14439)
!14487 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !14439)
!14488 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !14439)
!14489 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !14439)
!14490 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !14439)
!14491 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !14439)
!14492 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !14439)
!14493 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !14439)
!14494 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !14439)
!14495 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !14439)
!14496 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !14439)
!14497 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !14439)
!14498 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !14439)
!14499 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !14439)
!14500 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !14439)
!14501 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !14439)
!14502 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !14439)
!14503 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !14439)
!14504 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !14439)
!14505 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !14439)
!14506 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !14439)
!14507 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !14439)
!14508 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !14439)
!14509 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !14439)
!14510 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !14439)
!14511 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !14439)
!14512 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !14439)
!14513 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !14439)
!14514 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !14439)
!14515 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !14439)
!14516 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !14439)
!14517 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !14439)
!14518 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !14439)
!14519 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !14439)
!14520 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !14439)
!14521 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !14439)
!14522 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !14439)
!14523 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !14439)
!14524 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !14439)
!14525 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !14439)
!14526 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !14439)
!14527 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !14439)
!14528 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !14439)
!14529 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !14439)
!14530 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !14439)
!14531 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !14439)
!14532 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !14439)
!14533 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !14439)
!14534 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !14439)
!14535 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !14439)
!14536 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !14439)
!14537 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !14439)
!14538 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !14439)
!14539 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !14439)
!14540 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !14439)
!14541 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !14439)
!14542 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !14439)
!14543 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !14439)
!14544 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !14439)
!14545 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !14439)
!14546 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !14439)
!14547 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !14439)
!14548 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !14439)
!14549 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !14439)
!14550 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !14439)
!14551 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !14439)
!14552 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !14439)
!14553 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !14439)
!14554 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !14439)
!14555 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !14439)
!14556 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !14439)
!14557 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !14439)
!14558 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !14439)
!14559 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !14439)
!14560 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !14439)
!14561 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !14439)
!14562 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !14439)
!14563 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !14439)
!14564 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !14439)
!14565 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !14439)
!14566 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !14439)
!14567 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !14439)
!14568 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !14439)
!14569 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !14439)
!14570 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !14439)
!14571 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !14439)
!14572 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !14439)
!14573 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !14439)
!14574 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !14439)
!14575 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !14439)
!14576 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !14439)
!14577 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !14439)
!14578 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !14439)
!14579 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !14439)
!14580 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !14439)
!14581 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !14439)
!14582 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !14439)
!14583 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !14439)
!14584 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !14439)
!14585 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !14439)
!14586 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !14439)
!14587 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !14439)
!14588 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !14439)
!14589 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !14439)
!14590 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !14439)
!14591 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !14439)
!14592 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !14439)
!14593 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !14439)
!14594 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !14439)
!14595 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !14439)
!14596 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !14439)
!14597 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !14439)
!14598 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !14439)
!14599 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !14439)
!14600 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !14439)
!14601 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !14439)
!14602 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !14439)
!14603 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !14439)
!14604 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !14439)
!14605 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !14439)
!14606 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !14439)
!14607 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !14432)
!14608 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !14432)
!14609 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !14432)
!14610 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !14432)
!14611 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !14432)
!14612 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !14437)
!14613 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !14437)
!14614 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !14437)
!14615 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !14437)
!14616 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !14437)
!14617 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !14437)
!14618 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !14437)
!14619 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !14432)
!14620 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !14432)
!14621 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !14432)
!14622 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !14432)
!14623 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !14431)
!14624 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !14431)
!14625 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !14431)
!14626 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !14431)
!14627 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !14431)
!14628 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !14431)
!14629 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !14431)
!14630 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !14431)
!14631 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !14431)
!14632 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !14431)
!14633 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !14432)
!14634 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !14432)
!14635 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !14432)
!14636 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !14432)
!14637 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !14432)
!14638 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !14432)
!14639 = !DILocation(line: 1450, column: 9, scope: !14427)
!14640 = !DILocation(line: 1451, column: 7, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 1451, column: 6)
!14642 = !DILocation(line: 1451, column: 6, scope: !14427)
!14643 = !DILocation(line: 1452, column: 3, scope: !14641)
!14644 = !DILocation(line: 1454, column: 21, scope: !14427)
!14645 = !DILocation(line: 1454, column: 45, scope: !14427)
!14646 = !DILocation(line: 1454, column: 29, scope: !14427)
!14647 = !DILocation(line: 1454, column: 2, scope: !14427)
!14648 = !DILocation(line: 1455, column: 24, scope: !14427)
!14649 = !DILocation(line: 1455, column: 35, scope: !14427)
!14650 = !DILocation(line: 1455, column: 41, scope: !14427)
!14651 = !DILocation(line: 1456, column: 40, scope: !14427)
!14652 = !DILocation(line: 1455, column: 2, scope: !14427)
!14653 = !DILocation(line: 1457, column: 38, scope: !14427)
!14654 = !DILocation(line: 1457, column: 12, scope: !14427)
!14655 = !DILocation(line: 1457, column: 10, scope: !14427)
!14656 = !DILocation(line: 1458, column: 24, scope: !14427)
!14657 = !DILocation(line: 1458, column: 34, scope: !14427)
!14658 = !DILocation(line: 1458, column: 56, scope: !14427)
!14659 = !DILocation(line: 1458, column: 8, scope: !14427)
!14660 = !DILocation(line: 1458, column: 6, scope: !14427)
!14661 = !DILocation(line: 1459, column: 6, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 1459, column: 6)
!14663 = !DILocation(line: 1459, column: 6, scope: !14427)
!14664 = !DILocation(line: 1460, column: 3, scope: !14662)
!14665 = !DILocation(line: 1462, column: 6, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 1462, column: 6)
!14667 = !DILocation(line: 1462, column: 43, scope: !14666)
!14668 = !DILocation(line: 1462, column: 17, scope: !14666)
!14669 = !DILocation(line: 1462, column: 14, scope: !14666)
!14670 = !DILocation(line: 1462, column: 6, scope: !14427)
!14671 = !DILocation(line: 1463, column: 7, scope: !14666)
!14672 = !DILocation(line: 1463, column: 3, scope: !14666)
!14673 = !DILocation(line: 1462, column: 49, scope: !14666)
!14674 = !DILabel(scope: !14427, name: "out", file: !3, line: 1465)
!14675 = !DILocation(line: 1465, column: 1, scope: !14427)
!14676 = !DILocation(line: 1466, column: 8, scope: !14427)
!14677 = !DILocation(line: 1466, column: 2, scope: !14427)
!14678 = !DILocation(line: 1467, column: 9, scope: !14427)
!14679 = !DILocation(line: 1467, column: 2, scope: !14427)
!14680 = !DILocation(line: 1468, column: 1, scope: !14427)
!14681 = distinct !DISubprogram(name: "mlxsw_reg_sfd_mc_pack", scope: !10048, file: !10048, line: 518, type: !14682, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14682 = !DISubroutineType(types: !14683)
!14683 = !{null, !733, !7, !453, !1192, !10142, !1192}
!14684 = !DILocalVariable(name: "payload", arg: 1, scope: !14681, file: !10048, line: 518, type: !733)
!14685 = !DILocation(line: 518, column: 29, scope: !14681)
!14686 = !DILocalVariable(name: "rec_index", arg: 2, scope: !14681, file: !10048, line: 518, type: !7)
!14687 = !DILocation(line: 518, column: 42, scope: !14681)
!14688 = !DILocalVariable(name: "mac", arg: 3, scope: !14681, file: !10048, line: 519, type: !453)
!14689 = !DILocation(line: 519, column: 21, scope: !14681)
!14690 = !DILocalVariable(name: "fid_vid", arg: 4, scope: !14681, file: !10048, line: 519, type: !1192)
!14691 = !DILocation(line: 519, column: 30, scope: !14681)
!14692 = !DILocalVariable(name: "action", arg: 5, scope: !14681, file: !10048, line: 520, type: !10142)
!14693 = !DILocation(line: 520, column: 39, scope: !14681)
!14694 = !DILocalVariable(name: "mid", arg: 6, scope: !14681, file: !10048, line: 520, type: !1192)
!14695 = !DILocation(line: 520, column: 51, scope: !14681)
!14696 = !DILocation(line: 522, column: 25, scope: !14681)
!14697 = !DILocation(line: 522, column: 34, scope: !14681)
!14698 = !DILocation(line: 523, column: 45, scope: !14681)
!14699 = !DILocation(line: 523, column: 50, scope: !14681)
!14700 = !DILocation(line: 522, column: 2, scope: !14681)
!14701 = !DILocation(line: 524, column: 27, scope: !14681)
!14702 = !DILocation(line: 524, column: 36, scope: !14681)
!14703 = !DILocation(line: 524, column: 2, scope: !14681)
!14704 = !DILocation(line: 525, column: 31, scope: !14681)
!14705 = !DILocation(line: 525, column: 40, scope: !14681)
!14706 = !DILocation(line: 525, column: 51, scope: !14681)
!14707 = !DILocation(line: 525, column: 2, scope: !14681)
!14708 = !DILocation(line: 526, column: 27, scope: !14681)
!14709 = !DILocation(line: 526, column: 36, scope: !14681)
!14710 = !DILocation(line: 526, column: 47, scope: !14681)
!14711 = !DILocation(line: 526, column: 2, scope: !14681)
!14712 = !DILocation(line: 527, column: 1, scope: !14681)
!14713 = distinct !DISubprogram(name: "mlxsw_reg_sfd_mc_pgi_set", scope: !10048, file: !10048, line: 497, type: !13891, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14714 = !DILocalVariable(name: "buf", arg: 1, scope: !14713, file: !10048, line: 497, type: !733)
!14715 = !DILocation(line: 497, column: 1, scope: !14713)
!14716 = !DILocalVariable(name: "index", arg: 2, scope: !14713, file: !10048, line: 497, type: !633)
!14717 = !DILocalVariable(name: "val", arg: 3, scope: !14713, file: !10048, line: 497, type: !862)
!14718 = distinct !DISubprogram(name: "mlxsw_reg_sfd_mc_fid_vid_set", scope: !10048, file: !10048, line: 505, type: !13891, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14719 = !DILocalVariable(name: "buf", arg: 1, scope: !14718, file: !10048, line: 505, type: !733)
!14720 = !DILocation(line: 505, column: 1, scope: !14718)
!14721 = !DILocalVariable(name: "index", arg: 2, scope: !14718, file: !10048, line: 505, type: !633)
!14722 = !DILocalVariable(name: "val", arg: 3, scope: !14718, file: !10048, line: 505, type: !862)
!14723 = distinct !DISubprogram(name: "mlxsw_reg_sfd_mc_mid_set", scope: !10048, file: !10048, line: 514, type: !13891, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14724 = !DILocalVariable(name: "buf", arg: 1, scope: !14723, file: !10048, line: 514, type: !733)
!14725 = !DILocation(line: 514, column: 1, scope: !14723)
!14726 = !DILocalVariable(name: "index", arg: 2, scope: !14723, file: !10048, line: 514, type: !633)
!14727 = !DILocalVariable(name: "val", arg: 3, scope: !14723, file: !10048, line: 514, type: !862)
!14728 = distinct !DISubprogram(name: "mlxsw_reg_smid_pack", scope: !10048, file: !10048, line: 108, type: !14729, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14729 = !DISubroutineType(types: !14730)
!14730 = !{null, !733, !1192, !1551, !696}
!14731 = !DILocalVariable(name: "payload", arg: 1, scope: !14728, file: !10048, line: 108, type: !733)
!14732 = !DILocation(line: 108, column: 46, scope: !14728)
!14733 = !DILocalVariable(name: "mid", arg: 2, scope: !14728, file: !10048, line: 108, type: !1192)
!14734 = !DILocation(line: 108, column: 59, scope: !14728)
!14735 = !DILocalVariable(name: "port", arg: 3, scope: !14728, file: !10048, line: 109, type: !1551)
!14736 = !DILocation(line: 109, column: 15, scope: !14728)
!14737 = !DILocalVariable(name: "set", arg: 4, scope: !14728, file: !10048, line: 109, type: !696)
!14738 = !DILocation(line: 109, column: 26, scope: !14728)
!14739 = !DILocation(line: 111, column: 2, scope: !14728)
!14740 = !DILocation(line: 112, column: 26, scope: !14728)
!14741 = !DILocation(line: 112, column: 2, scope: !14728)
!14742 = !DILocation(line: 113, column: 25, scope: !14728)
!14743 = !DILocation(line: 113, column: 34, scope: !14728)
!14744 = !DILocation(line: 113, column: 2, scope: !14728)
!14745 = !DILocation(line: 114, column: 26, scope: !14728)
!14746 = !DILocation(line: 114, column: 35, scope: !14728)
!14747 = !DILocation(line: 114, column: 41, scope: !14728)
!14748 = !DILocation(line: 114, column: 2, scope: !14728)
!14749 = !DILocation(line: 115, column: 31, scope: !14728)
!14750 = !DILocation(line: 115, column: 40, scope: !14728)
!14751 = !DILocation(line: 115, column: 2, scope: !14728)
!14752 = !DILocation(line: 116, column: 1, scope: !14728)
!14753 = distinct !DISubprogram(name: "mlxsw_reg_smid_swid_set", scope: !10048, file: !10048, line: 87, type: !13537, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14754 = !DILocalVariable(name: "buf", arg: 1, scope: !14753, file: !10048, line: 87, type: !733)
!14755 = !DILocation(line: 87, column: 1, scope: !14753)
!14756 = !DILocalVariable(name: "val", arg: 2, scope: !14753, file: !10048, line: 87, type: !862)
!14757 = distinct !DISubprogram(name: "mlxsw_reg_smid_mid_set", scope: !10048, file: !10048, line: 94, type: !13537, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14758 = !DILocalVariable(name: "buf", arg: 1, scope: !14757, file: !10048, line: 94, type: !733)
!14759 = !DILocation(line: 94, column: 1, scope: !14757)
!14760 = !DILocalVariable(name: "val", arg: 2, scope: !14757, file: !10048, line: 94, type: !862)
!14761 = distinct !DISubprogram(name: "mlxsw_reg_smid_port_set", scope: !10048, file: !10048, line: 100, type: !14762, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{null, !733, !1192, !1551}
!14764 = !DILocalVariable(name: "buf", arg: 1, scope: !14761, file: !10048, line: 100, type: !733)
!14765 = !DILocation(line: 100, column: 1, scope: !14761)
!14766 = !DILocalVariable(name: "index", arg: 2, scope: !14761, file: !10048, line: 100, type: !1192)
!14767 = !DILocalVariable(name: "val", arg: 3, scope: !14761, file: !10048, line: 100, type: !1551)
!14768 = distinct !DISubprogram(name: "mlxsw_reg_smid_port_mask_set", scope: !10048, file: !10048, line: 106, type: !14762, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14769 = !DILocalVariable(name: "buf", arg: 1, scope: !14768, file: !10048, line: 106, type: !733)
!14770 = !DILocation(line: 106, column: 1, scope: !14768)
!14771 = !DILocalVariable(name: "index", arg: 2, scope: !14768, file: !10048, line: 106, type: !1192)
!14772 = !DILocalVariable(name: "val", arg: 3, scope: !14768, file: !10048, line: 106, type: !1551)
!14773 = distinct !DISubprogram(name: "__mlxsw_item_bit_array_set", scope: !10689, file: !10689, line: 242, type: !14774, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14774 = !DISubroutineType(types: !14775)
!14775 = !{null, !733, !13557, !1192, !1551}
!14776 = !DILocalVariable(name: "buf", arg: 1, scope: !14773, file: !10689, line: 242, type: !733)
!14777 = !DILocation(line: 242, column: 53, scope: !14773)
!14778 = !DILocalVariable(name: "item", arg: 2, scope: !14773, file: !10689, line: 243, type: !13557)
!14779 = !DILocation(line: 243, column: 37, scope: !14773)
!14780 = !DILocalVariable(name: "index", arg: 3, scope: !14773, file: !10689, line: 244, type: !1192)
!14781 = !DILocation(line: 244, column: 16, scope: !14773)
!14782 = !DILocalVariable(name: "val", arg: 4, scope: !14773, file: !10689, line: 244, type: !1551)
!14783 = !DILocation(line: 244, column: 26, scope: !14773)
!14784 = !DILocalVariable(name: "shift", scope: !14773, file: !10689, line: 246, type: !1551)
!14785 = !DILocation(line: 246, column: 5, scope: !14773)
!14786 = !DILocalVariable(name: "tmp", scope: !14773, file: !10689, line: 246, type: !1551)
!14787 = !DILocation(line: 246, column: 12, scope: !14773)
!14788 = !DILocalVariable(name: "offset", scope: !14773, file: !10689, line: 247, type: !1192)
!14789 = !DILocation(line: 247, column: 6, scope: !14773)
!14790 = !DILocation(line: 247, column: 45, scope: !14773)
!14791 = !DILocation(line: 247, column: 51, scope: !14773)
!14792 = !DILocation(line: 247, column: 15, scope: !14773)
!14793 = !DILocalVariable(name: "mask", scope: !14773, file: !10689, line: 248, type: !1551)
!14794 = !DILocation(line: 248, column: 5, scope: !14773)
!14795 = !DILocation(line: 248, column: 12, scope: !14773)
!14796 = !DILocation(line: 248, column: 50, scope: !14773)
!14797 = !DILocation(line: 248, column: 47, scope: !14773)
!14798 = !DILocation(line: 250, column: 10, scope: !14773)
!14799 = !DILocation(line: 250, column: 6, scope: !14773)
!14800 = !DILocation(line: 251, column: 9, scope: !14773)
!14801 = !DILocation(line: 251, column: 6, scope: !14773)
!14802 = !DILocation(line: 252, column: 8, scope: !14773)
!14803 = !DILocation(line: 252, column: 12, scope: !14773)
!14804 = !DILocation(line: 252, column: 6, scope: !14773)
!14805 = !DILocation(line: 253, column: 10, scope: !14773)
!14806 = !DILocation(line: 253, column: 9, scope: !14773)
!14807 = !DILocation(line: 253, column: 6, scope: !14773)
!14808 = !DILocation(line: 254, column: 9, scope: !14773)
!14809 = !DILocation(line: 254, column: 6, scope: !14773)
!14810 = !DILocation(line: 255, column: 16, scope: !14773)
!14811 = !DILocation(line: 255, column: 2, scope: !14773)
!14812 = !DILocation(line: 255, column: 6, scope: !14773)
!14813 = !DILocation(line: 255, column: 14, scope: !14773)
!14814 = !DILocation(line: 256, column: 1, scope: !14773)
!14815 = distinct !DISubprogram(name: "__mlxsw_item_bit_array_offset", scope: !10689, file: !10689, line: 205, type: !14816, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14816 = !DISubroutineType(types: !14817)
!14817 = !{!1192, !13557, !1192, !8081}
!14818 = !DILocalVariable(name: "item", arg: 1, scope: !14815, file: !10689, line: 205, type: !13557)
!14819 = !DILocation(line: 205, column: 56, scope: !14815)
!14820 = !DILocalVariable(name: "index", arg: 2, scope: !14815, file: !10689, line: 206, type: !1192)
!14821 = !DILocation(line: 206, column: 14, scope: !14815)
!14822 = !DILocalVariable(name: "shift", arg: 3, scope: !14815, file: !10689, line: 206, type: !8081)
!14823 = !DILocation(line: 206, column: 25, scope: !14815)
!14824 = !DILocalVariable(name: "max_index", scope: !14815, file: !10689, line: 208, type: !1192)
!14825 = !DILocation(line: 208, column: 6, scope: !14815)
!14826 = !DILocalVariable(name: "be_index", scope: !14815, file: !10689, line: 208, type: !1192)
!14827 = !DILocation(line: 208, column: 17, scope: !14815)
!14828 = !DILocalVariable(name: "offset", scope: !14815, file: !10689, line: 209, type: !1192)
!14829 = !DILocation(line: 209, column: 6, scope: !14815)
!14830 = !DILocalVariable(name: "in_byte_index", scope: !14815, file: !10689, line: 210, type: !1551)
!14831 = !DILocation(line: 210, column: 5, scope: !14815)
!14832 = !DILocation(line: 212, column: 2, scope: !14815)
!14833 = !DILocation(line: 212, column: 2, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14835, file: !10689, line: 212, column: 2)
!14835 = distinct !DILexicalBlock(scope: !14815, file: !10689, line: 212, column: 2)
!14836 = !DILocation(line: 0, scope: !14834)
!14837 = !DILocation(line: 212, column: 2, scope: !14835)
!14838 = !DILocation(line: 212, column: 2, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14834, file: !10689, line: 212, column: 2)
!14840 = !DILocation(line: 212, column: 2, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14839, file: !10689, line: 212, column: 2)
!14842 = !DILocation(line: 212, column: 2, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14839, file: !10689, line: 212, column: 2)
!14844 = !{i32 -2137076584, i32 -2137076555, i32 -2137076509, i32 -2137076451, i32 -2137076397, i32 -2137076343, i32 -2137076288, i32 -2137076257}
!14845 = !DILocation(line: 212, column: 2, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !10689, line: 212, column: 2)
!14847 = distinct !DILexicalBlock(scope: !14839, file: !10689, line: 212, column: 2)
!14848 = !{i32 -2137075792, i32 -2137075785, i32 -2137075731, i32 -2137075700, i32 -2137075670}
!14849 = !DILocation(line: 212, column: 2, scope: !14847)
!14850 = !DILocation(line: 213, column: 6, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14815, file: !10689, line: 213, column: 6)
!14852 = !DILocation(line: 213, column: 12, scope: !14851)
!14853 = !DILocation(line: 213, column: 19, scope: !14851)
!14854 = !DILocation(line: 213, column: 33, scope: !14851)
!14855 = !DILocation(line: 213, column: 38, scope: !14851)
!14856 = !DILocation(line: 214, column: 22, scope: !14851)
!14857 = !DILocation(line: 214, column: 28, scope: !14851)
!14858 = !DILocation(line: 214, column: 20, scope: !14851)
!14859 = !DILocation(line: 214, column: 41, scope: !14851)
!14860 = !DILocation(line: 213, column: 6, scope: !14815)
!14861 = !DILocation(line: 215, column: 3, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14851, file: !10689, line: 214, column: 47)
!14863 = !DILocation(line: 217, column: 3, scope: !14862)
!14864 = !DILocation(line: 217, column: 3, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14862, file: !10689, line: 217, column: 3)
!14866 = !DILocation(line: 217, column: 3, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14865, file: !10689, line: 217, column: 3)
!14868 = !DILocation(line: 217, column: 3, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14865, file: !10689, line: 217, column: 3)
!14870 = !{i32 -2137075238, i32 -2137075209, i32 -2137075163, i32 -2137075105, i32 -2137075051, i32 -2137074997, i32 -2137074942, i32 -2137074911}
!14871 = !DILocation(line: 217, column: 3, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14873, file: !10689, line: 217, column: 3)
!14873 = distinct !DILexicalBlock(scope: !14865, file: !10689, line: 217, column: 3)
!14874 = !{i32 -2137074446, i32 -2137074439, i32 -2137074385, i32 -2137074354, i32 -2137074324}
!14875 = !DILocation(line: 217, column: 3, scope: !14873)
!14876 = !DILocation(line: 218, column: 2, scope: !14862)
!14877 = !DILocation(line: 220, column: 15, scope: !14815)
!14878 = !DILocation(line: 220, column: 21, scope: !14815)
!14879 = !DILocation(line: 220, column: 26, scope: !14815)
!14880 = !DILocation(line: 220, column: 32, scope: !14815)
!14881 = !DILocation(line: 220, column: 40, scope: !14815)
!14882 = !DILocation(line: 220, column: 46, scope: !14815)
!14883 = !DILocation(line: 220, column: 38, scope: !14815)
!14884 = !DILocation(line: 220, column: 59, scope: !14815)
!14885 = !DILocation(line: 220, column: 14, scope: !14815)
!14886 = !DILocation(line: 220, column: 12, scope: !14815)
!14887 = !DILocation(line: 221, column: 13, scope: !14815)
!14888 = !DILocation(line: 221, column: 25, scope: !14815)
!14889 = !DILocation(line: 221, column: 23, scope: !14815)
!14890 = !DILocation(line: 221, column: 11, scope: !14815)
!14891 = !DILocation(line: 222, column: 11, scope: !14815)
!14892 = !DILocation(line: 222, column: 22, scope: !14815)
!14893 = !DILocation(line: 222, column: 28, scope: !14815)
!14894 = !DILocation(line: 222, column: 20, scope: !14815)
!14895 = !DILocation(line: 222, column: 41, scope: !14815)
!14896 = !DILocation(line: 222, column: 9, scope: !14815)
!14897 = !DILocation(line: 223, column: 19, scope: !14815)
!14898 = !DILocation(line: 223, column: 44, scope: !14815)
!14899 = !DILocation(line: 223, column: 50, scope: !14815)
!14900 = !DILocation(line: 223, column: 42, scope: !14815)
!14901 = !DILocation(line: 223, column: 25, scope: !14815)
!14902 = !DILocation(line: 223, column: 17, scope: !14815)
!14903 = !DILocation(line: 224, column: 11, scope: !14815)
!14904 = !DILocation(line: 224, column: 27, scope: !14815)
!14905 = !DILocation(line: 224, column: 33, scope: !14815)
!14906 = !DILocation(line: 224, column: 25, scope: !14815)
!14907 = !DILocation(line: 224, column: 3, scope: !14815)
!14908 = !DILocation(line: 224, column: 9, scope: !14815)
!14909 = !DILocation(line: 226, column: 9, scope: !14815)
!14910 = !DILocation(line: 226, column: 15, scope: !14815)
!14911 = !DILocation(line: 226, column: 24, scope: !14815)
!14912 = !DILocation(line: 226, column: 22, scope: !14815)
!14913 = !DILocation(line: 226, column: 2, scope: !14815)
!14914 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_get", scope: !3, file: !3, line: 273, type: !11368, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14915 = !DILocalVariable(name: "bridge", arg: 1, scope: !14914, file: !3, line: 273, type: !10473)
!14916 = !DILocation(line: 273, column: 52, scope: !14914)
!14917 = !DILocalVariable(name: "br_dev", arg: 2, scope: !14914, file: !3, line: 274, type: !451)
!14918 = !DILocation(line: 274, column: 26, scope: !14914)
!14919 = !DILocalVariable(name: "extack", arg: 3, scope: !14914, file: !3, line: 275, type: !2625)
!14920 = !DILocation(line: 275, column: 31, scope: !14914)
!14921 = !DILocalVariable(name: "bridge_device", scope: !14914, file: !3, line: 277, type: !10370)
!14922 = !DILocation(line: 277, column: 33, scope: !14914)
!14923 = !DILocation(line: 279, column: 46, scope: !14914)
!14924 = !DILocation(line: 279, column: 54, scope: !14914)
!14925 = !DILocation(line: 279, column: 18, scope: !14914)
!14926 = !DILocation(line: 279, column: 16, scope: !14914)
!14927 = !DILocation(line: 280, column: 6, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14914, file: !3, line: 280, column: 6)
!14929 = !DILocation(line: 280, column: 6, scope: !14914)
!14930 = !DILocation(line: 281, column: 10, scope: !14928)
!14931 = !DILocation(line: 281, column: 3, scope: !14928)
!14932 = !DILocation(line: 283, column: 39, scope: !14914)
!14933 = !DILocation(line: 283, column: 47, scope: !14914)
!14934 = !DILocation(line: 283, column: 55, scope: !14914)
!14935 = !DILocation(line: 283, column: 9, scope: !14914)
!14936 = !DILocation(line: 283, column: 2, scope: !14914)
!14937 = !DILocation(line: 284, column: 1, scope: !14914)
!14938 = distinct !DISubprogram(name: "ERR_CAST", scope: !12447, file: !12447, line: 51, type: !14939, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14939 = !DISubroutineType(types: !14940)
!14940 = !{!726, !2416}
!14941 = !DILocalVariable(name: "ptr", arg: 1, scope: !14938, file: !12447, line: 51, type: !2416)
!14942 = !DILocation(line: 51, column: 64, scope: !14938)
!14943 = !DILocation(line: 54, column: 18, scope: !14938)
!14944 = !DILocation(line: 54, column: 2, scope: !14938)
!14945 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_create", scope: !3, file: !3, line: 326, type: !14946, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14946 = !DISubroutineType(types: !14947)
!14947 = !{!10389, !10370, !451}
!14948 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !14945, file: !3, line: 326, type: !10370)
!14949 = !DILocation(line: 326, column: 60, scope: !14945)
!14950 = !DILocalVariable(name: "brport_dev", arg: 2, scope: !14945, file: !3, line: 327, type: !451)
!14951 = !DILocation(line: 327, column: 27, scope: !14945)
!14952 = !DILocalVariable(name: "bridge_port", scope: !14945, file: !3, line: 329, type: !10389)
!14953 = !DILocation(line: 329, column: 31, scope: !14945)
!14954 = !DILocalVariable(name: "mlxsw_sp_port", scope: !14945, file: !3, line: 330, type: !10406)
!14955 = !DILocation(line: 330, column: 24, scope: !14945)
!14956 = !DILocation(line: 332, column: 16, scope: !14945)
!14957 = !DILocation(line: 332, column: 14, scope: !14945)
!14958 = !DILocation(line: 333, column: 7, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14945, file: !3, line: 333, column: 6)
!14960 = !DILocation(line: 333, column: 6, scope: !14945)
!14961 = !DILocation(line: 334, column: 3, scope: !14959)
!14962 = !DILocation(line: 336, column: 47, scope: !14945)
!14963 = !DILocation(line: 336, column: 18, scope: !14945)
!14964 = !DILocation(line: 336, column: 16, scope: !14945)
!14965 = !DILocation(line: 337, column: 24, scope: !14945)
!14966 = !DILocation(line: 337, column: 39, scope: !14945)
!14967 = !DILocation(line: 337, column: 2, scope: !14945)
!14968 = !DILocation(line: 337, column: 15, scope: !14945)
!14969 = !DILocation(line: 337, column: 22, scope: !14945)
!14970 = !DILocation(line: 338, column: 6, scope: !14971)
!14971 = distinct !DILexicalBlock(scope: !14945, file: !3, line: 338, column: 6)
!14972 = !DILocation(line: 338, column: 19, scope: !14971)
!14973 = !DILocation(line: 338, column: 6, scope: !14945)
!14974 = !DILocation(line: 339, column: 25, scope: !14971)
!14975 = !DILocation(line: 339, column: 40, scope: !14971)
!14976 = !DILocation(line: 339, column: 3, scope: !14971)
!14977 = !DILocation(line: 339, column: 16, scope: !14971)
!14978 = !DILocation(line: 339, column: 23, scope: !14971)
!14979 = !DILocation(line: 341, column: 30, scope: !14971)
!14980 = !DILocation(line: 341, column: 45, scope: !14971)
!14981 = !DILocation(line: 341, column: 3, scope: !14971)
!14982 = !DILocation(line: 341, column: 16, scope: !14971)
!14983 = !DILocation(line: 341, column: 28, scope: !14971)
!14984 = !DILocation(line: 342, column: 21, scope: !14945)
!14985 = !DILocation(line: 342, column: 2, scope: !14945)
!14986 = !DILocation(line: 342, column: 15, scope: !14945)
!14987 = !DILocation(line: 342, column: 19, scope: !14945)
!14988 = !DILocation(line: 343, column: 31, scope: !14945)
!14989 = !DILocation(line: 343, column: 2, scope: !14945)
!14990 = !DILocation(line: 343, column: 15, scope: !14945)
!14991 = !DILocation(line: 343, column: 29, scope: !14945)
!14992 = !DILocation(line: 344, column: 2, scope: !14945)
!14993 = !DILocation(line: 344, column: 15, scope: !14945)
!14994 = !DILocation(line: 344, column: 25, scope: !14945)
!14995 = !DILocation(line: 345, column: 2, scope: !14945)
!14996 = !DILocation(line: 345, column: 15, scope: !14945)
!14997 = !DILocation(line: 345, column: 21, scope: !14945)
!14998 = !DILocation(line: 347, column: 18, scope: !14945)
!14999 = !DILocation(line: 347, column: 31, scope: !14945)
!15000 = !DILocation(line: 347, column: 2, scope: !14945)
!15001 = !DILocation(line: 348, column: 12, scope: !14945)
!15002 = !DILocation(line: 348, column: 25, scope: !14945)
!15003 = !DILocation(line: 348, column: 32, scope: !14945)
!15004 = !DILocation(line: 348, column: 47, scope: !14945)
!15005 = !DILocation(line: 348, column: 2, scope: !14945)
!15006 = !DILocation(line: 349, column: 2, scope: !14945)
!15007 = !DILocation(line: 349, column: 15, scope: !14945)
!15008 = !DILocation(line: 349, column: 25, scope: !14945)
!15009 = !DILocation(line: 351, column: 9, scope: !14945)
!15010 = !DILocation(line: 351, column: 2, scope: !14945)
!15011 = !DILocation(line: 352, column: 1, scope: !14945)
!15012 = distinct !DISubprogram(name: "ERR_PTR", scope: !12447, file: !12447, line: 24, type: !15013, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15013 = !DISubroutineType(types: !15014)
!15014 = !{!726, !669}
!15015 = !DILocalVariable(name: "error", arg: 1, scope: !15012, file: !12447, line: 24, type: !669)
!15016 = !DILocation(line: 24, column: 48, scope: !15012)
!15017 = !DILocation(line: 26, column: 18, scope: !15012)
!15018 = !DILocation(line: 26, column: 9, scope: !15012)
!15019 = !DILocation(line: 26, column: 2, scope: !15012)
!15020 = !DILocalVariable(name: "bridge", arg: 1, scope: !11367, file: !3, line: 206, type: !10473)
!15021 = !DILocation(line: 206, column: 55, scope: !11367)
!15022 = !DILocalVariable(name: "br_dev", arg: 2, scope: !11367, file: !3, line: 207, type: !451)
!15023 = !DILocation(line: 207, column: 29, scope: !11367)
!15024 = !DILocalVariable(name: "extack", arg: 3, scope: !11367, file: !3, line: 208, type: !2625)
!15025 = !DILocation(line: 208, column: 34, scope: !11367)
!15026 = !DILocalVariable(name: "dev", scope: !11367, file: !3, line: 210, type: !4753)
!15027 = !DILocation(line: 210, column: 17, scope: !11367)
!15028 = !DILocation(line: 210, column: 23, scope: !11367)
!15029 = !DILocation(line: 210, column: 31, scope: !11367)
!15030 = !DILocation(line: 210, column: 41, scope: !11367)
!15031 = !DILocation(line: 210, column: 51, scope: !11367)
!15032 = !DILocalVariable(name: "bridge_device", scope: !11367, file: !3, line: 211, type: !10370)
!15033 = !DILocation(line: 211, column: 33, scope: !11367)
!15034 = !DILocalVariable(name: "vlan_enabled", scope: !11367, file: !3, line: 212, type: !696)
!15035 = !DILocation(line: 212, column: 7, scope: !11367)
!15036 = !DILocation(line: 212, column: 38, scope: !11367)
!15037 = !DILocation(line: 212, column: 22, scope: !11367)
!15038 = !DILocalVariable(name: "err", scope: !11367, file: !3, line: 213, type: !7)
!15039 = !DILocation(line: 213, column: 6, scope: !11367)
!15040 = !DILocation(line: 215, column: 6, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 215, column: 6)
!15042 = !DILocation(line: 215, column: 19, scope: !15041)
!15043 = !DILocation(line: 215, column: 22, scope: !15041)
!15044 = !DILocation(line: 215, column: 30, scope: !15041)
!15045 = !DILocation(line: 215, column: 6, scope: !11367)
!15046 = !DILocation(line: 216, column: 3, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15041, file: !3, line: 215, column: 51)
!15048 = !DILocation(line: 217, column: 3, scope: !15047)
!15049 = !DILocalVariable(name: "__extack", scope: !15050, file: !3, line: 217, type: !2625)
!15050 = distinct !DILexicalBlock(scope: !15047, file: !3, line: 217, column: 3)
!15051 = !DILocation(line: 217, column: 3, scope: !15050)
!15052 = !DILocation(line: 217, column: 3, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15050, file: !3, line: 217, column: 3)
!15054 = !DILocation(line: 218, column: 10, scope: !15047)
!15055 = !DILocation(line: 218, column: 3, scope: !15047)
!15056 = !DILocation(line: 221, column: 18, scope: !11367)
!15057 = !DILocation(line: 221, column: 16, scope: !11367)
!15058 = !DILocation(line: 222, column: 7, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 222, column: 6)
!15060 = !DILocation(line: 222, column: 6, scope: !11367)
!15061 = !DILocation(line: 223, column: 10, scope: !15059)
!15062 = !DILocation(line: 223, column: 3, scope: !15059)
!15063 = !DILocation(line: 225, column: 23, scope: !11367)
!15064 = !DILocation(line: 225, column: 2, scope: !11367)
!15065 = !DILocation(line: 225, column: 17, scope: !11367)
!15066 = !DILocation(line: 225, column: 21, scope: !11367)
!15067 = !DILocation(line: 226, column: 32, scope: !11367)
!15068 = !DILocation(line: 226, column: 2, scope: !11367)
!15069 = !DILocation(line: 226, column: 17, scope: !11367)
!15070 = !DILocation(line: 226, column: 30, scope: !11367)
!15071 = !DILocation(line: 227, column: 58, scope: !11367)
!15072 = !DILocation(line: 227, column: 37, scope: !11367)
!15073 = !DILocation(line: 227, column: 2, scope: !11367)
!15074 = !DILocation(line: 227, column: 17, scope: !11367)
!15075 = !DILocation(line: 227, column: 35, scope: !11367)
!15076 = !DILocation(line: 228, column: 47, scope: !11367)
!15077 = !DILocation(line: 228, column: 27, scope: !11367)
!15078 = !DILocation(line: 228, column: 2, scope: !11367)
!15079 = !DILocation(line: 228, column: 17, scope: !11367)
!15080 = !DILocation(line: 228, column: 25, scope: !11367)
!15081 = !DILocation(line: 229, column: 18, scope: !11367)
!15082 = !DILocation(line: 229, column: 33, scope: !11367)
!15083 = !DILocation(line: 229, column: 2, scope: !11367)
!15084 = !DILocation(line: 230, column: 6, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 230, column: 6)
!15086 = !DILocation(line: 230, column: 6, scope: !11367)
!15087 = !DILocation(line: 231, column: 3, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15085, file: !3, line: 230, column: 20)
!15089 = !DILocation(line: 231, column: 11, scope: !15088)
!15090 = !DILocation(line: 231, column: 31, scope: !15088)
!15091 = !DILocation(line: 232, column: 24, scope: !15088)
!15092 = !DILocation(line: 232, column: 32, scope: !15088)
!15093 = !DILocation(line: 232, column: 3, scope: !15088)
!15094 = !DILocation(line: 232, column: 18, scope: !15088)
!15095 = !DILocation(line: 232, column: 22, scope: !15088)
!15096 = !DILocation(line: 233, column: 2, scope: !15088)
!15097 = !DILocation(line: 234, column: 24, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15085, file: !3, line: 233, column: 9)
!15099 = !DILocation(line: 234, column: 32, scope: !15098)
!15100 = !DILocation(line: 234, column: 3, scope: !15098)
!15101 = !DILocation(line: 234, column: 18, scope: !15098)
!15102 = !DILocation(line: 234, column: 22, scope: !15098)
!15103 = !DILocation(line: 236, column: 18, scope: !11367)
!15104 = !DILocation(line: 236, column: 33, scope: !11367)
!15105 = !DILocation(line: 236, column: 2, scope: !11367)
!15106 = !DILocation(line: 237, column: 12, scope: !11367)
!15107 = !DILocation(line: 237, column: 27, scope: !11367)
!15108 = !DILocation(line: 237, column: 34, scope: !11367)
!15109 = !DILocation(line: 237, column: 42, scope: !11367)
!15110 = !DILocation(line: 237, column: 2, scope: !11367)
!15111 = !DILocation(line: 243, column: 42, scope: !11367)
!15112 = !DILocation(line: 243, column: 50, scope: !11367)
!15113 = !DILocation(line: 243, column: 58, scope: !11367)
!15114 = !DILocation(line: 243, column: 8, scope: !11367)
!15115 = !DILocation(line: 243, column: 6, scope: !11367)
!15116 = !DILocation(line: 244, column: 6, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 244, column: 6)
!15118 = !DILocation(line: 244, column: 6, scope: !11367)
!15119 = !DILocation(line: 245, column: 3, scope: !15117)
!15120 = !DILocation(line: 247, column: 9, scope: !11367)
!15121 = !DILocation(line: 247, column: 2, scope: !11367)
!15122 = !DILabel(scope: !11367, name: "err_vxlan_init", file: !3, line: 249)
!15123 = !DILocation(line: 249, column: 1, scope: !11367)
!15124 = !DILocation(line: 250, column: 12, scope: !11367)
!15125 = !DILocation(line: 250, column: 27, scope: !11367)
!15126 = !DILocation(line: 250, column: 2, scope: !11367)
!15127 = !DILocation(line: 251, column: 6, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 251, column: 6)
!15129 = !DILocation(line: 251, column: 21, scope: !15128)
!15130 = !DILocation(line: 251, column: 6, scope: !11367)
!15131 = !DILocation(line: 252, column: 3, scope: !15128)
!15132 = !DILocation(line: 252, column: 11, scope: !15128)
!15133 = !DILocation(line: 252, column: 31, scope: !15128)
!15134 = !DILocation(line: 253, column: 8, scope: !11367)
!15135 = !DILocation(line: 253, column: 2, scope: !11367)
!15136 = !DILocation(line: 254, column: 17, scope: !11367)
!15137 = !DILocation(line: 254, column: 9, scope: !11367)
!15138 = !DILocation(line: 254, column: 2, scope: !11367)
!15139 = !DILocation(line: 255, column: 1, scope: !11367)
!15140 = distinct !DISubprogram(name: "br_vlan_enabled", scope: !15141, file: !15141, line: 105, type: !13398, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15141 = !DIFile(filename: "./include/linux/if_bridge.h", directory: "/home/lizy2001/genbc/linux")
!15142 = !DILocalVariable(name: "dev", arg: 1, scope: !15140, file: !15141, line: 105, type: !3015)
!15143 = !DILocation(line: 105, column: 61, scope: !15140)
!15144 = !DILocation(line: 107, column: 2, scope: !15140)
!15145 = distinct !DISubprogram(name: "list_add", scope: !11724, file: !11724, line: 84, type: !13195, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15146 = !DILocalVariable(name: "new", arg: 1, scope: !15145, file: !11724, line: 84, type: !448)
!15147 = !DILocation(line: 84, column: 47, scope: !15145)
!15148 = !DILocalVariable(name: "head", arg: 2, scope: !15145, file: !11724, line: 84, type: !448)
!15149 = !DILocation(line: 84, column: 70, scope: !15145)
!15150 = !DILocation(line: 86, column: 13, scope: !15145)
!15151 = !DILocation(line: 86, column: 18, scope: !15145)
!15152 = !DILocation(line: 86, column: 24, scope: !15145)
!15153 = !DILocation(line: 86, column: 30, scope: !15145)
!15154 = !DILocation(line: 86, column: 2, scope: !15145)
!15155 = !DILocation(line: 87, column: 1, scope: !15145)
!15156 = distinct !DISubprogram(name: "mlxsw_sp_bridge_device_vxlan_init", scope: !3, file: !3, line: 160, type: !15157, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!7, !10473, !451, !2625}
!15159 = !DILocalVariable(name: "bridge", arg: 1, scope: !15156, file: !3, line: 160, type: !10473)
!15160 = !DILocation(line: 160, column: 70, scope: !15156)
!15161 = !DILocalVariable(name: "br_dev", arg: 2, scope: !15156, file: !3, line: 161, type: !451)
!15162 = !DILocation(line: 161, column: 30, scope: !15156)
!15163 = !DILocalVariable(name: "extack", arg: 3, scope: !15156, file: !3, line: 162, type: !2625)
!15164 = !DILocation(line: 162, column: 35, scope: !15156)
!15165 = !DILocalVariable(name: "dev", scope: !15156, file: !3, line: 164, type: !451)
!15166 = !DILocation(line: 164, column: 21, scope: !15156)
!15167 = !DILocalVariable(name: "stop_dev", scope: !15156, file: !3, line: 164, type: !451)
!15168 = !DILocation(line: 164, column: 27, scope: !15156)
!15169 = !DILocalVariable(name: "iter", scope: !15156, file: !3, line: 165, type: !448)
!15170 = !DILocation(line: 165, column: 20, scope: !15156)
!15171 = !DILocalVariable(name: "err", scope: !15156, file: !3, line: 166, type: !7)
!15172 = !DILocation(line: 166, column: 6, scope: !15156)
!15173 = !DILocation(line: 168, column: 2, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15156, file: !3, line: 168, column: 2)
!15175 = !DILocation(line: 168, column: 2, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15174, file: !3, line: 168, column: 2)
!15177 = !DILocation(line: 169, column: 22, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15179, file: !3, line: 169, column: 7)
!15179 = distinct !DILexicalBlock(scope: !15176, file: !3, line: 168, column: 47)
!15180 = !DILocation(line: 169, column: 7, scope: !15178)
!15181 = !DILocation(line: 169, column: 27, scope: !15178)
!15182 = !DILocation(line: 169, column: 44, scope: !15178)
!15183 = !DILocation(line: 169, column: 30, scope: !15178)
!15184 = !DILocation(line: 169, column: 7, scope: !15179)
!15185 = !DILocation(line: 170, column: 37, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 169, column: 50)
!15187 = !DILocation(line: 170, column: 45, scope: !15186)
!15188 = !DILocation(line: 171, column: 9, scope: !15186)
!15189 = !DILocation(line: 171, column: 17, scope: !15186)
!15190 = !DILocation(line: 172, column: 9, scope: !15186)
!15191 = !DILocation(line: 170, column: 10, scope: !15186)
!15192 = !DILocation(line: 170, column: 8, scope: !15186)
!15193 = !DILocation(line: 173, column: 8, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15186, file: !3, line: 173, column: 8)
!15195 = !DILocation(line: 173, column: 8, scope: !15186)
!15196 = !DILocation(line: 174, column: 16, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15194, file: !3, line: 173, column: 13)
!15198 = !DILocation(line: 174, column: 14, scope: !15197)
!15199 = !DILocation(line: 175, column: 5, scope: !15197)
!15200 = !DILocation(line: 177, column: 3, scope: !15186)
!15201 = !DILocation(line: 178, column: 2, scope: !15179)
!15202 = distinct !{!15202, !15173, !15203}
!15203 = !DILocation(line: 178, column: 2, scope: !15174)
!15204 = !DILocation(line: 180, column: 2, scope: !15156)
!15205 = !DILabel(scope: !15156, name: "err_vxlan_join", file: !3, line: 182)
!15206 = !DILocation(line: 182, column: 1, scope: !15156)
!15207 = !DILocation(line: 183, column: 2, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15156, file: !3, line: 183, column: 2)
!15209 = !DILocation(line: 183, column: 2, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15208, file: !3, line: 183, column: 2)
!15211 = !DILocation(line: 184, column: 22, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15213, file: !3, line: 184, column: 7)
!15213 = distinct !DILexicalBlock(scope: !15210, file: !3, line: 183, column: 47)
!15214 = !DILocation(line: 184, column: 7, scope: !15212)
!15215 = !DILocation(line: 184, column: 27, scope: !15212)
!15216 = !DILocation(line: 184, column: 44, scope: !15212)
!15217 = !DILocation(line: 184, column: 30, scope: !15212)
!15218 = !DILocation(line: 184, column: 7, scope: !15213)
!15219 = !DILocation(line: 185, column: 8, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15221, file: !3, line: 185, column: 8)
!15221 = distinct !DILexicalBlock(scope: !15212, file: !3, line: 184, column: 50)
!15222 = !DILocation(line: 185, column: 20, scope: !15220)
!15223 = !DILocation(line: 185, column: 17, scope: !15220)
!15224 = !DILocation(line: 185, column: 8, scope: !15221)
!15225 = !DILocation(line: 186, column: 5, scope: !15220)
!15226 = !DILocation(line: 187, column: 32, scope: !15221)
!15227 = !DILocation(line: 187, column: 40, scope: !15221)
!15228 = !DILocation(line: 187, column: 50, scope: !15221)
!15229 = !DILocation(line: 187, column: 4, scope: !15221)
!15230 = !DILocation(line: 188, column: 3, scope: !15221)
!15231 = !DILocation(line: 189, column: 2, scope: !15213)
!15232 = distinct !{!15232, !15207, !15233}
!15233 = !DILocation(line: 189, column: 2, scope: !15208)
!15234 = !DILocation(line: 190, column: 9, scope: !15156)
!15235 = !DILocation(line: 190, column: 2, scope: !15156)
!15236 = !DILocation(line: 191, column: 1, scope: !15156)
!15237 = distinct !DISubprogram(name: "__list_add", scope: !11724, file: !11724, line: 63, type: !15238, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15238 = !DISubroutineType(types: !15239)
!15239 = !{null, !448, !448, !448}
!15240 = !DILocalVariable(name: "new", arg: 1, scope: !15237, file: !11724, line: 63, type: !448)
!15241 = !DILocation(line: 63, column: 49, scope: !15237)
!15242 = !DILocalVariable(name: "prev", arg: 2, scope: !15237, file: !11724, line: 64, type: !448)
!15243 = !DILocation(line: 64, column: 28, scope: !15237)
!15244 = !DILocalVariable(name: "next", arg: 3, scope: !15237, file: !11724, line: 65, type: !448)
!15245 = !DILocation(line: 65, column: 28, scope: !15237)
!15246 = !DILocation(line: 67, column: 24, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15237, file: !11724, line: 67, column: 6)
!15248 = !DILocation(line: 67, column: 29, scope: !15247)
!15249 = !DILocation(line: 67, column: 35, scope: !15247)
!15250 = !DILocation(line: 67, column: 7, scope: !15247)
!15251 = !DILocation(line: 67, column: 6, scope: !15237)
!15252 = !DILocation(line: 68, column: 3, scope: !15247)
!15253 = !DILocation(line: 70, column: 15, scope: !15237)
!15254 = !DILocation(line: 70, column: 2, scope: !15237)
!15255 = !DILocation(line: 70, column: 8, scope: !15237)
!15256 = !DILocation(line: 70, column: 13, scope: !15237)
!15257 = !DILocation(line: 71, column: 14, scope: !15237)
!15258 = !DILocation(line: 71, column: 2, scope: !15237)
!15259 = !DILocation(line: 71, column: 7, scope: !15237)
!15260 = !DILocation(line: 71, column: 12, scope: !15237)
!15261 = !DILocation(line: 72, column: 14, scope: !15237)
!15262 = !DILocation(line: 72, column: 2, scope: !15237)
!15263 = !DILocation(line: 72, column: 7, scope: !15237)
!15264 = !DILocation(line: 72, column: 12, scope: !15237)
!15265 = !DILocation(line: 73, column: 2, scope: !15237)
!15266 = !DILocation(line: 73, column: 2, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15237, file: !11724, line: 73, column: 2)
!15268 = !DILocation(line: 73, column: 2, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15267, file: !11724, line: 73, column: 2)
!15270 = !DILocation(line: 73, column: 2, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15267, file: !11724, line: 73, column: 2)
!15272 = !DILocation(line: 74, column: 1, scope: !15237)
!15273 = distinct !DISubprogram(name: "__list_add_valid", scope: !11724, file: !11724, line: 45, type: !15274, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15274 = !DISubroutineType(types: !15275)
!15275 = !{!696, !448, !448, !448}
!15276 = !DILocalVariable(name: "new", arg: 1, scope: !15273, file: !11724, line: 45, type: !448)
!15277 = !DILocation(line: 45, column: 55, scope: !15273)
!15278 = !DILocalVariable(name: "prev", arg: 2, scope: !15273, file: !11724, line: 46, type: !448)
!15279 = !DILocation(line: 46, column: 23, scope: !15273)
!15280 = !DILocalVariable(name: "next", arg: 3, scope: !15273, file: !11724, line: 47, type: !448)
!15281 = !DILocation(line: 47, column: 23, scope: !15273)
!15282 = !DILocation(line: 49, column: 2, scope: !15273)
!15283 = distinct !DISubprogram(name: "switchdev_notifier_info_to_dev", scope: !10207, file: !10207, line: 247, type: !15284, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15284 = !DISubroutineType(types: !15285)
!15285 = !{!451, !15286}
!15286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15287, size: 64)
!15287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11231)
!15288 = !DILocalVariable(name: "info", arg: 1, scope: !15283, file: !10207, line: 247, type: !15286)
!15289 = !DILocation(line: 247, column: 70, scope: !15283)
!15290 = !DILocation(line: 249, column: 9, scope: !15283)
!15291 = !DILocation(line: 249, column: 15, scope: !15283)
!15292 = !DILocation(line: 249, column: 2, scope: !15283)
!15293 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_set", scope: !3, file: !3, line: 897, type: !15294, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15294 = !DISubroutineType(types: !15295)
!15295 = !{!7, !451, !15296, !15315}
!15296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15297, size: 64)
!15297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15298)
!15298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_attr", file: !10207, line: 49, size: 320, elements: !15299)
!15299 = !{!15300, !15301, !15302, !15303, !15304, !15305}
!15300 = !DIDerivedType(tag: DW_TAG_member, name: "orig_dev", scope: !15298, file: !10207, line: 50, baseType: !451, size: 64)
!15301 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !15298, file: !10207, line: 51, baseType: !10254, size: 32, offset: 64)
!15302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15298, file: !10207, line: 52, baseType: !862, size: 32, offset: 96)
!15303 = !DIDerivedType(tag: DW_TAG_member, name: "complete_priv", scope: !15298, file: !10207, line: 53, baseType: !726, size: 64, offset: 128)
!15304 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !15298, file: !10207, line: 54, baseType: !11300, size: 64, offset: 192)
!15305 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !15298, file: !10207, line: 66, baseType: !15306, size: 64, offset: 256)
!15306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15298, file: !10207, line: 55, size: 64, elements: !15307)
!15307 = !{!15308, !15309, !15310, !15311, !15313, !15314}
!15308 = !DIDerivedType(tag: DW_TAG_member, name: "stp_state", scope: !15306, file: !10207, line: 56, baseType: !1551, size: 8)
!15309 = !DIDerivedType(tag: DW_TAG_member, name: "brport_flags", scope: !15306, file: !10207, line: 57, baseType: !473, size: 64)
!15310 = !DIDerivedType(tag: DW_TAG_member, name: "mrouter", scope: !15306, file: !10207, line: 58, baseType: !696, size: 8)
!15311 = !DIDerivedType(tag: DW_TAG_member, name: "ageing_time", scope: !15306, file: !10207, line: 59, baseType: !15312, size: 64)
!15312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_t", file: !438, line: 70, baseType: !5976)
!15313 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_filtering", scope: !15306, file: !10207, line: 60, baseType: !696, size: 8)
!15314 = !DIDerivedType(tag: DW_TAG_member, name: "mc_disabled", scope: !15306, file: !10207, line: 61, baseType: !696, size: 8)
!15315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15316, size: 64)
!15316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_trans", file: !10207, line: 19, size: 8, elements: !15317)
!15317 = !{!15318}
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "ph_prepare", scope: !15316, file: !10207, line: 20, baseType: !696, size: 8)
!15319 = !DILocalVariable(name: "dev", arg: 1, scope: !15293, file: !3, line: 897, type: !451)
!15320 = !DILocation(line: 897, column: 54, scope: !15293)
!15321 = !DILocalVariable(name: "attr", arg: 2, scope: !15293, file: !3, line: 898, type: !15296)
!15322 = !DILocation(line: 898, column: 36, scope: !15293)
!15323 = !DILocalVariable(name: "trans", arg: 3, scope: !15293, file: !3, line: 899, type: !15315)
!15324 = !DILocation(line: 899, column: 31, scope: !15293)
!15325 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15293, file: !3, line: 901, type: !10406)
!15326 = !DILocation(line: 901, column: 24, scope: !15293)
!15327 = !DILocation(line: 901, column: 52, scope: !15293)
!15328 = !DILocation(line: 901, column: 40, scope: !15293)
!15329 = !DILocalVariable(name: "err", scope: !15293, file: !3, line: 902, type: !7)
!15330 = !DILocation(line: 902, column: 6, scope: !15293)
!15331 = !DILocation(line: 904, column: 10, scope: !15293)
!15332 = !DILocation(line: 904, column: 16, scope: !15293)
!15333 = !DILocation(line: 904, column: 2, scope: !15293)
!15334 = !DILocation(line: 906, column: 42, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15293, file: !3, line: 904, column: 20)
!15336 = !DILocation(line: 906, column: 57, scope: !15335)
!15337 = !DILocation(line: 907, column: 14, scope: !15335)
!15338 = !DILocation(line: 907, column: 20, scope: !15335)
!15339 = !DILocation(line: 908, column: 14, scope: !15335)
!15340 = !DILocation(line: 908, column: 20, scope: !15335)
!15341 = !DILocation(line: 908, column: 22, scope: !15335)
!15342 = !DILocation(line: 906, column: 9, scope: !15335)
!15343 = !DILocation(line: 906, column: 7, scope: !15335)
!15344 = !DILocation(line: 909, column: 3, scope: !15335)
!15345 = !DILocation(line: 911, column: 45, scope: !15335)
!15346 = !DILocation(line: 912, column: 10, scope: !15335)
!15347 = !DILocation(line: 913, column: 10, scope: !15335)
!15348 = !DILocation(line: 913, column: 16, scope: !15335)
!15349 = !DILocation(line: 913, column: 18, scope: !15335)
!15350 = !DILocation(line: 911, column: 9, scope: !15335)
!15351 = !DILocation(line: 911, column: 7, scope: !15335)
!15352 = !DILocation(line: 914, column: 3, scope: !15335)
!15353 = !DILocation(line: 916, column: 41, scope: !15335)
!15354 = !DILocation(line: 916, column: 56, scope: !15335)
!15355 = !DILocation(line: 917, column: 13, scope: !15335)
!15356 = !DILocation(line: 917, column: 19, scope: !15335)
!15357 = !DILocation(line: 918, column: 13, scope: !15335)
!15358 = !DILocation(line: 918, column: 19, scope: !15335)
!15359 = !DILocation(line: 918, column: 21, scope: !15335)
!15360 = !DILocation(line: 916, column: 9, scope: !15335)
!15361 = !DILocation(line: 916, column: 7, scope: !15335)
!15362 = !DILocation(line: 919, column: 3, scope: !15335)
!15363 = !DILocation(line: 921, column: 42, scope: !15335)
!15364 = !DILocation(line: 921, column: 57, scope: !15335)
!15365 = !DILocation(line: 922, column: 14, scope: !15335)
!15366 = !DILocation(line: 922, column: 20, scope: !15335)
!15367 = !DILocation(line: 922, column: 22, scope: !15335)
!15368 = !DILocation(line: 921, column: 9, scope: !15335)
!15369 = !DILocation(line: 921, column: 7, scope: !15335)
!15370 = !DILocation(line: 923, column: 3, scope: !15335)
!15371 = !DILocation(line: 925, column: 40, scope: !15335)
!15372 = !DILocation(line: 925, column: 55, scope: !15335)
!15373 = !DILocation(line: 926, column: 12, scope: !15335)
!15374 = !DILocation(line: 926, column: 18, scope: !15335)
!15375 = !DILocation(line: 927, column: 12, scope: !15335)
!15376 = !DILocation(line: 927, column: 18, scope: !15335)
!15377 = !DILocation(line: 927, column: 20, scope: !15335)
!15378 = !DILocation(line: 925, column: 9, scope: !15335)
!15379 = !DILocation(line: 925, column: 7, scope: !15335)
!15380 = !DILocation(line: 928, column: 3, scope: !15335)
!15381 = !DILocation(line: 930, column: 40, scope: !15335)
!15382 = !DILocation(line: 930, column: 55, scope: !15335)
!15383 = !DILocation(line: 931, column: 12, scope: !15335)
!15384 = !DILocation(line: 931, column: 18, scope: !15335)
!15385 = !DILocation(line: 932, column: 12, scope: !15335)
!15386 = !DILocation(line: 932, column: 18, scope: !15335)
!15387 = !DILocation(line: 932, column: 20, scope: !15335)
!15388 = !DILocation(line: 930, column: 9, scope: !15335)
!15389 = !DILocation(line: 930, column: 7, scope: !15335)
!15390 = !DILocation(line: 933, column: 3, scope: !15335)
!15391 = !DILocation(line: 935, column: 39, scope: !15335)
!15392 = !DILocation(line: 935, column: 54, scope: !15335)
!15393 = !DILocation(line: 936, column: 11, scope: !15335)
!15394 = !DILocation(line: 936, column: 17, scope: !15335)
!15395 = !DILocation(line: 937, column: 11, scope: !15335)
!15396 = !DILocation(line: 937, column: 17, scope: !15335)
!15397 = !DILocation(line: 937, column: 19, scope: !15335)
!15398 = !DILocation(line: 935, column: 9, scope: !15335)
!15399 = !DILocation(line: 935, column: 7, scope: !15335)
!15400 = !DILocation(line: 938, column: 3, scope: !15335)
!15401 = !DILocation(line: 940, column: 43, scope: !15335)
!15402 = !DILocation(line: 940, column: 58, scope: !15335)
!15403 = !DILocation(line: 941, column: 8, scope: !15335)
!15404 = !DILocation(line: 941, column: 14, scope: !15335)
!15405 = !DILocation(line: 942, column: 8, scope: !15335)
!15406 = !DILocation(line: 942, column: 14, scope: !15335)
!15407 = !DILocation(line: 942, column: 16, scope: !15335)
!15408 = !DILocation(line: 940, column: 9, scope: !15335)
!15409 = !DILocation(line: 940, column: 7, scope: !15335)
!15410 = !DILocation(line: 943, column: 3, scope: !15335)
!15411 = !DILocation(line: 945, column: 7, scope: !15335)
!15412 = !DILocation(line: 946, column: 3, scope: !15335)
!15413 = !DILocation(line: 949, column: 32, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15293, file: !3, line: 949, column: 6)
!15415 = !DILocation(line: 949, column: 6, scope: !15414)
!15416 = !DILocation(line: 949, column: 6, scope: !15293)
!15417 = !DILocation(line: 950, column: 24, scope: !15414)
!15418 = !DILocation(line: 950, column: 39, scope: !15414)
!15419 = !DILocation(line: 950, column: 3, scope: !15414)
!15420 = !DILocation(line: 952, column: 9, scope: !15293)
!15421 = !DILocation(line: 952, column: 2, scope: !15293)
!15422 = distinct !DISubprogram(name: "notifier_from_errno", scope: !2165, file: !2165, line: 189, type: !6477, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15423 = !DILocalVariable(name: "err", arg: 1, scope: !15422, file: !2165, line: 189, type: !7)
!15424 = !DILocation(line: 189, column: 43, scope: !15422)
!15425 = !DILocation(line: 191, column: 6, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15422, file: !2165, line: 191, column: 6)
!15427 = !DILocation(line: 191, column: 6, scope: !15422)
!15428 = !DILocation(line: 192, column: 42, scope: !15426)
!15429 = !DILocation(line: 192, column: 40, scope: !15426)
!15430 = !DILocation(line: 192, column: 27, scope: !15426)
!15431 = !DILocation(line: 192, column: 3, scope: !15426)
!15432 = !DILocation(line: 194, column: 2, scope: !15422)
!15433 = !DILocation(line: 195, column: 1, scope: !15422)
!15434 = distinct !DISubprogram(name: "netif_is_bridge_master", scope: !6, file: !6, line: 4916, type: !13398, scopeLine: 4917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15435 = !DILocalVariable(name: "dev", arg: 1, scope: !15434, file: !6, line: 4916, type: !3015)
!15436 = !DILocation(line: 4916, column: 68, scope: !15434)
!15437 = !DILocation(line: 4918, column: 9, scope: !15434)
!15438 = !DILocation(line: 4918, column: 14, scope: !15434)
!15439 = !DILocation(line: 4918, column: 25, scope: !15434)
!15440 = !DILocation(line: 4918, column: 2, scope: !15434)
!15441 = distinct !DISubprogram(name: "__init_work", scope: !1961, file: !1961, line: 215, type: !15442, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15442 = !DISubroutineType(types: !15443)
!15443 = !{null, !1970, !7}
!15444 = !DILocalVariable(name: "work", arg: 1, scope: !15441, file: !1961, line: 215, type: !1970)
!15445 = !DILocation(line: 215, column: 52, scope: !15441)
!15446 = !DILocalVariable(name: "onstack", arg: 2, scope: !15441, file: !1961, line: 215, type: !7)
!15447 = !DILocation(line: 215, column: 62, scope: !15441)
!15448 = !DILocation(line: 215, column: 73, scope: !15441)
!15449 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_bridge_fdb_event_work", scope: !3, file: !3, line: 2842, type: !1968, scopeLine: 2843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15450 = !DILocalVariable(name: "work", arg: 1, scope: !15449, file: !3, line: 2842, type: !1970)
!15451 = !DILocation(line: 2842, column: 74, scope: !15449)
!15452 = !DILocalVariable(name: "switchdev_work", scope: !15449, file: !3, line: 2844, type: !11239)
!15453 = !DILocation(line: 2844, column: 40, scope: !15449)
!15454 = !DILocalVariable(name: "__mptr", scope: !15455, file: !3, line: 2845, type: !726)
!15455 = distinct !DILexicalBlock(scope: !15449, file: !3, line: 2845, column: 3)
!15456 = !DILocation(line: 2845, column: 3, scope: !15455)
!15457 = !DILocation(line: 2845, column: 3, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15455, file: !3, line: 2845, column: 3)
!15459 = !DILocalVariable(name: "dev", scope: !15449, file: !3, line: 2846, type: !451)
!15460 = !DILocation(line: 2846, column: 21, scope: !15449)
!15461 = !DILocation(line: 2846, column: 27, scope: !15449)
!15462 = !DILocation(line: 2846, column: 43, scope: !15449)
!15463 = !DILocalVariable(name: "fdb_info", scope: !15449, file: !3, line: 2847, type: !11227)
!15464 = !DILocation(line: 2847, column: 38, scope: !15449)
!15465 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15449, file: !3, line: 2848, type: !10406)
!15466 = !DILocation(line: 2848, column: 24, scope: !15449)
!15467 = !DILocalVariable(name: "err", scope: !15449, file: !3, line: 2849, type: !7)
!15468 = !DILocation(line: 2849, column: 6, scope: !15449)
!15469 = !DILocation(line: 2851, column: 2, scope: !15449)
!15470 = !DILocation(line: 2852, column: 21, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15449, file: !3, line: 2852, column: 6)
!15472 = !DILocation(line: 2852, column: 6, scope: !15471)
!15473 = !DILocation(line: 2852, column: 6, scope: !15449)
!15474 = !DILocation(line: 2853, column: 43, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 2852, column: 27)
!15476 = !DILocation(line: 2853, column: 3, scope: !15475)
!15477 = !DILocation(line: 2854, column: 3, scope: !15475)
!15478 = !DILocation(line: 2857, column: 47, scope: !15449)
!15479 = !DILocation(line: 2857, column: 18, scope: !15449)
!15480 = !DILocation(line: 2857, column: 16, scope: !15449)
!15481 = !DILocation(line: 2858, column: 7, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15449, file: !3, line: 2858, column: 6)
!15483 = !DILocation(line: 2858, column: 6, scope: !15449)
!15484 = !DILocation(line: 2859, column: 3, scope: !15482)
!15485 = !DILocation(line: 2861, column: 10, scope: !15449)
!15486 = !DILocation(line: 2861, column: 26, scope: !15449)
!15487 = !DILocation(line: 2861, column: 2, scope: !15449)
!15488 = !DILocation(line: 2863, column: 15, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15449, file: !3, line: 2861, column: 33)
!15490 = !DILocation(line: 2863, column: 31, scope: !15489)
!15491 = !DILocation(line: 2863, column: 12, scope: !15489)
!15492 = !DILocation(line: 2864, column: 8, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 2864, column: 7)
!15494 = !DILocation(line: 2864, column: 18, scope: !15493)
!15495 = !DILocation(line: 2864, column: 7, scope: !15489)
!15496 = !DILocation(line: 2865, column: 4, scope: !15493)
!15497 = !DILocation(line: 2866, column: 31, scope: !15489)
!15498 = !DILocation(line: 2866, column: 46, scope: !15489)
!15499 = !DILocation(line: 2866, column: 9, scope: !15489)
!15500 = !DILocation(line: 2866, column: 7, scope: !15489)
!15501 = !DILocation(line: 2867, column: 7, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 2867, column: 7)
!15503 = !DILocation(line: 2867, column: 7, scope: !15489)
!15504 = !DILocation(line: 2868, column: 4, scope: !15502)
!15505 = !DILocation(line: 2870, column: 10, scope: !15489)
!15506 = !DILocation(line: 2870, column: 20, scope: !15489)
!15507 = !DILocation(line: 2871, column: 10, scope: !15489)
!15508 = !DILocation(line: 2871, column: 20, scope: !15489)
!15509 = !DILocation(line: 2871, column: 25, scope: !15489)
!15510 = !DILocation(line: 2869, column: 3, scope: !15489)
!15511 = !DILocation(line: 2872, column: 3, scope: !15489)
!15512 = !DILocation(line: 2874, column: 15, scope: !15489)
!15513 = !DILocation(line: 2874, column: 31, scope: !15489)
!15514 = !DILocation(line: 2874, column: 12, scope: !15489)
!15515 = !DILocation(line: 2875, column: 25, scope: !15489)
!15516 = !DILocation(line: 2875, column: 40, scope: !15489)
!15517 = !DILocation(line: 2875, column: 3, scope: !15489)
!15518 = !DILocation(line: 2876, column: 3, scope: !15489)
!15519 = !DILocation(line: 2882, column: 3, scope: !15489)
!15520 = !DILocation(line: 2885, column: 23, scope: !15449)
!15521 = !DILocation(line: 2885, column: 38, scope: !15449)
!15522 = !DILocation(line: 2885, column: 2, scope: !15449)
!15523 = !DILabel(scope: !15449, name: "out", file: !3, line: 2887)
!15524 = !DILocation(line: 2887, column: 1, scope: !15449)
!15525 = !DILocation(line: 2888, column: 2, scope: !15449)
!15526 = !DILocation(line: 2889, column: 8, scope: !15449)
!15527 = !DILocation(line: 2889, column: 24, scope: !15449)
!15528 = !DILocation(line: 2889, column: 33, scope: !15449)
!15529 = !DILocation(line: 2889, column: 2, scope: !15449)
!15530 = !DILocation(line: 2890, column: 8, scope: !15449)
!15531 = !DILocation(line: 2890, column: 2, scope: !15449)
!15532 = !DILocation(line: 2891, column: 10, scope: !15449)
!15533 = !DILocation(line: 2891, column: 2, scope: !15449)
!15534 = !DILocation(line: 2892, column: 1, scope: !15449)
!15535 = distinct !DISubprogram(name: "ether_addr_copy", scope: !15536, file: !15536, line: 287, type: !15537, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15536 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!15537 = !DISubroutineType(types: !15538)
!15538 = !{null, !8081, !8639}
!15539 = !DILocalVariable(name: "dst", arg: 1, scope: !15535, file: !15536, line: 287, type: !8081)
!15540 = !DILocation(line: 287, column: 40, scope: !15535)
!15541 = !DILocalVariable(name: "src", arg: 2, scope: !15535, file: !15536, line: 287, type: !8639)
!15542 = !DILocation(line: 287, column: 55, scope: !15535)
!15543 = !DILocation(line: 290, column: 30, scope: !15535)
!15544 = !DILocation(line: 290, column: 16, scope: !15535)
!15545 = !DILocation(line: 290, column: 10, scope: !15535)
!15546 = !DILocation(line: 290, column: 2, scope: !15535)
!15547 = !DILocation(line: 290, column: 14, scope: !15535)
!15548 = !DILocation(line: 291, column: 37, scope: !15535)
!15549 = !DILocation(line: 291, column: 41, scope: !15535)
!15550 = !DILocation(line: 291, column: 22, scope: !15535)
!15551 = !DILocation(line: 291, column: 11, scope: !15535)
!15552 = !DILocation(line: 291, column: 15, scope: !15535)
!15553 = !DILocation(line: 291, column: 2, scope: !15535)
!15554 = !DILocation(line: 291, column: 20, scope: !15535)
!15555 = !DILocation(line: 300, column: 1, scope: !15535)
!15556 = distinct !DISubprogram(name: "dev_hold", scope: !6, file: !6, line: 3952, type: !567, scopeLine: 3953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15557 = !DILocalVariable(name: "dev", arg: 1, scope: !15556, file: !6, line: 3952, type: !451)
!15558 = !DILocation(line: 3952, column: 48, scope: !15556)
!15559 = !DILocation(line: 3954, column: 2, scope: !15556)
!15560 = !DILocation(line: 3954, column: 2, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15556, file: !6, line: 3954, column: 2)
!15562 = !DILocalVariable(name: "__vpp_verify", scope: !15563, file: !6, line: 3954, type: !2416)
!15563 = distinct !DILexicalBlock(scope: !15561, file: !6, line: 3954, column: 2)
!15564 = !DILocation(line: 3954, column: 2, scope: !15563)
!15565 = !DILocalVariable(name: "pao_ID__", scope: !15566, file: !6, line: 3954, type: !15567)
!15566 = distinct !DILexicalBlock(scope: !15561, file: !6, line: 3954, column: 2)
!15567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!15568 = !DILocation(line: 3954, column: 2, scope: !15566)
!15569 = !DILocation(line: 3954, column: 2, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15571, file: !6, line: 3954, column: 2)
!15571 = distinct !DILexicalBlock(scope: !15566, file: !6, line: 3954, column: 2)
!15572 = !{i32 -2140190803}
!15573 = !DILocation(line: 3955, column: 1, scope: !15556)
!15574 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_fdb_event_work", scope: !3, file: !3, line: 3010, type: !1968, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15575 = !DILocalVariable(name: "work", arg: 1, scope: !15574, file: !3, line: 3010, type: !1970)
!15576 = !DILocation(line: 3010, column: 73, scope: !15574)
!15577 = !DILocalVariable(name: "switchdev_work", scope: !15574, file: !3, line: 3012, type: !11239)
!15578 = !DILocation(line: 3012, column: 40, scope: !15574)
!15579 = !DILocalVariable(name: "__mptr", scope: !15580, file: !3, line: 3013, type: !726)
!15580 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 3013, column: 3)
!15581 = !DILocation(line: 3013, column: 3, scope: !15580)
!15582 = !DILocation(line: 3013, column: 3, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15580, file: !3, line: 3013, column: 3)
!15584 = !DILocalVariable(name: "dev", scope: !15574, file: !3, line: 3014, type: !451)
!15585 = !DILocation(line: 3014, column: 21, scope: !15574)
!15586 = !DILocation(line: 3014, column: 27, scope: !15574)
!15587 = !DILocation(line: 3014, column: 43, scope: !15574)
!15588 = !DILocalVariable(name: "mlxsw_sp", scope: !15574, file: !3, line: 3015, type: !10421)
!15589 = !DILocation(line: 3015, column: 19, scope: !15574)
!15590 = !DILocalVariable(name: "br_dev", scope: !15574, file: !3, line: 3016, type: !451)
!15591 = !DILocation(line: 3016, column: 21, scope: !15574)
!15592 = !DILocation(line: 3018, column: 2, scope: !15574)
!15593 = !DILocation(line: 3020, column: 21, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 3020, column: 6)
!15595 = !DILocation(line: 3020, column: 7, scope: !15594)
!15596 = !DILocation(line: 3020, column: 6, scope: !15574)
!15597 = !DILocation(line: 3021, column: 3, scope: !15594)
!15598 = !DILocation(line: 3022, column: 39, scope: !15574)
!15599 = !DILocation(line: 3022, column: 11, scope: !15574)
!15600 = !DILocation(line: 3022, column: 9, scope: !15574)
!15601 = !DILocation(line: 3023, column: 7, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 3023, column: 6)
!15603 = !DILocation(line: 3023, column: 6, scope: !15574)
!15604 = !DILocation(line: 3024, column: 3, scope: !15602)
!15605 = !DILocation(line: 3025, column: 30, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 3025, column: 6)
!15607 = !DILocation(line: 3025, column: 7, scope: !15606)
!15608 = !DILocation(line: 3025, column: 6, scope: !15574)
!15609 = !DILocation(line: 3026, column: 3, scope: !15606)
!15610 = !DILocation(line: 3027, column: 32, scope: !15574)
!15611 = !DILocation(line: 3027, column: 13, scope: !15574)
!15612 = !DILocation(line: 3027, column: 11, scope: !15574)
!15613 = !DILocation(line: 3028, column: 7, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 3028, column: 6)
!15615 = !DILocation(line: 3028, column: 6, scope: !15574)
!15616 = !DILocation(line: 3029, column: 3, scope: !15614)
!15617 = !DILocation(line: 3031, column: 10, scope: !15574)
!15618 = !DILocation(line: 3031, column: 26, scope: !15574)
!15619 = !DILocation(line: 3031, column: 2, scope: !15574)
!15620 = !DILocation(line: 3033, column: 36, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 3031, column: 33)
!15622 = !DILocation(line: 3033, column: 46, scope: !15621)
!15623 = !DILocation(line: 3033, column: 3, scope: !15621)
!15624 = !DILocation(line: 3034, column: 3, scope: !15621)
!15625 = !DILocation(line: 3036, column: 36, scope: !15621)
!15626 = !DILocation(line: 3036, column: 46, scope: !15621)
!15627 = !DILocation(line: 3036, column: 3, scope: !15621)
!15628 = !DILocation(line: 3037, column: 3, scope: !15621)
!15629 = !DILocation(line: 3038, column: 2, scope: !15621)
!15630 = !DILabel(scope: !15574, name: "out", file: !3, line: 3040)
!15631 = !DILocation(line: 3040, column: 1, scope: !15574)
!15632 = !DILocation(line: 3041, column: 2, scope: !15574)
!15633 = !DILocation(line: 3042, column: 8, scope: !15574)
!15634 = !DILocation(line: 3042, column: 2, scope: !15574)
!15635 = !DILocation(line: 3043, column: 10, scope: !15574)
!15636 = !DILocation(line: 3043, column: 2, scope: !15574)
!15637 = !DILocation(line: 3044, column: 1, scope: !15574)
!15638 = !DILocalVariable(name: "switchdev_work", arg: 1, scope: !11397, file: !3, line: 3048, type: !11239)
!15639 = !DILocation(line: 3048, column: 11, scope: !11397)
!15640 = !DILocalVariable(name: "info", arg: 2, scope: !11397, file: !3, line: 3049, type: !11400)
!15641 = !DILocation(line: 3049, column: 43, scope: !11397)
!15642 = !DILocalVariable(name: "vxlan", scope: !11397, file: !3, line: 3051, type: !12565)
!15643 = !DILocation(line: 3051, column: 20, scope: !11397)
!15644 = !DILocation(line: 3051, column: 40, scope: !11397)
!15645 = !DILocation(line: 3051, column: 56, scope: !11397)
!15646 = !DILocation(line: 3051, column: 28, scope: !11397)
!15647 = !DILocalVariable(name: "vxlan_fdb_info", scope: !11397, file: !3, line: 3052, type: !11288)
!15648 = !DILocation(line: 3052, column: 44, scope: !11397)
!15649 = !DILocalVariable(name: "cfg", scope: !11397, file: !3, line: 3053, type: !15650)
!15650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12623, size: 64)
!15651 = !DILocation(line: 3053, column: 23, scope: !11397)
!15652 = !DILocation(line: 3053, column: 30, scope: !11397)
!15653 = !DILocation(line: 3053, column: 37, scope: !11397)
!15654 = !DILocalVariable(name: "extack", scope: !11397, file: !3, line: 3054, type: !2625)
!15655 = !DILocation(line: 3054, column: 26, scope: !11397)
!15656 = !DILocation(line: 3056, column: 45, scope: !11397)
!15657 = !DILocation(line: 3056, column: 11, scope: !11397)
!15658 = !DILocation(line: 3056, column: 9, scope: !11397)
!15659 = !DILocalVariable(name: "__mptr", scope: !15660, file: !3, line: 3057, type: !726)
!15660 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3057, column: 19)
!15661 = !DILocation(line: 3057, column: 19, scope: !15660)
!15662 = !DILocation(line: 3057, column: 19, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15660, file: !3, line: 3057, column: 19)
!15664 = !DILocation(line: 3057, column: 17, scope: !11397)
!15665 = !DILocation(line: 3061, column: 6, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3061, column: 6)
!15667 = !DILocation(line: 3061, column: 22, scope: !15666)
!15668 = !DILocation(line: 3061, column: 37, scope: !15666)
!15669 = !DILocation(line: 3061, column: 42, scope: !15666)
!15670 = !DILocation(line: 3061, column: 34, scope: !15666)
!15671 = !DILocation(line: 3061, column: 6, scope: !11397)
!15672 = !DILocation(line: 3062, column: 3, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 3061, column: 52)
!15674 = !DILocalVariable(name: "__extack", scope: !15675, file: !3, line: 3062, type: !2625)
!15675 = distinct !DILexicalBlock(scope: !15673, file: !3, line: 3062, column: 3)
!15676 = !DILocation(line: 3062, column: 3, scope: !15675)
!15677 = !DILocation(line: 3062, column: 3, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 3062, column: 3)
!15679 = !DILocation(line: 3063, column: 3, scope: !15673)
!15680 = !DILocation(line: 3065, column: 6, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3065, column: 6)
!15682 = !DILocation(line: 3065, column: 22, scope: !15681)
!15683 = !DILocation(line: 3065, column: 36, scope: !15681)
!15684 = !DILocation(line: 3065, column: 41, scope: !15681)
!15685 = !DILocation(line: 3065, column: 33, scope: !15681)
!15686 = !DILocation(line: 3065, column: 45, scope: !15681)
!15687 = !DILocation(line: 3066, column: 6, scope: !15681)
!15688 = !DILocation(line: 3066, column: 22, scope: !15681)
!15689 = !DILocation(line: 3066, column: 29, scope: !15681)
!15690 = !DILocation(line: 3066, column: 34, scope: !15681)
!15691 = !DILocation(line: 3066, column: 26, scope: !15681)
!15692 = !DILocation(line: 3065, column: 6, scope: !11397)
!15693 = !DILocation(line: 3067, column: 3, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15681, file: !3, line: 3066, column: 39)
!15695 = !DILocalVariable(name: "__extack", scope: !15696, file: !3, line: 3067, type: !2625)
!15696 = distinct !DILexicalBlock(scope: !15694, file: !3, line: 3067, column: 3)
!15697 = !DILocation(line: 3067, column: 3, scope: !15696)
!15698 = !DILocation(line: 3067, column: 3, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15696, file: !3, line: 3067, column: 3)
!15700 = !DILocation(line: 3068, column: 3, scope: !15694)
!15701 = !DILocation(line: 3070, column: 6, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3070, column: 6)
!15703 = !DILocation(line: 3070, column: 22, scope: !15702)
!15704 = !DILocation(line: 3070, column: 6, scope: !11397)
!15705 = !DILocation(line: 3071, column: 3, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15702, file: !3, line: 3070, column: 38)
!15707 = !DILocalVariable(name: "__extack", scope: !15708, file: !3, line: 3071, type: !2625)
!15708 = distinct !DILexicalBlock(scope: !15706, file: !3, line: 3071, column: 3)
!15709 = !DILocation(line: 3071, column: 3, scope: !15708)
!15710 = !DILocation(line: 3071, column: 3, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15708, file: !3, line: 3071, column: 3)
!15712 = !DILocation(line: 3072, column: 3, scope: !15706)
!15713 = !DILocation(line: 3074, column: 30, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3074, column: 6)
!15715 = !DILocation(line: 3074, column: 46, scope: !15714)
!15716 = !DILocation(line: 3074, column: 6, scope: !15714)
!15717 = !DILocation(line: 3074, column: 6, scope: !11397)
!15718 = !DILocation(line: 3075, column: 3, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15714, file: !3, line: 3074, column: 57)
!15720 = !DILocalVariable(name: "__extack", scope: !15721, file: !3, line: 3075, type: !2625)
!15721 = distinct !DILexicalBlock(scope: !15719, file: !3, line: 3075, column: 3)
!15722 = !DILocation(line: 3075, column: 3, scope: !15721)
!15723 = !DILocation(line: 3075, column: 3, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15721, file: !3, line: 3075, column: 3)
!15725 = !DILocation(line: 3076, column: 3, scope: !15719)
!15726 = !DILocation(line: 3078, column: 28, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3078, column: 6)
!15728 = !DILocation(line: 3078, column: 44, scope: !15727)
!15729 = !DILocation(line: 3078, column: 6, scope: !15727)
!15730 = !DILocation(line: 3078, column: 6, scope: !11397)
!15731 = !DILocation(line: 3079, column: 3, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15727, file: !3, line: 3078, column: 56)
!15733 = !DILocalVariable(name: "__extack", scope: !15734, file: !3, line: 3079, type: !2625)
!15734 = distinct !DILexicalBlock(scope: !15732, file: !3, line: 3079, column: 3)
!15735 = !DILocation(line: 3079, column: 3, scope: !15734)
!15736 = !DILocation(line: 3079, column: 3, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15734, file: !3, line: 3079, column: 3)
!15738 = !DILocation(line: 3080, column: 3, scope: !15732)
!15739 = !DILocation(line: 3083, column: 2, scope: !11397)
!15740 = !DILocation(line: 3083, column: 18, scope: !11397)
!15741 = !DILocation(line: 3083, column: 36, scope: !11397)
!15742 = !DILocation(line: 3083, column: 35, scope: !11397)
!15743 = !DILocation(line: 3085, column: 2, scope: !11397)
!15744 = !DILocation(line: 3086, column: 1, scope: !11397)
!15745 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_stp_state_set", scope: !3, file: !3, line: 522, type: !15746, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15746 = !DISubroutineType(types: !15747)
!15747 = !{!7, !10406, !15315, !451, !1551}
!15748 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !15745, file: !3, line: 522, type: !10406)
!15749 = !DILocation(line: 522, column: 67, scope: !15745)
!15750 = !DILocalVariable(name: "trans", arg: 2, scope: !15745, file: !3, line: 523, type: !15315)
!15751 = !DILocation(line: 523, column: 34, scope: !15745)
!15752 = !DILocalVariable(name: "orig_dev", arg: 3, scope: !15745, file: !3, line: 524, type: !451)
!15753 = !DILocation(line: 524, column: 29, scope: !15745)
!15754 = !DILocalVariable(name: "state", arg: 4, scope: !15745, file: !3, line: 525, type: !1551)
!15755 = !DILocation(line: 525, column: 13, scope: !15745)
!15756 = !DILocalVariable(name: "bridge_port", scope: !15745, file: !3, line: 527, type: !10389)
!15757 = !DILocation(line: 527, column: 31, scope: !15745)
!15758 = !DILocalVariable(name: "bridge_vlan", scope: !15745, file: !3, line: 528, type: !11206)
!15759 = !DILocation(line: 528, column: 31, scope: !15745)
!15760 = !DILocalVariable(name: "err", scope: !15745, file: !3, line: 529, type: !7)
!15761 = !DILocation(line: 529, column: 6, scope: !15745)
!15762 = !DILocation(line: 531, column: 33, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 531, column: 6)
!15764 = !DILocation(line: 531, column: 6, scope: !15763)
!15765 = !DILocation(line: 531, column: 6, scope: !15745)
!15766 = !DILocation(line: 532, column: 3, scope: !15763)
!15767 = !DILocation(line: 537, column: 42, scope: !15745)
!15768 = !DILocation(line: 537, column: 57, scope: !15745)
!15769 = !DILocation(line: 537, column: 67, scope: !15745)
!15770 = !DILocation(line: 538, column: 7, scope: !15745)
!15771 = !DILocation(line: 537, column: 16, scope: !15745)
!15772 = !DILocation(line: 537, column: 14, scope: !15745)
!15773 = !DILocation(line: 539, column: 7, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 539, column: 6)
!15775 = !DILocation(line: 539, column: 6, scope: !15745)
!15776 = !DILocation(line: 540, column: 3, scope: !15774)
!15777 = !DILocalVariable(name: "__mptr", scope: !15778, file: !3, line: 542, type: !726)
!15778 = distinct !DILexicalBlock(scope: !15779, file: !3, line: 542, column: 2)
!15779 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 542, column: 2)
!15780 = !DILocation(line: 542, column: 2, scope: !15778)
!15781 = !DILocation(line: 542, column: 2, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 542, column: 2)
!15783 = !DILocation(line: 542, column: 2, scope: !15779)
!15784 = !DILocation(line: 542, column: 2, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15779, file: !3, line: 542, column: 2)
!15786 = !DILocation(line: 543, column: 43, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15785, file: !3, line: 542, column: 67)
!15788 = !DILocation(line: 544, column: 8, scope: !15787)
!15789 = !DILocation(line: 544, column: 21, scope: !15787)
!15790 = !DILocation(line: 543, column: 9, scope: !15787)
!15791 = !DILocation(line: 543, column: 7, scope: !15787)
!15792 = !DILocation(line: 545, column: 7, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15787, file: !3, line: 545, column: 7)
!15794 = !DILocation(line: 545, column: 7, scope: !15787)
!15795 = !DILocation(line: 546, column: 4, scope: !15793)
!15796 = !DILocation(line: 547, column: 2, scope: !15787)
!15797 = !DILocalVariable(name: "__mptr", scope: !15798, file: !3, line: 542, type: !726)
!15798 = distinct !DILexicalBlock(scope: !15785, file: !3, line: 542, column: 2)
!15799 = !DILocation(line: 542, column: 2, scope: !15798)
!15800 = !DILocation(line: 542, column: 2, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15798, file: !3, line: 542, column: 2)
!15802 = distinct !{!15802, !15783, !15803}
!15803 = !DILocation(line: 547, column: 2, scope: !15779)
!15804 = !DILocation(line: 549, column: 27, scope: !15745)
!15805 = !DILocation(line: 549, column: 2, scope: !15745)
!15806 = !DILocation(line: 549, column: 15, scope: !15745)
!15807 = !DILocation(line: 549, column: 25, scope: !15745)
!15808 = !DILocation(line: 551, column: 2, scope: !15745)
!15809 = !DILabel(scope: !15745, name: "err_port_bridge_vlan_stp_set", file: !3, line: 553)
!15810 = !DILocation(line: 553, column: 1, scope: !15745)
!15811 = !DILocalVariable(name: "__mptr", scope: !15812, file: !3, line: 554, type: !726)
!15812 = distinct !DILexicalBlock(scope: !15813, file: !3, line: 554, column: 2)
!15813 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 554, column: 2)
!15814 = !DILocation(line: 554, column: 2, scope: !15812)
!15815 = !DILocation(line: 554, column: 2, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15812, file: !3, line: 554, column: 2)
!15817 = !DILocation(line: 554, column: 2, scope: !15813)
!15818 = !DILocation(line: 554, column: 2, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15813, file: !3, line: 554, column: 2)
!15820 = !DILocation(line: 556, column: 37, scope: !15819)
!15821 = !DILocation(line: 556, column: 52, scope: !15819)
!15822 = !DILocation(line: 557, column: 9, scope: !15819)
!15823 = !DILocation(line: 557, column: 22, scope: !15819)
!15824 = !DILocation(line: 556, column: 3, scope: !15819)
!15825 = !DILocalVariable(name: "__mptr", scope: !15826, file: !3, line: 554, type: !726)
!15826 = distinct !DILexicalBlock(scope: !15819, file: !3, line: 554, column: 2)
!15827 = !DILocation(line: 554, column: 2, scope: !15826)
!15828 = !DILocation(line: 554, column: 2, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15826, file: !3, line: 554, column: 2)
!15830 = distinct !{!15830, !15817, !15831}
!15831 = !DILocation(line: 557, column: 31, scope: !15813)
!15832 = !DILocation(line: 558, column: 9, scope: !15745)
!15833 = !DILocation(line: 558, column: 2, scope: !15745)
!15834 = !DILocation(line: 559, column: 1, scope: !15745)
!15835 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_br_pre_flags_set", scope: !3, file: !3, line: 653, type: !15836, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15836 = !DISubroutineType(types: !15837)
!15837 = !{!7, !10406, !15315, !473}
!15838 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !15835, file: !3, line: 654, type: !10406)
!15839 = !DILocation(line: 654, column: 14, scope: !15835)
!15840 = !DILocalVariable(name: "trans", arg: 2, scope: !15835, file: !3, line: 655, type: !15315)
!15841 = !DILocation(line: 655, column: 37, scope: !15835)
!15842 = !DILocalVariable(name: "brport_flags", arg: 3, scope: !15835, file: !3, line: 656, type: !473)
!15843 = !DILocation(line: 656, column: 27, scope: !15835)
!15844 = !DILocation(line: 658, column: 6, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15835, file: !3, line: 658, column: 6)
!15846 = !DILocation(line: 658, column: 19, scope: !15845)
!15847 = !DILocation(line: 658, column: 6, scope: !15835)
!15848 = !DILocation(line: 659, column: 3, scope: !15845)
!15849 = !DILocation(line: 661, column: 2, scope: !15835)
!15850 = !DILocation(line: 662, column: 1, scope: !15835)
!15851 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_br_flags_set", scope: !3, file: !3, line: 664, type: !15852, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15852 = !DISubroutineType(types: !15853)
!15853 = !{!7, !10406, !15315, !451, !473}
!15854 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !15851, file: !3, line: 664, type: !10406)
!15855 = !DILocation(line: 664, column: 66, scope: !15851)
!15856 = !DILocalVariable(name: "trans", arg: 2, scope: !15851, file: !3, line: 665, type: !15315)
!15857 = !DILocation(line: 665, column: 33, scope: !15851)
!15858 = !DILocalVariable(name: "orig_dev", arg: 3, scope: !15851, file: !3, line: 666, type: !451)
!15859 = !DILocation(line: 666, column: 28, scope: !15851)
!15860 = !DILocalVariable(name: "brport_flags", arg: 4, scope: !15851, file: !3, line: 667, type: !473)
!15861 = !DILocation(line: 667, column: 23, scope: !15851)
!15862 = !DILocalVariable(name: "bridge_port", scope: !15851, file: !3, line: 669, type: !10389)
!15863 = !DILocation(line: 669, column: 31, scope: !15851)
!15864 = !DILocalVariable(name: "err", scope: !15851, file: !3, line: 670, type: !7)
!15865 = !DILocation(line: 670, column: 6, scope: !15851)
!15866 = !DILocation(line: 672, column: 33, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 672, column: 6)
!15868 = !DILocation(line: 672, column: 6, scope: !15867)
!15869 = !DILocation(line: 672, column: 6, scope: !15851)
!15870 = !DILocation(line: 673, column: 3, scope: !15867)
!15871 = !DILocation(line: 675, column: 42, scope: !15851)
!15872 = !DILocation(line: 675, column: 57, scope: !15851)
!15873 = !DILocation(line: 675, column: 67, scope: !15851)
!15874 = !DILocation(line: 676, column: 7, scope: !15851)
!15875 = !DILocation(line: 675, column: 16, scope: !15851)
!15876 = !DILocation(line: 675, column: 14, scope: !15851)
!15877 = !DILocation(line: 677, column: 7, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 677, column: 6)
!15879 = !DILocation(line: 677, column: 6, scope: !15851)
!15880 = !DILocation(line: 678, column: 3, scope: !15878)
!15881 = !DILocation(line: 680, column: 45, scope: !15851)
!15882 = !DILocation(line: 680, column: 60, scope: !15851)
!15883 = !DILocation(line: 682, column: 10, scope: !15851)
!15884 = !DILocation(line: 682, column: 23, scope: !15851)
!15885 = !DILocation(line: 680, column: 8, scope: !15851)
!15886 = !DILocation(line: 680, column: 6, scope: !15851)
!15887 = !DILocation(line: 683, column: 6, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 683, column: 6)
!15889 = !DILocation(line: 683, column: 6, scope: !15851)
!15890 = !DILocation(line: 684, column: 10, scope: !15888)
!15891 = !DILocation(line: 684, column: 3, scope: !15888)
!15892 = !DILocation(line: 686, column: 42, scope: !15851)
!15893 = !DILocation(line: 686, column: 57, scope: !15851)
!15894 = !DILocation(line: 687, column: 7, scope: !15851)
!15895 = !DILocation(line: 687, column: 20, scope: !15851)
!15896 = !DILocation(line: 686, column: 8, scope: !15851)
!15897 = !DILocation(line: 686, column: 6, scope: !15851)
!15898 = !DILocation(line: 688, column: 6, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 688, column: 6)
!15900 = !DILocation(line: 688, column: 6, scope: !15851)
!15901 = !DILocation(line: 689, column: 10, scope: !15899)
!15902 = !DILocation(line: 689, column: 3, scope: !15899)
!15903 = !DILocation(line: 691, column: 6, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 691, column: 6)
!15905 = !DILocation(line: 691, column: 19, scope: !15904)
!15906 = !DILocation(line: 691, column: 34, scope: !15904)
!15907 = !DILocation(line: 691, column: 6, scope: !15851)
!15908 = !DILocation(line: 692, column: 3, scope: !15904)
!15909 = !DILocation(line: 694, column: 45, scope: !15851)
!15910 = !DILocation(line: 694, column: 60, scope: !15851)
!15911 = !DILocation(line: 696, column: 10, scope: !15851)
!15912 = !DILocation(line: 696, column: 23, scope: !15851)
!15913 = !DILocation(line: 694, column: 8, scope: !15851)
!15914 = !DILocation(line: 694, column: 6, scope: !15851)
!15915 = !DILocation(line: 698, column: 6, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 698, column: 6)
!15917 = !DILocation(line: 698, column: 6, scope: !15851)
!15918 = !DILocation(line: 699, column: 10, scope: !15916)
!15919 = !DILocation(line: 699, column: 3, scope: !15916)
!15920 = !DILabel(scope: !15851, name: "out", file: !3, line: 701)
!15921 = !DILocation(line: 701, column: 1, scope: !15851)
!15922 = !DILocation(line: 702, column: 10, scope: !15851)
!15923 = !DILocation(line: 702, column: 23, scope: !15851)
!15924 = !DILocation(line: 702, column: 2, scope: !15851)
!15925 = !DILocation(line: 703, column: 2, scope: !15851)
!15926 = !DILocation(line: 704, column: 1, scope: !15851)
!15927 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_br_ageing_set", scope: !3, file: !3, line: 719, type: !15836, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15928 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !15927, file: !3, line: 719, type: !10406)
!15929 = !DILocation(line: 719, column: 67, scope: !15927)
!15930 = !DILocalVariable(name: "trans", arg: 2, scope: !15927, file: !3, line: 720, type: !15315)
!15931 = !DILocation(line: 720, column: 34, scope: !15927)
!15932 = !DILocalVariable(name: "ageing_clock_t", arg: 3, scope: !15927, file: !3, line: 721, type: !473)
!15933 = !DILocation(line: 721, column: 24, scope: !15927)
!15934 = !DILocalVariable(name: "mlxsw_sp", scope: !15927, file: !3, line: 723, type: !10421)
!15935 = !DILocation(line: 723, column: 19, scope: !15927)
!15936 = !DILocation(line: 723, column: 30, scope: !15927)
!15937 = !DILocation(line: 723, column: 45, scope: !15927)
!15938 = !DILocalVariable(name: "ageing_jiffies", scope: !15927, file: !3, line: 724, type: !473)
!15939 = !DILocation(line: 724, column: 16, scope: !15927)
!15940 = !DILocation(line: 724, column: 52, scope: !15927)
!15941 = !DILocation(line: 724, column: 33, scope: !15927)
!15942 = !DILocalVariable(name: "ageing_time", scope: !15927, file: !3, line: 725, type: !862)
!15943 = !DILocation(line: 725, column: 6, scope: !15927)
!15944 = !DILocation(line: 725, column: 37, scope: !15927)
!15945 = !DILocation(line: 725, column: 20, scope: !15927)
!15946 = !DILocation(line: 725, column: 53, scope: !15927)
!15947 = !DILocation(line: 727, column: 33, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15927, file: !3, line: 727, column: 6)
!15949 = !DILocation(line: 727, column: 6, scope: !15948)
!15950 = !DILocation(line: 727, column: 6, scope: !15927)
!15951 = !DILocation(line: 728, column: 7, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15953, file: !3, line: 728, column: 7)
!15953 = distinct !DILexicalBlock(scope: !15948, file: !3, line: 727, column: 41)
!15954 = !DILocation(line: 728, column: 19, scope: !15952)
!15955 = !DILocation(line: 728, column: 46, scope: !15952)
!15956 = !DILocation(line: 729, column: 7, scope: !15952)
!15957 = !DILocation(line: 729, column: 19, scope: !15952)
!15958 = !DILocation(line: 728, column: 7, scope: !15953)
!15959 = !DILocation(line: 730, column: 4, scope: !15952)
!15960 = !DILocation(line: 732, column: 4, scope: !15952)
!15961 = !DILocation(line: 735, column: 29, scope: !15927)
!15962 = !DILocation(line: 735, column: 39, scope: !15927)
!15963 = !DILocation(line: 735, column: 9, scope: !15927)
!15964 = !DILocation(line: 735, column: 2, scope: !15927)
!15965 = !DILocation(line: 736, column: 1, scope: !15927)
!15966 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_br_vlan_set", scope: !3, file: !3, line: 738, type: !15967, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15967 = !DISubroutineType(types: !15968)
!15968 = !{!7, !10406, !15315, !451, !696}
!15969 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !15966, file: !3, line: 738, type: !10406)
!15970 = !DILocation(line: 738, column: 65, scope: !15966)
!15971 = !DILocalVariable(name: "trans", arg: 2, scope: !15966, file: !3, line: 739, type: !15315)
!15972 = !DILocation(line: 739, column: 32, scope: !15966)
!15973 = !DILocalVariable(name: "orig_dev", arg: 3, scope: !15966, file: !3, line: 740, type: !451)
!15974 = !DILocation(line: 740, column: 27, scope: !15966)
!15975 = !DILocalVariable(name: "vlan_enabled", arg: 4, scope: !15966, file: !3, line: 741, type: !696)
!15976 = !DILocation(line: 741, column: 13, scope: !15966)
!15977 = !DILocalVariable(name: "mlxsw_sp", scope: !15966, file: !3, line: 743, type: !10421)
!15978 = !DILocation(line: 743, column: 19, scope: !15966)
!15979 = !DILocation(line: 743, column: 30, scope: !15966)
!15980 = !DILocation(line: 743, column: 45, scope: !15966)
!15981 = !DILocalVariable(name: "bridge_device", scope: !15966, file: !3, line: 744, type: !10370)
!15982 = !DILocation(line: 744, column: 33, scope: !15966)
!15983 = !DILocation(line: 746, column: 34, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15966, file: !3, line: 746, column: 6)
!15985 = !DILocation(line: 746, column: 7, scope: !15984)
!15986 = !DILocation(line: 746, column: 6, scope: !15966)
!15987 = !DILocation(line: 747, column: 3, scope: !15984)
!15988 = !DILocation(line: 749, column: 46, scope: !15966)
!15989 = !DILocation(line: 749, column: 56, scope: !15966)
!15990 = !DILocation(line: 749, column: 64, scope: !15966)
!15991 = !DILocation(line: 749, column: 18, scope: !15966)
!15992 = !DILocation(line: 749, column: 16, scope: !15966)
!15993 = !DILocalVariable(name: "__ret_warn_on", scope: !15994, file: !3, line: 750, type: !7)
!15994 = distinct !DILexicalBlock(scope: !15995, file: !3, line: 750, column: 6)
!15995 = distinct !DILexicalBlock(scope: !15966, file: !3, line: 750, column: 6)
!15996 = !DILocation(line: 750, column: 6, scope: !15994)
!15997 = !DILocation(line: 750, column: 6, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15994, file: !3, line: 750, column: 6)
!15999 = !DILocation(line: 750, column: 6, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15998, file: !3, line: 750, column: 6)
!16001 = !DILocation(line: 750, column: 6, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 750, column: 6)
!16003 = !DILocation(line: 750, column: 6, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 750, column: 6)
!16005 = !{i32 -2134765834, i32 -2134765805, i32 -2134765759, i32 -2134765701, i32 -2134765647, i32 -2134765593, i32 -2134765538, i32 -2134765507}
!16006 = !DILocation(line: 750, column: 6, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 750, column: 6)
!16008 = !{i32 -2134765069, i32 -2134765062, i32 -2134765010, i32 -2134764979, i32 -2134764949}
!16009 = !DILocation(line: 750, column: 6, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 750, column: 6)
!16011 = !DILocation(line: 750, column: 6, scope: !15995)
!16012 = !DILocation(line: 750, column: 6, scope: !15966)
!16013 = !DILocation(line: 751, column: 3, scope: !15995)
!16014 = !DILocation(line: 753, column: 6, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !15966, file: !3, line: 753, column: 6)
!16016 = !DILocation(line: 753, column: 21, scope: !16015)
!16017 = !DILocation(line: 753, column: 37, scope: !16015)
!16018 = !DILocation(line: 753, column: 34, scope: !16015)
!16019 = !DILocation(line: 753, column: 6, scope: !15966)
!16020 = !DILocation(line: 754, column: 3, scope: !16015)
!16021 = !DILocation(line: 756, column: 13, scope: !15966)
!16022 = !DILocation(line: 756, column: 28, scope: !15966)
!16023 = !DILocation(line: 756, column: 2, scope: !15966)
!16024 = !DILocation(line: 757, column: 2, scope: !15966)
!16025 = !DILocation(line: 758, column: 1, scope: !15966)
!16026 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_mrouter_set", scope: !3, file: !3, line: 760, type: !15967, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16027 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16026, file: !3, line: 760, type: !10406)
!16028 = !DILocation(line: 760, column: 65, scope: !16026)
!16029 = !DILocalVariable(name: "trans", arg: 2, scope: !16026, file: !3, line: 761, type: !15315)
!16030 = !DILocation(line: 761, column: 32, scope: !16026)
!16031 = !DILocalVariable(name: "orig_dev", arg: 3, scope: !16026, file: !3, line: 762, type: !451)
!16032 = !DILocation(line: 762, column: 27, scope: !16026)
!16033 = !DILocalVariable(name: "is_port_mrouter", arg: 4, scope: !16026, file: !3, line: 763, type: !696)
!16034 = !DILocation(line: 763, column: 13, scope: !16026)
!16035 = !DILocalVariable(name: "bridge_port", scope: !16026, file: !3, line: 765, type: !10389)
!16036 = !DILocation(line: 765, column: 31, scope: !16026)
!16037 = !DILocalVariable(name: "err", scope: !16026, file: !3, line: 766, type: !7)
!16038 = !DILocation(line: 766, column: 6, scope: !16026)
!16039 = !DILocation(line: 768, column: 33, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 768, column: 6)
!16041 = !DILocation(line: 768, column: 6, scope: !16040)
!16042 = !DILocation(line: 768, column: 6, scope: !16026)
!16043 = !DILocation(line: 769, column: 3, scope: !16040)
!16044 = !DILocation(line: 771, column: 42, scope: !16026)
!16045 = !DILocation(line: 771, column: 57, scope: !16026)
!16046 = !DILocation(line: 771, column: 67, scope: !16026)
!16047 = !DILocation(line: 772, column: 7, scope: !16026)
!16048 = !DILocation(line: 771, column: 16, scope: !16026)
!16049 = !DILocation(line: 771, column: 14, scope: !16026)
!16050 = !DILocation(line: 773, column: 7, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 773, column: 6)
!16052 = !DILocation(line: 773, column: 6, scope: !16026)
!16053 = !DILocation(line: 774, column: 3, scope: !16051)
!16054 = !DILocation(line: 776, column: 7, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 776, column: 6)
!16056 = !DILocation(line: 776, column: 20, scope: !16055)
!16057 = !DILocation(line: 776, column: 35, scope: !16055)
!16058 = !DILocation(line: 776, column: 6, scope: !16026)
!16059 = !DILocation(line: 777, column: 3, scope: !16055)
!16060 = !DILocation(line: 779, column: 45, scope: !16026)
!16061 = !DILocation(line: 779, column: 60, scope: !16026)
!16062 = !DILocation(line: 781, column: 10, scope: !16026)
!16063 = !DILocation(line: 779, column: 8, scope: !16026)
!16064 = !DILocation(line: 779, column: 6, scope: !16026)
!16065 = !DILocation(line: 782, column: 6, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 782, column: 6)
!16067 = !DILocation(line: 782, column: 6, scope: !16026)
!16068 = !DILocation(line: 783, column: 10, scope: !16066)
!16069 = !DILocation(line: 783, column: 3, scope: !16066)
!16070 = !DILocation(line: 785, column: 35, scope: !16026)
!16071 = !DILocation(line: 785, column: 50, scope: !16026)
!16072 = !DILocation(line: 786, column: 7, scope: !16026)
!16073 = !DILocation(line: 785, column: 2, scope: !16026)
!16074 = !DILabel(scope: !16026, name: "out", file: !3, line: 787)
!16075 = !DILocation(line: 787, column: 1, scope: !16026)
!16076 = !DILocation(line: 788, column: 25, scope: !16026)
!16077 = !DILocation(line: 788, column: 2, scope: !16026)
!16078 = !DILocation(line: 788, column: 15, scope: !16026)
!16079 = !DILocation(line: 788, column: 23, scope: !16026)
!16080 = !DILocation(line: 789, column: 2, scope: !16026)
!16081 = !DILocation(line: 790, column: 1, scope: !16026)
!16082 = distinct !DISubprogram(name: "mlxsw_sp_port_mc_disabled_set", scope: !3, file: !3, line: 801, type: !15967, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16083 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16082, file: !3, line: 801, type: !10406)
!16084 = !DILocation(line: 801, column: 64, scope: !16082)
!16085 = !DILocalVariable(name: "trans", arg: 2, scope: !16082, file: !3, line: 802, type: !15315)
!16086 = !DILocation(line: 802, column: 31, scope: !16082)
!16087 = !DILocalVariable(name: "orig_dev", arg: 3, scope: !16082, file: !3, line: 803, type: !451)
!16088 = !DILocation(line: 803, column: 26, scope: !16082)
!16089 = !DILocalVariable(name: "mc_disabled", arg: 4, scope: !16082, file: !3, line: 804, type: !696)
!16090 = !DILocation(line: 804, column: 12, scope: !16082)
!16091 = !DILocalVariable(name: "mlxsw_sp", scope: !16082, file: !3, line: 806, type: !10421)
!16092 = !DILocation(line: 806, column: 19, scope: !16082)
!16093 = !DILocation(line: 806, column: 30, scope: !16082)
!16094 = !DILocation(line: 806, column: 45, scope: !16082)
!16095 = !DILocalVariable(name: "bridge_device", scope: !16082, file: !3, line: 807, type: !10370)
!16096 = !DILocation(line: 807, column: 33, scope: !16082)
!16097 = !DILocalVariable(name: "bridge_port", scope: !16082, file: !3, line: 808, type: !10389)
!16098 = !DILocation(line: 808, column: 31, scope: !16082)
!16099 = !DILocalVariable(name: "err", scope: !16082, file: !3, line: 809, type: !7)
!16100 = !DILocation(line: 809, column: 6, scope: !16082)
!16101 = !DILocation(line: 811, column: 33, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 811, column: 6)
!16103 = !DILocation(line: 811, column: 6, scope: !16102)
!16104 = !DILocation(line: 811, column: 6, scope: !16082)
!16105 = !DILocation(line: 812, column: 3, scope: !16102)
!16106 = !DILocation(line: 817, column: 46, scope: !16082)
!16107 = !DILocation(line: 817, column: 56, scope: !16082)
!16108 = !DILocation(line: 817, column: 64, scope: !16082)
!16109 = !DILocation(line: 817, column: 18, scope: !16082)
!16110 = !DILocation(line: 817, column: 16, scope: !16082)
!16111 = !DILocation(line: 818, column: 7, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 818, column: 6)
!16113 = !DILocation(line: 818, column: 6, scope: !16082)
!16114 = !DILocation(line: 819, column: 3, scope: !16112)
!16115 = !DILocation(line: 821, column: 6, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 821, column: 6)
!16117 = !DILocation(line: 821, column: 21, scope: !16116)
!16118 = !DILocation(line: 821, column: 43, scope: !16116)
!16119 = !DILocation(line: 821, column: 42, scope: !16116)
!16120 = !DILocation(line: 821, column: 39, scope: !16116)
!16121 = !DILocation(line: 821, column: 6, scope: !16082)
!16122 = !DILocation(line: 822, column: 39, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16116, file: !3, line: 821, column: 56)
!16124 = !DILocation(line: 822, column: 38, scope: !16123)
!16125 = !DILocation(line: 822, column: 3, scope: !16123)
!16126 = !DILocation(line: 822, column: 18, scope: !16123)
!16127 = !DILocation(line: 822, column: 36, scope: !16123)
!16128 = !DILocation(line: 823, column: 38, scope: !16123)
!16129 = !DILocation(line: 824, column: 10, scope: !16123)
!16130 = !DILocation(line: 823, column: 3, scope: !16123)
!16131 = !DILocation(line: 825, column: 2, scope: !16123)
!16132 = !DILocalVariable(name: "__mptr", scope: !16133, file: !3, line: 827, type: !726)
!16133 = distinct !DILexicalBlock(scope: !16134, file: !3, line: 827, column: 2)
!16134 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 827, column: 2)
!16135 = !DILocation(line: 827, column: 2, scope: !16133)
!16136 = !DILocation(line: 827, column: 2, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16133, file: !3, line: 827, column: 2)
!16138 = !DILocation(line: 827, column: 2, scope: !16134)
!16139 = !DILocation(line: 827, column: 2, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16134, file: !3, line: 827, column: 2)
!16141 = !DILocalVariable(name: "packet_type", scope: !16142, file: !3, line: 828, type: !10161)
!16142 = distinct !DILexicalBlock(scope: !16140, file: !3, line: 827, column: 69)
!16143 = !DILocation(line: 828, column: 28, scope: !16142)
!16144 = !DILocalVariable(name: "member", scope: !16142, file: !3, line: 829, type: !696)
!16145 = !DILocation(line: 829, column: 8, scope: !16142)
!16146 = !DILocation(line: 829, column: 35, scope: !16142)
!16147 = !DILocation(line: 829, column: 17, scope: !16142)
!16148 = !DILocation(line: 831, column: 46, scope: !16142)
!16149 = !DILocation(line: 832, column: 11, scope: !16142)
!16150 = !DILocation(line: 833, column: 11, scope: !16142)
!16151 = !DILocation(line: 833, column: 24, scope: !16142)
!16152 = !DILocation(line: 831, column: 9, scope: !16142)
!16153 = !DILocation(line: 831, column: 7, scope: !16142)
!16154 = !DILocation(line: 834, column: 7, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16142, file: !3, line: 834, column: 7)
!16156 = !DILocation(line: 834, column: 7, scope: !16142)
!16157 = !DILocation(line: 835, column: 11, scope: !16155)
!16158 = !DILocation(line: 835, column: 4, scope: !16155)
!16159 = !DILocation(line: 836, column: 2, scope: !16142)
!16160 = !DILocalVariable(name: "__mptr", scope: !16161, file: !3, line: 827, type: !726)
!16161 = distinct !DILexicalBlock(scope: !16140, file: !3, line: 827, column: 2)
!16162 = !DILocation(line: 827, column: 2, scope: !16161)
!16163 = !DILocation(line: 827, column: 2, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16161, file: !3, line: 827, column: 2)
!16165 = distinct !{!16165, !16138, !16166}
!16166 = !DILocation(line: 836, column: 2, scope: !16134)
!16167 = !DILocation(line: 838, column: 38, scope: !16082)
!16168 = !DILocation(line: 838, column: 37, scope: !16082)
!16169 = !DILocation(line: 838, column: 2, scope: !16082)
!16170 = !DILocation(line: 838, column: 17, scope: !16082)
!16171 = !DILocation(line: 838, column: 35, scope: !16082)
!16172 = !DILocation(line: 840, column: 2, scope: !16082)
!16173 = !DILocation(line: 841, column: 1, scope: !16082)
!16174 = distinct !DISubprogram(name: "mlxsw_sp_port_attr_br_mrouter_set", scope: !3, file: !3, line: 872, type: !15967, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16175 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16174, file: !3, line: 872, type: !10406)
!16176 = !DILocation(line: 872, column: 57, scope: !16174)
!16177 = !DILocalVariable(name: "trans", arg: 2, scope: !16174, file: !3, line: 873, type: !15315)
!16178 = !DILocation(line: 873, column: 31, scope: !16174)
!16179 = !DILocalVariable(name: "orig_dev", arg: 3, scope: !16174, file: !3, line: 874, type: !451)
!16180 = !DILocation(line: 874, column: 26, scope: !16174)
!16181 = !DILocalVariable(name: "is_mrouter", arg: 4, scope: !16174, file: !3, line: 875, type: !696)
!16182 = !DILocation(line: 875, column: 12, scope: !16174)
!16183 = !DILocalVariable(name: "mlxsw_sp", scope: !16174, file: !3, line: 877, type: !10421)
!16184 = !DILocation(line: 877, column: 19, scope: !16174)
!16185 = !DILocation(line: 877, column: 30, scope: !16174)
!16186 = !DILocation(line: 877, column: 45, scope: !16174)
!16187 = !DILocalVariable(name: "bridge_device", scope: !16174, file: !3, line: 878, type: !10370)
!16188 = !DILocation(line: 878, column: 33, scope: !16174)
!16189 = !DILocation(line: 880, column: 33, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 880, column: 6)
!16191 = !DILocation(line: 880, column: 6, scope: !16190)
!16192 = !DILocation(line: 880, column: 6, scope: !16174)
!16193 = !DILocation(line: 881, column: 3, scope: !16190)
!16194 = !DILocation(line: 886, column: 46, scope: !16174)
!16195 = !DILocation(line: 886, column: 56, scope: !16174)
!16196 = !DILocation(line: 886, column: 64, scope: !16174)
!16197 = !DILocation(line: 886, column: 18, scope: !16174)
!16198 = !DILocation(line: 886, column: 16, scope: !16174)
!16199 = !DILocation(line: 887, column: 7, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 887, column: 6)
!16201 = !DILocation(line: 887, column: 6, scope: !16174)
!16202 = !DILocation(line: 888, column: 3, scope: !16200)
!16203 = !DILocation(line: 890, column: 6, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 890, column: 6)
!16205 = !DILocation(line: 890, column: 21, scope: !16204)
!16206 = !DILocation(line: 890, column: 32, scope: !16204)
!16207 = !DILocation(line: 890, column: 29, scope: !16204)
!16208 = !DILocation(line: 890, column: 6, scope: !16174)
!16209 = !DILocation(line: 891, column: 38, scope: !16204)
!16210 = !DILocation(line: 891, column: 48, scope: !16204)
!16211 = !DILocation(line: 892, column: 10, scope: !16204)
!16212 = !DILocation(line: 891, column: 3, scope: !16204)
!16213 = !DILocation(line: 893, column: 27, scope: !16174)
!16214 = !DILocation(line: 893, column: 2, scope: !16174)
!16215 = !DILocation(line: 893, column: 17, scope: !16174)
!16216 = !DILocation(line: 893, column: 25, scope: !16174)
!16217 = !DILocation(line: 894, column: 2, scope: !16174)
!16218 = !DILocation(line: 895, column: 1, scope: !16174)
!16219 = distinct !DISubprogram(name: "switchdev_trans_ph_commit", scope: !10207, file: !10207, line: 28, type: !16220, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16220 = !DISubroutineType(types: !16221)
!16221 = !{!696, !15315}
!16222 = !DILocalVariable(name: "trans", arg: 1, scope: !16219, file: !10207, line: 28, type: !15315)
!16223 = !DILocation(line: 28, column: 70, scope: !16219)
!16224 = !DILocation(line: 30, column: 9, scope: !16219)
!16225 = !DILocation(line: 30, column: 15, scope: !16219)
!16226 = !DILocation(line: 30, column: 19, scope: !16219)
!16227 = !DILocation(line: 30, column: 26, scope: !16219)
!16228 = !DILocation(line: 30, column: 18, scope: !16219)
!16229 = !DILocation(line: 0, scope: !16219)
!16230 = !DILocation(line: 30, column: 2, scope: !16219)
!16231 = distinct !DISubprogram(name: "switchdev_trans_ph_prepare", scope: !10207, file: !10207, line: 23, type: !16220, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16232 = !DILocalVariable(name: "trans", arg: 1, scope: !16231, file: !10207, line: 23, type: !15315)
!16233 = !DILocation(line: 23, column: 71, scope: !16231)
!16234 = !DILocation(line: 25, column: 9, scope: !16231)
!16235 = !DILocation(line: 25, column: 15, scope: !16231)
!16236 = !DILocation(line: 25, column: 18, scope: !16231)
!16237 = !DILocation(line: 25, column: 25, scope: !16231)
!16238 = !DILocation(line: 0, scope: !16231)
!16239 = !DILocation(line: 25, column: 2, scope: !16231)
!16240 = distinct !DISubprogram(name: "mlxsw_sp_port_bridge_vlan_stp_set", scope: !3, file: !3, line: 505, type: !16241, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16241 = !DISubroutineType(types: !16242)
!16242 = !{!7, !10406, !11206, !1551}
!16243 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16240, file: !3, line: 505, type: !10406)
!16244 = !DILocation(line: 505, column: 57, scope: !16240)
!16245 = !DILocalVariable(name: "bridge_vlan", arg: 2, scope: !16240, file: !3, line: 506, type: !11206)
!16246 = !DILocation(line: 506, column: 36, scope: !16240)
!16247 = !DILocalVariable(name: "state", arg: 3, scope: !16240, file: !3, line: 507, type: !1551)
!16248 = !DILocation(line: 507, column: 10, scope: !16240)
!16249 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !16240, file: !3, line: 509, type: !11091)
!16250 = !DILocation(line: 509, column: 29, scope: !16240)
!16251 = !DILocalVariable(name: "__mptr", scope: !16252, file: !3, line: 511, type: !726)
!16252 = distinct !DILexicalBlock(scope: !16253, file: !3, line: 511, column: 2)
!16253 = distinct !DILexicalBlock(scope: !16240, file: !3, line: 511, column: 2)
!16254 = !DILocation(line: 511, column: 2, scope: !16252)
!16255 = !DILocation(line: 511, column: 2, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16252, file: !3, line: 511, column: 2)
!16257 = !DILocation(line: 511, column: 2, scope: !16253)
!16258 = !DILocation(line: 511, column: 2, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16253, file: !3, line: 511, column: 2)
!16260 = !DILocation(line: 513, column: 7, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16262, file: !3, line: 513, column: 7)
!16262 = distinct !DILexicalBlock(scope: !16259, file: !3, line: 512, column: 26)
!16263 = !DILocation(line: 513, column: 27, scope: !16261)
!16264 = !DILocation(line: 513, column: 44, scope: !16261)
!16265 = !DILocation(line: 513, column: 41, scope: !16261)
!16266 = !DILocation(line: 513, column: 7, scope: !16262)
!16267 = !DILocation(line: 514, column: 4, scope: !16261)
!16268 = !DILocation(line: 515, column: 36, scope: !16262)
!16269 = !DILocation(line: 516, column: 8, scope: !16262)
!16270 = !DILocation(line: 516, column: 21, scope: !16262)
!16271 = !DILocation(line: 516, column: 26, scope: !16262)
!16272 = !DILocation(line: 515, column: 10, scope: !16262)
!16273 = !DILocation(line: 515, column: 3, scope: !16262)
!16274 = !DILocalVariable(name: "__mptr", scope: !16275, file: !3, line: 511, type: !726)
!16275 = distinct !DILexicalBlock(scope: !16259, file: !3, line: 511, column: 2)
!16276 = !DILocation(line: 511, column: 2, scope: !16275)
!16277 = !DILocation(line: 511, column: 2, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16275, file: !3, line: 511, column: 2)
!16279 = distinct !{!16279, !16257, !16280}
!16280 = !DILocation(line: 517, column: 2, scope: !16253)
!16281 = !DILocation(line: 519, column: 2, scope: !16240)
!16282 = !DILocation(line: 520, column: 1, scope: !16240)
!16283 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_flood_table_set", scope: !3, file: !3, line: 583, type: !16284, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16284 = !DISubroutineType(types: !16285)
!16285 = !{!7, !10406, !10389, !10161, !696}
!16286 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16283, file: !3, line: 583, type: !10406)
!16287 = !DILocation(line: 583, column: 60, scope: !16283)
!16288 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !16283, file: !3, line: 584, type: !10389)
!16289 = !DILocation(line: 584, column: 39, scope: !16283)
!16290 = !DILocalVariable(name: "packet_type", arg: 3, scope: !16283, file: !3, line: 585, type: !10161)
!16291 = !DILocation(line: 585, column: 35, scope: !16283)
!16292 = !DILocalVariable(name: "member", arg: 4, scope: !16283, file: !3, line: 586, type: !696)
!16293 = !DILocation(line: 586, column: 15, scope: !16283)
!16294 = !DILocalVariable(name: "bridge_vlan", scope: !16283, file: !3, line: 588, type: !11206)
!16295 = !DILocation(line: 588, column: 31, scope: !16283)
!16296 = !DILocalVariable(name: "err", scope: !16283, file: !3, line: 589, type: !7)
!16297 = !DILocation(line: 589, column: 6, scope: !16283)
!16298 = !DILocalVariable(name: "__mptr", scope: !16299, file: !3, line: 591, type: !726)
!16299 = distinct !DILexicalBlock(scope: !16300, file: !3, line: 591, column: 2)
!16300 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 591, column: 2)
!16301 = !DILocation(line: 591, column: 2, scope: !16299)
!16302 = !DILocation(line: 591, column: 2, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 591, column: 2)
!16304 = !DILocation(line: 591, column: 2, scope: !16300)
!16305 = !DILocation(line: 591, column: 2, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16300, file: !3, line: 591, column: 2)
!16307 = !DILocation(line: 592, column: 45, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16306, file: !3, line: 591, column: 67)
!16309 = !DILocation(line: 593, column: 10, scope: !16308)
!16310 = !DILocation(line: 594, column: 10, scope: !16308)
!16311 = !DILocation(line: 595, column: 10, scope: !16308)
!16312 = !DILocation(line: 592, column: 9, scope: !16308)
!16313 = !DILocation(line: 592, column: 7, scope: !16308)
!16314 = !DILocation(line: 596, column: 7, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16308, file: !3, line: 596, column: 7)
!16316 = !DILocation(line: 596, column: 7, scope: !16308)
!16317 = !DILocation(line: 597, column: 4, scope: !16315)
!16318 = !DILocation(line: 598, column: 2, scope: !16308)
!16319 = !DILocalVariable(name: "__mptr", scope: !16320, file: !3, line: 591, type: !726)
!16320 = distinct !DILexicalBlock(scope: !16306, file: !3, line: 591, column: 2)
!16321 = !DILocation(line: 591, column: 2, scope: !16320)
!16322 = !DILocation(line: 591, column: 2, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16320, file: !3, line: 591, column: 2)
!16324 = distinct !{!16324, !16304, !16325}
!16325 = !DILocation(line: 598, column: 2, scope: !16300)
!16326 = !DILocation(line: 600, column: 2, scope: !16283)
!16327 = !DILabel(scope: !16283, name: "err_port_bridge_vlan_flood_set", file: !3, line: 602)
!16328 = !DILocation(line: 602, column: 1, scope: !16283)
!16329 = !DILocalVariable(name: "__mptr", scope: !16330, file: !3, line: 603, type: !726)
!16330 = distinct !DILexicalBlock(scope: !16331, file: !3, line: 603, column: 2)
!16331 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 603, column: 2)
!16332 = !DILocation(line: 603, column: 2, scope: !16330)
!16333 = !DILocation(line: 603, column: 2, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16330, file: !3, line: 603, column: 2)
!16335 = !DILocation(line: 603, column: 2, scope: !16331)
!16336 = !DILocation(line: 603, column: 2, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16331, file: !3, line: 603, column: 2)
!16338 = !DILocation(line: 605, column: 39, scope: !16337)
!16339 = !DILocation(line: 605, column: 54, scope: !16337)
!16340 = !DILocation(line: 606, column: 11, scope: !16337)
!16341 = !DILocation(line: 606, column: 25, scope: !16337)
!16342 = !DILocation(line: 606, column: 24, scope: !16337)
!16343 = !DILocation(line: 605, column: 3, scope: !16337)
!16344 = !DILocalVariable(name: "__mptr", scope: !16345, file: !3, line: 603, type: !726)
!16345 = distinct !DILexicalBlock(scope: !16337, file: !3, line: 603, column: 2)
!16346 = !DILocation(line: 603, column: 2, scope: !16345)
!16347 = !DILocation(line: 603, column: 2, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 603, column: 2)
!16349 = distinct !{!16349, !16335, !16350}
!16350 = !DILocation(line: 606, column: 31, scope: !16331)
!16351 = !DILocation(line: 607, column: 9, scope: !16283)
!16352 = !DILocation(line: 607, column: 2, scope: !16283)
!16353 = !DILocation(line: 608, column: 1, scope: !16283)
!16354 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_learning_set", scope: !3, file: !3, line: 629, type: !16355, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16355 = !DISubroutineType(types: !16356)
!16356 = !{!7, !10406, !10389, !696}
!16357 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16354, file: !3, line: 629, type: !10406)
!16358 = !DILocation(line: 629, column: 57, scope: !16354)
!16359 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !16354, file: !3, line: 630, type: !10389)
!16360 = !DILocation(line: 630, column: 36, scope: !16354)
!16361 = !DILocalVariable(name: "set", arg: 3, scope: !16354, file: !3, line: 631, type: !696)
!16362 = !DILocation(line: 631, column: 12, scope: !16354)
!16363 = !DILocalVariable(name: "bridge_vlan", scope: !16354, file: !3, line: 633, type: !11206)
!16364 = !DILocation(line: 633, column: 31, scope: !16354)
!16365 = !DILocalVariable(name: "err", scope: !16354, file: !3, line: 634, type: !7)
!16366 = !DILocation(line: 634, column: 6, scope: !16354)
!16367 = !DILocalVariable(name: "__mptr", scope: !16368, file: !3, line: 636, type: !726)
!16368 = distinct !DILexicalBlock(scope: !16369, file: !3, line: 636, column: 2)
!16369 = distinct !DILexicalBlock(scope: !16354, file: !3, line: 636, column: 2)
!16370 = !DILocation(line: 636, column: 2, scope: !16368)
!16371 = !DILocation(line: 636, column: 2, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16368, file: !3, line: 636, column: 2)
!16373 = !DILocation(line: 636, column: 2, scope: !16369)
!16374 = !DILocation(line: 636, column: 2, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16369, file: !3, line: 636, column: 2)
!16376 = !DILocation(line: 637, column: 48, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16375, file: !3, line: 636, column: 67)
!16378 = !DILocation(line: 638, column: 13, scope: !16377)
!16379 = !DILocation(line: 638, column: 26, scope: !16377)
!16380 = !DILocation(line: 637, column: 9, scope: !16377)
!16381 = !DILocation(line: 637, column: 7, scope: !16377)
!16382 = !DILocation(line: 639, column: 7, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16377, file: !3, line: 639, column: 7)
!16384 = !DILocation(line: 639, column: 7, scope: !16377)
!16385 = !DILocation(line: 640, column: 4, scope: !16383)
!16386 = !DILocation(line: 641, column: 2, scope: !16377)
!16387 = !DILocalVariable(name: "__mptr", scope: !16388, file: !3, line: 636, type: !726)
!16388 = distinct !DILexicalBlock(scope: !16375, file: !3, line: 636, column: 2)
!16389 = !DILocation(line: 636, column: 2, scope: !16388)
!16390 = !DILocation(line: 636, column: 2, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 636, column: 2)
!16392 = distinct !{!16392, !16373, !16393}
!16393 = !DILocation(line: 641, column: 2, scope: !16369)
!16394 = !DILocation(line: 643, column: 2, scope: !16354)
!16395 = !DILabel(scope: !16354, name: "err_port_bridge_vlan_learning_set", file: !3, line: 645)
!16396 = !DILocation(line: 645, column: 1, scope: !16354)
!16397 = !DILocalVariable(name: "__mptr", scope: !16398, file: !3, line: 646, type: !726)
!16398 = distinct !DILexicalBlock(scope: !16399, file: !3, line: 646, column: 2)
!16399 = distinct !DILexicalBlock(scope: !16354, file: !3, line: 646, column: 2)
!16400 = !DILocation(line: 646, column: 2, scope: !16398)
!16401 = !DILocation(line: 646, column: 2, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16398, file: !3, line: 646, column: 2)
!16403 = !DILocation(line: 646, column: 2, scope: !16399)
!16404 = !DILocation(line: 646, column: 2, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16399, file: !3, line: 646, column: 2)
!16406 = !DILocation(line: 648, column: 42, scope: !16405)
!16407 = !DILocation(line: 649, column: 14, scope: !16405)
!16408 = !DILocation(line: 649, column: 28, scope: !16405)
!16409 = !DILocation(line: 649, column: 27, scope: !16405)
!16410 = !DILocation(line: 648, column: 3, scope: !16405)
!16411 = !DILocalVariable(name: "__mptr", scope: !16412, file: !3, line: 646, type: !726)
!16412 = distinct !DILexicalBlock(scope: !16405, file: !3, line: 646, column: 2)
!16413 = !DILocation(line: 646, column: 2, scope: !16412)
!16414 = !DILocation(line: 646, column: 2, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 646, column: 2)
!16416 = distinct !{!16416, !16403, !16417}
!16417 = !DILocation(line: 649, column: 31, scope: !16399)
!16418 = !DILocation(line: 650, column: 9, scope: !16354)
!16419 = !DILocation(line: 650, column: 2, scope: !16354)
!16420 = !DILocation(line: 651, column: 1, scope: !16354)
!16421 = distinct !DISubprogram(name: "mlxsw_sp_port_bridge_vlan_flood_set", scope: !3, file: !3, line: 562, type: !16422, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16422 = !DISubroutineType(types: !16423)
!16423 = !{!7, !10406, !11206, !10161, !696}
!16424 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16421, file: !3, line: 562, type: !10406)
!16425 = !DILocation(line: 562, column: 59, scope: !16421)
!16426 = !DILocalVariable(name: "bridge_vlan", arg: 2, scope: !16421, file: !3, line: 563, type: !11206)
!16427 = !DILocation(line: 563, column: 38, scope: !16421)
!16428 = !DILocalVariable(name: "packet_type", arg: 3, scope: !16421, file: !3, line: 564, type: !10161)
!16429 = !DILocation(line: 564, column: 34, scope: !16421)
!16430 = !DILocalVariable(name: "member", arg: 4, scope: !16421, file: !3, line: 565, type: !696)
!16431 = !DILocation(line: 565, column: 14, scope: !16421)
!16432 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !16421, file: !3, line: 567, type: !11091)
!16433 = !DILocation(line: 567, column: 29, scope: !16421)
!16434 = !DILocalVariable(name: "__mptr", scope: !16435, file: !3, line: 569, type: !726)
!16435 = distinct !DILexicalBlock(scope: !16436, file: !3, line: 569, column: 2)
!16436 = distinct !DILexicalBlock(scope: !16421, file: !3, line: 569, column: 2)
!16437 = !DILocation(line: 569, column: 2, scope: !16435)
!16438 = !DILocation(line: 569, column: 2, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16435, file: !3, line: 569, column: 2)
!16440 = !DILocation(line: 569, column: 2, scope: !16436)
!16441 = !DILocation(line: 569, column: 2, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16436, file: !3, line: 569, column: 2)
!16443 = !DILocation(line: 571, column: 7, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16445, file: !3, line: 571, column: 7)
!16445 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 570, column: 26)
!16446 = !DILocation(line: 571, column: 27, scope: !16444)
!16447 = !DILocation(line: 571, column: 44, scope: !16444)
!16448 = !DILocation(line: 571, column: 41, scope: !16444)
!16449 = !DILocation(line: 571, column: 7, scope: !16445)
!16450 = !DILocation(line: 572, column: 4, scope: !16444)
!16451 = !DILocation(line: 573, column: 33, scope: !16445)
!16452 = !DILocation(line: 573, column: 53, scope: !16445)
!16453 = !DILocation(line: 574, column: 12, scope: !16445)
!16454 = !DILocation(line: 575, column: 12, scope: !16445)
!16455 = !DILocation(line: 575, column: 27, scope: !16445)
!16456 = !DILocation(line: 576, column: 12, scope: !16445)
!16457 = !DILocation(line: 573, column: 10, scope: !16445)
!16458 = !DILocation(line: 573, column: 3, scope: !16445)
!16459 = !DILocalVariable(name: "__mptr", scope: !16460, file: !3, line: 569, type: !726)
!16460 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 569, column: 2)
!16461 = !DILocation(line: 569, column: 2, scope: !16460)
!16462 = !DILocation(line: 569, column: 2, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16460, file: !3, line: 569, column: 2)
!16464 = distinct !{!16464, !16440, !16465}
!16465 = !DILocation(line: 577, column: 2, scope: !16436)
!16466 = !DILocation(line: 579, column: 2, scope: !16421)
!16467 = !DILocation(line: 580, column: 1, scope: !16421)
!16468 = distinct !DISubprogram(name: "mlxsw_sp_port_bridge_vlan_learning_set", scope: !3, file: !3, line: 611, type: !16469, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16469 = !DISubroutineType(types: !16470)
!16470 = !{!7, !10406, !11206, !696}
!16471 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16468, file: !3, line: 611, type: !10406)
!16472 = !DILocation(line: 611, column: 62, scope: !16468)
!16473 = !DILocalVariable(name: "bridge_vlan", arg: 2, scope: !16468, file: !3, line: 612, type: !11206)
!16474 = !DILocation(line: 612, column: 41, scope: !16468)
!16475 = !DILocalVariable(name: "set", arg: 3, scope: !16468, file: !3, line: 613, type: !696)
!16476 = !DILocation(line: 613, column: 17, scope: !16468)
!16477 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !16468, file: !3, line: 615, type: !11091)
!16478 = !DILocation(line: 615, column: 29, scope: !16468)
!16479 = !DILocalVariable(name: "vid", scope: !16468, file: !3, line: 616, type: !1192)
!16480 = !DILocation(line: 616, column: 6, scope: !16468)
!16481 = !DILocation(line: 616, column: 12, scope: !16468)
!16482 = !DILocation(line: 616, column: 25, scope: !16468)
!16483 = !DILocalVariable(name: "__mptr", scope: !16484, file: !3, line: 618, type: !726)
!16484 = distinct !DILexicalBlock(scope: !16485, file: !3, line: 618, column: 2)
!16485 = distinct !DILexicalBlock(scope: !16468, file: !3, line: 618, column: 2)
!16486 = !DILocation(line: 618, column: 2, scope: !16484)
!16487 = !DILocation(line: 618, column: 2, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16484, file: !3, line: 618, column: 2)
!16489 = !DILocation(line: 618, column: 2, scope: !16485)
!16490 = !DILocation(line: 618, column: 2, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16485, file: !3, line: 618, column: 2)
!16492 = !DILocation(line: 620, column: 7, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16494, file: !3, line: 620, column: 7)
!16494 = distinct !DILexicalBlock(scope: !16491, file: !3, line: 619, column: 26)
!16495 = !DILocation(line: 620, column: 27, scope: !16493)
!16496 = !DILocation(line: 620, column: 44, scope: !16493)
!16497 = !DILocation(line: 620, column: 41, scope: !16493)
!16498 = !DILocation(line: 620, column: 7, scope: !16494)
!16499 = !DILocation(line: 621, column: 4, scope: !16493)
!16500 = !DILocation(line: 622, column: 41, scope: !16494)
!16501 = !DILocation(line: 622, column: 56, scope: !16494)
!16502 = !DILocation(line: 622, column: 61, scope: !16494)
!16503 = !DILocation(line: 622, column: 10, scope: !16494)
!16504 = !DILocation(line: 622, column: 3, scope: !16494)
!16505 = !DILocalVariable(name: "__mptr", scope: !16506, file: !3, line: 618, type: !726)
!16506 = distinct !DILexicalBlock(scope: !16491, file: !3, line: 618, column: 2)
!16507 = !DILocation(line: 618, column: 2, scope: !16506)
!16508 = !DILocation(line: 618, column: 2, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16506, file: !3, line: 618, column: 2)
!16510 = distinct !{!16510, !16489, !16511}
!16511 = !DILocation(line: 623, column: 2, scope: !16485)
!16512 = !DILocation(line: 625, column: 2, scope: !16468)
!16513 = !DILocation(line: 626, column: 1, scope: !16468)
!16514 = distinct !DISubprogram(name: "mlxsw_sp_ageing_set", scope: !3, file: !3, line: 706, type: !16515, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16515 = !DISubroutineType(types: !16516)
!16516 = !{!7, !10421, !862}
!16517 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !16514, file: !3, line: 706, type: !10421)
!16518 = !DILocation(line: 706, column: 49, scope: !16514)
!16519 = !DILocalVariable(name: "ageing_time", arg: 2, scope: !16514, file: !3, line: 706, type: !862)
!16520 = !DILocation(line: 706, column: 63, scope: !16514)
!16521 = !DILocalVariable(name: "sfdat_pl", scope: !16514, file: !3, line: 708, type: !5990)
!16522 = !DILocation(line: 708, column: 7, scope: !16514)
!16523 = !DILocalVariable(name: "err", scope: !16514, file: !3, line: 709, type: !7)
!16524 = !DILocation(line: 709, column: 6, scope: !16514)
!16525 = !DILocation(line: 711, column: 23, scope: !16514)
!16526 = !DILocation(line: 711, column: 33, scope: !16514)
!16527 = !DILocation(line: 711, column: 2, scope: !16514)
!16528 = !DILocation(line: 712, column: 24, scope: !16514)
!16529 = !DILocation(line: 712, column: 34, scope: !16514)
!16530 = !DILocation(line: 712, column: 58, scope: !16514)
!16531 = !DILocation(line: 712, column: 8, scope: !16514)
!16532 = !DILocation(line: 712, column: 6, scope: !16514)
!16533 = !DILocation(line: 713, column: 6, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16514, file: !3, line: 713, column: 6)
!16535 = !DILocation(line: 713, column: 6, scope: !16514)
!16536 = !DILocation(line: 714, column: 10, scope: !16534)
!16537 = !DILocation(line: 714, column: 3, scope: !16534)
!16538 = !DILocation(line: 715, column: 34, scope: !16514)
!16539 = !DILocation(line: 715, column: 2, scope: !16514)
!16540 = !DILocation(line: 715, column: 12, scope: !16514)
!16541 = !DILocation(line: 715, column: 20, scope: !16514)
!16542 = !DILocation(line: 715, column: 32, scope: !16514)
!16543 = !DILocation(line: 716, column: 2, scope: !16514)
!16544 = !DILocation(line: 717, column: 1, scope: !16514)
!16545 = distinct !DISubprogram(name: "mlxsw_reg_sfdat_pack", scope: !10048, file: !10048, line: 198, type: !13537, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16546 = !DILocalVariable(name: "payload", arg: 1, scope: !16545, file: !10048, line: 198, type: !733)
!16547 = !DILocation(line: 198, column: 47, scope: !16545)
!16548 = !DILocalVariable(name: "age_time", arg: 2, scope: !16545, file: !10048, line: 198, type: !862)
!16549 = !DILocation(line: 198, column: 60, scope: !16545)
!16550 = !DILocation(line: 200, column: 2, scope: !16545)
!16551 = !DILocation(line: 201, column: 27, scope: !16545)
!16552 = !DILocation(line: 201, column: 2, scope: !16545)
!16553 = !DILocation(line: 202, column: 31, scope: !16545)
!16554 = !DILocation(line: 202, column: 40, scope: !16545)
!16555 = !DILocation(line: 202, column: 2, scope: !16545)
!16556 = !DILocation(line: 203, column: 1, scope: !16545)
!16557 = distinct !DISubprogram(name: "mlxsw_reg_sfdat_swid_set", scope: !10048, file: !10048, line: 187, type: !13537, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16558 = !DILocalVariable(name: "buf", arg: 1, scope: !16557, file: !10048, line: 187, type: !733)
!16559 = !DILocation(line: 187, column: 1, scope: !16557)
!16560 = !DILocalVariable(name: "val", arg: 2, scope: !16557, file: !10048, line: 187, type: !862)
!16561 = distinct !DISubprogram(name: "mlxsw_reg_sfdat_age_time_set", scope: !10048, file: !10048, line: 196, type: !13537, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16562 = !DILocalVariable(name: "buf", arg: 1, scope: !16561, file: !10048, line: 196, type: !733)
!16563 = !DILocation(line: 196, column: 1, scope: !16561)
!16564 = !DILocalVariable(name: "val", arg: 2, scope: !16561, file: !10048, line: 196, type: !862)
!16565 = distinct !DISubprogram(name: "mlxsw_sp_port_mrouter_update_mdb", scope: !3, file: !3, line: 1766, type: !16566, scopeLine: 1769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16566 = !DISubroutineType(types: !16567)
!16567 = !{null, !10406, !10389, !696}
!16568 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16565, file: !3, line: 1766, type: !10406)
!16569 = !DILocation(line: 1766, column: 56, scope: !16565)
!16570 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !16565, file: !3, line: 1767, type: !10389)
!16571 = !DILocation(line: 1767, column: 35, scope: !16565)
!16572 = !DILocalVariable(name: "add", arg: 3, scope: !16565, file: !3, line: 1768, type: !696)
!16573 = !DILocation(line: 1768, column: 11, scope: !16565)
!16574 = !DILocalVariable(name: "bridge_device", scope: !16565, file: !3, line: 1770, type: !10370)
!16575 = !DILocation(line: 1770, column: 33, scope: !16565)
!16576 = !DILocalVariable(name: "mid", scope: !16565, file: !3, line: 1771, type: !11215)
!16577 = !DILocation(line: 1771, column: 23, scope: !16565)
!16578 = !DILocation(line: 1773, column: 18, scope: !16565)
!16579 = !DILocation(line: 1773, column: 31, scope: !16565)
!16580 = !DILocation(line: 1773, column: 16, scope: !16565)
!16581 = !DILocalVariable(name: "__mptr", scope: !16582, file: !3, line: 1775, type: !726)
!16582 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 1775, column: 2)
!16583 = distinct !DILexicalBlock(scope: !16565, file: !3, line: 1775, column: 2)
!16584 = !DILocation(line: 1775, column: 2, scope: !16582)
!16585 = !DILocation(line: 1775, column: 2, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16582, file: !3, line: 1775, column: 2)
!16587 = !DILocation(line: 1775, column: 2, scope: !16583)
!16588 = !DILocation(line: 1775, column: 2, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 1775, column: 2)
!16590 = !DILocation(line: 1776, column: 17, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16592, file: !3, line: 1776, column: 7)
!16592 = distinct !DILexicalBlock(scope: !16589, file: !3, line: 1775, column: 60)
!16593 = !DILocation(line: 1776, column: 32, scope: !16591)
!16594 = !DILocation(line: 1776, column: 44, scope: !16591)
!16595 = !DILocation(line: 1776, column: 49, scope: !16591)
!16596 = !DILocation(line: 1776, column: 8, scope: !16591)
!16597 = !DILocation(line: 1776, column: 7, scope: !16592)
!16598 = !DILocation(line: 1777, column: 27, scope: !16591)
!16599 = !DILocation(line: 1777, column: 42, scope: !16591)
!16600 = !DILocation(line: 1777, column: 47, scope: !16591)
!16601 = !DILocation(line: 1777, column: 52, scope: !16591)
!16602 = !DILocation(line: 1777, column: 4, scope: !16591)
!16603 = !DILocation(line: 1778, column: 2, scope: !16592)
!16604 = !DILocalVariable(name: "__mptr", scope: !16605, file: !3, line: 1775, type: !726)
!16605 = distinct !DILexicalBlock(scope: !16589, file: !3, line: 1775, column: 2)
!16606 = !DILocation(line: 1775, column: 2, scope: !16605)
!16607 = !DILocation(line: 1775, column: 2, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 1775, column: 2)
!16609 = distinct !{!16609, !16587, !16610}
!16610 = !DILocation(line: 1778, column: 2, scope: !16583)
!16611 = !DILocation(line: 1779, column: 1, scope: !16565)
!16612 = distinct !DISubprogram(name: "mlxsw_sp_bridge_mdb_mc_enable_sync", scope: !3, file: !3, line: 1746, type: !16613, scopeLine: 1749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16613 = !DISubroutineType(types: !16614)
!16614 = !{null, !10406, !10370}
!16615 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16612, file: !3, line: 1746, type: !10406)
!16616 = !DILocation(line: 1746, column: 58, scope: !16612)
!16617 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !16612, file: !3, line: 1748, type: !10370)
!16618 = !DILocation(line: 1748, column: 9, scope: !16612)
!16619 = !DILocalVariable(name: "mlxsw_sp", scope: !16612, file: !3, line: 1750, type: !10421)
!16620 = !DILocation(line: 1750, column: 19, scope: !16612)
!16621 = !DILocation(line: 1750, column: 30, scope: !16612)
!16622 = !DILocation(line: 1750, column: 45, scope: !16612)
!16623 = !DILocalVariable(name: "mid", scope: !16612, file: !3, line: 1751, type: !11215)
!16624 = !DILocation(line: 1751, column: 23, scope: !16612)
!16625 = !DILocalVariable(name: "mc_enabled", scope: !16612, file: !3, line: 1752, type: !696)
!16626 = !DILocation(line: 1752, column: 7, scope: !16612)
!16627 = !DILocation(line: 1754, column: 15, scope: !16612)
!16628 = !DILocation(line: 1754, column: 30, scope: !16612)
!16629 = !DILocation(line: 1754, column: 13, scope: !16612)
!16630 = !DILocalVariable(name: "__mptr", scope: !16631, file: !3, line: 1756, type: !726)
!16631 = distinct !DILexicalBlock(scope: !16632, file: !3, line: 1756, column: 2)
!16632 = distinct !DILexicalBlock(scope: !16612, file: !3, line: 1756, column: 2)
!16633 = !DILocation(line: 1756, column: 2, scope: !16631)
!16634 = !DILocation(line: 1756, column: 2, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16631, file: !3, line: 1756, column: 2)
!16636 = !DILocation(line: 1756, column: 2, scope: !16632)
!16637 = !DILocation(line: 1756, column: 2, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16632, file: !3, line: 1756, column: 2)
!16639 = !DILocation(line: 1757, column: 7, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16641, file: !3, line: 1757, column: 7)
!16641 = distinct !DILexicalBlock(scope: !16638, file: !3, line: 1756, column: 60)
!16642 = !DILocation(line: 1757, column: 7, scope: !16641)
!16643 = !DILocation(line: 1758, column: 32, scope: !16640)
!16644 = !DILocation(line: 1758, column: 42, scope: !16640)
!16645 = !DILocation(line: 1759, column: 11, scope: !16640)
!16646 = !DILocation(line: 1758, column: 4, scope: !16640)
!16647 = !DILocation(line: 1761, column: 33, scope: !16640)
!16648 = !DILocation(line: 1761, column: 43, scope: !16640)
!16649 = !DILocation(line: 1761, column: 4, scope: !16640)
!16650 = !DILocation(line: 1762, column: 2, scope: !16641)
!16651 = !DILocalVariable(name: "__mptr", scope: !16652, file: !3, line: 1756, type: !726)
!16652 = distinct !DILexicalBlock(scope: !16638, file: !3, line: 1756, column: 2)
!16653 = !DILocation(line: 1756, column: 2, scope: !16652)
!16654 = !DILocation(line: 1756, column: 2, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16652, file: !3, line: 1756, column: 2)
!16656 = distinct !{!16656, !16636, !16657}
!16657 = !DILocation(line: 1762, column: 2, scope: !16632)
!16658 = !DILocation(line: 1763, column: 1, scope: !16612)
!16659 = distinct !DISubprogram(name: "mlxsw_sp_mc_flood", scope: !3, file: !3, line: 792, type: !16660, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16660 = !DISubroutineType(types: !16661)
!16661 = !{!696, !11744}
!16662 = !DILocalVariable(name: "bridge_port", arg: 1, scope: !16659, file: !3, line: 792, type: !11744)
!16663 = !DILocation(line: 792, column: 66, scope: !16659)
!16664 = !DILocalVariable(name: "bridge_device", scope: !16659, file: !3, line: 794, type: !11588)
!16665 = !DILocation(line: 794, column: 39, scope: !16659)
!16666 = !DILocation(line: 796, column: 18, scope: !16659)
!16667 = !DILocation(line: 796, column: 31, scope: !16659)
!16668 = !DILocation(line: 796, column: 16, scope: !16659)
!16669 = !DILocation(line: 797, column: 9, scope: !16659)
!16670 = !DILocation(line: 797, column: 24, scope: !16659)
!16671 = !DILocation(line: 797, column: 44, scope: !16659)
!16672 = !DILocation(line: 797, column: 57, scope: !16659)
!16673 = !DILocation(line: 798, column: 6, scope: !16659)
!16674 = !DILocation(line: 798, column: 19, scope: !16659)
!16675 = !DILocation(line: 798, column: 25, scope: !16659)
!16676 = !DILocation(line: 797, column: 2, scope: !16659)
!16677 = distinct !DISubprogram(name: "mlxsw_sp_mc_write_mdb_entry", scope: !3, file: !3, line: 1574, type: !16678, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16678 = !DISubroutineType(types: !16679)
!16679 = !{!696, !10421, !11215, !10370}
!16680 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !16677, file: !3, line: 1574, type: !10421)
!16681 = !DILocation(line: 1574, column: 46, scope: !16677)
!16682 = !DILocalVariable(name: "mid", arg: 2, scope: !16677, file: !3, line: 1575, type: !11215)
!16683 = !DILocation(line: 1575, column: 29, scope: !16677)
!16684 = !DILocalVariable(name: "bridge_device", arg: 3, scope: !16677, file: !3, line: 1576, type: !10370)
!16685 = !DILocation(line: 1576, column: 39, scope: !16677)
!16686 = !DILocalVariable(name: "flood_bitmap", scope: !16677, file: !3, line: 1578, type: !7390)
!16687 = !DILocation(line: 1578, column: 8, scope: !16677)
!16688 = !DILocalVariable(name: "num_of_ports", scope: !16677, file: !3, line: 1579, type: !7)
!16689 = !DILocation(line: 1579, column: 6, scope: !16677)
!16690 = !DILocalVariable(name: "alloc_size", scope: !16677, file: !3, line: 1580, type: !7)
!16691 = !DILocation(line: 1580, column: 6, scope: !16677)
!16692 = !DILocalVariable(name: "mid_idx", scope: !16677, file: !3, line: 1581, type: !1192)
!16693 = !DILocation(line: 1581, column: 6, scope: !16677)
!16694 = !DILocalVariable(name: "err", scope: !16677, file: !3, line: 1582, type: !7)
!16695 = !DILocation(line: 1582, column: 6, scope: !16677)
!16696 = !DILocation(line: 1584, column: 32, scope: !16677)
!16697 = !DILocation(line: 1584, column: 42, scope: !16677)
!16698 = !DILocation(line: 1584, column: 50, scope: !16677)
!16699 = !DILocation(line: 1584, column: 12, scope: !16677)
!16700 = !DILocation(line: 1584, column: 10, scope: !16677)
!16701 = !DILocation(line: 1586, column: 6, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 1586, column: 6)
!16703 = !DILocation(line: 1586, column: 14, scope: !16702)
!16704 = !DILocation(line: 1586, column: 6, scope: !16677)
!16705 = !DILocation(line: 1587, column: 3, scope: !16702)
!16706 = !DILocation(line: 1589, column: 38, scope: !16677)
!16707 = !DILocation(line: 1589, column: 48, scope: !16677)
!16708 = !DILocation(line: 1589, column: 17, scope: !16677)
!16709 = !DILocation(line: 1589, column: 15, scope: !16677)
!16710 = !DILocation(line: 1590, column: 30, scope: !16677)
!16711 = !DILocation(line: 1590, column: 28, scope: !16677)
!16712 = !DILocation(line: 1590, column: 15, scope: !16677)
!16713 = !DILocation(line: 1590, column: 13, scope: !16677)
!16714 = !DILocation(line: 1591, column: 25, scope: !16677)
!16715 = !DILocation(line: 1591, column: 17, scope: !16677)
!16716 = !DILocation(line: 1591, column: 15, scope: !16677)
!16717 = !DILocation(line: 1592, column: 7, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 1592, column: 6)
!16719 = !DILocation(line: 1592, column: 6, scope: !16677)
!16720 = !DILocation(line: 1593, column: 3, scope: !16718)
!16721 = !DILocation(line: 1595, column: 14, scope: !16677)
!16722 = !DILocation(line: 1595, column: 29, scope: !16677)
!16723 = !DILocation(line: 1595, column: 34, scope: !16677)
!16724 = !DILocation(line: 1595, column: 48, scope: !16677)
!16725 = !DILocation(line: 1595, column: 2, scope: !16677)
!16726 = !DILocation(line: 1596, column: 34, scope: !16677)
!16727 = !DILocation(line: 1596, column: 48, scope: !16677)
!16728 = !DILocation(line: 1596, column: 63, scope: !16677)
!16729 = !DILocation(line: 1596, column: 2, scope: !16677)
!16730 = !DILocation(line: 1598, column: 13, scope: !16677)
!16731 = !DILocation(line: 1598, column: 2, scope: !16677)
!16732 = !DILocation(line: 1598, column: 7, scope: !16677)
!16733 = !DILocation(line: 1598, column: 11, scope: !16677)
!16734 = !DILocation(line: 1599, column: 38, scope: !16677)
!16735 = !DILocation(line: 1599, column: 48, scope: !16677)
!16736 = !DILocation(line: 1599, column: 57, scope: !16677)
!16737 = !DILocation(line: 1600, column: 10, scope: !16677)
!16738 = !DILocation(line: 1600, column: 25, scope: !16677)
!16739 = !DILocation(line: 1599, column: 8, scope: !16677)
!16740 = !DILocation(line: 1599, column: 6, scope: !16677)
!16741 = !DILocation(line: 1601, column: 8, scope: !16677)
!16742 = !DILocation(line: 1601, column: 2, scope: !16677)
!16743 = !DILocation(line: 1602, column: 6, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 1602, column: 6)
!16745 = !DILocation(line: 1602, column: 6, scope: !16677)
!16746 = !DILocation(line: 1603, column: 3, scope: !16744)
!16747 = !DILocation(line: 1605, column: 29, scope: !16677)
!16748 = !DILocation(line: 1605, column: 39, scope: !16677)
!16749 = !DILocation(line: 1605, column: 44, scope: !16677)
!16750 = !DILocation(line: 1605, column: 50, scope: !16677)
!16751 = !DILocation(line: 1605, column: 55, scope: !16677)
!16752 = !DILocation(line: 1605, column: 60, scope: !16677)
!16753 = !DILocation(line: 1605, column: 8, scope: !16677)
!16754 = !DILocation(line: 1605, column: 6, scope: !16677)
!16755 = !DILocation(line: 1607, column: 6, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 1607, column: 6)
!16757 = !DILocation(line: 1607, column: 6, scope: !16677)
!16758 = !DILocation(line: 1608, column: 3, scope: !16756)
!16759 = !DILocation(line: 1610, column: 10, scope: !16677)
!16760 = !DILocation(line: 1610, column: 19, scope: !16677)
!16761 = !DILocation(line: 1610, column: 29, scope: !16677)
!16762 = !DILocation(line: 1610, column: 37, scope: !16677)
!16763 = !DILocation(line: 1610, column: 2, scope: !16677)
!16764 = !DILocation(line: 1611, column: 2, scope: !16677)
!16765 = !DILocation(line: 1611, column: 7, scope: !16677)
!16766 = !DILocation(line: 1611, column: 13, scope: !16677)
!16767 = !DILocation(line: 1612, column: 2, scope: !16677)
!16768 = !DILocation(line: 1613, column: 1, scope: !16677)
!16769 = distinct !DISubprogram(name: "bitmap_copy", scope: !14366, file: !14366, line: 247, type: !16770, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16770 = !DISubroutineType(types: !16771)
!16771 = !{null, !2608, !14369, !14}
!16772 = !DILocalVariable(name: "dst", arg: 1, scope: !16769, file: !14366, line: 247, type: !2608)
!16773 = !DILocation(line: 247, column: 47, scope: !16769)
!16774 = !DILocalVariable(name: "src", arg: 2, scope: !16769, file: !14366, line: 247, type: !14369)
!16775 = !DILocation(line: 247, column: 73, scope: !16769)
!16776 = !DILocalVariable(name: "nbits", arg: 3, scope: !16769, file: !14366, line: 248, type: !14)
!16777 = !DILocation(line: 248, column: 17, scope: !16769)
!16778 = !DILocalVariable(name: "len", scope: !16769, file: !14366, line: 250, type: !14)
!16779 = !DILocation(line: 250, column: 15, scope: !16769)
!16780 = !DILocation(line: 250, column: 21, scope: !16769)
!16781 = !DILocation(line: 250, column: 42, scope: !16769)
!16782 = !DILocation(line: 251, column: 9, scope: !16769)
!16783 = !DILocation(line: 251, column: 2, scope: !16769)
!16784 = !DILocation(line: 251, column: 14, scope: !16769)
!16785 = !DILocation(line: 251, column: 19, scope: !16769)
!16786 = !DILocation(line: 252, column: 1, scope: !16769)
!16787 = distinct !DISubprogram(name: "mlxsw_sp_mc_get_mrouters_bitmap", scope: !3, file: !3, line: 1558, type: !16788, scopeLine: 1561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16788 = !DISubroutineType(types: !16789)
!16789 = !{null, !2608, !10370, !10421}
!16790 = !DILocalVariable(name: "flood_bitmap", arg: 1, scope: !16787, file: !3, line: 1558, type: !2608)
!16791 = !DILocation(line: 1558, column: 48, scope: !16787)
!16792 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !16787, file: !3, line: 1559, type: !10370)
!16793 = !DILocation(line: 1559, column: 36, scope: !16787)
!16794 = !DILocalVariable(name: "mlxsw_sp", arg: 3, scope: !16787, file: !3, line: 1560, type: !10421)
!16795 = !DILocation(line: 1560, column: 22, scope: !16787)
!16796 = !DILocalVariable(name: "bridge_port", scope: !16787, file: !3, line: 1562, type: !10389)
!16797 = !DILocation(line: 1562, column: 31, scope: !16787)
!16798 = !DILocalVariable(name: "__mptr", scope: !16799, file: !3, line: 1564, type: !726)
!16799 = distinct !DILexicalBlock(scope: !16800, file: !3, line: 1564, column: 2)
!16800 = distinct !DILexicalBlock(scope: !16787, file: !3, line: 1564, column: 2)
!16801 = !DILocation(line: 1564, column: 2, scope: !16799)
!16802 = !DILocation(line: 1564, column: 2, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16799, file: !3, line: 1564, column: 2)
!16804 = !DILocation(line: 1564, column: 2, scope: !16800)
!16805 = !DILocation(line: 1564, column: 2, scope: !16806)
!16806 = distinct !DILexicalBlock(scope: !16800, file: !3, line: 1564, column: 2)
!16807 = !DILocation(line: 1565, column: 7, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16809, file: !3, line: 1565, column: 7)
!16809 = distinct !DILexicalBlock(scope: !16806, file: !3, line: 1564, column: 69)
!16810 = !DILocation(line: 1565, column: 20, scope: !16808)
!16811 = !DILocation(line: 1565, column: 7, scope: !16809)
!16812 = !DILocation(line: 1566, column: 42, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16808, file: !3, line: 1565, column: 29)
!16814 = !DILocation(line: 1567, column: 14, scope: !16813)
!16815 = !DILocation(line: 1568, column: 14, scope: !16813)
!16816 = !DILocation(line: 1566, column: 4, scope: !16813)
!16817 = !DILocation(line: 1569, column: 3, scope: !16813)
!16818 = !DILocation(line: 1570, column: 2, scope: !16809)
!16819 = !DILocalVariable(name: "__mptr", scope: !16820, file: !3, line: 1564, type: !726)
!16820 = distinct !DILexicalBlock(scope: !16806, file: !3, line: 1564, column: 2)
!16821 = !DILocation(line: 1564, column: 2, scope: !16820)
!16822 = !DILocation(line: 1564, column: 2, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16820, file: !3, line: 1564, column: 2)
!16824 = distinct !{!16824, !16804, !16825}
!16825 = !DILocation(line: 1570, column: 2, scope: !16800)
!16826 = !DILocation(line: 1571, column: 1, scope: !16787)
!16827 = distinct !DISubprogram(name: "mlxsw_sp_port_smid_full_entry", scope: !3, file: !3, line: 1470, type: !16828, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16828 = !DISubroutineType(types: !16829)
!16829 = !{!7, !10421, !1192, !7390, !696}
!16830 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !16831)
!16831 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !16832)
!16832 = distinct !DILocation(line: 1477, column: 12, scope: !16827)
!16833 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !16831)
!16834 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !16831)
!16835 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !16831)
!16836 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !16837)
!16837 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !16832)
!16838 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !16839)
!16839 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !16832)
!16840 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !16841)
!16841 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !16832)
!16843 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !16841)
!16844 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !16841)
!16845 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !16842)
!16846 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !16842)
!16847 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !16842)
!16848 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !16832)
!16849 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !16832)
!16850 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !16832)
!16851 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !16827, file: !3, line: 1470, type: !10421)
!16852 = !DILocation(line: 1470, column: 59, scope: !16827)
!16853 = !DILocalVariable(name: "mid_idx", arg: 2, scope: !16827, file: !3, line: 1470, type: !1192)
!16854 = !DILocation(line: 1470, column: 73, scope: !16827)
!16855 = !DILocalVariable(name: "ports_bitmap", arg: 3, scope: !16827, file: !3, line: 1471, type: !7390)
!16856 = !DILocation(line: 1471, column: 13, scope: !16827)
!16857 = !DILocalVariable(name: "set_router_port", arg: 4, scope: !16827, file: !3, line: 1472, type: !696)
!16858 = !DILocation(line: 1472, column: 12, scope: !16827)
!16859 = !DILocalVariable(name: "smid_pl", scope: !16827, file: !3, line: 1474, type: !733)
!16860 = !DILocation(line: 1474, column: 8, scope: !16827)
!16861 = !DILocalVariable(name: "err", scope: !16827, file: !3, line: 1475, type: !7)
!16862 = !DILocation(line: 1475, column: 6, scope: !16827)
!16863 = !DILocalVariable(name: "i", scope: !16827, file: !3, line: 1475, type: !7)
!16864 = !DILocation(line: 1475, column: 11, scope: !16827)
!16865 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !16832)
!16866 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !16832)
!16867 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !16832)
!16868 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !16832)
!16869 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !16832)
!16870 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !16832)
!16871 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !16832)
!16872 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !16832)
!16873 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !16842)
!16874 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !16842)
!16875 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !16842)
!16876 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !16842)
!16877 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !16842)
!16878 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !16841)
!16879 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !16841)
!16880 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !16841)
!16881 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !16841)
!16882 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !16832)
!16883 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !16832)
!16884 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !16839)
!16885 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !16839)
!16886 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !16839)
!16887 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !16839)
!16888 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !16839)
!16889 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !16839)
!16890 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !16839)
!16891 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !16839)
!16892 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !16839)
!16893 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !16839)
!16894 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !16839)
!16895 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !16839)
!16896 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !16839)
!16897 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !16839)
!16898 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !16839)
!16899 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !16839)
!16900 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !16839)
!16901 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !16839)
!16902 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !16839)
!16903 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !16839)
!16904 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !16839)
!16905 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !16839)
!16906 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !16839)
!16907 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !16839)
!16908 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !16839)
!16909 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !16839)
!16910 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !16839)
!16911 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !16839)
!16912 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !16839)
!16913 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !16839)
!16914 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !16839)
!16915 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !16839)
!16916 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !16839)
!16917 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !16839)
!16918 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !16839)
!16919 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !16839)
!16920 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !16839)
!16921 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !16839)
!16922 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !16839)
!16923 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !16839)
!16924 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !16839)
!16925 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !16839)
!16926 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !16839)
!16927 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !16839)
!16928 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !16839)
!16929 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !16839)
!16930 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !16839)
!16931 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !16839)
!16932 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !16839)
!16933 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !16839)
!16934 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !16839)
!16935 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !16839)
!16936 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !16839)
!16937 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !16839)
!16938 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !16839)
!16939 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !16839)
!16940 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !16839)
!16941 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !16839)
!16942 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !16839)
!16943 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !16839)
!16944 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !16839)
!16945 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !16839)
!16946 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !16839)
!16947 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !16839)
!16948 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !16839)
!16949 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !16839)
!16950 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !16839)
!16951 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !16839)
!16952 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !16839)
!16953 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !16839)
!16954 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !16839)
!16955 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !16839)
!16956 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !16839)
!16957 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !16839)
!16958 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !16839)
!16959 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !16839)
!16960 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !16839)
!16961 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !16839)
!16962 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !16839)
!16963 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !16839)
!16964 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !16839)
!16965 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !16839)
!16966 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !16839)
!16967 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !16839)
!16968 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !16839)
!16969 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !16839)
!16970 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !16839)
!16971 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !16839)
!16972 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !16839)
!16973 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !16839)
!16974 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !16839)
!16975 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !16839)
!16976 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !16839)
!16977 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !16839)
!16978 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !16839)
!16979 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !16839)
!16980 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !16839)
!16981 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !16839)
!16982 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !16839)
!16983 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !16839)
!16984 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !16839)
!16985 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !16839)
!16986 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !16839)
!16987 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !16839)
!16988 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !16839)
!16989 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !16839)
!16990 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !16839)
!16991 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !16839)
!16992 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !16839)
!16993 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !16839)
!16994 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !16839)
!16995 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !16839)
!16996 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !16839)
!16997 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !16839)
!16998 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !16839)
!16999 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !16839)
!17000 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !16839)
!17001 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !16839)
!17002 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !16839)
!17003 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !16839)
!17004 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !16839)
!17005 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !16832)
!17006 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !16832)
!17007 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !16832)
!17008 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !16832)
!17009 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !16832)
!17010 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !16837)
!17011 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !16837)
!17012 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !16837)
!17013 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !16837)
!17014 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !16837)
!17015 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !16837)
!17016 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !16837)
!17017 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !16832)
!17018 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !16832)
!17019 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !16832)
!17020 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !16832)
!17021 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !16831)
!17022 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !16831)
!17023 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !16831)
!17024 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !16831)
!17025 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !16831)
!17026 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !16831)
!17027 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !16831)
!17028 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !16831)
!17029 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !16831)
!17030 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !16831)
!17031 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !16832)
!17032 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !16832)
!17033 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !16832)
!17034 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !16832)
!17035 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !16832)
!17036 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !16832)
!17037 = !DILocation(line: 1477, column: 10, scope: !16827)
!17038 = !DILocation(line: 1478, column: 7, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !16827, file: !3, line: 1478, column: 6)
!17040 = !DILocation(line: 1478, column: 6, scope: !16827)
!17041 = !DILocation(line: 1479, column: 3, scope: !17039)
!17042 = !DILocation(line: 1481, column: 22, scope: !16827)
!17043 = !DILocation(line: 1481, column: 31, scope: !16827)
!17044 = !DILocation(line: 1481, column: 2, scope: !16827)
!17045 = !DILocation(line: 1482, column: 9, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !16827, file: !3, line: 1482, column: 2)
!17047 = !DILocation(line: 1482, column: 7, scope: !17046)
!17048 = !DILocation(line: 1482, column: 14, scope: !17049)
!17049 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 1482, column: 2)
!17050 = !DILocation(line: 1482, column: 39, scope: !17049)
!17051 = !DILocation(line: 1482, column: 49, scope: !17049)
!17052 = !DILocation(line: 1482, column: 18, scope: !17049)
!17053 = !DILocation(line: 1482, column: 16, scope: !17049)
!17054 = !DILocation(line: 1482, column: 2, scope: !17046)
!17055 = !DILocation(line: 1483, column: 7, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17057, file: !3, line: 1483, column: 7)
!17057 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 1482, column: 61)
!17058 = !DILocation(line: 1483, column: 17, scope: !17056)
!17059 = !DILocation(line: 1483, column: 23, scope: !17056)
!17060 = !DILocation(line: 1483, column: 7, scope: !17057)
!17061 = !DILocation(line: 1484, column: 33, scope: !17056)
!17062 = !DILocation(line: 1484, column: 42, scope: !17056)
!17063 = !DILocation(line: 1484, column: 4, scope: !17056)
!17064 = !DILocation(line: 1485, column: 2, scope: !17057)
!17065 = !DILocation(line: 1482, column: 57, scope: !17049)
!17066 = !DILocation(line: 1482, column: 2, scope: !17049)
!17067 = distinct !{!17067, !17054, !17068}
!17068 = !DILocation(line: 1485, column: 2, scope: !17046)
!17069 = !DILocation(line: 1487, column: 31, scope: !16827)
!17070 = !DILocation(line: 1488, column: 31, scope: !16827)
!17071 = !DILocation(line: 1488, column: 10, scope: !16827)
!17072 = !DILocation(line: 1487, column: 2, scope: !16827)
!17073 = !DILocation(line: 1490, column: 2, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !16827, file: !3, line: 1490, column: 2)
!17075 = !DILocation(line: 1490, column: 2, scope: !17076)
!17076 = distinct !DILexicalBlock(scope: !17074, file: !3, line: 1490, column: 2)
!17077 = !DILocation(line: 1491, column: 27, scope: !17076)
!17078 = !DILocation(line: 1491, column: 36, scope: !17076)
!17079 = !DILocation(line: 1491, column: 3, scope: !17076)
!17080 = distinct !{!17080, !17073, !17081}
!17081 = !DILocation(line: 1491, column: 40, scope: !17074)
!17082 = !DILocation(line: 1493, column: 26, scope: !16827)
!17083 = !DILocation(line: 1493, column: 56, scope: !16827)
!17084 = !DILocation(line: 1493, column: 35, scope: !16827)
!17085 = !DILocation(line: 1494, column: 5, scope: !16827)
!17086 = !DILocation(line: 1493, column: 2, scope: !16827)
!17087 = !DILocation(line: 1496, column: 24, scope: !16827)
!17088 = !DILocation(line: 1496, column: 34, scope: !16827)
!17089 = !DILocation(line: 1496, column: 57, scope: !16827)
!17090 = !DILocation(line: 1496, column: 8, scope: !16827)
!17091 = !DILocation(line: 1496, column: 6, scope: !16827)
!17092 = !DILocation(line: 1497, column: 8, scope: !16827)
!17093 = !DILocation(line: 1497, column: 2, scope: !16827)
!17094 = !DILocation(line: 1498, column: 9, scope: !16827)
!17095 = !DILocation(line: 1498, column: 2, scope: !16827)
!17096 = !DILocation(line: 1499, column: 1, scope: !16827)
!17097 = distinct !DISubprogram(name: "set_bit", scope: !14319, file: !14319, line: 26, type: !14320, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17098 = !DILocalVariable(name: "nr", arg: 1, scope: !17099, file: !13428, line: 52, type: !669)
!17099 = distinct !DISubprogram(name: "arch_set_bit", scope: !13428, file: !13428, line: 52, type: !14320, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17100 = !DILocation(line: 52, column: 19, scope: !17099, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 29, column: 2, scope: !17097)
!17102 = !DILocalVariable(name: "addr", arg: 2, scope: !17099, file: !13428, line: 52, type: !14322)
!17103 = !DILocation(line: 52, column: 47, scope: !17099, inlinedAt: !17101)
!17104 = !DILocation(line: 84, column: 74, scope: !14330, inlinedAt: !17105)
!17105 = distinct !DILocation(line: 28, column: 2, scope: !17097)
!17106 = !DILocation(line: 84, column: 84, scope: !14330, inlinedAt: !17105)
!17107 = !DILocalVariable(name: "nr", arg: 1, scope: !17097, file: !14319, line: 26, type: !669)
!17108 = !DILocation(line: 26, column: 33, scope: !17097)
!17109 = !DILocalVariable(name: "addr", arg: 2, scope: !17097, file: !14319, line: 26, type: !14322)
!17110 = !DILocation(line: 26, column: 61, scope: !17097)
!17111 = !DILocation(line: 28, column: 26, scope: !17097)
!17112 = !DILocation(line: 28, column: 33, scope: !17097)
!17113 = !DILocation(line: 28, column: 31, scope: !17097)
!17114 = !DILocation(line: 86, column: 20, scope: !14330, inlinedAt: !17105)
!17115 = !DILocation(line: 86, column: 23, scope: !14330, inlinedAt: !17105)
!17116 = !DILocation(line: 86, column: 2, scope: !14330, inlinedAt: !17105)
!17117 = !DILocation(line: 87, column: 2, scope: !14330, inlinedAt: !17105)
!17118 = !DILocation(line: 29, column: 15, scope: !17097)
!17119 = !DILocation(line: 29, column: 19, scope: !17097)
!17120 = !DILocation(line: 54, column: 27, scope: !17121, inlinedAt: !17101)
!17121 = distinct !DILexicalBlock(scope: !17099, file: !13428, line: 54, column: 6)
!17122 = !DILocation(line: 54, column: 6, scope: !17121, inlinedAt: !17101)
!17123 = !DILocation(line: 54, column: 6, scope: !17099, inlinedAt: !17101)
!17124 = !DILocation(line: 56, column: 6, scope: !17125, inlinedAt: !17101)
!17125 = distinct !DILexicalBlock(scope: !17121, file: !13428, line: 54, column: 32)
!17126 = !DILocation(line: 57, column: 12, scope: !17125, inlinedAt: !17101)
!17127 = !DILocation(line: 55, column: 3, scope: !17125, inlinedAt: !17101)
!17128 = !{i32 -2147116664}
!17129 = !DILocation(line: 59, column: 2, scope: !17125, inlinedAt: !17101)
!17130 = !DILocation(line: 61, column: 8, scope: !17131, inlinedAt: !17101)
!17131 = distinct !DILexicalBlock(scope: !17121, file: !13428, line: 59, column: 9)
!17132 = !DILocation(line: 61, column: 32, scope: !17131, inlinedAt: !17101)
!17133 = !DILocation(line: 60, column: 3, scope: !17131, inlinedAt: !17101)
!17134 = !{i32 -2147116532}
!17135 = !DILocation(line: 30, column: 1, scope: !17097)
!17136 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_get_ports_bitmap", scope: !3, file: !3, line: 1533, type: !17137, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17137 = !DISubroutineType(types: !17138)
!17138 = !{null, !10421, !10389, !2608}
!17139 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !17136, file: !3, line: 1533, type: !10421)
!17140 = !DILocation(line: 1533, column: 56, scope: !17136)
!17141 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !17136, file: !3, line: 1534, type: !10389)
!17142 = !DILocation(line: 1534, column: 40, scope: !17136)
!17143 = !DILocalVariable(name: "ports_bitmap", arg: 3, scope: !17136, file: !3, line: 1535, type: !2608)
!17144 = !DILocation(line: 1535, column: 26, scope: !17136)
!17145 = !DILocalVariable(name: "mlxsw_sp_port", scope: !17136, file: !3, line: 1537, type: !10406)
!17146 = !DILocation(line: 1537, column: 24, scope: !17136)
!17147 = !DILocalVariable(name: "max_lag_members", scope: !17136, file: !3, line: 1538, type: !492)
!17148 = !DILocation(line: 1538, column: 6, scope: !17136)
!17149 = !DILocalVariable(name: "i", scope: !17136, file: !3, line: 1538, type: !492)
!17150 = !DILocation(line: 1538, column: 23, scope: !17136)
!17151 = !DILocalVariable(name: "lag_id", scope: !17136, file: !3, line: 1539, type: !7)
!17152 = !DILocation(line: 1539, column: 6, scope: !17136)
!17153 = !DILocation(line: 1541, column: 7, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17136, file: !3, line: 1541, column: 6)
!17155 = !DILocation(line: 1541, column: 20, scope: !17154)
!17156 = !DILocation(line: 1541, column: 6, scope: !17136)
!17157 = !DILocation(line: 1542, column: 11, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17154, file: !3, line: 1541, column: 28)
!17159 = !DILocation(line: 1542, column: 24, scope: !17158)
!17160 = !DILocation(line: 1542, column: 37, scope: !17158)
!17161 = !DILocation(line: 1542, column: 3, scope: !17158)
!17162 = !DILocation(line: 1543, column: 2, scope: !17158)
!17163 = !DILocation(line: 1544, column: 21, scope: !17164)
!17164 = distinct !DILexicalBlock(scope: !17154, file: !3, line: 1543, column: 9)
!17165 = !DILocation(line: 1544, column: 19, scope: !17164)
!17166 = !DILocation(line: 1546, column: 12, scope: !17164)
!17167 = !DILocation(line: 1546, column: 25, scope: !17164)
!17168 = !DILocation(line: 1546, column: 10, scope: !17164)
!17169 = !DILocation(line: 1547, column: 10, scope: !17170)
!17170 = distinct !DILexicalBlock(scope: !17164, file: !3, line: 1547, column: 3)
!17171 = !DILocation(line: 1547, column: 8, scope: !17170)
!17172 = !DILocation(line: 1547, column: 15, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17170, file: !3, line: 1547, column: 3)
!17174 = !DILocation(line: 1547, column: 19, scope: !17173)
!17175 = !DILocation(line: 1547, column: 17, scope: !17173)
!17176 = !DILocation(line: 1547, column: 3, scope: !17170)
!17177 = !DILocation(line: 1548, column: 45, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17173, file: !3, line: 1547, column: 41)
!17179 = !DILocation(line: 1549, column: 10, scope: !17178)
!17180 = !DILocation(line: 1549, column: 18, scope: !17178)
!17181 = !DILocation(line: 1548, column: 20, scope: !17178)
!17182 = !DILocation(line: 1548, column: 18, scope: !17178)
!17183 = !DILocation(line: 1550, column: 8, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17178, file: !3, line: 1550, column: 8)
!17185 = !DILocation(line: 1550, column: 8, scope: !17178)
!17186 = !DILocation(line: 1551, column: 13, scope: !17184)
!17187 = !DILocation(line: 1551, column: 28, scope: !17184)
!17188 = !DILocation(line: 1552, column: 6, scope: !17184)
!17189 = !DILocation(line: 1551, column: 5, scope: !17184)
!17190 = !DILocation(line: 1553, column: 3, scope: !17178)
!17191 = !DILocation(line: 1547, column: 37, scope: !17173)
!17192 = !DILocation(line: 1547, column: 3, scope: !17173)
!17193 = distinct !{!17193, !17176, !17194}
!17194 = !DILocation(line: 1553, column: 3, scope: !17170)
!17195 = !DILocation(line: 1555, column: 1, scope: !17136)
!17196 = distinct !DISubprogram(name: "mlxsw_sp_port_lagged_get", scope: !10053, file: !10053, line: 394, type: !17197, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17197 = !DISubroutineType(types: !17198)
!17198 = !{!10406, !10421, !1192, !1551}
!17199 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !17196, file: !10053, line: 394, type: !10421)
!17200 = !DILocation(line: 394, column: 43, scope: !17196)
!17201 = !DILocalVariable(name: "lag_id", arg: 2, scope: !17196, file: !10053, line: 394, type: !1192)
!17202 = !DILocation(line: 394, column: 57, scope: !17196)
!17203 = !DILocalVariable(name: "port_index", arg: 3, scope: !17196, file: !10053, line: 394, type: !1551)
!17204 = !DILocation(line: 394, column: 68, scope: !17196)
!17205 = !DILocalVariable(name: "mlxsw_sp_port", scope: !17196, file: !10053, line: 396, type: !10406)
!17206 = !DILocation(line: 396, column: 24, scope: !17196)
!17207 = !DILocalVariable(name: "local_port", scope: !17196, file: !10053, line: 397, type: !1551)
!17208 = !DILocation(line: 397, column: 5, scope: !17196)
!17209 = !DILocation(line: 399, column: 42, scope: !17196)
!17210 = !DILocation(line: 399, column: 52, scope: !17196)
!17211 = !DILocation(line: 400, column: 7, scope: !17196)
!17212 = !DILocation(line: 400, column: 15, scope: !17196)
!17213 = !DILocation(line: 399, column: 15, scope: !17196)
!17214 = !DILocation(line: 399, column: 13, scope: !17196)
!17215 = !DILocation(line: 401, column: 18, scope: !17196)
!17216 = !DILocation(line: 401, column: 28, scope: !17196)
!17217 = !DILocation(line: 401, column: 34, scope: !17196)
!17218 = !DILocation(line: 401, column: 16, scope: !17196)
!17219 = !DILocation(line: 402, column: 9, scope: !17196)
!17220 = !DILocation(line: 402, column: 23, scope: !17196)
!17221 = !DILocation(line: 402, column: 26, scope: !17196)
!17222 = !DILocation(line: 402, column: 41, scope: !17196)
!17223 = !DILocation(line: 402, column: 50, scope: !17196)
!17224 = !DILocation(line: 402, column: 2, scope: !17196)
!17225 = distinct !DISubprogram(name: "mlxsw_sp_bridge_mrouter_update_mdb", scope: !3, file: !3, line: 861, type: !17226, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17226 = !DISubroutineType(types: !17227)
!17227 = !{null, !10421, !10370, !696}
!17228 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !17225, file: !3, line: 861, type: !10421)
!17229 = !DILocation(line: 861, column: 53, scope: !17225)
!17230 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !17225, file: !3, line: 862, type: !10370)
!17231 = !DILocation(line: 862, column: 39, scope: !17225)
!17232 = !DILocalVariable(name: "add", arg: 3, scope: !17225, file: !3, line: 863, type: !696)
!17233 = !DILocation(line: 863, column: 13, scope: !17225)
!17234 = !DILocalVariable(name: "mid", scope: !17225, file: !3, line: 865, type: !11215)
!17235 = !DILocation(line: 865, column: 23, scope: !17225)
!17236 = !DILocalVariable(name: "__mptr", scope: !17237, file: !3, line: 867, type: !726)
!17237 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 867, column: 2)
!17238 = distinct !DILexicalBlock(scope: !17225, file: !3, line: 867, column: 2)
!17239 = !DILocation(line: 867, column: 2, scope: !17237)
!17240 = !DILocation(line: 867, column: 2, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17237, file: !3, line: 867, column: 2)
!17242 = !DILocation(line: 867, column: 2, scope: !17238)
!17243 = !DILocation(line: 867, column: 2, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 867, column: 2)
!17245 = !DILocation(line: 868, column: 33, scope: !17244)
!17246 = !DILocation(line: 868, column: 43, scope: !17244)
!17247 = !DILocation(line: 868, column: 48, scope: !17244)
!17248 = !DILocation(line: 868, column: 53, scope: !17244)
!17249 = !DILocation(line: 868, column: 3, scope: !17244)
!17250 = !DILocalVariable(name: "__mptr", scope: !17251, file: !3, line: 867, type: !726)
!17251 = distinct !DILexicalBlock(scope: !17244, file: !3, line: 867, column: 2)
!17252 = !DILocation(line: 867, column: 2, scope: !17251)
!17253 = !DILocation(line: 867, column: 2, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17251, file: !3, line: 867, column: 2)
!17255 = distinct !{!17255, !17242, !17256}
!17256 = !DILocation(line: 868, column: 56, scope: !17238)
!17257 = !DILocation(line: 869, column: 1, scope: !17225)
!17258 = distinct !DISubprogram(name: "mlxsw_sp_smid_router_port_set", scope: !3, file: !3, line: 843, type: !17259, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17259 = !DISubroutineType(types: !17260)
!17260 = !{!7, !10421, !1192, !696}
!17261 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 849, column: 12, scope: !17258)
!17264 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !17262)
!17265 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !17262)
!17266 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !17262)
!17267 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !17268)
!17268 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !17263)
!17269 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !17263)
!17271 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !17263)
!17274 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !17272)
!17275 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !17272)
!17276 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !17273)
!17277 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !17273)
!17278 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !17273)
!17279 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !17263)
!17280 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !17263)
!17281 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !17263)
!17282 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !17258, file: !3, line: 843, type: !10421)
!17283 = !DILocation(line: 843, column: 59, scope: !17258)
!17284 = !DILocalVariable(name: "mid_idx", arg: 2, scope: !17258, file: !3, line: 844, type: !1192)
!17285 = !DILocation(line: 844, column: 11, scope: !17258)
!17286 = !DILocalVariable(name: "add", arg: 3, scope: !17258, file: !3, line: 844, type: !696)
!17287 = !DILocation(line: 844, column: 25, scope: !17258)
!17288 = !DILocalVariable(name: "smid_pl", scope: !17258, file: !3, line: 846, type: !733)
!17289 = !DILocation(line: 846, column: 8, scope: !17258)
!17290 = !DILocalVariable(name: "err", scope: !17258, file: !3, line: 847, type: !7)
!17291 = !DILocation(line: 847, column: 6, scope: !17258)
!17292 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !17263)
!17293 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !17263)
!17294 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !17263)
!17295 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !17263)
!17296 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !17263)
!17297 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !17263)
!17298 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !17263)
!17299 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !17263)
!17300 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !17273)
!17301 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !17273)
!17302 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !17273)
!17303 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !17273)
!17304 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !17273)
!17305 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !17272)
!17306 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !17272)
!17307 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !17272)
!17308 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !17272)
!17309 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !17263)
!17310 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !17263)
!17311 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !17270)
!17312 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !17270)
!17313 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !17270)
!17314 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !17270)
!17315 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !17270)
!17316 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !17270)
!17317 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !17270)
!17318 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !17270)
!17319 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !17270)
!17320 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !17270)
!17321 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !17270)
!17322 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !17270)
!17323 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !17270)
!17324 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !17270)
!17325 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !17270)
!17326 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !17270)
!17327 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !17270)
!17328 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !17270)
!17329 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !17270)
!17330 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !17270)
!17331 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !17270)
!17332 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !17270)
!17333 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !17270)
!17334 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !17270)
!17335 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !17270)
!17336 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !17270)
!17337 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !17270)
!17338 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !17270)
!17339 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !17270)
!17340 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !17270)
!17341 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !17270)
!17342 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !17270)
!17343 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !17270)
!17344 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !17270)
!17345 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !17270)
!17346 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !17270)
!17347 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !17270)
!17348 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !17270)
!17349 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !17270)
!17350 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !17270)
!17351 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !17270)
!17352 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !17270)
!17353 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !17270)
!17354 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !17270)
!17355 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !17270)
!17356 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !17270)
!17357 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !17270)
!17358 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !17270)
!17359 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !17270)
!17360 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !17270)
!17361 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !17270)
!17362 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !17270)
!17363 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !17270)
!17364 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !17270)
!17365 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !17270)
!17366 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !17270)
!17367 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !17270)
!17368 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !17270)
!17369 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !17270)
!17370 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !17270)
!17371 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !17270)
!17372 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !17270)
!17373 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !17270)
!17374 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !17270)
!17375 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !17270)
!17376 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !17270)
!17377 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !17270)
!17378 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !17270)
!17379 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !17270)
!17380 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !17270)
!17381 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !17270)
!17382 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !17270)
!17383 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !17270)
!17384 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !17270)
!17385 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !17270)
!17386 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !17270)
!17387 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !17270)
!17388 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !17270)
!17389 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !17270)
!17390 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !17270)
!17391 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !17270)
!17392 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !17270)
!17393 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !17270)
!17394 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !17270)
!17395 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !17270)
!17396 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !17270)
!17397 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !17270)
!17398 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !17270)
!17399 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !17270)
!17400 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !17270)
!17401 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !17270)
!17402 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !17270)
!17403 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !17270)
!17404 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !17270)
!17405 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !17270)
!17406 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !17270)
!17407 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !17270)
!17408 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !17270)
!17409 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !17270)
!17410 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !17270)
!17411 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !17270)
!17412 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !17270)
!17413 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !17270)
!17414 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !17270)
!17415 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !17270)
!17416 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !17270)
!17417 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !17270)
!17418 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !17270)
!17419 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !17270)
!17420 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !17270)
!17421 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !17270)
!17422 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !17270)
!17423 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !17270)
!17424 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !17270)
!17425 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !17270)
!17426 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !17270)
!17427 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !17270)
!17428 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !17270)
!17429 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !17270)
!17430 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !17270)
!17431 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !17270)
!17432 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !17263)
!17433 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !17263)
!17434 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !17263)
!17435 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !17263)
!17436 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !17263)
!17437 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !17268)
!17438 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !17268)
!17439 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !17268)
!17440 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !17268)
!17441 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !17268)
!17442 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !17268)
!17443 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !17268)
!17444 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !17263)
!17445 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !17263)
!17446 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !17263)
!17447 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !17263)
!17448 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !17262)
!17449 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !17262)
!17450 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !17262)
!17451 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !17262)
!17452 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !17262)
!17453 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !17262)
!17454 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !17262)
!17455 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !17262)
!17456 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !17262)
!17457 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !17262)
!17458 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !17263)
!17459 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !17263)
!17460 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !17263)
!17461 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !17263)
!17462 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !17263)
!17463 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !17263)
!17464 = !DILocation(line: 849, column: 10, scope: !17258)
!17465 = !DILocation(line: 850, column: 7, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17258, file: !3, line: 850, column: 6)
!17467 = !DILocation(line: 850, column: 6, scope: !17258)
!17468 = !DILocation(line: 851, column: 3, scope: !17466)
!17469 = !DILocation(line: 853, column: 22, scope: !17258)
!17470 = !DILocation(line: 853, column: 31, scope: !17258)
!17471 = !DILocation(line: 854, column: 29, scope: !17258)
!17472 = !DILocation(line: 854, column: 8, scope: !17258)
!17473 = !DILocation(line: 854, column: 40, scope: !17258)
!17474 = !DILocation(line: 853, column: 2, scope: !17258)
!17475 = !DILocation(line: 855, column: 24, scope: !17258)
!17476 = !DILocation(line: 855, column: 34, scope: !17258)
!17477 = !DILocation(line: 855, column: 57, scope: !17258)
!17478 = !DILocation(line: 855, column: 8, scope: !17258)
!17479 = !DILocation(line: 855, column: 6, scope: !17258)
!17480 = !DILocation(line: 856, column: 8, scope: !17258)
!17481 = !DILocation(line: 856, column: 2, scope: !17258)
!17482 = !DILocation(line: 857, column: 9, scope: !17258)
!17483 = !DILocation(line: 857, column: 2, scope: !17258)
!17484 = !DILocation(line: 858, column: 1, scope: !17258)
!17485 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_bridge_nve_fdb_event", scope: !3, file: !3, line: 2793, type: !17486, scopeLine: 2795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17486 = !DISubroutineType(types: !17487)
!17487 = !{null, !11239}
!17488 = !DILocalVariable(name: "switchdev_work", arg: 1, scope: !17485, file: !3, line: 2794, type: !11239)
!17489 = !DILocation(line: 2794, column: 6, scope: !17485)
!17490 = !DILocalVariable(name: "bridge_device", scope: !17485, file: !3, line: 2796, type: !10370)
!17491 = !DILocation(line: 2796, column: 33, scope: !17485)
!17492 = !DILocalVariable(name: "dev", scope: !17485, file: !3, line: 2797, type: !451)
!17493 = !DILocation(line: 2797, column: 21, scope: !17485)
!17494 = !DILocation(line: 2797, column: 27, scope: !17485)
!17495 = !DILocation(line: 2797, column: 43, scope: !17485)
!17496 = !DILocalVariable(name: "br_dev", scope: !17485, file: !3, line: 2798, type: !451)
!17497 = !DILocation(line: 2798, column: 21, scope: !17485)
!17498 = !DILocalVariable(name: "mlxsw_sp", scope: !17485, file: !3, line: 2799, type: !10421)
!17499 = !DILocation(line: 2799, column: 19, scope: !17485)
!17500 = !DILocalVariable(name: "fid", scope: !17485, file: !3, line: 2800, type: !11097)
!17501 = !DILocation(line: 2800, column: 23, scope: !17485)
!17502 = !DILocalVariable(name: "vni", scope: !17485, file: !3, line: 2801, type: !622)
!17503 = !DILocation(line: 2801, column: 9, scope: !17485)
!17504 = !DILocalVariable(name: "err", scope: !17485, file: !3, line: 2802, type: !7)
!17505 = !DILocation(line: 2802, column: 6, scope: !17485)
!17506 = !DILocation(line: 2804, column: 6, scope: !17507)
!17507 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2804, column: 6)
!17508 = !DILocation(line: 2804, column: 22, scope: !17507)
!17509 = !DILocation(line: 2804, column: 28, scope: !17507)
!17510 = !DILocation(line: 2804, column: 59, scope: !17507)
!17511 = !DILocation(line: 2805, column: 6, scope: !17507)
!17512 = !DILocation(line: 2805, column: 22, scope: !17507)
!17513 = !DILocation(line: 2805, column: 28, scope: !17507)
!17514 = !DILocation(line: 2804, column: 6, scope: !17485)
!17515 = !DILocation(line: 2806, column: 3, scope: !17507)
!17516 = !DILocation(line: 2808, column: 6, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2808, column: 6)
!17518 = !DILocation(line: 2808, column: 22, scope: !17517)
!17519 = !DILocation(line: 2808, column: 28, scope: !17517)
!17520 = !DILocation(line: 2808, column: 59, scope: !17517)
!17521 = !DILocation(line: 2809, column: 7, scope: !17517)
!17522 = !DILocation(line: 2809, column: 23, scope: !17517)
!17523 = !DILocation(line: 2809, column: 32, scope: !17517)
!17524 = !DILocation(line: 2808, column: 6, scope: !17485)
!17525 = !DILocation(line: 2810, column: 3, scope: !17517)
!17526 = !DILocation(line: 2812, column: 21, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2812, column: 6)
!17528 = !DILocation(line: 2812, column: 7, scope: !17527)
!17529 = !DILocation(line: 2812, column: 6, scope: !17485)
!17530 = !DILocation(line: 2813, column: 3, scope: !17527)
!17531 = !DILocation(line: 2814, column: 39, scope: !17485)
!17532 = !DILocation(line: 2814, column: 11, scope: !17485)
!17533 = !DILocation(line: 2814, column: 9, scope: !17485)
!17534 = !DILocation(line: 2815, column: 7, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2815, column: 6)
!17536 = !DILocation(line: 2815, column: 6, scope: !17485)
!17537 = !DILocation(line: 2816, column: 3, scope: !17535)
!17538 = !DILocation(line: 2817, column: 30, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2817, column: 6)
!17540 = !DILocation(line: 2817, column: 7, scope: !17539)
!17541 = !DILocation(line: 2817, column: 6, scope: !17485)
!17542 = !DILocation(line: 2818, column: 3, scope: !17539)
!17543 = !DILocation(line: 2819, column: 32, scope: !17485)
!17544 = !DILocation(line: 2819, column: 13, scope: !17485)
!17545 = !DILocation(line: 2819, column: 11, scope: !17485)
!17546 = !DILocation(line: 2820, column: 7, scope: !17547)
!17547 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2820, column: 6)
!17548 = !DILocation(line: 2820, column: 6, scope: !17485)
!17549 = !DILocation(line: 2821, column: 3, scope: !17547)
!17550 = !DILocation(line: 2822, column: 46, scope: !17485)
!17551 = !DILocation(line: 2822, column: 56, scope: !17485)
!17552 = !DILocation(line: 2822, column: 64, scope: !17485)
!17553 = !DILocation(line: 2822, column: 18, scope: !17485)
!17554 = !DILocation(line: 2822, column: 16, scope: !17485)
!17555 = !DILocation(line: 2823, column: 7, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2823, column: 6)
!17557 = !DILocation(line: 2823, column: 6, scope: !17485)
!17558 = !DILocation(line: 2824, column: 3, scope: !17556)
!17559 = !DILocation(line: 2826, column: 8, scope: !17485)
!17560 = !DILocation(line: 2826, column: 23, scope: !17485)
!17561 = !DILocation(line: 2826, column: 28, scope: !17485)
!17562 = !DILocation(line: 2826, column: 39, scope: !17485)
!17563 = !DILocation(line: 2827, column: 11, scope: !17485)
!17564 = !DILocation(line: 2827, column: 27, scope: !17485)
!17565 = !DILocation(line: 2827, column: 36, scope: !17485)
!17566 = !DILocation(line: 2826, column: 6, scope: !17485)
!17567 = !DILocation(line: 2828, column: 7, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2828, column: 6)
!17569 = !DILocation(line: 2828, column: 6, scope: !17485)
!17570 = !DILocation(line: 2829, column: 3, scope: !17568)
!17571 = !DILocation(line: 2831, column: 25, scope: !17485)
!17572 = !DILocation(line: 2831, column: 8, scope: !17485)
!17573 = !DILocation(line: 2831, column: 6, scope: !17485)
!17574 = !DILocation(line: 2832, column: 6, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 2832, column: 6)
!17576 = !DILocation(line: 2832, column: 6, scope: !17485)
!17577 = !DILocation(line: 2833, column: 3, scope: !17575)
!17578 = !DILocation(line: 2835, column: 44, scope: !17485)
!17579 = !DILocation(line: 2835, column: 54, scope: !17485)
!17580 = !DILocation(line: 2835, column: 70, scope: !17485)
!17581 = !DILocation(line: 2836, column: 9, scope: !17485)
!17582 = !DILocation(line: 2835, column: 2, scope: !17485)
!17583 = !DILabel(scope: !17485, name: "out", file: !3, line: 2838)
!17584 = !DILocation(line: 2838, column: 1, scope: !17485)
!17585 = !DILocation(line: 2839, column: 19, scope: !17485)
!17586 = !DILocation(line: 2839, column: 2, scope: !17485)
!17587 = !DILocation(line: 2840, column: 1, scope: !17485)
!17588 = distinct !DISubprogram(name: "mlxsw_sp_port_fdb_set", scope: !3, file: !3, line: 1407, type: !17589, scopeLine: 1409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17589 = !DISubroutineType(types: !17590)
!17590 = !{!7, !10406, !11227, !696}
!17591 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !17588, file: !3, line: 1407, type: !10406)
!17592 = !DILocation(line: 1407, column: 45, scope: !17588)
!17593 = !DILocalVariable(name: "fdb_info", arg: 2, scope: !17588, file: !3, line: 1408, type: !11227)
!17594 = !DILocation(line: 1408, column: 45, scope: !17588)
!17595 = !DILocalVariable(name: "adding", arg: 3, scope: !17588, file: !3, line: 1408, type: !696)
!17596 = !DILocation(line: 1408, column: 60, scope: !17588)
!17597 = !DILocalVariable(name: "mlxsw_sp", scope: !17588, file: !3, line: 1410, type: !10421)
!17598 = !DILocation(line: 1410, column: 19, scope: !17588)
!17599 = !DILocation(line: 1410, column: 30, scope: !17588)
!17600 = !DILocation(line: 1410, column: 45, scope: !17588)
!17601 = !DILocalVariable(name: "orig_dev", scope: !17588, file: !3, line: 1411, type: !451)
!17602 = !DILocation(line: 1411, column: 21, scope: !17588)
!17603 = !DILocation(line: 1411, column: 32, scope: !17588)
!17604 = !DILocation(line: 1411, column: 42, scope: !17588)
!17605 = !DILocation(line: 1411, column: 47, scope: !17588)
!17606 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !17588, file: !3, line: 1412, type: !11091)
!17607 = !DILocation(line: 1412, column: 29, scope: !17588)
!17608 = !DILocalVariable(name: "bridge_device", scope: !17588, file: !3, line: 1413, type: !10370)
!17609 = !DILocation(line: 1413, column: 33, scope: !17588)
!17610 = !DILocalVariable(name: "bridge_port", scope: !17588, file: !3, line: 1414, type: !10389)
!17611 = !DILocation(line: 1414, column: 31, scope: !17588)
!17612 = !DILocalVariable(name: "fid_index", scope: !17588, file: !3, line: 1415, type: !1192)
!17613 = !DILocation(line: 1415, column: 6, scope: !17588)
!17614 = !DILocalVariable(name: "vid", scope: !17588, file: !3, line: 1415, type: !1192)
!17615 = !DILocation(line: 1415, column: 17, scope: !17588)
!17616 = !DILocation(line: 1417, column: 42, scope: !17588)
!17617 = !DILocation(line: 1417, column: 52, scope: !17588)
!17618 = !DILocation(line: 1417, column: 60, scope: !17588)
!17619 = !DILocation(line: 1417, column: 16, scope: !17588)
!17620 = !DILocation(line: 1417, column: 14, scope: !17588)
!17621 = !DILocation(line: 1418, column: 7, scope: !17622)
!17622 = distinct !DILexicalBlock(scope: !17588, file: !3, line: 1418, column: 6)
!17623 = !DILocation(line: 1418, column: 6, scope: !17588)
!17624 = !DILocation(line: 1419, column: 3, scope: !17622)
!17625 = !DILocation(line: 1421, column: 18, scope: !17588)
!17626 = !DILocation(line: 1421, column: 31, scope: !17588)
!17627 = !DILocation(line: 1421, column: 16, scope: !17588)
!17628 = !DILocation(line: 1422, column: 57, scope: !17588)
!17629 = !DILocation(line: 1423, column: 15, scope: !17588)
!17630 = !DILocation(line: 1424, column: 15, scope: !17588)
!17631 = !DILocation(line: 1424, column: 25, scope: !17588)
!17632 = !DILocation(line: 1422, column: 23, scope: !17588)
!17633 = !DILocation(line: 1422, column: 21, scope: !17588)
!17634 = !DILocation(line: 1425, column: 7, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17588, file: !3, line: 1425, column: 6)
!17636 = !DILocation(line: 1425, column: 6, scope: !17588)
!17637 = !DILocation(line: 1426, column: 3, scope: !17635)
!17638 = !DILocation(line: 1428, column: 33, scope: !17588)
!17639 = !DILocation(line: 1428, column: 53, scope: !17588)
!17640 = !DILocation(line: 1428, column: 14, scope: !17588)
!17641 = !DILocation(line: 1428, column: 12, scope: !17588)
!17642 = !DILocation(line: 1429, column: 8, scope: !17588)
!17643 = !DILocation(line: 1429, column: 28, scope: !17588)
!17644 = !DILocation(line: 1429, column: 6, scope: !17588)
!17645 = !DILocation(line: 1431, column: 7, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17588, file: !3, line: 1431, column: 6)
!17647 = !DILocation(line: 1431, column: 20, scope: !17646)
!17648 = !DILocation(line: 1431, column: 6, scope: !17588)
!17649 = !DILocation(line: 1432, column: 34, scope: !17646)
!17650 = !DILocation(line: 1433, column: 13, scope: !17646)
!17651 = !DILocation(line: 1433, column: 26, scope: !17646)
!17652 = !DILocation(line: 1434, column: 13, scope: !17646)
!17653 = !DILocation(line: 1434, column: 23, scope: !17646)
!17654 = !DILocation(line: 1434, column: 29, scope: !17646)
!17655 = !DILocation(line: 1435, column: 13, scope: !17646)
!17656 = !DILocation(line: 1432, column: 10, scope: !17646)
!17657 = !DILocation(line: 1432, column: 3, scope: !17646)
!17658 = !DILocation(line: 1437, column: 38, scope: !17646)
!17659 = !DILocation(line: 1438, column: 10, scope: !17646)
!17660 = !DILocation(line: 1438, column: 23, scope: !17646)
!17661 = !DILocation(line: 1439, column: 10, scope: !17646)
!17662 = !DILocation(line: 1439, column: 20, scope: !17646)
!17663 = !DILocation(line: 1439, column: 26, scope: !17646)
!17664 = !DILocation(line: 1440, column: 10, scope: !17646)
!17665 = !DILocation(line: 1440, column: 15, scope: !17646)
!17666 = !DILocation(line: 1437, column: 10, scope: !17646)
!17667 = !DILocation(line: 1437, column: 3, scope: !17646)
!17668 = !DILocation(line: 1441, column: 1, scope: !17588)
!17669 = distinct !DISubprogram(name: "mlxsw_sp_fdb_call_notifiers", scope: !3, file: !3, line: 2397, type: !17670, scopeLine: 2400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17670 = !DISubroutineType(types: !17671)
!17671 = !{null, !10206, !453, !1192, !451, !696}
!17672 = !DILocalVariable(name: "type", arg: 1, scope: !17669, file: !3, line: 2397, type: !10206)
!17673 = !DILocation(line: 2397, column: 58, scope: !17669)
!17674 = !DILocalVariable(name: "mac", arg: 2, scope: !17669, file: !3, line: 2398, type: !453)
!17675 = !DILocation(line: 2398, column: 20, scope: !17669)
!17676 = !DILocalVariable(name: "vid", arg: 3, scope: !17669, file: !3, line: 2398, type: !1192)
!17677 = !DILocation(line: 2398, column: 29, scope: !17669)
!17678 = !DILocalVariable(name: "dev", arg: 4, scope: !17669, file: !3, line: 2399, type: !451)
!17679 = !DILocation(line: 2399, column: 27, scope: !17669)
!17680 = !DILocalVariable(name: "offloaded", arg: 5, scope: !17669, file: !3, line: 2399, type: !696)
!17681 = !DILocation(line: 2399, column: 37, scope: !17669)
!17682 = !DILocalVariable(name: "info", scope: !17669, file: !3, line: 2401, type: !11228)
!17683 = !DILocation(line: 2401, column: 37, scope: !17669)
!17684 = !DILocation(line: 2403, column: 14, scope: !17669)
!17685 = !DILocation(line: 2403, column: 7, scope: !17669)
!17686 = !DILocation(line: 2403, column: 12, scope: !17669)
!17687 = !DILocation(line: 2404, column: 13, scope: !17669)
!17688 = !DILocation(line: 2404, column: 7, scope: !17669)
!17689 = !DILocation(line: 2404, column: 11, scope: !17669)
!17690 = !DILocation(line: 2405, column: 19, scope: !17669)
!17691 = !DILocation(line: 2405, column: 7, scope: !17669)
!17692 = !DILocation(line: 2405, column: 17, scope: !17669)
!17693 = !DILocation(line: 2406, column: 27, scope: !17669)
!17694 = !DILocation(line: 2406, column: 33, scope: !17669)
!17695 = !DILocation(line: 2406, column: 44, scope: !17669)
!17696 = !DILocation(line: 2406, column: 2, scope: !17669)
!17697 = !DILocation(line: 2407, column: 1, scope: !17669)
!17698 = distinct !DISubprogram(name: "dev_put", scope: !6, file: !6, line: 3941, type: !567, scopeLine: 3942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17699 = !DILocalVariable(name: "dev", arg: 1, scope: !17698, file: !6, line: 3941, type: !451)
!17700 = !DILocation(line: 3941, column: 47, scope: !17698)
!17701 = !DILocation(line: 3943, column: 2, scope: !17698)
!17702 = !DILocation(line: 3943, column: 2, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17698, file: !6, line: 3943, column: 2)
!17704 = !DILocalVariable(name: "__vpp_verify", scope: !17705, file: !6, line: 3943, type: !2416)
!17705 = distinct !DILexicalBlock(scope: !17703, file: !6, line: 3943, column: 2)
!17706 = !DILocation(line: 3943, column: 2, scope: !17705)
!17707 = !DILocalVariable(name: "pao_ID__", scope: !17708, file: !6, line: 3943, type: !15567)
!17708 = distinct !DILexicalBlock(scope: !17703, file: !6, line: 3943, column: 2)
!17709 = !DILocation(line: 3943, column: 2, scope: !17708)
!17710 = !DILocation(line: 3943, column: 2, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17712, file: !6, line: 3943, column: 2)
!17712 = distinct !DILexicalBlock(scope: !17713, file: !6, line: 3943, column: 2)
!17713 = distinct !DILexicalBlock(scope: !17708, file: !6, line: 3943, column: 2)
!17714 = !{i32 -2140199191}
!17715 = !DILocation(line: 3944, column: 1, scope: !17698)
!17716 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_bridge_vxlan_fdb_event", scope: !3, file: !3, line: 2744, type: !17717, scopeLine: 2748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17717 = !DISubroutineType(types: !17718)
!17718 = !{null, !10421, !11239, !11097, !622}
!17719 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !17716, file: !3, line: 2744, type: !10421)
!17720 = !DILocation(line: 2744, column: 60, scope: !17716)
!17721 = !DILocalVariable(name: "switchdev_work", arg: 2, scope: !17716, file: !3, line: 2746, type: !11239)
!17722 = !DILocation(line: 2746, column: 8, scope: !17716)
!17723 = !DILocalVariable(name: "fid", arg: 3, scope: !17716, file: !3, line: 2747, type: !11097)
!17724 = !DILocation(line: 2747, column: 29, scope: !17716)
!17725 = !DILocalVariable(name: "vni", arg: 4, scope: !17716, file: !3, line: 2747, type: !622)
!17726 = !DILocation(line: 2747, column: 41, scope: !17716)
!17727 = !DILocalVariable(name: "vxlan_fdb_info", scope: !17716, file: !3, line: 2749, type: !11248)
!17728 = !DILocation(line: 2749, column: 43, scope: !17716)
!17729 = !DILocalVariable(name: "fdb_info", scope: !17716, file: !3, line: 2750, type: !11227)
!17730 = !DILocation(line: 2750, column: 38, scope: !17716)
!17731 = !DILocalVariable(name: "dev", scope: !17716, file: !3, line: 2751, type: !451)
!17732 = !DILocation(line: 2751, column: 21, scope: !17716)
!17733 = !DILocation(line: 2751, column: 27, scope: !17716)
!17734 = !DILocation(line: 2751, column: 43, scope: !17716)
!17735 = !DILocalVariable(name: "proto", scope: !17716, file: !3, line: 2752, type: !10057)
!17736 = !DILocation(line: 2752, column: 24, scope: !17716)
!17737 = !DILocalVariable(name: "addr", scope: !17716, file: !3, line: 2753, type: !10549)
!17738 = !DILocation(line: 2753, column: 24, scope: !17716)
!17739 = !DILocalVariable(name: "err", scope: !17716, file: !3, line: 2754, type: !7)
!17740 = !DILocation(line: 2754, column: 6, scope: !17716)
!17741 = !DILocation(line: 2756, column: 14, scope: !17716)
!17742 = !DILocation(line: 2756, column: 30, scope: !17716)
!17743 = !DILocation(line: 2756, column: 11, scope: !17716)
!17744 = !DILocation(line: 2757, column: 26, scope: !17716)
!17745 = !DILocation(line: 2757, column: 31, scope: !17716)
!17746 = !DILocation(line: 2757, column: 41, scope: !17716)
!17747 = !DILocation(line: 2757, column: 47, scope: !17716)
!17748 = !DILocation(line: 2757, column: 8, scope: !17716)
!17749 = !DILocation(line: 2757, column: 6, scope: !17716)
!17750 = !DILocation(line: 2758, column: 6, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17716, file: !3, line: 2758, column: 6)
!17752 = !DILocation(line: 2758, column: 6, scope: !17716)
!17753 = !DILocation(line: 2759, column: 3, scope: !17751)
!17754 = !DILocation(line: 2761, column: 56, scope: !17716)
!17755 = !DILocation(line: 2761, column: 2, scope: !17716)
!17756 = !DILocation(line: 2764, column: 10, scope: !17716)
!17757 = !DILocation(line: 2764, column: 26, scope: !17716)
!17758 = !DILocation(line: 2764, column: 2, scope: !17716)
!17759 = !DILocation(line: 2766, column: 40, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17716, file: !3, line: 2764, column: 33)
!17761 = !DILocation(line: 2767, column: 27, scope: !17760)
!17762 = !DILocation(line: 2767, column: 12, scope: !17760)
!17763 = !DILocation(line: 2768, column: 31, scope: !17760)
!17764 = !DILocation(line: 2768, column: 12, scope: !17760)
!17765 = !DILocation(line: 2769, column: 12, scope: !17760)
!17766 = !DILocation(line: 2766, column: 9, scope: !17760)
!17767 = !DILocation(line: 2766, column: 7, scope: !17760)
!17768 = !DILocation(line: 2770, column: 7, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17760, file: !3, line: 2770, column: 7)
!17770 = !DILocation(line: 2770, column: 7, scope: !17760)
!17771 = !DILocation(line: 2771, column: 4, scope: !17769)
!17772 = !DILocation(line: 2772, column: 18, scope: !17760)
!17773 = !DILocation(line: 2772, column: 28, scope: !17760)
!17774 = !DILocation(line: 2773, column: 59, scope: !17760)
!17775 = !DILocation(line: 2774, column: 23, scope: !17760)
!17776 = !DILocation(line: 2773, column: 3, scope: !17760)
!17777 = !DILocation(line: 2776, column: 25, scope: !17760)
!17778 = !DILocation(line: 2776, column: 10, scope: !17760)
!17779 = !DILocation(line: 2777, column: 10, scope: !17760)
!17780 = !DILocation(line: 2777, column: 20, scope: !17760)
!17781 = !DILocation(line: 2777, column: 25, scope: !17760)
!17782 = !DILocation(line: 2775, column: 3, scope: !17760)
!17783 = !DILocation(line: 2778, column: 3, scope: !17760)
!17784 = !DILocation(line: 2780, column: 40, scope: !17760)
!17785 = !DILocation(line: 2781, column: 27, scope: !17760)
!17786 = !DILocation(line: 2781, column: 12, scope: !17760)
!17787 = !DILocation(line: 2782, column: 31, scope: !17760)
!17788 = !DILocation(line: 2782, column: 12, scope: !17760)
!17789 = !DILocation(line: 2783, column: 12, scope: !17760)
!17790 = !DILocation(line: 2780, column: 9, scope: !17760)
!17791 = !DILocation(line: 2780, column: 7, scope: !17760)
!17792 = !DILocation(line: 2785, column: 18, scope: !17760)
!17793 = !DILocation(line: 2785, column: 28, scope: !17760)
!17794 = !DILocation(line: 2786, column: 59, scope: !17760)
!17795 = !DILocation(line: 2787, column: 23, scope: !17760)
!17796 = !DILocation(line: 2786, column: 3, scope: !17760)
!17797 = !DILocation(line: 2788, column: 3, scope: !17760)
!17798 = !DILocation(line: 2790, column: 1, scope: !17716)
!17799 = distinct !DISubprogram(name: "vxlan_fdb_find_uc", scope: !11249, file: !11249, line: 444, type: !17800, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17800 = !DISubroutineType(types: !17801)
!17801 = !{!7, !451, !8639, !622, !11288}
!17802 = !DILocalVariable(name: "dev", arg: 1, scope: !17799, file: !11249, line: 444, type: !451)
!17803 = !DILocation(line: 444, column: 38, scope: !17799)
!17804 = !DILocalVariable(name: "mac", arg: 2, scope: !17799, file: !11249, line: 444, type: !8639)
!17805 = !DILocation(line: 444, column: 53, scope: !17799)
!17806 = !DILocalVariable(name: "vni", arg: 3, scope: !17799, file: !11249, line: 444, type: !622)
!17807 = !DILocation(line: 444, column: 65, scope: !17799)
!17808 = !DILocalVariable(name: "fdb_info", arg: 4, scope: !17799, file: !11249, line: 445, type: !11288)
!17809 = !DILocation(line: 445, column: 47, scope: !17799)
!17810 = !DILocation(line: 447, column: 2, scope: !17799)
!17811 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_addr_convert", scope: !3, file: !3, line: 2332, type: !17812, scopeLine: 2335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17812 = !DISubroutineType(types: !17813)
!17813 = !{null, !17814, !17816, !17817}
!17814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17815, size: 64)
!17815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11253)
!17816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10057, size: 64)
!17817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10549, size: 64)
!17818 = !DILocalVariable(name: "vxlan_addr", arg: 1, scope: !17811, file: !3, line: 2332, type: !17814)
!17819 = !DILocation(line: 2332, column: 63, scope: !17811)
!17820 = !DILocalVariable(name: "proto", arg: 2, scope: !17811, file: !3, line: 2333, type: !17816)
!17821 = !DILocation(line: 2333, column: 34, scope: !17811)
!17822 = !DILocalVariable(name: "addr", arg: 3, scope: !17811, file: !3, line: 2334, type: !17817)
!17823 = !DILocation(line: 2334, column: 34, scope: !17811)
!17824 = !DILocation(line: 2336, column: 6, scope: !17825)
!17825 = distinct !DILexicalBlock(scope: !17811, file: !3, line: 2336, column: 6)
!17826 = !DILocation(line: 2336, column: 18, scope: !17825)
!17827 = !DILocation(line: 2336, column: 21, scope: !17825)
!17828 = !DILocation(line: 2336, column: 31, scope: !17825)
!17829 = !DILocation(line: 2336, column: 6, scope: !17811)
!17830 = !DILocation(line: 2337, column: 17, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17825, file: !3, line: 2336, column: 43)
!17832 = !DILocation(line: 2337, column: 29, scope: !17831)
!17833 = !DILocation(line: 2337, column: 33, scope: !17831)
!17834 = !DILocation(line: 2337, column: 42, scope: !17831)
!17835 = !DILocation(line: 2337, column: 3, scope: !17831)
!17836 = !DILocation(line: 2337, column: 9, scope: !17831)
!17837 = !DILocation(line: 2337, column: 15, scope: !17831)
!17838 = !DILocation(line: 2338, column: 4, scope: !17831)
!17839 = !DILocation(line: 2338, column: 10, scope: !17831)
!17840 = !DILocation(line: 2339, column: 2, scope: !17831)
!17841 = !DILocation(line: 2340, column: 3, scope: !17842)
!17842 = distinct !DILexicalBlock(scope: !17825, file: !3, line: 2339, column: 9)
!17843 = !DILocation(line: 2340, column: 9, scope: !17842)
!17844 = !DILocation(line: 2340, column: 17, scope: !17842)
!17845 = !DILocation(line: 2340, column: 29, scope: !17842)
!17846 = !DILocation(line: 2340, column: 34, scope: !17842)
!17847 = !DILocation(line: 2341, column: 4, scope: !17842)
!17848 = !DILocation(line: 2341, column: 10, scope: !17842)
!17849 = !DILocation(line: 2343, column: 1, scope: !17811)
!17850 = distinct !DISubprogram(name: "mlxsw_sp_port_fdb_tunnel_uc_op", scope: !3, file: !3, line: 1287, type: !17851, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17851 = !DISubroutineType(types: !17852)
!17852 = !{!7, !10421, !453, !1192, !10057, !17853, !696, !696}
!17853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17854, size: 64)
!17854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10549)
!17855 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !17856)
!17856 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !17857)
!17857 = distinct !DILocation(line: 1310, column: 11, scope: !17850)
!17858 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !17856)
!17859 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !17856)
!17860 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !17856)
!17861 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !17862)
!17862 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !17857)
!17863 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !17864)
!17864 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !17857)
!17865 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !17866)
!17866 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !17867)
!17867 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !17857)
!17868 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !17866)
!17869 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !17866)
!17870 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !17867)
!17871 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !17867)
!17872 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !17867)
!17873 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !17857)
!17874 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !17857)
!17875 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !17857)
!17876 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !17850, file: !3, line: 1287, type: !10421)
!17877 = !DILocation(line: 1287, column: 60, scope: !17850)
!17878 = !DILocalVariable(name: "mac", arg: 2, scope: !17850, file: !3, line: 1288, type: !453)
!17879 = !DILocation(line: 1288, column: 20, scope: !17850)
!17880 = !DILocalVariable(name: "fid", arg: 3, scope: !17850, file: !3, line: 1288, type: !1192)
!17881 = !DILocation(line: 1288, column: 29, scope: !17850)
!17882 = !DILocalVariable(name: "proto", arg: 4, scope: !17850, file: !3, line: 1289, type: !10057)
!17883 = !DILocation(line: 1289, column: 30, scope: !17850)
!17884 = !DILocalVariable(name: "addr", arg: 5, scope: !17850, file: !3, line: 1290, type: !17853)
!17885 = !DILocation(line: 1290, column: 37, scope: !17850)
!17886 = !DILocalVariable(name: "adding", arg: 6, scope: !17850, file: !3, line: 1291, type: !696)
!17887 = !DILocation(line: 1291, column: 13, scope: !17850)
!17888 = !DILocalVariable(name: "dynamic", arg: 7, scope: !17850, file: !3, line: 1291, type: !696)
!17889 = !DILocation(line: 1291, column: 26, scope: !17850)
!17890 = !DILocalVariable(name: "sfd_proto", scope: !17850, file: !3, line: 1293, type: !10352)
!17891 = !DILocation(line: 1293, column: 40, scope: !17850)
!17892 = !DILocalVariable(name: "sfd_pl", scope: !17850, file: !3, line: 1294, type: !733)
!17893 = !DILocation(line: 1294, column: 8, scope: !17850)
!17894 = !DILocalVariable(name: "num_rec", scope: !17850, file: !3, line: 1295, type: !1551)
!17895 = !DILocation(line: 1295, column: 5, scope: !17850)
!17896 = !DILocalVariable(name: "uip", scope: !17850, file: !3, line: 1296, type: !862)
!17897 = !DILocation(line: 1296, column: 6, scope: !17850)
!17898 = !DILocalVariable(name: "err", scope: !17850, file: !3, line: 1297, type: !7)
!17899 = !DILocation(line: 1297, column: 6, scope: !17850)
!17900 = !DILocation(line: 1299, column: 10, scope: !17850)
!17901 = !DILocation(line: 1299, column: 2, scope: !17850)
!17902 = !DILocation(line: 1301, column: 9, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 1299, column: 17)
!17904 = !DILocation(line: 1301, column: 7, scope: !17903)
!17905 = !DILocation(line: 1302, column: 13, scope: !17903)
!17906 = !DILocation(line: 1303, column: 3, scope: !17903)
!17907 = !DILocalVariable(name: "__ret_warn_on", scope: !17908, file: !3, line: 1306, type: !7)
!17908 = distinct !DILexicalBlock(scope: !17903, file: !3, line: 1306, column: 3)
!17909 = !DILocation(line: 1306, column: 3, scope: !17908)
!17910 = !DILocation(line: 1306, column: 3, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 1306, column: 3)
!17912 = !DILocation(line: 1306, column: 3, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17911, file: !3, line: 1306, column: 3)
!17914 = !DILocation(line: 1306, column: 3, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17913, file: !3, line: 1306, column: 3)
!17916 = !DILocation(line: 1306, column: 3, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17913, file: !3, line: 1306, column: 3)
!17918 = !{i32 -2134751770, i32 -2134751741, i32 -2134751695, i32 -2134751637, i32 -2134751583, i32 -2134751529, i32 -2134751474, i32 -2134751443}
!17919 = !DILocation(line: 1306, column: 3, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17913, file: !3, line: 1306, column: 3)
!17921 = !{i32 -2134751004, i32 -2134750997, i32 -2134750945, i32 -2134750914, i32 -2134750884}
!17922 = !DILocation(line: 1306, column: 3, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17913, file: !3, line: 1306, column: 3)
!17924 = !DILocation(line: 1307, column: 3, scope: !17903)
!17925 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !17857)
!17926 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !17857)
!17927 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !17857)
!17928 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !17857)
!17929 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !17857)
!17930 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !17857)
!17931 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !17857)
!17932 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !17857)
!17933 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !17867)
!17934 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !17867)
!17935 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !17867)
!17936 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !17867)
!17937 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !17867)
!17938 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !17866)
!17939 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !17866)
!17940 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !17866)
!17941 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !17866)
!17942 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !17857)
!17943 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !17857)
!17944 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !17864)
!17945 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !17864)
!17946 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !17864)
!17947 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !17864)
!17948 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !17864)
!17949 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !17864)
!17950 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !17864)
!17951 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !17864)
!17952 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !17864)
!17953 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !17864)
!17954 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !17864)
!17955 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !17864)
!17956 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !17864)
!17957 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !17864)
!17958 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !17864)
!17959 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !17864)
!17960 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !17864)
!17961 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !17864)
!17962 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !17864)
!17963 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !17864)
!17964 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !17864)
!17965 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !17864)
!17966 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !17864)
!17967 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !17864)
!17968 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !17864)
!17969 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !17864)
!17970 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !17864)
!17971 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !17864)
!17972 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !17864)
!17973 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !17864)
!17974 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !17864)
!17975 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !17864)
!17976 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !17864)
!17977 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !17864)
!17978 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !17864)
!17979 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !17864)
!17980 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !17864)
!17981 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !17864)
!17982 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !17864)
!17983 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !17864)
!17984 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !17864)
!17985 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !17864)
!17986 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !17864)
!17987 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !17864)
!17988 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !17864)
!17989 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !17864)
!17990 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !17864)
!17991 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !17864)
!17992 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !17864)
!17993 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !17864)
!17994 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !17864)
!17995 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !17864)
!17996 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !17864)
!17997 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !17864)
!17998 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !17864)
!17999 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !17864)
!18000 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !17864)
!18001 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !17864)
!18002 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !17864)
!18003 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !17864)
!18004 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !17864)
!18005 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !17864)
!18006 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !17864)
!18007 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !17864)
!18008 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !17864)
!18009 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !17864)
!18010 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !17864)
!18011 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !17864)
!18012 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !17864)
!18013 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !17864)
!18014 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !17864)
!18015 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !17864)
!18016 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !17864)
!18017 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !17864)
!18018 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !17864)
!18019 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !17864)
!18020 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !17864)
!18021 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !17864)
!18022 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !17864)
!18023 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !17864)
!18024 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !17864)
!18025 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !17864)
!18026 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !17864)
!18027 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !17864)
!18028 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !17864)
!18029 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !17864)
!18030 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !17864)
!18031 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !17864)
!18032 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !17864)
!18033 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !17864)
!18034 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !17864)
!18035 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !17864)
!18036 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !17864)
!18037 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !17864)
!18038 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !17864)
!18039 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !17864)
!18040 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !17864)
!18041 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !17864)
!18042 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !17864)
!18043 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !17864)
!18044 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !17864)
!18045 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !17864)
!18046 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !17864)
!18047 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !17864)
!18048 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !17864)
!18049 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !17864)
!18050 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !17864)
!18051 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !17864)
!18052 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !17864)
!18053 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !17864)
!18054 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !17864)
!18055 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !17864)
!18056 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !17864)
!18057 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !17864)
!18058 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !17864)
!18059 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !17864)
!18060 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !17864)
!18061 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !17864)
!18062 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !17864)
!18063 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !17864)
!18064 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !17864)
!18065 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !17857)
!18066 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !17857)
!18067 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !17857)
!18068 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !17857)
!18069 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !17857)
!18070 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !17862)
!18071 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !17862)
!18072 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !17862)
!18073 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !17862)
!18074 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !17862)
!18075 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !17862)
!18076 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !17862)
!18077 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !17857)
!18078 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !17857)
!18079 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !17857)
!18080 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !17857)
!18081 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !17856)
!18082 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !17856)
!18083 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !17856)
!18084 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !17856)
!18085 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !17856)
!18086 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !17856)
!18087 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !17856)
!18088 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !17856)
!18089 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !17856)
!18090 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !17856)
!18091 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !17857)
!18092 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !17857)
!18093 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !17857)
!18094 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !17857)
!18095 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !17857)
!18096 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !17857)
!18097 = !DILocation(line: 1310, column: 9, scope: !17850)
!18098 = !DILocation(line: 1311, column: 7, scope: !18099)
!18099 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 1311, column: 6)
!18100 = !DILocation(line: 1311, column: 6, scope: !17850)
!18101 = !DILocation(line: 1312, column: 3, scope: !18099)
!18102 = !DILocation(line: 1314, column: 21, scope: !17850)
!18103 = !DILocation(line: 1314, column: 45, scope: !17850)
!18104 = !DILocation(line: 1314, column: 29, scope: !17850)
!18105 = !DILocation(line: 1314, column: 2, scope: !17850)
!18106 = !DILocation(line: 1315, column: 31, scope: !17850)
!18107 = !DILocation(line: 1316, column: 34, scope: !17850)
!18108 = !DILocation(line: 1316, column: 10, scope: !17850)
!18109 = !DILocation(line: 1316, column: 44, scope: !17850)
!18110 = !DILocation(line: 1316, column: 49, scope: !17850)
!18111 = !DILocation(line: 1317, column: 40, scope: !17850)
!18112 = !DILocation(line: 1318, column: 10, scope: !17850)
!18113 = !DILocation(line: 1315, column: 2, scope: !17850)
!18114 = !DILocation(line: 1319, column: 38, scope: !17850)
!18115 = !DILocation(line: 1319, column: 12, scope: !17850)
!18116 = !DILocation(line: 1319, column: 10, scope: !17850)
!18117 = !DILocation(line: 1320, column: 24, scope: !17850)
!18118 = !DILocation(line: 1320, column: 34, scope: !17850)
!18119 = !DILocation(line: 1320, column: 56, scope: !17850)
!18120 = !DILocation(line: 1320, column: 8, scope: !17850)
!18121 = !DILocation(line: 1320, column: 6, scope: !17850)
!18122 = !DILocation(line: 1321, column: 6, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 1321, column: 6)
!18124 = !DILocation(line: 1321, column: 6, scope: !17850)
!18125 = !DILocation(line: 1322, column: 3, scope: !18123)
!18126 = !DILocation(line: 1324, column: 6, scope: !18127)
!18127 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 1324, column: 6)
!18128 = !DILocation(line: 1324, column: 43, scope: !18127)
!18129 = !DILocation(line: 1324, column: 17, scope: !18127)
!18130 = !DILocation(line: 1324, column: 14, scope: !18127)
!18131 = !DILocation(line: 1324, column: 6, scope: !17850)
!18132 = !DILocation(line: 1325, column: 7, scope: !18127)
!18133 = !DILocation(line: 1325, column: 3, scope: !18127)
!18134 = !DILocation(line: 1324, column: 49, scope: !18127)
!18135 = !DILabel(scope: !17850, name: "out", file: !3, line: 1327)
!18136 = !DILocation(line: 1327, column: 1, scope: !17850)
!18137 = !DILocation(line: 1328, column: 8, scope: !17850)
!18138 = !DILocation(line: 1328, column: 2, scope: !17850)
!18139 = !DILocation(line: 1329, column: 9, scope: !17850)
!18140 = !DILocation(line: 1329, column: 2, scope: !17850)
!18141 = !DILocation(line: 1330, column: 1, scope: !17850)
!18142 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_tunnel_pack", scope: !10048, file: !10048, line: 568, type: !18143, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18143 = !DISubroutineType(types: !18144)
!18144 = !{null, !733, !7, !10149, !453, !1192, !10142, !862, !10352}
!18145 = !DILocalVariable(name: "payload", arg: 1, scope: !18142, file: !10048, line: 568, type: !733)
!18146 = !DILocation(line: 568, column: 36, scope: !18142)
!18147 = !DILocalVariable(name: "rec_index", arg: 2, scope: !18142, file: !10048, line: 568, type: !7)
!18148 = !DILocation(line: 568, column: 49, scope: !18142)
!18149 = !DILocalVariable(name: "policy", arg: 3, scope: !18142, file: !10048, line: 569, type: !10149)
!18150 = !DILocation(line: 569, column: 39, scope: !18142)
!18151 = !DILocalVariable(name: "mac", arg: 4, scope: !18142, file: !10048, line: 570, type: !453)
!18152 = !DILocation(line: 570, column: 21, scope: !18142)
!18153 = !DILocalVariable(name: "fid", arg: 5, scope: !18142, file: !10048, line: 570, type: !1192)
!18154 = !DILocation(line: 570, column: 30, scope: !18142)
!18155 = !DILocalVariable(name: "action", arg: 6, scope: !18142, file: !10048, line: 571, type: !10142)
!18156 = !DILocation(line: 571, column: 39, scope: !18142)
!18157 = !DILocalVariable(name: "uip", arg: 7, scope: !18142, file: !10048, line: 571, type: !862)
!18158 = !DILocation(line: 571, column: 51, scope: !18142)
!18159 = !DILocalVariable(name: "proto", arg: 8, scope: !18142, file: !10048, line: 572, type: !10352)
!18160 = !DILocation(line: 572, column: 47, scope: !18142)
!18161 = !DILocation(line: 574, column: 25, scope: !18142)
!18162 = !DILocation(line: 574, column: 34, scope: !18142)
!18163 = !DILocation(line: 575, column: 50, scope: !18142)
!18164 = !DILocation(line: 576, column: 11, scope: !18142)
!18165 = !DILocation(line: 574, column: 2, scope: !18142)
!18166 = !DILocation(line: 577, column: 31, scope: !18142)
!18167 = !DILocation(line: 577, column: 40, scope: !18142)
!18168 = !DILocation(line: 577, column: 51, scope: !18142)
!18169 = !DILocation(line: 577, column: 2, scope: !18142)
!18170 = !DILocation(line: 578, column: 38, scope: !18142)
!18171 = !DILocation(line: 578, column: 47, scope: !18142)
!18172 = !DILocation(line: 578, column: 58, scope: !18142)
!18173 = !DILocation(line: 578, column: 62, scope: !18142)
!18174 = !DILocation(line: 578, column: 2, scope: !18142)
!18175 = !DILocation(line: 579, column: 38, scope: !18142)
!18176 = !DILocation(line: 579, column: 47, scope: !18142)
!18177 = !DILocation(line: 579, column: 58, scope: !18142)
!18178 = !DILocation(line: 579, column: 2, scope: !18142)
!18179 = !DILocation(line: 580, column: 34, scope: !18142)
!18180 = !DILocation(line: 580, column: 43, scope: !18142)
!18181 = !DILocation(line: 580, column: 54, scope: !18142)
!18182 = !DILocation(line: 580, column: 2, scope: !18142)
!18183 = !DILocation(line: 581, column: 39, scope: !18142)
!18184 = !DILocation(line: 581, column: 48, scope: !18142)
!18185 = !DILocation(line: 581, column: 59, scope: !18142)
!18186 = !DILocation(line: 581, column: 2, scope: !18142)
!18187 = !DILocation(line: 582, column: 1, scope: !18142)
!18188 = distinct !DISubprogram(name: "mlxsw_sp_sfd_rec_policy", scope: !3, file: !3, line: 1275, type: !18189, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18189 = !DISubroutineType(types: !18190)
!18190 = !{!10149, !696}
!18191 = !DILocalVariable(name: "dynamic", arg: 1, scope: !18188, file: !3, line: 1275, type: !696)
!18192 = !DILocation(line: 1275, column: 67, scope: !18188)
!18193 = !DILocation(line: 1277, column: 9, scope: !18188)
!18194 = !DILocation(line: 1277, column: 2, scope: !18188)
!18195 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_tunnel_uip_msb_set", scope: !10048, file: !10048, line: 535, type: !13891, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18196 = !DILocalVariable(name: "buf", arg: 1, scope: !18195, file: !10048, line: 535, type: !733)
!18197 = !DILocation(line: 535, column: 1, scope: !18195)
!18198 = !DILocalVariable(name: "index", arg: 2, scope: !18195, file: !10048, line: 535, type: !633)
!18199 = !DILocalVariable(name: "val", arg: 3, scope: !18195, file: !10048, line: 535, type: !862)
!18200 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_tunnel_uip_lsb_set", scope: !10048, file: !10048, line: 564, type: !13891, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18201 = !DILocalVariable(name: "buf", arg: 1, scope: !18200, file: !10048, line: 564, type: !733)
!18202 = !DILocation(line: 564, column: 1, scope: !18200)
!18203 = !DILocalVariable(name: "index", arg: 2, scope: !18200, file: !10048, line: 564, type: !633)
!18204 = !DILocalVariable(name: "val", arg: 3, scope: !18200, file: !10048, line: 564, type: !862)
!18205 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_tunnel_fid_set", scope: !10048, file: !10048, line: 542, type: !13891, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18206 = !DILocalVariable(name: "buf", arg: 1, scope: !18205, file: !10048, line: 542, type: !733)
!18207 = !DILocation(line: 542, column: 1, scope: !18205)
!18208 = !DILocalVariable(name: "index", arg: 2, scope: !18205, file: !10048, line: 542, type: !633)
!18209 = !DILocalVariable(name: "val", arg: 3, scope: !18205, file: !10048, line: 542, type: !862)
!18210 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_tunnel_protocol_set", scope: !10048, file: !10048, line: 554, type: !13891, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18211 = !DILocalVariable(name: "buf", arg: 1, scope: !18210, file: !10048, line: 554, type: !733)
!18212 = !DILocation(line: 554, column: 1, scope: !18210)
!18213 = !DILocalVariable(name: "index", arg: 2, scope: !18210, file: !10048, line: 554, type: !633)
!18214 = !DILocalVariable(name: "val", arg: 3, scope: !18210, file: !10048, line: 554, type: !862)
!18215 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_find_by_bridge", scope: !3, file: !3, line: 408, type: !18216, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18216 = !DISubroutineType(types: !18217)
!18217 = !{!11091, !10406, !11588, !1192}
!18218 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !18215, file: !3, line: 408, type: !10406)
!18219 = !DILocation(line: 408, column: 57, scope: !18215)
!18220 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !18215, file: !3, line: 410, type: !11588)
!18221 = !DILocation(line: 410, column: 7, scope: !18215)
!18222 = !DILocalVariable(name: "vid", arg: 3, scope: !18215, file: !3, line: 411, type: !1192)
!18223 = !DILocation(line: 411, column: 11, scope: !18215)
!18224 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !18215, file: !3, line: 413, type: !11091)
!18225 = !DILocation(line: 413, column: 29, scope: !18215)
!18226 = !DILocalVariable(name: "__mptr", scope: !18227, file: !3, line: 415, type: !726)
!18227 = distinct !DILexicalBlock(scope: !18228, file: !3, line: 415, column: 2)
!18228 = distinct !DILexicalBlock(scope: !18215, file: !3, line: 415, column: 2)
!18229 = !DILocation(line: 415, column: 2, scope: !18227)
!18230 = !DILocation(line: 415, column: 2, scope: !18231)
!18231 = distinct !DILexicalBlock(scope: !18227, file: !3, line: 415, column: 2)
!18232 = !DILocation(line: 415, column: 2, scope: !18228)
!18233 = !DILocation(line: 415, column: 2, scope: !18234)
!18234 = distinct !DILexicalBlock(scope: !18228, file: !3, line: 415, column: 2)
!18235 = !DILocation(line: 417, column: 8, scope: !18236)
!18236 = distinct !DILexicalBlock(scope: !18237, file: !3, line: 417, column: 7)
!18237 = distinct !DILexicalBlock(scope: !18234, file: !3, line: 416, column: 14)
!18238 = !DILocation(line: 417, column: 28, scope: !18236)
!18239 = !DILocation(line: 417, column: 7, scope: !18237)
!18240 = !DILocation(line: 418, column: 4, scope: !18236)
!18241 = !DILocation(line: 419, column: 7, scope: !18242)
!18242 = distinct !DILexicalBlock(scope: !18237, file: !3, line: 419, column: 7)
!18243 = !DILocation(line: 419, column: 27, scope: !18242)
!18244 = !DILocation(line: 419, column: 40, scope: !18242)
!18245 = !DILocation(line: 420, column: 7, scope: !18242)
!18246 = !DILocation(line: 419, column: 54, scope: !18242)
!18247 = !DILocation(line: 419, column: 7, scope: !18237)
!18248 = !DILocation(line: 421, column: 4, scope: !18242)
!18249 = !DILocation(line: 422, column: 7, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18237, file: !3, line: 422, column: 7)
!18251 = !DILocation(line: 422, column: 22, scope: !18250)
!18252 = !DILocation(line: 422, column: 35, scope: !18250)
!18253 = !DILocation(line: 423, column: 7, scope: !18250)
!18254 = !DILocation(line: 423, column: 27, scope: !18250)
!18255 = !DILocation(line: 423, column: 34, scope: !18250)
!18256 = !DILocation(line: 423, column: 31, scope: !18250)
!18257 = !DILocation(line: 422, column: 7, scope: !18237)
!18258 = !DILocation(line: 424, column: 4, scope: !18250)
!18259 = !DILocation(line: 425, column: 10, scope: !18237)
!18260 = !DILocation(line: 425, column: 3, scope: !18237)
!18261 = !DILocalVariable(name: "__mptr", scope: !18262, file: !3, line: 415, type: !726)
!18262 = distinct !DILexicalBlock(scope: !18234, file: !3, line: 415, column: 2)
!18263 = !DILocation(line: 415, column: 2, scope: !18262)
!18264 = !DILocation(line: 415, column: 2, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18262, file: !3, line: 415, column: 2)
!18266 = distinct !{!18266, !18232, !18267}
!18267 = !DILocation(line: 426, column: 2, scope: !18228)
!18268 = !DILocation(line: 428, column: 2, scope: !18215)
!18269 = !DILocation(line: 429, column: 1, scope: !18215)
!18270 = distinct !DISubprogram(name: "mlxsw_sp_port_fdb_uc_op", scope: !3, file: !3, line: 1360, type: !18271, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18271 = !DISubroutineType(types: !18272)
!18272 = !{!7, !10421, !1551, !453, !1192, !696, !696}
!18273 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18270, file: !3, line: 1360, type: !10421)
!18274 = !DILocation(line: 1360, column: 53, scope: !18270)
!18275 = !DILocalVariable(name: "local_port", arg: 2, scope: !18270, file: !3, line: 1360, type: !1551)
!18276 = !DILocation(line: 1360, column: 66, scope: !18270)
!18277 = !DILocalVariable(name: "mac", arg: 3, scope: !18270, file: !3, line: 1361, type: !453)
!18278 = !DILocation(line: 1361, column: 20, scope: !18270)
!18279 = !DILocalVariable(name: "fid", arg: 4, scope: !18270, file: !3, line: 1361, type: !1192)
!18280 = !DILocation(line: 1361, column: 29, scope: !18270)
!18281 = !DILocalVariable(name: "adding", arg: 5, scope: !18270, file: !3, line: 1361, type: !696)
!18282 = !DILocation(line: 1361, column: 39, scope: !18270)
!18283 = !DILocalVariable(name: "dynamic", arg: 6, scope: !18270, file: !3, line: 1362, type: !696)
!18284 = !DILocation(line: 1362, column: 13, scope: !18270)
!18285 = !DILocation(line: 1364, column: 35, scope: !18270)
!18286 = !DILocation(line: 1364, column: 45, scope: !18270)
!18287 = !DILocation(line: 1364, column: 57, scope: !18270)
!18288 = !DILocation(line: 1364, column: 62, scope: !18270)
!18289 = !DILocation(line: 1364, column: 67, scope: !18270)
!18290 = !DILocation(line: 1366, column: 31, scope: !18270)
!18291 = !DILocation(line: 1366, column: 7, scope: !18270)
!18292 = !DILocation(line: 1364, column: 9, scope: !18270)
!18293 = !DILocation(line: 1364, column: 2, scope: !18270)
!18294 = distinct !DISubprogram(name: "mlxsw_sp_port_fdb_uc_lag_op", scope: !3, file: !3, line: 1377, type: !18295, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18295 = !DISubroutineType(types: !18296)
!18296 = !{!7, !10421, !1192, !453, !1192, !1192, !696, !696}
!18297 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !18298)
!18298 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !18299)
!18299 = distinct !DILocation(line: 1385, column: 11, scope: !18294)
!18300 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !18298)
!18301 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !18298)
!18302 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !18298)
!18303 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !18304)
!18304 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !18299)
!18305 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !18306)
!18306 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !18299)
!18307 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !18308)
!18308 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !18309)
!18309 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !18299)
!18310 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !18308)
!18311 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !18308)
!18312 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !18309)
!18313 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !18309)
!18314 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !18309)
!18315 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !18299)
!18316 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !18299)
!18317 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !18299)
!18318 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18294, file: !3, line: 1377, type: !10421)
!18319 = !DILocation(line: 1377, column: 57, scope: !18294)
!18320 = !DILocalVariable(name: "lag_id", arg: 2, scope: !18294, file: !3, line: 1377, type: !1192)
!18321 = !DILocation(line: 1377, column: 71, scope: !18294)
!18322 = !DILocalVariable(name: "mac", arg: 3, scope: !18294, file: !3, line: 1378, type: !453)
!18323 = !DILocation(line: 1378, column: 24, scope: !18294)
!18324 = !DILocalVariable(name: "fid", arg: 4, scope: !18294, file: !3, line: 1378, type: !1192)
!18325 = !DILocation(line: 1378, column: 33, scope: !18294)
!18326 = !DILocalVariable(name: "lag_vid", arg: 5, scope: !18294, file: !3, line: 1378, type: !1192)
!18327 = !DILocation(line: 1378, column: 42, scope: !18294)
!18328 = !DILocalVariable(name: "adding", arg: 6, scope: !18294, file: !3, line: 1379, type: !696)
!18329 = !DILocation(line: 1379, column: 17, scope: !18294)
!18330 = !DILocalVariable(name: "dynamic", arg: 7, scope: !18294, file: !3, line: 1379, type: !696)
!18331 = !DILocation(line: 1379, column: 30, scope: !18294)
!18332 = !DILocalVariable(name: "sfd_pl", scope: !18294, file: !3, line: 1381, type: !733)
!18333 = !DILocation(line: 1381, column: 8, scope: !18294)
!18334 = !DILocalVariable(name: "num_rec", scope: !18294, file: !3, line: 1382, type: !1551)
!18335 = !DILocation(line: 1382, column: 5, scope: !18294)
!18336 = !DILocalVariable(name: "err", scope: !18294, file: !3, line: 1383, type: !7)
!18337 = !DILocation(line: 1383, column: 6, scope: !18294)
!18338 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !18299)
!18339 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !18299)
!18340 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !18299)
!18341 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !18299)
!18342 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !18299)
!18343 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !18299)
!18344 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !18299)
!18345 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !18299)
!18346 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !18309)
!18347 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !18309)
!18348 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !18309)
!18349 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !18309)
!18350 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !18309)
!18351 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !18308)
!18352 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !18308)
!18353 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !18308)
!18354 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !18308)
!18355 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !18299)
!18356 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !18299)
!18357 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !18306)
!18358 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !18306)
!18359 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !18306)
!18360 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !18306)
!18361 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !18306)
!18362 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !18306)
!18363 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !18306)
!18364 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !18306)
!18365 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !18306)
!18366 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !18306)
!18367 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !18306)
!18368 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !18306)
!18369 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !18306)
!18370 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !18306)
!18371 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !18306)
!18372 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !18306)
!18373 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !18306)
!18374 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !18306)
!18375 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !18306)
!18376 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !18306)
!18377 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !18306)
!18378 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !18306)
!18379 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !18306)
!18380 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !18306)
!18381 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !18306)
!18382 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !18306)
!18383 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !18306)
!18384 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !18306)
!18385 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !18306)
!18386 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !18306)
!18387 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !18306)
!18388 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !18306)
!18389 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !18306)
!18390 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !18306)
!18391 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !18306)
!18392 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !18306)
!18393 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !18306)
!18394 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !18306)
!18395 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !18306)
!18396 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !18306)
!18397 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !18306)
!18398 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !18306)
!18399 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !18306)
!18400 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !18306)
!18401 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !18306)
!18402 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !18306)
!18403 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !18306)
!18404 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !18306)
!18405 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !18306)
!18406 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !18306)
!18407 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !18306)
!18408 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !18306)
!18409 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !18306)
!18410 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !18306)
!18411 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !18306)
!18412 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !18306)
!18413 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !18306)
!18414 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !18306)
!18415 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !18306)
!18416 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !18306)
!18417 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !18306)
!18418 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !18306)
!18419 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !18306)
!18420 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !18306)
!18421 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !18306)
!18422 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !18306)
!18423 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !18306)
!18424 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !18306)
!18425 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !18306)
!18426 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !18306)
!18427 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !18306)
!18428 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !18306)
!18429 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !18306)
!18430 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !18306)
!18431 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !18306)
!18432 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !18306)
!18433 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !18306)
!18434 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !18306)
!18435 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !18306)
!18436 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !18306)
!18437 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !18306)
!18438 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !18306)
!18439 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !18306)
!18440 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !18306)
!18441 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !18306)
!18442 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !18306)
!18443 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !18306)
!18444 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !18306)
!18445 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !18306)
!18446 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !18306)
!18447 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !18306)
!18448 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !18306)
!18449 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !18306)
!18450 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !18306)
!18451 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !18306)
!18452 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !18306)
!18453 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !18306)
!18454 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !18306)
!18455 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !18306)
!18456 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !18306)
!18457 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !18306)
!18458 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !18306)
!18459 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !18306)
!18460 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !18306)
!18461 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !18306)
!18462 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !18306)
!18463 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !18306)
!18464 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !18306)
!18465 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !18306)
!18466 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !18306)
!18467 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !18306)
!18468 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !18306)
!18469 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !18306)
!18470 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !18306)
!18471 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !18306)
!18472 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !18306)
!18473 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !18306)
!18474 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !18306)
!18475 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !18306)
!18476 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !18306)
!18477 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !18306)
!18478 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !18299)
!18479 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !18299)
!18480 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !18299)
!18481 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !18299)
!18482 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !18299)
!18483 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !18304)
!18484 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !18304)
!18485 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !18304)
!18486 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !18304)
!18487 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !18304)
!18488 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !18304)
!18489 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !18304)
!18490 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !18299)
!18491 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !18299)
!18492 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !18299)
!18493 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !18299)
!18494 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !18298)
!18495 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !18298)
!18496 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !18298)
!18497 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !18298)
!18498 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !18298)
!18499 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !18298)
!18500 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !18298)
!18501 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !18298)
!18502 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !18298)
!18503 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !18298)
!18504 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !18299)
!18505 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !18299)
!18506 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !18299)
!18507 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !18299)
!18508 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !18299)
!18509 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !18299)
!18510 = !DILocation(line: 1385, column: 9, scope: !18294)
!18511 = !DILocation(line: 1386, column: 7, scope: !18512)
!18512 = distinct !DILexicalBlock(scope: !18294, file: !3, line: 1386, column: 6)
!18513 = !DILocation(line: 1386, column: 6, scope: !18294)
!18514 = !DILocation(line: 1387, column: 3, scope: !18512)
!18515 = !DILocation(line: 1389, column: 21, scope: !18294)
!18516 = !DILocation(line: 1389, column: 45, scope: !18294)
!18517 = !DILocation(line: 1389, column: 29, scope: !18294)
!18518 = !DILocation(line: 1389, column: 2, scope: !18294)
!18519 = !DILocation(line: 1390, column: 28, scope: !18294)
!18520 = !DILocation(line: 1390, column: 63, scope: !18294)
!18521 = !DILocation(line: 1390, column: 39, scope: !18294)
!18522 = !DILocation(line: 1391, column: 7, scope: !18294)
!18523 = !DILocation(line: 1391, column: 12, scope: !18294)
!18524 = !DILocation(line: 1392, column: 7, scope: !18294)
!18525 = !DILocation(line: 1392, column: 16, scope: !18294)
!18526 = !DILocation(line: 1390, column: 2, scope: !18294)
!18527 = !DILocation(line: 1393, column: 38, scope: !18294)
!18528 = !DILocation(line: 1393, column: 12, scope: !18294)
!18529 = !DILocation(line: 1393, column: 10, scope: !18294)
!18530 = !DILocation(line: 1394, column: 24, scope: !18294)
!18531 = !DILocation(line: 1394, column: 34, scope: !18294)
!18532 = !DILocation(line: 1394, column: 56, scope: !18294)
!18533 = !DILocation(line: 1394, column: 8, scope: !18294)
!18534 = !DILocation(line: 1394, column: 6, scope: !18294)
!18535 = !DILocation(line: 1395, column: 6, scope: !18536)
!18536 = distinct !DILexicalBlock(scope: !18294, file: !3, line: 1395, column: 6)
!18537 = !DILocation(line: 1395, column: 6, scope: !18294)
!18538 = !DILocation(line: 1396, column: 3, scope: !18536)
!18539 = !DILocation(line: 1398, column: 6, scope: !18540)
!18540 = distinct !DILexicalBlock(scope: !18294, file: !3, line: 1398, column: 6)
!18541 = !DILocation(line: 1398, column: 43, scope: !18540)
!18542 = !DILocation(line: 1398, column: 17, scope: !18540)
!18543 = !DILocation(line: 1398, column: 14, scope: !18540)
!18544 = !DILocation(line: 1398, column: 6, scope: !18294)
!18545 = !DILocation(line: 1399, column: 7, scope: !18540)
!18546 = !DILocation(line: 1399, column: 3, scope: !18540)
!18547 = !DILocation(line: 1398, column: 49, scope: !18540)
!18548 = !DILabel(scope: !18294, name: "out", file: !3, line: 1401)
!18549 = !DILocation(line: 1401, column: 1, scope: !18294)
!18550 = !DILocation(line: 1402, column: 8, scope: !18294)
!18551 = !DILocation(line: 1402, column: 2, scope: !18294)
!18552 = !DILocation(line: 1403, column: 9, scope: !18294)
!18553 = !DILocation(line: 1403, column: 2, scope: !18294)
!18554 = !DILocation(line: 1404, column: 1, scope: !18294)
!18555 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_lag_pack", scope: !10048, file: !10048, line: 465, type: !18556, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18556 = !DISubroutineType(types: !18557)
!18557 = !{null, !733, !7, !10149, !453, !1192, !10142, !1192, !1192}
!18558 = !DILocalVariable(name: "payload", arg: 1, scope: !18555, file: !10048, line: 465, type: !733)
!18559 = !DILocation(line: 465, column: 33, scope: !18555)
!18560 = !DILocalVariable(name: "rec_index", arg: 2, scope: !18555, file: !10048, line: 465, type: !7)
!18561 = !DILocation(line: 465, column: 46, scope: !18555)
!18562 = !DILocalVariable(name: "policy", arg: 3, scope: !18555, file: !10048, line: 466, type: !10149)
!18563 = !DILocation(line: 466, column: 36, scope: !18555)
!18564 = !DILocalVariable(name: "mac", arg: 4, scope: !18555, file: !10048, line: 467, type: !453)
!18565 = !DILocation(line: 467, column: 18, scope: !18555)
!18566 = !DILocalVariable(name: "fid_vid", arg: 5, scope: !18555, file: !10048, line: 467, type: !1192)
!18567 = !DILocation(line: 467, column: 27, scope: !18555)
!18568 = !DILocalVariable(name: "action", arg: 6, scope: !18555, file: !10048, line: 468, type: !10142)
!18569 = !DILocation(line: 468, column: 36, scope: !18555)
!18570 = !DILocalVariable(name: "lag_vid", arg: 7, scope: !18555, file: !10048, line: 468, type: !1192)
!18571 = !DILocation(line: 468, column: 48, scope: !18555)
!18572 = !DILocalVariable(name: "lag_id", arg: 8, scope: !18555, file: !10048, line: 469, type: !1192)
!18573 = !DILocation(line: 469, column: 10, scope: !18555)
!18574 = !DILocation(line: 471, column: 25, scope: !18555)
!18575 = !DILocation(line: 471, column: 34, scope: !18555)
!18576 = !DILocation(line: 473, column: 11, scope: !18555)
!18577 = !DILocation(line: 473, column: 16, scope: !18555)
!18578 = !DILocation(line: 471, column: 2, scope: !18555)
!18579 = !DILocation(line: 474, column: 31, scope: !18555)
!18580 = !DILocation(line: 474, column: 40, scope: !18555)
!18581 = !DILocation(line: 474, column: 51, scope: !18555)
!18582 = !DILocation(line: 474, column: 2, scope: !18555)
!18583 = !DILocation(line: 475, column: 36, scope: !18555)
!18584 = !DILocation(line: 475, column: 45, scope: !18555)
!18585 = !DILocation(line: 475, column: 2, scope: !18555)
!18586 = !DILocation(line: 476, column: 35, scope: !18555)
!18587 = !DILocation(line: 476, column: 44, scope: !18555)
!18588 = !DILocation(line: 476, column: 55, scope: !18555)
!18589 = !DILocation(line: 476, column: 2, scope: !18555)
!18590 = !DILocation(line: 477, column: 35, scope: !18555)
!18591 = !DILocation(line: 477, column: 44, scope: !18555)
!18592 = !DILocation(line: 477, column: 55, scope: !18555)
!18593 = !DILocation(line: 477, column: 2, scope: !18555)
!18594 = !DILocation(line: 478, column: 34, scope: !18555)
!18595 = !DILocation(line: 478, column: 43, scope: !18555)
!18596 = !DILocation(line: 478, column: 54, scope: !18555)
!18597 = !DILocation(line: 478, column: 2, scope: !18555)
!18598 = !DILocation(line: 479, column: 1, scope: !18555)
!18599 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_lag_sub_port_set", scope: !10048, file: !10048, line: 434, type: !13891, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18600 = !DILocalVariable(name: "buf", arg: 1, scope: !18599, file: !10048, line: 434, type: !733)
!18601 = !DILocation(line: 434, column: 1, scope: !18599)
!18602 = !DILocalVariable(name: "index", arg: 2, scope: !18599, file: !10048, line: 434, type: !633)
!18603 = !DILocalVariable(name: "val", arg: 3, scope: !18599, file: !10048, line: 434, type: !862)
!18604 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_lag_fid_vid_set", scope: !10048, file: !10048, line: 447, type: !13891, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18605 = !DILocalVariable(name: "buf", arg: 1, scope: !18604, file: !10048, line: 447, type: !733)
!18606 = !DILocation(line: 447, column: 1, scope: !18604)
!18607 = !DILocalVariable(name: "index", arg: 2, scope: !18604, file: !10048, line: 447, type: !633)
!18608 = !DILocalVariable(name: "val", arg: 3, scope: !18604, file: !10048, line: 447, type: !862)
!18609 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_lag_lag_vid_set", scope: !10048, file: !10048, line: 454, type: !13891, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18610 = !DILocalVariable(name: "buf", arg: 1, scope: !18609, file: !10048, line: 454, type: !733)
!18611 = !DILocation(line: 454, column: 1, scope: !18609)
!18612 = !DILocalVariable(name: "index", arg: 2, scope: !18609, file: !10048, line: 454, type: !633)
!18613 = !DILocalVariable(name: "val", arg: 3, scope: !18609, file: !10048, line: 454, type: !862)
!18614 = distinct !DISubprogram(name: "mlxsw_reg_sfd_uc_lag_lag_id_set", scope: !10048, file: !10048, line: 461, type: !13891, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18615 = !DILocalVariable(name: "buf", arg: 1, scope: !18614, file: !10048, line: 461, type: !733)
!18616 = !DILocation(line: 461, column: 1, scope: !18614)
!18617 = !DILocalVariable(name: "index", arg: 2, scope: !18614, file: !10048, line: 461, type: !633)
!18618 = !DILocalVariable(name: "val", arg: 3, scope: !18614, file: !10048, line: 461, type: !862)
!18619 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_fdb_add", scope: !3, file: !3, line: 2895, type: !18620, scopeLine: 2898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18620 = !DISubroutineType(types: !18621)
!18621 = !{null, !10421, !11239}
!18622 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18619, file: !3, line: 2895, type: !10421)
!18623 = !DILocation(line: 2895, column: 51, scope: !18619)
!18624 = !DILocalVariable(name: "switchdev_work", arg: 2, scope: !18619, file: !3, line: 2897, type: !11239)
!18625 = !DILocation(line: 2897, column: 6, scope: !18619)
!18626 = !DILocalVariable(name: "vxlan_fdb_info", scope: !18619, file: !3, line: 2899, type: !11288)
!18627 = !DILocation(line: 2899, column: 44, scope: !18619)
!18628 = !DILocalVariable(name: "bridge_device", scope: !18619, file: !3, line: 2900, type: !10370)
!18629 = !DILocation(line: 2900, column: 33, scope: !18619)
!18630 = !DILocalVariable(name: "dev", scope: !18619, file: !3, line: 2901, type: !451)
!18631 = !DILocation(line: 2901, column: 21, scope: !18619)
!18632 = !DILocation(line: 2901, column: 27, scope: !18619)
!18633 = !DILocation(line: 2901, column: 43, scope: !18619)
!18634 = !DILocalVariable(name: "all_zeros_mac", scope: !18619, file: !3, line: 2902, type: !11280)
!18635 = !DILocation(line: 2902, column: 5, scope: !18619)
!18636 = !DILocalVariable(name: "proto", scope: !18619, file: !3, line: 2903, type: !10057)
!18637 = !DILocation(line: 2903, column: 24, scope: !18619)
!18638 = !DILocalVariable(name: "addr", scope: !18619, file: !3, line: 2904, type: !10549)
!18639 = !DILocation(line: 2904, column: 24, scope: !18619)
!18640 = !DILocalVariable(name: "br_dev", scope: !18619, file: !3, line: 2905, type: !451)
!18641 = !DILocation(line: 2905, column: 21, scope: !18619)
!18642 = !DILocalVariable(name: "fid", scope: !18619, file: !3, line: 2906, type: !11097)
!18643 = !DILocation(line: 2906, column: 23, scope: !18619)
!18644 = !DILocalVariable(name: "vid", scope: !18619, file: !3, line: 2907, type: !1192)
!18645 = !DILocation(line: 2907, column: 6, scope: !18619)
!18646 = !DILocalVariable(name: "err", scope: !18619, file: !3, line: 2908, type: !7)
!18647 = !DILocation(line: 2908, column: 6, scope: !18619)
!18648 = !DILocation(line: 2910, column: 20, scope: !18619)
!18649 = !DILocation(line: 2910, column: 36, scope: !18619)
!18650 = !DILocation(line: 2910, column: 17, scope: !18619)
!18651 = !DILocation(line: 2911, column: 39, scope: !18619)
!18652 = !DILocation(line: 2911, column: 11, scope: !18619)
!18653 = !DILocation(line: 2911, column: 9, scope: !18619)
!18654 = !DILocation(line: 2913, column: 46, scope: !18619)
!18655 = !DILocation(line: 2913, column: 56, scope: !18619)
!18656 = !DILocation(line: 2913, column: 64, scope: !18619)
!18657 = !DILocation(line: 2913, column: 18, scope: !18619)
!18658 = !DILocation(line: 2913, column: 16, scope: !18619)
!18659 = !DILocation(line: 2914, column: 7, scope: !18660)
!18660 = distinct !DILexicalBlock(scope: !18619, file: !3, line: 2914, column: 6)
!18661 = !DILocation(line: 2914, column: 6, scope: !18619)
!18662 = !DILocation(line: 2915, column: 3, scope: !18660)
!18663 = !DILocation(line: 2917, column: 35, scope: !18619)
!18664 = !DILocation(line: 2917, column: 45, scope: !18619)
!18665 = !DILocation(line: 2917, column: 61, scope: !18619)
!18666 = !DILocation(line: 2917, column: 8, scope: !18619)
!18667 = !DILocation(line: 2917, column: 6, scope: !18619)
!18668 = !DILocation(line: 2918, column: 7, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18619, file: !3, line: 2918, column: 6)
!18670 = !DILocation(line: 2918, column: 6, scope: !18619)
!18671 = !DILocation(line: 2919, column: 3, scope: !18669)
!18672 = !DILocation(line: 2921, column: 41, scope: !18619)
!18673 = !DILocation(line: 2921, column: 57, scope: !18619)
!18674 = !DILocation(line: 2921, column: 2, scope: !18619)
!18675 = !DILocation(line: 2924, column: 23, scope: !18676)
!18676 = distinct !DILexicalBlock(scope: !18619, file: !3, line: 2924, column: 6)
!18677 = !DILocation(line: 2924, column: 39, scope: !18676)
!18678 = !DILocation(line: 2924, column: 49, scope: !18676)
!18679 = !DILocation(line: 2924, column: 6, scope: !18676)
!18680 = !DILocation(line: 2924, column: 6, scope: !18619)
!18681 = !DILocation(line: 2925, column: 35, scope: !18682)
!18682 = distinct !DILexicalBlock(scope: !18676, file: !3, line: 2924, column: 65)
!18683 = !DILocation(line: 2925, column: 45, scope: !18682)
!18684 = !DILocation(line: 2925, column: 50, scope: !18682)
!18685 = !DILocation(line: 2925, column: 9, scope: !18682)
!18686 = !DILocation(line: 2925, column: 7, scope: !18682)
!18687 = !DILocation(line: 2926, column: 7, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18682, file: !3, line: 2926, column: 7)
!18689 = !DILocation(line: 2926, column: 7, scope: !18682)
!18690 = !DILocation(line: 2927, column: 21, scope: !18691)
!18691 = distinct !DILexicalBlock(scope: !18688, file: !3, line: 2926, column: 12)
!18692 = !DILocation(line: 2927, column: 4, scope: !18691)
!18693 = !DILocation(line: 2928, column: 4, scope: !18691)
!18694 = !DILocation(line: 2930, column: 3, scope: !18682)
!18695 = !DILocation(line: 2930, column: 19, scope: !18682)
!18696 = !DILocation(line: 2930, column: 29, scope: !18682)
!18697 = !DILocation(line: 2931, column: 59, scope: !18682)
!18698 = !DILocation(line: 2932, column: 8, scope: !18682)
!18699 = !DILocation(line: 2932, column: 24, scope: !18682)
!18700 = !DILocation(line: 2931, column: 3, scope: !18682)
!18701 = !DILocation(line: 2933, column: 20, scope: !18682)
!18702 = !DILocation(line: 2933, column: 3, scope: !18682)
!18703 = !DILocation(line: 2934, column: 3, scope: !18682)
!18704 = !DILocation(line: 2942, column: 8, scope: !18619)
!18705 = !DILocation(line: 2942, column: 23, scope: !18619)
!18706 = !DILocation(line: 2942, column: 28, scope: !18619)
!18707 = !DILocation(line: 2942, column: 36, scope: !18619)
!18708 = !DILocation(line: 2942, column: 51, scope: !18619)
!18709 = !DILocation(line: 2942, column: 6, scope: !18619)
!18710 = !DILocation(line: 2943, column: 23, scope: !18711)
!18711 = distinct !DILexicalBlock(scope: !18619, file: !3, line: 2943, column: 6)
!18712 = !DILocation(line: 2943, column: 31, scope: !18711)
!18713 = !DILocation(line: 2943, column: 47, scope: !18711)
!18714 = !DILocation(line: 2943, column: 57, scope: !18711)
!18715 = !DILocation(line: 2943, column: 6, scope: !18711)
!18716 = !DILocation(line: 2943, column: 65, scope: !18711)
!18717 = !DILocation(line: 2943, column: 62, scope: !18711)
!18718 = !DILocation(line: 2943, column: 6, scope: !18619)
!18719 = !DILocation(line: 2944, column: 3, scope: !18711)
!18720 = !DILocation(line: 2946, column: 39, scope: !18619)
!18721 = !DILocation(line: 2946, column: 49, scope: !18619)
!18722 = !DILocation(line: 2946, column: 65, scope: !18619)
!18723 = !DILocation(line: 2947, column: 30, scope: !18619)
!18724 = !DILocation(line: 2947, column: 11, scope: !18619)
!18725 = !DILocation(line: 2947, column: 36, scope: !18619)
!18726 = !DILocation(line: 2946, column: 8, scope: !18619)
!18727 = !DILocation(line: 2946, column: 6, scope: !18619)
!18728 = !DILocation(line: 2949, column: 6, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18619, file: !3, line: 2949, column: 6)
!18730 = !DILocation(line: 2949, column: 6, scope: !18619)
!18731 = !DILocation(line: 2950, column: 3, scope: !18729)
!18732 = !DILocation(line: 2951, column: 2, scope: !18619)
!18733 = !DILocation(line: 2951, column: 18, scope: !18619)
!18734 = !DILocation(line: 2951, column: 28, scope: !18619)
!18735 = !DILocation(line: 2952, column: 58, scope: !18619)
!18736 = !DILocation(line: 2953, column: 7, scope: !18619)
!18737 = !DILocation(line: 2953, column: 23, scope: !18619)
!18738 = !DILocation(line: 2952, column: 2, scope: !18619)
!18739 = !DILocation(line: 2955, column: 9, scope: !18619)
!18740 = !DILocation(line: 2955, column: 25, scope: !18619)
!18741 = !DILocation(line: 2955, column: 35, scope: !18619)
!18742 = !DILocation(line: 2955, column: 40, scope: !18619)
!18743 = !DILocation(line: 2954, column: 2, scope: !18619)
!18744 = !DILocation(line: 2957, column: 19, scope: !18619)
!18745 = !DILocation(line: 2957, column: 2, scope: !18619)
!18746 = !DILocation(line: 2959, column: 2, scope: !18619)
!18747 = !DILabel(scope: !18619, name: "err_fdb_tunnel_uc_op", file: !3, line: 2961)
!18748 = !DILocation(line: 2961, column: 1, scope: !18619)
!18749 = !DILabel(scope: !18619, name: "err_br_fdb_find", file: !3, line: 2962)
!18750 = !DILocation(line: 2962, column: 1, scope: !18619)
!18751 = !DILocation(line: 2963, column: 19, scope: !18619)
!18752 = !DILocation(line: 2963, column: 2, scope: !18619)
!18753 = !DILocation(line: 2964, column: 1, scope: !18619)
!18754 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_fdb_del", scope: !3, file: !3, line: 2967, type: !18620, scopeLine: 2970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18755 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18754, file: !3, line: 2967, type: !10421)
!18756 = !DILocation(line: 2967, column: 51, scope: !18754)
!18757 = !DILocalVariable(name: "switchdev_work", arg: 2, scope: !18754, file: !3, line: 2969, type: !11239)
!18758 = !DILocation(line: 2969, column: 6, scope: !18754)
!18759 = !DILocalVariable(name: "vxlan_fdb_info", scope: !18754, file: !3, line: 2971, type: !11288)
!18760 = !DILocation(line: 2971, column: 44, scope: !18754)
!18761 = !DILocalVariable(name: "bridge_device", scope: !18754, file: !3, line: 2972, type: !10370)
!18762 = !DILocation(line: 2972, column: 33, scope: !18754)
!18763 = !DILocalVariable(name: "dev", scope: !18754, file: !3, line: 2973, type: !451)
!18764 = !DILocation(line: 2973, column: 21, scope: !18754)
!18765 = !DILocation(line: 2973, column: 27, scope: !18754)
!18766 = !DILocation(line: 2973, column: 43, scope: !18754)
!18767 = !DILocalVariable(name: "br_dev", scope: !18754, file: !3, line: 2974, type: !451)
!18768 = !DILocation(line: 2974, column: 21, scope: !18754)
!18769 = !DILocation(line: 2974, column: 58, scope: !18754)
!18770 = !DILocation(line: 2974, column: 30, scope: !18754)
!18771 = !DILocalVariable(name: "all_zeros_mac", scope: !18754, file: !3, line: 2975, type: !11280)
!18772 = !DILocation(line: 2975, column: 5, scope: !18754)
!18773 = !DILocalVariable(name: "proto", scope: !18754, file: !3, line: 2976, type: !10057)
!18774 = !DILocation(line: 2976, column: 24, scope: !18754)
!18775 = !DILocalVariable(name: "addr", scope: !18754, file: !3, line: 2977, type: !10549)
!18776 = !DILocation(line: 2977, column: 24, scope: !18754)
!18777 = !DILocalVariable(name: "fid", scope: !18754, file: !3, line: 2978, type: !11097)
!18778 = !DILocation(line: 2978, column: 23, scope: !18754)
!18779 = !DILocalVariable(name: "vid", scope: !18754, file: !3, line: 2979, type: !1192)
!18780 = !DILocation(line: 2979, column: 6, scope: !18754)
!18781 = !DILocation(line: 2981, column: 20, scope: !18754)
!18782 = !DILocation(line: 2981, column: 36, scope: !18754)
!18783 = !DILocation(line: 2981, column: 17, scope: !18754)
!18784 = !DILocation(line: 2983, column: 46, scope: !18754)
!18785 = !DILocation(line: 2983, column: 56, scope: !18754)
!18786 = !DILocation(line: 2983, column: 64, scope: !18754)
!18787 = !DILocation(line: 2983, column: 18, scope: !18754)
!18788 = !DILocation(line: 2983, column: 16, scope: !18754)
!18789 = !DILocation(line: 2984, column: 7, scope: !18790)
!18790 = distinct !DILexicalBlock(scope: !18754, file: !3, line: 2984, column: 6)
!18791 = !DILocation(line: 2984, column: 6, scope: !18754)
!18792 = !DILocation(line: 2985, column: 3, scope: !18790)
!18793 = !DILocation(line: 2987, column: 35, scope: !18754)
!18794 = !DILocation(line: 2987, column: 45, scope: !18754)
!18795 = !DILocation(line: 2987, column: 61, scope: !18754)
!18796 = !DILocation(line: 2987, column: 8, scope: !18754)
!18797 = !DILocation(line: 2987, column: 6, scope: !18754)
!18798 = !DILocation(line: 2988, column: 7, scope: !18799)
!18799 = distinct !DILexicalBlock(scope: !18754, file: !3, line: 2988, column: 6)
!18800 = !DILocation(line: 2988, column: 6, scope: !18754)
!18801 = !DILocation(line: 2989, column: 3, scope: !18799)
!18802 = !DILocation(line: 2991, column: 41, scope: !18754)
!18803 = !DILocation(line: 2991, column: 57, scope: !18754)
!18804 = !DILocation(line: 2991, column: 2, scope: !18754)
!18805 = !DILocation(line: 2994, column: 23, scope: !18806)
!18806 = distinct !DILexicalBlock(scope: !18754, file: !3, line: 2994, column: 6)
!18807 = !DILocation(line: 2994, column: 39, scope: !18806)
!18808 = !DILocation(line: 2994, column: 49, scope: !18806)
!18809 = !DILocation(line: 2994, column: 6, scope: !18806)
!18810 = !DILocation(line: 2994, column: 6, scope: !18754)
!18811 = !DILocation(line: 2995, column: 29, scope: !18812)
!18812 = distinct !DILexicalBlock(scope: !18806, file: !3, line: 2994, column: 65)
!18813 = !DILocation(line: 2995, column: 39, scope: !18812)
!18814 = !DILocation(line: 2995, column: 44, scope: !18812)
!18815 = !DILocation(line: 2995, column: 3, scope: !18812)
!18816 = !DILocation(line: 2996, column: 20, scope: !18812)
!18817 = !DILocation(line: 2996, column: 3, scope: !18812)
!18818 = !DILocation(line: 2997, column: 3, scope: !18812)
!18819 = !DILocation(line: 3000, column: 33, scope: !18754)
!18820 = !DILocation(line: 3000, column: 43, scope: !18754)
!18821 = !DILocation(line: 3000, column: 59, scope: !18754)
!18822 = !DILocation(line: 3001, column: 31, scope: !18754)
!18823 = !DILocation(line: 3001, column: 12, scope: !18754)
!18824 = !DILocation(line: 3001, column: 37, scope: !18754)
!18825 = !DILocation(line: 3000, column: 2, scope: !18754)
!18826 = !DILocation(line: 3003, column: 8, scope: !18754)
!18827 = !DILocation(line: 3003, column: 23, scope: !18754)
!18828 = !DILocation(line: 3003, column: 28, scope: !18754)
!18829 = !DILocation(line: 3003, column: 36, scope: !18754)
!18830 = !DILocation(line: 3003, column: 51, scope: !18754)
!18831 = !DILocation(line: 3003, column: 6, scope: !18754)
!18832 = !DILocation(line: 3005, column: 9, scope: !18754)
!18833 = !DILocation(line: 3005, column: 25, scope: !18754)
!18834 = !DILocation(line: 3005, column: 35, scope: !18754)
!18835 = !DILocation(line: 3005, column: 40, scope: !18754)
!18836 = !DILocation(line: 3004, column: 2, scope: !18754)
!18837 = !DILocation(line: 3007, column: 19, scope: !18754)
!18838 = !DILocation(line: 3007, column: 2, scope: !18754)
!18839 = !DILocation(line: 3008, column: 1, scope: !18754)
!18840 = distinct !DISubprogram(name: "ether_addr_equal", scope: !15536, file: !15536, line: 326, type: !18841, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18841 = !DISubroutineType(types: !18842)
!18842 = !{!696, !8639, !8639}
!18843 = !DILocalVariable(name: "addr1", arg: 1, scope: !18840, file: !15536, line: 326, type: !8639)
!18844 = !DILocation(line: 326, column: 47, scope: !18840)
!18845 = !DILocalVariable(name: "addr2", arg: 2, scope: !18840, file: !15536, line: 326, type: !8639)
!18846 = !DILocation(line: 326, column: 64, scope: !18840)
!18847 = !DILocalVariable(name: "fold", scope: !18840, file: !15536, line: 329, type: !862)
!18848 = !DILocation(line: 329, column: 6, scope: !18840)
!18849 = !DILocation(line: 329, column: 29, scope: !18840)
!18850 = !DILocation(line: 329, column: 15, scope: !18840)
!18851 = !DILocation(line: 329, column: 53, scope: !18840)
!18852 = !DILocation(line: 329, column: 39, scope: !18840)
!18853 = !DILocation(line: 329, column: 36, scope: !18840)
!18854 = !DILocation(line: 330, column: 23, scope: !18840)
!18855 = !DILocation(line: 330, column: 29, scope: !18840)
!18856 = !DILocation(line: 330, column: 8, scope: !18840)
!18857 = !DILocation(line: 330, column: 7, scope: !18840)
!18858 = !DILocation(line: 330, column: 53, scope: !18840)
!18859 = !DILocation(line: 330, column: 59, scope: !18840)
!18860 = !DILocation(line: 330, column: 38, scope: !18840)
!18861 = !DILocation(line: 330, column: 37, scope: !18840)
!18862 = !DILocation(line: 330, column: 35, scope: !18840)
!18863 = !DILocation(line: 329, column: 61, scope: !18840)
!18864 = !DILocation(line: 332, column: 9, scope: !18840)
!18865 = !DILocation(line: 332, column: 14, scope: !18840)
!18866 = !DILocation(line: 332, column: 2, scope: !18840)
!18867 = distinct !DISubprogram(name: "switchdev_notifier_info_to_extack", scope: !10207, file: !10207, line: 253, type: !18868, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18868 = !DISubroutineType(types: !18869)
!18869 = !{!2625, !15286}
!18870 = !DILocalVariable(name: "info", arg: 1, scope: !18867, file: !10207, line: 253, type: !15286)
!18871 = !DILocation(line: 253, column: 73, scope: !18867)
!18872 = !DILocation(line: 255, column: 9, scope: !18867)
!18873 = !DILocation(line: 255, column: 15, scope: !18867)
!18874 = !DILocation(line: 255, column: 2, scope: !18867)
!18875 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !15536, file: !15536, line: 116, type: !18876, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18876 = !DISubroutineType(types: !18877)
!18877 = !{!696, !8639}
!18878 = !DILocalVariable(name: "addr", arg: 1, scope: !18875, file: !15536, line: 116, type: !8639)
!18879 = !DILocation(line: 116, column: 54, scope: !18875)
!18880 = !DILocalVariable(name: "a", scope: !18875, file: !15536, line: 119, type: !862)
!18881 = !DILocation(line: 119, column: 6, scope: !18875)
!18882 = !DILocation(line: 119, column: 24, scope: !18875)
!18883 = !DILocation(line: 119, column: 10, scope: !18875)
!18884 = !DILocation(line: 126, column: 16, scope: !18875)
!18885 = !DILocation(line: 126, column: 14, scope: !18875)
!18886 = !DILocation(line: 126, column: 9, scope: !18875)
!18887 = !DILocation(line: 126, column: 2, scope: !18875)
!18888 = distinct !DISubprogram(name: "vxlan_addr_multicast", scope: !11249, file: !11249, line: 394, type: !18889, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18889 = !DISubroutineType(types: !18890)
!18890 = !{!696, !17814}
!18891 = !DILocalVariable(name: "ipa", arg: 1, scope: !18888, file: !11249, line: 394, type: !17814)
!18892 = !DILocation(line: 394, column: 65, scope: !18888)
!18893 = !DILocation(line: 396, column: 6, scope: !18894)
!18894 = distinct !DILexicalBlock(scope: !18888, file: !11249, line: 396, column: 6)
!18895 = !DILocation(line: 396, column: 11, scope: !18894)
!18896 = !DILocation(line: 396, column: 14, scope: !18894)
!18897 = !DILocation(line: 396, column: 24, scope: !18894)
!18898 = !DILocation(line: 396, column: 6, scope: !18888)
!18899 = !DILocation(line: 397, column: 34, scope: !18894)
!18900 = !DILocation(line: 397, column: 39, scope: !18894)
!18901 = !DILocation(line: 397, column: 44, scope: !18894)
!18902 = !DILocation(line: 397, column: 10, scope: !18894)
!18903 = !DILocation(line: 397, column: 3, scope: !18894)
!18904 = !DILocation(line: 399, column: 28, scope: !18894)
!18905 = !DILocation(line: 399, column: 33, scope: !18894)
!18906 = !DILocation(line: 399, column: 37, scope: !18894)
!18907 = !DILocation(line: 399, column: 46, scope: !18894)
!18908 = !DILocation(line: 399, column: 10, scope: !18894)
!18909 = !DILocation(line: 399, column: 3, scope: !18894)
!18910 = !DILocation(line: 400, column: 1, scope: !18888)
!18911 = distinct !DISubprogram(name: "ipv6_addr_is_multicast", scope: !18912, file: !18912, line: 729, type: !18913, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18912 = !DIFile(filename: "./include/net/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!18913 = !DISubroutineType(types: !18914)
!18914 = !{!696, !18915}
!18915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18916, size: 64)
!18916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2376)
!18917 = !DILocalVariable(name: "addr", arg: 1, scope: !18911, file: !18912, line: 729, type: !18915)
!18918 = !DILocation(line: 729, column: 66, scope: !18911)
!18919 = !DILocation(line: 731, column: 10, scope: !18911)
!18920 = !DILocation(line: 731, column: 16, scope: !18911)
!18921 = !DILocation(line: 731, column: 29, scope: !18911)
!18922 = !DILocation(line: 731, column: 50, scope: !18911)
!18923 = !DILocation(line: 731, column: 2, scope: !18911)
!18924 = distinct !DISubprogram(name: "ipv4_is_multicast", scope: !18925, file: !18925, line: 43, type: !18926, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18925 = !DIFile(filename: "./include/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!18926 = !DISubroutineType(types: !18927)
!18927 = !{!696, !622}
!18928 = !DILocalVariable(name: "addr", arg: 1, scope: !18924, file: !18925, line: 43, type: !622)
!18929 = !DILocation(line: 43, column: 45, scope: !18924)
!18930 = !DILocation(line: 45, column: 10, scope: !18924)
!18931 = !DILocation(line: 45, column: 15, scope: !18924)
!18932 = !DILocation(line: 45, column: 36, scope: !18924)
!18933 = !DILocation(line: 45, column: 2, scope: !18924)
!18934 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !11425, file: !3, line: 1978, type: !10370)
!18935 = !DILocation(line: 1978, column: 64, scope: !11425)
!18936 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !11425, file: !3, line: 1979, type: !10389)
!18937 = !DILocation(line: 1979, column: 34, scope: !11425)
!18938 = !DILocalVariable(name: "mlxsw_sp_port", arg: 3, scope: !11425, file: !3, line: 1980, type: !10406)
!18939 = !DILocation(line: 1980, column: 27, scope: !11425)
!18940 = !DILocalVariable(name: "extack", arg: 4, scope: !11425, file: !3, line: 1981, type: !2625)
!18941 = !DILocation(line: 1981, column: 29, scope: !11425)
!18942 = !DILocation(line: 1983, column: 18, scope: !18943)
!18943 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 1983, column: 6)
!18944 = !DILocation(line: 1983, column: 31, scope: !18943)
!18945 = !DILocation(line: 1983, column: 6, scope: !18943)
!18946 = !DILocation(line: 1983, column: 6, scope: !11425)
!18947 = !DILocation(line: 1984, column: 3, scope: !18948)
!18948 = distinct !DILexicalBlock(scope: !18943, file: !3, line: 1983, column: 37)
!18949 = !DILocalVariable(name: "__extack", scope: !18950, file: !3, line: 1984, type: !2625)
!18950 = distinct !DILexicalBlock(scope: !18948, file: !3, line: 1984, column: 3)
!18951 = !DILocation(line: 1984, column: 3, scope: !18950)
!18952 = !DILocation(line: 1984, column: 3, scope: !18953)
!18953 = distinct !DILexicalBlock(scope: !18950, file: !3, line: 1984, column: 3)
!18954 = !DILocation(line: 1985, column: 3, scope: !18948)
!18955 = !DILocation(line: 1989, column: 6, scope: !18956)
!18956 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 1989, column: 6)
!18957 = !DILocation(line: 1989, column: 21, scope: !18956)
!18958 = !DILocation(line: 1989, column: 35, scope: !18956)
!18959 = !DILocation(line: 1989, column: 6, scope: !11425)
!18960 = !DILocation(line: 1990, column: 35, scope: !18956)
!18961 = !DILocation(line: 1990, column: 50, scope: !18956)
!18962 = !DILocation(line: 1990, column: 3, scope: !18956)
!18963 = !DILocation(line: 1992, column: 2, scope: !11425)
!18964 = !DILocation(line: 1993, column: 1, scope: !11425)
!18965 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021q_port_leave", scope: !3, file: !3, line: 1996, type: !11186, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18966 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !18965, file: !3, line: 1996, type: !10370)
!18967 = !DILocation(line: 1996, column: 65, scope: !18965)
!18968 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !18965, file: !3, line: 1997, type: !10389)
!18969 = !DILocation(line: 1997, column: 35, scope: !18965)
!18970 = !DILocalVariable(name: "mlxsw_sp_port", arg: 3, scope: !18965, file: !3, line: 1998, type: !10406)
!18971 = !DILocation(line: 1998, column: 28, scope: !18965)
!18972 = !DILocation(line: 2001, column: 25, scope: !18965)
!18973 = !DILocation(line: 2001, column: 2, scope: !18965)
!18974 = !DILocation(line: 2002, column: 1, scope: !18965)
!18975 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !11428, file: !3, line: 2005, type: !10370)
!18976 = !DILocation(line: 2005, column: 65, scope: !11428)
!18977 = !DILocalVariable(name: "vxlan_dev", arg: 2, scope: !11428, file: !3, line: 2006, type: !3015)
!18978 = !DILocation(line: 2006, column: 31, scope: !11428)
!18979 = !DILocalVariable(name: "vid", arg: 3, scope: !11428, file: !3, line: 2006, type: !1192)
!18980 = !DILocation(line: 2006, column: 46, scope: !11428)
!18981 = !DILocalVariable(name: "extack", arg: 4, scope: !11428, file: !3, line: 2007, type: !2625)
!18982 = !DILocation(line: 2007, column: 30, scope: !11428)
!18983 = !DILocalVariable(name: "mlxsw_sp", scope: !11428, file: !3, line: 2009, type: !10421)
!18984 = !DILocation(line: 2009, column: 19, scope: !11428)
!18985 = !DILocation(line: 2009, column: 49, scope: !11428)
!18986 = !DILocation(line: 2009, column: 64, scope: !11428)
!18987 = !DILocation(line: 2009, column: 30, scope: !11428)
!18988 = !DILocalVariable(name: "vxlan", scope: !11428, file: !3, line: 2010, type: !12565)
!18989 = !DILocation(line: 2010, column: 20, scope: !11428)
!18990 = !DILocation(line: 2010, column: 40, scope: !11428)
!18991 = !DILocation(line: 2010, column: 28, scope: !11428)
!18992 = !DILocalVariable(name: "params", scope: !11428, file: !3, line: 2011, type: !18993)
!18993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_nve_params", file: !10053, line: 1191, size: 128, elements: !18994)
!18994 = !{!18995, !18996, !18997}
!18995 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !18993, file: !10053, line: 1192, baseType: !10356, size: 32)
!18996 = !DIDerivedType(tag: DW_TAG_member, name: "vni", scope: !18993, file: !10053, line: 1193, baseType: !622, size: 32, offset: 32)
!18997 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !18993, file: !10053, line: 1194, baseType: !3015, size: 64, offset: 64)
!18998 = !DILocation(line: 2011, column: 29, scope: !11428)
!18999 = !DILocation(line: 2011, column: 38, scope: !11428)
!19000 = !DILocation(line: 2013, column: 10, scope: !11428)
!19001 = !DILocation(line: 2013, column: 17, scope: !11428)
!19002 = !DILocation(line: 2013, column: 21, scope: !11428)
!19003 = !DILocation(line: 2014, column: 10, scope: !11428)
!19004 = !DILocalVariable(name: "fid", scope: !11428, file: !3, line: 2016, type: !11097)
!19005 = !DILocation(line: 2016, column: 23, scope: !11428)
!19006 = !DILocalVariable(name: "err", scope: !11428, file: !3, line: 2017, type: !7)
!19007 = !DILocation(line: 2017, column: 6, scope: !11428)
!19008 = !DILocation(line: 2023, column: 7, scope: !19009)
!19009 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 2023, column: 6)
!19010 = !DILocation(line: 2023, column: 6, scope: !11428)
!19011 = !DILocation(line: 2024, column: 35, scope: !19012)
!19012 = distinct !DILexicalBlock(scope: !19009, file: !3, line: 2023, column: 12)
!19013 = !DILocation(line: 2024, column: 9, scope: !19012)
!19014 = !DILocation(line: 2024, column: 7, scope: !19012)
!19015 = !DILocation(line: 2025, column: 7, scope: !19016)
!19016 = distinct !DILexicalBlock(scope: !19012, file: !3, line: 2025, column: 7)
!19017 = !DILocation(line: 2025, column: 11, scope: !19016)
!19018 = !DILocation(line: 2025, column: 15, scope: !19016)
!19019 = !DILocation(line: 2025, column: 7, scope: !19012)
!19020 = !DILocation(line: 2026, column: 11, scope: !19016)
!19021 = !DILocation(line: 2026, column: 4, scope: !19016)
!19022 = !DILocation(line: 2027, column: 2, scope: !19012)
!19023 = !DILocation(line: 2029, column: 31, scope: !11428)
!19024 = !DILocation(line: 2029, column: 41, scope: !11428)
!19025 = !DILocation(line: 2029, column: 8, scope: !11428)
!19026 = !DILocation(line: 2029, column: 6, scope: !11428)
!19027 = !DILocation(line: 2030, column: 13, scope: !19028)
!19028 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 2030, column: 6)
!19029 = !DILocation(line: 2030, column: 6, scope: !19028)
!19030 = !DILocation(line: 2030, column: 6, scope: !11428)
!19031 = !DILocation(line: 2031, column: 3, scope: !19032)
!19032 = distinct !DILexicalBlock(scope: !19028, file: !3, line: 2030, column: 19)
!19033 = !DILocalVariable(name: "__extack", scope: !19034, file: !3, line: 2031, type: !2625)
!19034 = distinct !DILexicalBlock(scope: !19032, file: !3, line: 2031, column: 3)
!19035 = !DILocation(line: 2031, column: 3, scope: !19034)
!19036 = !DILocation(line: 2031, column: 3, scope: !19037)
!19037 = distinct !DILexicalBlock(scope: !19034, file: !3, line: 2031, column: 3)
!19038 = !DILocation(line: 2032, column: 18, scope: !19032)
!19039 = !DILocation(line: 2032, column: 10, scope: !19032)
!19040 = !DILocation(line: 2032, column: 3, scope: !19032)
!19041 = !DILocation(line: 2035, column: 30, scope: !19042)
!19042 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 2035, column: 6)
!19043 = !DILocation(line: 2035, column: 6, scope: !19042)
!19044 = !DILocation(line: 2035, column: 6, scope: !11428)
!19045 = !DILocation(line: 2036, column: 3, scope: !19046)
!19046 = distinct !DILexicalBlock(scope: !19042, file: !3, line: 2035, column: 36)
!19047 = !DILocalVariable(name: "__extack", scope: !19048, file: !3, line: 2036, type: !2625)
!19048 = distinct !DILexicalBlock(scope: !19046, file: !3, line: 2036, column: 3)
!19049 = !DILocation(line: 2036, column: 3, scope: !19048)
!19050 = !DILocation(line: 2036, column: 3, scope: !19051)
!19051 = distinct !DILexicalBlock(scope: !19048, file: !3, line: 2036, column: 3)
!19052 = !DILocation(line: 2037, column: 7, scope: !19046)
!19053 = !DILocation(line: 2038, column: 3, scope: !19046)
!19054 = !DILocation(line: 2041, column: 32, scope: !11428)
!19055 = !DILocation(line: 2041, column: 42, scope: !11428)
!19056 = !DILocation(line: 2041, column: 56, scope: !11428)
!19057 = !DILocation(line: 2041, column: 8, scope: !11428)
!19058 = !DILocation(line: 2041, column: 6, scope: !11428)
!19059 = !DILocation(line: 2042, column: 6, scope: !19060)
!19060 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 2042, column: 6)
!19061 = !DILocation(line: 2042, column: 6, scope: !11428)
!19062 = !DILocation(line: 2043, column: 3, scope: !19060)
!19063 = !DILocation(line: 2045, column: 2, scope: !11428)
!19064 = !DILabel(scope: !11428, name: "err_nve_fid_enable", file: !3, line: 2047)
!19065 = !DILocation(line: 2047, column: 1, scope: !11428)
!19066 = !DILabel(scope: !11428, name: "err_vni_exists", file: !3, line: 2048)
!19067 = !DILocation(line: 2048, column: 1, scope: !11428)
!19068 = !DILocation(line: 2049, column: 19, scope: !11428)
!19069 = !DILocation(line: 2049, column: 2, scope: !11428)
!19070 = !DILocation(line: 2050, column: 9, scope: !11428)
!19071 = !DILocation(line: 2050, column: 2, scope: !11428)
!19072 = !DILocation(line: 2051, column: 1, scope: !11428)
!19073 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021q_fid_get", scope: !3, file: !3, line: 2077, type: !11194, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19074 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !19073, file: !3, line: 2077, type: !10370)
!19075 = !DILocation(line: 2077, column: 62, scope: !19073)
!19076 = !DILocalVariable(name: "vid", arg: 2, scope: !19073, file: !3, line: 2078, type: !1192)
!19077 = !DILocation(line: 2078, column: 14, scope: !19073)
!19078 = !DILocalVariable(name: "extack", arg: 3, scope: !19073, file: !3, line: 2078, type: !2625)
!19079 = !DILocation(line: 2078, column: 43, scope: !19073)
!19080 = !DILocalVariable(name: "mlxsw_sp", scope: !19073, file: !3, line: 2080, type: !10421)
!19081 = !DILocation(line: 2080, column: 19, scope: !19073)
!19082 = !DILocation(line: 2080, column: 49, scope: !19073)
!19083 = !DILocation(line: 2080, column: 64, scope: !19073)
!19084 = !DILocation(line: 2080, column: 30, scope: !19073)
!19085 = !DILocation(line: 2082, column: 32, scope: !19073)
!19086 = !DILocation(line: 2082, column: 42, scope: !19073)
!19087 = !DILocation(line: 2082, column: 9, scope: !19073)
!19088 = !DILocation(line: 2082, column: 2, scope: !19073)
!19089 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021q_fid_lookup", scope: !3, file: !3, line: 2086, type: !11198, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19090 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !19089, file: !3, line: 2086, type: !10370)
!19091 = !DILocation(line: 2086, column: 65, scope: !19089)
!19092 = !DILocalVariable(name: "vid", arg: 2, scope: !19089, file: !3, line: 2087, type: !1192)
!19093 = !DILocation(line: 2087, column: 10, scope: !19089)
!19094 = !DILocalVariable(name: "mlxsw_sp", scope: !19089, file: !3, line: 2089, type: !10421)
!19095 = !DILocation(line: 2089, column: 19, scope: !19089)
!19096 = !DILocation(line: 2089, column: 49, scope: !19089)
!19097 = !DILocation(line: 2089, column: 64, scope: !19089)
!19098 = !DILocation(line: 2089, column: 30, scope: !19089)
!19099 = !DILocation(line: 2091, column: 35, scope: !19089)
!19100 = !DILocation(line: 2091, column: 45, scope: !19089)
!19101 = !DILocation(line: 2091, column: 9, scope: !19089)
!19102 = !DILocation(line: 2091, column: 2, scope: !19089)
!19103 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021q_fid_vid", scope: !3, file: !3, line: 2095, type: !11202, scopeLine: 2097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19104 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !19103, file: !3, line: 2095, type: !10370)
!19105 = !DILocation(line: 2095, column: 62, scope: !19103)
!19106 = !DILocalVariable(name: "fid", arg: 2, scope: !19103, file: !3, line: 2096, type: !11204)
!19107 = !DILocation(line: 2096, column: 37, scope: !19103)
!19108 = !DILocation(line: 2098, column: 32, scope: !19103)
!19109 = !DILocation(line: 2098, column: 9, scope: !19103)
!19110 = !DILocation(line: 2098, column: 2, scope: !19103)
!19111 = distinct !DISubprogram(name: "is_vlan_dev", scope: !19112, file: !19112, line: 72, type: !13398, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19112 = !DIFile(filename: "./include/linux/if_vlan.h", directory: "/home/lizy2001/genbc/linux")
!19113 = !DILocalVariable(name: "dev", arg: 1, scope: !19111, file: !19112, line: 72, type: !3015)
!19114 = !DILocation(line: 72, column: 57, scope: !19111)
!19115 = !DILocation(line: 74, column: 16, scope: !19111)
!19116 = !DILocation(line: 74, column: 21, scope: !19111)
!19117 = !DILocation(line: 74, column: 32, scope: !19111)
!19118 = !DILocation(line: 74, column: 9, scope: !19111)
!19119 = distinct !DISubprogram(name: "mlxsw_sp_vxlan_mapped_vid", scope: !10053, file: !10053, line: 368, type: !19120, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19120 = !DISubroutineType(types: !19121)
!19121 = !{!7, !3015, !8502}
!19122 = !DILocalVariable(name: "vxlan_dev", arg: 1, scope: !19119, file: !10053, line: 368, type: !3015)
!19123 = !DILocation(line: 368, column: 52, scope: !19119)
!19124 = !DILocalVariable(name: "p_vid", arg: 2, scope: !19119, file: !10053, line: 368, type: !8502)
!19125 = !DILocation(line: 368, column: 68, scope: !19119)
!19126 = !DILocalVariable(name: "vinfo", scope: !19119, file: !10053, line: 370, type: !19127)
!19127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bridge_vlan_info", file: !19128, line: 136, size: 32, elements: !19129)
!19128 = !DIFile(filename: "./include/uapi/linux/if_bridge.h", directory: "/home/lizy2001/genbc/linux")
!19129 = !{!19130, !19131}
!19130 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !19127, file: !19128, line: 137, baseType: !632, size: 16)
!19131 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !19127, file: !19128, line: 138, baseType: !632, size: 16, offset: 16)
!19132 = !DILocation(line: 370, column: 26, scope: !19119)
!19133 = !DILocalVariable(name: "vid", scope: !19119, file: !10053, line: 371, type: !1192)
!19134 = !DILocation(line: 371, column: 6, scope: !19119)
!19135 = !DILocalVariable(name: "err", scope: !19119, file: !10053, line: 372, type: !7)
!19136 = !DILocation(line: 372, column: 6, scope: !19119)
!19137 = !DILocation(line: 374, column: 25, scope: !19119)
!19138 = !DILocation(line: 374, column: 8, scope: !19119)
!19139 = !DILocation(line: 374, column: 6, scope: !19119)
!19140 = !DILocation(line: 375, column: 6, scope: !19141)
!19141 = distinct !DILexicalBlock(scope: !19119, file: !10053, line: 375, column: 6)
!19142 = !DILocation(line: 375, column: 10, scope: !19141)
!19143 = !DILocation(line: 375, column: 14, scope: !19141)
!19144 = !DILocation(line: 375, column: 6, scope: !19119)
!19145 = !DILocation(line: 376, column: 3, scope: !19141)
!19146 = !DILocation(line: 378, column: 25, scope: !19119)
!19147 = !DILocation(line: 378, column: 36, scope: !19119)
!19148 = !DILocation(line: 378, column: 8, scope: !19119)
!19149 = !DILocation(line: 378, column: 6, scope: !19119)
!19150 = !DILocation(line: 379, column: 6, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19119, file: !10053, line: 379, column: 6)
!19152 = !DILocation(line: 379, column: 10, scope: !19151)
!19153 = !DILocation(line: 379, column: 21, scope: !19151)
!19154 = !DILocation(line: 379, column: 15, scope: !19151)
!19155 = !DILocation(line: 379, column: 27, scope: !19151)
!19156 = !DILocation(line: 379, column: 6, scope: !19119)
!19157 = !DILocation(line: 380, column: 7, scope: !19151)
!19158 = !DILocation(line: 380, column: 3, scope: !19151)
!19159 = !DILocation(line: 379, column: 54, scope: !19151)
!19160 = !DILabel(scope: !19119, name: "out", file: !10053, line: 382)
!19161 = !DILocation(line: 382, column: 1, scope: !19119)
!19162 = !DILocation(line: 383, column: 11, scope: !19119)
!19163 = !DILocation(line: 383, column: 3, scope: !19119)
!19164 = !DILocation(line: 383, column: 9, scope: !19119)
!19165 = !DILocation(line: 384, column: 9, scope: !19119)
!19166 = !DILocation(line: 384, column: 2, scope: !19119)
!19167 = distinct !DISubprogram(name: "br_vlan_get_pvid", scope: !15141, file: !15141, line: 110, type: !19120, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19168 = !DILocalVariable(name: "dev", arg: 1, scope: !19167, file: !15141, line: 110, type: !3015)
!19169 = !DILocation(line: 110, column: 61, scope: !19167)
!19170 = !DILocalVariable(name: "p_pvid", arg: 2, scope: !19167, file: !15141, line: 110, type: !8502)
!19171 = !DILocation(line: 110, column: 71, scope: !19167)
!19172 = !DILocation(line: 112, column: 2, scope: !19167)
!19173 = distinct !DISubprogram(name: "br_vlan_get_info", scope: !15141, file: !15141, line: 125, type: !19174, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19174 = !DISubroutineType(types: !19175)
!19175 = !{!7, !3015, !1192, !19176}
!19176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19127, size: 64)
!19177 = !DILocalVariable(name: "dev", arg: 1, scope: !19173, file: !15141, line: 125, type: !3015)
!19178 = !DILocation(line: 125, column: 61, scope: !19173)
!19179 = !DILocalVariable(name: "vid", arg: 2, scope: !19173, file: !15141, line: 125, type: !1192)
!19180 = !DILocation(line: 125, column: 70, scope: !19173)
!19181 = !DILocalVariable(name: "p_vinfo", arg: 3, scope: !19173, file: !15141, line: 126, type: !19176)
!19182 = !DILocation(line: 126, column: 33, scope: !19173)
!19183 = !DILocation(line: 128, column: 2, scope: !19173)
!19184 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !11439, file: !3, line: 2128, type: !10370)
!19185 = !DILocation(line: 2128, column: 64, scope: !11439)
!19186 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !11439, file: !3, line: 2129, type: !10389)
!19187 = !DILocation(line: 2129, column: 34, scope: !11439)
!19188 = !DILocalVariable(name: "mlxsw_sp_port", arg: 3, scope: !11439, file: !3, line: 2130, type: !10406)
!19189 = !DILocation(line: 2130, column: 27, scope: !11439)
!19190 = !DILocalVariable(name: "extack", arg: 4, scope: !11439, file: !3, line: 2131, type: !2625)
!19191 = !DILocation(line: 2131, column: 29, scope: !11439)
!19192 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !11439, file: !3, line: 2133, type: !11091)
!19193 = !DILocation(line: 2133, column: 29, scope: !11439)
!19194 = !DILocalVariable(name: "dev", scope: !11439, file: !3, line: 2134, type: !451)
!19195 = !DILocation(line: 2134, column: 21, scope: !11439)
!19196 = !DILocation(line: 2134, column: 27, scope: !11439)
!19197 = !DILocation(line: 2134, column: 40, scope: !11439)
!19198 = !DILocalVariable(name: "vid", scope: !11439, file: !3, line: 2135, type: !1192)
!19199 = !DILocation(line: 2135, column: 6, scope: !11439)
!19200 = !DILocation(line: 2137, column: 20, scope: !11439)
!19201 = !DILocation(line: 2137, column: 8, scope: !11439)
!19202 = !DILocation(line: 2137, column: 44, scope: !11439)
!19203 = !DILocation(line: 2137, column: 27, scope: !11439)
!19204 = !DILocation(line: 2137, column: 6, scope: !11439)
!19205 = !DILocation(line: 2138, column: 54, scope: !11439)
!19206 = !DILocation(line: 2138, column: 69, scope: !11439)
!19207 = !DILocation(line: 2138, column: 23, scope: !11439)
!19208 = !DILocation(line: 2138, column: 21, scope: !11439)
!19209 = !DILocalVariable(name: "__ret_warn_on", scope: !19210, file: !3, line: 2139, type: !7)
!19210 = distinct !DILexicalBlock(scope: !19211, file: !3, line: 2139, column: 6)
!19211 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 2139, column: 6)
!19212 = !DILocation(line: 2139, column: 6, scope: !19210)
!19213 = !DILocation(line: 2139, column: 6, scope: !19214)
!19214 = distinct !DILexicalBlock(scope: !19210, file: !3, line: 2139, column: 6)
!19215 = !DILocation(line: 2139, column: 6, scope: !19216)
!19216 = distinct !DILexicalBlock(scope: !19214, file: !3, line: 2139, column: 6)
!19217 = !DILocation(line: 2139, column: 6, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 2139, column: 6)
!19219 = !DILocation(line: 2139, column: 6, scope: !19220)
!19220 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 2139, column: 6)
!19221 = !{i32 -2134709326, i32 -2134709297, i32 -2134709251, i32 -2134709193, i32 -2134709139, i32 -2134709085, i32 -2134709030, i32 -2134708999}
!19222 = !DILocation(line: 2139, column: 6, scope: !19223)
!19223 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 2139, column: 6)
!19224 = !{i32 -2134708560, i32 -2134708553, i32 -2134708501, i32 -2134708470, i32 -2134708440}
!19225 = !DILocation(line: 2139, column: 6, scope: !19226)
!19226 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 2139, column: 6)
!19227 = !DILocation(line: 2139, column: 6, scope: !19211)
!19228 = !DILocation(line: 2139, column: 6, scope: !11439)
!19229 = !DILocation(line: 2140, column: 3, scope: !19211)
!19230 = !DILocation(line: 2142, column: 33, scope: !19231)
!19231 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 2142, column: 6)
!19232 = !DILocation(line: 2142, column: 48, scope: !19231)
!19233 = !DILocation(line: 2142, column: 63, scope: !19231)
!19234 = !DILocation(line: 2142, column: 6, scope: !19231)
!19235 = !DILocation(line: 2142, column: 6, scope: !11439)
!19236 = !DILocation(line: 2143, column: 3, scope: !19237)
!19237 = distinct !DILexicalBlock(scope: !19231, file: !3, line: 2142, column: 69)
!19238 = !DILocalVariable(name: "__extack", scope: !19239, file: !3, line: 2143, type: !2625)
!19239 = distinct !DILexicalBlock(scope: !19237, file: !3, line: 2143, column: 3)
!19240 = !DILocation(line: 2143, column: 3, scope: !19239)
!19241 = !DILocation(line: 2143, column: 3, scope: !19242)
!19242 = distinct !DILexicalBlock(scope: !19239, file: !3, line: 2143, column: 3)
!19243 = !DILocation(line: 2144, column: 3, scope: !19237)
!19244 = !DILocation(line: 2148, column: 6, scope: !19245)
!19245 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 2148, column: 6)
!19246 = !DILocation(line: 2148, column: 26, scope: !19245)
!19247 = !DILocation(line: 2148, column: 6, scope: !11439)
!19248 = !DILocation(line: 2149, column: 35, scope: !19245)
!19249 = !DILocation(line: 2149, column: 3, scope: !19245)
!19250 = !DILocation(line: 2151, column: 40, scope: !11439)
!19251 = !DILocation(line: 2151, column: 60, scope: !11439)
!19252 = !DILocation(line: 2152, column: 12, scope: !11439)
!19253 = !DILocation(line: 2151, column: 9, scope: !11439)
!19254 = !DILocation(line: 2151, column: 2, scope: !11439)
!19255 = !DILocation(line: 2153, column: 1, scope: !11439)
!19256 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021d_port_leave", scope: !3, file: !3, line: 2156, type: !11186, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19257 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !19256, file: !3, line: 2156, type: !10370)
!19258 = !DILocation(line: 2156, column: 65, scope: !19256)
!19259 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !19256, file: !3, line: 2157, type: !10389)
!19260 = !DILocation(line: 2157, column: 35, scope: !19256)
!19261 = !DILocalVariable(name: "mlxsw_sp_port", arg: 3, scope: !19256, file: !3, line: 2158, type: !10406)
!19262 = !DILocation(line: 2158, column: 28, scope: !19256)
!19263 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !19256, file: !3, line: 2160, type: !11091)
!19264 = !DILocation(line: 2160, column: 29, scope: !19256)
!19265 = !DILocalVariable(name: "dev", scope: !19256, file: !3, line: 2161, type: !451)
!19266 = !DILocation(line: 2161, column: 21, scope: !19256)
!19267 = !DILocation(line: 2161, column: 27, scope: !19256)
!19268 = !DILocation(line: 2161, column: 40, scope: !19256)
!19269 = !DILocalVariable(name: "vid", scope: !19256, file: !3, line: 2162, type: !1192)
!19270 = !DILocation(line: 2162, column: 6, scope: !19256)
!19271 = !DILocation(line: 2164, column: 20, scope: !19256)
!19272 = !DILocation(line: 2164, column: 8, scope: !19256)
!19273 = !DILocation(line: 2164, column: 44, scope: !19256)
!19274 = !DILocation(line: 2164, column: 27, scope: !19256)
!19275 = !DILocation(line: 2164, column: 6, scope: !19256)
!19276 = !DILocation(line: 2165, column: 54, scope: !19256)
!19277 = !DILocation(line: 2165, column: 69, scope: !19256)
!19278 = !DILocation(line: 2165, column: 23, scope: !19256)
!19279 = !DILocation(line: 2165, column: 21, scope: !19256)
!19280 = !DILocation(line: 2166, column: 7, scope: !19281)
!19281 = distinct !DILexicalBlock(scope: !19256, file: !3, line: 2166, column: 6)
!19282 = !DILocation(line: 2166, column: 26, scope: !19281)
!19283 = !DILocation(line: 2166, column: 30, scope: !19281)
!19284 = !DILocation(line: 2166, column: 50, scope: !19281)
!19285 = !DILocation(line: 2166, column: 6, scope: !19256)
!19286 = !DILocation(line: 2167, column: 3, scope: !19281)
!19287 = !DILocation(line: 2169, column: 34, scope: !19256)
!19288 = !DILocation(line: 2169, column: 2, scope: !19256)
!19289 = !DILocation(line: 2170, column: 1, scope: !19256)
!19290 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !11445, file: !3, line: 2173, type: !10370)
!19291 = !DILocation(line: 2173, column: 65, scope: !11445)
!19292 = !DILocalVariable(name: "vxlan_dev", arg: 2, scope: !11445, file: !3, line: 2174, type: !3015)
!19293 = !DILocation(line: 2174, column: 31, scope: !11445)
!19294 = !DILocalVariable(name: "vid", arg: 3, scope: !11445, file: !3, line: 2174, type: !1192)
!19295 = !DILocation(line: 2174, column: 46, scope: !11445)
!19296 = !DILocalVariable(name: "extack", arg: 4, scope: !11445, file: !3, line: 2175, type: !2625)
!19297 = !DILocation(line: 2175, column: 30, scope: !11445)
!19298 = !DILocalVariable(name: "mlxsw_sp", scope: !11445, file: !3, line: 2177, type: !10421)
!19299 = !DILocation(line: 2177, column: 19, scope: !11445)
!19300 = !DILocation(line: 2177, column: 49, scope: !11445)
!19301 = !DILocation(line: 2177, column: 64, scope: !11445)
!19302 = !DILocation(line: 2177, column: 30, scope: !11445)
!19303 = !DILocalVariable(name: "vxlan", scope: !11445, file: !3, line: 2178, type: !12565)
!19304 = !DILocation(line: 2178, column: 20, scope: !11445)
!19305 = !DILocation(line: 2178, column: 40, scope: !11445)
!19306 = !DILocation(line: 2178, column: 28, scope: !11445)
!19307 = !DILocalVariable(name: "params", scope: !11445, file: !3, line: 2179, type: !18993)
!19308 = !DILocation(line: 2179, column: 29, scope: !11445)
!19309 = !DILocation(line: 2179, column: 38, scope: !11445)
!19310 = !DILocation(line: 2181, column: 10, scope: !11445)
!19311 = !DILocation(line: 2181, column: 17, scope: !11445)
!19312 = !DILocation(line: 2181, column: 21, scope: !11445)
!19313 = !DILocation(line: 2182, column: 10, scope: !11445)
!19314 = !DILocalVariable(name: "fid", scope: !11445, file: !3, line: 2184, type: !11097)
!19315 = !DILocation(line: 2184, column: 23, scope: !11445)
!19316 = !DILocalVariable(name: "err", scope: !11445, file: !3, line: 2185, type: !7)
!19317 = !DILocation(line: 2185, column: 6, scope: !11445)
!19318 = !DILocation(line: 2187, column: 31, scope: !11445)
!19319 = !DILocation(line: 2187, column: 41, scope: !11445)
!19320 = !DILocation(line: 2187, column: 56, scope: !11445)
!19321 = !DILocation(line: 2187, column: 61, scope: !11445)
!19322 = !DILocation(line: 2187, column: 8, scope: !11445)
!19323 = !DILocation(line: 2187, column: 6, scope: !11445)
!19324 = !DILocation(line: 2188, column: 13, scope: !19325)
!19325 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2188, column: 6)
!19326 = !DILocation(line: 2188, column: 6, scope: !19325)
!19327 = !DILocation(line: 2188, column: 6, scope: !11445)
!19328 = !DILocation(line: 2189, column: 3, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19325, file: !3, line: 2188, column: 19)
!19330 = !DILocalVariable(name: "__extack", scope: !19331, file: !3, line: 2189, type: !2625)
!19331 = distinct !DILexicalBlock(scope: !19329, file: !3, line: 2189, column: 3)
!19332 = !DILocation(line: 2189, column: 3, scope: !19331)
!19333 = !DILocation(line: 2189, column: 3, scope: !19334)
!19334 = distinct !DILexicalBlock(scope: !19331, file: !3, line: 2189, column: 3)
!19335 = !DILocation(line: 2190, column: 3, scope: !19329)
!19336 = !DILocation(line: 2193, column: 30, scope: !19337)
!19337 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2193, column: 6)
!19338 = !DILocation(line: 2193, column: 6, scope: !19337)
!19339 = !DILocation(line: 2193, column: 6, scope: !11445)
!19340 = !DILocation(line: 2194, column: 3, scope: !19341)
!19341 = distinct !DILexicalBlock(scope: !19337, file: !3, line: 2193, column: 36)
!19342 = !DILocalVariable(name: "__extack", scope: !19343, file: !3, line: 2194, type: !2625)
!19343 = distinct !DILexicalBlock(scope: !19341, file: !3, line: 2194, column: 3)
!19344 = !DILocation(line: 2194, column: 3, scope: !19343)
!19345 = !DILocation(line: 2194, column: 3, scope: !19346)
!19346 = distinct !DILexicalBlock(scope: !19343, file: !3, line: 2194, column: 3)
!19347 = !DILocation(line: 2195, column: 7, scope: !19341)
!19348 = !DILocation(line: 2196, column: 3, scope: !19341)
!19349 = !DILocation(line: 2199, column: 32, scope: !11445)
!19350 = !DILocation(line: 2199, column: 42, scope: !11445)
!19351 = !DILocation(line: 2199, column: 56, scope: !11445)
!19352 = !DILocation(line: 2199, column: 8, scope: !11445)
!19353 = !DILocation(line: 2199, column: 6, scope: !11445)
!19354 = !DILocation(line: 2200, column: 6, scope: !19355)
!19355 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2200, column: 6)
!19356 = !DILocation(line: 2200, column: 6, scope: !11445)
!19357 = !DILocation(line: 2201, column: 3, scope: !19355)
!19358 = !DILocation(line: 2203, column: 2, scope: !11445)
!19359 = !DILabel(scope: !11445, name: "err_nve_fid_enable", file: !3, line: 2205)
!19360 = !DILocation(line: 2205, column: 1, scope: !11445)
!19361 = !DILabel(scope: !11445, name: "err_vni_exists", file: !3, line: 2206)
!19362 = !DILocation(line: 2206, column: 1, scope: !11445)
!19363 = !DILocation(line: 2207, column: 19, scope: !11445)
!19364 = !DILocation(line: 2207, column: 2, scope: !11445)
!19365 = !DILocation(line: 2208, column: 9, scope: !11445)
!19366 = !DILocation(line: 2208, column: 2, scope: !11445)
!19367 = !DILocation(line: 2209, column: 1, scope: !11445)
!19368 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021d_fid_get", scope: !3, file: !3, line: 2212, type: !11194, scopeLine: 2214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19369 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !19368, file: !3, line: 2212, type: !10370)
!19370 = !DILocation(line: 2212, column: 62, scope: !19368)
!19371 = !DILocalVariable(name: "vid", arg: 2, scope: !19368, file: !3, line: 2213, type: !1192)
!19372 = !DILocation(line: 2213, column: 14, scope: !19368)
!19373 = !DILocalVariable(name: "extack", arg: 3, scope: !19368, file: !3, line: 2213, type: !2625)
!19374 = !DILocation(line: 2213, column: 43, scope: !19368)
!19375 = !DILocalVariable(name: "mlxsw_sp", scope: !19368, file: !3, line: 2215, type: !10421)
!19376 = !DILocation(line: 2215, column: 19, scope: !19368)
!19377 = !DILocation(line: 2215, column: 49, scope: !19368)
!19378 = !DILocation(line: 2215, column: 64, scope: !19368)
!19379 = !DILocation(line: 2215, column: 30, scope: !19368)
!19380 = !DILocation(line: 2217, column: 32, scope: !19368)
!19381 = !DILocation(line: 2217, column: 42, scope: !19368)
!19382 = !DILocation(line: 2217, column: 57, scope: !19368)
!19383 = !DILocation(line: 2217, column: 62, scope: !19368)
!19384 = !DILocation(line: 2217, column: 9, scope: !19368)
!19385 = !DILocation(line: 2217, column: 2, scope: !19368)
!19386 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021d_fid_lookup", scope: !3, file: !3, line: 2221, type: !11198, scopeLine: 2223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19387 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !19386, file: !3, line: 2221, type: !10370)
!19388 = !DILocation(line: 2221, column: 65, scope: !19386)
!19389 = !DILocalVariable(name: "vid", arg: 2, scope: !19386, file: !3, line: 2222, type: !1192)
!19390 = !DILocation(line: 2222, column: 10, scope: !19386)
!19391 = !DILocalVariable(name: "mlxsw_sp", scope: !19386, file: !3, line: 2224, type: !10421)
!19392 = !DILocation(line: 2224, column: 19, scope: !19386)
!19393 = !DILocation(line: 2224, column: 49, scope: !19386)
!19394 = !DILocation(line: 2224, column: 64, scope: !19386)
!19395 = !DILocation(line: 2224, column: 30, scope: !19386)
!19396 = !DILocation(line: 2227, column: 6, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19386, file: !3, line: 2227, column: 6)
!19398 = !DILocation(line: 2227, column: 6, scope: !19386)
!19399 = !DILocation(line: 2228, column: 3, scope: !19397)
!19400 = !DILocation(line: 2230, column: 35, scope: !19386)
!19401 = !DILocation(line: 2230, column: 45, scope: !19386)
!19402 = !DILocation(line: 2230, column: 60, scope: !19386)
!19403 = !DILocation(line: 2230, column: 65, scope: !19386)
!19404 = !DILocation(line: 2230, column: 9, scope: !19386)
!19405 = !DILocation(line: 2230, column: 2, scope: !19386)
!19406 = !DILocation(line: 2231, column: 1, scope: !19386)
!19407 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021d_fid_vid", scope: !3, file: !3, line: 2234, type: !11202, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19408 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !19407, file: !3, line: 2234, type: !10370)
!19409 = !DILocation(line: 2234, column: 62, scope: !19407)
!19410 = !DILocalVariable(name: "fid", arg: 2, scope: !19407, file: !3, line: 2235, type: !11204)
!19411 = !DILocation(line: 2235, column: 37, scope: !19407)
!19412 = !DILocation(line: 2237, column: 2, scope: !19407)
!19413 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_find_by_vid", scope: !10053, file: !10053, line: 406, type: !19414, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19414 = !DISubroutineType(types: !19415)
!19415 = !{!11091, !19416, !1192}
!19416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19417, size: 64)
!19417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10407)
!19418 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !19413, file: !10053, line: 406, type: !19416)
!19419 = !DILocation(line: 406, column: 60, scope: !19413)
!19420 = !DILocalVariable(name: "vid", arg: 2, scope: !19413, file: !10053, line: 407, type: !1192)
!19421 = !DILocation(line: 407, column: 15, scope: !19413)
!19422 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !19413, file: !10053, line: 409, type: !11091)
!19423 = !DILocation(line: 409, column: 29, scope: !19413)
!19424 = !DILocalVariable(name: "__mptr", scope: !19425, file: !10053, line: 411, type: !726)
!19425 = distinct !DILexicalBlock(scope: !19426, file: !10053, line: 411, column: 2)
!19426 = distinct !DILexicalBlock(scope: !19413, file: !10053, line: 411, column: 2)
!19427 = !DILocation(line: 411, column: 2, scope: !19425)
!19428 = !DILocation(line: 411, column: 2, scope: !19429)
!19429 = distinct !DILexicalBlock(scope: !19425, file: !10053, line: 411, column: 2)
!19430 = !DILocation(line: 411, column: 2, scope: !19426)
!19431 = !DILocation(line: 411, column: 2, scope: !19432)
!19432 = distinct !DILexicalBlock(scope: !19426, file: !10053, line: 411, column: 2)
!19433 = !DILocation(line: 413, column: 7, scope: !19434)
!19434 = distinct !DILexicalBlock(scope: !19435, file: !10053, line: 413, column: 7)
!19435 = distinct !DILexicalBlock(scope: !19432, file: !10053, line: 412, column: 14)
!19436 = !DILocation(line: 413, column: 27, scope: !19434)
!19437 = !DILocation(line: 413, column: 34, scope: !19434)
!19438 = !DILocation(line: 413, column: 31, scope: !19434)
!19439 = !DILocation(line: 413, column: 7, scope: !19435)
!19440 = !DILocation(line: 414, column: 11, scope: !19434)
!19441 = !DILocation(line: 414, column: 4, scope: !19434)
!19442 = !DILocation(line: 415, column: 2, scope: !19435)
!19443 = !DILocalVariable(name: "__mptr", scope: !19444, file: !10053, line: 411, type: !726)
!19444 = distinct !DILexicalBlock(scope: !19432, file: !10053, line: 411, column: 2)
!19445 = !DILocation(line: 411, column: 2, scope: !19444)
!19446 = !DILocation(line: 411, column: 2, scope: !19447)
!19447 = distinct !DILexicalBlock(scope: !19444, file: !10053, line: 411, column: 2)
!19448 = distinct !{!19448, !19430, !19449}
!19449 = !DILocation(line: 415, column: 2, scope: !19426)
!19450 = !DILocation(line: 417, column: 2, scope: !19413)
!19451 = !DILocation(line: 418, column: 1, scope: !19413)
!19452 = distinct !DISubprogram(name: "mlxsw_sp_port_is_br_member", scope: !3, file: !3, line: 2111, type: !19453, scopeLine: 2113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19453 = !DISubroutineType(types: !19454)
!19454 = !{!696, !19416, !3015}
!19455 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !19452, file: !3, line: 2111, type: !19416)
!19456 = !DILocation(line: 2111, column: 56, scope: !19452)
!19457 = !DILocalVariable(name: "br_dev", arg: 2, scope: !19452, file: !3, line: 2112, type: !3015)
!19458 = !DILocation(line: 2112, column: 32, scope: !19452)
!19459 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !19452, file: !3, line: 2114, type: !11091)
!19460 = !DILocation(line: 2114, column: 29, scope: !19452)
!19461 = !DILocalVariable(name: "__mptr", scope: !19462, file: !3, line: 2116, type: !726)
!19462 = distinct !DILexicalBlock(scope: !19463, file: !3, line: 2116, column: 2)
!19463 = distinct !DILexicalBlock(scope: !19452, file: !3, line: 2116, column: 2)
!19464 = !DILocation(line: 2116, column: 2, scope: !19462)
!19465 = !DILocation(line: 2116, column: 2, scope: !19466)
!19466 = distinct !DILexicalBlock(scope: !19462, file: !3, line: 2116, column: 2)
!19467 = !DILocation(line: 2116, column: 2, scope: !19463)
!19468 = !DILocation(line: 2116, column: 2, scope: !19469)
!19469 = distinct !DILexicalBlock(scope: !19463, file: !3, line: 2116, column: 2)
!19470 = !DILocation(line: 2118, column: 7, scope: !19471)
!19471 = distinct !DILexicalBlock(scope: !19472, file: !3, line: 2118, column: 7)
!19472 = distinct !DILexicalBlock(scope: !19469, file: !3, line: 2117, column: 14)
!19473 = !DILocation(line: 2118, column: 27, scope: !19471)
!19474 = !DILocation(line: 2118, column: 39, scope: !19471)
!19475 = !DILocation(line: 2119, column: 7, scope: !19471)
!19476 = !DILocation(line: 2119, column: 27, scope: !19471)
!19477 = !DILocation(line: 2119, column: 40, scope: !19471)
!19478 = !DILocation(line: 2119, column: 55, scope: !19471)
!19479 = !DILocation(line: 2120, column: 7, scope: !19471)
!19480 = !DILocation(line: 2119, column: 59, scope: !19471)
!19481 = !DILocation(line: 2118, column: 7, scope: !19472)
!19482 = !DILocation(line: 2121, column: 4, scope: !19471)
!19483 = !DILocation(line: 2122, column: 2, scope: !19472)
!19484 = !DILocalVariable(name: "__mptr", scope: !19485, file: !3, line: 2116, type: !726)
!19485 = distinct !DILexicalBlock(scope: !19469, file: !3, line: 2116, column: 2)
!19486 = !DILocation(line: 2116, column: 2, scope: !19485)
!19487 = !DILocation(line: 2116, column: 2, scope: !19488)
!19488 = distinct !DILexicalBlock(scope: !19485, file: !3, line: 2116, column: 2)
!19489 = distinct !{!19489, !19467, !19490}
!19490 = !DILocation(line: 2122, column: 2, scope: !19463)
!19491 = !DILocation(line: 2124, column: 2, scope: !19452)
!19492 = !DILocation(line: 2125, column: 1, scope: !19452)
!19493 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_bridge_join", scope: !3, file: !3, line: 1035, type: !19494, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19494 = !DISubroutineType(types: !19495)
!19495 = !{!7, !11091, !10389, !2625}
!19496 = !DILocalVariable(name: "mlxsw_sp_port_vlan", arg: 1, scope: !19493, file: !3, line: 1035, type: !11091)
!19497 = !DILocation(line: 1035, column: 59, scope: !19493)
!19498 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !19493, file: !3, line: 1036, type: !10389)
!19499 = !DILocation(line: 1036, column: 40, scope: !19493)
!19500 = !DILocalVariable(name: "extack", arg: 3, scope: !19493, file: !3, line: 1037, type: !2625)
!19501 = !DILocation(line: 1037, column: 35, scope: !19493)
!19502 = !DILocalVariable(name: "mlxsw_sp_port", scope: !19493, file: !3, line: 1039, type: !10406)
!19503 = !DILocation(line: 1039, column: 24, scope: !19493)
!19504 = !DILocation(line: 1039, column: 40, scope: !19493)
!19505 = !DILocation(line: 1039, column: 60, scope: !19493)
!19506 = !DILocalVariable(name: "bridge_vlan", scope: !19493, file: !3, line: 1040, type: !11206)
!19507 = !DILocation(line: 1040, column: 31, scope: !19493)
!19508 = !DILocalVariable(name: "vid", scope: !19493, file: !3, line: 1041, type: !1192)
!19509 = !DILocation(line: 1041, column: 6, scope: !19493)
!19510 = !DILocation(line: 1041, column: 12, scope: !19493)
!19511 = !DILocation(line: 1041, column: 32, scope: !19493)
!19512 = !DILocalVariable(name: "err", scope: !19493, file: !3, line: 1042, type: !7)
!19513 = !DILocation(line: 1042, column: 6, scope: !19493)
!19514 = !DILocation(line: 1045, column: 6, scope: !19515)
!19515 = distinct !DILexicalBlock(scope: !19493, file: !3, line: 1045, column: 6)
!19516 = !DILocation(line: 1045, column: 26, scope: !19515)
!19517 = !DILocation(line: 1045, column: 6, scope: !19493)
!19518 = !DILocation(line: 1046, column: 3, scope: !19515)
!19519 = !DILocation(line: 1048, column: 36, scope: !19493)
!19520 = !DILocation(line: 1048, column: 56, scope: !19493)
!19521 = !DILocation(line: 1049, column: 8, scope: !19493)
!19522 = !DILocation(line: 1048, column: 8, scope: !19493)
!19523 = !DILocation(line: 1048, column: 6, scope: !19493)
!19524 = !DILocation(line: 1050, column: 6, scope: !19525)
!19525 = distinct !DILexicalBlock(scope: !19493, file: !3, line: 1050, column: 6)
!19526 = !DILocation(line: 1050, column: 6, scope: !19493)
!19527 = !DILocation(line: 1051, column: 10, scope: !19525)
!19528 = !DILocation(line: 1051, column: 3, scope: !19525)
!19529 = !DILocation(line: 1053, column: 39, scope: !19493)
!19530 = !DILocation(line: 1053, column: 54, scope: !19493)
!19531 = !DILocation(line: 1054, column: 11, scope: !19493)
!19532 = !DILocation(line: 1054, column: 24, scope: !19493)
!19533 = !DILocation(line: 1054, column: 30, scope: !19493)
!19534 = !DILocation(line: 1053, column: 8, scope: !19493)
!19535 = !DILocation(line: 1053, column: 6, scope: !19493)
!19536 = !DILocation(line: 1055, column: 6, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19493, file: !3, line: 1055, column: 6)
!19538 = !DILocation(line: 1055, column: 6, scope: !19493)
!19539 = !DILocation(line: 1056, column: 3, scope: !19537)
!19540 = !DILocation(line: 1058, column: 34, scope: !19493)
!19541 = !DILocation(line: 1058, column: 49, scope: !19493)
!19542 = !DILocation(line: 1059, column: 6, scope: !19493)
!19543 = !DILocation(line: 1059, column: 19, scope: !19493)
!19544 = !DILocation(line: 1058, column: 8, scope: !19493)
!19545 = !DILocation(line: 1058, column: 6, scope: !19493)
!19546 = !DILocation(line: 1060, column: 6, scope: !19547)
!19547 = distinct !DILexicalBlock(scope: !19493, file: !3, line: 1060, column: 6)
!19548 = !DILocation(line: 1060, column: 6, scope: !19493)
!19549 = !DILocation(line: 1061, column: 3, scope: !19547)
!19550 = !DILocation(line: 1063, column: 41, scope: !19493)
!19551 = !DILocation(line: 1063, column: 54, scope: !19493)
!19552 = !DILocation(line: 1063, column: 16, scope: !19493)
!19553 = !DILocation(line: 1063, column: 14, scope: !19493)
!19554 = !DILocation(line: 1064, column: 7, scope: !19555)
!19555 = distinct !DILexicalBlock(scope: !19493, file: !3, line: 1064, column: 6)
!19556 = !DILocation(line: 1064, column: 6, scope: !19493)
!19557 = !DILocation(line: 1065, column: 7, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !19555, file: !3, line: 1064, column: 20)
!19559 = !DILocation(line: 1066, column: 3, scope: !19558)
!19560 = !DILocation(line: 1069, column: 12, scope: !19493)
!19561 = !DILocation(line: 1069, column: 32, scope: !19493)
!19562 = !DILocation(line: 1070, column: 5, scope: !19493)
!19563 = !DILocation(line: 1070, column: 18, scope: !19493)
!19564 = !DILocation(line: 1069, column: 2, scope: !19493)
!19565 = !DILocation(line: 1072, column: 27, scope: !19493)
!19566 = !DILocation(line: 1072, column: 42, scope: !19493)
!19567 = !DILocation(line: 1072, column: 52, scope: !19493)
!19568 = !DILocation(line: 1073, column: 6, scope: !19493)
!19569 = !DILocation(line: 1073, column: 19, scope: !19493)
!19570 = !DILocation(line: 1073, column: 24, scope: !19493)
!19571 = !DILocation(line: 1072, column: 2, scope: !19493)
!19572 = !DILocation(line: 1074, column: 36, scope: !19493)
!19573 = !DILocation(line: 1074, column: 2, scope: !19493)
!19574 = !DILocation(line: 1074, column: 22, scope: !19493)
!19575 = !DILocation(line: 1074, column: 34, scope: !19493)
!19576 = !DILocation(line: 1076, column: 2, scope: !19493)
!19577 = !DILabel(scope: !19493, name: "err_bridge_vlan_get", file: !3, line: 1078)
!19578 = !DILocation(line: 1078, column: 1, scope: !19493)
!19579 = !DILocation(line: 1079, column: 28, scope: !19493)
!19580 = !DILocation(line: 1079, column: 43, scope: !19493)
!19581 = !DILocation(line: 1079, column: 2, scope: !19493)
!19582 = !DILabel(scope: !19493, name: "err_port_vid_stp_set", file: !3, line: 1080)
!19583 = !DILocation(line: 1080, column: 1, scope: !19493)
!19584 = !DILocation(line: 1081, column: 33, scope: !19493)
!19585 = !DILocation(line: 1081, column: 48, scope: !19493)
!19586 = !DILocation(line: 1081, column: 2, scope: !19493)
!19587 = !DILabel(scope: !19493, name: "err_port_vid_learning_set", file: !3, line: 1082)
!19588 = !DILocation(line: 1082, column: 1, scope: !19493)
!19589 = !DILocation(line: 1083, column: 31, scope: !19493)
!19590 = !DILocation(line: 1083, column: 2, scope: !19493)
!19591 = !DILocation(line: 1084, column: 9, scope: !19493)
!19592 = !DILocation(line: 1084, column: 2, scope: !19493)
!19593 = !DILocation(line: 1085, column: 1, scope: !19493)
!19594 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_fid_join", scope: !3, file: !3, line: 956, type: !19494, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19595 = !DILocalVariable(name: "mlxsw_sp_port_vlan", arg: 1, scope: !19594, file: !3, line: 956, type: !11091)
!19596 = !DILocation(line: 956, column: 56, scope: !19594)
!19597 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !19594, file: !3, line: 957, type: !10389)
!19598 = !DILocation(line: 957, column: 37, scope: !19594)
!19599 = !DILocalVariable(name: "extack", arg: 3, scope: !19594, file: !3, line: 958, type: !2625)
!19600 = !DILocation(line: 958, column: 32, scope: !19594)
!19601 = !DILocalVariable(name: "mlxsw_sp_port", scope: !19594, file: !3, line: 960, type: !10406)
!19602 = !DILocation(line: 960, column: 24, scope: !19594)
!19603 = !DILocation(line: 960, column: 40, scope: !19594)
!19604 = !DILocation(line: 960, column: 60, scope: !19594)
!19605 = !DILocalVariable(name: "bridge_device", scope: !19594, file: !3, line: 961, type: !10370)
!19606 = !DILocation(line: 961, column: 33, scope: !19594)
!19607 = !DILocalVariable(name: "local_port", scope: !19594, file: !3, line: 962, type: !1551)
!19608 = !DILocation(line: 962, column: 5, scope: !19594)
!19609 = !DILocation(line: 962, column: 18, scope: !19594)
!19610 = !DILocation(line: 962, column: 33, scope: !19594)
!19611 = !DILocalVariable(name: "vid", scope: !19594, file: !3, line: 963, type: !1192)
!19612 = !DILocation(line: 963, column: 6, scope: !19594)
!19613 = !DILocation(line: 963, column: 12, scope: !19594)
!19614 = !DILocation(line: 963, column: 32, scope: !19594)
!19615 = !DILocalVariable(name: "fid", scope: !19594, file: !3, line: 964, type: !11097)
!19616 = !DILocation(line: 964, column: 23, scope: !19594)
!19617 = !DILocalVariable(name: "err", scope: !19594, file: !3, line: 965, type: !7)
!19618 = !DILocation(line: 965, column: 6, scope: !19594)
!19619 = !DILocation(line: 967, column: 18, scope: !19594)
!19620 = !DILocation(line: 967, column: 31, scope: !19594)
!19621 = !DILocation(line: 967, column: 16, scope: !19594)
!19622 = !DILocation(line: 968, column: 8, scope: !19594)
!19623 = !DILocation(line: 968, column: 23, scope: !19594)
!19624 = !DILocation(line: 968, column: 28, scope: !19594)
!19625 = !DILocation(line: 968, column: 36, scope: !19594)
!19626 = !DILocation(line: 968, column: 51, scope: !19594)
!19627 = !DILocation(line: 968, column: 56, scope: !19594)
!19628 = !DILocation(line: 968, column: 6, scope: !19594)
!19629 = !DILocation(line: 969, column: 13, scope: !19630)
!19630 = distinct !DILexicalBlock(scope: !19594, file: !3, line: 969, column: 6)
!19631 = !DILocation(line: 969, column: 6, scope: !19630)
!19632 = !DILocation(line: 969, column: 6, scope: !19594)
!19633 = !DILocation(line: 970, column: 18, scope: !19630)
!19634 = !DILocation(line: 970, column: 10, scope: !19630)
!19635 = !DILocation(line: 970, column: 3, scope: !19630)
!19636 = !DILocation(line: 972, column: 31, scope: !19594)
!19637 = !DILocation(line: 972, column: 60, scope: !19594)
!19638 = !DILocation(line: 973, column: 10, scope: !19594)
!19639 = !DILocation(line: 973, column: 23, scope: !19594)
!19640 = !DILocation(line: 973, column: 29, scope: !19594)
!19641 = !DILocation(line: 972, column: 8, scope: !19594)
!19642 = !DILocation(line: 972, column: 6, scope: !19594)
!19643 = !DILocation(line: 974, column: 6, scope: !19644)
!19644 = distinct !DILexicalBlock(scope: !19594, file: !3, line: 974, column: 6)
!19645 = !DILocation(line: 974, column: 6, scope: !19594)
!19646 = !DILocation(line: 975, column: 3, scope: !19644)
!19647 = !DILocation(line: 977, column: 31, scope: !19594)
!19648 = !DILocation(line: 977, column: 60, scope: !19594)
!19649 = !DILocation(line: 978, column: 28, scope: !19594)
!19650 = !DILocation(line: 978, column: 10, scope: !19594)
!19651 = !DILocation(line: 977, column: 8, scope: !19594)
!19652 = !DILocation(line: 977, column: 6, scope: !19594)
!19653 = !DILocation(line: 979, column: 6, scope: !19654)
!19654 = distinct !DILexicalBlock(scope: !19594, file: !3, line: 979, column: 6)
!19655 = !DILocation(line: 979, column: 6, scope: !19594)
!19656 = !DILocation(line: 980, column: 3, scope: !19654)
!19657 = !DILocation(line: 982, column: 31, scope: !19594)
!19658 = !DILocation(line: 982, column: 60, scope: !19594)
!19659 = !DILocation(line: 982, column: 8, scope: !19594)
!19660 = !DILocation(line: 982, column: 6, scope: !19594)
!19661 = !DILocation(line: 984, column: 6, scope: !19662)
!19662 = distinct !DILexicalBlock(scope: !19594, file: !3, line: 984, column: 6)
!19663 = !DILocation(line: 984, column: 6, scope: !19594)
!19664 = !DILocation(line: 985, column: 3, scope: !19662)
!19665 = !DILocation(line: 987, column: 34, scope: !19594)
!19666 = !DILocation(line: 987, column: 39, scope: !19594)
!19667 = !DILocation(line: 987, column: 54, scope: !19594)
!19668 = !DILocation(line: 987, column: 8, scope: !19594)
!19669 = !DILocation(line: 987, column: 6, scope: !19594)
!19670 = !DILocation(line: 988, column: 6, scope: !19671)
!19671 = distinct !DILexicalBlock(scope: !19594, file: !3, line: 988, column: 6)
!19672 = !DILocation(line: 988, column: 6, scope: !19594)
!19673 = !DILocation(line: 989, column: 3, scope: !19671)
!19674 = !DILocation(line: 991, column: 28, scope: !19594)
!19675 = !DILocation(line: 991, column: 2, scope: !19594)
!19676 = !DILocation(line: 991, column: 22, scope: !19594)
!19677 = !DILocation(line: 991, column: 26, scope: !19594)
!19678 = !DILocation(line: 993, column: 2, scope: !19594)
!19679 = !DILabel(scope: !19594, name: "err_fid_port_vid_map", file: !3, line: 995)
!19680 = !DILocation(line: 995, column: 1, scope: !19594)
!19681 = !DILocation(line: 996, column: 25, scope: !19594)
!19682 = !DILocation(line: 996, column: 54, scope: !19594)
!19683 = !DILocation(line: 996, column: 2, scope: !19594)
!19684 = !DILabel(scope: !19594, name: "err_fid_bc_flood_set", file: !3, line: 997)
!19685 = !DILocation(line: 997, column: 1, scope: !19594)
!19686 = !DILocation(line: 998, column: 25, scope: !19594)
!19687 = !DILocation(line: 998, column: 54, scope: !19594)
!19688 = !DILocation(line: 998, column: 2, scope: !19594)
!19689 = !DILabel(scope: !19594, name: "err_fid_mc_flood_set", file: !3, line: 999)
!19690 = !DILocation(line: 999, column: 1, scope: !19594)
!19691 = !DILocation(line: 1000, column: 25, scope: !19594)
!19692 = !DILocation(line: 1000, column: 54, scope: !19594)
!19693 = !DILocation(line: 1000, column: 2, scope: !19594)
!19694 = !DILabel(scope: !19594, name: "err_fid_uc_flood_set", file: !3, line: 1001)
!19695 = !DILocation(line: 1001, column: 1, scope: !19594)
!19696 = !DILocation(line: 1002, column: 19, scope: !19594)
!19697 = !DILocation(line: 1002, column: 2, scope: !19594)
!19698 = !DILocation(line: 1003, column: 9, scope: !19594)
!19699 = !DILocation(line: 1003, column: 2, scope: !19594)
!19700 = !DILocation(line: 1004, column: 1, scope: !19594)
!19701 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vlan_get", scope: !3, file: !3, line: 487, type: !19702, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19702 = !DISubroutineType(types: !19703)
!19703 = !{!11206, !10389, !1192}
!19704 = !DILocalVariable(name: "bridge_port", arg: 1, scope: !19701, file: !3, line: 487, type: !10389)
!19705 = !DILocation(line: 487, column: 55, scope: !19701)
!19706 = !DILocalVariable(name: "vid", arg: 2, scope: !19701, file: !3, line: 487, type: !1192)
!19707 = !DILocation(line: 487, column: 72, scope: !19701)
!19708 = !DILocalVariable(name: "bridge_vlan", scope: !19701, file: !3, line: 489, type: !11206)
!19709 = !DILocation(line: 489, column: 31, scope: !19701)
!19710 = !DILocation(line: 491, column: 42, scope: !19701)
!19711 = !DILocation(line: 491, column: 55, scope: !19701)
!19712 = !DILocation(line: 491, column: 16, scope: !19701)
!19713 = !DILocation(line: 491, column: 14, scope: !19701)
!19714 = !DILocation(line: 492, column: 6, scope: !19715)
!19715 = distinct !DILexicalBlock(scope: !19701, file: !3, line: 492, column: 6)
!19716 = !DILocation(line: 492, column: 6, scope: !19701)
!19717 = !DILocation(line: 493, column: 10, scope: !19715)
!19718 = !DILocation(line: 493, column: 3, scope: !19715)
!19719 = !DILocation(line: 495, column: 37, scope: !19701)
!19720 = !DILocation(line: 495, column: 50, scope: !19701)
!19721 = !DILocation(line: 495, column: 9, scope: !19701)
!19722 = !DILocation(line: 495, column: 2, scope: !19701)
!19723 = !DILocation(line: 496, column: 1, scope: !19701)
!19724 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vlan_create", scope: !3, file: !3, line: 463, type: !19702, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19725 = !DILocalVariable(name: "bridge_port", arg: 1, scope: !19724, file: !3, line: 463, type: !10389)
!19726 = !DILocation(line: 463, column: 58, scope: !19724)
!19727 = !DILocalVariable(name: "vid", arg: 2, scope: !19724, file: !3, line: 463, type: !1192)
!19728 = !DILocation(line: 463, column: 75, scope: !19724)
!19729 = !DILocalVariable(name: "bridge_vlan", scope: !19724, file: !3, line: 465, type: !11206)
!19730 = !DILocation(line: 465, column: 31, scope: !19724)
!19731 = !DILocation(line: 467, column: 16, scope: !19724)
!19732 = !DILocation(line: 467, column: 14, scope: !19724)
!19733 = !DILocation(line: 468, column: 7, scope: !19734)
!19734 = distinct !DILexicalBlock(scope: !19724, file: !3, line: 468, column: 6)
!19735 = !DILocation(line: 468, column: 6, scope: !19724)
!19736 = !DILocation(line: 469, column: 3, scope: !19734)
!19737 = !DILocation(line: 471, column: 18, scope: !19724)
!19738 = !DILocation(line: 471, column: 31, scope: !19724)
!19739 = !DILocation(line: 471, column: 2, scope: !19724)
!19740 = !DILocation(line: 472, column: 21, scope: !19724)
!19741 = !DILocation(line: 472, column: 2, scope: !19724)
!19742 = !DILocation(line: 472, column: 15, scope: !19724)
!19743 = !DILocation(line: 472, column: 19, scope: !19724)
!19744 = !DILocation(line: 473, column: 12, scope: !19724)
!19745 = !DILocation(line: 473, column: 25, scope: !19724)
!19746 = !DILocation(line: 473, column: 32, scope: !19724)
!19747 = !DILocation(line: 473, column: 45, scope: !19724)
!19748 = !DILocation(line: 473, column: 2, scope: !19724)
!19749 = !DILocation(line: 475, column: 9, scope: !19724)
!19750 = !DILocation(line: 475, column: 2, scope: !19724)
!19751 = !DILocation(line: 476, column: 1, scope: !19724)
!19752 = !DILocation(line: 445, column: 72, scope: !11996, inlinedAt: !19753)
!19753 = distinct !DILocation(line: 552, column: 10, scope: !12001, inlinedAt: !19754)
!19754 = distinct !DILocation(line: 2703, column: 11, scope: !11460)
!19755 = !DILocation(line: 446, column: 9, scope: !11996, inlinedAt: !19753)
!19756 = !DILocation(line: 446, column: 23, scope: !11996, inlinedAt: !19753)
!19757 = !DILocation(line: 448, column: 8, scope: !11996, inlinedAt: !19753)
!19758 = !DILocation(line: 318, column: 67, scope: !12014, inlinedAt: !19759)
!19759 = distinct !DILocation(line: 553, column: 20, scope: !12001, inlinedAt: !19754)
!19760 = !DILocation(line: 346, column: 58, scope: !12020, inlinedAt: !19761)
!19761 = distinct !DILocation(line: 547, column: 11, scope: !12001, inlinedAt: !19754)
!19762 = !DILocation(line: 472, column: 28, scope: !12026, inlinedAt: !19763)
!19763 = distinct !DILocation(line: 481, column: 9, scope: !12031, inlinedAt: !19764)
!19764 = distinct !DILocation(line: 545, column: 11, scope: !12033, inlinedAt: !19754)
!19765 = !DILocation(line: 472, column: 40, scope: !12026, inlinedAt: !19763)
!19766 = !DILocation(line: 472, column: 60, scope: !12026, inlinedAt: !19763)
!19767 = !DILocation(line: 478, column: 51, scope: !12031, inlinedAt: !19764)
!19768 = !DILocation(line: 478, column: 63, scope: !12031, inlinedAt: !19764)
!19769 = !DILocation(line: 480, column: 15, scope: !12031, inlinedAt: !19764)
!19770 = !DILocation(line: 538, column: 45, scope: !12003, inlinedAt: !19754)
!19771 = !DILocation(line: 538, column: 57, scope: !12003, inlinedAt: !19754)
!19772 = !DILocation(line: 542, column: 16, scope: !12001, inlinedAt: !19754)
!19773 = !DILocalVariable(name: "work", arg: 1, scope: !11460, file: !3, line: 2693, type: !1970)
!19774 = !DILocation(line: 2693, column: 58, scope: !11460)
!19775 = !DILocalVariable(name: "bridge", scope: !11460, file: !3, line: 2695, type: !10473)
!19776 = !DILocation(line: 2695, column: 26, scope: !11460)
!19777 = !DILocalVariable(name: "mlxsw_sp", scope: !11460, file: !3, line: 2696, type: !10421)
!19778 = !DILocation(line: 2696, column: 19, scope: !11460)
!19779 = !DILocalVariable(name: "sfn_pl", scope: !11460, file: !3, line: 2697, type: !733)
!19780 = !DILocation(line: 2697, column: 8, scope: !11460)
!19781 = !DILocalVariable(name: "queries", scope: !11460, file: !3, line: 2698, type: !7)
!19782 = !DILocation(line: 2698, column: 6, scope: !11460)
!19783 = !DILocalVariable(name: "num_rec", scope: !11460, file: !3, line: 2699, type: !1551)
!19784 = !DILocation(line: 2699, column: 5, scope: !11460)
!19785 = !DILocalVariable(name: "i", scope: !11460, file: !3, line: 2700, type: !7)
!19786 = !DILocation(line: 2700, column: 6, scope: !11460)
!19787 = !DILocalVariable(name: "err", scope: !11460, file: !3, line: 2701, type: !7)
!19788 = !DILocation(line: 2701, column: 6, scope: !11460)
!19789 = !DILocation(line: 540, column: 27, scope: !12002, inlinedAt: !19754)
!19790 = !DILocation(line: 540, column: 6, scope: !12002, inlinedAt: !19754)
!19791 = !DILocation(line: 540, column: 6, scope: !12003, inlinedAt: !19754)
!19792 = !DILocation(line: 544, column: 7, scope: !12033, inlinedAt: !19754)
!19793 = !DILocation(line: 544, column: 12, scope: !12033, inlinedAt: !19754)
!19794 = !DILocation(line: 544, column: 7, scope: !12001, inlinedAt: !19754)
!19795 = !DILocation(line: 545, column: 25, scope: !12033, inlinedAt: !19754)
!19796 = !DILocation(line: 545, column: 31, scope: !12033, inlinedAt: !19754)
!19797 = !DILocation(line: 480, column: 33, scope: !12031, inlinedAt: !19764)
!19798 = !DILocation(line: 480, column: 23, scope: !12031, inlinedAt: !19764)
!19799 = !DILocation(line: 481, column: 29, scope: !12031, inlinedAt: !19764)
!19800 = !DILocation(line: 481, column: 35, scope: !12031, inlinedAt: !19764)
!19801 = !DILocation(line: 481, column: 42, scope: !12031, inlinedAt: !19764)
!19802 = !DILocation(line: 474, column: 23, scope: !12026, inlinedAt: !19763)
!19803 = !DILocation(line: 474, column: 29, scope: !12026, inlinedAt: !19763)
!19804 = !DILocation(line: 474, column: 36, scope: !12026, inlinedAt: !19763)
!19805 = !DILocation(line: 474, column: 9, scope: !12026, inlinedAt: !19763)
!19806 = !DILocation(line: 545, column: 4, scope: !12033, inlinedAt: !19754)
!19807 = !DILocation(line: 547, column: 25, scope: !12001, inlinedAt: !19754)
!19808 = !DILocation(line: 348, column: 7, scope: !12090, inlinedAt: !19761)
!19809 = !DILocation(line: 348, column: 6, scope: !12020, inlinedAt: !19761)
!19810 = !DILocation(line: 349, column: 3, scope: !12090, inlinedAt: !19761)
!19811 = !DILocation(line: 351, column: 6, scope: !12094, inlinedAt: !19761)
!19812 = !DILocation(line: 351, column: 11, scope: !12094, inlinedAt: !19761)
!19813 = !DILocation(line: 351, column: 6, scope: !12020, inlinedAt: !19761)
!19814 = !DILocation(line: 352, column: 3, scope: !12094, inlinedAt: !19761)
!19815 = !DILocation(line: 354, column: 32, scope: !12099, inlinedAt: !19761)
!19816 = !DILocation(line: 354, column: 37, scope: !12099, inlinedAt: !19761)
!19817 = !DILocation(line: 354, column: 42, scope: !12099, inlinedAt: !19761)
!19818 = !DILocation(line: 354, column: 45, scope: !12099, inlinedAt: !19761)
!19819 = !DILocation(line: 354, column: 50, scope: !12099, inlinedAt: !19761)
!19820 = !DILocation(line: 354, column: 6, scope: !12020, inlinedAt: !19761)
!19821 = !DILocation(line: 355, column: 3, scope: !12099, inlinedAt: !19761)
!19822 = !DILocation(line: 356, column: 32, scope: !12107, inlinedAt: !19761)
!19823 = !DILocation(line: 356, column: 37, scope: !12107, inlinedAt: !19761)
!19824 = !DILocation(line: 356, column: 43, scope: !12107, inlinedAt: !19761)
!19825 = !DILocation(line: 356, column: 46, scope: !12107, inlinedAt: !19761)
!19826 = !DILocation(line: 356, column: 51, scope: !12107, inlinedAt: !19761)
!19827 = !DILocation(line: 356, column: 6, scope: !12020, inlinedAt: !19761)
!19828 = !DILocation(line: 357, column: 3, scope: !12107, inlinedAt: !19761)
!19829 = !DILocation(line: 358, column: 6, scope: !12115, inlinedAt: !19761)
!19830 = !DILocation(line: 358, column: 11, scope: !12115, inlinedAt: !19761)
!19831 = !DILocation(line: 358, column: 6, scope: !12020, inlinedAt: !19761)
!19832 = !DILocation(line: 358, column: 26, scope: !12115, inlinedAt: !19761)
!19833 = !DILocation(line: 359, column: 6, scope: !12120, inlinedAt: !19761)
!19834 = !DILocation(line: 359, column: 11, scope: !12120, inlinedAt: !19761)
!19835 = !DILocation(line: 359, column: 6, scope: !12020, inlinedAt: !19761)
!19836 = !DILocation(line: 359, column: 26, scope: !12120, inlinedAt: !19761)
!19837 = !DILocation(line: 360, column: 6, scope: !12125, inlinedAt: !19761)
!19838 = !DILocation(line: 360, column: 11, scope: !12125, inlinedAt: !19761)
!19839 = !DILocation(line: 360, column: 6, scope: !12020, inlinedAt: !19761)
!19840 = !DILocation(line: 360, column: 26, scope: !12125, inlinedAt: !19761)
!19841 = !DILocation(line: 361, column: 6, scope: !12130, inlinedAt: !19761)
!19842 = !DILocation(line: 361, column: 11, scope: !12130, inlinedAt: !19761)
!19843 = !DILocation(line: 361, column: 6, scope: !12020, inlinedAt: !19761)
!19844 = !DILocation(line: 361, column: 26, scope: !12130, inlinedAt: !19761)
!19845 = !DILocation(line: 362, column: 6, scope: !12135, inlinedAt: !19761)
!19846 = !DILocation(line: 362, column: 11, scope: !12135, inlinedAt: !19761)
!19847 = !DILocation(line: 362, column: 6, scope: !12020, inlinedAt: !19761)
!19848 = !DILocation(line: 362, column: 26, scope: !12135, inlinedAt: !19761)
!19849 = !DILocation(line: 363, column: 6, scope: !12140, inlinedAt: !19761)
!19850 = !DILocation(line: 363, column: 11, scope: !12140, inlinedAt: !19761)
!19851 = !DILocation(line: 363, column: 6, scope: !12020, inlinedAt: !19761)
!19852 = !DILocation(line: 363, column: 26, scope: !12140, inlinedAt: !19761)
!19853 = !DILocation(line: 364, column: 6, scope: !12145, inlinedAt: !19761)
!19854 = !DILocation(line: 364, column: 11, scope: !12145, inlinedAt: !19761)
!19855 = !DILocation(line: 364, column: 6, scope: !12020, inlinedAt: !19761)
!19856 = !DILocation(line: 364, column: 26, scope: !12145, inlinedAt: !19761)
!19857 = !DILocation(line: 365, column: 6, scope: !12150, inlinedAt: !19761)
!19858 = !DILocation(line: 365, column: 11, scope: !12150, inlinedAt: !19761)
!19859 = !DILocation(line: 365, column: 6, scope: !12020, inlinedAt: !19761)
!19860 = !DILocation(line: 365, column: 26, scope: !12150, inlinedAt: !19761)
!19861 = !DILocation(line: 366, column: 6, scope: !12155, inlinedAt: !19761)
!19862 = !DILocation(line: 366, column: 11, scope: !12155, inlinedAt: !19761)
!19863 = !DILocation(line: 366, column: 6, scope: !12020, inlinedAt: !19761)
!19864 = !DILocation(line: 366, column: 26, scope: !12155, inlinedAt: !19761)
!19865 = !DILocation(line: 367, column: 6, scope: !12160, inlinedAt: !19761)
!19866 = !DILocation(line: 367, column: 11, scope: !12160, inlinedAt: !19761)
!19867 = !DILocation(line: 367, column: 6, scope: !12020, inlinedAt: !19761)
!19868 = !DILocation(line: 367, column: 26, scope: !12160, inlinedAt: !19761)
!19869 = !DILocation(line: 368, column: 6, scope: !12165, inlinedAt: !19761)
!19870 = !DILocation(line: 368, column: 11, scope: !12165, inlinedAt: !19761)
!19871 = !DILocation(line: 368, column: 6, scope: !12020, inlinedAt: !19761)
!19872 = !DILocation(line: 368, column: 26, scope: !12165, inlinedAt: !19761)
!19873 = !DILocation(line: 369, column: 6, scope: !12170, inlinedAt: !19761)
!19874 = !DILocation(line: 369, column: 11, scope: !12170, inlinedAt: !19761)
!19875 = !DILocation(line: 369, column: 6, scope: !12020, inlinedAt: !19761)
!19876 = !DILocation(line: 369, column: 26, scope: !12170, inlinedAt: !19761)
!19877 = !DILocation(line: 370, column: 6, scope: !12175, inlinedAt: !19761)
!19878 = !DILocation(line: 370, column: 11, scope: !12175, inlinedAt: !19761)
!19879 = !DILocation(line: 370, column: 6, scope: !12020, inlinedAt: !19761)
!19880 = !DILocation(line: 370, column: 26, scope: !12175, inlinedAt: !19761)
!19881 = !DILocation(line: 371, column: 6, scope: !12180, inlinedAt: !19761)
!19882 = !DILocation(line: 371, column: 11, scope: !12180, inlinedAt: !19761)
!19883 = !DILocation(line: 371, column: 6, scope: !12020, inlinedAt: !19761)
!19884 = !DILocation(line: 371, column: 26, scope: !12180, inlinedAt: !19761)
!19885 = !DILocation(line: 372, column: 6, scope: !12185, inlinedAt: !19761)
!19886 = !DILocation(line: 372, column: 11, scope: !12185, inlinedAt: !19761)
!19887 = !DILocation(line: 372, column: 6, scope: !12020, inlinedAt: !19761)
!19888 = !DILocation(line: 372, column: 26, scope: !12185, inlinedAt: !19761)
!19889 = !DILocation(line: 373, column: 6, scope: !12190, inlinedAt: !19761)
!19890 = !DILocation(line: 373, column: 11, scope: !12190, inlinedAt: !19761)
!19891 = !DILocation(line: 373, column: 6, scope: !12020, inlinedAt: !19761)
!19892 = !DILocation(line: 373, column: 26, scope: !12190, inlinedAt: !19761)
!19893 = !DILocation(line: 374, column: 6, scope: !12195, inlinedAt: !19761)
!19894 = !DILocation(line: 374, column: 11, scope: !12195, inlinedAt: !19761)
!19895 = !DILocation(line: 374, column: 6, scope: !12020, inlinedAt: !19761)
!19896 = !DILocation(line: 374, column: 26, scope: !12195, inlinedAt: !19761)
!19897 = !DILocation(line: 375, column: 6, scope: !12200, inlinedAt: !19761)
!19898 = !DILocation(line: 375, column: 11, scope: !12200, inlinedAt: !19761)
!19899 = !DILocation(line: 375, column: 6, scope: !12020, inlinedAt: !19761)
!19900 = !DILocation(line: 375, column: 27, scope: !12200, inlinedAt: !19761)
!19901 = !DILocation(line: 376, column: 6, scope: !12205, inlinedAt: !19761)
!19902 = !DILocation(line: 376, column: 11, scope: !12205, inlinedAt: !19761)
!19903 = !DILocation(line: 376, column: 6, scope: !12020, inlinedAt: !19761)
!19904 = !DILocation(line: 376, column: 32, scope: !12205, inlinedAt: !19761)
!19905 = !DILocation(line: 377, column: 6, scope: !12210, inlinedAt: !19761)
!19906 = !DILocation(line: 377, column: 11, scope: !12210, inlinedAt: !19761)
!19907 = !DILocation(line: 377, column: 6, scope: !12020, inlinedAt: !19761)
!19908 = !DILocation(line: 377, column: 32, scope: !12210, inlinedAt: !19761)
!19909 = !DILocation(line: 378, column: 6, scope: !12215, inlinedAt: !19761)
!19910 = !DILocation(line: 378, column: 11, scope: !12215, inlinedAt: !19761)
!19911 = !DILocation(line: 378, column: 6, scope: !12020, inlinedAt: !19761)
!19912 = !DILocation(line: 378, column: 32, scope: !12215, inlinedAt: !19761)
!19913 = !DILocation(line: 379, column: 6, scope: !12220, inlinedAt: !19761)
!19914 = !DILocation(line: 379, column: 11, scope: !12220, inlinedAt: !19761)
!19915 = !DILocation(line: 379, column: 6, scope: !12020, inlinedAt: !19761)
!19916 = !DILocation(line: 379, column: 33, scope: !12220, inlinedAt: !19761)
!19917 = !DILocation(line: 380, column: 6, scope: !12225, inlinedAt: !19761)
!19918 = !DILocation(line: 380, column: 11, scope: !12225, inlinedAt: !19761)
!19919 = !DILocation(line: 380, column: 6, scope: !12020, inlinedAt: !19761)
!19920 = !DILocation(line: 380, column: 33, scope: !12225, inlinedAt: !19761)
!19921 = !DILocation(line: 381, column: 6, scope: !12230, inlinedAt: !19761)
!19922 = !DILocation(line: 381, column: 11, scope: !12230, inlinedAt: !19761)
!19923 = !DILocation(line: 381, column: 6, scope: !12020, inlinedAt: !19761)
!19924 = !DILocation(line: 381, column: 33, scope: !12230, inlinedAt: !19761)
!19925 = !DILocation(line: 382, column: 2, scope: !12235, inlinedAt: !19761)
!19926 = !DILocation(line: 382, column: 2, scope: !12239, inlinedAt: !19761)
!19927 = !DILocation(line: 382, column: 2, scope: !12240, inlinedAt: !19761)
!19928 = !DILocation(line: 386, column: 1, scope: !12020, inlinedAt: !19761)
!19929 = !DILocation(line: 547, column: 9, scope: !12001, inlinedAt: !19754)
!19930 = !DILocation(line: 549, column: 8, scope: !12246, inlinedAt: !19754)
!19931 = !DILocation(line: 549, column: 7, scope: !12001, inlinedAt: !19754)
!19932 = !DILocation(line: 550, column: 4, scope: !12246, inlinedAt: !19754)
!19933 = !DILocation(line: 553, column: 33, scope: !12001, inlinedAt: !19754)
!19934 = !DILocation(line: 325, column: 6, scope: !12251, inlinedAt: !19759)
!19935 = !DILocation(line: 325, column: 6, scope: !12014, inlinedAt: !19759)
!19936 = !DILocation(line: 326, column: 3, scope: !12251, inlinedAt: !19759)
!19937 = !DILocation(line: 332, column: 9, scope: !12014, inlinedAt: !19759)
!19938 = !DILocation(line: 332, column: 15, scope: !12014, inlinedAt: !19759)
!19939 = !DILocation(line: 332, column: 2, scope: !12014, inlinedAt: !19759)
!19940 = !DILocation(line: 336, column: 1, scope: !12014, inlinedAt: !19759)
!19941 = !DILocation(line: 553, column: 5, scope: !12001, inlinedAt: !19754)
!19942 = !DILocation(line: 553, column: 41, scope: !12001, inlinedAt: !19754)
!19943 = !DILocation(line: 554, column: 5, scope: !12001, inlinedAt: !19754)
!19944 = !DILocation(line: 554, column: 12, scope: !12001, inlinedAt: !19754)
!19945 = !DILocation(line: 448, column: 31, scope: !11996, inlinedAt: !19753)
!19946 = !DILocation(line: 448, column: 34, scope: !11996, inlinedAt: !19753)
!19947 = !DILocation(line: 448, column: 14, scope: !11996, inlinedAt: !19753)
!19948 = !DILocation(line: 450, column: 22, scope: !11996, inlinedAt: !19753)
!19949 = !DILocation(line: 450, column: 25, scope: !11996, inlinedAt: !19753)
!19950 = !DILocation(line: 450, column: 30, scope: !11996, inlinedAt: !19753)
!19951 = !DILocation(line: 450, column: 36, scope: !11996, inlinedAt: !19753)
!19952 = !DILocation(line: 450, column: 8, scope: !11996, inlinedAt: !19753)
!19953 = !DILocation(line: 450, column: 6, scope: !11996, inlinedAt: !19753)
!19954 = !DILocation(line: 451, column: 9, scope: !11996, inlinedAt: !19753)
!19955 = !DILocation(line: 552, column: 3, scope: !12001, inlinedAt: !19754)
!19956 = !DILocation(line: 557, column: 19, scope: !12003, inlinedAt: !19754)
!19957 = !DILocation(line: 557, column: 25, scope: !12003, inlinedAt: !19754)
!19958 = !DILocation(line: 557, column: 9, scope: !12003, inlinedAt: !19754)
!19959 = !DILocation(line: 557, column: 2, scope: !12003, inlinedAt: !19754)
!19960 = !DILocation(line: 558, column: 1, scope: !12003, inlinedAt: !19754)
!19961 = !DILocation(line: 2703, column: 9, scope: !11460)
!19962 = !DILocation(line: 2704, column: 7, scope: !19963)
!19963 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 2704, column: 6)
!19964 = !DILocation(line: 2704, column: 6, scope: !11460)
!19965 = !DILocation(line: 2705, column: 3, scope: !19963)
!19966 = !DILocalVariable(name: "__mptr", scope: !19967, file: !3, line: 2707, type: !726)
!19967 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 2707, column: 11)
!19968 = !DILocation(line: 2707, column: 11, scope: !19967)
!19969 = !DILocation(line: 2707, column: 11, scope: !19970)
!19970 = distinct !DILexicalBlock(scope: !19967, file: !3, line: 2707, column: 11)
!19971 = !DILocation(line: 2707, column: 9, scope: !11460)
!19972 = !DILocation(line: 2708, column: 13, scope: !11460)
!19973 = !DILocation(line: 2708, column: 21, scope: !11460)
!19974 = !DILocation(line: 2708, column: 11, scope: !11460)
!19975 = !DILocation(line: 2710, column: 2, scope: !11460)
!19976 = !DILocation(line: 2711, column: 10, scope: !11460)
!19977 = !DILocation(line: 2712, column: 2, scope: !11460)
!19978 = !DILocation(line: 2712, column: 9, scope: !11460)
!19979 = !DILocation(line: 2712, column: 17, scope: !11460)
!19980 = !DILocation(line: 2713, column: 22, scope: !19981)
!19981 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 2712, column: 22)
!19982 = !DILocation(line: 2713, column: 3, scope: !19981)
!19983 = !DILocation(line: 2714, column: 25, scope: !19981)
!19984 = !DILocation(line: 2714, column: 35, scope: !19981)
!19985 = !DILocation(line: 2714, column: 57, scope: !19981)
!19986 = !DILocation(line: 2714, column: 9, scope: !19981)
!19987 = !DILocation(line: 2714, column: 7, scope: !19981)
!19988 = !DILocation(line: 2715, column: 7, scope: !19989)
!19989 = distinct !DILexicalBlock(scope: !19981, file: !3, line: 2715, column: 7)
!19990 = !DILocation(line: 2715, column: 7, scope: !19981)
!19991 = !DILocation(line: 2716, column: 4, scope: !19992)
!19992 = distinct !DILexicalBlock(scope: !19989, file: !3, line: 2715, column: 12)
!19993 = !DILocation(line: 2716, column: 4, scope: !19994)
!19994 = distinct !DILexicalBlock(scope: !19995, file: !3, line: 2716, column: 4)
!19995 = distinct !DILexicalBlock(scope: !19992, file: !3, line: 2716, column: 4)
!19996 = !DILocation(line: 2716, column: 4, scope: !19995)
!19997 = !DILocation(line: 2717, column: 4, scope: !19992)
!19998 = !DILocation(line: 2719, column: 39, scope: !19981)
!19999 = !DILocation(line: 2719, column: 13, scope: !19981)
!20000 = !DILocation(line: 2719, column: 11, scope: !19981)
!20001 = !DILocation(line: 2720, column: 10, scope: !20002)
!20002 = distinct !DILexicalBlock(scope: !19981, file: !3, line: 2720, column: 3)
!20003 = !DILocation(line: 2720, column: 8, scope: !20002)
!20004 = !DILocation(line: 2720, column: 15, scope: !20005)
!20005 = distinct !DILexicalBlock(scope: !20002, file: !3, line: 2720, column: 3)
!20006 = !DILocation(line: 2720, column: 19, scope: !20005)
!20007 = !DILocation(line: 2720, column: 17, scope: !20005)
!20008 = !DILocation(line: 2720, column: 3, scope: !20002)
!20009 = !DILocation(line: 2721, column: 36, scope: !20005)
!20010 = !DILocation(line: 2721, column: 46, scope: !20005)
!20011 = !DILocation(line: 2721, column: 54, scope: !20005)
!20012 = !DILocation(line: 2721, column: 4, scope: !20005)
!20013 = !DILocation(line: 2720, column: 29, scope: !20005)
!20014 = !DILocation(line: 2720, column: 3, scope: !20005)
!20015 = distinct !{!20015, !20008, !20016}
!20016 = !DILocation(line: 2721, column: 55, scope: !20002)
!20017 = !DILocation(line: 2722, column: 7, scope: !20018)
!20018 = distinct !DILexicalBlock(scope: !19981, file: !3, line: 2722, column: 7)
!20019 = !DILocation(line: 2722, column: 15, scope: !20018)
!20020 = !DILocation(line: 2722, column: 7, scope: !19981)
!20021 = !DILocation(line: 2723, column: 4, scope: !20018)
!20022 = !DILocation(line: 2724, column: 10, scope: !19981)
!20023 = distinct !{!20023, !19977, !20024}
!20024 = !DILocation(line: 2725, column: 2, scope: !11460)
!20025 = !DILabel(scope: !11460, name: "out", file: !3, line: 2727)
!20026 = !DILocation(line: 2727, column: 1, scope: !11460)
!20027 = !DILocation(line: 2728, column: 2, scope: !11460)
!20028 = !DILocation(line: 2729, column: 8, scope: !11460)
!20029 = !DILocation(line: 2729, column: 2, scope: !11460)
!20030 = !DILocation(line: 2730, column: 36, scope: !11460)
!20031 = !DILocation(line: 2730, column: 47, scope: !11460)
!20032 = !DILocation(line: 2730, column: 46, scope: !11460)
!20033 = !DILocation(line: 2730, column: 2, scope: !11460)
!20034 = !DILocation(line: 2731, column: 1, scope: !11460)
!20035 = distinct !DISubprogram(name: "mlxsw_sp_fdb_notify_work_schedule", scope: !3, file: !3, line: 2681, type: !20036, scopeLine: 2683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20036 = !DISubroutineType(types: !20037)
!20037 = !{null, !10421, !696}
!20038 = !DILocalVariable(name: "m", arg: 1, scope: !20039, file: !20040, line: 363, type: !5596)
!20039 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !20040, file: !20040, line: 363, type: !20041, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20040 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!20041 = !DISubroutineType(types: !20042)
!20042 = !{!473, !5596}
!20043 = !DILocation(line: 363, column: 74, scope: !20039, inlinedAt: !20044)
!20044 = distinct !DILocation(line: 2688, column: 11, scope: !20035)
!20045 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !20035, file: !3, line: 2681, type: !10421)
!20046 = !DILocation(line: 2681, column: 64, scope: !20035)
!20047 = !DILocalVariable(name: "no_delay", arg: 2, scope: !20035, file: !3, line: 2682, type: !696)
!20048 = !DILocation(line: 2682, column: 17, scope: !20035)
!20049 = !DILocalVariable(name: "bridge", scope: !20035, file: !3, line: 2684, type: !10473)
!20050 = !DILocation(line: 2684, column: 26, scope: !20035)
!20051 = !DILocation(line: 2684, column: 35, scope: !20035)
!20052 = !DILocation(line: 2684, column: 45, scope: !20035)
!20053 = !DILocalVariable(name: "interval", scope: !20035, file: !3, line: 2685, type: !14)
!20054 = !DILocation(line: 2685, column: 15, scope: !20035)
!20055 = !DILocation(line: 2685, column: 26, scope: !20035)
!20056 = !DILocation(line: 2685, column: 41, scope: !20035)
!20057 = !DILocation(line: 2685, column: 49, scope: !20035)
!20058 = !DILocation(line: 2685, column: 60, scope: !20035)
!20059 = !DILocation(line: 2687, column: 26, scope: !20035)
!20060 = !DILocation(line: 2687, column: 34, scope: !20035)
!20061 = !DILocation(line: 2687, column: 45, scope: !20035)
!20062 = !DILocation(line: 2688, column: 28, scope: !20035)
!20063 = !DILocation(line: 365, column: 27, scope: !20064, inlinedAt: !20044)
!20064 = distinct !DILexicalBlock(scope: !20039, file: !20040, line: 365, column: 6)
!20065 = !DILocation(line: 365, column: 6, scope: !20064, inlinedAt: !20044)
!20066 = !DILocation(line: 365, column: 6, scope: !20039, inlinedAt: !20044)
!20067 = !DILocation(line: 366, column: 12, scope: !20068, inlinedAt: !20044)
!20068 = distinct !DILexicalBlock(scope: !20069, file: !20040, line: 366, column: 7)
!20069 = distinct !DILexicalBlock(scope: !20064, file: !20040, line: 365, column: 31)
!20070 = !DILocation(line: 366, column: 14, scope: !20068, inlinedAt: !20044)
!20071 = !DILocation(line: 366, column: 7, scope: !20069, inlinedAt: !20044)
!20072 = !DILocation(line: 367, column: 4, scope: !20068, inlinedAt: !20044)
!20073 = !DILocation(line: 368, column: 28, scope: !20069, inlinedAt: !20044)
!20074 = !DILocation(line: 368, column: 10, scope: !20069, inlinedAt: !20044)
!20075 = !DILocation(line: 368, column: 3, scope: !20069, inlinedAt: !20044)
!20076 = !DILocation(line: 370, column: 29, scope: !20077, inlinedAt: !20044)
!20077 = distinct !DILexicalBlock(scope: !20064, file: !20040, line: 369, column: 9)
!20078 = !DILocation(line: 370, column: 10, scope: !20077, inlinedAt: !20044)
!20079 = !DILocation(line: 370, column: 3, scope: !20077, inlinedAt: !20044)
!20080 = !DILocation(line: 372, column: 1, scope: !20039, inlinedAt: !20044)
!20081 = !DILocation(line: 2687, column: 2, scope: !20035)
!20082 = !DILocation(line: 2689, column: 1, scope: !20035)
!20083 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_blocking_event", scope: !3, file: !3, line: 3406, type: !2174, scopeLine: 3408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20084 = !DILocalVariable(name: "unused", arg: 1, scope: !20083, file: !3, line: 3406, type: !2168)
!20085 = !DILocation(line: 3406, column: 69, scope: !20083)
!20086 = !DILocalVariable(name: "event", arg: 2, scope: !20083, file: !3, line: 3407, type: !473)
!20087 = !DILocation(line: 3407, column: 25, scope: !20083)
!20088 = !DILocalVariable(name: "ptr", arg: 3, scope: !20083, file: !3, line: 3407, type: !726)
!20089 = !DILocation(line: 3407, column: 38, scope: !20083)
!20090 = !DILocalVariable(name: "dev", scope: !20083, file: !3, line: 3409, type: !451)
!20091 = !DILocation(line: 3409, column: 21, scope: !20083)
!20092 = !DILocation(line: 3409, column: 58, scope: !20083)
!20093 = !DILocation(line: 3409, column: 27, scope: !20083)
!20094 = !DILocalVariable(name: "err", scope: !20083, file: !3, line: 3410, type: !7)
!20095 = !DILocation(line: 3410, column: 6, scope: !20083)
!20096 = !DILocation(line: 3412, column: 10, scope: !20083)
!20097 = !DILocation(line: 3412, column: 2, scope: !20083)
!20098 = !DILocation(line: 3414, column: 22, scope: !20099)
!20099 = distinct !DILexicalBlock(scope: !20100, file: !3, line: 3414, column: 7)
!20100 = distinct !DILexicalBlock(scope: !20083, file: !3, line: 3412, column: 17)
!20101 = !DILocation(line: 3414, column: 7, scope: !20099)
!20102 = !DILocation(line: 3414, column: 7, scope: !20100)
!20103 = !DILocation(line: 3415, column: 50, scope: !20099)
!20104 = !DILocation(line: 3415, column: 55, scope: !20099)
!20105 = !DILocation(line: 3415, column: 10, scope: !20099)
!20106 = !DILocation(line: 3415, column: 8, scope: !20099)
!20107 = !DILocation(line: 3415, column: 4, scope: !20099)
!20108 = !DILocation(line: 3417, column: 40, scope: !20099)
!20109 = !DILocation(line: 3417, column: 45, scope: !20099)
!20110 = !DILocation(line: 3417, column: 10, scope: !20099)
!20111 = !DILocation(line: 3417, column: 8, scope: !20099)
!20112 = !DILocation(line: 3420, column: 30, scope: !20100)
!20113 = !DILocation(line: 3420, column: 10, scope: !20100)
!20114 = !DILocation(line: 3420, column: 3, scope: !20100)
!20115 = !DILocation(line: 3422, column: 22, scope: !20116)
!20116 = distinct !DILexicalBlock(scope: !20100, file: !3, line: 3422, column: 7)
!20117 = !DILocation(line: 3422, column: 7, scope: !20116)
!20118 = !DILocation(line: 3422, column: 7, scope: !20100)
!20119 = !DILocation(line: 3423, column: 44, scope: !20116)
!20120 = !DILocation(line: 3423, column: 49, scope: !20116)
!20121 = !DILocation(line: 3423, column: 4, scope: !20116)
!20122 = !DILocation(line: 3425, column: 40, scope: !20116)
!20123 = !DILocation(line: 3425, column: 45, scope: !20116)
!20124 = !DILocation(line: 3425, column: 10, scope: !20116)
!20125 = !DILocation(line: 3425, column: 8, scope: !20116)
!20126 = !DILocation(line: 3428, column: 30, scope: !20100)
!20127 = !DILocation(line: 3428, column: 10, scope: !20100)
!20128 = !DILocation(line: 3428, column: 3, scope: !20100)
!20129 = !DILocation(line: 3430, column: 40, scope: !20100)
!20130 = !DILocation(line: 3430, column: 45, scope: !20100)
!20131 = !DILocation(line: 3430, column: 9, scope: !20100)
!20132 = !DILocation(line: 3430, column: 7, scope: !20100)
!20133 = !DILocation(line: 3433, column: 30, scope: !20100)
!20134 = !DILocation(line: 3433, column: 10, scope: !20100)
!20135 = !DILocation(line: 3433, column: 3, scope: !20100)
!20136 = !DILocation(line: 3436, column: 2, scope: !20083)
!20137 = !DILocation(line: 3437, column: 1, scope: !20083)
!20138 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_handle_vxlan_obj_add", scope: !3, file: !3, line: 3374, type: !20139, scopeLine: 3377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20139 = !DISubroutineType(types: !20140)
!20140 = !{!7, !451, !20141}
!20141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20142, size: 64)
!20142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchdev_notifier_port_obj_info", file: !10207, line: 232, size: 320, elements: !20143)
!20143 = !{!20144, !20145, !20148, !20149}
!20144 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !20142, file: !10207, line: 233, baseType: !11231, size: 128)
!20145 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !20142, file: !10207, line: 234, baseType: !20146, size: 64, offset: 128)
!20146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20147, size: 64)
!20147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11293)
!20148 = !DIDerivedType(tag: DW_TAG_member, name: "trans", scope: !20142, file: !10207, line: 235, baseType: !15315, size: 64, offset: 192)
!20149 = !DIDerivedType(tag: DW_TAG_member, name: "handled", scope: !20142, file: !10207, line: 236, baseType: !696, size: 8, offset: 256)
!20150 = !DILocalVariable(name: "vxlan_dev", arg: 1, scope: !20138, file: !3, line: 3374, type: !451)
!20151 = !DILocation(line: 3374, column: 60, scope: !20138)
!20152 = !DILocalVariable(name: "port_obj_info", arg: 2, scope: !20138, file: !3, line: 3376, type: !20141)
!20153 = !DILocation(line: 3376, column: 6, scope: !20138)
!20154 = !DILocalVariable(name: "err", scope: !20138, file: !3, line: 3378, type: !7)
!20155 = !DILocation(line: 3378, column: 6, scope: !20138)
!20156 = !DILocation(line: 3380, column: 10, scope: !20138)
!20157 = !DILocation(line: 3380, column: 25, scope: !20138)
!20158 = !DILocation(line: 3380, column: 30, scope: !20138)
!20159 = !DILocation(line: 3380, column: 2, scope: !20138)
!20160 = !DILocation(line: 3382, column: 44, scope: !20161)
!20161 = distinct !DILexicalBlock(scope: !20138, file: !3, line: 3380, column: 34)
!20162 = !DILocation(line: 3383, column: 9, scope: !20161)
!20163 = !DILocation(line: 3382, column: 9, scope: !20161)
!20164 = !DILocation(line: 3382, column: 7, scope: !20161)
!20165 = !DILocation(line: 3384, column: 3, scope: !20161)
!20166 = !DILocation(line: 3386, column: 3, scope: !20161)
!20167 = !DILocation(line: 3389, column: 9, scope: !20138)
!20168 = !DILocation(line: 3389, column: 2, scope: !20138)
!20169 = distinct !DISubprogram(name: "mlxsw_sp_port_obj_add", scope: !3, file: !3, line: 1781, type: !20170, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20170 = !DISubroutineType(types: !20171)
!20171 = !{!7, !451, !20146, !15315, !2625}
!20172 = !DILocalVariable(name: "dev", arg: 1, scope: !20169, file: !3, line: 1781, type: !451)
!20173 = !DILocation(line: 1781, column: 53, scope: !20169)
!20174 = !DILocalVariable(name: "obj", arg: 2, scope: !20169, file: !3, line: 1782, type: !20146)
!20175 = !DILocation(line: 1782, column: 34, scope: !20169)
!20176 = !DILocalVariable(name: "trans", arg: 3, scope: !20169, file: !3, line: 1783, type: !15315)
!20177 = !DILocation(line: 1783, column: 30, scope: !20169)
!20178 = !DILocalVariable(name: "extack", arg: 4, scope: !20169, file: !3, line: 1784, type: !2625)
!20179 = !DILocation(line: 1784, column: 30, scope: !20169)
!20180 = !DILocalVariable(name: "mlxsw_sp_port", scope: !20169, file: !3, line: 1786, type: !10406)
!20181 = !DILocation(line: 1786, column: 24, scope: !20169)
!20182 = !DILocation(line: 1786, column: 52, scope: !20169)
!20183 = !DILocation(line: 1786, column: 40, scope: !20169)
!20184 = !DILocalVariable(name: "vlan", scope: !20169, file: !3, line: 1787, type: !20185)
!20185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20186, size: 64)
!20186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11290)
!20187 = !DILocation(line: 1787, column: 40, scope: !20169)
!20188 = !DILocalVariable(name: "err", scope: !20169, file: !3, line: 1788, type: !7)
!20189 = !DILocation(line: 1788, column: 6, scope: !20169)
!20190 = !DILocation(line: 1790, column: 10, scope: !20169)
!20191 = !DILocation(line: 1790, column: 15, scope: !20169)
!20192 = !DILocation(line: 1790, column: 2, scope: !20169)
!20193 = !DILocalVariable(name: "__mptr", scope: !20194, file: !3, line: 1792, type: !726)
!20194 = distinct !DILexicalBlock(scope: !20195, file: !3, line: 1792, column: 10)
!20195 = distinct !DILexicalBlock(scope: !20169, file: !3, line: 1790, column: 19)
!20196 = !DILocation(line: 1792, column: 10, scope: !20194)
!20197 = !DILocation(line: 1792, column: 10, scope: !20198)
!20198 = distinct !DILexicalBlock(scope: !20194, file: !3, line: 1792, column: 10)
!20199 = !DILocation(line: 1792, column: 8, scope: !20195)
!20200 = !DILocation(line: 1793, column: 33, scope: !20195)
!20201 = !DILocation(line: 1793, column: 48, scope: !20195)
!20202 = !DILocation(line: 1793, column: 54, scope: !20195)
!20203 = !DILocation(line: 1794, column: 12, scope: !20195)
!20204 = !DILocation(line: 1793, column: 9, scope: !20195)
!20205 = !DILocation(line: 1793, column: 7, scope: !20195)
!20206 = !DILocation(line: 1796, column: 34, scope: !20207)
!20207 = distinct !DILexicalBlock(scope: !20195, file: !3, line: 1796, column: 7)
!20208 = !DILocation(line: 1796, column: 7, scope: !20207)
!20209 = !DILocation(line: 1796, column: 7, scope: !20195)
!20210 = !DILocation(line: 1802, column: 25, scope: !20211)
!20211 = distinct !DILexicalBlock(scope: !20207, file: !3, line: 1796, column: 42)
!20212 = !DILocation(line: 1802, column: 40, scope: !20211)
!20213 = !DILocation(line: 1802, column: 4, scope: !20211)
!20214 = !DILocation(line: 1803, column: 3, scope: !20211)
!20215 = !DILocation(line: 1804, column: 3, scope: !20195)
!20216 = !DILocation(line: 1806, column: 31, scope: !20195)
!20217 = !DILocalVariable(name: "__mptr", scope: !20218, file: !3, line: 1807, type: !726)
!20218 = distinct !DILexicalBlock(scope: !20195, file: !3, line: 1807, column: 10)
!20219 = !DILocation(line: 1807, column: 10, scope: !20218)
!20220 = !DILocation(line: 1807, column: 10, scope: !20221)
!20221 = distinct !DILexicalBlock(scope: !20218, file: !3, line: 1807, column: 10)
!20222 = !DILocation(line: 1808, column: 10, scope: !20195)
!20223 = !DILocation(line: 1806, column: 9, scope: !20195)
!20224 = !DILocation(line: 1806, column: 7, scope: !20195)
!20225 = !DILocation(line: 1809, column: 3, scope: !20195)
!20226 = !DILocation(line: 1811, column: 7, scope: !20195)
!20227 = !DILocation(line: 1812, column: 3, scope: !20195)
!20228 = !DILocation(line: 1815, column: 9, scope: !20169)
!20229 = !DILocation(line: 1815, column: 2, scope: !20169)
!20230 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_handle_vxlan_obj_del", scope: !3, file: !3, line: 3393, type: !20231, scopeLine: 3396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20231 = !DISubroutineType(types: !20232)
!20232 = !{null, !451, !20141}
!20233 = !DILocalVariable(name: "vxlan_dev", arg: 1, scope: !20230, file: !3, line: 3393, type: !451)
!20234 = !DILocation(line: 3393, column: 60, scope: !20230)
!20235 = !DILocalVariable(name: "port_obj_info", arg: 2, scope: !20230, file: !3, line: 3395, type: !20141)
!20236 = !DILocation(line: 3395, column: 6, scope: !20230)
!20237 = !DILocation(line: 3397, column: 10, scope: !20230)
!20238 = !DILocation(line: 3397, column: 25, scope: !20230)
!20239 = !DILocation(line: 3397, column: 30, scope: !20230)
!20240 = !DILocation(line: 3397, column: 2, scope: !20230)
!20241 = !DILocation(line: 3399, column: 38, scope: !20242)
!20242 = distinct !DILexicalBlock(scope: !20230, file: !3, line: 3397, column: 34)
!20243 = !DILocation(line: 3399, column: 49, scope: !20242)
!20244 = !DILocation(line: 3399, column: 3, scope: !20242)
!20245 = !DILocation(line: 3400, column: 3, scope: !20242)
!20246 = !DILocation(line: 3402, column: 3, scope: !20242)
!20247 = !DILocation(line: 3404, column: 1, scope: !20230)
!20248 = distinct !DISubprogram(name: "mlxsw_sp_port_obj_del", scope: !3, file: !3, line: 1935, type: !20249, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20249 = !DISubroutineType(types: !20250)
!20250 = !{!7, !451, !20146}
!20251 = !DILocalVariable(name: "dev", arg: 1, scope: !20248, file: !3, line: 1935, type: !451)
!20252 = !DILocation(line: 1935, column: 53, scope: !20248)
!20253 = !DILocalVariable(name: "obj", arg: 2, scope: !20248, file: !3, line: 1936, type: !20146)
!20254 = !DILocation(line: 1936, column: 34, scope: !20248)
!20255 = !DILocalVariable(name: "mlxsw_sp_port", scope: !20248, file: !3, line: 1938, type: !10406)
!20256 = !DILocation(line: 1938, column: 24, scope: !20248)
!20257 = !DILocation(line: 1938, column: 52, scope: !20248)
!20258 = !DILocation(line: 1938, column: 40, scope: !20248)
!20259 = !DILocalVariable(name: "err", scope: !20248, file: !3, line: 1939, type: !7)
!20260 = !DILocation(line: 1939, column: 6, scope: !20248)
!20261 = !DILocation(line: 1941, column: 10, scope: !20248)
!20262 = !DILocation(line: 1941, column: 15, scope: !20248)
!20263 = !DILocation(line: 1941, column: 2, scope: !20248)
!20264 = !DILocation(line: 1943, column: 33, scope: !20265)
!20265 = distinct !DILexicalBlock(scope: !20248, file: !3, line: 1941, column: 19)
!20266 = !DILocalVariable(name: "__mptr", scope: !20267, file: !3, line: 1944, type: !726)
!20267 = distinct !DILexicalBlock(scope: !20265, file: !3, line: 1944, column: 12)
!20268 = !DILocation(line: 1944, column: 12, scope: !20267)
!20269 = !DILocation(line: 1944, column: 12, scope: !20270)
!20270 = distinct !DILexicalBlock(scope: !20267, file: !3, line: 1944, column: 12)
!20271 = !DILocation(line: 1943, column: 9, scope: !20265)
!20272 = !DILocation(line: 1943, column: 7, scope: !20265)
!20273 = !DILocation(line: 1945, column: 3, scope: !20265)
!20274 = !DILocation(line: 1947, column: 31, scope: !20265)
!20275 = !DILocalVariable(name: "__mptr", scope: !20276, file: !3, line: 1948, type: !726)
!20276 = distinct !DILexicalBlock(scope: !20265, file: !3, line: 1948, column: 10)
!20277 = !DILocation(line: 1948, column: 10, scope: !20276)
!20278 = !DILocation(line: 1948, column: 10, scope: !20279)
!20279 = distinct !DILexicalBlock(scope: !20276, file: !3, line: 1948, column: 10)
!20280 = !DILocation(line: 1947, column: 9, scope: !20265)
!20281 = !DILocation(line: 1947, column: 7, scope: !20265)
!20282 = !DILocation(line: 1949, column: 3, scope: !20265)
!20283 = !DILocation(line: 1951, column: 7, scope: !20265)
!20284 = !DILocation(line: 1952, column: 3, scope: !20265)
!20285 = !DILocation(line: 1955, column: 23, scope: !20248)
!20286 = !DILocation(line: 1955, column: 38, scope: !20248)
!20287 = !DILocation(line: 1955, column: 2, scope: !20248)
!20288 = !DILocation(line: 1957, column: 9, scope: !20248)
!20289 = !DILocation(line: 1957, column: 2, scope: !20248)
!20290 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_vlans_add", scope: !3, file: !3, line: 3289, type: !20139, scopeLine: 3292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20291 = !DILocalVariable(name: "vxlan_dev", arg: 1, scope: !20290, file: !3, line: 3289, type: !451)
!20292 = !DILocation(line: 3289, column: 55, scope: !20290)
!20293 = !DILocalVariable(name: "port_obj_info", arg: 2, scope: !20290, file: !3, line: 3291, type: !20141)
!20294 = !DILocation(line: 3291, column: 8, scope: !20290)
!20295 = !DILocalVariable(name: "vlan", scope: !20290, file: !3, line: 3293, type: !11289)
!20296 = !DILocation(line: 3293, column: 34, scope: !20290)
!20297 = !DILocalVariable(name: "__mptr", scope: !20298, file: !3, line: 3294, type: !726)
!20298 = distinct !DILexicalBlock(scope: !20290, file: !3, line: 3294, column: 3)
!20299 = !DILocation(line: 3294, column: 3, scope: !20298)
!20300 = !DILocation(line: 3294, column: 3, scope: !20301)
!20301 = distinct !DILexicalBlock(scope: !20298, file: !3, line: 3294, column: 3)
!20302 = !DILocalVariable(name: "flag_untagged", scope: !20290, file: !3, line: 3295, type: !696)
!20303 = !DILocation(line: 3295, column: 7, scope: !20290)
!20304 = !DILocation(line: 3295, column: 23, scope: !20290)
!20305 = !DILocation(line: 3295, column: 29, scope: !20290)
!20306 = !DILocation(line: 3295, column: 35, scope: !20290)
!20307 = !DILocalVariable(name: "flag_pvid", scope: !20290, file: !3, line: 3296, type: !696)
!20308 = !DILocation(line: 3296, column: 7, scope: !20290)
!20309 = !DILocation(line: 3296, column: 19, scope: !20290)
!20310 = !DILocation(line: 3296, column: 25, scope: !20290)
!20311 = !DILocation(line: 3296, column: 31, scope: !20290)
!20312 = !DILocalVariable(name: "trans", scope: !20290, file: !3, line: 3297, type: !15315)
!20313 = !DILocation(line: 3297, column: 26, scope: !20290)
!20314 = !DILocation(line: 3297, column: 34, scope: !20290)
!20315 = !DILocation(line: 3297, column: 49, scope: !20290)
!20316 = !DILocalVariable(name: "bridge_device", scope: !20290, file: !3, line: 3298, type: !10370)
!20317 = !DILocation(line: 3298, column: 33, scope: !20290)
!20318 = !DILocalVariable(name: "extack", scope: !20290, file: !3, line: 3299, type: !2625)
!20319 = !DILocation(line: 3299, column: 26, scope: !20290)
!20320 = !DILocalVariable(name: "mlxsw_sp", scope: !20290, file: !3, line: 3300, type: !10421)
!20321 = !DILocation(line: 3300, column: 19, scope: !20290)
!20322 = !DILocalVariable(name: "br_dev", scope: !20290, file: !3, line: 3301, type: !451)
!20323 = !DILocation(line: 3301, column: 21, scope: !20290)
!20324 = !DILocalVariable(name: "vid", scope: !20290, file: !3, line: 3302, type: !1192)
!20325 = !DILocation(line: 3302, column: 6, scope: !20290)
!20326 = !DILocation(line: 3304, column: 46, scope: !20290)
!20327 = !DILocation(line: 3304, column: 61, scope: !20290)
!20328 = !DILocation(line: 3304, column: 11, scope: !20290)
!20329 = !DILocation(line: 3304, column: 9, scope: !20290)
!20330 = !DILocation(line: 3305, column: 39, scope: !20290)
!20331 = !DILocation(line: 3305, column: 11, scope: !20290)
!20332 = !DILocation(line: 3305, column: 9, scope: !20290)
!20333 = !DILocation(line: 3306, column: 7, scope: !20334)
!20334 = distinct !DILexicalBlock(scope: !20290, file: !3, line: 3306, column: 6)
!20335 = !DILocation(line: 3306, column: 6, scope: !20290)
!20336 = !DILocation(line: 3307, column: 3, scope: !20334)
!20337 = !DILocation(line: 3309, column: 32, scope: !20290)
!20338 = !DILocation(line: 3309, column: 13, scope: !20290)
!20339 = !DILocation(line: 3309, column: 11, scope: !20290)
!20340 = !DILocation(line: 3310, column: 7, scope: !20341)
!20341 = distinct !DILexicalBlock(scope: !20290, file: !3, line: 3310, column: 6)
!20342 = !DILocation(line: 3310, column: 6, scope: !20290)
!20343 = !DILocation(line: 3311, column: 3, scope: !20341)
!20344 = !DILocation(line: 3313, column: 2, scope: !20290)
!20345 = !DILocation(line: 3313, column: 17, scope: !20290)
!20346 = !DILocation(line: 3313, column: 25, scope: !20290)
!20347 = !DILocation(line: 3315, column: 32, scope: !20348)
!20348 = distinct !DILexicalBlock(scope: !20290, file: !3, line: 3315, column: 6)
!20349 = !DILocation(line: 3315, column: 6, scope: !20348)
!20350 = !DILocation(line: 3315, column: 6, scope: !20290)
!20351 = !DILocation(line: 3316, column: 3, scope: !20348)
!20352 = !DILocation(line: 3318, column: 46, scope: !20290)
!20353 = !DILocation(line: 3318, column: 56, scope: !20290)
!20354 = !DILocation(line: 3318, column: 64, scope: !20290)
!20355 = !DILocation(line: 3318, column: 18, scope: !20290)
!20356 = !DILocation(line: 3318, column: 16, scope: !20290)
!20357 = !DILocation(line: 3319, column: 7, scope: !20358)
!20358 = distinct !DILexicalBlock(scope: !20290, file: !3, line: 3319, column: 6)
!20359 = !DILocation(line: 3319, column: 6, scope: !20290)
!20360 = !DILocation(line: 3320, column: 3, scope: !20358)
!20361 = !DILocation(line: 3322, column: 7, scope: !20362)
!20362 = distinct !DILexicalBlock(scope: !20290, file: !3, line: 3322, column: 6)
!20363 = !DILocation(line: 3322, column: 22, scope: !20362)
!20364 = !DILocation(line: 3322, column: 6, scope: !20290)
!20365 = !DILocation(line: 3323, column: 3, scope: !20362)
!20366 = !DILocation(line: 3325, column: 13, scope: !20367)
!20367 = distinct !DILexicalBlock(scope: !20290, file: !3, line: 3325, column: 2)
!20368 = !DILocation(line: 3325, column: 19, scope: !20367)
!20369 = !DILocation(line: 3325, column: 11, scope: !20367)
!20370 = !DILocation(line: 3325, column: 7, scope: !20367)
!20371 = !DILocation(line: 3325, column: 30, scope: !20372)
!20372 = distinct !DILexicalBlock(scope: !20367, file: !3, line: 3325, column: 2)
!20373 = !DILocation(line: 3325, column: 37, scope: !20372)
!20374 = !DILocation(line: 3325, column: 43, scope: !20372)
!20375 = !DILocation(line: 3325, column: 34, scope: !20372)
!20376 = !DILocation(line: 3325, column: 2, scope: !20367)
!20377 = !DILocalVariable(name: "err", scope: !20378, file: !3, line: 3326, type: !7)
!20378 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 3325, column: 59)
!20379 = !DILocation(line: 3326, column: 7, scope: !20378)
!20380 = !DILocation(line: 3328, column: 43, scope: !20378)
!20381 = !DILocation(line: 3328, column: 53, scope: !20378)
!20382 = !DILocation(line: 3329, column: 8, scope: !20378)
!20383 = !DILocation(line: 3329, column: 19, scope: !20378)
!20384 = !DILocation(line: 3330, column: 8, scope: !20378)
!20385 = !DILocation(line: 3331, column: 8, scope: !20378)
!20386 = !DILocation(line: 3331, column: 19, scope: !20378)
!20387 = !DILocation(line: 3328, column: 9, scope: !20378)
!20388 = !DILocation(line: 3328, column: 7, scope: !20378)
!20389 = !DILocation(line: 3332, column: 7, scope: !20390)
!20390 = distinct !DILexicalBlock(scope: !20378, file: !3, line: 3332, column: 7)
!20391 = !DILocation(line: 3332, column: 7, scope: !20378)
!20392 = !DILocation(line: 3333, column: 11, scope: !20390)
!20393 = !DILocation(line: 3333, column: 4, scope: !20390)
!20394 = !DILocation(line: 3334, column: 2, scope: !20378)
!20395 = !DILocation(line: 3325, column: 55, scope: !20372)
!20396 = !DILocation(line: 3325, column: 2, scope: !20372)
!20397 = distinct !{!20397, !20376, !20398}
!20398 = !DILocation(line: 3334, column: 2, scope: !20367)
!20399 = !DILocation(line: 3336, column: 2, scope: !20290)
!20400 = !DILocation(line: 3337, column: 1, scope: !20290)
!20401 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11452, file: !3, line: 3175, type: !10421)
!20402 = !DILocation(line: 3175, column: 52, scope: !11452)
!20403 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !11452, file: !3, line: 3176, type: !10370)
!20404 = !DILocation(line: 3176, column: 38, scope: !11452)
!20405 = !DILocalVariable(name: "vxlan_dev", arg: 3, scope: !11452, file: !3, line: 3177, type: !3015)
!20406 = !DILocation(line: 3177, column: 32, scope: !11452)
!20407 = !DILocalVariable(name: "vid", arg: 4, scope: !11452, file: !3, line: 3177, type: !1192)
!20408 = !DILocation(line: 3177, column: 47, scope: !11452)
!20409 = !DILocalVariable(name: "flag_untagged", arg: 5, scope: !11452, file: !3, line: 3178, type: !696)
!20410 = !DILocation(line: 3178, column: 12, scope: !11452)
!20411 = !DILocalVariable(name: "flag_pvid", arg: 6, scope: !11452, file: !3, line: 3178, type: !696)
!20412 = !DILocation(line: 3178, column: 32, scope: !11452)
!20413 = !DILocalVariable(name: "extack", arg: 7, scope: !11452, file: !3, line: 3179, type: !2625)
!20414 = !DILocation(line: 3179, column: 31, scope: !11452)
!20415 = !DILocalVariable(name: "vxlan", scope: !11452, file: !3, line: 3181, type: !12565)
!20416 = !DILocation(line: 3181, column: 20, scope: !11452)
!20417 = !DILocation(line: 3181, column: 40, scope: !11452)
!20418 = !DILocation(line: 3181, column: 28, scope: !11452)
!20419 = !DILocalVariable(name: "vni", scope: !11452, file: !3, line: 3182, type: !622)
!20420 = !DILocation(line: 3182, column: 9, scope: !11452)
!20421 = !DILocation(line: 3182, column: 15, scope: !11452)
!20422 = !DILocation(line: 3182, column: 22, scope: !11452)
!20423 = !DILocation(line: 3182, column: 26, scope: !11452)
!20424 = !DILocalVariable(name: "fid", scope: !11452, file: !3, line: 3183, type: !11097)
!20425 = !DILocation(line: 3183, column: 23, scope: !11452)
!20426 = !DILocalVariable(name: "old_vid", scope: !11452, file: !3, line: 3184, type: !1192)
!20427 = !DILocation(line: 3184, column: 6, scope: !11452)
!20428 = !DILocalVariable(name: "err", scope: !11452, file: !3, line: 3185, type: !7)
!20429 = !DILocation(line: 3185, column: 6, scope: !11452)
!20430 = !DILocation(line: 3192, column: 6, scope: !20431)
!20431 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3192, column: 6)
!20432 = !DILocation(line: 3192, column: 20, scope: !20431)
!20433 = !DILocation(line: 3192, column: 23, scope: !20431)
!20434 = !DILocation(line: 3192, column: 33, scope: !20431)
!20435 = !DILocation(line: 3193, column: 43, scope: !20431)
!20436 = !DILocation(line: 3193, column: 58, scope: !20431)
!20437 = !DILocation(line: 3193, column: 63, scope: !20431)
!20438 = !DILocation(line: 3193, column: 6, scope: !20431)
!20439 = !DILocation(line: 3192, column: 6, scope: !11452)
!20440 = !DILocation(line: 3194, column: 3, scope: !20441)
!20441 = distinct !DILexicalBlock(scope: !20431, file: !3, line: 3193, column: 69)
!20442 = !DILocalVariable(name: "__extack", scope: !20443, file: !3, line: 3194, type: !2625)
!20443 = distinct !DILexicalBlock(scope: !20441, file: !3, line: 3194, column: 3)
!20444 = !DILocation(line: 3194, column: 3, scope: !20443)
!20445 = !DILocation(line: 3194, column: 3, scope: !20446)
!20446 = distinct !DILexicalBlock(scope: !20443, file: !3, line: 3194, column: 3)
!20447 = !DILocation(line: 3195, column: 3, scope: !20441)
!20448 = !DILocation(line: 3198, column: 21, scope: !20449)
!20449 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3198, column: 6)
!20450 = !DILocation(line: 3198, column: 7, scope: !20449)
!20451 = !DILocation(line: 3198, column: 6, scope: !11452)
!20452 = !DILocation(line: 3199, column: 3, scope: !20449)
!20453 = !DILocation(line: 3205, column: 35, scope: !11452)
!20454 = !DILocation(line: 3205, column: 45, scope: !11452)
!20455 = !DILocation(line: 3205, column: 8, scope: !11452)
!20456 = !DILocation(line: 3205, column: 6, scope: !11452)
!20457 = !DILocation(line: 3206, column: 7, scope: !20458)
!20458 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3206, column: 6)
!20459 = !DILocation(line: 3206, column: 6, scope: !11452)
!20460 = !DILocation(line: 3207, column: 8, scope: !20461)
!20461 = distinct !DILexicalBlock(scope: !20462, file: !3, line: 3207, column: 7)
!20462 = distinct !DILexicalBlock(scope: !20458, file: !3, line: 3206, column: 12)
!20463 = !DILocation(line: 3207, column: 22, scope: !20461)
!20464 = !DILocation(line: 3207, column: 26, scope: !20461)
!20465 = !DILocation(line: 3207, column: 7, scope: !20462)
!20466 = !DILocation(line: 3208, column: 4, scope: !20461)
!20467 = !DILocation(line: 3209, column: 43, scope: !20462)
!20468 = !DILocation(line: 3210, column: 8, scope: !20462)
!20469 = !DILocation(line: 3210, column: 19, scope: !20462)
!20470 = !DILocation(line: 3210, column: 24, scope: !20462)
!20471 = !DILocation(line: 3209, column: 10, scope: !20462)
!20472 = !DILocation(line: 3209, column: 3, scope: !20462)
!20473 = !DILocation(line: 3218, column: 35, scope: !11452)
!20474 = !DILocation(line: 3218, column: 12, scope: !11452)
!20475 = !DILocation(line: 3218, column: 10, scope: !11452)
!20476 = !DILocation(line: 3219, column: 6, scope: !20477)
!20477 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3219, column: 6)
!20478 = !DILocation(line: 3219, column: 13, scope: !20477)
!20479 = !DILocation(line: 3219, column: 10, scope: !20477)
!20480 = !DILocation(line: 3219, column: 6, scope: !11452)
!20481 = !DILocalVariable(name: "__ret_warn_on", scope: !20482, file: !3, line: 3220, type: !7)
!20482 = distinct !DILexicalBlock(scope: !20483, file: !3, line: 3220, column: 7)
!20483 = distinct !DILexicalBlock(scope: !20484, file: !3, line: 3220, column: 7)
!20484 = distinct !DILexicalBlock(scope: !20477, file: !3, line: 3219, column: 22)
!20485 = !DILocation(line: 3220, column: 7, scope: !20482)
!20486 = !DILocation(line: 0, scope: !20482)
!20487 = !DILocation(line: 3220, column: 7, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20482, file: !3, line: 3220, column: 7)
!20489 = !DILocation(line: 3220, column: 7, scope: !20490)
!20490 = distinct !DILexicalBlock(scope: !20488, file: !3, line: 3220, column: 7)
!20491 = !DILocation(line: 3220, column: 7, scope: !20492)
!20492 = distinct !DILexicalBlock(scope: !20490, file: !3, line: 3220, column: 7)
!20493 = !DILocation(line: 3220, column: 7, scope: !20494)
!20494 = distinct !DILexicalBlock(scope: !20490, file: !3, line: 3220, column: 7)
!20495 = !{i32 -2134687501, i32 -2134687472, i32 -2134687426, i32 -2134687368, i32 -2134687314, i32 -2134687260, i32 -2134687205, i32 -2134687174}
!20496 = !DILocation(line: 3220, column: 7, scope: !20497)
!20497 = distinct !DILexicalBlock(scope: !20490, file: !3, line: 3220, column: 7)
!20498 = !{i32 -2134686735, i32 -2134686728, i32 -2134686676, i32 -2134686645, i32 -2134686615}
!20499 = !DILocation(line: 3220, column: 7, scope: !20500)
!20500 = distinct !DILexicalBlock(scope: !20490, file: !3, line: 3220, column: 7)
!20501 = !DILocation(line: 3220, column: 7, scope: !20483)
!20502 = !DILocation(line: 3220, column: 7, scope: !20484)
!20503 = !DILocation(line: 3221, column: 21, scope: !20504)
!20504 = distinct !DILexicalBlock(scope: !20483, file: !3, line: 3220, column: 44)
!20505 = !DILocation(line: 3221, column: 4, scope: !20504)
!20506 = !DILocation(line: 3222, column: 4, scope: !20504)
!20507 = !DILocation(line: 3224, column: 31, scope: !20484)
!20508 = !DILocation(line: 3224, column: 41, scope: !20484)
!20509 = !DILocation(line: 3224, column: 3, scope: !20484)
!20510 = !DILocation(line: 3225, column: 20, scope: !20484)
!20511 = !DILocation(line: 3225, column: 3, scope: !20484)
!20512 = !DILocation(line: 3226, column: 3, scope: !20484)
!20513 = !DILocation(line: 3232, column: 7, scope: !20514)
!20514 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3232, column: 6)
!20515 = !DILocation(line: 3232, column: 6, scope: !11452)
!20516 = !DILocation(line: 3233, column: 20, scope: !20517)
!20517 = distinct !DILexicalBlock(scope: !20514, file: !3, line: 3232, column: 18)
!20518 = !DILocation(line: 3233, column: 3, scope: !20517)
!20519 = !DILocation(line: 3234, column: 3, scope: !20517)
!20520 = !DILocation(line: 3240, column: 30, scope: !11452)
!20521 = !DILocation(line: 3240, column: 40, scope: !11452)
!20522 = !DILocation(line: 3240, column: 2, scope: !11452)
!20523 = !DILocation(line: 3241, column: 19, scope: !11452)
!20524 = !DILocation(line: 3241, column: 2, scope: !11452)
!20525 = !DILocation(line: 3246, column: 7, scope: !20526)
!20526 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3246, column: 6)
!20527 = !DILocation(line: 3246, column: 6, scope: !11452)
!20528 = !DILocation(line: 3247, column: 3, scope: !20526)
!20529 = !DILocation(line: 3249, column: 41, scope: !11452)
!20530 = !DILocation(line: 3249, column: 56, scope: !11452)
!20531 = !DILocation(line: 3249, column: 67, scope: !11452)
!20532 = !DILocation(line: 3250, column: 13, scope: !11452)
!20533 = !DILocation(line: 3249, column: 8, scope: !11452)
!20534 = !DILocation(line: 3249, column: 6, scope: !11452)
!20535 = !DILocation(line: 3251, column: 6, scope: !20536)
!20536 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 3251, column: 6)
!20537 = !DILocation(line: 3251, column: 6, scope: !11452)
!20538 = !DILocation(line: 3252, column: 3, scope: !20536)
!20539 = !DILocation(line: 3254, column: 2, scope: !11452)
!20540 = !DILabel(scope: !11452, name: "err_vxlan_join", file: !3, line: 3256)
!20541 = !DILocation(line: 3256, column: 1, scope: !11452)
!20542 = !DILocation(line: 3257, column: 35, scope: !11452)
!20543 = !DILocation(line: 3257, column: 50, scope: !11452)
!20544 = !DILocation(line: 3257, column: 61, scope: !11452)
!20545 = !DILocation(line: 3257, column: 2, scope: !11452)
!20546 = !DILocation(line: 3259, column: 9, scope: !11452)
!20547 = !DILocation(line: 3259, column: 2, scope: !11452)
!20548 = !DILocation(line: 3260, column: 1, scope: !11452)
!20549 = distinct !DISubprogram(name: "mlxsw_sp_bridge_8021q_vxlan_dev_find", scope: !3, file: !3, line: 2054, type: !20550, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20550 = !DISubroutineType(types: !20551)
!20551 = !{!451, !451, !1192}
!20552 = !DILocalVariable(name: "br_dev", arg: 1, scope: !20549, file: !3, line: 2054, type: !451)
!20553 = !DILocation(line: 2054, column: 57, scope: !20549)
!20554 = !DILocalVariable(name: "vid", arg: 2, scope: !20549, file: !3, line: 2054, type: !1192)
!20555 = !DILocation(line: 2054, column: 69, scope: !20549)
!20556 = !DILocalVariable(name: "dev", scope: !20549, file: !3, line: 2056, type: !451)
!20557 = !DILocation(line: 2056, column: 21, scope: !20549)
!20558 = !DILocalVariable(name: "iter", scope: !20549, file: !3, line: 2057, type: !448)
!20559 = !DILocation(line: 2057, column: 20, scope: !20549)
!20560 = !DILocation(line: 2059, column: 2, scope: !20561)
!20561 = distinct !DILexicalBlock(scope: !20549, file: !3, line: 2059, column: 2)
!20562 = !DILocation(line: 2059, column: 2, scope: !20563)
!20563 = distinct !DILexicalBlock(scope: !20561, file: !3, line: 2059, column: 2)
!20564 = !DILocalVariable(name: "pvid", scope: !20565, file: !3, line: 2060, type: !1192)
!20565 = distinct !DILexicalBlock(scope: !20563, file: !3, line: 2059, column: 47)
!20566 = !DILocation(line: 2060, column: 7, scope: !20565)
!20567 = !DILocalVariable(name: "err", scope: !20565, file: !3, line: 2061, type: !7)
!20568 = !DILocation(line: 2061, column: 7, scope: !20565)
!20569 = !DILocation(line: 2063, column: 23, scope: !20570)
!20570 = distinct !DILexicalBlock(scope: !20565, file: !3, line: 2063, column: 7)
!20571 = !DILocation(line: 2063, column: 8, scope: !20570)
!20572 = !DILocation(line: 2063, column: 7, scope: !20565)
!20573 = !DILocation(line: 2064, column: 4, scope: !20570)
!20574 = !DILocation(line: 2066, column: 35, scope: !20565)
!20575 = !DILocation(line: 2066, column: 9, scope: !20565)
!20576 = !DILocation(line: 2066, column: 7, scope: !20565)
!20577 = !DILocation(line: 2067, column: 7, scope: !20578)
!20578 = distinct !DILexicalBlock(scope: !20565, file: !3, line: 2067, column: 7)
!20579 = !DILocation(line: 2067, column: 11, scope: !20578)
!20580 = !DILocation(line: 2067, column: 14, scope: !20578)
!20581 = !DILocation(line: 2067, column: 22, scope: !20578)
!20582 = !DILocation(line: 2067, column: 19, scope: !20578)
!20583 = !DILocation(line: 2067, column: 7, scope: !20565)
!20584 = !DILocation(line: 2068, column: 4, scope: !20578)
!20585 = !DILocation(line: 2070, column: 10, scope: !20565)
!20586 = !DILocation(line: 2070, column: 3, scope: !20565)
!20587 = distinct !{!20587, !20560, !20588}
!20588 = !DILocation(line: 2071, column: 2, scope: !20561)
!20589 = !DILocation(line: 2073, column: 2, scope: !20549)
!20590 = !DILocation(line: 2074, column: 1, scope: !20549)
!20591 = distinct !DISubprogram(name: "mlxsw_sp_port_vlans_add", scope: !3, file: !3, line: 1204, type: !20592, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20592 = !DISubroutineType(types: !20593)
!20593 = !{!7, !10406, !20185, !15315, !2625}
!20594 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !20591, file: !3, line: 1204, type: !10406)
!20595 = !DILocation(line: 1204, column: 58, scope: !20591)
!20596 = !DILocalVariable(name: "vlan", arg: 2, scope: !20591, file: !3, line: 1205, type: !20185)
!20597 = !DILocation(line: 1205, column: 46, scope: !20591)
!20598 = !DILocalVariable(name: "trans", arg: 3, scope: !20591, file: !3, line: 1206, type: !15315)
!20599 = !DILocation(line: 1206, column: 32, scope: !20591)
!20600 = !DILocalVariable(name: "extack", arg: 4, scope: !20591, file: !3, line: 1207, type: !2625)
!20601 = !DILocation(line: 1207, column: 32, scope: !20591)
!20602 = !DILocalVariable(name: "flag_untagged", scope: !20591, file: !3, line: 1209, type: !696)
!20603 = !DILocation(line: 1209, column: 7, scope: !20591)
!20604 = !DILocation(line: 1209, column: 23, scope: !20591)
!20605 = !DILocation(line: 1209, column: 29, scope: !20591)
!20606 = !DILocation(line: 1209, column: 35, scope: !20591)
!20607 = !DILocalVariable(name: "flag_pvid", scope: !20591, file: !3, line: 1210, type: !696)
!20608 = !DILocation(line: 1210, column: 7, scope: !20591)
!20609 = !DILocation(line: 1210, column: 19, scope: !20591)
!20610 = !DILocation(line: 1210, column: 25, scope: !20591)
!20611 = !DILocation(line: 1210, column: 31, scope: !20591)
!20612 = !DILocalVariable(name: "mlxsw_sp", scope: !20591, file: !3, line: 1211, type: !10421)
!20613 = !DILocation(line: 1211, column: 19, scope: !20591)
!20614 = !DILocation(line: 1211, column: 30, scope: !20591)
!20615 = !DILocation(line: 1211, column: 45, scope: !20591)
!20616 = !DILocalVariable(name: "orig_dev", scope: !20591, file: !3, line: 1212, type: !451)
!20617 = !DILocation(line: 1212, column: 21, scope: !20591)
!20618 = !DILocation(line: 1212, column: 32, scope: !20591)
!20619 = !DILocation(line: 1212, column: 38, scope: !20591)
!20620 = !DILocation(line: 1212, column: 42, scope: !20591)
!20621 = !DILocalVariable(name: "bridge_port", scope: !20591, file: !3, line: 1213, type: !10389)
!20622 = !DILocation(line: 1213, column: 31, scope: !20591)
!20623 = !DILocalVariable(name: "vid", scope: !20591, file: !3, line: 1214, type: !1192)
!20624 = !DILocation(line: 1214, column: 6, scope: !20591)
!20625 = !DILocation(line: 1216, column: 29, scope: !20626)
!20626 = distinct !DILexicalBlock(scope: !20591, file: !3, line: 1216, column: 6)
!20627 = !DILocation(line: 1216, column: 6, scope: !20626)
!20628 = !DILocation(line: 1216, column: 6, scope: !20591)
!20629 = !DILocalVariable(name: "err", scope: !20630, file: !3, line: 1217, type: !7)
!20630 = distinct !DILexicalBlock(scope: !20626, file: !3, line: 1216, column: 40)
!20631 = !DILocation(line: 1217, column: 7, scope: !20630)
!20632 = !DILocation(line: 1219, column: 8, scope: !20633)
!20633 = distinct !DILexicalBlock(scope: !20630, file: !3, line: 1219, column: 7)
!20634 = !DILocation(line: 1219, column: 14, scope: !20633)
!20635 = !DILocation(line: 1219, column: 20, scope: !20633)
!20636 = !DILocation(line: 1219, column: 48, scope: !20633)
!20637 = !DILocation(line: 1220, column: 23, scope: !20633)
!20638 = !DILocation(line: 1220, column: 7, scope: !20633)
!20639 = !DILocation(line: 1220, column: 33, scope: !20633)
!20640 = !DILocation(line: 1221, column: 34, scope: !20633)
!20641 = !DILocation(line: 1221, column: 7, scope: !20633)
!20642 = !DILocation(line: 1219, column: 7, scope: !20630)
!20643 = !DILocation(line: 1222, column: 42, scope: !20633)
!20644 = !DILocation(line: 1223, column: 14, scope: !20633)
!20645 = !DILocation(line: 1223, column: 24, scope: !20633)
!20646 = !DILocation(line: 1222, column: 10, scope: !20633)
!20647 = !DILocation(line: 1222, column: 8, scope: !20633)
!20648 = !DILocation(line: 1222, column: 4, scope: !20633)
!20649 = !DILocation(line: 1224, column: 8, scope: !20650)
!20650 = distinct !DILexicalBlock(scope: !20630, file: !3, line: 1224, column: 7)
!20651 = !DILocation(line: 1224, column: 7, scope: !20630)
!20652 = !DILocation(line: 1225, column: 8, scope: !20650)
!20653 = !DILocation(line: 1225, column: 4, scope: !20650)
!20654 = !DILocation(line: 1226, column: 10, scope: !20630)
!20655 = !DILocation(line: 1226, column: 3, scope: !20630)
!20656 = !DILocation(line: 1229, column: 32, scope: !20657)
!20657 = distinct !DILexicalBlock(scope: !20591, file: !3, line: 1229, column: 6)
!20658 = !DILocation(line: 1229, column: 6, scope: !20657)
!20659 = !DILocation(line: 1229, column: 6, scope: !20591)
!20660 = !DILocation(line: 1230, column: 3, scope: !20657)
!20661 = !DILocation(line: 1232, column: 42, scope: !20591)
!20662 = !DILocation(line: 1232, column: 52, scope: !20591)
!20663 = !DILocation(line: 1232, column: 60, scope: !20591)
!20664 = !DILocation(line: 1232, column: 16, scope: !20591)
!20665 = !DILocation(line: 1232, column: 14, scope: !20591)
!20666 = !DILocalVariable(name: "__ret_warn_on", scope: !20667, file: !3, line: 1233, type: !7)
!20667 = distinct !DILexicalBlock(scope: !20668, file: !3, line: 1233, column: 6)
!20668 = distinct !DILexicalBlock(scope: !20591, file: !3, line: 1233, column: 6)
!20669 = !DILocation(line: 1233, column: 6, scope: !20667)
!20670 = !DILocation(line: 1233, column: 6, scope: !20671)
!20671 = distinct !DILexicalBlock(scope: !20667, file: !3, line: 1233, column: 6)
!20672 = !DILocation(line: 1233, column: 6, scope: !20673)
!20673 = distinct !DILexicalBlock(scope: !20671, file: !3, line: 1233, column: 6)
!20674 = !DILocation(line: 1233, column: 6, scope: !20675)
!20675 = distinct !DILexicalBlock(scope: !20673, file: !3, line: 1233, column: 6)
!20676 = !DILocation(line: 1233, column: 6, scope: !20677)
!20677 = distinct !DILexicalBlock(scope: !20673, file: !3, line: 1233, column: 6)
!20678 = !{i32 -2134753903, i32 -2134753874, i32 -2134753828, i32 -2134753770, i32 -2134753716, i32 -2134753662, i32 -2134753607, i32 -2134753576}
!20679 = !DILocation(line: 1233, column: 6, scope: !20680)
!20680 = distinct !DILexicalBlock(scope: !20673, file: !3, line: 1233, column: 6)
!20681 = !{i32 -2134753137, i32 -2134753130, i32 -2134753078, i32 -2134753047, i32 -2134753017}
!20682 = !DILocation(line: 1233, column: 6, scope: !20683)
!20683 = distinct !DILexicalBlock(scope: !20673, file: !3, line: 1233, column: 6)
!20684 = !DILocation(line: 1233, column: 6, scope: !20668)
!20685 = !DILocation(line: 1233, column: 6, scope: !20591)
!20686 = !DILocation(line: 1234, column: 3, scope: !20668)
!20687 = !DILocation(line: 1236, column: 7, scope: !20688)
!20688 = distinct !DILexicalBlock(scope: !20591, file: !3, line: 1236, column: 6)
!20689 = !DILocation(line: 1236, column: 20, scope: !20688)
!20690 = !DILocation(line: 1236, column: 35, scope: !20688)
!20691 = !DILocation(line: 1236, column: 6, scope: !20591)
!20692 = !DILocation(line: 1237, column: 3, scope: !20688)
!20693 = !DILocation(line: 1239, column: 13, scope: !20694)
!20694 = distinct !DILexicalBlock(scope: !20591, file: !3, line: 1239, column: 2)
!20695 = !DILocation(line: 1239, column: 19, scope: !20694)
!20696 = !DILocation(line: 1239, column: 11, scope: !20694)
!20697 = !DILocation(line: 1239, column: 7, scope: !20694)
!20698 = !DILocation(line: 1239, column: 30, scope: !20699)
!20699 = distinct !DILexicalBlock(scope: !20694, file: !3, line: 1239, column: 2)
!20700 = !DILocation(line: 1239, column: 37, scope: !20699)
!20701 = !DILocation(line: 1239, column: 43, scope: !20699)
!20702 = !DILocation(line: 1239, column: 34, scope: !20699)
!20703 = !DILocation(line: 1239, column: 2, scope: !20694)
!20704 = !DILocalVariable(name: "err", scope: !20705, file: !3, line: 1240, type: !7)
!20705 = distinct !DILexicalBlock(scope: !20699, file: !3, line: 1239, column: 59)
!20706 = !DILocation(line: 1240, column: 7, scope: !20705)
!20707 = !DILocation(line: 1242, column: 39, scope: !20705)
!20708 = !DILocation(line: 1242, column: 54, scope: !20705)
!20709 = !DILocation(line: 1243, column: 11, scope: !20705)
!20710 = !DILocation(line: 1243, column: 16, scope: !20705)
!20711 = !DILocation(line: 1244, column: 11, scope: !20705)
!20712 = !DILocation(line: 1244, column: 22, scope: !20705)
!20713 = !DILocation(line: 1242, column: 9, scope: !20705)
!20714 = !DILocation(line: 1242, column: 7, scope: !20705)
!20715 = !DILocation(line: 1245, column: 7, scope: !20716)
!20716 = distinct !DILexicalBlock(scope: !20705, file: !3, line: 1245, column: 7)
!20717 = !DILocation(line: 1245, column: 7, scope: !20705)
!20718 = !DILocation(line: 1246, column: 11, scope: !20716)
!20719 = !DILocation(line: 1246, column: 4, scope: !20716)
!20720 = !DILocation(line: 1247, column: 2, scope: !20705)
!20721 = !DILocation(line: 1239, column: 55, scope: !20699)
!20722 = !DILocation(line: 1239, column: 2, scope: !20699)
!20723 = distinct !{!20723, !20703, !20724}
!20724 = !DILocation(line: 1247, column: 2, scope: !20694)
!20725 = !DILocation(line: 1249, column: 2, scope: !20591)
!20726 = !DILocation(line: 1250, column: 1, scope: !20591)
!20727 = distinct !DISubprogram(name: "mlxsw_sp_port_mdb_add", scope: !3, file: !3, line: 1685, type: !20728, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20728 = !DISubroutineType(types: !20729)
!20729 = !{!7, !10406, !20730, !15315}
!20730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20731, size: 64)
!20731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11307)
!20732 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !20727, file: !3, line: 1685, type: !10406)
!20733 = !DILocation(line: 1685, column: 56, scope: !20727)
!20734 = !DILocalVariable(name: "mdb", arg: 2, scope: !20727, file: !3, line: 1686, type: !20730)
!20735 = !DILocation(line: 1686, column: 43, scope: !20727)
!20736 = !DILocalVariable(name: "trans", arg: 3, scope: !20727, file: !3, line: 1687, type: !15315)
!20737 = !DILocation(line: 1687, column: 30, scope: !20727)
!20738 = !DILocalVariable(name: "mlxsw_sp", scope: !20727, file: !3, line: 1689, type: !10421)
!20739 = !DILocation(line: 1689, column: 19, scope: !20727)
!20740 = !DILocation(line: 1689, column: 30, scope: !20727)
!20741 = !DILocation(line: 1689, column: 45, scope: !20727)
!20742 = !DILocalVariable(name: "orig_dev", scope: !20727, file: !3, line: 1690, type: !451)
!20743 = !DILocation(line: 1690, column: 21, scope: !20727)
!20744 = !DILocation(line: 1690, column: 32, scope: !20727)
!20745 = !DILocation(line: 1690, column: 37, scope: !20727)
!20746 = !DILocation(line: 1690, column: 41, scope: !20727)
!20747 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !20727, file: !3, line: 1691, type: !11091)
!20748 = !DILocation(line: 1691, column: 29, scope: !20727)
!20749 = !DILocalVariable(name: "dev", scope: !20727, file: !3, line: 1692, type: !451)
!20750 = !DILocation(line: 1692, column: 21, scope: !20727)
!20751 = !DILocation(line: 1692, column: 27, scope: !20727)
!20752 = !DILocation(line: 1692, column: 42, scope: !20727)
!20753 = !DILocalVariable(name: "bridge_device", scope: !20727, file: !3, line: 1693, type: !10370)
!20754 = !DILocation(line: 1693, column: 33, scope: !20727)
!20755 = !DILocalVariable(name: "bridge_port", scope: !20727, file: !3, line: 1694, type: !10389)
!20756 = !DILocation(line: 1694, column: 31, scope: !20727)
!20757 = !DILocalVariable(name: "mid", scope: !20727, file: !3, line: 1695, type: !11215)
!20758 = !DILocation(line: 1695, column: 23, scope: !20727)
!20759 = !DILocalVariable(name: "fid_index", scope: !20727, file: !3, line: 1696, type: !1192)
!20760 = !DILocation(line: 1696, column: 6, scope: !20727)
!20761 = !DILocalVariable(name: "err", scope: !20727, file: !3, line: 1697, type: !7)
!20762 = !DILocation(line: 1697, column: 6, scope: !20727)
!20763 = !DILocation(line: 1699, column: 32, scope: !20764)
!20764 = distinct !DILexicalBlock(scope: !20727, file: !3, line: 1699, column: 6)
!20765 = !DILocation(line: 1699, column: 6, scope: !20764)
!20766 = !DILocation(line: 1699, column: 6, scope: !20727)
!20767 = !DILocation(line: 1700, column: 3, scope: !20764)
!20768 = !DILocation(line: 1702, column: 42, scope: !20727)
!20769 = !DILocation(line: 1702, column: 52, scope: !20727)
!20770 = !DILocation(line: 1702, column: 60, scope: !20727)
!20771 = !DILocation(line: 1702, column: 16, scope: !20727)
!20772 = !DILocation(line: 1702, column: 14, scope: !20727)
!20773 = !DILocation(line: 1703, column: 7, scope: !20774)
!20774 = distinct !DILexicalBlock(scope: !20727, file: !3, line: 1703, column: 6)
!20775 = !DILocation(line: 1703, column: 6, scope: !20727)
!20776 = !DILocation(line: 1704, column: 3, scope: !20774)
!20777 = !DILocation(line: 1706, column: 18, scope: !20727)
!20778 = !DILocation(line: 1706, column: 31, scope: !20727)
!20779 = !DILocation(line: 1706, column: 16, scope: !20727)
!20780 = !DILocation(line: 1707, column: 57, scope: !20727)
!20781 = !DILocation(line: 1708, column: 15, scope: !20727)
!20782 = !DILocation(line: 1709, column: 15, scope: !20727)
!20783 = !DILocation(line: 1709, column: 20, scope: !20727)
!20784 = !DILocation(line: 1707, column: 23, scope: !20727)
!20785 = !DILocation(line: 1707, column: 21, scope: !20727)
!20786 = !DILocation(line: 1710, column: 7, scope: !20787)
!20787 = distinct !DILexicalBlock(scope: !20727, file: !3, line: 1710, column: 6)
!20788 = !DILocation(line: 1710, column: 6, scope: !20727)
!20789 = !DILocation(line: 1711, column: 3, scope: !20787)
!20790 = !DILocation(line: 1713, column: 33, scope: !20727)
!20791 = !DILocation(line: 1713, column: 53, scope: !20727)
!20792 = !DILocation(line: 1713, column: 14, scope: !20727)
!20793 = !DILocation(line: 1713, column: 12, scope: !20727)
!20794 = !DILocation(line: 1715, column: 26, scope: !20727)
!20795 = !DILocation(line: 1715, column: 41, scope: !20727)
!20796 = !DILocation(line: 1715, column: 46, scope: !20727)
!20797 = !DILocation(line: 1715, column: 52, scope: !20727)
!20798 = !DILocation(line: 1715, column: 8, scope: !20727)
!20799 = !DILocation(line: 1715, column: 6, scope: !20727)
!20800 = !DILocation(line: 1716, column: 7, scope: !20801)
!20801 = distinct !DILexicalBlock(scope: !20727, file: !3, line: 1716, column: 6)
!20802 = !DILocation(line: 1716, column: 6, scope: !20727)
!20803 = !DILocation(line: 1717, column: 29, scope: !20804)
!20804 = distinct !DILexicalBlock(scope: !20801, file: !3, line: 1716, column: 12)
!20805 = !DILocation(line: 1717, column: 39, scope: !20804)
!20806 = !DILocation(line: 1717, column: 54, scope: !20804)
!20807 = !DILocation(line: 1717, column: 59, scope: !20804)
!20808 = !DILocation(line: 1718, column: 8, scope: !20804)
!20809 = !DILocation(line: 1717, column: 9, scope: !20804)
!20810 = !DILocation(line: 1717, column: 7, scope: !20804)
!20811 = !DILocation(line: 1719, column: 8, scope: !20812)
!20812 = distinct !DILexicalBlock(scope: !20804, file: !3, line: 1719, column: 7)
!20813 = !DILocation(line: 1719, column: 7, scope: !20804)
!20814 = !DILocation(line: 1720, column: 15, scope: !20815)
!20815 = distinct !DILexicalBlock(scope: !20812, file: !3, line: 1719, column: 13)
!20816 = !DILocation(line: 1720, column: 4, scope: !20815)
!20817 = !DILocation(line: 1721, column: 4, scope: !20815)
!20818 = !DILocation(line: 1723, column: 2, scope: !20804)
!20819 = !DILocation(line: 1724, column: 10, scope: !20727)
!20820 = !DILocation(line: 1724, column: 25, scope: !20727)
!20821 = !DILocation(line: 1724, column: 37, scope: !20727)
!20822 = !DILocation(line: 1724, column: 42, scope: !20727)
!20823 = !DILocation(line: 1724, column: 2, scope: !20727)
!20824 = !DILocation(line: 1726, column: 7, scope: !20825)
!20825 = distinct !DILexicalBlock(scope: !20727, file: !3, line: 1726, column: 6)
!20826 = !DILocation(line: 1726, column: 22, scope: !20825)
!20827 = !DILocation(line: 1726, column: 6, scope: !20727)
!20828 = !DILocation(line: 1727, column: 3, scope: !20825)
!20829 = !DILocation(line: 1729, column: 6, scope: !20830)
!20830 = distinct !DILexicalBlock(scope: !20727, file: !3, line: 1729, column: 6)
!20831 = !DILocation(line: 1729, column: 19, scope: !20830)
!20832 = !DILocation(line: 1729, column: 6, scope: !20727)
!20833 = !DILocation(line: 1730, column: 3, scope: !20830)
!20834 = !DILocation(line: 1732, column: 31, scope: !20727)
!20835 = !DILocation(line: 1732, column: 46, scope: !20727)
!20836 = !DILocation(line: 1732, column: 51, scope: !20727)
!20837 = !DILocation(line: 1732, column: 8, scope: !20727)
!20838 = !DILocation(line: 1732, column: 6, scope: !20727)
!20839 = !DILocation(line: 1733, column: 6, scope: !20840)
!20840 = distinct !DILexicalBlock(scope: !20727, file: !3, line: 1733, column: 6)
!20841 = !DILocation(line: 1733, column: 6, scope: !20727)
!20842 = !DILocation(line: 1734, column: 14, scope: !20843)
!20843 = distinct !DILexicalBlock(scope: !20840, file: !3, line: 1733, column: 11)
!20844 = !DILocation(line: 1734, column: 3, scope: !20843)
!20845 = !DILocation(line: 1735, column: 3, scope: !20843)
!20846 = !DILocation(line: 1738, column: 2, scope: !20727)
!20847 = !DILabel(scope: !20727, name: "err_out", file: !3, line: 1740)
!20848 = !DILocation(line: 1740, column: 1, scope: !20727)
!20849 = !DILocation(line: 1741, column: 32, scope: !20727)
!20850 = !DILocation(line: 1741, column: 47, scope: !20727)
!20851 = !DILocation(line: 1741, column: 2, scope: !20727)
!20852 = !DILocation(line: 1742, column: 9, scope: !20727)
!20853 = !DILocation(line: 1742, column: 2, scope: !20727)
!20854 = !DILocation(line: 1743, column: 1, scope: !20727)
!20855 = distinct !DISubprogram(name: "mlxsw_sp_br_ban_rif_pvid_change", scope: !3, file: !3, line: 1176, type: !20856, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20856 = !DISubroutineType(types: !20857)
!20857 = !{!7, !10421, !3015, !20185}
!20858 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !20855, file: !3, line: 1176, type: !10421)
!20859 = !DILocation(line: 1176, column: 50, scope: !20855)
!20860 = !DILocalVariable(name: "br_dev", arg: 2, scope: !20855, file: !3, line: 1177, type: !3015)
!20861 = !DILocation(line: 1177, column: 30, scope: !20855)
!20862 = !DILocalVariable(name: "vlan", arg: 3, scope: !20855, file: !3, line: 1178, type: !20185)
!20863 = !DILocation(line: 1178, column: 43, scope: !20855)
!20864 = !DILocalVariable(name: "pvid", scope: !20855, file: !3, line: 1180, type: !1192)
!20865 = !DILocation(line: 1180, column: 6, scope: !20855)
!20866 = !DILocalVariable(name: "vid", scope: !20855, file: !3, line: 1181, type: !1192)
!20867 = !DILocation(line: 1181, column: 6, scope: !20855)
!20868 = !DILocation(line: 1183, column: 26, scope: !20855)
!20869 = !DILocation(line: 1183, column: 36, scope: !20855)
!20870 = !DILocation(line: 1183, column: 9, scope: !20855)
!20871 = !DILocation(line: 1183, column: 7, scope: !20855)
!20872 = !DILocation(line: 1184, column: 7, scope: !20873)
!20873 = distinct !DILexicalBlock(scope: !20855, file: !3, line: 1184, column: 6)
!20874 = !DILocation(line: 1184, column: 6, scope: !20855)
!20875 = !DILocation(line: 1185, column: 3, scope: !20873)
!20876 = !DILocation(line: 1187, column: 13, scope: !20877)
!20877 = distinct !DILexicalBlock(scope: !20855, file: !3, line: 1187, column: 2)
!20878 = !DILocation(line: 1187, column: 19, scope: !20877)
!20879 = !DILocation(line: 1187, column: 11, scope: !20877)
!20880 = !DILocation(line: 1187, column: 7, scope: !20877)
!20881 = !DILocation(line: 1187, column: 30, scope: !20882)
!20882 = distinct !DILexicalBlock(scope: !20877, file: !3, line: 1187, column: 2)
!20883 = !DILocation(line: 1187, column: 37, scope: !20882)
!20884 = !DILocation(line: 1187, column: 43, scope: !20882)
!20885 = !DILocation(line: 1187, column: 34, scope: !20882)
!20886 = !DILocation(line: 1187, column: 2, scope: !20877)
!20887 = !DILocation(line: 1188, column: 7, scope: !20888)
!20888 = distinct !DILexicalBlock(scope: !20889, file: !3, line: 1188, column: 7)
!20889 = distinct !DILexicalBlock(scope: !20882, file: !3, line: 1187, column: 59)
!20890 = !DILocation(line: 1188, column: 13, scope: !20888)
!20891 = !DILocation(line: 1188, column: 19, scope: !20888)
!20892 = !DILocation(line: 1188, column: 7, scope: !20889)
!20893 = !DILocation(line: 1189, column: 8, scope: !20894)
!20894 = distinct !DILexicalBlock(scope: !20895, file: !3, line: 1189, column: 8)
!20895 = distinct !DILexicalBlock(scope: !20888, file: !3, line: 1188, column: 44)
!20896 = !DILocation(line: 1189, column: 15, scope: !20894)
!20897 = !DILocation(line: 1189, column: 12, scope: !20894)
!20898 = !DILocation(line: 1189, column: 8, scope: !20895)
!20899 = !DILocation(line: 1190, column: 16, scope: !20900)
!20900 = distinct !DILexicalBlock(scope: !20894, file: !3, line: 1189, column: 21)
!20901 = !DILocation(line: 1190, column: 5, scope: !20900)
!20902 = !DILocation(line: 1191, column: 5, scope: !20900)
!20903 = !DILocation(line: 1193, column: 3, scope: !20895)
!20904 = !DILocation(line: 1194, column: 8, scope: !20905)
!20905 = distinct !DILexicalBlock(scope: !20906, file: !3, line: 1194, column: 8)
!20906 = distinct !DILexicalBlock(scope: !20888, file: !3, line: 1193, column: 10)
!20907 = !DILocation(line: 1194, column: 15, scope: !20905)
!20908 = !DILocation(line: 1194, column: 12, scope: !20905)
!20909 = !DILocation(line: 1194, column: 8, scope: !20906)
!20910 = !DILocation(line: 1195, column: 16, scope: !20911)
!20911 = distinct !DILexicalBlock(scope: !20905, file: !3, line: 1194, column: 21)
!20912 = !DILocation(line: 1195, column: 5, scope: !20911)
!20913 = !DILocation(line: 1196, column: 5, scope: !20911)
!20914 = !DILocation(line: 1199, column: 2, scope: !20889)
!20915 = !DILocation(line: 1187, column: 52, scope: !20882)
!20916 = !DILocation(line: 1187, column: 2, scope: !20882)
!20917 = distinct !{!20917, !20886, !20918}
!20918 = !DILocation(line: 1199, column: 2, scope: !20877)
!20919 = !DILocation(line: 1201, column: 2, scope: !20855)
!20920 = !DILocation(line: 1202, column: 1, scope: !20855)
!20921 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_vlan_add", scope: !3, file: !3, line: 1124, type: !20922, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20922 = !DISubroutineType(types: !20923)
!20923 = !{!7, !10406, !10389, !1192, !696, !696, !2625}
!20924 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !20921, file: !3, line: 1124, type: !10406)
!20925 = !DILocation(line: 1124, column: 53, scope: !20921)
!20926 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !20921, file: !3, line: 1125, type: !10389)
!20927 = !DILocation(line: 1125, column: 39, scope: !20921)
!20928 = !DILocalVariable(name: "vid", arg: 3, scope: !20921, file: !3, line: 1126, type: !1192)
!20929 = !DILocation(line: 1126, column: 14, scope: !20921)
!20930 = !DILocalVariable(name: "is_untagged", arg: 4, scope: !20921, file: !3, line: 1126, type: !696)
!20931 = !DILocation(line: 1126, column: 24, scope: !20921)
!20932 = !DILocalVariable(name: "is_pvid", arg: 5, scope: !20921, file: !3, line: 1126, type: !696)
!20933 = !DILocation(line: 1126, column: 42, scope: !20921)
!20934 = !DILocalVariable(name: "extack", arg: 6, scope: !20921, file: !3, line: 1127, type: !2625)
!20935 = !DILocation(line: 1127, column: 34, scope: !20921)
!20936 = !DILocalVariable(name: "pvid", scope: !20921, file: !3, line: 1129, type: !1192)
!20937 = !DILocation(line: 1129, column: 6, scope: !20921)
!20938 = !DILocation(line: 1129, column: 42, scope: !20921)
!20939 = !DILocation(line: 1129, column: 57, scope: !20921)
!20940 = !DILocation(line: 1129, column: 62, scope: !20921)
!20941 = !DILocation(line: 1129, column: 13, scope: !20921)
!20942 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !20921, file: !3, line: 1130, type: !11091)
!20943 = !DILocation(line: 1130, column: 29, scope: !20921)
!20944 = !DILocalVariable(name: "old_pvid", scope: !20921, file: !3, line: 1131, type: !1192)
!20945 = !DILocation(line: 1131, column: 6, scope: !20921)
!20946 = !DILocation(line: 1131, column: 17, scope: !20921)
!20947 = !DILocation(line: 1131, column: 32, scope: !20921)
!20948 = !DILocalVariable(name: "err", scope: !20921, file: !3, line: 1132, type: !7)
!20949 = !DILocation(line: 1132, column: 6, scope: !20921)
!20950 = !DILocation(line: 1138, column: 54, scope: !20921)
!20951 = !DILocation(line: 1138, column: 69, scope: !20921)
!20952 = !DILocation(line: 1138, column: 23, scope: !20921)
!20953 = !DILocation(line: 1138, column: 21, scope: !20921)
!20954 = !DILocation(line: 1139, column: 6, scope: !20955)
!20955 = distinct !DILexicalBlock(scope: !20921, file: !3, line: 1139, column: 6)
!20956 = !DILocation(line: 1139, column: 25, scope: !20955)
!20957 = !DILocation(line: 1140, column: 6, scope: !20955)
!20958 = !DILocation(line: 1140, column: 26, scope: !20955)
!20959 = !DILocation(line: 1140, column: 41, scope: !20955)
!20960 = !DILocation(line: 1140, column: 38, scope: !20955)
!20961 = !DILocation(line: 1139, column: 6, scope: !20921)
!20962 = !DILocation(line: 1141, column: 3, scope: !20955)
!20963 = !DILocation(line: 1143, column: 7, scope: !20964)
!20964 = distinct !DILexicalBlock(scope: !20921, file: !3, line: 1143, column: 6)
!20965 = !DILocation(line: 1143, column: 6, scope: !20921)
!20966 = !DILocation(line: 1144, column: 50, scope: !20967)
!20967 = distinct !DILexicalBlock(scope: !20964, file: !3, line: 1143, column: 27)
!20968 = !DILocation(line: 1145, column: 15, scope: !20967)
!20969 = !DILocation(line: 1144, column: 24, scope: !20967)
!20970 = !DILocation(line: 1144, column: 22, scope: !20967)
!20971 = !DILocation(line: 1146, column: 14, scope: !20972)
!20972 = distinct !DILexicalBlock(scope: !20967, file: !3, line: 1146, column: 7)
!20973 = !DILocation(line: 1146, column: 7, scope: !20972)
!20974 = !DILocation(line: 1146, column: 7, scope: !20967)
!20975 = !DILocation(line: 1147, column: 19, scope: !20972)
!20976 = !DILocation(line: 1147, column: 11, scope: !20972)
!20977 = !DILocation(line: 1147, column: 4, scope: !20972)
!20978 = !DILocation(line: 1148, column: 2, scope: !20967)
!20979 = !DILocation(line: 1150, column: 31, scope: !20921)
!20980 = !DILocation(line: 1150, column: 46, scope: !20921)
!20981 = !DILocation(line: 1150, column: 51, scope: !20921)
!20982 = !DILocation(line: 1151, column: 10, scope: !20921)
!20983 = !DILocation(line: 1150, column: 8, scope: !20921)
!20984 = !DILocation(line: 1150, column: 6, scope: !20921)
!20985 = !DILocation(line: 1152, column: 6, scope: !20986)
!20986 = distinct !DILexicalBlock(scope: !20921, file: !3, line: 1152, column: 6)
!20987 = !DILocation(line: 1152, column: 6, scope: !20921)
!20988 = !DILocation(line: 1153, column: 3, scope: !20986)
!20989 = !DILocation(line: 1155, column: 31, scope: !20921)
!20990 = !DILocation(line: 1155, column: 46, scope: !20921)
!20991 = !DILocation(line: 1155, column: 8, scope: !20921)
!20992 = !DILocation(line: 1155, column: 6, scope: !20921)
!20993 = !DILocation(line: 1156, column: 6, scope: !20994)
!20994 = distinct !DILexicalBlock(scope: !20921, file: !3, line: 1156, column: 6)
!20995 = !DILocation(line: 1156, column: 6, scope: !20921)
!20996 = !DILocation(line: 1157, column: 3, scope: !20994)
!20997 = !DILocation(line: 1159, column: 39, scope: !20921)
!20998 = !DILocation(line: 1159, column: 59, scope: !20921)
!20999 = !DILocation(line: 1160, column: 11, scope: !20921)
!21000 = !DILocation(line: 1159, column: 8, scope: !20921)
!21001 = !DILocation(line: 1159, column: 6, scope: !20921)
!21002 = !DILocation(line: 1161, column: 6, scope: !21003)
!21003 = distinct !DILexicalBlock(scope: !20921, file: !3, line: 1161, column: 6)
!21004 = !DILocation(line: 1161, column: 6, scope: !20921)
!21005 = !DILocation(line: 1162, column: 3, scope: !21003)
!21006 = !DILocation(line: 1164, column: 2, scope: !20921)
!21007 = !DILabel(scope: !20921, name: "err_port_vlan_bridge_join", file: !3, line: 1166)
!21008 = !DILocation(line: 1166, column: 1, scope: !20921)
!21009 = !DILocation(line: 1167, column: 25, scope: !20921)
!21010 = !DILocation(line: 1167, column: 40, scope: !20921)
!21011 = !DILocation(line: 1167, column: 2, scope: !20921)
!21012 = !DILabel(scope: !20921, name: "err_port_pvid_set", file: !3, line: 1168)
!21013 = !DILocation(line: 1168, column: 1, scope: !20921)
!21014 = !DILocation(line: 1169, column: 25, scope: !20921)
!21015 = !DILocation(line: 1169, column: 40, scope: !20921)
!21016 = !DILocation(line: 1169, column: 45, scope: !20921)
!21017 = !DILocation(line: 1169, column: 2, scope: !20921)
!21018 = !DILabel(scope: !20921, name: "err_port_vlan_set", file: !3, line: 1170)
!21019 = !DILocation(line: 1170, column: 1, scope: !20921)
!21020 = !DILocation(line: 1171, column: 29, scope: !20921)
!21021 = !DILocation(line: 1171, column: 2, scope: !20921)
!21022 = !DILocation(line: 1172, column: 9, scope: !20921)
!21023 = !DILocation(line: 1172, column: 2, scope: !20921)
!21024 = !DILocation(line: 1173, column: 1, scope: !20921)
!21025 = distinct !DISubprogram(name: "mlxsw_sp_port_pvid_determine", scope: !3, file: !3, line: 1023, type: !21026, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21026 = !DISubroutineType(types: !21027)
!21027 = !{!1192, !19416, !1192, !696}
!21028 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21025, file: !3, line: 1023, type: !19416)
!21029 = !DILocation(line: 1023, column: 58, scope: !21025)
!21030 = !DILocalVariable(name: "vid", arg: 2, scope: !21025, file: !3, line: 1024, type: !1192)
!21031 = !DILocation(line: 1024, column: 13, scope: !21025)
!21032 = !DILocalVariable(name: "is_pvid", arg: 3, scope: !21025, file: !3, line: 1024, type: !696)
!21033 = !DILocation(line: 1024, column: 23, scope: !21025)
!21034 = !DILocation(line: 1026, column: 6, scope: !21035)
!21035 = distinct !DILexicalBlock(scope: !21025, file: !3, line: 1026, column: 6)
!21036 = !DILocation(line: 1026, column: 6, scope: !21025)
!21037 = !DILocation(line: 1027, column: 10, scope: !21035)
!21038 = !DILocation(line: 1027, column: 3, scope: !21035)
!21039 = !DILocation(line: 1028, column: 11, scope: !21040)
!21040 = distinct !DILexicalBlock(scope: !21035, file: !3, line: 1028, column: 11)
!21041 = !DILocation(line: 1028, column: 26, scope: !21040)
!21042 = !DILocation(line: 1028, column: 34, scope: !21040)
!21043 = !DILocation(line: 1028, column: 31, scope: !21040)
!21044 = !DILocation(line: 1028, column: 11, scope: !21035)
!21045 = !DILocation(line: 1029, column: 3, scope: !21040)
!21046 = !DILocation(line: 1031, column: 10, scope: !21040)
!21047 = !DILocation(line: 1031, column: 25, scope: !21040)
!21048 = !DILocation(line: 1031, column: 3, scope: !21040)
!21049 = !DILocation(line: 1032, column: 1, scope: !21025)
!21050 = distinct !DISubprogram(name: "__mlxsw_sp_mc_get", scope: !3, file: !3, line: 1519, type: !21051, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21051 = !DISubroutineType(types: !21052)
!21052 = !{!11215, !10370, !866, !1192}
!21053 = !DILocalVariable(name: "bridge_device", arg: 1, scope: !21050, file: !3, line: 1519, type: !10370)
!21054 = !DILocation(line: 1519, column: 64, scope: !21050)
!21055 = !DILocalVariable(name: "addr", arg: 2, scope: !21050, file: !3, line: 1520, type: !866)
!21056 = !DILocation(line: 1520, column: 26, scope: !21050)
!21057 = !DILocalVariable(name: "fid", arg: 3, scope: !21050, file: !3, line: 1521, type: !1192)
!21058 = !DILocation(line: 1521, column: 9, scope: !21050)
!21059 = !DILocalVariable(name: "mid", scope: !21050, file: !3, line: 1523, type: !11215)
!21060 = !DILocation(line: 1523, column: 23, scope: !21050)
!21061 = !DILocalVariable(name: "__mptr", scope: !21062, file: !3, line: 1525, type: !726)
!21062 = distinct !DILexicalBlock(scope: !21063, file: !3, line: 1525, column: 2)
!21063 = distinct !DILexicalBlock(scope: !21050, file: !3, line: 1525, column: 2)
!21064 = !DILocation(line: 1525, column: 2, scope: !21062)
!21065 = !DILocation(line: 1525, column: 2, scope: !21066)
!21066 = distinct !DILexicalBlock(scope: !21062, file: !3, line: 1525, column: 2)
!21067 = !DILocation(line: 1525, column: 2, scope: !21063)
!21068 = !DILocation(line: 1525, column: 2, scope: !21069)
!21069 = distinct !DILexicalBlock(scope: !21063, file: !3, line: 1525, column: 2)
!21070 = !DILocation(line: 1526, column: 24, scope: !21071)
!21071 = distinct !DILexicalBlock(scope: !21072, file: !3, line: 1526, column: 7)
!21072 = distinct !DILexicalBlock(scope: !21069, file: !3, line: 1525, column: 60)
!21073 = !DILocation(line: 1526, column: 29, scope: !21071)
!21074 = !DILocation(line: 1526, column: 35, scope: !21071)
!21075 = !DILocation(line: 1526, column: 7, scope: !21071)
!21076 = !DILocation(line: 1526, column: 41, scope: !21071)
!21077 = !DILocation(line: 1526, column: 44, scope: !21071)
!21078 = !DILocation(line: 1526, column: 49, scope: !21071)
!21079 = !DILocation(line: 1526, column: 56, scope: !21071)
!21080 = !DILocation(line: 1526, column: 53, scope: !21071)
!21081 = !DILocation(line: 1526, column: 7, scope: !21072)
!21082 = !DILocation(line: 1527, column: 11, scope: !21071)
!21083 = !DILocation(line: 1527, column: 4, scope: !21071)
!21084 = !DILocation(line: 1528, column: 2, scope: !21072)
!21085 = !DILocalVariable(name: "__mptr", scope: !21086, file: !3, line: 1525, type: !726)
!21086 = distinct !DILexicalBlock(scope: !21069, file: !3, line: 1525, column: 2)
!21087 = !DILocation(line: 1525, column: 2, scope: !21086)
!21088 = !DILocation(line: 1525, column: 2, scope: !21089)
!21089 = distinct !DILexicalBlock(scope: !21086, file: !3, line: 1525, column: 2)
!21090 = distinct !{!21090, !21067, !21091}
!21091 = !DILocation(line: 1528, column: 2, scope: !21063)
!21092 = !DILocation(line: 1529, column: 2, scope: !21050)
!21093 = !DILocation(line: 1530, column: 1, scope: !21050)
!21094 = distinct !DISubprogram(name: "__mlxsw_sp_mc_alloc", scope: !3, file: !3, line: 1628, type: !21095, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21095 = !DISubroutineType(types: !21096)
!21096 = !{!11215, !10421, !10370, !866, !1192}
!21097 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21094, file: !3, line: 1628, type: !10421)
!21098 = !DILocation(line: 1628, column: 52, scope: !21094)
!21099 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !21094, file: !3, line: 1629, type: !10370)
!21100 = !DILocation(line: 1629, column: 38, scope: !21094)
!21101 = !DILocalVariable(name: "addr", arg: 3, scope: !21094, file: !3, line: 1630, type: !866)
!21102 = !DILocation(line: 1630, column: 28, scope: !21094)
!21103 = !DILocalVariable(name: "fid", arg: 4, scope: !21094, file: !3, line: 1631, type: !1192)
!21104 = !DILocation(line: 1631, column: 11, scope: !21094)
!21105 = !DILocalVariable(name: "mid", scope: !21094, file: !3, line: 1633, type: !11215)
!21106 = !DILocation(line: 1633, column: 23, scope: !21094)
!21107 = !DILocalVariable(name: "alloc_size", scope: !21094, file: !3, line: 1634, type: !750)
!21108 = !DILocation(line: 1634, column: 9, scope: !21094)
!21109 = !DILocation(line: 1636, column: 8, scope: !21094)
!21110 = !DILocation(line: 1636, column: 6, scope: !21094)
!21111 = !DILocation(line: 1637, column: 7, scope: !21112)
!21112 = distinct !DILexicalBlock(scope: !21094, file: !3, line: 1637, column: 6)
!21113 = !DILocation(line: 1637, column: 6, scope: !21094)
!21114 = !DILocation(line: 1638, column: 3, scope: !21112)
!21115 = !DILocation(line: 1641, column: 8, scope: !21094)
!21116 = !DILocation(line: 1640, column: 37, scope: !21094)
!21117 = !DILocation(line: 1640, column: 13, scope: !21094)
!21118 = !DILocation(line: 1643, column: 30, scope: !21094)
!21119 = !DILocation(line: 1643, column: 22, scope: !21094)
!21120 = !DILocation(line: 1643, column: 2, scope: !21094)
!21121 = !DILocation(line: 1643, column: 7, scope: !21094)
!21122 = !DILocation(line: 1643, column: 20, scope: !21094)
!21123 = !DILocation(line: 1644, column: 7, scope: !21124)
!21124 = distinct !DILexicalBlock(scope: !21094, file: !3, line: 1644, column: 6)
!21125 = !DILocation(line: 1644, column: 12, scope: !21124)
!21126 = !DILocation(line: 1644, column: 6, scope: !21094)
!21127 = !DILocation(line: 1645, column: 3, scope: !21124)
!21128 = !DILocation(line: 1647, column: 18, scope: !21094)
!21129 = !DILocation(line: 1647, column: 23, scope: !21094)
!21130 = !DILocation(line: 1647, column: 29, scope: !21094)
!21131 = !DILocation(line: 1647, column: 2, scope: !21094)
!21132 = !DILocation(line: 1648, column: 13, scope: !21094)
!21133 = !DILocation(line: 1648, column: 2, scope: !21094)
!21134 = !DILocation(line: 1648, column: 7, scope: !21094)
!21135 = !DILocation(line: 1648, column: 11, scope: !21094)
!21136 = !DILocation(line: 1649, column: 2, scope: !21094)
!21137 = !DILocation(line: 1649, column: 7, scope: !21094)
!21138 = !DILocation(line: 1649, column: 13, scope: !21094)
!21139 = !DILocation(line: 1651, column: 7, scope: !21140)
!21140 = distinct !DILexicalBlock(scope: !21094, file: !3, line: 1651, column: 6)
!21141 = !DILocation(line: 1651, column: 22, scope: !21140)
!21142 = !DILocation(line: 1651, column: 6, scope: !21094)
!21143 = !DILocation(line: 1652, column: 3, scope: !21140)
!21144 = !DILocation(line: 1654, column: 35, scope: !21145)
!21145 = distinct !DILexicalBlock(scope: !21094, file: !3, line: 1654, column: 6)
!21146 = !DILocation(line: 1654, column: 45, scope: !21145)
!21147 = !DILocation(line: 1654, column: 50, scope: !21145)
!21148 = !DILocation(line: 1654, column: 7, scope: !21145)
!21149 = !DILocation(line: 1654, column: 6, scope: !21094)
!21150 = !DILocation(line: 1655, column: 3, scope: !21145)
!21151 = !DILocation(line: 1654, column: 63, scope: !21145)
!21152 = !DILabel(scope: !21094, name: "out", file: !3, line: 1657)
!21153 = !DILocation(line: 1657, column: 1, scope: !21094)
!21154 = !DILocation(line: 1658, column: 17, scope: !21094)
!21155 = !DILocation(line: 1658, column: 22, scope: !21094)
!21156 = !DILocation(line: 1658, column: 29, scope: !21094)
!21157 = !DILocation(line: 1658, column: 44, scope: !21094)
!21158 = !DILocation(line: 1658, column: 2, scope: !21094)
!21159 = !DILocation(line: 1659, column: 9, scope: !21094)
!21160 = !DILocation(line: 1659, column: 2, scope: !21094)
!21161 = !DILabel(scope: !21094, name: "err_write_mdb_entry", file: !3, line: 1661)
!21162 = !DILocation(line: 1661, column: 1, scope: !21094)
!21163 = !DILocation(line: 1662, column: 8, scope: !21094)
!21164 = !DILocation(line: 1662, column: 13, scope: !21094)
!21165 = !DILocation(line: 1662, column: 2, scope: !21094)
!21166 = !DILabel(scope: !21094, name: "err_ports_in_mid_alloc", file: !3, line: 1663)
!21167 = !DILocation(line: 1663, column: 1, scope: !21094)
!21168 = !DILocation(line: 1664, column: 8, scope: !21094)
!21169 = !DILocation(line: 1664, column: 2, scope: !21094)
!21170 = !DILocation(line: 1665, column: 2, scope: !21094)
!21171 = !DILocation(line: 1666, column: 1, scope: !21094)
!21172 = distinct !DISubprogram(name: "list_add_tail", scope: !11724, file: !11724, line: 98, type: !13195, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21173 = !DILocalVariable(name: "new", arg: 1, scope: !21172, file: !11724, line: 98, type: !448)
!21174 = !DILocation(line: 98, column: 52, scope: !21172)
!21175 = !DILocalVariable(name: "head", arg: 2, scope: !21172, file: !11724, line: 98, type: !448)
!21176 = !DILocation(line: 98, column: 75, scope: !21172)
!21177 = !DILocation(line: 100, column: 13, scope: !21172)
!21178 = !DILocation(line: 100, column: 18, scope: !21172)
!21179 = !DILocation(line: 100, column: 24, scope: !21172)
!21180 = !DILocation(line: 100, column: 30, scope: !21172)
!21181 = !DILocation(line: 100, column: 2, scope: !21172)
!21182 = !DILocation(line: 101, column: 1, scope: !21172)
!21183 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_vlans_del", scope: !3, file: !3, line: 3340, type: !20231, scopeLine: 3343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21184 = !DILocalVariable(name: "vxlan_dev", arg: 1, scope: !21183, file: !3, line: 3340, type: !451)
!21185 = !DILocation(line: 3340, column: 55, scope: !21183)
!21186 = !DILocalVariable(name: "port_obj_info", arg: 2, scope: !21183, file: !3, line: 3342, type: !20141)
!21187 = !DILocation(line: 3342, column: 8, scope: !21183)
!21188 = !DILocalVariable(name: "vlan", scope: !21183, file: !3, line: 3344, type: !11289)
!21189 = !DILocation(line: 3344, column: 34, scope: !21183)
!21190 = !DILocalVariable(name: "__mptr", scope: !21191, file: !3, line: 3345, type: !726)
!21191 = distinct !DILexicalBlock(scope: !21183, file: !3, line: 3345, column: 3)
!21192 = !DILocation(line: 3345, column: 3, scope: !21191)
!21193 = !DILocation(line: 3345, column: 3, scope: !21194)
!21194 = distinct !DILexicalBlock(scope: !21191, file: !3, line: 3345, column: 3)
!21195 = !DILocalVariable(name: "bridge_device", scope: !21183, file: !3, line: 3346, type: !10370)
!21196 = !DILocation(line: 3346, column: 33, scope: !21183)
!21197 = !DILocalVariable(name: "mlxsw_sp", scope: !21183, file: !3, line: 3347, type: !10421)
!21198 = !DILocation(line: 3347, column: 19, scope: !21183)
!21199 = !DILocalVariable(name: "br_dev", scope: !21183, file: !3, line: 3348, type: !451)
!21200 = !DILocation(line: 3348, column: 21, scope: !21183)
!21201 = !DILocalVariable(name: "vid", scope: !21183, file: !3, line: 3349, type: !1192)
!21202 = !DILocation(line: 3349, column: 6, scope: !21183)
!21203 = !DILocation(line: 3351, column: 39, scope: !21183)
!21204 = !DILocation(line: 3351, column: 11, scope: !21183)
!21205 = !DILocation(line: 3351, column: 9, scope: !21183)
!21206 = !DILocation(line: 3352, column: 7, scope: !21207)
!21207 = distinct !DILexicalBlock(scope: !21183, file: !3, line: 3352, column: 6)
!21208 = !DILocation(line: 3352, column: 6, scope: !21183)
!21209 = !DILocation(line: 3353, column: 3, scope: !21207)
!21210 = !DILocation(line: 3355, column: 32, scope: !21183)
!21211 = !DILocation(line: 3355, column: 13, scope: !21183)
!21212 = !DILocation(line: 3355, column: 11, scope: !21183)
!21213 = !DILocation(line: 3356, column: 7, scope: !21214)
!21214 = distinct !DILexicalBlock(scope: !21183, file: !3, line: 3356, column: 6)
!21215 = !DILocation(line: 3356, column: 6, scope: !21183)
!21216 = !DILocation(line: 3357, column: 3, scope: !21214)
!21217 = !DILocation(line: 3359, column: 2, scope: !21183)
!21218 = !DILocation(line: 3359, column: 17, scope: !21183)
!21219 = !DILocation(line: 3359, column: 25, scope: !21183)
!21220 = !DILocation(line: 3361, column: 46, scope: !21183)
!21221 = !DILocation(line: 3361, column: 56, scope: !21183)
!21222 = !DILocation(line: 3361, column: 64, scope: !21183)
!21223 = !DILocation(line: 3361, column: 18, scope: !21183)
!21224 = !DILocation(line: 3361, column: 16, scope: !21183)
!21225 = !DILocation(line: 3362, column: 7, scope: !21226)
!21226 = distinct !DILexicalBlock(scope: !21183, file: !3, line: 3362, column: 6)
!21227 = !DILocation(line: 3362, column: 6, scope: !21183)
!21228 = !DILocation(line: 3363, column: 3, scope: !21226)
!21229 = !DILocation(line: 3365, column: 7, scope: !21230)
!21230 = distinct !DILexicalBlock(scope: !21183, file: !3, line: 3365, column: 6)
!21231 = !DILocation(line: 3365, column: 22, scope: !21230)
!21232 = !DILocation(line: 3365, column: 6, scope: !21183)
!21233 = !DILocation(line: 3366, column: 3, scope: !21230)
!21234 = !DILocation(line: 3368, column: 13, scope: !21235)
!21235 = distinct !DILexicalBlock(scope: !21183, file: !3, line: 3368, column: 2)
!21236 = !DILocation(line: 3368, column: 19, scope: !21235)
!21237 = !DILocation(line: 3368, column: 11, scope: !21235)
!21238 = !DILocation(line: 3368, column: 7, scope: !21235)
!21239 = !DILocation(line: 3368, column: 30, scope: !21240)
!21240 = distinct !DILexicalBlock(scope: !21235, file: !3, line: 3368, column: 2)
!21241 = !DILocation(line: 3368, column: 37, scope: !21240)
!21242 = !DILocation(line: 3368, column: 43, scope: !21240)
!21243 = !DILocation(line: 3368, column: 34, scope: !21240)
!21244 = !DILocation(line: 3368, column: 2, scope: !21235)
!21245 = !DILocation(line: 3369, column: 37, scope: !21240)
!21246 = !DILocation(line: 3369, column: 47, scope: !21240)
!21247 = !DILocation(line: 3370, column: 9, scope: !21240)
!21248 = !DILocation(line: 3370, column: 20, scope: !21240)
!21249 = !DILocation(line: 3369, column: 3, scope: !21240)
!21250 = !DILocation(line: 3368, column: 55, scope: !21240)
!21251 = !DILocation(line: 3368, column: 2, scope: !21240)
!21252 = distinct !{!21252, !21244, !21253}
!21253 = !DILocation(line: 3370, column: 23, scope: !21235)
!21254 = !DILocation(line: 3371, column: 1, scope: !21183)
!21255 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_vxlan_vlan_del", scope: !3, file: !3, line: 3263, type: !21256, scopeLine: 3266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21256 = !DISubroutineType(types: !21257)
!21257 = !{null, !10421, !10370, !3015, !1192}
!21258 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21255, file: !3, line: 3263, type: !10421)
!21259 = !DILocation(line: 3263, column: 52, scope: !21255)
!21260 = !DILocalVariable(name: "bridge_device", arg: 2, scope: !21255, file: !3, line: 3264, type: !10370)
!21261 = !DILocation(line: 3264, column: 38, scope: !21255)
!21262 = !DILocalVariable(name: "vxlan_dev", arg: 3, scope: !21255, file: !3, line: 3265, type: !3015)
!21263 = !DILocation(line: 3265, column: 32, scope: !21255)
!21264 = !DILocalVariable(name: "vid", arg: 4, scope: !21255, file: !3, line: 3265, type: !1192)
!21265 = !DILocation(line: 3265, column: 47, scope: !21255)
!21266 = !DILocalVariable(name: "vxlan", scope: !21255, file: !3, line: 3267, type: !12565)
!21267 = !DILocation(line: 3267, column: 20, scope: !21255)
!21268 = !DILocation(line: 3267, column: 40, scope: !21255)
!21269 = !DILocation(line: 3267, column: 28, scope: !21255)
!21270 = !DILocalVariable(name: "vni", scope: !21255, file: !3, line: 3268, type: !622)
!21271 = !DILocation(line: 3268, column: 9, scope: !21255)
!21272 = !DILocation(line: 3268, column: 15, scope: !21255)
!21273 = !DILocation(line: 3268, column: 22, scope: !21255)
!21274 = !DILocation(line: 3268, column: 26, scope: !21255)
!21275 = !DILocalVariable(name: "fid", scope: !21255, file: !3, line: 3269, type: !11097)
!21276 = !DILocation(line: 3269, column: 23, scope: !21255)
!21277 = !DILocation(line: 3271, column: 21, scope: !21278)
!21278 = distinct !DILexicalBlock(scope: !21255, file: !3, line: 3271, column: 6)
!21279 = !DILocation(line: 3271, column: 7, scope: !21278)
!21280 = !DILocation(line: 3271, column: 6, scope: !21255)
!21281 = !DILocation(line: 3272, column: 3, scope: !21278)
!21282 = !DILocation(line: 3274, column: 35, scope: !21255)
!21283 = !DILocation(line: 3274, column: 45, scope: !21255)
!21284 = !DILocation(line: 3274, column: 8, scope: !21255)
!21285 = !DILocation(line: 3274, column: 6, scope: !21255)
!21286 = !DILocation(line: 3275, column: 7, scope: !21287)
!21287 = distinct !DILexicalBlock(scope: !21255, file: !3, line: 3275, column: 6)
!21288 = !DILocation(line: 3275, column: 6, scope: !21255)
!21289 = !DILocation(line: 3276, column: 3, scope: !21287)
!21290 = !DILocation(line: 3279, column: 29, scope: !21291)
!21291 = distinct !DILexicalBlock(scope: !21255, file: !3, line: 3279, column: 6)
!21292 = !DILocation(line: 3279, column: 6, scope: !21291)
!21293 = !DILocation(line: 3279, column: 37, scope: !21291)
!21294 = !DILocation(line: 3279, column: 34, scope: !21291)
!21295 = !DILocation(line: 3279, column: 6, scope: !21255)
!21296 = !DILocation(line: 3280, column: 3, scope: !21291)
!21297 = !DILocation(line: 3282, column: 30, scope: !21255)
!21298 = !DILocation(line: 3282, column: 40, scope: !21255)
!21299 = !DILocation(line: 3282, column: 2, scope: !21255)
!21300 = !DILabel(scope: !21255, name: "out", file: !3, line: 3284)
!21301 = !DILocation(line: 3284, column: 1, scope: !21255)
!21302 = !DILocation(line: 3285, column: 19, scope: !21255)
!21303 = !DILocation(line: 3285, column: 2, scope: !21255)
!21304 = !DILocation(line: 3286, column: 1, scope: !21255)
!21305 = distinct !DISubprogram(name: "mlxsw_sp_port_vlans_del", scope: !3, file: !3, line: 1835, type: !21306, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21306 = !DISubroutineType(types: !21307)
!21307 = !{!7, !10406, !20185}
!21308 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21305, file: !3, line: 1835, type: !10406)
!21309 = !DILocation(line: 1835, column: 58, scope: !21305)
!21310 = !DILocalVariable(name: "vlan", arg: 2, scope: !21305, file: !3, line: 1836, type: !20185)
!21311 = !DILocation(line: 1836, column: 46, scope: !21305)
!21312 = !DILocalVariable(name: "mlxsw_sp", scope: !21305, file: !3, line: 1838, type: !10421)
!21313 = !DILocation(line: 1838, column: 19, scope: !21305)
!21314 = !DILocation(line: 1838, column: 30, scope: !21305)
!21315 = !DILocation(line: 1838, column: 45, scope: !21305)
!21316 = !DILocalVariable(name: "orig_dev", scope: !21305, file: !3, line: 1839, type: !451)
!21317 = !DILocation(line: 1839, column: 21, scope: !21305)
!21318 = !DILocation(line: 1839, column: 32, scope: !21305)
!21319 = !DILocation(line: 1839, column: 38, scope: !21305)
!21320 = !DILocation(line: 1839, column: 42, scope: !21305)
!21321 = !DILocalVariable(name: "bridge_port", scope: !21305, file: !3, line: 1840, type: !10389)
!21322 = !DILocation(line: 1840, column: 31, scope: !21305)
!21323 = !DILocalVariable(name: "vid", scope: !21305, file: !3, line: 1841, type: !1192)
!21324 = !DILocation(line: 1841, column: 6, scope: !21305)
!21325 = !DILocation(line: 1843, column: 29, scope: !21326)
!21326 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 1843, column: 6)
!21327 = !DILocation(line: 1843, column: 6, scope: !21326)
!21328 = !DILocation(line: 1843, column: 6, scope: !21305)
!21329 = !DILocation(line: 1844, column: 3, scope: !21326)
!21330 = !DILocation(line: 1846, column: 42, scope: !21305)
!21331 = !DILocation(line: 1846, column: 52, scope: !21305)
!21332 = !DILocation(line: 1846, column: 60, scope: !21305)
!21333 = !DILocation(line: 1846, column: 16, scope: !21305)
!21334 = !DILocation(line: 1846, column: 14, scope: !21305)
!21335 = !DILocalVariable(name: "__ret_warn_on", scope: !21336, file: !3, line: 1847, type: !7)
!21336 = distinct !DILexicalBlock(scope: !21337, file: !3, line: 1847, column: 6)
!21337 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 1847, column: 6)
!21338 = !DILocation(line: 1847, column: 6, scope: !21336)
!21339 = !DILocation(line: 1847, column: 6, scope: !21340)
!21340 = distinct !DILexicalBlock(scope: !21336, file: !3, line: 1847, column: 6)
!21341 = !DILocation(line: 1847, column: 6, scope: !21342)
!21342 = distinct !DILexicalBlock(scope: !21340, file: !3, line: 1847, column: 6)
!21343 = !DILocation(line: 1847, column: 6, scope: !21344)
!21344 = distinct !DILexicalBlock(scope: !21342, file: !3, line: 1847, column: 6)
!21345 = !DILocation(line: 1847, column: 6, scope: !21346)
!21346 = distinct !DILexicalBlock(scope: !21342, file: !3, line: 1847, column: 6)
!21347 = !{i32 -2134726004, i32 -2134725975, i32 -2134725929, i32 -2134725871, i32 -2134725817, i32 -2134725763, i32 -2134725708, i32 -2134725677}
!21348 = !DILocation(line: 1847, column: 6, scope: !21349)
!21349 = distinct !DILexicalBlock(scope: !21342, file: !3, line: 1847, column: 6)
!21350 = !{i32 -2134725238, i32 -2134725231, i32 -2134725179, i32 -2134725148, i32 -2134725118}
!21351 = !DILocation(line: 1847, column: 6, scope: !21352)
!21352 = distinct !DILexicalBlock(scope: !21342, file: !3, line: 1847, column: 6)
!21353 = !DILocation(line: 1847, column: 6, scope: !21337)
!21354 = !DILocation(line: 1847, column: 6, scope: !21305)
!21355 = !DILocation(line: 1848, column: 3, scope: !21337)
!21356 = !DILocation(line: 1850, column: 7, scope: !21357)
!21357 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 1850, column: 6)
!21358 = !DILocation(line: 1850, column: 20, scope: !21357)
!21359 = !DILocation(line: 1850, column: 35, scope: !21357)
!21360 = !DILocation(line: 1850, column: 6, scope: !21305)
!21361 = !DILocation(line: 1851, column: 3, scope: !21357)
!21362 = !DILocation(line: 1853, column: 13, scope: !21363)
!21363 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 1853, column: 2)
!21364 = !DILocation(line: 1853, column: 19, scope: !21363)
!21365 = !DILocation(line: 1853, column: 11, scope: !21363)
!21366 = !DILocation(line: 1853, column: 7, scope: !21363)
!21367 = !DILocation(line: 1853, column: 30, scope: !21368)
!21368 = distinct !DILexicalBlock(scope: !21363, file: !3, line: 1853, column: 2)
!21369 = !DILocation(line: 1853, column: 37, scope: !21368)
!21370 = !DILocation(line: 1853, column: 43, scope: !21368)
!21371 = !DILocation(line: 1853, column: 34, scope: !21368)
!21372 = !DILocation(line: 1853, column: 2, scope: !21363)
!21373 = !DILocation(line: 1854, column: 33, scope: !21368)
!21374 = !DILocation(line: 1854, column: 48, scope: !21368)
!21375 = !DILocation(line: 1854, column: 61, scope: !21368)
!21376 = !DILocation(line: 1854, column: 3, scope: !21368)
!21377 = !DILocation(line: 1853, column: 55, scope: !21368)
!21378 = !DILocation(line: 1853, column: 2, scope: !21368)
!21379 = distinct !{!21379, !21372, !21380}
!21380 = !DILocation(line: 1854, column: 64, scope: !21363)
!21381 = !DILocation(line: 1856, column: 2, scope: !21305)
!21382 = !DILocation(line: 1857, column: 1, scope: !21305)
!21383 = distinct !DISubprogram(name: "mlxsw_sp_port_mdb_del", scope: !3, file: !3, line: 1881, type: !21384, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21384 = !DISubroutineType(types: !21385)
!21385 = !{!7, !10406, !20730}
!21386 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21383, file: !3, line: 1881, type: !10406)
!21387 = !DILocation(line: 1881, column: 56, scope: !21383)
!21388 = !DILocalVariable(name: "mdb", arg: 2, scope: !21383, file: !3, line: 1882, type: !20730)
!21389 = !DILocation(line: 1882, column: 43, scope: !21383)
!21390 = !DILocalVariable(name: "mlxsw_sp", scope: !21383, file: !3, line: 1884, type: !10421)
!21391 = !DILocation(line: 1884, column: 19, scope: !21383)
!21392 = !DILocation(line: 1884, column: 30, scope: !21383)
!21393 = !DILocation(line: 1884, column: 45, scope: !21383)
!21394 = !DILocalVariable(name: "orig_dev", scope: !21383, file: !3, line: 1885, type: !451)
!21395 = !DILocation(line: 1885, column: 21, scope: !21383)
!21396 = !DILocation(line: 1885, column: 32, scope: !21383)
!21397 = !DILocation(line: 1885, column: 37, scope: !21383)
!21398 = !DILocation(line: 1885, column: 41, scope: !21383)
!21399 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !21383, file: !3, line: 1886, type: !11091)
!21400 = !DILocation(line: 1886, column: 29, scope: !21383)
!21401 = !DILocalVariable(name: "bridge_device", scope: !21383, file: !3, line: 1887, type: !10370)
!21402 = !DILocation(line: 1887, column: 33, scope: !21383)
!21403 = !DILocalVariable(name: "dev", scope: !21383, file: !3, line: 1888, type: !451)
!21404 = !DILocation(line: 1888, column: 21, scope: !21383)
!21405 = !DILocation(line: 1888, column: 27, scope: !21383)
!21406 = !DILocation(line: 1888, column: 42, scope: !21383)
!21407 = !DILocalVariable(name: "bridge_port", scope: !21383, file: !3, line: 1889, type: !10389)
!21408 = !DILocation(line: 1889, column: 31, scope: !21383)
!21409 = !DILocalVariable(name: "mid", scope: !21383, file: !3, line: 1890, type: !11215)
!21410 = !DILocation(line: 1890, column: 23, scope: !21383)
!21411 = !DILocalVariable(name: "fid_index", scope: !21383, file: !3, line: 1891, type: !1192)
!21412 = !DILocation(line: 1891, column: 6, scope: !21383)
!21413 = !DILocation(line: 1893, column: 42, scope: !21383)
!21414 = !DILocation(line: 1893, column: 52, scope: !21383)
!21415 = !DILocation(line: 1893, column: 60, scope: !21383)
!21416 = !DILocation(line: 1893, column: 16, scope: !21383)
!21417 = !DILocation(line: 1893, column: 14, scope: !21383)
!21418 = !DILocation(line: 1894, column: 7, scope: !21419)
!21419 = distinct !DILexicalBlock(scope: !21383, file: !3, line: 1894, column: 6)
!21420 = !DILocation(line: 1894, column: 6, scope: !21383)
!21421 = !DILocation(line: 1895, column: 3, scope: !21419)
!21422 = !DILocation(line: 1897, column: 18, scope: !21383)
!21423 = !DILocation(line: 1897, column: 31, scope: !21383)
!21424 = !DILocation(line: 1897, column: 16, scope: !21383)
!21425 = !DILocation(line: 1898, column: 57, scope: !21383)
!21426 = !DILocation(line: 1899, column: 15, scope: !21383)
!21427 = !DILocation(line: 1900, column: 15, scope: !21383)
!21428 = !DILocation(line: 1900, column: 20, scope: !21383)
!21429 = !DILocation(line: 1898, column: 23, scope: !21383)
!21430 = !DILocation(line: 1898, column: 21, scope: !21383)
!21431 = !DILocation(line: 1901, column: 7, scope: !21432)
!21432 = distinct !DILexicalBlock(scope: !21383, file: !3, line: 1901, column: 6)
!21433 = !DILocation(line: 1901, column: 6, scope: !21383)
!21434 = !DILocation(line: 1902, column: 3, scope: !21432)
!21435 = !DILocation(line: 1904, column: 33, scope: !21383)
!21436 = !DILocation(line: 1904, column: 53, scope: !21383)
!21437 = !DILocation(line: 1904, column: 14, scope: !21383)
!21438 = !DILocation(line: 1904, column: 12, scope: !21383)
!21439 = !DILocation(line: 1906, column: 26, scope: !21383)
!21440 = !DILocation(line: 1906, column: 41, scope: !21383)
!21441 = !DILocation(line: 1906, column: 46, scope: !21383)
!21442 = !DILocation(line: 1906, column: 52, scope: !21383)
!21443 = !DILocation(line: 1906, column: 8, scope: !21383)
!21444 = !DILocation(line: 1906, column: 6, scope: !21383)
!21445 = !DILocation(line: 1907, column: 7, scope: !21446)
!21446 = distinct !DILexicalBlock(scope: !21383, file: !3, line: 1907, column: 6)
!21447 = !DILocation(line: 1907, column: 6, scope: !21383)
!21448 = !DILocation(line: 1908, column: 14, scope: !21449)
!21449 = distinct !DILexicalBlock(scope: !21446, file: !3, line: 1907, column: 12)
!21450 = !DILocation(line: 1908, column: 3, scope: !21449)
!21451 = !DILocation(line: 1909, column: 3, scope: !21449)
!21452 = !DILocation(line: 1912, column: 33, scope: !21383)
!21453 = !DILocation(line: 1912, column: 48, scope: !21383)
!21454 = !DILocation(line: 1912, column: 61, scope: !21383)
!21455 = !DILocation(line: 1912, column: 9, scope: !21383)
!21456 = !DILocation(line: 1912, column: 2, scope: !21383)
!21457 = !DILocation(line: 1913, column: 1, scope: !21383)
!21458 = distinct !DISubprogram(name: "mlxsw_sp_bridge_port_vlan_del", scope: !3, file: !3, line: 1819, type: !21459, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21459 = !DISubroutineType(types: !21460)
!21460 = !{null, !10406, !10389, !1192}
!21461 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21458, file: !3, line: 1819, type: !10406)
!21462 = !DILocation(line: 1819, column: 53, scope: !21458)
!21463 = !DILocalVariable(name: "bridge_port", arg: 2, scope: !21458, file: !3, line: 1820, type: !10389)
!21464 = !DILocation(line: 1820, column: 39, scope: !21458)
!21465 = !DILocalVariable(name: "vid", arg: 3, scope: !21458, file: !3, line: 1820, type: !1192)
!21466 = !DILocation(line: 1820, column: 56, scope: !21458)
!21467 = !DILocalVariable(name: "pvid", scope: !21458, file: !3, line: 1822, type: !1192)
!21468 = !DILocation(line: 1822, column: 6, scope: !21458)
!21469 = !DILocation(line: 1822, column: 13, scope: !21458)
!21470 = !DILocation(line: 1822, column: 28, scope: !21458)
!21471 = !DILocation(line: 1822, column: 36, scope: !21458)
!21472 = !DILocation(line: 1822, column: 33, scope: !21458)
!21473 = !DILocation(line: 1822, column: 46, scope: !21458)
!21474 = !DILocation(line: 1822, column: 61, scope: !21458)
!21475 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !21458, file: !3, line: 1823, type: !11091)
!21476 = !DILocation(line: 1823, column: 29, scope: !21458)
!21477 = !DILocation(line: 1825, column: 54, scope: !21458)
!21478 = !DILocation(line: 1825, column: 69, scope: !21458)
!21479 = !DILocation(line: 1825, column: 23, scope: !21458)
!21480 = !DILocation(line: 1825, column: 21, scope: !21458)
!21481 = !DILocalVariable(name: "__ret_warn_on", scope: !21482, file: !3, line: 1826, type: !7)
!21482 = distinct !DILexicalBlock(scope: !21483, file: !3, line: 1826, column: 6)
!21483 = distinct !DILexicalBlock(scope: !21458, file: !3, line: 1826, column: 6)
!21484 = !DILocation(line: 1826, column: 6, scope: !21482)
!21485 = !DILocation(line: 1826, column: 6, scope: !21486)
!21486 = distinct !DILexicalBlock(scope: !21482, file: !3, line: 1826, column: 6)
!21487 = !DILocation(line: 1826, column: 6, scope: !21488)
!21488 = distinct !DILexicalBlock(scope: !21486, file: !3, line: 1826, column: 6)
!21489 = !DILocation(line: 1826, column: 6, scope: !21490)
!21490 = distinct !DILexicalBlock(scope: !21488, file: !3, line: 1826, column: 6)
!21491 = !DILocation(line: 1826, column: 6, scope: !21492)
!21492 = distinct !DILexicalBlock(scope: !21488, file: !3, line: 1826, column: 6)
!21493 = !{i32 -2134727477, i32 -2134727448, i32 -2134727402, i32 -2134727344, i32 -2134727290, i32 -2134727236, i32 -2134727181, i32 -2134727150}
!21494 = !DILocation(line: 1826, column: 6, scope: !21495)
!21495 = distinct !DILexicalBlock(scope: !21488, file: !3, line: 1826, column: 6)
!21496 = !{i32 -2134726711, i32 -2134726704, i32 -2134726652, i32 -2134726621, i32 -2134726591}
!21497 = !DILocation(line: 1826, column: 6, scope: !21498)
!21498 = distinct !DILexicalBlock(scope: !21488, file: !3, line: 1826, column: 6)
!21499 = !DILocation(line: 1826, column: 6, scope: !21483)
!21500 = !DILocation(line: 1826, column: 6, scope: !21458)
!21501 = !DILocation(line: 1827, column: 3, scope: !21483)
!21502 = !DILocation(line: 1829, column: 34, scope: !21458)
!21503 = !DILocation(line: 1829, column: 2, scope: !21458)
!21504 = !DILocation(line: 1830, column: 25, scope: !21458)
!21505 = !DILocation(line: 1830, column: 40, scope: !21458)
!21506 = !DILocation(line: 1830, column: 2, scope: !21458)
!21507 = !DILocation(line: 1831, column: 25, scope: !21458)
!21508 = !DILocation(line: 1831, column: 40, scope: !21458)
!21509 = !DILocation(line: 1831, column: 45, scope: !21458)
!21510 = !DILocation(line: 1831, column: 2, scope: !21458)
!21511 = !DILocation(line: 1832, column: 29, scope: !21458)
!21512 = !DILocation(line: 1832, column: 2, scope: !21458)
!21513 = !DILocation(line: 1833, column: 1, scope: !21458)
!21514 = distinct !DISubprogram(name: "mlxsw_reg_sfn_pack", scope: !10048, file: !10048, line: 620, type: !21515, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21515 = !DISubroutineType(types: !21516)
!21516 = !{null, !733}
!21517 = !DILocalVariable(name: "payload", arg: 1, scope: !21514, file: !10048, line: 620, type: !733)
!21518 = !DILocation(line: 620, column: 45, scope: !21514)
!21519 = !DILocation(line: 622, column: 2, scope: !21514)
!21520 = !DILocation(line: 623, column: 25, scope: !21514)
!21521 = !DILocation(line: 623, column: 2, scope: !21514)
!21522 = !DILocation(line: 624, column: 24, scope: !21514)
!21523 = !DILocation(line: 624, column: 2, scope: !21514)
!21524 = !DILocation(line: 625, column: 28, scope: !21514)
!21525 = !DILocation(line: 625, column: 2, scope: !21514)
!21526 = !DILocation(line: 626, column: 1, scope: !21514)
!21527 = distinct !DISubprogram(name: "mlxsw_reg_sfn_num_rec_get", scope: !10048, file: !10048, line: 618, type: !13764, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21528 = !DILocalVariable(name: "buf", arg: 1, scope: !21527, file: !10048, line: 618, type: !453)
!21529 = !DILocation(line: 618, column: 1, scope: !21527)
!21530 = distinct !DISubprogram(name: "mlxsw_sp_fdb_notify_rec_process", scope: !3, file: !3, line: 2650, type: !21531, scopeLine: 2652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21531 = !DISubroutineType(types: !21532)
!21532 = !{null, !10421, !733, !7}
!21533 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21530, file: !3, line: 2650, type: !10421)
!21534 = !DILocation(line: 2650, column: 62, scope: !21530)
!21535 = !DILocalVariable(name: "sfn_pl", arg: 2, scope: !21530, file: !3, line: 2651, type: !733)
!21536 = !DILocation(line: 2651, column: 16, scope: !21530)
!21537 = !DILocalVariable(name: "rec_index", arg: 3, scope: !21530, file: !3, line: 2651, type: !7)
!21538 = !DILocation(line: 2651, column: 28, scope: !21530)
!21539 = !DILocation(line: 2653, column: 37, scope: !21530)
!21540 = !DILocation(line: 2653, column: 45, scope: !21530)
!21541 = !DILocation(line: 2653, column: 10, scope: !21530)
!21542 = !DILocation(line: 2653, column: 2, scope: !21530)
!21543 = !DILocation(line: 2655, column: 35, scope: !21544)
!21544 = distinct !DILexicalBlock(scope: !21530, file: !3, line: 2653, column: 57)
!21545 = !DILocation(line: 2655, column: 45, scope: !21544)
!21546 = !DILocation(line: 2656, column: 7, scope: !21544)
!21547 = !DILocation(line: 2655, column: 3, scope: !21544)
!21548 = !DILocation(line: 2657, column: 3, scope: !21544)
!21549 = !DILocation(line: 2659, column: 35, scope: !21544)
!21550 = !DILocation(line: 2659, column: 45, scope: !21544)
!21551 = !DILocation(line: 2660, column: 7, scope: !21544)
!21552 = !DILocation(line: 2659, column: 3, scope: !21544)
!21553 = !DILocation(line: 2661, column: 3, scope: !21544)
!21554 = !DILocation(line: 2663, column: 39, scope: !21544)
!21555 = !DILocation(line: 2663, column: 49, scope: !21544)
!21556 = !DILocation(line: 2664, column: 11, scope: !21544)
!21557 = !DILocation(line: 2663, column: 3, scope: !21544)
!21558 = !DILocation(line: 2665, column: 3, scope: !21544)
!21559 = !DILocation(line: 2667, column: 39, scope: !21544)
!21560 = !DILocation(line: 2667, column: 49, scope: !21544)
!21561 = !DILocation(line: 2668, column: 11, scope: !21544)
!21562 = !DILocation(line: 2667, column: 3, scope: !21544)
!21563 = !DILocation(line: 2669, column: 3, scope: !21544)
!21564 = !DILocation(line: 2671, column: 45, scope: !21544)
!21565 = !DILocation(line: 2671, column: 55, scope: !21544)
!21566 = !DILocation(line: 2672, column: 10, scope: !21544)
!21567 = !DILocation(line: 2671, column: 3, scope: !21544)
!21568 = !DILocation(line: 2673, column: 3, scope: !21544)
!21569 = !DILocation(line: 2675, column: 45, scope: !21544)
!21570 = !DILocation(line: 2675, column: 55, scope: !21544)
!21571 = !DILocation(line: 2676, column: 10, scope: !21544)
!21572 = !DILocation(line: 2675, column: 3, scope: !21544)
!21573 = !DILocation(line: 2677, column: 3, scope: !21544)
!21574 = !DILocation(line: 2679, column: 1, scope: !21530)
!21575 = distinct !DISubprogram(name: "mlxsw_reg_sfn_swid_set", scope: !10048, file: !10048, line: 602, type: !13537, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21576 = !DILocalVariable(name: "buf", arg: 1, scope: !21575, file: !10048, line: 602, type: !733)
!21577 = !DILocation(line: 602, column: 1, scope: !21575)
!21578 = !DILocalVariable(name: "val", arg: 2, scope: !21575, file: !10048, line: 602, type: !862)
!21579 = distinct !DISubprogram(name: "mlxsw_reg_sfn_end_set", scope: !10048, file: !10048, line: 608, type: !13537, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21580 = !DILocalVariable(name: "buf", arg: 1, scope: !21579, file: !10048, line: 608, type: !733)
!21581 = !DILocation(line: 608, column: 1, scope: !21579)
!21582 = !DILocalVariable(name: "val", arg: 2, scope: !21579, file: !10048, line: 608, type: !862)
!21583 = distinct !DISubprogram(name: "mlxsw_reg_sfn_num_rec_set", scope: !10048, file: !10048, line: 618, type: !13537, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21584 = !DILocalVariable(name: "buf", arg: 1, scope: !21583, file: !10048, line: 618, type: !733)
!21585 = !DILocation(line: 618, column: 1, scope: !21583)
!21586 = !DILocalVariable(name: "val", arg: 2, scope: !21583, file: !10048, line: 618, type: !862)
!21587 = distinct !DISubprogram(name: "mlxsw_reg_sfn_rec_type_get", scope: !10048, file: !10048, line: 654, type: !21588, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21588 = !DISubroutineType(types: !21589)
!21589 = !{!862, !453, !633}
!21590 = !DILocalVariable(name: "buf", arg: 1, scope: !21587, file: !10048, line: 654, type: !453)
!21591 = !DILocation(line: 654, column: 1, scope: !21587)
!21592 = !DILocalVariable(name: "index", arg: 2, scope: !21587, file: !10048, line: 654, type: !633)
!21593 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11473, file: !3, line: 2409, type: !10421)
!21594 = !DILocation(line: 2409, column: 62, scope: !11473)
!21595 = !DILocalVariable(name: "sfn_pl", arg: 2, scope: !11473, file: !3, line: 2410, type: !733)
!21596 = !DILocation(line: 2410, column: 16, scope: !11473)
!21597 = !DILocalVariable(name: "rec_index", arg: 3, scope: !11473, file: !3, line: 2410, type: !7)
!21598 = !DILocation(line: 2410, column: 28, scope: !11473)
!21599 = !DILocalVariable(name: "adding", arg: 4, scope: !11473, file: !3, line: 2411, type: !696)
!21600 = !DILocation(line: 2411, column: 15, scope: !11473)
!21601 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !11473, file: !3, line: 2413, type: !11091)
!21602 = !DILocation(line: 2413, column: 29, scope: !11473)
!21603 = !DILocalVariable(name: "bridge_device", scope: !11473, file: !3, line: 2414, type: !10370)
!21604 = !DILocation(line: 2414, column: 33, scope: !11473)
!21605 = !DILocalVariable(name: "bridge_port", scope: !11473, file: !3, line: 2415, type: !10389)
!21606 = !DILocation(line: 2415, column: 31, scope: !11473)
!21607 = !DILocalVariable(name: "mlxsw_sp_port", scope: !11473, file: !3, line: 2416, type: !10406)
!21608 = !DILocation(line: 2416, column: 24, scope: !11473)
!21609 = !DILocalVariable(name: "type", scope: !11473, file: !3, line: 2417, type: !10206)
!21610 = !DILocation(line: 2417, column: 31, scope: !11473)
!21611 = !DILocalVariable(name: "mac", scope: !11473, file: !3, line: 2418, type: !1823)
!21612 = !DILocation(line: 2418, column: 7, scope: !11473)
!21613 = !DILocalVariable(name: "local_port", scope: !11473, file: !3, line: 2419, type: !1551)
!21614 = !DILocation(line: 2419, column: 5, scope: !11473)
!21615 = !DILocalVariable(name: "vid", scope: !11473, file: !3, line: 2420, type: !1192)
!21616 = !DILocation(line: 2420, column: 6, scope: !11473)
!21617 = !DILocalVariable(name: "fid", scope: !11473, file: !3, line: 2420, type: !1192)
!21618 = !DILocation(line: 2420, column: 11, scope: !11473)
!21619 = !DILocalVariable(name: "do_notification", scope: !11473, file: !3, line: 2421, type: !696)
!21620 = !DILocation(line: 2421, column: 7, scope: !11473)
!21621 = !DILocalVariable(name: "err", scope: !11473, file: !3, line: 2422, type: !7)
!21622 = !DILocation(line: 2422, column: 6, scope: !11473)
!21623 = !DILocation(line: 2424, column: 27, scope: !11473)
!21624 = !DILocation(line: 2424, column: 35, scope: !11473)
!21625 = !DILocation(line: 2424, column: 46, scope: !11473)
!21626 = !DILocation(line: 2424, column: 2, scope: !11473)
!21627 = !DILocation(line: 2425, column: 18, scope: !11473)
!21628 = !DILocation(line: 2425, column: 28, scope: !11473)
!21629 = !DILocation(line: 2425, column: 34, scope: !11473)
!21630 = !DILocation(line: 2425, column: 16, scope: !11473)
!21631 = !DILocation(line: 2426, column: 7, scope: !21632)
!21632 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 2426, column: 6)
!21633 = !DILocation(line: 2426, column: 6, scope: !11473)
!21634 = !DILocation(line: 2427, column: 3, scope: !21635)
!21635 = distinct !DILexicalBlock(scope: !21632, file: !3, line: 2426, column: 22)
!21636 = !DILocation(line: 2427, column: 3, scope: !21637)
!21637 = distinct !DILexicalBlock(scope: !21638, file: !3, line: 2427, column: 3)
!21638 = distinct !DILexicalBlock(scope: !21635, file: !3, line: 2427, column: 3)
!21639 = !DILocation(line: 2427, column: 3, scope: !21638)
!21640 = !DILocation(line: 2428, column: 3, scope: !21635)
!21641 = !DILocation(line: 2431, column: 28, scope: !21642)
!21642 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 2431, column: 6)
!21643 = !DILocation(line: 2431, column: 38, scope: !21642)
!21644 = !DILocation(line: 2431, column: 6, scope: !21642)
!21645 = !DILocation(line: 2431, column: 6, scope: !11473)
!21646 = !DILocation(line: 2432, column: 3, scope: !21642)
!21647 = !DILocation(line: 2434, column: 54, scope: !11473)
!21648 = !DILocation(line: 2434, column: 69, scope: !11473)
!21649 = !DILocation(line: 2434, column: 23, scope: !11473)
!21650 = !DILocation(line: 2434, column: 21, scope: !11473)
!21651 = !DILocation(line: 2435, column: 7, scope: !21652)
!21652 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 2435, column: 6)
!21653 = !DILocation(line: 2435, column: 6, scope: !11473)
!21654 = !DILocation(line: 2436, column: 14, scope: !21655)
!21655 = distinct !DILexicalBlock(scope: !21652, file: !3, line: 2435, column: 27)
!21656 = !DILocation(line: 2436, column: 29, scope: !21655)
!21657 = !DILocation(line: 2436, column: 3, scope: !21655)
!21658 = !DILocation(line: 2437, column: 3, scope: !21655)
!21659 = !DILocation(line: 2440, column: 16, scope: !11473)
!21660 = !DILocation(line: 2440, column: 36, scope: !11473)
!21661 = !DILocation(line: 2440, column: 14, scope: !11473)
!21662 = !DILocation(line: 2441, column: 7, scope: !21663)
!21663 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 2441, column: 6)
!21664 = !DILocation(line: 2441, column: 6, scope: !11473)
!21665 = !DILocation(line: 2442, column: 14, scope: !21666)
!21666 = distinct !DILexicalBlock(scope: !21663, file: !3, line: 2441, column: 20)
!21667 = !DILocation(line: 2442, column: 29, scope: !21666)
!21668 = !DILocation(line: 2442, column: 3, scope: !21666)
!21669 = !DILocation(line: 2443, column: 3, scope: !21666)
!21670 = !DILocation(line: 2446, column: 18, scope: !11473)
!21671 = !DILocation(line: 2446, column: 31, scope: !11473)
!21672 = !DILocation(line: 2446, column: 16, scope: !11473)
!21673 = !DILocation(line: 2447, column: 8, scope: !11473)
!21674 = !DILocation(line: 2447, column: 23, scope: !11473)
!21675 = !DILocation(line: 2447, column: 38, scope: !11473)
!21676 = !DILocation(line: 2447, column: 58, scope: !11473)
!21677 = !DILocation(line: 2447, column: 6, scope: !11473)
!21678 = !DILocation(line: 2447, column: 2, scope: !11473)
!21679 = !DILabel(scope: !11473, name: "do_fdb_op", file: !3, line: 2449)
!21680 = !DILocation(line: 2449, column: 1, scope: !11473)
!21681 = !DILocation(line: 2450, column: 32, scope: !11473)
!21682 = !DILocation(line: 2450, column: 42, scope: !11473)
!21683 = !DILocation(line: 2450, column: 54, scope: !11473)
!21684 = !DILocation(line: 2450, column: 59, scope: !11473)
!21685 = !DILocation(line: 2451, column: 11, scope: !11473)
!21686 = !DILocation(line: 2450, column: 8, scope: !11473)
!21687 = !DILocation(line: 2450, column: 6, scope: !11473)
!21688 = !DILocation(line: 2452, column: 6, scope: !21689)
!21689 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 2452, column: 6)
!21690 = !DILocation(line: 2452, column: 6, scope: !11473)
!21691 = !DILocation(line: 2453, column: 3, scope: !21692)
!21692 = distinct !DILexicalBlock(scope: !21689, file: !3, line: 2452, column: 11)
!21693 = !DILocation(line: 2453, column: 3, scope: !21694)
!21694 = distinct !DILexicalBlock(scope: !21695, file: !3, line: 2453, column: 3)
!21695 = distinct !DILexicalBlock(scope: !21692, file: !3, line: 2453, column: 3)
!21696 = !DILocation(line: 2453, column: 3, scope: !21695)
!21697 = !DILocation(line: 2454, column: 3, scope: !21692)
!21698 = !DILocation(line: 2457, column: 7, scope: !21699)
!21699 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 2457, column: 6)
!21700 = !DILocation(line: 2457, column: 6, scope: !11473)
!21701 = !DILocation(line: 2458, column: 3, scope: !21699)
!21702 = !DILocation(line: 2459, column: 9, scope: !11473)
!21703 = !DILocation(line: 2459, column: 7, scope: !11473)
!21704 = !DILocation(line: 2460, column: 30, scope: !11473)
!21705 = !DILocation(line: 2460, column: 36, scope: !11473)
!21706 = !DILocation(line: 2460, column: 41, scope: !11473)
!21707 = !DILocation(line: 2460, column: 46, scope: !11473)
!21708 = !DILocation(line: 2460, column: 59, scope: !11473)
!21709 = !DILocation(line: 2460, column: 64, scope: !11473)
!21710 = !DILocation(line: 2460, column: 2, scope: !11473)
!21711 = !DILocation(line: 2462, column: 2, scope: !11473)
!21712 = !DILabel(scope: !11473, name: "just_remove", file: !3, line: 2464)
!21713 = !DILocation(line: 2464, column: 1, scope: !11473)
!21714 = !DILocation(line: 2465, column: 9, scope: !11473)
!21715 = !DILocation(line: 2466, column: 18, scope: !11473)
!21716 = !DILocation(line: 2467, column: 2, scope: !11473)
!21717 = !DILocation(line: 2468, column: 1, scope: !11473)
!21718 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11486, file: !3, line: 2470, type: !10421)
!21719 = !DILocation(line: 2470, column: 66, scope: !11486)
!21720 = !DILocalVariable(name: "sfn_pl", arg: 2, scope: !11486, file: !3, line: 2471, type: !733)
!21721 = !DILocation(line: 2471, column: 13, scope: !11486)
!21722 = !DILocalVariable(name: "rec_index", arg: 3, scope: !11486, file: !3, line: 2471, type: !7)
!21723 = !DILocation(line: 2471, column: 25, scope: !11486)
!21724 = !DILocalVariable(name: "adding", arg: 4, scope: !11486, file: !3, line: 2472, type: !696)
!21725 = !DILocation(line: 2472, column: 12, scope: !11486)
!21726 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !11486, file: !3, line: 2474, type: !11091)
!21727 = !DILocation(line: 2474, column: 29, scope: !11486)
!21728 = !DILocalVariable(name: "bridge_device", scope: !11486, file: !3, line: 2475, type: !10370)
!21729 = !DILocation(line: 2475, column: 33, scope: !11486)
!21730 = !DILocalVariable(name: "bridge_port", scope: !11486, file: !3, line: 2476, type: !10389)
!21731 = !DILocation(line: 2476, column: 31, scope: !11486)
!21732 = !DILocalVariable(name: "mlxsw_sp_port", scope: !11486, file: !3, line: 2477, type: !10406)
!21733 = !DILocation(line: 2477, column: 24, scope: !11486)
!21734 = !DILocalVariable(name: "type", scope: !11486, file: !3, line: 2478, type: !10206)
!21735 = !DILocation(line: 2478, column: 31, scope: !11486)
!21736 = !DILocalVariable(name: "mac", scope: !11486, file: !3, line: 2479, type: !1823)
!21737 = !DILocation(line: 2479, column: 7, scope: !11486)
!21738 = !DILocalVariable(name: "lag_vid", scope: !11486, file: !3, line: 2480, type: !1192)
!21739 = !DILocation(line: 2480, column: 6, scope: !11486)
!21740 = !DILocalVariable(name: "lag_id", scope: !11486, file: !3, line: 2481, type: !1192)
!21741 = !DILocation(line: 2481, column: 6, scope: !11486)
!21742 = !DILocalVariable(name: "vid", scope: !11486, file: !3, line: 2482, type: !1192)
!21743 = !DILocation(line: 2482, column: 6, scope: !11486)
!21744 = !DILocalVariable(name: "fid", scope: !11486, file: !3, line: 2482, type: !1192)
!21745 = !DILocation(line: 2482, column: 11, scope: !11486)
!21746 = !DILocalVariable(name: "do_notification", scope: !11486, file: !3, line: 2483, type: !696)
!21747 = !DILocation(line: 2483, column: 7, scope: !11486)
!21748 = !DILocalVariable(name: "err", scope: !11486, file: !3, line: 2484, type: !7)
!21749 = !DILocation(line: 2484, column: 6, scope: !11486)
!21750 = !DILocation(line: 2486, column: 31, scope: !11486)
!21751 = !DILocation(line: 2486, column: 39, scope: !11486)
!21752 = !DILocation(line: 2486, column: 50, scope: !11486)
!21753 = !DILocation(line: 2486, column: 2, scope: !11486)
!21754 = !DILocation(line: 2487, column: 40, scope: !11486)
!21755 = !DILocation(line: 2487, column: 50, scope: !11486)
!21756 = !DILocation(line: 2487, column: 18, scope: !11486)
!21757 = !DILocation(line: 2487, column: 16, scope: !11486)
!21758 = !DILocation(line: 2488, column: 7, scope: !21759)
!21759 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2488, column: 6)
!21760 = !DILocation(line: 2488, column: 6, scope: !11486)
!21761 = !DILocation(line: 2489, column: 3, scope: !21762)
!21762 = distinct !DILexicalBlock(scope: !21759, file: !3, line: 2488, column: 22)
!21763 = !DILocation(line: 2489, column: 3, scope: !21764)
!21764 = distinct !DILexicalBlock(scope: !21765, file: !3, line: 2489, column: 3)
!21765 = distinct !DILexicalBlock(scope: !21762, file: !3, line: 2489, column: 3)
!21766 = !DILocation(line: 2489, column: 3, scope: !21765)
!21767 = !DILocation(line: 2490, column: 3, scope: !21762)
!21768 = !DILocation(line: 2493, column: 28, scope: !21769)
!21769 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2493, column: 6)
!21770 = !DILocation(line: 2493, column: 38, scope: !21769)
!21771 = !DILocation(line: 2493, column: 6, scope: !21769)
!21772 = !DILocation(line: 2493, column: 6, scope: !11486)
!21773 = !DILocation(line: 2494, column: 3, scope: !21769)
!21774 = !DILocation(line: 2496, column: 54, scope: !11486)
!21775 = !DILocation(line: 2496, column: 69, scope: !11486)
!21776 = !DILocation(line: 2496, column: 23, scope: !11486)
!21777 = !DILocation(line: 2496, column: 21, scope: !11486)
!21778 = !DILocation(line: 2497, column: 7, scope: !21779)
!21779 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2497, column: 6)
!21780 = !DILocation(line: 2497, column: 6, scope: !11486)
!21781 = !DILocation(line: 2498, column: 14, scope: !21782)
!21782 = distinct !DILexicalBlock(scope: !21779, file: !3, line: 2497, column: 27)
!21783 = !DILocation(line: 2498, column: 29, scope: !21782)
!21784 = !DILocation(line: 2498, column: 3, scope: !21782)
!21785 = !DILocation(line: 2499, column: 3, scope: !21782)
!21786 = !DILocation(line: 2502, column: 16, scope: !11486)
!21787 = !DILocation(line: 2502, column: 36, scope: !11486)
!21788 = !DILocation(line: 2502, column: 14, scope: !11486)
!21789 = !DILocation(line: 2503, column: 7, scope: !21790)
!21790 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2503, column: 6)
!21791 = !DILocation(line: 2503, column: 6, scope: !11486)
!21792 = !DILocation(line: 2504, column: 14, scope: !21793)
!21793 = distinct !DILexicalBlock(scope: !21790, file: !3, line: 2503, column: 20)
!21794 = !DILocation(line: 2504, column: 29, scope: !21793)
!21795 = !DILocation(line: 2504, column: 3, scope: !21793)
!21796 = !DILocation(line: 2505, column: 3, scope: !21793)
!21797 = !DILocation(line: 2508, column: 18, scope: !11486)
!21798 = !DILocation(line: 2508, column: 31, scope: !11486)
!21799 = !DILocation(line: 2508, column: 16, scope: !11486)
!21800 = !DILocation(line: 2509, column: 8, scope: !11486)
!21801 = !DILocation(line: 2509, column: 23, scope: !11486)
!21802 = !DILocation(line: 2509, column: 38, scope: !11486)
!21803 = !DILocation(line: 2509, column: 58, scope: !11486)
!21804 = !DILocation(line: 2509, column: 6, scope: !11486)
!21805 = !DILocation(line: 2510, column: 39, scope: !11486)
!21806 = !DILocation(line: 2510, column: 59, scope: !11486)
!21807 = !DILocation(line: 2510, column: 12, scope: !11486)
!21808 = !DILocation(line: 2511, column: 5, scope: !11486)
!21809 = !DILocation(line: 2511, column: 25, scope: !11486)
!21810 = !DILocation(line: 2510, column: 10, scope: !11486)
!21811 = !DILocation(line: 2510, column: 2, scope: !11486)
!21812 = !DILabel(scope: !11486, name: "do_fdb_op", file: !3, line: 2513)
!21813 = !DILocation(line: 2513, column: 1, scope: !11486)
!21814 = !DILocation(line: 2514, column: 36, scope: !11486)
!21815 = !DILocation(line: 2514, column: 46, scope: !11486)
!21816 = !DILocation(line: 2514, column: 54, scope: !11486)
!21817 = !DILocation(line: 2514, column: 59, scope: !11486)
!21818 = !DILocation(line: 2514, column: 64, scope: !11486)
!21819 = !DILocation(line: 2515, column: 8, scope: !11486)
!21820 = !DILocation(line: 2514, column: 8, scope: !11486)
!21821 = !DILocation(line: 2514, column: 6, scope: !11486)
!21822 = !DILocation(line: 2516, column: 6, scope: !21823)
!21823 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2516, column: 6)
!21824 = !DILocation(line: 2516, column: 6, scope: !11486)
!21825 = !DILocation(line: 2517, column: 3, scope: !21826)
!21826 = distinct !DILexicalBlock(scope: !21823, file: !3, line: 2516, column: 11)
!21827 = !DILocation(line: 2517, column: 3, scope: !21828)
!21828 = distinct !DILexicalBlock(scope: !21829, file: !3, line: 2517, column: 3)
!21829 = distinct !DILexicalBlock(scope: !21826, file: !3, line: 2517, column: 3)
!21830 = !DILocation(line: 2517, column: 3, scope: !21829)
!21831 = !DILocation(line: 2518, column: 3, scope: !21826)
!21832 = !DILocation(line: 2521, column: 7, scope: !21833)
!21833 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2521, column: 6)
!21834 = !DILocation(line: 2521, column: 6, scope: !11486)
!21835 = !DILocation(line: 2522, column: 3, scope: !21833)
!21836 = !DILocation(line: 2523, column: 9, scope: !11486)
!21837 = !DILocation(line: 2523, column: 7, scope: !11486)
!21838 = !DILocation(line: 2524, column: 30, scope: !11486)
!21839 = !DILocation(line: 2524, column: 36, scope: !11486)
!21840 = !DILocation(line: 2524, column: 41, scope: !11486)
!21841 = !DILocation(line: 2524, column: 46, scope: !11486)
!21842 = !DILocation(line: 2524, column: 59, scope: !11486)
!21843 = !DILocation(line: 2524, column: 64, scope: !11486)
!21844 = !DILocation(line: 2524, column: 2, scope: !11486)
!21845 = !DILocation(line: 2526, column: 2, scope: !11486)
!21846 = !DILabel(scope: !11486, name: "just_remove", file: !3, line: 2528)
!21847 = !DILocation(line: 2528, column: 1, scope: !11486)
!21848 = !DILocation(line: 2529, column: 9, scope: !11486)
!21849 = !DILocation(line: 2530, column: 18, scope: !11486)
!21850 = !DILocation(line: 2531, column: 2, scope: !11486)
!21851 = !DILocation(line: 2532, column: 1, scope: !11486)
!21852 = distinct !DISubprogram(name: "mlxsw_sp_fdb_notify_mac_uc_tunnel_process", scope: !3, file: !3, line: 2585, type: !11474, scopeLine: 2589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21853 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21852, file: !3, line: 2585, type: !10421)
!21854 = !DILocation(line: 2585, column: 72, scope: !21852)
!21855 = !DILocalVariable(name: "sfn_pl", arg: 2, scope: !21852, file: !3, line: 2586, type: !733)
!21856 = !DILocation(line: 2586, column: 19, scope: !21852)
!21857 = !DILocalVariable(name: "rec_index", arg: 3, scope: !21852, file: !3, line: 2587, type: !7)
!21858 = !DILocation(line: 2587, column: 17, scope: !21852)
!21859 = !DILocalVariable(name: "adding", arg: 4, scope: !21852, file: !3, line: 2588, type: !696)
!21860 = !DILocation(line: 2588, column: 18, scope: !21852)
!21861 = !DILocalVariable(name: "sfn_proto", scope: !21852, file: !3, line: 2590, type: !10365)
!21862 = !DILocation(line: 2590, column: 40, scope: !21852)
!21863 = !DILocalVariable(name: "type", scope: !21852, file: !3, line: 2591, type: !10206)
!21864 = !DILocation(line: 2591, column: 31, scope: !21852)
!21865 = !DILocalVariable(name: "nve_dev", scope: !21852, file: !3, line: 2592, type: !451)
!21866 = !DILocation(line: 2592, column: 21, scope: !21852)
!21867 = !DILocalVariable(name: "addr", scope: !21852, file: !3, line: 2593, type: !10549)
!21868 = !DILocation(line: 2593, column: 24, scope: !21852)
!21869 = !DILocalVariable(name: "fid", scope: !21852, file: !3, line: 2594, type: !11097)
!21870 = !DILocation(line: 2594, column: 23, scope: !21852)
!21871 = !DILocalVariable(name: "mac", scope: !21852, file: !3, line: 2595, type: !1823)
!21872 = !DILocation(line: 2595, column: 7, scope: !21852)
!21873 = !DILocalVariable(name: "fid_index", scope: !21852, file: !3, line: 2596, type: !1192)
!21874 = !DILocation(line: 2596, column: 6, scope: !21852)
!21875 = !DILocalVariable(name: "vid", scope: !21852, file: !3, line: 2596, type: !1192)
!21876 = !DILocation(line: 2596, column: 17, scope: !21852)
!21877 = !DILocalVariable(name: "vni", scope: !21852, file: !3, line: 2597, type: !622)
!21878 = !DILocation(line: 2597, column: 9, scope: !21852)
!21879 = !DILocalVariable(name: "uip", scope: !21852, file: !3, line: 2598, type: !862)
!21880 = !DILocation(line: 2598, column: 6, scope: !21852)
!21881 = !DILocalVariable(name: "err", scope: !21852, file: !3, line: 2599, type: !7)
!21882 = !DILocation(line: 2599, column: 6, scope: !21852)
!21883 = !DILocation(line: 2601, column: 33, scope: !21852)
!21884 = !DILocation(line: 2601, column: 41, scope: !21852)
!21885 = !DILocation(line: 2601, column: 52, scope: !21852)
!21886 = !DILocation(line: 2601, column: 2, scope: !21852)
!21887 = !DILocation(line: 2604, column: 37, scope: !21852)
!21888 = !DILocation(line: 2604, column: 47, scope: !21852)
!21889 = !DILocation(line: 2604, column: 8, scope: !21852)
!21890 = !DILocation(line: 2604, column: 6, scope: !21852)
!21891 = !DILocation(line: 2605, column: 7, scope: !21892)
!21892 = distinct !DILexicalBlock(scope: !21852, file: !3, line: 2605, column: 6)
!21893 = !DILocation(line: 2605, column: 6, scope: !21852)
!21894 = !DILocation(line: 2606, column: 3, scope: !21892)
!21895 = !DILocation(line: 2608, column: 40, scope: !21852)
!21896 = !DILocation(line: 2608, column: 50, scope: !21852)
!21897 = !DILocation(line: 2609, column: 36, scope: !21852)
!21898 = !DILocation(line: 2608, column: 8, scope: !21852)
!21899 = !DILocation(line: 2608, column: 6, scope: !21852)
!21900 = !DILocation(line: 2611, column: 6, scope: !21901)
!21901 = distinct !DILexicalBlock(scope: !21852, file: !3, line: 2611, column: 6)
!21902 = !DILocation(line: 2611, column: 6, scope: !21852)
!21903 = !DILocation(line: 2612, column: 3, scope: !21901)
!21904 = !DILocation(line: 2614, column: 52, scope: !21852)
!21905 = !DILocation(line: 2614, column: 62, scope: !21852)
!21906 = !DILocation(line: 2614, column: 67, scope: !21852)
!21907 = !DILocation(line: 2614, column: 8, scope: !21852)
!21908 = !DILocation(line: 2614, column: 6, scope: !21852)
!21909 = !DILocation(line: 2616, column: 6, scope: !21910)
!21910 = distinct !DILexicalBlock(scope: !21852, file: !3, line: 2616, column: 6)
!21911 = !DILocation(line: 2616, column: 6, scope: !21852)
!21912 = !DILocation(line: 2617, column: 3, scope: !21910)
!21913 = !DILocation(line: 2619, column: 39, scope: !21852)
!21914 = !DILocation(line: 2619, column: 49, scope: !21852)
!21915 = !DILocation(line: 2619, column: 54, scope: !21852)
!21916 = !DILocation(line: 2620, column: 35, scope: !21852)
!21917 = !DILocation(line: 2621, column: 18, scope: !21852)
!21918 = !DILocation(line: 2619, column: 8, scope: !21852)
!21919 = !DILocation(line: 2619, column: 6, scope: !21852)
!21920 = !DILocation(line: 2622, column: 6, scope: !21921)
!21921 = distinct !DILexicalBlock(scope: !21852, file: !3, line: 2622, column: 6)
!21922 = !DILocation(line: 2622, column: 6, scope: !21852)
!21923 = !DILocation(line: 2623, column: 3, scope: !21921)
!21924 = !DILocation(line: 2625, column: 34, scope: !21852)
!21925 = !DILocation(line: 2625, column: 43, scope: !21852)
!21926 = !DILocation(line: 2626, column: 30, scope: !21852)
!21927 = !DILocation(line: 2627, column: 13, scope: !21852)
!21928 = !DILocation(line: 2627, column: 18, scope: !21852)
!21929 = !DILocation(line: 2625, column: 2, scope: !21852)
!21930 = !DILocation(line: 2629, column: 9, scope: !21852)
!21931 = !DILocation(line: 2629, column: 7, scope: !21852)
!21932 = !DILocation(line: 2631, column: 30, scope: !21852)
!21933 = !DILocation(line: 2631, column: 36, scope: !21852)
!21934 = !DILocation(line: 2631, column: 41, scope: !21852)
!21935 = !DILocation(line: 2631, column: 46, scope: !21852)
!21936 = !DILocation(line: 2631, column: 55, scope: !21852)
!21937 = !DILocation(line: 2631, column: 2, scope: !21852)
!21938 = !DILocation(line: 2633, column: 19, scope: !21852)
!21939 = !DILocation(line: 2633, column: 2, scope: !21852)
!21940 = !DILocation(line: 2635, column: 2, scope: !21852)
!21941 = !DILabel(scope: !21852, name: "err_fdb_op", file: !3, line: 2637)
!21942 = !DILocation(line: 2637, column: 1, scope: !21852)
!21943 = !DILabel(scope: !21852, name: "err_fdb_process", file: !3, line: 2638)
!21944 = !DILocation(line: 2638, column: 1, scope: !21852)
!21945 = !DILabel(scope: !21852, name: "err_ip_resolve", file: !3, line: 2639)
!21946 = !DILocation(line: 2639, column: 1, scope: !21852)
!21947 = !DILocation(line: 2640, column: 19, scope: !21852)
!21948 = !DILocation(line: 2640, column: 2, scope: !21852)
!21949 = !DILabel(scope: !21852, name: "err_fid_lookup", file: !3, line: 2641)
!21950 = !DILocation(line: 2641, column: 1, scope: !21852)
!21951 = !DILocation(line: 2645, column: 33, scope: !21852)
!21952 = !DILocation(line: 2645, column: 43, scope: !21852)
!21953 = !DILocation(line: 2645, column: 48, scope: !21852)
!21954 = !DILocation(line: 2646, column: 36, scope: !21852)
!21955 = !DILocation(line: 2645, column: 2, scope: !21852)
!21956 = !DILocation(line: 2648, column: 1, scope: !21852)
!21957 = distinct !DISubprogram(name: "mlxsw_reg_sfn_mac_unpack", scope: !10048, file: !10048, line: 686, type: !21958, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21958 = !DISubroutineType(types: !21959)
!21959 = !{null, !733, !7, !733, !8502, !8081}
!21960 = !DILocalVariable(name: "payload", arg: 1, scope: !21957, file: !10048, line: 686, type: !733)
!21961 = !DILocation(line: 686, column: 51, scope: !21957)
!21962 = !DILocalVariable(name: "rec_index", arg: 2, scope: !21957, file: !10048, line: 686, type: !7)
!21963 = !DILocation(line: 686, column: 64, scope: !21957)
!21964 = !DILocalVariable(name: "mac", arg: 3, scope: !21957, file: !10048, line: 687, type: !733)
!21965 = !DILocation(line: 687, column: 16, scope: !21957)
!21966 = !DILocalVariable(name: "p_vid", arg: 4, scope: !21957, file: !10048, line: 687, type: !8502)
!21967 = !DILocation(line: 687, column: 26, scope: !21957)
!21968 = !DILocalVariable(name: "p_local_port", arg: 5, scope: !21957, file: !10048, line: 688, type: !8081)
!21969 = !DILocation(line: 688, column: 14, scope: !21957)
!21970 = !DILocation(line: 690, column: 36, scope: !21957)
!21971 = !DILocation(line: 690, column: 45, scope: !21957)
!21972 = !DILocation(line: 690, column: 56, scope: !21957)
!21973 = !DILocation(line: 690, column: 2, scope: !21957)
!21974 = !DILocation(line: 691, column: 37, scope: !21957)
!21975 = !DILocation(line: 691, column: 46, scope: !21957)
!21976 = !DILocation(line: 691, column: 11, scope: !21957)
!21977 = !DILocation(line: 691, column: 3, scope: !21957)
!21978 = !DILocation(line: 691, column: 9, scope: !21957)
!21979 = !DILocation(line: 692, column: 52, scope: !21957)
!21980 = !DILocation(line: 692, column: 61, scope: !21957)
!21981 = !DILocation(line: 692, column: 18, scope: !21957)
!21982 = !DILocation(line: 692, column: 3, scope: !21957)
!21983 = !DILocation(line: 692, column: 16, scope: !21957)
!21984 = !DILocation(line: 693, column: 1, scope: !21957)
!21985 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_find_by_fid", scope: !3, file: !3, line: 432, type: !21986, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21986 = !DISubroutineType(types: !21987)
!21987 = !{!11091, !10406, !1192}
!21988 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21985, file: !3, line: 432, type: !10406)
!21989 = !DILocation(line: 432, column: 54, scope: !21985)
!21990 = !DILocalVariable(name: "fid_index", arg: 2, scope: !21985, file: !3, line: 433, type: !1192)
!21991 = !DILocation(line: 433, column: 15, scope: !21985)
!21992 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !21985, file: !3, line: 435, type: !11091)
!21993 = !DILocation(line: 435, column: 29, scope: !21985)
!21994 = !DILocalVariable(name: "__mptr", scope: !21995, file: !3, line: 437, type: !726)
!21995 = distinct !DILexicalBlock(scope: !21996, file: !3, line: 437, column: 2)
!21996 = distinct !DILexicalBlock(scope: !21985, file: !3, line: 437, column: 2)
!21997 = !DILocation(line: 437, column: 2, scope: !21995)
!21998 = !DILocation(line: 437, column: 2, scope: !21999)
!21999 = distinct !DILexicalBlock(scope: !21995, file: !3, line: 437, column: 2)
!22000 = !DILocation(line: 437, column: 2, scope: !21996)
!22001 = !DILocation(line: 437, column: 2, scope: !22002)
!22002 = distinct !DILexicalBlock(scope: !21996, file: !3, line: 437, column: 2)
!22003 = !DILocalVariable(name: "fid", scope: !22004, file: !3, line: 439, type: !11097)
!22004 = distinct !DILexicalBlock(scope: !22002, file: !3, line: 438, column: 14)
!22005 = !DILocation(line: 439, column: 24, scope: !22004)
!22006 = !DILocation(line: 439, column: 30, scope: !22004)
!22007 = !DILocation(line: 439, column: 50, scope: !22004)
!22008 = !DILocation(line: 441, column: 7, scope: !22009)
!22009 = distinct !DILexicalBlock(scope: !22004, file: !3, line: 441, column: 7)
!22010 = !DILocation(line: 441, column: 11, scope: !22009)
!22011 = !DILocation(line: 441, column: 33, scope: !22009)
!22012 = !DILocation(line: 441, column: 14, scope: !22009)
!22013 = !DILocation(line: 441, column: 41, scope: !22009)
!22014 = !DILocation(line: 441, column: 38, scope: !22009)
!22015 = !DILocation(line: 441, column: 7, scope: !22004)
!22016 = !DILocation(line: 442, column: 11, scope: !22009)
!22017 = !DILocation(line: 442, column: 4, scope: !22009)
!22018 = !DILocation(line: 443, column: 2, scope: !22004)
!22019 = !DILocalVariable(name: "__mptr", scope: !22020, file: !3, line: 437, type: !726)
!22020 = distinct !DILexicalBlock(scope: !22002, file: !3, line: 437, column: 2)
!22021 = !DILocation(line: 437, column: 2, scope: !22020)
!22022 = !DILocation(line: 437, column: 2, scope: !22023)
!22023 = distinct !DILexicalBlock(scope: !22020, file: !3, line: 437, column: 2)
!22024 = distinct !{!22024, !22000, !22025}
!22025 = !DILocation(line: 443, column: 2, scope: !21996)
!22026 = !DILocation(line: 445, column: 2, scope: !21985)
!22027 = !DILocation(line: 446, column: 1, scope: !21985)
!22028 = distinct !DISubprogram(name: "mlxsw_reg_sfn_rec_mac_memcpy_from", scope: !10048, file: !10048, line: 661, type: !22029, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22029 = !DISubroutineType(types: !22030)
!22030 = !{null, !453, !633, !733}
!22031 = !DILocalVariable(name: "buf", arg: 1, scope: !22028, file: !10048, line: 661, type: !453)
!22032 = !DILocation(line: 661, column: 1, scope: !22028)
!22033 = !DILocalVariable(name: "index", arg: 2, scope: !22028, file: !10048, line: 661, type: !633)
!22034 = !DILocalVariable(name: "dst", arg: 3, scope: !22028, file: !10048, line: 661, type: !733)
!22035 = distinct !DISubprogram(name: "mlxsw_reg_sfn_mac_fid_get", scope: !10048, file: !10048, line: 676, type: !21588, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22036 = !DILocalVariable(name: "buf", arg: 1, scope: !22035, file: !10048, line: 676, type: !453)
!22037 = !DILocation(line: 676, column: 1, scope: !22035)
!22038 = !DILocalVariable(name: "index", arg: 2, scope: !22035, file: !10048, line: 676, type: !633)
!22039 = distinct !DISubprogram(name: "mlxsw_reg_sfn_mac_system_port_get", scope: !10048, file: !10048, line: 683, type: !21588, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22040 = !DILocalVariable(name: "buf", arg: 1, scope: !22039, file: !10048, line: 683, type: !453)
!22041 = !DILocation(line: 683, column: 1, scope: !22039)
!22042 = !DILocalVariable(name: "index", arg: 2, scope: !22039, file: !10048, line: 683, type: !633)
!22043 = distinct !DISubprogram(name: "__mlxsw_item_memcpy_from", scope: !10689, file: !10689, line: 178, type: !22044, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22044 = !DISubroutineType(types: !22045)
!22045 = !{null, !453, !733, !13557, !633}
!22046 = !DILocalVariable(name: "buf", arg: 1, scope: !22043, file: !10689, line: 178, type: !453)
!22047 = !DILocation(line: 178, column: 57, scope: !22043)
!22048 = !DILocalVariable(name: "dst", arg: 2, scope: !22043, file: !10689, line: 178, type: !733)
!22049 = !DILocation(line: 178, column: 68, scope: !22043)
!22050 = !DILocalVariable(name: "item", arg: 3, scope: !22043, file: !10689, line: 179, type: !13557)
!22051 = !DILocation(line: 179, column: 35, scope: !22043)
!22052 = !DILocalVariable(name: "index", arg: 4, scope: !22043, file: !10689, line: 180, type: !633)
!22053 = !DILocation(line: 180, column: 25, scope: !22043)
!22054 = !DILocalVariable(name: "offset", scope: !22043, file: !10689, line: 182, type: !14)
!22055 = !DILocation(line: 182, column: 15, scope: !22043)
!22056 = !DILocation(line: 182, column: 44, scope: !22043)
!22057 = !DILocation(line: 182, column: 50, scope: !22043)
!22058 = !DILocation(line: 182, column: 24, scope: !22043)
!22059 = !DILocation(line: 184, column: 9, scope: !22043)
!22060 = !DILocation(line: 184, column: 15, scope: !22043)
!22061 = !DILocation(line: 184, column: 19, scope: !22043)
!22062 = !DILocation(line: 184, column: 28, scope: !22043)
!22063 = !DILocation(line: 184, column: 34, scope: !22043)
!22064 = !DILocation(line: 184, column: 39, scope: !22043)
!22065 = !DILocation(line: 184, column: 2, scope: !22043)
!22066 = !DILocation(line: 185, column: 1, scope: !22043)
!22067 = distinct !DISubprogram(name: "mlxsw_reg_sfn_mac_lag_unpack", scope: !10048, file: !10048, line: 702, type: !22068, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22068 = !DISubroutineType(types: !22069)
!22069 = !{null, !733, !7, !733, !8502, !8502}
!22070 = !DILocalVariable(name: "payload", arg: 1, scope: !22067, file: !10048, line: 702, type: !733)
!22071 = !DILocation(line: 702, column: 55, scope: !22067)
!22072 = !DILocalVariable(name: "rec_index", arg: 2, scope: !22067, file: !10048, line: 702, type: !7)
!22073 = !DILocation(line: 702, column: 68, scope: !22067)
!22074 = !DILocalVariable(name: "mac", arg: 3, scope: !22067, file: !10048, line: 703, type: !733)
!22075 = !DILocation(line: 703, column: 13, scope: !22067)
!22076 = !DILocalVariable(name: "p_vid", arg: 4, scope: !22067, file: !10048, line: 703, type: !8502)
!22077 = !DILocation(line: 703, column: 23, scope: !22067)
!22078 = !DILocalVariable(name: "p_lag_id", arg: 5, scope: !22067, file: !10048, line: 704, type: !8502)
!22079 = !DILocation(line: 704, column: 12, scope: !22067)
!22080 = !DILocation(line: 706, column: 36, scope: !22067)
!22081 = !DILocation(line: 706, column: 45, scope: !22067)
!22082 = !DILocation(line: 706, column: 56, scope: !22067)
!22083 = !DILocation(line: 706, column: 2, scope: !22067)
!22084 = !DILocation(line: 707, column: 37, scope: !22067)
!22085 = !DILocation(line: 707, column: 46, scope: !22067)
!22086 = !DILocation(line: 707, column: 11, scope: !22067)
!22087 = !DILocation(line: 707, column: 3, scope: !22067)
!22088 = !DILocation(line: 707, column: 9, scope: !22067)
!22089 = !DILocation(line: 708, column: 47, scope: !22067)
!22090 = !DILocation(line: 708, column: 56, scope: !22067)
!22091 = !DILocation(line: 708, column: 14, scope: !22067)
!22092 = !DILocation(line: 708, column: 3, scope: !22067)
!22093 = !DILocation(line: 708, column: 12, scope: !22067)
!22094 = !DILocation(line: 709, column: 1, scope: !22067)
!22095 = distinct !DISubprogram(name: "mlxsw_sp_lag_rep_port", scope: !3, file: !3, line: 1960, type: !22096, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22096 = !DISubroutineType(types: !22097)
!22097 = !{!10406, !10421, !1192}
!22098 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !22095, file: !3, line: 1960, type: !10421)
!22099 = !DILocation(line: 1960, column: 69, scope: !22095)
!22100 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22095, file: !3, line: 1961, type: !1192)
!22101 = !DILocation(line: 1961, column: 14, scope: !22095)
!22102 = !DILocalVariable(name: "mlxsw_sp_port", scope: !22095, file: !3, line: 1963, type: !10406)
!22103 = !DILocation(line: 1963, column: 24, scope: !22095)
!22104 = !DILocalVariable(name: "max_lag_members", scope: !22095, file: !3, line: 1964, type: !492)
!22105 = !DILocation(line: 1964, column: 6, scope: !22095)
!22106 = !DILocalVariable(name: "i", scope: !22095, file: !3, line: 1965, type: !7)
!22107 = !DILocation(line: 1965, column: 6, scope: !22095)
!22108 = !DILocation(line: 1967, column: 20, scope: !22095)
!22109 = !DILocation(line: 1967, column: 18, scope: !22095)
!22110 = !DILocation(line: 1969, column: 9, scope: !22111)
!22111 = distinct !DILexicalBlock(scope: !22095, file: !3, line: 1969, column: 2)
!22112 = !DILocation(line: 1969, column: 7, scope: !22111)
!22113 = !DILocation(line: 1969, column: 14, scope: !22114)
!22114 = distinct !DILexicalBlock(scope: !22111, file: !3, line: 1969, column: 2)
!22115 = !DILocation(line: 1969, column: 18, scope: !22114)
!22116 = !DILocation(line: 1969, column: 16, scope: !22114)
!22117 = !DILocation(line: 1969, column: 2, scope: !22111)
!22118 = !DILocation(line: 1970, column: 44, scope: !22119)
!22119 = distinct !DILexicalBlock(scope: !22114, file: !3, line: 1969, column: 40)
!22120 = !DILocation(line: 1970, column: 54, scope: !22119)
!22121 = !DILocation(line: 1970, column: 62, scope: !22119)
!22122 = !DILocation(line: 1970, column: 19, scope: !22119)
!22123 = !DILocation(line: 1970, column: 17, scope: !22119)
!22124 = !DILocation(line: 1971, column: 7, scope: !22125)
!22125 = distinct !DILexicalBlock(scope: !22119, file: !3, line: 1971, column: 7)
!22126 = !DILocation(line: 1971, column: 7, scope: !22119)
!22127 = !DILocation(line: 1972, column: 11, scope: !22125)
!22128 = !DILocation(line: 1972, column: 4, scope: !22125)
!22129 = !DILocation(line: 1973, column: 2, scope: !22119)
!22130 = !DILocation(line: 1969, column: 36, scope: !22114)
!22131 = !DILocation(line: 1969, column: 2, scope: !22114)
!22132 = distinct !{!22132, !22117, !22133}
!22133 = !DILocation(line: 1973, column: 2, scope: !22111)
!22134 = !DILocation(line: 1974, column: 2, scope: !22095)
!22135 = !DILocation(line: 1975, column: 1, scope: !22095)
!22136 = distinct !DISubprogram(name: "mlxsw_reg_sfn_mac_lag_lag_id_get", scope: !10048, file: !10048, line: 699, type: !21588, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22137 = !DILocalVariable(name: "buf", arg: 1, scope: !22136, file: !10048, line: 699, type: !453)
!22138 = !DILocation(line: 699, column: 1, scope: !22136)
!22139 = !DILocalVariable(name: "index", arg: 2, scope: !22136, file: !10048, line: 699, type: !633)
!22140 = distinct !DISubprogram(name: "mlxsw_reg_sfn_uc_tunnel_unpack", scope: !10048, file: !10048, line: 757, type: !22141, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22141 = !DISubroutineType(types: !22142)
!22142 = !{null, !733, !7, !733, !8502, !1614, !22143}
!22143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10365, size: 64)
!22144 = !DILocalVariable(name: "payload", arg: 1, scope: !22140, file: !10048, line: 757, type: !733)
!22145 = !DILocation(line: 757, column: 38, scope: !22140)
!22146 = !DILocalVariable(name: "rec_index", arg: 2, scope: !22140, file: !10048, line: 757, type: !7)
!22147 = !DILocation(line: 757, column: 51, scope: !22140)
!22148 = !DILocalVariable(name: "mac", arg: 3, scope: !22140, file: !10048, line: 757, type: !733)
!22149 = !DILocation(line: 757, column: 68, scope: !22140)
!22150 = !DILocalVariable(name: "p_fid", arg: 4, scope: !22140, file: !10048, line: 758, type: !8502)
!22151 = !DILocation(line: 758, column: 16, scope: !22140)
!22152 = !DILocalVariable(name: "p_uip", arg: 5, scope: !22140, file: !10048, line: 758, type: !1614)
!22153 = !DILocation(line: 758, column: 28, scope: !22140)
!22154 = !DILocalVariable(name: "p_proto", arg: 6, scope: !22140, file: !10048, line: 759, type: !22143)
!22155 = !DILocation(line: 759, column: 50, scope: !22140)
!22156 = !DILocalVariable(name: "uip_msb", scope: !22140, file: !10048, line: 761, type: !862)
!22157 = !DILocation(line: 761, column: 6, scope: !22140)
!22158 = !DILocalVariable(name: "uip_lsb", scope: !22140, file: !10048, line: 761, type: !862)
!22159 = !DILocation(line: 761, column: 15, scope: !22140)
!22160 = !DILocation(line: 763, column: 36, scope: !22140)
!22161 = !DILocation(line: 763, column: 45, scope: !22140)
!22162 = !DILocation(line: 763, column: 56, scope: !22140)
!22163 = !DILocation(line: 763, column: 2, scope: !22140)
!22164 = !DILocation(line: 764, column: 37, scope: !22140)
!22165 = !DILocation(line: 764, column: 46, scope: !22140)
!22166 = !DILocation(line: 764, column: 11, scope: !22140)
!22167 = !DILocation(line: 764, column: 3, scope: !22140)
!22168 = !DILocation(line: 764, column: 9, scope: !22140)
!22169 = !DILocation(line: 765, column: 48, scope: !22140)
!22170 = !DILocation(line: 765, column: 57, scope: !22140)
!22171 = !DILocation(line: 765, column: 12, scope: !22140)
!22172 = !DILocation(line: 765, column: 10, scope: !22140)
!22173 = !DILocation(line: 766, column: 48, scope: !22140)
!22174 = !DILocation(line: 766, column: 57, scope: !22140)
!22175 = !DILocation(line: 766, column: 12, scope: !22140)
!22176 = !DILocation(line: 766, column: 10, scope: !22140)
!22177 = !DILocation(line: 767, column: 11, scope: !22140)
!22178 = !DILocation(line: 767, column: 19, scope: !22140)
!22179 = !DILocation(line: 767, column: 27, scope: !22140)
!22180 = !DILocation(line: 767, column: 25, scope: !22140)
!22181 = !DILocation(line: 767, column: 3, scope: !22140)
!22182 = !DILocation(line: 767, column: 9, scope: !22140)
!22183 = !DILocation(line: 768, column: 50, scope: !22140)
!22184 = !DILocation(line: 768, column: 59, scope: !22140)
!22185 = !DILocation(line: 768, column: 13, scope: !22140)
!22186 = !DILocation(line: 768, column: 3, scope: !22140)
!22187 = !DILocation(line: 768, column: 11, scope: !22140)
!22188 = !DILocation(line: 769, column: 1, scope: !22140)
!22189 = distinct !DISubprogram(name: "__mlxsw_sp_fdb_notify_mac_uc_tunnel_process", scope: !3, file: !3, line: 2535, type: !22190, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22190 = !DISubroutineType(types: !22191)
!22191 = !{!7, !10421, !11204, !696, !22192, !8502, !11214}
!22192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!22193 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !22189, file: !3, line: 2535, type: !10421)
!22194 = !DILocation(line: 2535, column: 62, scope: !22189)
!22195 = !DILocalVariable(name: "fid", arg: 2, scope: !22189, file: !3, line: 2536, type: !11204)
!22196 = !DILocation(line: 2536, column: 37, scope: !22189)
!22197 = !DILocalVariable(name: "adding", arg: 3, scope: !22189, file: !3, line: 2537, type: !696)
!22198 = !DILocation(line: 2537, column: 15, scope: !22189)
!22199 = !DILocalVariable(name: "nve_dev", arg: 4, scope: !22189, file: !3, line: 2538, type: !22192)
!22200 = !DILocation(line: 2538, column: 30, scope: !22189)
!22201 = !DILocalVariable(name: "p_vid", arg: 5, scope: !22189, file: !3, line: 2539, type: !8502)
!22202 = !DILocation(line: 2539, column: 15, scope: !22189)
!22203 = !DILocalVariable(name: "p_vni", arg: 6, scope: !22189, file: !3, line: 2539, type: !11214)
!22204 = !DILocation(line: 2539, column: 30, scope: !22189)
!22205 = !DILocalVariable(name: "bridge_device", scope: !22189, file: !3, line: 2541, type: !10370)
!22206 = !DILocation(line: 2541, column: 33, scope: !22189)
!22207 = !DILocalVariable(name: "br_dev", scope: !22189, file: !3, line: 2542, type: !451)
!22208 = !DILocation(line: 2542, column: 21, scope: !22189)
!22209 = !DILocalVariable(name: "dev", scope: !22189, file: !3, line: 2542, type: !451)
!22210 = !DILocation(line: 2542, column: 30, scope: !22189)
!22211 = !DILocalVariable(name: "nve_ifindex", scope: !22189, file: !3, line: 2543, type: !7)
!22212 = !DILocation(line: 2543, column: 6, scope: !22189)
!22213 = !DILocalVariable(name: "err", scope: !22189, file: !3, line: 2544, type: !7)
!22214 = !DILocation(line: 2544, column: 6, scope: !22189)
!22215 = !DILocation(line: 2546, column: 33, scope: !22189)
!22216 = !DILocation(line: 2546, column: 8, scope: !22189)
!22217 = !DILocation(line: 2546, column: 6, scope: !22189)
!22218 = !DILocation(line: 2547, column: 6, scope: !22219)
!22219 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2547, column: 6)
!22220 = !DILocation(line: 2547, column: 6, scope: !22189)
!22221 = !DILocation(line: 2548, column: 10, scope: !22219)
!22222 = !DILocation(line: 2548, column: 3, scope: !22219)
!22223 = !DILocation(line: 2550, column: 25, scope: !22189)
!22224 = !DILocation(line: 2550, column: 30, scope: !22189)
!22225 = !DILocation(line: 2550, column: 8, scope: !22189)
!22226 = !DILocation(line: 2550, column: 6, scope: !22189)
!22227 = !DILocation(line: 2551, column: 6, scope: !22228)
!22228 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2551, column: 6)
!22229 = !DILocation(line: 2551, column: 6, scope: !22189)
!22230 = !DILocation(line: 2552, column: 10, scope: !22228)
!22231 = !DILocation(line: 2552, column: 3, scope: !22228)
!22232 = !DILocation(line: 2554, column: 40, scope: !22189)
!22233 = !DILocation(line: 2554, column: 27, scope: !22189)
!22234 = !DILocation(line: 2554, column: 51, scope: !22189)
!22235 = !DILocation(line: 2554, column: 8, scope: !22189)
!22236 = !DILocation(line: 2554, column: 6, scope: !22189)
!22237 = !DILocation(line: 2555, column: 7, scope: !22238)
!22238 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2555, column: 6)
!22239 = !DILocation(line: 2555, column: 6, scope: !22189)
!22240 = !DILocation(line: 2556, column: 3, scope: !22238)
!22241 = !DILocation(line: 2557, column: 13, scope: !22189)
!22242 = !DILocation(line: 2557, column: 3, scope: !22189)
!22243 = !DILocation(line: 2557, column: 11, scope: !22189)
!22244 = !DILocation(line: 2559, column: 21, scope: !22245)
!22245 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2559, column: 6)
!22246 = !DILocation(line: 2559, column: 7, scope: !22245)
!22247 = !DILocation(line: 2559, column: 6, scope: !22189)
!22248 = !DILocation(line: 2560, column: 3, scope: !22245)
!22249 = !DILocation(line: 2562, column: 6, scope: !22250)
!22250 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2562, column: 6)
!22251 = !DILocation(line: 2562, column: 13, scope: !22250)
!22252 = !DILocation(line: 2562, column: 37, scope: !22250)
!22253 = !DILocation(line: 2562, column: 17, scope: !22250)
!22254 = !DILocation(line: 2562, column: 6, scope: !22189)
!22255 = !DILocation(line: 2563, column: 3, scope: !22250)
!22256 = !DILocation(line: 2565, column: 6, scope: !22257)
!22257 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2565, column: 6)
!22258 = !DILocation(line: 2565, column: 13, scope: !22257)
!22259 = !DILocation(line: 2565, column: 31, scope: !22257)
!22260 = !DILocation(line: 2565, column: 16, scope: !22257)
!22261 = !DILocation(line: 2565, column: 6, scope: !22189)
!22262 = !DILocalVariable(name: "vxlan", scope: !22263, file: !3, line: 2566, type: !12565)
!22263 = distinct !DILexicalBlock(scope: !22257, file: !3, line: 2565, column: 37)
!22264 = !DILocation(line: 2566, column: 21, scope: !22263)
!22265 = !DILocation(line: 2566, column: 41, scope: !22263)
!22266 = !DILocation(line: 2566, column: 29, scope: !22263)
!22267 = !DILocation(line: 2568, column: 9, scope: !22268)
!22268 = distinct !DILexicalBlock(scope: !22263, file: !3, line: 2568, column: 7)
!22269 = !DILocation(line: 2568, column: 16, scope: !22268)
!22270 = !DILocation(line: 2568, column: 20, scope: !22268)
!22271 = !DILocation(line: 2568, column: 26, scope: !22268)
!22272 = !DILocation(line: 2568, column: 7, scope: !22263)
!22273 = !DILocation(line: 2569, column: 4, scope: !22268)
!22274 = !DILocation(line: 2570, column: 2, scope: !22263)
!22275 = !DILocation(line: 2572, column: 39, scope: !22189)
!22276 = !DILocation(line: 2572, column: 11, scope: !22189)
!22277 = !DILocation(line: 2572, column: 9, scope: !22189)
!22278 = !DILocation(line: 2573, column: 7, scope: !22279)
!22279 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2573, column: 6)
!22280 = !DILocation(line: 2573, column: 6, scope: !22189)
!22281 = !DILocation(line: 2574, column: 3, scope: !22279)
!22282 = !DILocation(line: 2576, column: 46, scope: !22189)
!22283 = !DILocation(line: 2576, column: 56, scope: !22189)
!22284 = !DILocation(line: 2576, column: 64, scope: !22189)
!22285 = !DILocation(line: 2576, column: 18, scope: !22189)
!22286 = !DILocation(line: 2576, column: 16, scope: !22189)
!22287 = !DILocation(line: 2577, column: 7, scope: !22288)
!22288 = distinct !DILexicalBlock(scope: !22189, file: !3, line: 2577, column: 6)
!22289 = !DILocation(line: 2577, column: 6, scope: !22189)
!22290 = !DILocation(line: 2578, column: 3, scope: !22288)
!22291 = !DILocation(line: 2580, column: 11, scope: !22189)
!22292 = !DILocation(line: 2580, column: 26, scope: !22189)
!22293 = !DILocation(line: 2580, column: 31, scope: !22189)
!22294 = !DILocation(line: 2580, column: 39, scope: !22189)
!22295 = !DILocation(line: 2580, column: 54, scope: !22189)
!22296 = !DILocation(line: 2580, column: 3, scope: !22189)
!22297 = !DILocation(line: 2580, column: 9, scope: !22189)
!22298 = !DILocation(line: 2582, column: 2, scope: !22189)
!22299 = !DILocation(line: 2583, column: 1, scope: !22189)
!22300 = distinct !DISubprogram(name: "mlxsw_sp_fdb_nve_call_notifiers", scope: !3, file: !3, line: 2384, type: !22301, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22301 = !DISubroutineType(types: !22302)
!22302 = !{null, !451, !453, !10057, !17817, !622, !696}
!22303 = !DILocalVariable(name: "dev", arg: 1, scope: !22300, file: !3, line: 2384, type: !451)
!22304 = !DILocation(line: 2384, column: 64, scope: !22300)
!22305 = !DILocalVariable(name: "mac", arg: 2, scope: !22300, file: !3, line: 2385, type: !453)
!22306 = !DILocation(line: 2385, column: 22, scope: !22300)
!22307 = !DILocalVariable(name: "proto", arg: 3, scope: !22300, file: !3, line: 2386, type: !10057)
!22308 = !DILocation(line: 2386, column: 32, scope: !22300)
!22309 = !DILocalVariable(name: "addr", arg: 4, scope: !22300, file: !3, line: 2387, type: !17817)
!22310 = !DILocation(line: 2387, column: 33, scope: !22300)
!22311 = !DILocalVariable(name: "vni", arg: 5, scope: !22300, file: !3, line: 2388, type: !622)
!22312 = !DILocation(line: 2388, column: 17, scope: !22300)
!22313 = !DILocalVariable(name: "adding", arg: 6, scope: !22300, file: !3, line: 2389, type: !696)
!22314 = !DILocation(line: 2389, column: 15, scope: !22300)
!22315 = !DILocation(line: 2391, column: 21, scope: !22316)
!22316 = distinct !DILexicalBlock(scope: !22300, file: !3, line: 2391, column: 6)
!22317 = !DILocation(line: 2391, column: 6, scope: !22316)
!22318 = !DILocation(line: 2391, column: 6, scope: !22300)
!22319 = !DILocation(line: 2392, column: 37, scope: !22316)
!22320 = !DILocation(line: 2392, column: 42, scope: !22316)
!22321 = !DILocation(line: 2392, column: 47, scope: !22316)
!22322 = !DILocation(line: 2392, column: 54, scope: !22316)
!22323 = !DILocation(line: 2392, column: 60, scope: !22316)
!22324 = !DILocation(line: 2393, column: 9, scope: !22316)
!22325 = !DILocation(line: 2392, column: 3, scope: !22316)
!22326 = !DILocation(line: 2394, column: 1, scope: !22300)
!22327 = distinct !DISubprogram(name: "mlxsw_reg_sfn_uc_tunnel_uip_msb_get", scope: !10048, file: !10048, line: 717, type: !21588, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22328 = !DILocalVariable(name: "buf", arg: 1, scope: !22327, file: !10048, line: 717, type: !453)
!22329 = !DILocation(line: 717, column: 1, scope: !22327)
!22330 = !DILocalVariable(name: "index", arg: 2, scope: !22327, file: !10048, line: 717, type: !633)
!22331 = distinct !DISubprogram(name: "mlxsw_reg_sfn_uc_tunnel_uip_lsb_get", scope: !10048, file: !10048, line: 738, type: !21588, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22332 = !DILocalVariable(name: "buf", arg: 1, scope: !22331, file: !10048, line: 738, type: !453)
!22333 = !DILocation(line: 738, column: 1, scope: !22331)
!22334 = !DILocalVariable(name: "index", arg: 2, scope: !22331, file: !10048, line: 738, type: !633)
!22335 = distinct !DISubprogram(name: "mlxsw_reg_sfn_uc_tunnel_protocol_get", scope: !10048, file: !10048, line: 729, type: !21588, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22336 = !DILocalVariable(name: "buf", arg: 1, scope: !22335, file: !10048, line: 729, type: !453)
!22337 = !DILocation(line: 729, column: 1, scope: !22335)
!22338 = !DILocalVariable(name: "index", arg: 2, scope: !22335, file: !10048, line: 729, type: !633)
!22339 = distinct !DISubprogram(name: "mlxsw_sp_net", scope: !10053, file: !10053, line: 1258, type: !22340, scopeLine: 1259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22340 = !DISubroutineType(types: !22341)
!22341 = !{!2115, !10421}
!22342 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !22339, file: !10053, line: 1258, type: !10421)
!22343 = !DILocation(line: 1258, column: 57, scope: !22339)
!22344 = !DILocation(line: 1260, column: 24, scope: !22339)
!22345 = !DILocation(line: 1260, column: 34, scope: !22339)
!22346 = !DILocation(line: 1260, column: 9, scope: !22339)
!22347 = !DILocation(line: 1260, column: 2, scope: !22339)
!22348 = distinct !DISubprogram(name: "mlxsw_core_net", scope: !10434, file: !10434, line: 403, type: !22349, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22349 = !DISubroutineType(types: !22350)
!22350 = !{!2115, !10427}
!22351 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !22348, file: !10434, line: 403, type: !10427)
!22352 = !DILocation(line: 403, column: 61, scope: !22348)
!22353 = !DILocation(line: 405, column: 37, scope: !22348)
!22354 = !DILocation(line: 405, column: 21, scope: !22348)
!22355 = !DILocation(line: 405, column: 9, scope: !22348)
!22356 = !DILocation(line: 405, column: 2, scope: !22348)
!22357 = distinct !DISubprogram(name: "priv_to_devlink", scope: !8404, file: !8404, line: 1356, type: !22358, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22358 = !DISubroutineType(types: !22359)
!22359 = !{!8410, !726}
!22360 = !DILocalVariable(name: "priv", arg: 1, scope: !22357, file: !8404, line: 1356, type: !726)
!22361 = !DILocation(line: 1356, column: 53, scope: !22357)
!22362 = !DILocation(line: 1358, column: 2, scope: !22357)
!22363 = !DILocation(line: 1358, column: 2, scope: !22364)
!22364 = distinct !DILexicalBlock(scope: !22365, file: !8404, line: 1358, column: 2)
!22365 = distinct !DILexicalBlock(scope: !22357, file: !8404, line: 1358, column: 2)
!22366 = !DILocation(line: 1358, column: 2, scope: !22365)
!22367 = !DILocation(line: 1358, column: 2, scope: !22368)
!22368 = distinct !DILexicalBlock(scope: !22364, file: !8404, line: 1358, column: 2)
!22369 = !DILocation(line: 1358, column: 2, scope: !22370)
!22370 = distinct !DILexicalBlock(scope: !22368, file: !8404, line: 1358, column: 2)
!22371 = !DILocation(line: 1358, column: 2, scope: !22372)
!22372 = distinct !DILexicalBlock(scope: !22368, file: !8404, line: 1358, column: 2)
!22373 = !{i32 -2137448810, i32 -2137448781, i32 -2137448735, i32 -2137448677, i32 -2137448623, i32 -2137448569, i32 -2137448514, i32 -2137448483}
!22374 = !DILocation(line: 1358, column: 2, scope: !22375)
!22375 = distinct !DILexicalBlock(scope: !22376, file: !8404, line: 1358, column: 2)
!22376 = distinct !DILexicalBlock(scope: !22368, file: !8404, line: 1358, column: 2)
!22377 = !{i32 -2137448038, i32 -2137448031, i32 -2137447977, i32 -2137447946, i32 -2137447916}
!22378 = !DILocation(line: 1358, column: 2, scope: !22376)
!22379 = !DILocalVariable(name: "__mptr", scope: !22380, file: !8404, line: 1359, type: !726)
!22380 = distinct !DILexicalBlock(scope: !22357, file: !8404, line: 1359, column: 9)
!22381 = !DILocation(line: 1359, column: 9, scope: !22380)
!22382 = !DILocation(line: 1359, column: 9, scope: !22383)
!22383 = distinct !DILexicalBlock(scope: !22380, file: !8404, line: 1359, column: 9)
!22384 = !DILocation(line: 1359, column: 2, scope: !22357)
!22385 = distinct !DISubprogram(name: "mlxsw_sp_fdb_vxlan_call_notifiers", scope: !3, file: !3, line: 2362, type: !22301, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22386 = !DILocalVariable(name: "dev", arg: 1, scope: !22385, file: !3, line: 2362, type: !451)
!22387 = !DILocation(line: 2362, column: 66, scope: !22385)
!22388 = !DILocalVariable(name: "mac", arg: 2, scope: !22385, file: !3, line: 2363, type: !453)
!22389 = !DILocation(line: 2363, column: 24, scope: !22385)
!22390 = !DILocalVariable(name: "proto", arg: 3, scope: !22385, file: !3, line: 2364, type: !10057)
!22391 = !DILocation(line: 2364, column: 34, scope: !22385)
!22392 = !DILocalVariable(name: "addr", arg: 4, scope: !22385, file: !3, line: 2365, type: !17817)
!22393 = !DILocation(line: 2365, column: 35, scope: !22385)
!22394 = !DILocalVariable(name: "vni", arg: 5, scope: !22385, file: !3, line: 2366, type: !622)
!22395 = !DILocation(line: 2366, column: 19, scope: !22385)
!22396 = !DILocalVariable(name: "adding", arg: 6, scope: !22385, file: !3, line: 2366, type: !696)
!22397 = !DILocation(line: 2366, column: 29, scope: !22385)
!22398 = !DILocalVariable(name: "info", scope: !22385, file: !3, line: 2368, type: !11248)
!22399 = !DILocation(line: 2368, column: 43, scope: !22385)
!22400 = !DILocalVariable(name: "vxlan", scope: !22385, file: !3, line: 2369, type: !12565)
!22401 = !DILocation(line: 2369, column: 20, scope: !22385)
!22402 = !DILocation(line: 2369, column: 40, scope: !22385)
!22403 = !DILocation(line: 2369, column: 28, scope: !22385)
!22404 = !DILocalVariable(name: "type", scope: !22385, file: !3, line: 2370, type: !10206)
!22405 = !DILocation(line: 2370, column: 31, scope: !22385)
!22406 = !DILocation(line: 2372, column: 9, scope: !22385)
!22407 = !DILocation(line: 2372, column: 7, scope: !22385)
!22408 = !DILocation(line: 2374, column: 40, scope: !22385)
!22409 = !DILocation(line: 2374, column: 47, scope: !22385)
!22410 = !DILocation(line: 2374, column: 59, scope: !22385)
!22411 = !DILocation(line: 2374, column: 2, scope: !22385)
!22412 = !DILocation(line: 2375, column: 21, scope: !22385)
!22413 = !DILocation(line: 2375, column: 28, scope: !22385)
!22414 = !DILocation(line: 2375, column: 32, scope: !22385)
!22415 = !DILocation(line: 2375, column: 7, scope: !22385)
!22416 = !DILocation(line: 2375, column: 19, scope: !22385)
!22417 = !DILocation(line: 2376, column: 20, scope: !22385)
!22418 = !DILocation(line: 2376, column: 7, scope: !22385)
!22419 = !DILocation(line: 2376, column: 18, scope: !22385)
!22420 = !DILocation(line: 2377, column: 7, scope: !22385)
!22421 = !DILocation(line: 2377, column: 22, scope: !22385)
!22422 = !DILocation(line: 2378, column: 23, scope: !22385)
!22423 = !DILocation(line: 2378, column: 18, scope: !22385)
!22424 = !DILocation(line: 2378, column: 33, scope: !22385)
!22425 = !DILocation(line: 2378, column: 2, scope: !22385)
!22426 = !DILocation(line: 2379, column: 13, scope: !22385)
!22427 = !DILocation(line: 2379, column: 7, scope: !22385)
!22428 = !DILocation(line: 2379, column: 11, scope: !22385)
!22429 = !DILocation(line: 2380, column: 19, scope: !22385)
!22430 = !DILocation(line: 2380, column: 7, scope: !22385)
!22431 = !DILocation(line: 2380, column: 17, scope: !22385)
!22432 = !DILocation(line: 2381, column: 27, scope: !22385)
!22433 = !DILocation(line: 2381, column: 33, scope: !22385)
!22434 = !DILocation(line: 2381, column: 44, scope: !22385)
!22435 = !DILocation(line: 2381, column: 2, scope: !22385)
!22436 = !DILocation(line: 2382, column: 1, scope: !22385)
!22437 = distinct !DISubprogram(name: "mlxsw_sp_switchdev_addr_vxlan_convert", scope: !3, file: !3, line: 2346, type: !22438, scopeLine: 2349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22438 = !DISubroutineType(types: !22439)
!22439 = !{null, !10057, !17853, !22440}
!22440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11253, size: 64)
!22441 = !DILocalVariable(name: "proto", arg: 1, scope: !22437, file: !3, line: 2346, type: !10057)
!22442 = !DILocation(line: 2346, column: 61, scope: !22437)
!22443 = !DILocalVariable(name: "addr", arg: 2, scope: !22437, file: !3, line: 2347, type: !17853)
!22444 = !DILocation(line: 2347, column: 40, scope: !22437)
!22445 = !DILocalVariable(name: "vxlan_addr", arg: 3, scope: !22437, file: !3, line: 2348, type: !22440)
!22446 = !DILocation(line: 2348, column: 29, scope: !22437)
!22447 = !DILocation(line: 2350, column: 10, scope: !22437)
!22448 = !DILocation(line: 2350, column: 2, scope: !22437)
!22449 = !DILocation(line: 2352, column: 3, scope: !22450)
!22450 = distinct !DILexicalBlock(scope: !22437, file: !3, line: 2350, column: 17)
!22451 = !DILocation(line: 2352, column: 15, scope: !22450)
!22452 = !DILocation(line: 2352, column: 18, scope: !22450)
!22453 = !DILocation(line: 2352, column: 28, scope: !22450)
!22454 = !DILocation(line: 2353, column: 37, scope: !22450)
!22455 = !DILocation(line: 2353, column: 43, scope: !22450)
!22456 = !DILocation(line: 2353, column: 3, scope: !22450)
!22457 = !DILocation(line: 2353, column: 15, scope: !22450)
!22458 = !DILocation(line: 2353, column: 19, scope: !22450)
!22459 = !DILocation(line: 2353, column: 28, scope: !22450)
!22460 = !DILocation(line: 2353, column: 35, scope: !22450)
!22461 = !DILocation(line: 2354, column: 3, scope: !22450)
!22462 = !DILocation(line: 2356, column: 3, scope: !22450)
!22463 = !DILocation(line: 2356, column: 15, scope: !22450)
!22464 = !DILocation(line: 2356, column: 18, scope: !22450)
!22465 = !DILocation(line: 2356, column: 28, scope: !22450)
!22466 = !DILocation(line: 2357, column: 3, scope: !22450)
!22467 = !DILocation(line: 2357, column: 15, scope: !22450)
!22468 = !DILocation(line: 2357, column: 20, scope: !22450)
!22469 = !DILocation(line: 2357, column: 32, scope: !22450)
!22470 = !DILocation(line: 2357, column: 38, scope: !22450)
!22471 = !DILocation(line: 2358, column: 3, scope: !22450)
!22472 = !DILocation(line: 2360, column: 1, scope: !22437)
!22473 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !20040, file: !20040, line: 308, type: !20041, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22474 = !DILocalVariable(name: "m", arg: 1, scope: !22473, file: !20040, line: 308, type: !5596)
!22475 = !DILocation(line: 308, column: 66, scope: !22473)
!22476 = !DILocation(line: 310, column: 10, scope: !22473)
!22477 = !DILocation(line: 310, column: 12, scope: !22473)
!22478 = !DILocation(line: 310, column: 34, scope: !22473)
!22479 = !DILocation(line: 310, column: 39, scope: !22473)
!22480 = !DILocation(line: 310, column: 2, scope: !22473)
