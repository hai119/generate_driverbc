; ModuleID = '../bcout/drivers/net/ethernet/amd/pcnet32.llvm.bc'
source_filename = "drivers/net/ethernet/amd/pcnet32.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_pcnet32_init_module6:\09\09\09"
module asm ".long\09pcnet32_init_module - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.128, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.anon = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.atomic64_t = type { i64 }
%struct.atomic_t = type { i32 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.0, %union.anon.3, %union.anon.4, [48 x i8], %union.anon.5, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.7, i32, i32, i32, i16, i16, %union.anon.9, %union.anon.10, %union.anon.11, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.2 }
%union.anon.2 = type { %struct.net_device* }
%union.anon.3 = type { %struct.sock* }
%struct.sock = type opaque
%union.anon.4 = type { i64 }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { i64, void (%struct.sk_buff*)* }
%union.anon.7 = type { i32 }
%union.anon.9 = type { i32 }
%union.anon.10 = type { i32 }
%union.anon.11 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.ifreq = type { %union.anon.12, %union.anon.13 }
%union.anon.12 = type { [16 x i8] }
%union.anon.13 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.15 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.15 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.16 }
%union.anon.16 = type { %struct.anon.17 }
%struct.anon.17 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.124 }
%union.anon.124 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.125, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.125 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.126 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.126 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.127, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.127 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.43, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.43 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.117, %struct.list_head, %struct.list_head, %union.anon.118 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.44, i8* }
%union.anon.44 = type { i64 }
%struct.lockref = type { %union.anon.115 }
%union.anon.115 = type { %struct.anon.116 }
%struct.anon.116 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.47, %union.anon.107, %struct.atomic_t, [8 x i8] }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.107 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.108, i32 }
%union.anon.108 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.100, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.63, [0 x i64] }
%struct.anon.63 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.64, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.64 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.65 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.70, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.71, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.72, %union.anon.76, %struct.key_restriction* }
%union.anon.70 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.71 = type { i64 }
%union.anon.72 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.73, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.73 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.76 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.80, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.80 = type { %struct.anon.81 }
%struct.anon.81 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.83, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.83 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.84 }
%union.anon.84 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.85 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.85 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.86, %union.anon.87, i32 }
%struct.request_queue = type opaque
%union.anon.86 = type { %struct.list_head }
%union.anon.87 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.88 }
%struct.anon.88 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.92 }
%struct.anon.92 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.99, i32, [12 x i8] }
%union.anon.99 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.100 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.101, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.104 }
%union.anon.101 = type { %struct.anon.102 }
%struct.anon.102 = type { i64, i64 }
%union.anon.104 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.78 }
%union.anon.78 = type { %struct.anon.79, [48 x i8] }
%struct.anon.79 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.117 = type { %struct.list_head }
%union.anon.118 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.109, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.110, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.111, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.114, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.109 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.110 = type { %struct.callback_head }
%union.anon.111 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.49 }
%union.anon.49 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.50, %union.anon.51 }
%union.anon.50 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.51 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.114 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.112 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.112 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.82 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.82 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.spinlock = type { %union.anon.46 }
%union.anon.46 = type { %struct.raw_spinlock }
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.128 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.129, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.129 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcnet32_access = type { i16 (i64, i32)*, void (i64, i32, i16)*, i16 (i64, i32)*, void (i64, i32, i16)*, i16 (i64)*, void (i64, i16)*, void (i64)* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.pcnet32_private = type { %struct.pcnet32_init_block*, %struct.pcnet32_rx_head*, %struct.pcnet32_tx_head*, i64, %struct.pci_dev*, i8*, %struct.sk_buff**, %struct.sk_buff**, i64*, i64*, %struct.pcnet32_access*, %struct.spinlock, i32, i32, i32, i32, i32, i32, i16, i16, i64, i64, i32, i32, %struct.net_device*, %struct.napi_struct, i8, i8, i32, i8, %struct.net_device*, %struct.mii_if_info, %struct.timer_list, i32, i32, i16, [4 x i16] }
%struct.pcnet32_init_block = type { i16, i16, [6 x i8], i16, [2 x i32], i32, i32 }
%struct.pcnet32_rx_head = type { i32, i16, i16, i32, i32 }
%struct.pcnet32_tx_head = type { i32, i16, i16, i32, i32 }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.mii_if_info = type { i32, i32, i32, i32, i8, %struct.net_device*, i32 (%struct.net_device*, i32, i32)*, void (%struct.net_device*, i32, i32, i32)* }
%struct.ethtool_cmd = type { i32, i32, i32, i16, i8, i8, i8, i8, i8, i8, i32, i32, i16, i8, i8, i32, [2 x i32] }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }

@__param_str_debug = internal constant [14 x i8] c"pcnet32.debug\00", align 1, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 -1, align 4, !dbg !7853
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !7687
@__UNIQUE_ID_debugtype333 = internal constant [27 x i8] c"pcnet32.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !7736
@__UNIQUE_ID_debug334 = internal constant [39 x i8] c"pcnet32.parm=debug:pcnet32 debug level\00", section ".modinfo", align 1, !dbg !7741
@__param_str_max_interrupt_work = internal constant [27 x i8] c"pcnet32.max_interrupt_work\00", align 16, !dbg !7855
@max_interrupt_work = internal global i32 2, align 4, !dbg !7857
@__param_max_interrupt_work = internal constant %struct.kernel_param { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_max_interrupt_work, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @max_interrupt_work to i8*) } }, section "__param", align 8, !dbg !7746
@__UNIQUE_ID_max_interrupt_worktype335 = internal constant [40 x i8] c"pcnet32.parmtype=max_interrupt_work:int\00", section ".modinfo", align 1, !dbg !7748
@__UNIQUE_ID_max_interrupt_work336 = internal constant [77 x i8] c"pcnet32.parm=max_interrupt_work:pcnet32 maximum events handled per interrupt\00", section ".modinfo", align 1, !dbg !7753
@__param_str_rx_copybreak = internal constant [21 x i8] c"pcnet32.rx_copybreak\00", align 16, !dbg !7859
@rx_copybreak = internal global i32 200, align 4, !dbg !7864
@__param_rx_copybreak = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_rx_copybreak, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @rx_copybreak to i8*) } }, section "__param", align 8, !dbg !7758
@__UNIQUE_ID_rx_copybreaktype337 = internal constant [34 x i8] c"pcnet32.parmtype=rx_copybreak:int\00", section ".modinfo", align 1, !dbg !7760
@__UNIQUE_ID_rx_copybreak338 = internal constant [76 x i8] c"pcnet32.parm=rx_copybreak:pcnet32 copy breakpoint for copy-only-tiny-frames\00", section ".modinfo", align 1, !dbg !7765
@__param_str_tx_start_pt = internal constant [20 x i8] c"pcnet32.tx_start_pt\00", align 16, !dbg !7866
@tx_start_pt = internal global i32 -1, align 4, !dbg !7868
@__param_tx_start_pt = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_tx_start_pt, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @tx_start_pt to i8*) } }, section "__param", align 8, !dbg !7770
@__UNIQUE_ID_tx_start_pttype339 = internal constant [33 x i8] c"pcnet32.parmtype=tx_start_pt:int\00", section ".modinfo", align 1, !dbg !7772
@__UNIQUE_ID_tx_start_pt340 = internal constant [60 x i8] c"pcnet32.parm=tx_start_pt:pcnet32 transmit start point (0-3)\00", section ".modinfo", align 1, !dbg !7777
@__param_str_pcnet32vlb = internal constant [19 x i8] c"pcnet32.pcnet32vlb\00", align 16, !dbg !7870
@pcnet32vlb = internal global i32 0, align 4, !dbg !7847
@__param_pcnet32vlb = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_pcnet32vlb, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @pcnet32vlb to i8*) } }, section "__param", align 8, !dbg !7782
@__UNIQUE_ID_pcnet32vlbtype341 = internal constant [32 x i8] c"pcnet32.parmtype=pcnet32vlb:int\00", section ".modinfo", align 1, !dbg !7784
@__UNIQUE_ID_pcnet32vlb342 = internal constant [67 x i8] c"pcnet32.parm=pcnet32vlb:pcnet32 Vesa local bus (VLB) support (0/1)\00", section ".modinfo", align 1, !dbg !7787
@__param_str_options = internal constant [16 x i8] c"pcnet32.options\00", align 16, !dbg !7875
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_options = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @options to i8*) }, align 8, !dbg !7878
@__param_options = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_options, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_options } }, section "__param", align 8, !dbg !7792
@__UNIQUE_ID_optionstype343 = internal constant [38 x i8] c"pcnet32.parmtype=options:array of int\00", section ".modinfo", align 1, !dbg !7794
@__UNIQUE_ID_options344 = internal constant [62 x i8] c"pcnet32.parm=options:pcnet32 initial option setting(s) (0-15)\00", section ".modinfo", align 1, !dbg !7799
@__param_str_full_duplex = internal constant [20 x i8] c"pcnet32.full_duplex\00", align 16, !dbg !7883
@__param_arr_full_duplex = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @full_duplex to i8*) }, align 8, !dbg !7885
@__param_full_duplex = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_full_duplex, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_full_duplex } }, section "__param", align 8, !dbg !7804
@__UNIQUE_ID_full_duplextype345 = internal constant [42 x i8] c"pcnet32.parmtype=full_duplex:array of int\00", section ".modinfo", align 1, !dbg !7806
@__UNIQUE_ID_full_duplex346 = internal constant [60 x i8] c"pcnet32.parm=full_duplex:pcnet32 full duplex setting(s) (1)\00", section ".modinfo", align 1, !dbg !7811
@__param_str_homepna = internal constant [16 x i8] c"pcnet32.homepna\00", align 16, !dbg !7889
@__param_arr_homepna = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @homepna to i8*) }, align 8, !dbg !7891
@__param_homepna = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_homepna, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_homepna } }, section "__param", align 8, !dbg !7813
@__UNIQUE_ID_homepnatype347 = internal constant [38 x i8] c"pcnet32.parmtype=homepna:array of int\00", section ".modinfo", align 1, !dbg !7815
@__UNIQUE_ID_homepna348 = internal constant [100 x i8] c"pcnet32.parm=homepna:pcnet32 mode for 79C978 cards (1 for HomePNA, 0 for Ethernet, default Ethernet\00", section ".modinfo", align 1, !dbg !7817
@__UNIQUE_ID_author349 = internal constant [35 x i8] c"pcnet32.author=Thomas Bogendoerfer\00", section ".modinfo", align 1, !dbg !7822
@__UNIQUE_ID_description350 = internal constant [69 x i8] c"pcnet32.description=Driver for PCnet32 and PCnetPCI based ethercards\00", section ".modinfo", align 1, !dbg !7827
@__UNIQUE_ID_file351 = internal constant [46 x i8] c"pcnet32.file=drivers/net/ethernet/amd/pcnet32\00", section ".modinfo", align 1, !dbg !7832
@__UNIQUE_ID_license352 = internal constant [20 x i8] c"pcnet32.license=GPL\00", section ".modinfo", align 1, !dbg !7837
@pcnet32_dev = internal global %struct.net_device* null, align 8, !dbg !7849
@ioport_resource = external dso_local global %struct.resource, align 8
@pcnet32_have_pci = internal global i32 0, align 4, !dbg !7851
@pcnet32_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([4 x %struct.pci_device_id], [4 x %struct.pci_device_id]* @pcnet32_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @pcnet32_probe_pci, void (%struct.pci_dev*)* @pcnet32_remove_one, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @pcnet32_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.pci_dynids zeroinitializer }, align 8, !dbg !7895
@__UNIQUE_ID___addressable_pcnet32_init_module353 = internal global i8* bitcast (i32 ()* @pcnet32_init_module to i8*), section ".discard.addressable", align 8, !dbg !7840
@__exitcall_pcnet32_cleanup_module = internal global void ()* @pcnet32_cleanup_module, section ".exitcall.exit", align 8, !dbg !7842
@options = internal global [8 x i32] zeroinitializer, align 16, !dbg !7880
@full_duplex = internal global [8 x i32] zeroinitializer, align 16, !dbg !7887
@homepna = internal global [8 x i32] zeroinitializer, align 16, !dbg !7893
@.str = private unnamed_addr constant [8 x i8] c"pcnet32\00", align 1
@pcnet32_pci_tbl = internal constant [4 x %struct.pci_device_id] [%struct.pci_device_id { i32 4130, i32 8193, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4130, i32 8192, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4131, i32 8192, i32 -1, i32 -1, i32 131072, i32 16776960, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !7897
@pcnet32_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @pcnet32_pm_suspend, i32 (%struct.device*)* @pcnet32_pm_resume, i32 (%struct.device*)* @pcnet32_pm_suspend, i32 (%struct.device*)* @pcnet32_pm_resume, i32 (%struct.device*)* @pcnet32_pm_suspend, i32 (%struct.device*)* @pcnet32_pm_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !7933
@pcnet32_debug = internal global i32 0, align 4, !dbg !7900
@.str.1 = private unnamed_addr constant [46 x i8] c"\013pcnet32: failed to enable device -- err=%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"\013pcnet32: card has no PCI IO resources, aborting\0A\00", align 1
@.str.3 = private unnamed_addr constant [66 x i8] c"\013pcnet32: architecture does not support 32bit PCI busmaster DMA\0A\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"pcnet32_probe_pci\00", align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"\013pcnet32: io address range already allocated\0A\00", align 1
@pcnet32_wio = internal constant %struct.pcnet32_access { i16 (i64, i32)* @pcnet32_wio_read_csr, void (i64, i32, i16)* @pcnet32_wio_write_csr, i16 (i64, i32)* @pcnet32_wio_read_bcr, void (i64, i32, i16)* @pcnet32_wio_write_bcr, i16 (i64)* @pcnet32_wio_read_rap, void (i64, i16)* @pcnet32_wio_write_rap, void (i64)* @pcnet32_wio_reset }, align 8, !dbg !7902
@pcnet32_dwio = internal constant %struct.pcnet32_access { i16 (i64, i32)* @pcnet32_dwio_read_csr, void (i64, i32, i16)* @pcnet32_dwio_write_csr, i16 (i64, i32)* @pcnet32_dwio_read_bcr, void (i64, i32, i16)* @pcnet32_dwio_write_bcr, i16 (i64)* @pcnet32_dwio_read_rap, void (i64, i16)* @pcnet32_dwio_write_rap, void (i64)* @pcnet32_dwio_reset }, align 8, !dbg !7904
@.str.6 = private unnamed_addr constant [30 x i8] c"\013pcnet32: No access methods\0A\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"\016pcnet32:   PCnet chip version is %#x\0A\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"\016pcnet32: Unsupported chip version\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"PCnet/PCI 79C970\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"PCnet/32 79C965\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"PCnet/PCI II 79C970A\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"PCnet/FAST 79C971\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"PCnet/FAST+ 79C972\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"PCnet/FAST III 79C973\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"PCnet/Home 79C978\00", align 1
@cards_found = internal global i32 0, align 4, !dbg !7906
@.str.16 = private unnamed_addr constant [37 x i8] c"\017pcnet32: media set to %sMbit mode\0A\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"10\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"PCnet/FAST III 79C975\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"PCnet/PRO 79C976\00", align 1
@.str.21 = private unnamed_addr constant [47 x i8] c"\016pcnet32: PCnet version %#x, no PCnet32 chip\0A\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"\016pcnet32: %s at %#3lx,\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"\01c warning: CSR address invalid,\0A\00", align 1
@.str.24 = private unnamed_addr constant [45 x i8] c"\016pcnet32:     using instead PROM address of\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"\01c %pM\00", align 1
@.str.26 = private unnamed_addr constant [36 x i8] c"\016pcnet32:     tx_start_pt(0x%04x):\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"\01c  20 bytes,\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"\01c  64 bytes,\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"\01c 128 bytes,\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"\01c~220 bytes,\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"\01c BCR18(%x):\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"\01cBurstWrEn \00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"\01cBurstRdEn \00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"\01cDWordIO \00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"\01cNoUFlow \00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"\016pcnet32:     SRAMSIZE=0x%04x,\00", align 1
@.str.37 = private unnamed_addr constant [20 x i8] c"\01c SRAM_BND=0x%04x,\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"\01cLowLatRx\00", align 1
@.str.39 = private unnamed_addr constant [46 x i8] c"\013pcnet32: Coherent memory allocation failed\0A\00", align 1
@options_mapping = internal constant [16 x i8] c"\04\00\00\04\81\04\04\04\04\03\83\03\01C\C3\04", align 16, !dbg !7908
@.str.40 = private unnamed_addr constant [20 x i8] c"\01c assigned IRQ %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [31 x i8] c"\01c, failed to detect IRQ line\0A\00", align 1
@.str.42 = private unnamed_addr constant [19 x i8] c"\01c, probed IRQ %d\0A\00", align 1
@.str.43 = private unnamed_addr constant [46 x i8] c"\016pcnet32: Found PHY %04x:%04x at address %d\0A\00", align 1
@pcnet32_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @pcnet32_open, i32 (%struct.net_device*)* @pcnet32_close, i32 (%struct.sk_buff*, %struct.net_device*)* @pcnet32_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @pcnet32_set_multicast_list, i32 (%struct.net_device*, i8*)* @eth_mac_addr, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @pcnet32_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @pcnet32_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* @pcnet32_get_stats, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !7917
@pcnet32_ethtool_ops = internal constant %struct.ethtool_ops { i32 0, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @pcnet32_get_drvinfo, i32 (%struct.net_device*)* @pcnet32_get_regs_len, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* @pcnet32_get_regs, void (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*)* @pcnet32_get_msglevel, void (%struct.net_device*, i32)* @pcnet32_set_msglevel, i32 (%struct.net_device*)* @pcnet32_nway_reset, i32 (%struct.net_device*)* @pcnet32_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, void (%struct.net_device*, %struct.ethtool_ringparam*)* @pcnet32_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* @pcnet32_set_ringparam, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* null, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* null, void (%struct.net_device*, %struct.ethtool_test*, i64*)* @pcnet32_ethtool_test, void (%struct.net_device*, i32, i8*)* @pcnet32_get_strings, i32 (%struct.net_device*, i32)* @pcnet32_set_phys_id, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @pcnet32_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @pcnet32_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @pcnet32_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !7919
@.str.44 = private unnamed_addr constant [33 x i8] c"\016pcnet32: %s: registered as %s\0A\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"Impossible packet size %d!\0A\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"Runt packet!\0A\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c"DMA mapping error.\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !7911
@.str.48 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.50 = private unnamed_addr constant [38 x i8] c"Tx error status=%04x err_status=%08x\0A\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"Tx FIFO error!\0A\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"out-of-sync dirty pointer, %d vs. %d, full=%d\0A\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"%s timed out waiting for stop\0A\00", align 1
@__func__.pcnet32_restart = private unnamed_addr constant [16 x i8] c"pcnet32_restart\00", align 1
@.str.54 = private unnamed_addr constant [28 x i8] c"%s netdev_alloc_skb failed\0A\00", align 1
@__func__.pcnet32_init_ring = private unnamed_addr constant [18 x i8] c"pcnet32_init_ring\00", align 1
@.str.55 = private unnamed_addr constant [26 x i8] c"%s pci dma mapping error\0A\00", align 1
@.str.56 = private unnamed_addr constant [35 x i8] c"Coherent memory allocation failed\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.57 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.58 = private unnamed_addr constant [11 x i8] c"link down\0A\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"link up, %uMbps, %s-duplex\0A\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"half\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"link up\0A\00", align 1
@.str.63 = private unnamed_addr constant [21 x i8] c"Using PHY number %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.65 = private unnamed_addr constant [42 x i8] c"%s() irq %d tx/rx rings %#x/%#x init %#x\0A\00", align 1
@__func__.pcnet32_open = private unnamed_addr constant [13 x i8] c"pcnet32_open\00", align 1
@.str.66 = private unnamed_addr constant [27 x i8] c"Setting 100Mb-Full Duplex\0A\00", align 1
@.str.67 = private unnamed_addr constant [56 x i8] c"pcnet32 open after %d ticks, init block %#x csr0 %4.4x\0A\00", align 1
@.str.68 = private unnamed_addr constant [39 x i8] c"interrupt  csr0=%#2.2x new csr=%#2.2x\0A\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"Bus master arbitration failure, status %4.4x\0A\00", align 1
@.str.70 = private unnamed_addr constant [32 x i8] c"exiting interrupt, csr0=%#4.4x\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.72 = private unnamed_addr constant [43 x i8] c"Shutting down ethercard, status was %2.2x\0A\00", align 1
@.str.73 = private unnamed_addr constant [25 x i8] c"%s() called, csr0 %4.4x\0A\00", align 1
@__func__.pcnet32_start_xmit = private unnamed_addr constant [19 x i8] c"pcnet32_start_xmit\00", align 1
@.str.74 = private unnamed_addr constant [26 x i8] c"Promiscuous mode enabled\0A\00", align 1
@.str.75 = private unnamed_addr constant [29 x i8] c"Error getting into suspend!\0A\00", align 1
@.str.76 = private unnamed_addr constant [60 x i8] c"\013pcnet32: %s: transmit timed out, status %4.4x, resetting\0A\00", align 1
@.str.77 = private unnamed_addr constant [54 x i8] c"\017 Ring data dump: dirty_tx %d cur_tx %d%s cur_rx %d.\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c" (full)\00", align 1
@.str.79 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.80 = private unnamed_addr constant [23 x i8] c"%s %08x %04x %08x %04x\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c"\0A \00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"VLB 0x%lx\00", align 1
@.str.84 = private unnamed_addr constant [37 x i8] c"Ring Param Settings: RX: %d, TX: %d\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@__func__.pcnet32_realloc_rx_ring = private unnamed_addr constant [24 x i8] c"pcnet32_realloc_rx_ring\00", align 1
@.str.85 = private unnamed_addr constant [23 x i8] c"%s dma mapping failed\0A\00", align 1
@.str.86 = private unnamed_addr constant [22 x i8] c"Loopback test failed\0A\00", align 1
@.str.87 = private unnamed_addr constant [22 x i8] c"Loopback test passed\0A\00", align 1
@.str.88 = private unnamed_addr constant [48 x i8] c"No tests to run (specify 'Offline' on ethtool)\0A\00", align 1
@pcnet32_loopback_test.data_len = internal constant i32 60, align 4, !dbg !7921
@.str.89 = private unnamed_addr constant [34 x i8] c"Cannot allocate skb at line: %d!\0A\00", align 1
@.str.90 = private unnamed_addr constant [32 x i8] c"DMA mapping error at line: %d!\0A\00", align 1
@.str.91 = private unnamed_addr constant [26 x i8] c"Desc %d failed to reset!\0A\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"RX loopback packets:\0A\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"Packet %d: \00", align 1
@.str.94 = private unnamed_addr constant [8 x i8] c"\01c %02x\00", align 1
@.str.95 = private unnamed_addr constant [4 x i8] c"\01c\0A\00", align 1
@.str.96 = private unnamed_addr constant [35 x i8] c"Error in compare! %2x - %02x %02x\0A\00", align 1
@pcnet32_gstrings_test = internal constant [1 x [32 x i8]] [[32 x i8] c"Loopback test  (offline)\00\00\00\00\00\00\00\00"], align 16, !dbg !7929
@tx_start = internal global i32 1, align 4, !dbg !7935
@pcnet32_portlist = internal global [5 x i32] [i32 768, i32 800, i32 832, i32 864, i32 0], align 16, !dbg !7937
@.str.97 = private unnamed_addr constant [27 x i8] c"\016pcnet32: %d cards_found\0A\00", align 1
@.str.98 = private unnamed_addr constant [20 x i8] c"pcnet32_probe_vlbus\00", align 1
@llvm.used = appending global [31 x i8*] [i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_debugtype333, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_debug334, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_max_interrupt_work to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_max_interrupt_worktype335, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__UNIQUE_ID_max_interrupt_work336, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_rx_copybreak to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_rx_copybreaktype337, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__UNIQUE_ID_rx_copybreak338, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_tx_start_pt to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_tx_start_pttype339, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_tx_start_pt340, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_pcnet32vlb to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_pcnet32vlbtype341, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_pcnet32vlb342, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_options to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_optionstype343, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__UNIQUE_ID_options344, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_full_duplex to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_full_duplextype345, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_full_duplex346, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_homepna to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_homepnatype347, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__UNIQUE_ID_homepna348, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_author349, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__UNIQUE_ID_description350, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_file351, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license352, i32 0, i32 0), i8* bitcast (void ()* @pcnet32_cleanup_module to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pcnet32_init_module353 to i8*), i8* bitcast (void ()** @__exitcall_pcnet32_cleanup_module to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_cleanup_module() #0 section ".exit.text" !dbg !7947 {
entry:
  %next_dev = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %next_dev, metadata !7948, metadata !DIExpression()), !dbg !7949
  br label %while.cond, !dbg !7950

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.net_device*, %struct.net_device** @pcnet32_dev, align 8, !dbg !7951
  %tobool = icmp ne %struct.net_device* %0, null, !dbg !7950
  br i1 %tobool, label %while.body, label %while.end, !dbg !7950

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !7952, metadata !DIExpression()), !dbg !7954
  %1 = load %struct.net_device*, %struct.net_device** @pcnet32_dev, align 8, !dbg !7955
  %call = call i8* @netdev_priv(%struct.net_device* %1) #12, !dbg !7956
  %2 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !7956
  store %struct.pcnet32_private* %2, %struct.pcnet32_private** %lp, align 8, !dbg !7954
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !7957
  %next = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 30, !dbg !7958
  %4 = load %struct.net_device*, %struct.net_device** %next, align 8, !dbg !7958
  store %struct.net_device* %4, %struct.net_device** %next_dev, align 8, !dbg !7959
  %5 = load %struct.net_device*, %struct.net_device** @pcnet32_dev, align 8, !dbg !7960
  call void @unregister_netdev(%struct.net_device* %5) #12, !dbg !7961
  %6 = load %struct.net_device*, %struct.net_device** @pcnet32_dev, align 8, !dbg !7962
  call void @pcnet32_free_ring(%struct.net_device* %6) #12, !dbg !7963
  %7 = load %struct.net_device*, %struct.net_device** @pcnet32_dev, align 8, !dbg !7964
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 5, !dbg !7964
  %8 = load i64, i64* %base_addr, align 8, !dbg !7964
  call void @__release_region(%struct.resource* @ioport_resource, i64 %8, i64 32) #12, !dbg !7964
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !7965
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 4, !dbg !7966
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !7966
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !7967
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !7968
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 0, !dbg !7969
  %12 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block, align 8, !dbg !7969
  %13 = bitcast %struct.pcnet32_init_block* %12 to i8*, !dbg !7968
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !7970
  %init_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 3, !dbg !7971
  %15 = load i64, i64* %init_dma_addr, align 8, !dbg !7971
  call void @dma_free_coherent(%struct.device* %dev, i64 28, i8* %13, i64 %15) #12, !dbg !7972
  %16 = load %struct.net_device*, %struct.net_device** @pcnet32_dev, align 8, !dbg !7973
  call void @free_netdev(%struct.net_device* %16) #12, !dbg !7974
  %17 = load %struct.net_device*, %struct.net_device** %next_dev, align 8, !dbg !7975
  store %struct.net_device* %17, %struct.net_device** @pcnet32_dev, align 8, !dbg !7976
  br label %while.cond, !dbg !7950, !llvm.loop !7977

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* @pcnet32_have_pci, align 4, !dbg !7979
  %tobool1 = icmp ne i32 %18, 0, !dbg !7979
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7981

if.then:                                          ; preds = %while.end
  call void @pci_unregister_driver(%struct.pci_driver* @pcnet32_driver) #12, !dbg !7982
  br label %if.end, !dbg !7982

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !7983
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #2 !dbg !7984 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !7987, metadata !DIExpression()), !dbg !7988
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !7989
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !7990
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !7991
  ret i8* %add.ptr, !dbg !7992
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_free_ring(%struct.net_device* %dev) #2 !dbg !7993 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !7994, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !7996, metadata !DIExpression()), !dbg !7997
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !7998
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !7999
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !7999
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !7997
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8000
  %tx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 6, !dbg !8001
  %3 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff, align 8, !dbg !8001
  %4 = bitcast %struct.sk_buff** %3 to i8*, !dbg !8000
  call void @kfree(i8* %4) #12, !dbg !8002
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8003
  %tx_skbuff1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 6, !dbg !8004
  store %struct.sk_buff** null, %struct.sk_buff*** %tx_skbuff1, align 8, !dbg !8005
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8006
  %rx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 7, !dbg !8007
  %7 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !8007
  %8 = bitcast %struct.sk_buff** %7 to i8*, !dbg !8006
  call void @kfree(i8* %8) #12, !dbg !8008
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8009
  %rx_skbuff2 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 7, !dbg !8010
  store %struct.sk_buff** null, %struct.sk_buff*** %rx_skbuff2, align 8, !dbg !8011
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8012
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 8, !dbg !8013
  %11 = load i64*, i64** %tx_dma_addr, align 8, !dbg !8013
  %12 = bitcast i64* %11 to i8*, !dbg !8012
  call void @kfree(i8* %12) #12, !dbg !8014
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8015
  %tx_dma_addr3 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 8, !dbg !8016
  store i64* null, i64** %tx_dma_addr3, align 8, !dbg !8017
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8018
  %rx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 9, !dbg !8019
  %15 = load i64*, i64** %rx_dma_addr, align 8, !dbg !8019
  %16 = bitcast i64* %15 to i8*, !dbg !8018
  call void @kfree(i8* %16) #12, !dbg !8020
  %17 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8021
  %rx_dma_addr4 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %17, i32 0, i32 9, !dbg !8022
  store i64* null, i64** %rx_dma_addr4, align 8, !dbg !8023
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8024
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 2, !dbg !8026
  %19 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !8026
  %tobool = icmp ne %struct.pcnet32_tx_head* %19, null, !dbg !8024
  br i1 %tobool, label %if.then, label %if.end, !dbg !8027

if.then:                                          ; preds = %entry
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8028
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 4, !dbg !8030
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !8030
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !8031
  %22 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8032
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %22, i32 0, i32 15, !dbg !8033
  %23 = load i32, i32* %tx_ring_size, align 4, !dbg !8033
  %conv = zext i32 %23 to i64, !dbg !8032
  %mul = mul i64 16, %conv, !dbg !8034
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8035
  %tx_ring6 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 2, !dbg !8036
  %25 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring6, align 8, !dbg !8036
  %26 = bitcast %struct.pcnet32_tx_head* %25 to i8*, !dbg !8035
  %27 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8037
  %tx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %27, i32 0, i32 21, !dbg !8038
  %28 = load i64, i64* %tx_ring_dma_addr, align 8, !dbg !8038
  call void @dma_free_coherent(%struct.device* %dev5, i64 %mul, i8* %26, i64 %28) #12, !dbg !8039
  %29 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8040
  %tx_ring7 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %29, i32 0, i32 2, !dbg !8041
  store %struct.pcnet32_tx_head* null, %struct.pcnet32_tx_head** %tx_ring7, align 8, !dbg !8042
  br label %if.end, !dbg !8043

if.end:                                           ; preds = %if.then, %entry
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8044
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 1, !dbg !8046
  %31 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !8046
  %tobool8 = icmp ne %struct.pcnet32_rx_head* %31, null, !dbg !8044
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !8047

if.then9:                                         ; preds = %if.end
  %32 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8048
  %pci_dev10 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %32, i32 0, i32 4, !dbg !8050
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev10, align 8, !dbg !8050
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !8051
  %34 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8052
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %34, i32 0, i32 14, !dbg !8053
  %35 = load i32, i32* %rx_ring_size, align 8, !dbg !8053
  %conv12 = zext i32 %35 to i64, !dbg !8052
  %mul13 = mul i64 16, %conv12, !dbg !8054
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8055
  %rx_ring14 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 1, !dbg !8056
  %37 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring14, align 8, !dbg !8056
  %38 = bitcast %struct.pcnet32_rx_head* %37 to i8*, !dbg !8055
  %39 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8057
  %rx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %39, i32 0, i32 20, !dbg !8058
  %40 = load i64, i64* %rx_ring_dma_addr, align 8, !dbg !8058
  call void @dma_free_coherent(%struct.device* %dev11, i64 %mul13, i8* %38, i64 %40) #12, !dbg !8059
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8060
  %rx_ring15 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 1, !dbg !8061
  store %struct.pcnet32_rx_head* null, %struct.pcnet32_rx_head** %rx_ring15, align 8, !dbg !8062
  br label %if.end16, !dbg !8063

if.end16:                                         ; preds = %if.then9, %if.end
  ret void, !dbg !8064
}

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !8065 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8068, metadata !DIExpression()), !dbg !8069
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8070, metadata !DIExpression()), !dbg !8071
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !8072, metadata !DIExpression()), !dbg !8073
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !8074, metadata !DIExpression()), !dbg !8075
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8076
  %1 = load i64, i64* %size.addr, align 8, !dbg !8077
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !8078
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !8079
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #12, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #3

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_init_module() #0 section ".init.text" !dbg !8082 {
entry:
  %0 = load i32, i32* @debug, align 4, !dbg !8085
  %call = call i32 @netif_msg_init(i32 %0, i32 7) #12, !dbg !8086
  store i32 %call, i32* @pcnet32_debug, align 4, !dbg !8087
  %1 = load i32, i32* @tx_start_pt, align 4, !dbg !8088
  %cmp = icmp sge i32 %1, 0, !dbg !8090
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8091

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @tx_start_pt, align 4, !dbg !8092
  %cmp1 = icmp sle i32 %2, 3, !dbg !8093
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8094

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* @tx_start_pt, align 4, !dbg !8095
  store i32 %3, i32* @tx_start, align 4, !dbg !8096
  br label %if.end, !dbg !8097

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call2 = call i32 @__pci_register_driver(%struct.pci_driver* @pcnet32_driver, %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #12, !dbg !8098
  %tobool = icmp ne i32 %call2, 0, !dbg !8098
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !8100

if.then3:                                         ; preds = %if.end
  store i32 1, i32* @pcnet32_have_pci, align 4, !dbg !8101
  br label %if.end4, !dbg !8102

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* @pcnet32vlb, align 4, !dbg !8103
  %tobool5 = icmp ne i32 %4, 0, !dbg !8103
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8105

if.then6:                                         ; preds = %if.end4
  call void @pcnet32_probe_vlbus(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @pcnet32_portlist, i64 0, i64 0)) #12, !dbg !8106
  br label %if.end7, !dbg !8106

if.end7:                                          ; preds = %if.then6, %if.end4
  %5 = load i32, i32* @cards_found, align 4, !dbg !8107
  %tobool8 = icmp ne i32 %5, 0, !dbg !8107
  br i1 %tobool8, label %land.lhs.true9, label %if.end13, !dbg !8109

land.lhs.true9:                                   ; preds = %if.end7
  %6 = load i32, i32* @pcnet32_debug, align 4, !dbg !8110
  %and = and i32 %6, 2, !dbg !8111
  %tobool10 = icmp ne i32 %and, 0, !dbg !8111
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !8112

if.then11:                                        ; preds = %land.lhs.true9
  %7 = load i32, i32* @cards_found, align 4, !dbg !8113
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.97, i64 0, i64 0), i32 %7) #13, !dbg !8113
  br label %if.end13, !dbg !8113

if.end13:                                         ; preds = %if.then11, %land.lhs.true9, %if.end7
  %8 = load i32, i32* @pcnet32_have_pci, align 4, !dbg !8114
  %9 = load i32, i32* @cards_found, align 4, !dbg !8115
  %add = add i32 %8, %9, !dbg !8116
  %tobool14 = icmp ne i32 %add, 0, !dbg !8117
  %10 = zext i1 %tobool14 to i64, !dbg !8117
  %cond = select i1 %tobool14, i32 0, i32 -19, !dbg !8117
  ret i32 %cond, !dbg !8118
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_probe_pci(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !8119 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %ioaddr = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8120, metadata !DIExpression()), !dbg !8121
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !8122, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !8124, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8126, metadata !DIExpression()), !dbg !8127
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8128
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #12, !dbg !8129
  store i32 %call, i32* %err, align 4, !dbg !8130
  %1 = load i32, i32* %err, align 4, !dbg !8131
  %cmp = icmp slt i32 %1, 0, !dbg !8133
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8134

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @pcnet32_debug, align 4, !dbg !8135
  %and = and i32 %2, 2, !dbg !8138
  %tobool = icmp ne i32 %and, 0, !dbg !8138
  br i1 %tobool, label %if.then1, label %if.end, !dbg !8139

if.then1:                                         ; preds = %if.then
  %3 = load i32, i32* %err, align 4, !dbg !8140
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 %3) #13, !dbg !8140
  br label %if.end, !dbg !8140

if.end:                                           ; preds = %if.then1, %if.then
  %4 = load i32, i32* %err, align 4, !dbg !8141
  store i32 %4, i32* %retval, align 4, !dbg !8142
  br label %return, !dbg !8142

if.end3:                                          ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8143
  call void @pci_set_master(%struct.pci_dev* %5) #12, !dbg !8144
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8145
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !8145
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8145
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !8145
  %7 = load i64, i64* %start, align 8, !dbg !8145
  store i64 %7, i64* %ioaddr, align 8, !dbg !8146
  %8 = load i64, i64* %ioaddr, align 8, !dbg !8147
  %tobool4 = icmp ne i64 %8, 0, !dbg !8147
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !8149

if.then5:                                         ; preds = %if.end3
  %9 = load i32, i32* @pcnet32_debug, align 4, !dbg !8150
  %and6 = and i32 %9, 2, !dbg !8153
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8153
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !8154

if.then8:                                         ; preds = %if.then5
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !8155
  br label %if.end10, !dbg !8155

if.end10:                                         ; preds = %if.then8, %if.then5
  store i32 -19, i32* %err, align 4, !dbg !8156
  br label %err_disable_dev, !dbg !8157

if.end11:                                         ; preds = %if.end3
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8158
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !8159
  %call12 = call i32 @dma_set_mask(%struct.device* %dev, i64 4294967295) #12, !dbg !8160
  store i32 %call12, i32* %err, align 4, !dbg !8161
  %11 = load i32, i32* %err, align 4, !dbg !8162
  %tobool13 = icmp ne i32 %11, 0, !dbg !8162
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !8164

if.then14:                                        ; preds = %if.end11
  %12 = load i32, i32* @pcnet32_debug, align 4, !dbg !8165
  %and15 = and i32 %12, 2, !dbg !8168
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8168
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !8169

if.then17:                                        ; preds = %if.then14
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !8170
  br label %if.end19, !dbg !8170

if.end19:                                         ; preds = %if.then17, %if.then14
  br label %err_disable_dev, !dbg !8171

if.end20:                                         ; preds = %if.end11
  %13 = load i64, i64* %ioaddr, align 8, !dbg !8172
  %call21 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %13, i64 32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 0) #12, !dbg !8172
  %tobool22 = icmp ne %struct.resource* %call21, null, !dbg !8172
  br i1 %tobool22, label %if.end29, label %if.then23, !dbg !8174

if.then23:                                        ; preds = %if.end20
  %14 = load i32, i32* @pcnet32_debug, align 4, !dbg !8175
  %and24 = and i32 %14, 2, !dbg !8178
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8178
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8179

if.then26:                                        ; preds = %if.then23
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !8180
  br label %if.end28, !dbg !8180

if.end28:                                         ; preds = %if.then26, %if.then23
  store i32 -16, i32* %err, align 4, !dbg !8181
  br label %err_disable_dev, !dbg !8182

if.end29:                                         ; preds = %if.end20
  %15 = load i64, i64* %ioaddr, align 8, !dbg !8183
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8184
  %call30 = call i32 @pcnet32_probe1(i64 %15, i32 1, %struct.pci_dev* %16) #12, !dbg !8185
  store i32 %call30, i32* %err, align 4, !dbg !8186
  br label %err_disable_dev, !dbg !8187

err_disable_dev:                                  ; preds = %if.end29, %if.end28, %if.end19, %if.end10
  call void @llvm.dbg.label(metadata !8188), !dbg !8189
  %17 = load i32, i32* %err, align 4, !dbg !8190
  %cmp31 = icmp slt i32 %17, 0, !dbg !8192
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !8193

if.then32:                                        ; preds = %err_disable_dev
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8194
  call void @pci_disable_device(%struct.pci_dev* %18) #12, !dbg !8195
  br label %if.end33, !dbg !8195

if.end33:                                         ; preds = %if.then32, %err_disable_dev
  %19 = load i32, i32* %err, align 4, !dbg !8196
  store i32 %19, i32* %retval, align 4, !dbg !8197
  br label %return, !dbg !8197

return:                                           ; preds = %if.end33, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !8198
  ret i32 %20, !dbg !8198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_remove_one(%struct.pci_dev* %pdev) #2 !dbg !8199 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8200, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !8202, metadata !DIExpression()), !dbg !8203
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8204
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !8205
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !8205
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !8203
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8206
  %tobool = icmp ne %struct.net_device* %2, null, !dbg !8206
  br i1 %tobool, label %if.then, label %if.end, !dbg !8208

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !8209, metadata !DIExpression()), !dbg !8211
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8212
  %call1 = call i8* @netdev_priv(%struct.net_device* %3) #12, !dbg !8213
  %4 = bitcast i8* %call1 to %struct.pcnet32_private*, !dbg !8213
  store %struct.pcnet32_private* %4, %struct.pcnet32_private** %lp, align 8, !dbg !8211
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8214
  call void @unregister_netdev(%struct.net_device* %5) #12, !dbg !8215
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8216
  call void @pcnet32_free_ring(%struct.net_device* %6) #12, !dbg !8217
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8218
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 5, !dbg !8218
  %8 = load i64, i64* %base_addr, align 8, !dbg !8218
  call void @__release_region(%struct.resource* @ioport_resource, i64 %8, i64 32) #12, !dbg !8218
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8219
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 4, !dbg !8220
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !8220
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !8221
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8222
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 0, !dbg !8223
  %12 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block, align 8, !dbg !8223
  %13 = bitcast %struct.pcnet32_init_block* %12 to i8*, !dbg !8222
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8224
  %init_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 3, !dbg !8225
  %15 = load i64, i64* %init_dma_addr, align 8, !dbg !8225
  call void @dma_free_coherent(%struct.device* %dev2, i64 28, i8* %13, i64 %15) #12, !dbg !8226
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8227
  call void @free_netdev(%struct.net_device* %16) #12, !dbg !8228
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8229
  call void @pci_disable_device(%struct.pci_dev* %17) #12, !dbg !8230
  br label %if.end, !dbg !8231

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8232
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #3

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #3

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_probe1(i64 %ioaddr, i32 %shared, %struct.pci_dev* %pdev) #2 !dbg !8233 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !8242
  %retval = alloca i32, align 4
  %ioaddr.addr = alloca i64, align 8
  %shared.addr = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %i = alloca i32, align 4
  %media = alloca i32, align 4
  %fdx = alloca i32, align 4
  %mii = alloca i32, align 4
  %fset = alloca i32, align 4
  %dxsuflo = alloca i32, align 4
  %sram = alloca i32, align 4
  %chip_version = alloca i32, align 4
  %chipname = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %a = alloca %struct.pcnet32_access*, align 8
  %promaddr = alloca [6 x i8], align 1
  %ret = alloca i32, align 4
  %val = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %irq_mask = alloca i64, align 8
  %id1 = alloca i16, align 2
  %id2 = alloca i16, align 2
  store i64 %ioaddr, i64* %ioaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ioaddr.addr, metadata !8245, metadata !DIExpression()), !dbg !8246
  store i32 %shared, i32* %shared.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shared.addr, metadata !8247, metadata !DIExpression()), !dbg !8248
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8249, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !8251, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8253, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.declare(metadata i32* %media, metadata !8255, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.declare(metadata i32* %fdx, metadata !8257, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.declare(metadata i32* %mii, metadata !8259, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.declare(metadata i32* %fset, metadata !8261, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.declare(metadata i32* %dxsuflo, metadata !8263, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.declare(metadata i32* %sram, metadata !8265, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %chip_version, metadata !8267, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.declare(metadata i8** %chipname, metadata !8269, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !8271, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.declare(metadata %struct.pcnet32_access** %a, metadata !8273, metadata !DIExpression()), !dbg !8274
  store %struct.pcnet32_access* null, %struct.pcnet32_access** %a, align 8, !dbg !8274
  call void @llvm.dbg.declare(metadata [6 x i8]* %promaddr, metadata !8275, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8277, metadata !DIExpression()), !dbg !8278
  store i32 -19, i32* %ret, align 4, !dbg !8278
  %0 = load i64, i64* %ioaddr.addr, align 8, !dbg !8279
  call void @pcnet32_wio_reset(i64 %0) #12, !dbg !8280
  %1 = load i64, i64* %ioaddr.addr, align 8, !dbg !8281
  %call = call zeroext i16 @pcnet32_wio_read_csr(i64 %1, i32 0) #12, !dbg !8283
  %conv = zext i16 %call to i32, !dbg !8283
  %cmp = icmp eq i32 %conv, 4, !dbg !8284
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8285

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %ioaddr.addr, align 8, !dbg !8286
  %call2 = call i32 @pcnet32_wio_check(i64 %2) #12, !dbg !8287
  %tobool = icmp ne i32 %call2, 0, !dbg !8287
  br i1 %tobool, label %if.then, label %if.else, !dbg !8288

if.then:                                          ; preds = %land.lhs.true
  store %struct.pcnet32_access* @pcnet32_wio, %struct.pcnet32_access** %a, align 8, !dbg !8289
  br label %if.end16, !dbg !8291

if.else:                                          ; preds = %land.lhs.true, %entry
  %3 = load i64, i64* %ioaddr.addr, align 8, !dbg !8292
  call void @pcnet32_dwio_reset(i64 %3) #12, !dbg !8294
  %4 = load i64, i64* %ioaddr.addr, align 8, !dbg !8295
  %call3 = call zeroext i16 @pcnet32_dwio_read_csr(i64 %4, i32 0) #12, !dbg !8297
  %conv4 = zext i16 %call3 to i32, !dbg !8297
  %cmp5 = icmp eq i32 %conv4, 4, !dbg !8298
  br i1 %cmp5, label %land.lhs.true7, label %if.else11, !dbg !8299

land.lhs.true7:                                   ; preds = %if.else
  %5 = load i64, i64* %ioaddr.addr, align 8, !dbg !8300
  %call8 = call i32 @pcnet32_dwio_check(i64 %5) #12, !dbg !8301
  %tobool9 = icmp ne i32 %call8, 0, !dbg !8301
  br i1 %tobool9, label %if.then10, label %if.else11, !dbg !8302

if.then10:                                        ; preds = %land.lhs.true7
  store %struct.pcnet32_access* @pcnet32_dwio, %struct.pcnet32_access** %a, align 8, !dbg !8303
  br label %if.end15, !dbg !8305

if.else11:                                        ; preds = %land.lhs.true7, %if.else
  %6 = load i32, i32* @pcnet32_debug, align 4, !dbg !8306
  %and = and i32 %6, 2, !dbg !8309
  %tobool12 = icmp ne i32 %and, 0, !dbg !8309
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !8310

if.then13:                                        ; preds = %if.else11
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !8311
  br label %if.end, !dbg !8311

if.end:                                           ; preds = %if.then13, %if.else11
  br label %err_release_region, !dbg !8312

if.end15:                                         ; preds = %if.then10
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  %7 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8313
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %7, i32 0, i32 0, !dbg !8314
  %8 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !8314
  %9 = load i64, i64* %ioaddr.addr, align 8, !dbg !8315
  %call17 = call zeroext i16 %8(i64 %9, i32 88) #12, !dbg !8313
  %conv18 = zext i16 %call17 to i32, !dbg !8313
  %10 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8316
  %read_csr19 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %10, i32 0, i32 0, !dbg !8317
  %11 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr19, align 8, !dbg !8317
  %12 = load i64, i64* %ioaddr.addr, align 8, !dbg !8318
  %call20 = call zeroext i16 %11(i64 %12, i32 89) #12, !dbg !8316
  %conv21 = zext i16 %call20 to i32, !dbg !8316
  %shl = shl i32 %conv21, 16, !dbg !8319
  %or = or i32 %conv18, %shl, !dbg !8320
  store i32 %or, i32* %chip_version, align 4, !dbg !8321
  %13 = load i32, i32* @pcnet32_debug, align 4, !dbg !8322
  %and22 = and i32 %13, 2, !dbg !8324
  %tobool23 = icmp ne i32 %and22, 0, !dbg !8324
  br i1 %tobool23, label %land.lhs.true24, label %if.end29, !dbg !8325

land.lhs.true24:                                  ; preds = %if.end16
  %14 = load i32, i32* @pcnet32_debug, align 4, !dbg !8326
  %and25 = and i32 %14, 8192, !dbg !8327
  %tobool26 = icmp ne i32 %and25, 0, !dbg !8327
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !8328

if.then27:                                        ; preds = %land.lhs.true24
  %15 = load i32, i32* %chip_version, align 4, !dbg !8329
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0), i32 %15) #13, !dbg !8329
  br label %if.end29, !dbg !8329

if.end29:                                         ; preds = %if.then27, %land.lhs.true24, %if.end16
  %16 = load i32, i32* %chip_version, align 4, !dbg !8330
  %and30 = and i32 %16, 4095, !dbg !8332
  %cmp31 = icmp ne i32 %and30, 3, !dbg !8333
  br i1 %cmp31, label %if.then33, label %if.end39, !dbg !8334

if.then33:                                        ; preds = %if.end29
  %17 = load i32, i32* @pcnet32_debug, align 4, !dbg !8335
  %and34 = and i32 %17, 2, !dbg !8338
  %tobool35 = icmp ne i32 %and34, 0, !dbg !8338
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !8339

if.then36:                                        ; preds = %if.then33
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !8340
  br label %if.end38, !dbg !8340

if.end38:                                         ; preds = %if.then36, %if.then33
  br label %err_release_region, !dbg !8341

if.end39:                                         ; preds = %if.end29
  store i32 0, i32* %sram, align 4, !dbg !8342
  store i32 0, i32* %dxsuflo, align 4, !dbg !8343
  store i32 0, i32* %fset, align 4, !dbg !8344
  store i32 0, i32* %mii, align 4, !dbg !8345
  store i32 0, i32* %fdx, align 4, !dbg !8346
  %18 = load i32, i32* %chip_version, align 4, !dbg !8347
  %shr = ashr i32 %18, 12, !dbg !8348
  %and40 = and i32 %shr, 65535, !dbg !8349
  store i32 %and40, i32* %chip_version, align 4, !dbg !8350
  %19 = load i32, i32* %chip_version, align 4, !dbg !8351
  switch i32 %19, label %sw.default [
    i32 9248, label %sw.bb
    i32 9264, label %sw.bb41
    i32 9761, label %sw.bb46
    i32 9763, label %sw.bb47
    i32 9764, label %sw.bb48
    i32 9765, label %sw.bb49
    i32 9766, label %sw.bb50
    i32 9767, label %sw.bb69
    i32 9768, label %sw.bb70
  ], !dbg !8352

sw.bb:                                            ; preds = %if.end39
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8** %chipname, align 8, !dbg !8353
  br label %sw.epilog, !dbg !8355

sw.bb41:                                          ; preds = %if.end39
  %20 = load i32, i32* %shared.addr, align 4, !dbg !8356
  %tobool42 = icmp ne i32 %20, 0, !dbg !8356
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !8358

if.then43:                                        ; preds = %sw.bb41
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8** %chipname, align 8, !dbg !8359
  br label %if.end45, !dbg !8360

if.else44:                                        ; preds = %sw.bb41
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i8** %chipname, align 8, !dbg !8361
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then43
  br label %sw.epilog, !dbg !8362

sw.bb46:                                          ; preds = %if.end39
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i8** %chipname, align 8, !dbg !8363
  store i32 1, i32* %fdx, align 4, !dbg !8364
  br label %sw.epilog, !dbg !8365

sw.bb47:                                          ; preds = %if.end39
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8** %chipname, align 8, !dbg !8366
  store i32 1, i32* %fdx, align 4, !dbg !8367
  store i32 1, i32* %mii, align 4, !dbg !8368
  store i32 1, i32* %fset, align 4, !dbg !8369
  br label %sw.epilog, !dbg !8370

sw.bb48:                                          ; preds = %if.end39
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8** %chipname, align 8, !dbg !8371
  store i32 1, i32* %fdx, align 4, !dbg !8372
  store i32 1, i32* %mii, align 4, !dbg !8373
  store i32 1, i32* %fset, align 4, !dbg !8374
  br label %sw.epilog, !dbg !8375

sw.bb49:                                          ; preds = %if.end39
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8** %chipname, align 8, !dbg !8376
  store i32 1, i32* %fdx, align 4, !dbg !8377
  store i32 1, i32* %mii, align 4, !dbg !8378
  store i32 1, i32* %sram, align 4, !dbg !8379
  br label %sw.epilog, !dbg !8380

sw.bb50:                                          ; preds = %if.end39
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8** %chipname, align 8, !dbg !8381
  store i32 1, i32* %fdx, align 4, !dbg !8382
  %21 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8383
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %21, i32 0, i32 2, !dbg !8384
  %22 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !8384
  %23 = load i64, i64* %ioaddr.addr, align 8, !dbg !8385
  %call51 = call zeroext i16 %22(i64 %23, i32 49) #12, !dbg !8383
  %conv52 = zext i16 %call51 to i32, !dbg !8383
  store i32 %conv52, i32* %media, align 4, !dbg !8386
  %24 = load i32, i32* %media, align 4, !dbg !8387
  %and53 = and i32 %24, -4, !dbg !8387
  store i32 %and53, i32* %media, align 4, !dbg !8387
  %25 = load i32, i32* @cards_found, align 4, !dbg !8388
  %cmp54 = icmp slt i32 %25, 8, !dbg !8390
  br i1 %cmp54, label %land.lhs.true56, label %if.end60, !dbg !8391

land.lhs.true56:                                  ; preds = %sw.bb50
  %26 = load i32, i32* @cards_found, align 4, !dbg !8392
  %idxprom = sext i32 %26 to i64, !dbg !8393
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @homepna, i64 0, i64 %idxprom, !dbg !8393
  %27 = load i32, i32* %arrayidx, align 4, !dbg !8393
  %tobool57 = icmp ne i32 %27, 0, !dbg !8393
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !8394

if.then58:                                        ; preds = %land.lhs.true56
  %28 = load i32, i32* %media, align 4, !dbg !8395
  %or59 = or i32 %28, 1, !dbg !8395
  store i32 %or59, i32* %media, align 4, !dbg !8395
  br label %if.end60, !dbg !8396

if.end60:                                         ; preds = %if.then58, %land.lhs.true56, %sw.bb50
  %29 = load i32, i32* @pcnet32_debug, align 4, !dbg !8397
  %and61 = and i32 %29, 2, !dbg !8399
  %tobool62 = icmp ne i32 %and61, 0, !dbg !8399
  br i1 %tobool62, label %if.then63, label %if.end67, !dbg !8400

if.then63:                                        ; preds = %if.end60
  %30 = load i32, i32* %media, align 4, !dbg !8401
  %and64 = and i32 %30, 1, !dbg !8402
  %tobool65 = icmp ne i32 %and64, 0, !dbg !8403
  %31 = zext i1 %tobool65 to i64, !dbg !8403
  %cond = select i1 %tobool65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), !dbg !8403
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0), i8* %cond) #13, !dbg !8404
  br label %if.end67, !dbg !8404

if.end67:                                         ; preds = %if.then63, %if.end60
  %32 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8405
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %32, i32 0, i32 3, !dbg !8406
  %33 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !8406
  %34 = load i64, i64* %ioaddr.addr, align 8, !dbg !8407
  %35 = load i32, i32* %media, align 4, !dbg !8408
  %conv68 = trunc i32 %35 to i16, !dbg !8408
  call void %33(i64 %34, i32 49, i16 zeroext %conv68) #12, !dbg !8405
  br label %sw.epilog, !dbg !8409

sw.bb69:                                          ; preds = %if.end39
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8** %chipname, align 8, !dbg !8410
  store i32 1, i32* %fdx, align 4, !dbg !8411
  store i32 1, i32* %mii, align 4, !dbg !8412
  store i32 1, i32* %sram, align 4, !dbg !8413
  br label %sw.epilog, !dbg !8414

sw.bb70:                                          ; preds = %if.end39
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i8** %chipname, align 8, !dbg !8415
  store i32 1, i32* %fdx, align 4, !dbg !8416
  store i32 1, i32* %mii, align 4, !dbg !8417
  br label %sw.epilog, !dbg !8418

sw.default:                                       ; preds = %if.end39
  %36 = load i32, i32* @pcnet32_debug, align 4, !dbg !8419
  %and71 = and i32 %36, 2, !dbg !8421
  %tobool72 = icmp ne i32 %and71, 0, !dbg !8421
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !8422

if.then73:                                        ; preds = %sw.default
  %37 = load i32, i32* %chip_version, align 4, !dbg !8423
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0), i32 %37) #13, !dbg !8423
  br label %if.end75, !dbg !8423

if.end75:                                         ; preds = %if.then73, %sw.default
  br label %err_release_region, !dbg !8424

sw.epilog:                                        ; preds = %sw.bb70, %sw.bb69, %if.end67, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46, %if.end45, %sw.bb
  %38 = load i32, i32* %fset, align 4, !dbg !8425
  %tobool76 = icmp ne i32 %38, 0, !dbg !8425
  br i1 %tobool76, label %if.then77, label %if.end90, !dbg !8427

if.then77:                                        ; preds = %sw.epilog
  %39 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8428
  %write_bcr78 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %39, i32 0, i32 3, !dbg !8430
  %40 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr78, align 8, !dbg !8430
  %41 = load i64, i64* %ioaddr.addr, align 8, !dbg !8431
  %42 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8432
  %read_bcr79 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %42, i32 0, i32 2, !dbg !8433
  %43 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr79, align 8, !dbg !8433
  %44 = load i64, i64* %ioaddr.addr, align 8, !dbg !8434
  %call80 = call zeroext i16 %43(i64 %44, i32 18) #12, !dbg !8432
  %conv81 = zext i16 %call80 to i32, !dbg !8432
  %or82 = or i32 %conv81, 2144, !dbg !8435
  %conv83 = trunc i32 %or82 to i16, !dbg !8436
  call void %40(i64 %41, i32 18, i16 zeroext %conv83) #12, !dbg !8428
  %45 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8437
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %45, i32 0, i32 1, !dbg !8438
  %46 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !8438
  %47 = load i64, i64* %ioaddr.addr, align 8, !dbg !8439
  %48 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8440
  %read_csr84 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %48, i32 0, i32 0, !dbg !8441
  %49 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr84, align 8, !dbg !8441
  %50 = load i64, i64* %ioaddr.addr, align 8, !dbg !8442
  %call85 = call zeroext i16 %49(i64 %50, i32 80) #12, !dbg !8440
  %conv86 = zext i16 %call85 to i32, !dbg !8440
  %and87 = and i32 %conv86, 3072, !dbg !8443
  %or88 = or i32 %and87, 3072, !dbg !8444
  %conv89 = trunc i32 %or88 to i16, !dbg !8445
  call void %46(i64 %47, i32 80, i16 zeroext %conv89) #12, !dbg !8437
  store i32 1, i32* %dxsuflo, align 4, !dbg !8446
  br label %if.end90, !dbg !8447

if.end90:                                         ; preds = %if.then77, %sw.epilog
  %51 = load i32, i32* %sram, align 4, !dbg !8448
  %tobool91 = icmp ne i32 %51, 0, !dbg !8448
  br i1 %tobool91, label %if.then92, label %if.end101, !dbg !8450

if.then92:                                        ; preds = %if.end90
  %52 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8451
  %write_bcr93 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %52, i32 0, i32 3, !dbg !8453
  %53 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr93, align 8, !dbg !8453
  %54 = load i64, i64* %ioaddr.addr, align 8, !dbg !8454
  call void %53(i64 %54, i32 25, i16 zeroext 23) #12, !dbg !8451
  %55 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8455
  %write_bcr94 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %55, i32 0, i32 3, !dbg !8456
  %56 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr94, align 8, !dbg !8456
  %57 = load i64, i64* %ioaddr.addr, align 8, !dbg !8457
  call void %56(i64 %57, i32 26, i16 zeroext 12) #12, !dbg !8455
  %58 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8458
  %write_bcr95 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %58, i32 0, i32 3, !dbg !8459
  %59 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr95, align 8, !dbg !8459
  %60 = load i64, i64* %ioaddr.addr, align 8, !dbg !8460
  %61 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8461
  %read_bcr96 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %61, i32 0, i32 2, !dbg !8462
  %62 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr96, align 8, !dbg !8462
  %63 = load i64, i64* %ioaddr.addr, align 8, !dbg !8463
  %call97 = call zeroext i16 %62(i64 %63, i32 18) #12, !dbg !8461
  %conv98 = zext i16 %call97 to i32, !dbg !8461
  %or99 = or i32 %conv98, 2048, !dbg !8464
  %conv100 = trunc i32 %or99 to i16, !dbg !8461
  call void %59(i64 %60, i32 18, i16 zeroext %conv100) #12, !dbg !8458
  br label %if.end101, !dbg !8465

if.end101:                                        ; preds = %if.then92, %if.end90
  %call102 = call %struct.net_device* @alloc_etherdev_mqs(i32 672, i32 1, i32 1) #12, !dbg !8466
  store %struct.net_device* %call102, %struct.net_device** %dev, align 8, !dbg !8467
  %64 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8468
  %tobool103 = icmp ne %struct.net_device* %64, null, !dbg !8468
  br i1 %tobool103, label %if.end105, label %if.then104, !dbg !8470

if.then104:                                       ; preds = %if.end101
  store i32 -12, i32* %ret, align 4, !dbg !8471
  br label %err_release_region, !dbg !8473

if.end105:                                        ; preds = %if.end101
  %65 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8474
  %tobool106 = icmp ne %struct.pci_dev* %65, null, !dbg !8474
  br i1 %tobool106, label %if.then107, label %if.end110, !dbg !8476

if.then107:                                       ; preds = %if.end105
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8477
  %dev108 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 41, !dbg !8477
  %67 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8477
  %dev109 = getelementptr inbounds %struct.net_device, %struct.net_device* %67, i32 0, i32 106, !dbg !8477
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev109, i32 0, i32 1, !dbg !8477
  store %struct.device* %dev108, %struct.device** %parent, align 8, !dbg !8477
  br label %if.end110, !dbg !8477

if.end110:                                        ; preds = %if.then107, %if.end105
  %68 = load i32, i32* @pcnet32_debug, align 4, !dbg !8478
  %and111 = and i32 %68, 2, !dbg !8480
  %tobool112 = icmp ne i32 %and111, 0, !dbg !8480
  br i1 %tobool112, label %if.then113, label %if.end115, !dbg !8481

if.then113:                                       ; preds = %if.end110
  %69 = load i8*, i8** %chipname, align 8, !dbg !8482
  %70 = load i64, i64* %ioaddr.addr, align 8, !dbg !8482
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i8* %69, i64 %70) #13, !dbg !8482
  br label %if.end115, !dbg !8482

if.end115:                                        ; preds = %if.then113, %if.end110
  store i32 0, i32* %i, align 4, !dbg !8483
  br label %for.cond, !dbg !8485

for.cond:                                         ; preds = %for.inc, %if.end115
  %71 = load i32, i32* %i, align 4, !dbg !8486
  %cmp116 = icmp slt i32 %71, 3, !dbg !8488
  br i1 %cmp116, label %for.body, label %for.end, !dbg !8489

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8490, metadata !DIExpression()), !dbg !8492
  %72 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8493
  %read_csr118 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %72, i32 0, i32 0, !dbg !8494
  %73 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr118, align 8, !dbg !8494
  %74 = load i64, i64* %ioaddr.addr, align 8, !dbg !8495
  %75 = load i32, i32* %i, align 4, !dbg !8496
  %add = add i32 %75, 12, !dbg !8497
  %call119 = call zeroext i16 %73(i64 %74, i32 %add) #12, !dbg !8493
  %conv120 = zext i16 %call119 to i32, !dbg !8493
  %and121 = and i32 %conv120, 65535, !dbg !8498
  store i32 %and121, i32* %val, align 4, !dbg !8499
  %76 = load i32, i32* %val, align 4, !dbg !8500
  %and122 = and i32 %76, 255, !dbg !8501
  %conv123 = trunc i32 %and122 to i8, !dbg !8500
  %77 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8502
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %77, i32 0, i32 74, !dbg !8503
  %78 = load i8*, i8** %dev_addr, align 8, !dbg !8503
  %79 = load i32, i32* %i, align 4, !dbg !8504
  %mul = mul i32 2, %79, !dbg !8505
  %idxprom124 = sext i32 %mul to i64, !dbg !8502
  %arrayidx125 = getelementptr i8, i8* %78, i64 %idxprom124, !dbg !8502
  store i8 %conv123, i8* %arrayidx125, align 1, !dbg !8506
  %80 = load i32, i32* %val, align 4, !dbg !8507
  %shr126 = lshr i32 %80, 8, !dbg !8508
  %and127 = and i32 %shr126, 255, !dbg !8509
  %conv128 = trunc i32 %and127 to i8, !dbg !8510
  %81 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8511
  %dev_addr129 = getelementptr inbounds %struct.net_device, %struct.net_device* %81, i32 0, i32 74, !dbg !8512
  %82 = load i8*, i8** %dev_addr129, align 8, !dbg !8512
  %83 = load i32, i32* %i, align 4, !dbg !8513
  %mul130 = mul i32 2, %83, !dbg !8514
  %add131 = add i32 %mul130, 1, !dbg !8515
  %idxprom132 = sext i32 %add131 to i64, !dbg !8511
  %arrayidx133 = getelementptr i8, i8* %82, i64 %idxprom132, !dbg !8511
  store i8 %conv128, i8* %arrayidx133, align 1, !dbg !8516
  br label %for.inc, !dbg !8517

for.inc:                                          ; preds = %for.body
  %84 = load i32, i32* %i, align 4, !dbg !8518
  %inc = add i32 %84, 1, !dbg !8518
  store i32 %inc, i32* %i, align 4, !dbg !8518
  br label %for.cond, !dbg !8519, !llvm.loop !8520

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8522
  br label %for.cond134, !dbg !8524

for.cond134:                                      ; preds = %for.inc144, %for.end
  %85 = load i32, i32* %i, align 4, !dbg !8525
  %cmp135 = icmp slt i32 %85, 6, !dbg !8527
  br i1 %cmp135, label %for.body137, label %for.end146, !dbg !8528

for.body137:                                      ; preds = %for.cond134
  %86 = load i64, i64* %ioaddr.addr, align 8, !dbg !8529
  %87 = load i32, i32* %i, align 4, !dbg !8530
  %conv138 = sext i32 %87 to i64, !dbg !8530
  %add139 = add i64 %86, %conv138, !dbg !8531
  %conv140 = trunc i64 %add139 to i32, !dbg !8529
  %call141 = call zeroext i8 @inb(i32 %conv140) #12, !dbg !8532
  %88 = load i32, i32* %i, align 4, !dbg !8533
  %idxprom142 = sext i32 %88 to i64, !dbg !8534
  %arrayidx143 = getelementptr [6 x i8], [6 x i8]* %promaddr, i64 0, i64 %idxprom142, !dbg !8534
  store i8 %call141, i8* %arrayidx143, align 1, !dbg !8535
  br label %for.inc144, !dbg !8534

for.inc144:                                       ; preds = %for.body137
  %89 = load i32, i32* %i, align 4, !dbg !8536
  %inc145 = add i32 %89, 1, !dbg !8536
  store i32 %inc145, i32* %i, align 4, !dbg !8536
  br label %for.cond134, !dbg !8537, !llvm.loop !8538

for.end146:                                       ; preds = %for.cond134
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %promaddr, i64 0, i64 0, !dbg !8540
  %90 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8542
  %dev_addr147 = getelementptr inbounds %struct.net_device, %struct.net_device* %90, i32 0, i32 74, !dbg !8543
  %91 = load i8*, i8** %dev_addr147, align 8, !dbg !8543
  %call148 = call zeroext i1 @ether_addr_equal(i8* %arraydecay, i8* %91) #12, !dbg !8544
  br i1 %call148, label %lor.lhs.false, label %if.then151, !dbg !8545

lor.lhs.false:                                    ; preds = %for.end146
  %92 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8546
  %dev_addr149 = getelementptr inbounds %struct.net_device, %struct.net_device* %92, i32 0, i32 74, !dbg !8547
  %93 = load i8*, i8** %dev_addr149, align 8, !dbg !8547
  %call150 = call zeroext i1 @is_valid_ether_addr(i8* %93) #12, !dbg !8548
  br i1 %call150, label %if.end164, label %if.then151, !dbg !8549

if.then151:                                       ; preds = %lor.lhs.false, %for.end146
  %arraydecay152 = getelementptr inbounds [6 x i8], [6 x i8]* %promaddr, i64 0, i64 0, !dbg !8550
  %call153 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay152) #12, !dbg !8553
  br i1 %call153, label %if.then154, label %if.end163, !dbg !8554

if.then154:                                       ; preds = %if.then151
  %94 = load i32, i32* @pcnet32_debug, align 4, !dbg !8555
  %and155 = and i32 %94, 2, !dbg !8558
  %tobool156 = icmp ne i32 %and155, 0, !dbg !8558
  br i1 %tobool156, label %if.then157, label %if.end160, !dbg !8559

if.then157:                                       ; preds = %if.then154
  %call158 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0)) #13, !dbg !8560
  %call159 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !8562
  br label %if.end160, !dbg !8563

if.end160:                                        ; preds = %if.then157, %if.then154
  %95 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8564
  %dev_addr161 = getelementptr inbounds %struct.net_device, %struct.net_device* %95, i32 0, i32 74, !dbg !8565
  %96 = load i8*, i8** %dev_addr161, align 8, !dbg !8565
  %arraydecay162 = getelementptr inbounds [6 x i8], [6 x i8]* %promaddr, i64 0, i64 0, !dbg !8566
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %arraydecay162, i64 6, i1 false), !dbg !8566
  br label %if.end163, !dbg !8567

if.end163:                                        ; preds = %if.end160, %if.then151
  br label %if.end164, !dbg !8568

if.end164:                                        ; preds = %if.end163, %lor.lhs.false
  %97 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8569
  %dev_addr165 = getelementptr inbounds %struct.net_device, %struct.net_device* %97, i32 0, i32 74, !dbg !8571
  %98 = load i8*, i8** %dev_addr165, align 8, !dbg !8571
  %call166 = call zeroext i1 @is_valid_ether_addr(i8* %98) #12, !dbg !8572
  br i1 %call166, label %if.end169, label %if.then167, !dbg !8573

if.then167:                                       ; preds = %if.end164
  %99 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8574
  %dev_addr168 = getelementptr inbounds %struct.net_device, %struct.net_device* %99, i32 0, i32 74, !dbg !8575
  %100 = load i8*, i8** %dev_addr168, align 8, !dbg !8575
  call void @eth_zero_addr(i8* %100) #12, !dbg !8576
  br label %if.end169, !dbg !8576

if.end169:                                        ; preds = %if.then167, %if.end164
  %101 = load i32, i32* @pcnet32_debug, align 4, !dbg !8577
  %and170 = and i32 %101, 2, !dbg !8579
  %tobool171 = icmp ne i32 %and170, 0, !dbg !8579
  br i1 %tobool171, label %if.then172, label %if.end239, !dbg !8580

if.then172:                                       ; preds = %if.end169
  %102 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8581
  %dev_addr173 = getelementptr inbounds %struct.net_device, %struct.net_device* %102, i32 0, i32 74, !dbg !8581
  %103 = load i8*, i8** %dev_addr173, align 8, !dbg !8581
  %call174 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i8* %103) #13, !dbg !8581
  %104 = load i32, i32* %chip_version, align 4, !dbg !8583
  %add175 = add i32 %104, 1, !dbg !8585
  %and176 = and i32 %add175, 65534, !dbg !8586
  %cmp177 = icmp eq i32 %and176, 9764, !dbg !8587
  br i1 %cmp177, label %if.then179, label %if.end238, !dbg !8588

if.then179:                                       ; preds = %if.then172
  %105 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8589
  %read_csr180 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %105, i32 0, i32 0, !dbg !8591
  %106 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr180, align 8, !dbg !8591
  %107 = load i64, i64* %ioaddr.addr, align 8, !dbg !8592
  %call181 = call zeroext i16 %106(i64 %107, i32 80) #12, !dbg !8589
  %conv182 = zext i16 %call181 to i32, !dbg !8589
  %and183 = and i32 %conv182, 3072, !dbg !8593
  store i32 %and183, i32* %i, align 4, !dbg !8594
  %108 = load i32, i32* %i, align 4, !dbg !8595
  %call184 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i64 0, i64 0), i32 %108) #13, !dbg !8595
  %109 = load i32, i32* %i, align 4, !dbg !8596
  %shr185 = ashr i32 %109, 10, !dbg !8597
  switch i32 %shr185, label %sw.epilog194 [
    i32 0, label %sw.bb186
    i32 1, label %sw.bb188
    i32 2, label %sw.bb190
    i32 3, label %sw.bb192
  ], !dbg !8598

sw.bb186:                                         ; preds = %if.then179
  %call187 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !8599
  br label %sw.epilog194, !dbg !8601

sw.bb188:                                         ; preds = %if.then179
  %call189 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !8602
  br label %sw.epilog194, !dbg !8603

sw.bb190:                                         ; preds = %if.then179
  %call191 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !8604
  br label %sw.epilog194, !dbg !8605

sw.bb192:                                         ; preds = %if.then179
  %call193 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !8606
  br label %sw.epilog194, !dbg !8607

sw.epilog194:                                     ; preds = %if.then179, %sw.bb192, %sw.bb190, %sw.bb188, %sw.bb186
  %110 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8608
  %read_bcr195 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %110, i32 0, i32 2, !dbg !8609
  %111 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr195, align 8, !dbg !8609
  %112 = load i64, i64* %ioaddr.addr, align 8, !dbg !8610
  %call196 = call zeroext i16 %111(i64 %112, i32 18) #12, !dbg !8608
  %conv197 = zext i16 %call196 to i32, !dbg !8608
  store i32 %conv197, i32* %i, align 4, !dbg !8611
  %113 = load i32, i32* %i, align 4, !dbg !8612
  %and198 = and i32 %113, 65535, !dbg !8612
  %call199 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0), i32 %and198) #13, !dbg !8612
  %114 = load i32, i32* %i, align 4, !dbg !8613
  %and200 = and i32 %114, 32, !dbg !8615
  %tobool201 = icmp ne i32 %and200, 0, !dbg !8615
  br i1 %tobool201, label %if.then202, label %if.end204, !dbg !8616

if.then202:                                       ; preds = %sw.epilog194
  %call203 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !8617
  br label %if.end204, !dbg !8617

if.end204:                                        ; preds = %if.then202, %sw.epilog194
  %115 = load i32, i32* %i, align 4, !dbg !8618
  %and205 = and i32 %115, 64, !dbg !8620
  %tobool206 = icmp ne i32 %and205, 0, !dbg !8620
  br i1 %tobool206, label %if.then207, label %if.end209, !dbg !8621

if.then207:                                       ; preds = %if.end204
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !8622
  br label %if.end209, !dbg !8622

if.end209:                                        ; preds = %if.then207, %if.end204
  %116 = load i32, i32* %i, align 4, !dbg !8623
  %and210 = and i32 %116, 128, !dbg !8625
  %tobool211 = icmp ne i32 %and210, 0, !dbg !8625
  br i1 %tobool211, label %if.then212, label %if.end214, !dbg !8626

if.then212:                                       ; preds = %if.end209
  %call213 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !8627
  br label %if.end214, !dbg !8627

if.end214:                                        ; preds = %if.then212, %if.end209
  %117 = load i32, i32* %i, align 4, !dbg !8628
  %and215 = and i32 %117, 2048, !dbg !8630
  %tobool216 = icmp ne i32 %and215, 0, !dbg !8630
  br i1 %tobool216, label %if.then217, label %if.end219, !dbg !8631

if.then217:                                       ; preds = %if.end214
  %call218 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !8632
  br label %if.end219, !dbg !8632

if.end219:                                        ; preds = %if.then217, %if.end214
  %118 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8633
  %read_bcr220 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %118, i32 0, i32 2, !dbg !8634
  %119 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr220, align 8, !dbg !8634
  %120 = load i64, i64* %ioaddr.addr, align 8, !dbg !8635
  %call221 = call zeroext i16 %119(i64 %120, i32 25) #12, !dbg !8633
  %conv222 = zext i16 %call221 to i32, !dbg !8633
  store i32 %conv222, i32* %i, align 4, !dbg !8636
  %121 = load i32, i32* %i, align 4, !dbg !8637
  %shl223 = shl i32 %121, 8, !dbg !8637
  %call224 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0), i32 %shl223) #13, !dbg !8637
  %122 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8638
  %read_bcr225 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %122, i32 0, i32 2, !dbg !8639
  %123 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr225, align 8, !dbg !8639
  %124 = load i64, i64* %ioaddr.addr, align 8, !dbg !8640
  %call226 = call zeroext i16 %123(i64 %124, i32 26) #12, !dbg !8638
  %conv227 = zext i16 %call226 to i32, !dbg !8638
  store i32 %conv227, i32* %i, align 4, !dbg !8641
  %125 = load i32, i32* %i, align 4, !dbg !8642
  %shl228 = shl i32 %125, 8, !dbg !8642
  %call229 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i64 0, i64 0), i32 %shl228) #13, !dbg !8642
  %126 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8643
  %read_bcr230 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %126, i32 0, i32 2, !dbg !8644
  %127 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr230, align 8, !dbg !8644
  %128 = load i64, i64* %ioaddr.addr, align 8, !dbg !8645
  %call231 = call zeroext i16 %127(i64 %128, i32 27) #12, !dbg !8643
  %conv232 = zext i16 %call231 to i32, !dbg !8643
  store i32 %conv232, i32* %i, align 4, !dbg !8646
  %129 = load i32, i32* %i, align 4, !dbg !8647
  %and233 = and i32 %129, 16384, !dbg !8649
  %tobool234 = icmp ne i32 %and233, 0, !dbg !8649
  br i1 %tobool234, label %if.then235, label %if.end237, !dbg !8650

if.then235:                                       ; preds = %if.end219
  %call236 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !8651
  br label %if.end237, !dbg !8651

if.end237:                                        ; preds = %if.then235, %if.end219
  br label %if.end238, !dbg !8652

if.end238:                                        ; preds = %if.end237, %if.then172
  br label %if.end239, !dbg !8653

if.end239:                                        ; preds = %if.end238, %if.end169
  %130 = load i64, i64* %ioaddr.addr, align 8, !dbg !8654
  %131 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8655
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %131, i32 0, i32 5, !dbg !8656
  store i64 %130, i64* %base_addr, align 8, !dbg !8657
  %132 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8658
  %call240 = call i8* @netdev_priv(%struct.net_device* %132) #12, !dbg !8659
  %133 = bitcast i8* %call240 to %struct.pcnet32_private*, !dbg !8659
  store %struct.pcnet32_private* %133, %struct.pcnet32_private** %lp, align 8, !dbg !8660
  %134 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8661
  %dev241 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %134, i32 0, i32 41, !dbg !8662
  %135 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8663
  %init_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %135, i32 0, i32 3, !dbg !8664
  %call242 = call i8* @dma_alloc_coherent(%struct.device* %dev241, i64 28, i64* %init_dma_addr, i32 3264) #12, !dbg !8665
  %136 = bitcast i8* %call242 to %struct.pcnet32_init_block*, !dbg !8665
  %137 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8666
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %137, i32 0, i32 0, !dbg !8667
  store %struct.pcnet32_init_block* %136, %struct.pcnet32_init_block** %init_block, align 8, !dbg !8668
  %138 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8669
  %init_block243 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %138, i32 0, i32 0, !dbg !8671
  %139 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block243, align 8, !dbg !8671
  %tobool244 = icmp ne %struct.pcnet32_init_block* %139, null, !dbg !8669
  br i1 %tobool244, label %if.end251, label %if.then245, !dbg !8672

if.then245:                                       ; preds = %if.end239
  %140 = load i32, i32* @pcnet32_debug, align 4, !dbg !8673
  %and246 = and i32 %140, 2, !dbg !8676
  %tobool247 = icmp ne i32 %and246, 0, !dbg !8676
  br i1 %tobool247, label %if.then248, label %if.end250, !dbg !8677

if.then248:                                       ; preds = %if.then245
  %call249 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !8678
  br label %if.end250, !dbg !8678

if.end250:                                        ; preds = %if.then248, %if.then245
  store i32 -12, i32* %ret, align 4, !dbg !8679
  br label %err_free_netdev, !dbg !8680

if.end251:                                        ; preds = %if.end239
  %141 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8681
  %142 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8682
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %142, i32 0, i32 4, !dbg !8683
  store %struct.pci_dev* %141, %struct.pci_dev** %pci_dev, align 8, !dbg !8684
  %143 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8685
  %144 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8686
  %dev252 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %144, i32 0, i32 24, !dbg !8687
  store %struct.net_device* %143, %struct.net_device** %dev252, align 8, !dbg !8688
  br label %do.body, !dbg !8689

do.body:                                          ; preds = %if.end251
  %145 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8690
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %145, i32 0, i32 11, !dbg !8690
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %146 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8691
  %147 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %146, i32 0, i32 0, !dbg !8692
  %rlock.i = bitcast %union.anon.46* %147 to %struct.raw_spinlock*, !dbg !8692
  %148 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8690
  %lock254 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %148, i32 0, i32 11, !dbg !8690
  %149 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8690
  %rlock = bitcast %union.anon.46* %149 to %struct.raw_spinlock*, !dbg !8690
  %150 = bitcast %struct.spinlock* %lock254 to i8*, !dbg !8690
  %151 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 1 %151, i64 0, i1 false), !dbg !8690
  br label %do.end, !dbg !8690

do.end:                                           ; preds = %do.body
  %152 = load i8*, i8** %chipname, align 8, !dbg !8693
  %153 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8694
  %name = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %153, i32 0, i32 5, !dbg !8695
  store i8* %152, i8** %name, align 8, !dbg !8696
  %154 = load i32, i32* %shared.addr, align 4, !dbg !8697
  %155 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8698
  %shared_irq = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %155, i32 0, i32 29, !dbg !8699
  %156 = trunc i32 %154 to i8, !dbg !8700
  %bf.load = load i8, i8* %shared_irq, align 8, !dbg !8700
  %bf.value = and i8 %156, 1, !dbg !8700
  %bf.clear = and i8 %bf.load, -2, !dbg !8700
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !8700
  store i8 %bf.set, i8* %shared_irq, align 8, !dbg !8700
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !8700
  %157 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8701
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %157, i32 0, i32 15, !dbg !8702
  store i32 16, i32* %tx_ring_size, align 4, !dbg !8703
  %158 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8704
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %158, i32 0, i32 14, !dbg !8705
  store i32 32, i32* %rx_ring_size, align 8, !dbg !8706
  %159 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8707
  %tx_ring_size255 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %159, i32 0, i32 15, !dbg !8708
  %160 = load i32, i32* %tx_ring_size255, align 4, !dbg !8708
  %sub = sub i32 %160, 1, !dbg !8709
  %161 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8710
  %tx_mod_mask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %161, i32 0, i32 17, !dbg !8711
  store i32 %sub, i32* %tx_mod_mask, align 4, !dbg !8712
  %162 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8713
  %rx_ring_size256 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %162, i32 0, i32 14, !dbg !8714
  %163 = load i32, i32* %rx_ring_size256, align 8, !dbg !8714
  %sub257 = sub i32 %163, 1, !dbg !8715
  %164 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8716
  %rx_mod_mask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %164, i32 0, i32 16, !dbg !8717
  store i32 %sub257, i32* %rx_mod_mask, align 8, !dbg !8718
  %165 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8719
  %tx_len_bits = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %165, i32 0, i32 19, !dbg !8720
  store i16 16384, i16* %tx_len_bits, align 2, !dbg !8721
  %166 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8722
  %rx_len_bits = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %166, i32 0, i32 18, !dbg !8723
  store i16 80, i16* %rx_len_bits, align 8, !dbg !8724
  %167 = load i32, i32* %fdx, align 4, !dbg !8725
  %168 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8726
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %168, i32 0, i32 31, !dbg !8727
  %full_duplex = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if, i32 0, i32 4, !dbg !8728
  %169 = trunc i32 %167 to i8, !dbg !8729
  %bf.load258 = load i8, i8* %full_duplex, align 8, !dbg !8729
  %bf.value259 = and i8 %169, 1, !dbg !8729
  %bf.clear260 = and i8 %bf.load258, -2, !dbg !8729
  %bf.set261 = or i8 %bf.clear260, %bf.value259, !dbg !8729
  store i8 %bf.set261, i8* %full_duplex, align 8, !dbg !8729
  %bf.result.cast262 = zext i8 %bf.value259 to i32, !dbg !8729
  %170 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8730
  %mii_if263 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %170, i32 0, i32 31, !dbg !8731
  %phy_id_mask = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if263, i32 0, i32 2, !dbg !8732
  store i32 31, i32* %phy_id_mask, align 8, !dbg !8733
  %171 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8734
  %mii_if264 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %171, i32 0, i32 31, !dbg !8735
  %reg_num_mask = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if264, i32 0, i32 3, !dbg !8736
  store i32 31, i32* %reg_num_mask, align 4, !dbg !8737
  %172 = load i32, i32* %dxsuflo, align 4, !dbg !8738
  %173 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8739
  %dxsuflo265 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %173, i32 0, i32 29, !dbg !8740
  %174 = trunc i32 %172 to i8, !dbg !8741
  %bf.load266 = load i8, i8* %dxsuflo265, align 8, !dbg !8741
  %bf.value267 = and i8 %174, 1, !dbg !8741
  %bf.shl = shl i8 %bf.value267, 1, !dbg !8741
  %bf.clear268 = and i8 %bf.load266, -3, !dbg !8741
  %bf.set269 = or i8 %bf.clear268, %bf.shl, !dbg !8741
  store i8 %bf.set269, i8* %dxsuflo265, align 8, !dbg !8741
  %bf.result.cast270 = zext i8 %bf.value267 to i32, !dbg !8741
  %175 = load i32, i32* %mii, align 4, !dbg !8742
  %176 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8743
  %mii271 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %176, i32 0, i32 29, !dbg !8744
  %177 = trunc i32 %175 to i8, !dbg !8745
  %bf.load272 = load i8, i8* %mii271, align 8, !dbg !8745
  %bf.value273 = and i8 %177, 1, !dbg !8745
  %bf.shl274 = shl i8 %bf.value273, 2, !dbg !8745
  %bf.clear275 = and i8 %bf.load272, -5, !dbg !8745
  %bf.set276 = or i8 %bf.clear275, %bf.shl274, !dbg !8745
  store i8 %bf.set276, i8* %mii271, align 8, !dbg !8745
  %bf.result.cast277 = zext i8 %bf.value273 to i32, !dbg !8745
  %178 = load i32, i32* %chip_version, align 4, !dbg !8746
  %conv278 = trunc i32 %178 to i16, !dbg !8746
  %179 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8747
  %chip_version279 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %179, i32 0, i32 35, !dbg !8748
  store i16 %conv278, i16* %chip_version279, align 8, !dbg !8749
  %180 = load i32, i32* @pcnet32_debug, align 4, !dbg !8750
  %181 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8751
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %181, i32 0, i32 33, !dbg !8752
  store i32 %180, i32* %msg_enable, align 8, !dbg !8753
  %182 = load i32, i32* @cards_found, align 4, !dbg !8754
  %cmp280 = icmp sge i32 %182, 8, !dbg !8756
  br i1 %cmp280, label %if.then288, label %lor.lhs.false282, !dbg !8757

lor.lhs.false282:                                 ; preds = %do.end
  %183 = load i32, i32* @cards_found, align 4, !dbg !8758
  %idxprom283 = sext i32 %183 to i64, !dbg !8759
  %arrayidx284 = getelementptr [8 x i32], [8 x i32]* @options, i64 0, i64 %idxprom283, !dbg !8759
  %184 = load i32, i32* %arrayidx284, align 4, !dbg !8759
  %conv285 = sext i32 %184 to i64, !dbg !8759
  %cmp286 = icmp uge i64 %conv285, 16, !dbg !8760
  br i1 %cmp286, label %if.then288, label %if.else289, !dbg !8761

if.then288:                                       ; preds = %lor.lhs.false282, %do.end
  %185 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8762
  %options = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %185, i32 0, i32 28, !dbg !8763
  store i32 4, i32* %options, align 4, !dbg !8764
  br label %if.end296, !dbg !8762

if.else289:                                       ; preds = %lor.lhs.false282
  %186 = load i32, i32* @cards_found, align 4, !dbg !8765
  %idxprom290 = sext i32 %186 to i64, !dbg !8766
  %arrayidx291 = getelementptr [8 x i32], [8 x i32]* @options, i64 0, i64 %idxprom290, !dbg !8766
  %187 = load i32, i32* %arrayidx291, align 4, !dbg !8766
  %idxprom292 = sext i32 %187 to i64, !dbg !8767
  %arrayidx293 = getelementptr [16 x i8], [16 x i8]* @options_mapping, i64 0, i64 %idxprom292, !dbg !8767
  %188 = load i8, i8* %arrayidx293, align 1, !dbg !8767
  %conv294 = zext i8 %188 to i32, !dbg !8767
  %189 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8768
  %options295 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %189, i32 0, i32 28, !dbg !8769
  store i32 %conv294, i32* %options295, align 4, !dbg !8770
  br label %if.end296

if.end296:                                        ; preds = %if.else289, %if.then288
  %190 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8771
  %chip_version297 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %190, i32 0, i32 35, !dbg !8773
  %191 = load i16, i16* %chip_version297, align 8, !dbg !8773
  %conv298 = zext i16 %191 to i32, !dbg !8771
  %cmp299 = icmp eq i32 %conv298, 9761, !dbg !8774
  br i1 %cmp299, label %if.then301, label %if.end303, !dbg !8775

if.then301:                                       ; preds = %if.end296
  %192 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8776
  %options302 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %192, i32 0, i32 28, !dbg !8777
  store i32 1, i32* %options302, align 4, !dbg !8778
  br label %if.end303, !dbg !8776

if.end303:                                        ; preds = %if.then301, %if.end296
  %193 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8779
  %194 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8780
  %mii_if304 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %194, i32 0, i32 31, !dbg !8781
  %dev305 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if304, i32 0, i32 5, !dbg !8782
  store %struct.net_device* %193, %struct.net_device** %dev305, align 8, !dbg !8783
  %195 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8784
  %mii_if306 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %195, i32 0, i32 31, !dbg !8785
  %mdio_read = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if306, i32 0, i32 6, !dbg !8786
  store i32 (%struct.net_device*, i32, i32)* @mdio_read, i32 (%struct.net_device*, i32, i32)** %mdio_read, align 8, !dbg !8787
  %196 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8788
  %mii_if307 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %196, i32 0, i32 31, !dbg !8789
  %mdio_write = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if307, i32 0, i32 7, !dbg !8790
  store void (%struct.net_device*, i32, i32, i32)* @mdio_write, void (%struct.net_device*, i32, i32, i32)** %mdio_write, align 8, !dbg !8791
  %197 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8792
  %rx_ring_size308 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %197, i32 0, i32 14, !dbg !8793
  %198 = load i32, i32* %rx_ring_size308, align 8, !dbg !8793
  %div = udiv i32 %198, 2, !dbg !8794
  %199 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8795
  %napi = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %199, i32 0, i32 25, !dbg !8796
  %weight = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %napi, i32 0, i32 2, !dbg !8797
  store i32 %div, i32* %weight, align 8, !dbg !8798
  %200 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8799
  %201 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8800
  %napi309 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %201, i32 0, i32 25, !dbg !8801
  %202 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8802
  %rx_ring_size310 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %202, i32 0, i32 14, !dbg !8803
  %203 = load i32, i32* %rx_ring_size310, align 8, !dbg !8803
  %div311 = udiv i32 %203, 2, !dbg !8804
  call void @netif_napi_add(%struct.net_device* %200, %struct.napi_struct* %napi309, i32 (%struct.napi_struct*, i32)* @pcnet32_poll, i32 %div311) #12, !dbg !8805
  %204 = load i32, i32* %fdx, align 4, !dbg !8806
  %tobool312 = icmp ne i32 %204, 0, !dbg !8806
  br i1 %tobool312, label %land.lhs.true313, label %if.end327, !dbg !8808

land.lhs.true313:                                 ; preds = %if.end303
  %205 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8809
  %options314 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %205, i32 0, i32 28, !dbg !8810
  %206 = load i32, i32* %options314, align 4, !dbg !8810
  %and315 = and i32 %206, 4, !dbg !8811
  %tobool316 = icmp ne i32 %and315, 0, !dbg !8811
  br i1 %tobool316, label %if.end327, label %land.lhs.true317, !dbg !8812

land.lhs.true317:                                 ; preds = %land.lhs.true313
  %207 = load i32, i32* @cards_found, align 4, !dbg !8813
  %cmp318 = icmp sge i32 %207, 8, !dbg !8814
  br i1 %cmp318, label %if.then324, label %lor.lhs.false320, !dbg !8815

lor.lhs.false320:                                 ; preds = %land.lhs.true317
  %208 = load i32, i32* @cards_found, align 4, !dbg !8816
  %idxprom321 = sext i32 %208 to i64, !dbg !8817
  %arrayidx322 = getelementptr [8 x i32], [8 x i32]* @full_duplex, i64 0, i64 %idxprom321, !dbg !8817
  %209 = load i32, i32* %arrayidx322, align 4, !dbg !8817
  %tobool323 = icmp ne i32 %209, 0, !dbg !8817
  br i1 %tobool323, label %if.then324, label %if.end327, !dbg !8818

if.then324:                                       ; preds = %lor.lhs.false320, %land.lhs.true317
  %210 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8819
  %options325 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %210, i32 0, i32 28, !dbg !8820
  %211 = load i32, i32* %options325, align 4, !dbg !8821
  %or326 = or i32 %211, 128, !dbg !8821
  store i32 %or326, i32* %options325, align 4, !dbg !8821
  br label %if.end327, !dbg !8819

if.end327:                                        ; preds = %if.then324, %lor.lhs.false320, %land.lhs.true313, %if.end303
  %212 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8822
  %213 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8823
  %a328 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %213, i32 0, i32 10, !dbg !8824
  store %struct.pcnet32_access* %212, %struct.pcnet32_access** %a328, align 8, !dbg !8825
  %214 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8826
  %215 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8828
  %pci_dev329 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %215, i32 0, i32 4, !dbg !8829
  %216 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev329, align 8, !dbg !8829
  %call330 = call i8* @pci_name(%struct.pci_dev* %216) #12, !dbg !8830
  %call331 = call i32 @pcnet32_alloc_ring(%struct.net_device* %214, i8* %call330) #12, !dbg !8831
  %tobool332 = icmp ne i32 %call331, 0, !dbg !8831
  br i1 %tobool332, label %if.then333, label %if.end334, !dbg !8832

if.then333:                                       ; preds = %if.end327
  store i32 -12, i32* %ret, align 4, !dbg !8833
  br label %err_free_ring, !dbg !8835

if.end334:                                        ; preds = %if.end327
  %217 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8836
  %dev_addr335 = getelementptr inbounds %struct.net_device, %struct.net_device* %217, i32 0, i32 74, !dbg !8838
  %218 = load i8*, i8** %dev_addr335, align 8, !dbg !8838
  %arrayidx336 = getelementptr i8, i8* %218, i64 0, !dbg !8836
  %219 = load i8, i8* %arrayidx336, align 1, !dbg !8836
  %conv337 = zext i8 %219 to i32, !dbg !8836
  %cmp338 = icmp eq i32 %conv337, 0, !dbg !8839
  br i1 %cmp338, label %land.lhs.true340, label %if.end354, !dbg !8840

land.lhs.true340:                                 ; preds = %if.end334
  %220 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8841
  %dev_addr341 = getelementptr inbounds %struct.net_device, %struct.net_device* %220, i32 0, i32 74, !dbg !8842
  %221 = load i8*, i8** %dev_addr341, align 8, !dbg !8842
  %arrayidx342 = getelementptr i8, i8* %221, i64 1, !dbg !8841
  %222 = load i8, i8* %arrayidx342, align 1, !dbg !8841
  %conv343 = zext i8 %222 to i32, !dbg !8841
  %cmp344 = icmp eq i32 %conv343, 224, !dbg !8843
  br i1 %cmp344, label %land.lhs.true346, label %if.end354, !dbg !8844

land.lhs.true346:                                 ; preds = %land.lhs.true340
  %223 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8845
  %dev_addr347 = getelementptr inbounds %struct.net_device, %struct.net_device* %223, i32 0, i32 74, !dbg !8846
  %224 = load i8*, i8** %dev_addr347, align 8, !dbg !8846
  %arrayidx348 = getelementptr i8, i8* %224, i64 2, !dbg !8845
  %225 = load i8, i8* %arrayidx348, align 1, !dbg !8845
  %conv349 = zext i8 %225 to i32, !dbg !8845
  %cmp350 = icmp eq i32 %conv349, 117, !dbg !8847
  br i1 %cmp350, label %if.then352, label %if.end354, !dbg !8848

if.then352:                                       ; preds = %land.lhs.true346
  %226 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8849
  %options353 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %226, i32 0, i32 28, !dbg !8850
  store i32 130, i32* %options353, align 4, !dbg !8851
  br label %if.end354, !dbg !8849

if.end354:                                        ; preds = %if.then352, %land.lhs.true346, %land.lhs.true340, %if.end334
  %227 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8852
  %init_block355 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %227, i32 0, i32 0, !dbg !8853
  %228 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block355, align 8, !dbg !8853
  %mode = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %228, i32 0, i32 0, !dbg !8854
  store i16 3, i16* %mode, align 4, !dbg !8855
  %229 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8856
  %tx_len_bits356 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %229, i32 0, i32 19, !dbg !8856
  %230 = load i16, i16* %tx_len_bits356, align 2, !dbg !8856
  %conv357 = zext i16 %230 to i32, !dbg !8856
  %231 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8856
  %rx_len_bits358 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %231, i32 0, i32 18, !dbg !8856
  %232 = load i16, i16* %rx_len_bits358, align 8, !dbg !8856
  %conv359 = zext i16 %232 to i32, !dbg !8856
  %or360 = or i32 %conv357, %conv359, !dbg !8856
  %conv361 = trunc i32 %or360 to i16, !dbg !8856
  %233 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8857
  %init_block362 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %233, i32 0, i32 0, !dbg !8858
  %234 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block362, align 8, !dbg !8858
  %tlen_rlen = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %234, i32 0, i32 1, !dbg !8859
  store i16 %conv361, i16* %tlen_rlen, align 2, !dbg !8860
  store i32 0, i32* %i, align 4, !dbg !8861
  br label %for.cond363, !dbg !8863

for.cond363:                                      ; preds = %for.inc373, %if.end354
  %235 = load i32, i32* %i, align 4, !dbg !8864
  %cmp364 = icmp slt i32 %235, 6, !dbg !8866
  br i1 %cmp364, label %for.body366, label %for.end375, !dbg !8867

for.body366:                                      ; preds = %for.cond363
  %236 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8868
  %dev_addr367 = getelementptr inbounds %struct.net_device, %struct.net_device* %236, i32 0, i32 74, !dbg !8869
  %237 = load i8*, i8** %dev_addr367, align 8, !dbg !8869
  %238 = load i32, i32* %i, align 4, !dbg !8870
  %idxprom368 = sext i32 %238 to i64, !dbg !8868
  %arrayidx369 = getelementptr i8, i8* %237, i64 %idxprom368, !dbg !8868
  %239 = load i8, i8* %arrayidx369, align 1, !dbg !8868
  %240 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8871
  %init_block370 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %240, i32 0, i32 0, !dbg !8872
  %241 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block370, align 8, !dbg !8872
  %phys_addr = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %241, i32 0, i32 2, !dbg !8873
  %242 = load i32, i32* %i, align 4, !dbg !8874
  %idxprom371 = sext i32 %242 to i64, !dbg !8871
  %arrayidx372 = getelementptr [6 x i8], [6 x i8]* %phys_addr, i64 0, i64 %idxprom371, !dbg !8871
  store i8 %239, i8* %arrayidx372, align 1, !dbg !8875
  br label %for.inc373, !dbg !8871

for.inc373:                                       ; preds = %for.body366
  %243 = load i32, i32* %i, align 4, !dbg !8876
  %inc374 = add i32 %243, 1, !dbg !8876
  store i32 %inc374, i32* %i, align 4, !dbg !8876
  br label %for.cond363, !dbg !8877, !llvm.loop !8878

for.end375:                                       ; preds = %for.cond363
  %244 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8880
  %init_block376 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %244, i32 0, i32 0, !dbg !8881
  %245 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block376, align 8, !dbg !8881
  %filter = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %245, i32 0, i32 4, !dbg !8882
  %arrayidx377 = getelementptr [2 x i32], [2 x i32]* %filter, i64 0, i64 0, !dbg !8880
  store i32 0, i32* %arrayidx377, align 4, !dbg !8883
  %246 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8884
  %init_block378 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %246, i32 0, i32 0, !dbg !8885
  %247 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block378, align 8, !dbg !8885
  %filter379 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %247, i32 0, i32 4, !dbg !8886
  %arrayidx380 = getelementptr [2 x i32], [2 x i32]* %filter379, i64 0, i64 1, !dbg !8884
  store i32 0, i32* %arrayidx380, align 4, !dbg !8887
  %248 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8888
  %rx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %248, i32 0, i32 20, !dbg !8888
  %249 = load i64, i64* %rx_ring_dma_addr, align 8, !dbg !8888
  %conv381 = trunc i64 %249 to i32, !dbg !8888
  %250 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8889
  %init_block382 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %250, i32 0, i32 0, !dbg !8890
  %251 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block382, align 8, !dbg !8890
  %rx_ring = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %251, i32 0, i32 5, !dbg !8891
  store i32 %conv381, i32* %rx_ring, align 4, !dbg !8892
  %252 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8893
  %tx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %252, i32 0, i32 21, !dbg !8893
  %253 = load i64, i64* %tx_ring_dma_addr, align 8, !dbg !8893
  %conv383 = trunc i64 %253 to i32, !dbg !8893
  %254 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8894
  %init_block384 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %254, i32 0, i32 0, !dbg !8895
  %255 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block384, align 8, !dbg !8895
  %tx_ring = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %255, i32 0, i32 6, !dbg !8896
  store i32 %conv383, i32* %tx_ring, align 4, !dbg !8897
  %256 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8898
  %write_bcr385 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %256, i32 0, i32 3, !dbg !8899
  %257 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr385, align 8, !dbg !8899
  %258 = load i64, i64* %ioaddr.addr, align 8, !dbg !8900
  call void %257(i64 %258, i32 20, i16 zeroext 2) #12, !dbg !8898
  %259 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8901
  %write_csr386 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %259, i32 0, i32 1, !dbg !8902
  %260 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr386, align 8, !dbg !8902
  %261 = load i64, i64* %ioaddr.addr, align 8, !dbg !8903
  %262 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8904
  %init_dma_addr387 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %262, i32 0, i32 3, !dbg !8905
  %263 = load i64, i64* %init_dma_addr387, align 8, !dbg !8905
  %and388 = and i64 %263, 65535, !dbg !8906
  %conv389 = trunc i64 %and388 to i16, !dbg !8907
  call void %260(i64 %261, i32 1, i16 zeroext %conv389) #12, !dbg !8901
  %264 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8908
  %write_csr390 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %264, i32 0, i32 1, !dbg !8909
  %265 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr390, align 8, !dbg !8909
  %266 = load i64, i64* %ioaddr.addr, align 8, !dbg !8910
  %267 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8911
  %init_dma_addr391 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %267, i32 0, i32 3, !dbg !8912
  %268 = load i64, i64* %init_dma_addr391, align 8, !dbg !8912
  %shr392 = lshr i64 %268, 16, !dbg !8913
  %conv393 = trunc i64 %shr392 to i16, !dbg !8914
  call void %265(i64 %266, i32 2, i16 zeroext %conv393) #12, !dbg !8908
  %269 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8915
  %tobool394 = icmp ne %struct.pci_dev* %269, null, !dbg !8915
  br i1 %tobool394, label %if.then395, label %if.else403, !dbg !8917

if.then395:                                       ; preds = %for.end375
  %270 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8918
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %270, i32 0, i32 43, !dbg !8920
  %271 = load i32, i32* %irq, align 4, !dbg !8920
  %272 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8921
  %irq396 = getelementptr inbounds %struct.net_device, %struct.net_device* %272, i32 0, i32 6, !dbg !8922
  store i32 %271, i32* %irq396, align 8, !dbg !8923
  %273 = load i32, i32* @pcnet32_debug, align 4, !dbg !8924
  %and397 = and i32 %273, 2, !dbg !8926
  %tobool398 = icmp ne i32 %and397, 0, !dbg !8926
  br i1 %tobool398, label %if.then399, label %if.end402, !dbg !8927

if.then399:                                       ; preds = %if.then395
  %274 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8928
  %irq400 = getelementptr inbounds %struct.net_device, %struct.net_device* %274, i32 0, i32 6, !dbg !8928
  %275 = load i32, i32* %irq400, align 8, !dbg !8928
  %call401 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i32 %275) #13, !dbg !8928
  br label %if.end402, !dbg !8928

if.end402:                                        ; preds = %if.then399, %if.then395
  br label %if.end423, !dbg !8929

if.else403:                                       ; preds = %for.end375
  call void @llvm.dbg.declare(metadata i64* %irq_mask, metadata !8930, metadata !DIExpression()), !dbg !8932
  %call404 = call i64 @probe_irq_on() #12, !dbg !8933
  store i64 %call404, i64* %irq_mask, align 8, !dbg !8932
  %276 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !8934
  %write_csr405 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %276, i32 0, i32 1, !dbg !8935
  %277 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr405, align 8, !dbg !8935
  %278 = load i64, i64* %ioaddr.addr, align 8, !dbg !8936
  call void %277(i64 %278, i32 0, i16 zeroext 65) #12, !dbg !8934
  call void @__const_udelay(i64 4295000) #12, !dbg !8937
  %279 = load i64, i64* %irq_mask, align 8, !dbg !8942
  %call406 = call i32 @probe_irq_off(i64 %279) #12, !dbg !8943
  %280 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8944
  %irq407 = getelementptr inbounds %struct.net_device, %struct.net_device* %280, i32 0, i32 6, !dbg !8945
  store i32 %call406, i32* %irq407, align 8, !dbg !8946
  %281 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8947
  %irq408 = getelementptr inbounds %struct.net_device, %struct.net_device* %281, i32 0, i32 6, !dbg !8949
  %282 = load i32, i32* %irq408, align 8, !dbg !8949
  %tobool409 = icmp ne i32 %282, 0, !dbg !8947
  br i1 %tobool409, label %if.end416, label %if.then410, !dbg !8950

if.then410:                                       ; preds = %if.else403
  %283 = load i32, i32* @pcnet32_debug, align 4, !dbg !8951
  %and411 = and i32 %283, 2, !dbg !8954
  %tobool412 = icmp ne i32 %and411, 0, !dbg !8954
  br i1 %tobool412, label %if.then413, label %if.end415, !dbg !8955

if.then413:                                       ; preds = %if.then410
  %call414 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !8956
  br label %if.end415, !dbg !8956

if.end415:                                        ; preds = %if.then413, %if.then410
  store i32 -19, i32* %ret, align 4, !dbg !8957
  br label %err_free_ring, !dbg !8958

if.end416:                                        ; preds = %if.else403
  %284 = load i32, i32* @pcnet32_debug, align 4, !dbg !8959
  %and417 = and i32 %284, 2, !dbg !8961
  %tobool418 = icmp ne i32 %and417, 0, !dbg !8961
  br i1 %tobool418, label %if.then419, label %if.end422, !dbg !8962

if.then419:                                       ; preds = %if.end416
  %285 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8963
  %irq420 = getelementptr inbounds %struct.net_device, %struct.net_device* %285, i32 0, i32 6, !dbg !8963
  %286 = load i32, i32* %irq420, align 8, !dbg !8963
  %call421 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42, i64 0, i64 0), i32 %286) #13, !dbg !8963
  br label %if.end422, !dbg !8963

if.end422:                                        ; preds = %if.then419, %if.end416
  br label %if.end423

if.end423:                                        ; preds = %if.end422, %if.end402
  %287 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8964
  %mii424 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %287, i32 0, i32 29, !dbg !8966
  %bf.load425 = load i8, i8* %mii424, align 8, !dbg !8966
  %bf.lshr = lshr i8 %bf.load425, 2, !dbg !8966
  %bf.clear426 = and i8 %bf.lshr, 1, !dbg !8966
  %bf.cast = zext i8 %bf.clear426 to i32, !dbg !8966
  %tobool427 = icmp ne i32 %bf.cast, 0, !dbg !8964
  br i1 %tobool427, label %if.then428, label %if.end492, !dbg !8967

if.then428:                                       ; preds = %if.end423
  %288 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8968
  %a429 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %288, i32 0, i32 10, !dbg !8970
  %289 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a429, align 8, !dbg !8970
  %read_bcr430 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %289, i32 0, i32 2, !dbg !8971
  %290 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr430, align 8, !dbg !8971
  %291 = load i64, i64* %ioaddr.addr, align 8, !dbg !8972
  %call431 = call zeroext i16 %290(i64 %291, i32 33) #12, !dbg !8968
  %conv432 = zext i16 %call431 to i32, !dbg !8973
  %shr433 = ashr i32 %conv432, 5, !dbg !8974
  %and434 = and i32 %shr433, 31, !dbg !8975
  %292 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !8976
  %mii_if435 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %292, i32 0, i32 31, !dbg !8977
  %phy_id = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if435, i32 0, i32 0, !dbg !8978
  store i32 %and434, i32* %phy_id, align 8, !dbg !8979
  store i32 0, i32* %i, align 4, !dbg !8980
  br label %for.cond436, !dbg !8982

for.cond436:                                      ; preds = %for.inc475, %if.then428
  %293 = load i32, i32* %i, align 4, !dbg !8983
  %cmp437 = icmp slt i32 %293, 32, !dbg !8985
  br i1 %cmp437, label %for.body439, label %for.end477, !dbg !8986

for.body439:                                      ; preds = %for.cond436
  call void @llvm.dbg.declare(metadata i16* %id1, metadata !8987, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata i16* %id2, metadata !8990, metadata !DIExpression()), !dbg !8991
  %294 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8992
  %295 = load i32, i32* %i, align 4, !dbg !8993
  %call440 = call i32 @mdio_read(%struct.net_device* %294, i32 %295, i32 2) #12, !dbg !8994
  %conv441 = trunc i32 %call440 to i16, !dbg !8994
  store i16 %conv441, i16* %id1, align 2, !dbg !8995
  %296 = load i16, i16* %id1, align 2, !dbg !8996
  %conv442 = zext i16 %296 to i32, !dbg !8996
  %cmp443 = icmp eq i32 %conv442, 65535, !dbg !8998
  br i1 %cmp443, label %if.then445, label %if.end446, !dbg !8999

if.then445:                                       ; preds = %for.body439
  br label %for.inc475, !dbg !9000

if.end446:                                        ; preds = %for.body439
  %297 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9001
  %298 = load i32, i32* %i, align 4, !dbg !9002
  %call447 = call i32 @mdio_read(%struct.net_device* %297, i32 %298, i32 3) #12, !dbg !9003
  %conv448 = trunc i32 %call447 to i16, !dbg !9003
  store i16 %conv448, i16* %id2, align 2, !dbg !9004
  %299 = load i16, i16* %id2, align 2, !dbg !9005
  %conv449 = zext i16 %299 to i32, !dbg !9005
  %cmp450 = icmp eq i32 %conv449, 65535, !dbg !9007
  br i1 %cmp450, label %if.then452, label %if.end453, !dbg !9008

if.then452:                                       ; preds = %if.end446
  br label %for.inc475, !dbg !9009

if.end453:                                        ; preds = %if.end446
  %300 = load i32, i32* %i, align 4, !dbg !9010
  %cmp454 = icmp eq i32 %300, 31, !dbg !9012
  br i1 %cmp454, label %land.lhs.true456, label %if.end462, !dbg !9013

land.lhs.true456:                                 ; preds = %if.end453
  %301 = load i32, i32* %chip_version, align 4, !dbg !9014
  %add457 = add i32 %301, 1, !dbg !9015
  %and458 = and i32 %add457, 65534, !dbg !9016
  %cmp459 = icmp eq i32 %and458, 9764, !dbg !9017
  br i1 %cmp459, label %if.then461, label %if.end462, !dbg !9018

if.then461:                                       ; preds = %land.lhs.true456
  br label %for.inc475, !dbg !9019

if.end462:                                        ; preds = %land.lhs.true456, %if.end453
  %302 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9020
  %phycount = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %302, i32 0, i32 27, !dbg !9021
  %303 = load i8, i8* %phycount, align 1, !dbg !9022
  %inc463 = add i8 %303, 1, !dbg !9022
  store i8 %inc463, i8* %phycount, align 1, !dbg !9022
  %304 = load i32, i32* %i, align 4, !dbg !9023
  %shl464 = shl i32 1, %304, !dbg !9024
  %305 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9025
  %phymask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %305, i32 0, i32 34, !dbg !9026
  %306 = load i32, i32* %phymask, align 4, !dbg !9027
  %or465 = or i32 %306, %shl464, !dbg !9027
  store i32 %or465, i32* %phymask, align 4, !dbg !9027
  %307 = load i32, i32* %i, align 4, !dbg !9028
  %308 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9029
  %mii_if466 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %308, i32 0, i32 31, !dbg !9030
  %phy_id467 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if466, i32 0, i32 0, !dbg !9031
  store i32 %307, i32* %phy_id467, align 8, !dbg !9032
  %309 = load i32, i32* @pcnet32_debug, align 4, !dbg !9033
  %and468 = and i32 %309, 2, !dbg !9035
  %tobool469 = icmp ne i32 %and468, 0, !dbg !9035
  br i1 %tobool469, label %if.then470, label %if.end474, !dbg !9036

if.then470:                                       ; preds = %if.end462
  %310 = load i16, i16* %id1, align 2, !dbg !9037
  %conv471 = zext i16 %310 to i32, !dbg !9037
  %311 = load i16, i16* %id2, align 2, !dbg !9037
  %conv472 = zext i16 %311 to i32, !dbg !9037
  %312 = load i32, i32* %i, align 4, !dbg !9037
  %call473 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.43, i64 0, i64 0), i32 %conv471, i32 %conv472, i32 %312) #13, !dbg !9037
  br label %if.end474, !dbg !9037

if.end474:                                        ; preds = %if.then470, %if.end462
  br label %for.inc475, !dbg !9038

for.inc475:                                       ; preds = %if.end474, %if.then461, %if.then452, %if.then445
  %313 = load i32, i32* %i, align 4, !dbg !9039
  %inc476 = add i32 %313, 1, !dbg !9039
  store i32 %inc476, i32* %i, align 4, !dbg !9039
  br label %for.cond436, !dbg !9040, !llvm.loop !9041

for.end477:                                       ; preds = %for.cond436
  %314 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9043
  %a478 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %314, i32 0, i32 10, !dbg !9044
  %315 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a478, align 8, !dbg !9044
  %write_bcr479 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %315, i32 0, i32 3, !dbg !9045
  %316 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr479, align 8, !dbg !9045
  %317 = load i64, i64* %ioaddr.addr, align 8, !dbg !9046
  %318 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9047
  %mii_if480 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %318, i32 0, i32 31, !dbg !9048
  %phy_id481 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if480, i32 0, i32 0, !dbg !9049
  %319 = load i32, i32* %phy_id481, align 8, !dbg !9049
  %shl482 = shl i32 %319, 5, !dbg !9050
  %conv483 = trunc i32 %shl482 to i16, !dbg !9051
  call void %316(i64 %317, i32 33, i16 zeroext %conv483) #12, !dbg !9043
  %320 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9052
  %phycount484 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %320, i32 0, i32 27, !dbg !9054
  %321 = load i8, i8* %phycount484, align 1, !dbg !9054
  %conv485 = sext i8 %321 to i32, !dbg !9052
  %cmp486 = icmp sgt i32 %conv485, 1, !dbg !9055
  br i1 %cmp486, label %if.then488, label %if.end491, !dbg !9056

if.then488:                                       ; preds = %for.end477
  %322 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9057
  %options489 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %322, i32 0, i32 28, !dbg !9058
  %323 = load i32, i32* %options489, align 4, !dbg !9059
  %or490 = or i32 %323, 3, !dbg !9059
  store i32 %or490, i32* %options489, align 4, !dbg !9059
  br label %if.end491, !dbg !9057

if.end491:                                        ; preds = %if.then488, %for.end477
  br label %if.end492, !dbg !9060

if.end492:                                        ; preds = %if.end491, %if.end423
  %324 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9061
  %watchdog_timer = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %324, i32 0, i32 32, !dbg !9061
  call void @init_timer_key(%struct.timer_list* %watchdog_timer, void (%struct.timer_list*)* @pcnet32_watchdog, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !9061
  %325 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9062
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %325, i32 0, i32 32, !dbg !9063
  store %struct.net_device_ops* @pcnet32_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !9064
  %326 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9065
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %326, i32 0, i32 33, !dbg !9066
  store %struct.ethtool_ops* @pcnet32_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !9067
  %327 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9068
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %327, i32 0, i32 94, !dbg !9069
  store i32 1250, i32* %watchdog_timeo, align 8, !dbg !9070
  %328 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9071
  %call493 = call i32 @register_netdev(%struct.net_device* %328) #12, !dbg !9073
  %tobool494 = icmp ne i32 %call493, 0, !dbg !9073
  br i1 %tobool494, label %if.then495, label %if.end496, !dbg !9074

if.then495:                                       ; preds = %if.end492
  br label %err_free_ring, !dbg !9075

if.end496:                                        ; preds = %if.end492
  %329 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9076
  %tobool497 = icmp ne %struct.pci_dev* %329, null, !dbg !9076
  br i1 %tobool497, label %if.then498, label %if.else499, !dbg !9078

if.then498:                                       ; preds = %if.end496
  %330 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9079
  %331 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9081
  %332 = bitcast %struct.net_device* %331 to i8*, !dbg !9081
  call void @pci_set_drvdata(%struct.pci_dev* %330, i8* %332) #12, !dbg !9082
  br label %if.end500, !dbg !9083

if.else499:                                       ; preds = %if.end496
  %333 = load %struct.net_device*, %struct.net_device** @pcnet32_dev, align 8, !dbg !9084
  %334 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9086
  %next = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %334, i32 0, i32 30, !dbg !9087
  store %struct.net_device* %333, %struct.net_device** %next, align 8, !dbg !9088
  %335 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9089
  store %struct.net_device* %335, %struct.net_device** @pcnet32_dev, align 8, !dbg !9090
  br label %if.end500

if.end500:                                        ; preds = %if.else499, %if.then498
  %336 = load i32, i32* @pcnet32_debug, align 4, !dbg !9091
  %and501 = and i32 %336, 2, !dbg !9093
  %tobool502 = icmp ne i32 %and501, 0, !dbg !9093
  br i1 %tobool502, label %if.then503, label %if.end508, !dbg !9094

if.then503:                                       ; preds = %if.end500
  %337 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9095
  %name504 = getelementptr inbounds %struct.net_device, %struct.net_device* %337, i32 0, i32 0, !dbg !9095
  %arraydecay505 = getelementptr inbounds [16 x i8], [16 x i8]* %name504, i64 0, i64 0, !dbg !9095
  %338 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9095
  %name506 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %338, i32 0, i32 5, !dbg !9095
  %339 = load i8*, i8** %name506, align 8, !dbg !9095
  %call507 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0), i8* %arraydecay505, i8* %339) #13, !dbg !9095
  br label %if.end508, !dbg !9095

if.end508:                                        ; preds = %if.then503, %if.end500
  %340 = load i32, i32* @cards_found, align 4, !dbg !9096
  %inc509 = add i32 %340, 1, !dbg !9096
  store i32 %inc509, i32* @cards_found, align 4, !dbg !9096
  %341 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !9097
  %write_bcr510 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %341, i32 0, i32 3, !dbg !9098
  %342 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr510, align 8, !dbg !9098
  %343 = load i64, i64* %ioaddr.addr, align 8, !dbg !9099
  %344 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !9100
  %read_bcr511 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %344, i32 0, i32 2, !dbg !9101
  %345 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr511, align 8, !dbg !9101
  %346 = load i64, i64* %ioaddr.addr, align 8, !dbg !9102
  %call512 = call zeroext i16 %345(i64 %346, i32 2) #12, !dbg !9100
  %conv513 = zext i16 %call512 to i32, !dbg !9100
  %or514 = or i32 %conv513, 4096, !dbg !9103
  %conv515 = trunc i32 %or514 to i16, !dbg !9100
  call void %342(i64 %343, i32 2, i16 zeroext %conv515) #12, !dbg !9097
  store i32 0, i32* %retval, align 4, !dbg !9104
  br label %return, !dbg !9104

err_free_ring:                                    ; preds = %if.then495, %if.end415, %if.then333
  call void @llvm.dbg.label(metadata !9105), !dbg !9106
  %347 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9107
  call void @pcnet32_free_ring(%struct.net_device* %347) #12, !dbg !9108
  %348 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9109
  %pci_dev516 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %348, i32 0, i32 4, !dbg !9110
  %349 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev516, align 8, !dbg !9110
  %dev517 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %349, i32 0, i32 41, !dbg !9111
  %350 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9112
  %init_block518 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %350, i32 0, i32 0, !dbg !9113
  %351 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block518, align 8, !dbg !9113
  %352 = bitcast %struct.pcnet32_init_block* %351 to i8*, !dbg !9112
  %353 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9114
  %init_dma_addr519 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %353, i32 0, i32 3, !dbg !9115
  %354 = load i64, i64* %init_dma_addr519, align 8, !dbg !9115
  call void @dma_free_coherent(%struct.device* %dev517, i64 28, i8* %352, i64 %354) #12, !dbg !9116
  br label %err_free_netdev, !dbg !9116

err_free_netdev:                                  ; preds = %err_free_ring, %if.end250
  call void @llvm.dbg.label(metadata !9117), !dbg !9118
  %355 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9119
  call void @free_netdev(%struct.net_device* %355) #12, !dbg !9120
  br label %err_release_region, !dbg !9120

err_release_region:                               ; preds = %err_free_netdev, %if.then104, %if.end75, %if.end38, %if.end
  call void @llvm.dbg.label(metadata !9121), !dbg !9122
  %356 = load i64, i64* %ioaddr.addr, align 8, !dbg !9123
  call void @__release_region(%struct.resource* @ioport_resource, i64 %356, i64 32) #12, !dbg !9123
  %357 = load i32, i32* %ret, align 4, !dbg !9124
  store i32 %357, i32* %retval, align 4, !dbg !9125
  br label %return, !dbg !9125

return:                                           ; preds = %err_release_region, %if.end508
  %358 = load i32, i32* %retval, align 4, !dbg !9126
  ret i32 %358, !dbg !9126
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_wio_reset(i64 %addr) #2 !dbg !9127 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9128, metadata !DIExpression()), !dbg !9129
  %0 = load i64, i64* %addr.addr, align 8, !dbg !9130
  %add = add i64 %0, 20, !dbg !9131
  %conv = trunc i64 %add to i32, !dbg !9130
  %call = call zeroext i16 @inw(i32 %conv) #12, !dbg !9132
  ret void, !dbg !9133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcnet32_wio_read_csr(i64 %addr, i32 %index) #2 !dbg !9134 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9135, metadata !DIExpression()), !dbg !9136
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  %0 = load i32, i32* %index.addr, align 4, !dbg !9139
  %conv = trunc i32 %0 to i16, !dbg !9139
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9140
  %add = add i64 %1, 18, !dbg !9141
  %conv1 = trunc i64 %add to i32, !dbg !9140
  call void @outw(i16 zeroext %conv, i32 %conv1) #12, !dbg !9142
  %2 = load i64, i64* %addr.addr, align 8, !dbg !9143
  %add2 = add i64 %2, 16, !dbg !9144
  %conv3 = trunc i64 %add2 to i32, !dbg !9143
  %call = call zeroext i16 @inw(i32 %conv3) #12, !dbg !9145
  ret i16 %call, !dbg !9146
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_wio_check(i64 %addr) #2 !dbg !9147 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  %0 = load i64, i64* %addr.addr, align 8, !dbg !9152
  %add = add i64 %0, 18, !dbg !9153
  %conv = trunc i64 %add to i32, !dbg !9152
  call void @outw(i16 zeroext 88, i32 %conv) #12, !dbg !9154
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9155
  %add1 = add i64 %1, 18, !dbg !9156
  %conv2 = trunc i64 %add1 to i32, !dbg !9155
  %call = call zeroext i16 @inw(i32 %conv2) #12, !dbg !9157
  %conv3 = zext i16 %call to i32, !dbg !9157
  %cmp = icmp eq i32 %conv3, 88, !dbg !9158
  %conv4 = zext i1 %cmp to i32, !dbg !9158
  ret i32 %conv4, !dbg !9159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_dwio_reset(i64 %addr) #2 !dbg !9160 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9161, metadata !DIExpression()), !dbg !9162
  %0 = load i64, i64* %addr.addr, align 8, !dbg !9163
  %add = add i64 %0, 24, !dbg !9164
  %conv = trunc i64 %add to i32, !dbg !9163
  %call = call i32 @inl(i32 %conv) #12, !dbg !9165
  ret void, !dbg !9166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcnet32_dwio_read_csr(i64 %addr, i32 %index) #2 !dbg !9167 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9168, metadata !DIExpression()), !dbg !9169
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9170, metadata !DIExpression()), !dbg !9171
  %0 = load i32, i32* %index.addr, align 4, !dbg !9172
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9173
  %add = add i64 %1, 20, !dbg !9174
  %conv = trunc i64 %add to i32, !dbg !9173
  call void @outl(i32 %0, i32 %conv) #12, !dbg !9175
  %2 = load i64, i64* %addr.addr, align 8, !dbg !9176
  %add1 = add i64 %2, 16, !dbg !9177
  %conv2 = trunc i64 %add1 to i32, !dbg !9176
  %call = call i32 @inl(i32 %conv2) #12, !dbg !9178
  %and = and i32 %call, 65535, !dbg !9179
  %conv3 = trunc i32 %and to i16, !dbg !9178
  ret i16 %conv3, !dbg !9180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_dwio_check(i64 %addr) #2 !dbg !9181 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9182, metadata !DIExpression()), !dbg !9183
  %0 = load i64, i64* %addr.addr, align 8, !dbg !9184
  %add = add i64 %0, 20, !dbg !9185
  %conv = trunc i64 %add to i32, !dbg !9184
  call void @outl(i32 88, i32 %conv) #12, !dbg !9186
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9187
  %add1 = add i64 %1, 20, !dbg !9188
  %conv2 = trunc i64 %add1 to i32, !dbg !9187
  %call = call i32 @inl(i32 %conv2) #12, !dbg !9189
  %and = and i32 %call, 65535, !dbg !9190
  %cmp = icmp eq i32 %and, 88, !dbg !9191
  %conv3 = zext i1 %cmp to i32, !dbg !9191
  ret i32 %conv3, !dbg !9192
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #2 !dbg !9193 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9197, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.declare(metadata i8* %value, metadata !9199, metadata !DIExpression()), !dbg !9198
  %0 = load i32, i32* %port.addr, align 4, !dbg !9198
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !9198, !srcloc !9200
  store i8 %1, i8* %value, align 1, !dbg !9198
  %2 = load i8, i8* %value, align 1, !dbg !9198
  ret i8 %2, !dbg !9198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ether_addr_equal(i8* %addr1, i8* %addr2) #2 !dbg !9201 {
entry:
  %addr1.addr = alloca i8*, align 8
  %addr2.addr = alloca i8*, align 8
  %fold = alloca i32, align 4
  store i8* %addr1, i8** %addr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr1.addr, metadata !9205, metadata !DIExpression()), !dbg !9206
  store i8* %addr2, i8** %addr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr2.addr, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.declare(metadata i32* %fold, metadata !9209, metadata !DIExpression()), !dbg !9210
  %0 = load i8*, i8** %addr1.addr, align 8, !dbg !9211
  %1 = bitcast i8* %0 to i32*, !dbg !9212
  %2 = load i32, i32* %1, align 4, !dbg !9212
  %3 = load i8*, i8** %addr2.addr, align 8, !dbg !9213
  %4 = bitcast i8* %3 to i32*, !dbg !9214
  %5 = load i32, i32* %4, align 4, !dbg !9214
  %xor = xor i32 %2, %5, !dbg !9215
  %6 = load i8*, i8** %addr1.addr, align 8, !dbg !9216
  %add.ptr = getelementptr i8, i8* %6, i64 4, !dbg !9217
  %7 = bitcast i8* %add.ptr to i16*, !dbg !9218
  %8 = load i16, i16* %7, align 2, !dbg !9218
  %conv = zext i16 %8 to i32, !dbg !9219
  %9 = load i8*, i8** %addr2.addr, align 8, !dbg !9220
  %add.ptr1 = getelementptr i8, i8* %9, i64 4, !dbg !9221
  %10 = bitcast i8* %add.ptr1 to i16*, !dbg !9222
  %11 = load i16, i16* %10, align 2, !dbg !9222
  %conv2 = zext i16 %11 to i32, !dbg !9223
  %xor3 = xor i32 %conv, %conv2, !dbg !9224
  %or = or i32 %xor, %xor3, !dbg !9225
  store i32 %or, i32* %fold, align 4, !dbg !9210
  %12 = load i32, i32* %fold, align 4, !dbg !9226
  %cmp = icmp eq i32 %12, 0, !dbg !9227
  ret i1 %cmp, !dbg !9228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #2 !dbg !9229 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9232, metadata !DIExpression()), !dbg !9233
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9234
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #12, !dbg !9235
  br i1 %call, label %land.end, label %land.rhs, !dbg !9236

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9237
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #12, !dbg !9238
  %lnot = xor i1 %call1, true, !dbg !9239
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !9240
  ret i1 %2, !dbg !9241
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_zero_addr(i8* %addr) #2 !dbg !9242 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9245, metadata !DIExpression()), !dbg !9246
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9247
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 6, i1 false), !dbg !9248
  ret void, !dbg !9249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !9250 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9253, metadata !DIExpression()), !dbg !9254
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9261
  %1 = load i64, i64* %size.addr, align 8, !dbg !9262
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !9263
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !9264
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !9265
  %and = and i32 %4, 8192, !dbg !9266
  %tobool = icmp ne i32 %and, 0, !dbg !9267
  %5 = zext i1 %tobool to i64, !dbg !9267
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !9267
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !9268
  ret i8* %call, !dbg !9269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mdio_read(%struct.net_device* %dev, i32 %phy_id, i32 %reg_num) #2 !dbg !9270 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %phy_id.addr = alloca i32, align 4
  %reg_num.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %val_out = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9271, metadata !DIExpression()), !dbg !9272
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !9273, metadata !DIExpression()), !dbg !9274
  store i32 %reg_num, i32* %reg_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_num.addr, metadata !9275, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !9277, metadata !DIExpression()), !dbg !9278
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9279
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !9280
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !9280
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !9278
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !9281, metadata !DIExpression()), !dbg !9282
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9283
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !9284
  %3 = load i64, i64* %base_addr, align 8, !dbg !9284
  store i64 %3, i64* %ioaddr, align 8, !dbg !9282
  call void @llvm.dbg.declare(metadata i16* %val_out, metadata !9285, metadata !DIExpression()), !dbg !9286
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9287
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 29, !dbg !9289
  %bf.load = load i8, i8* %mii, align 8, !dbg !9289
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !9289
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9289
  %bf.cast = zext i8 %bf.clear to i32, !dbg !9289
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9287
  br i1 %tobool, label %if.end, label %if.then, !dbg !9290

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9291
  br label %return, !dbg !9291

if.end:                                           ; preds = %entry
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9292
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 10, !dbg !9293
  %6 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !9293
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %6, i32 0, i32 3, !dbg !9294
  %7 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !9294
  %8 = load i64, i64* %ioaddr, align 8, !dbg !9295
  %9 = load i32, i32* %phy_id.addr, align 4, !dbg !9296
  %and = and i32 %9, 31, !dbg !9297
  %shl = shl i32 %and, 5, !dbg !9298
  %10 = load i32, i32* %reg_num.addr, align 4, !dbg !9299
  %and1 = and i32 %10, 31, !dbg !9300
  %or = or i32 %shl, %and1, !dbg !9301
  %conv = trunc i32 %or to i16, !dbg !9302
  call void %7(i64 %8, i32 33, i16 zeroext %conv) #12, !dbg !9292
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9303
  %a2 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 10, !dbg !9304
  %12 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a2, align 8, !dbg !9304
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %12, i32 0, i32 2, !dbg !9305
  %13 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !9305
  %14 = load i64, i64* %ioaddr, align 8, !dbg !9306
  %call3 = call zeroext i16 %13(i64 %14, i32 34) #12, !dbg !9303
  store i16 %call3, i16* %val_out, align 2, !dbg !9307
  %15 = load i16, i16* %val_out, align 2, !dbg !9308
  %conv4 = zext i16 %15 to i32, !dbg !9308
  store i32 %conv4, i32* %retval, align 4, !dbg !9309
  br label %return, !dbg !9309

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9310
  ret i32 %16, !dbg !9310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mdio_write(%struct.net_device* %dev, i32 %phy_id, i32 %reg_num, i32 %val) #2 !dbg !9311 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %phy_id.addr = alloca i32, align 4
  %reg_num.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9312, metadata !DIExpression()), !dbg !9313
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !9314, metadata !DIExpression()), !dbg !9315
  store i32 %reg_num, i32* %reg_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_num.addr, metadata !9316, metadata !DIExpression()), !dbg !9317
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !9318, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !9320, metadata !DIExpression()), !dbg !9321
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9322
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !9323
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !9323
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !9321
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !9324, metadata !DIExpression()), !dbg !9325
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9326
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !9327
  %3 = load i64, i64* %base_addr, align 8, !dbg !9327
  store i64 %3, i64* %ioaddr, align 8, !dbg !9325
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9328
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 29, !dbg !9330
  %bf.load = load i8, i8* %mii, align 8, !dbg !9330
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !9330
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9330
  %bf.cast = zext i8 %bf.clear to i32, !dbg !9330
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9328
  br i1 %tobool, label %if.end, label %if.then, !dbg !9331

if.then:                                          ; preds = %entry
  br label %return, !dbg !9332

if.end:                                           ; preds = %entry
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9333
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 10, !dbg !9334
  %6 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !9334
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %6, i32 0, i32 3, !dbg !9335
  %7 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !9335
  %8 = load i64, i64* %ioaddr, align 8, !dbg !9336
  %9 = load i32, i32* %phy_id.addr, align 4, !dbg !9337
  %and = and i32 %9, 31, !dbg !9338
  %shl = shl i32 %and, 5, !dbg !9339
  %10 = load i32, i32* %reg_num.addr, align 4, !dbg !9340
  %and1 = and i32 %10, 31, !dbg !9341
  %or = or i32 %shl, %and1, !dbg !9342
  %conv = trunc i32 %or to i16, !dbg !9343
  call void %7(i64 %8, i32 33, i16 zeroext %conv) #12, !dbg !9333
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9344
  %a2 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 10, !dbg !9345
  %12 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a2, align 8, !dbg !9345
  %write_bcr3 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %12, i32 0, i32 3, !dbg !9346
  %13 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr3, align 8, !dbg !9346
  %14 = load i64, i64* %ioaddr, align 8, !dbg !9347
  %15 = load i32, i32* %val.addr, align 4, !dbg !9348
  %conv4 = trunc i32 %15 to i16, !dbg !9348
  call void %13(i64 %14, i32 34, i16 zeroext %conv4) #12, !dbg !9344
  br label %return, !dbg !9349

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9349
}

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_poll(%struct.napi_struct* %napi, i32 %budget) #2 !dbg !9350 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !9351, metadata !DIExpression()), !dbg !9355
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !9358
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !9359
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pcnet32_private*, align 8
  %dev = alloca %struct.net_device*, align 8
  %ioaddr = alloca i64, align 8
  %flags = alloca i64, align 8
  %work_done = alloca i32, align 4
  %val = alloca i16, align 2
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !9368, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !9370, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9372, metadata !DIExpression()), !dbg !9374
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !9374
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !9374
  store i8* %1, i8** %__mptr, align 8, !dbg !9374
  br label %do.body, !dbg !9374

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9375

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9374
  %add.ptr = getelementptr i8, i8* %2, i64 -152, !dbg !9374
  %3 = bitcast i8* %add.ptr to %struct.pcnet32_private*, !dbg !9374
  store %struct.pcnet32_private* %3, %struct.pcnet32_private** %tmp, align 8, !dbg !9375
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %tmp, align 8, !dbg !9374
  store %struct.pcnet32_private* %4, %struct.pcnet32_private** %lp, align 8, !dbg !9371
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9377, metadata !DIExpression()), !dbg !9378
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9379
  %dev1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 24, !dbg !9380
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9380
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !9378
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !9381, metadata !DIExpression()), !dbg !9382
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9383
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 5, !dbg !9384
  %8 = load i64, i64* %base_addr, align 8, !dbg !9384
  store i64 %8, i64* %ioaddr, align 8, !dbg !9382
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !9387, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.declare(metadata i16* %val, metadata !9389, metadata !DIExpression()), !dbg !9390
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9391
  %10 = load i32, i32* %budget.addr, align 4, !dbg !9392
  %call = call i32 @pcnet32_rx(%struct.net_device* %9, i32 %10) #12, !dbg !9393
  store i32 %call, i32* %work_done, align 4, !dbg !9394
  br label %do.body2, !dbg !9395

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !9396

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9397, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9400, metadata !DIExpression()), !dbg !9399
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9399
  %conv = zext i1 %cmp to i32, !dbg !9399
  store i32 1, i32* %tmp4, align 4, !dbg !9399
  %11 = load i32, i32* %tmp4, align 4, !dbg !9399
  br label %do.body5, !dbg !9401

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !9402

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9403

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !9409, metadata !DIExpression()), !dbg !9408
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !9408
  %conv11 = zext i1 %cmp10 to i32, !dbg !9408
  store i32 1, i32* %tmp12, align 4, !dbg !9408
  %12 = load i32, i32* %tmp12, align 4, !dbg !9408
  %call13 = call i64 @arch_local_irq_save() #12, !dbg !9410
  store i64 %call13, i64* %flags, align 8, !dbg !9410
  br label %do.end14, !dbg !9410

do.end14:                                         ; preds = %do.body7
  br label %do.end15, !dbg !9403

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !9402

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9411, !srcloc !9412
  br label %do.body17, !dbg !9411

do.body17:                                        ; preds = %do.body16
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9413
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 11, !dbg !9413
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9414
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !9415
  %rlock.i = bitcast %union.anon.46* %15 to %struct.raw_spinlock*, !dbg !9415
  br label %do.end19, !dbg !9413

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !9411

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9402

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9401

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9396

do.end23:                                         ; preds = %do.end22
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9416
  %call24 = call i32 @pcnet32_tx(%struct.net_device* %16) #12, !dbg !9418
  %tobool = icmp ne i32 %call24, 0, !dbg !9418
  br i1 %tobool, label %if.then, label %if.end, !dbg !9419

if.then:                                          ; preds = %do.end23
  %17 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9420
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %17, i32 0, i32 10, !dbg !9422
  %18 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !9422
  %reset = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %18, i32 0, i32 6, !dbg !9423
  %19 = load void (i64)*, void (i64)** %reset, align 8, !dbg !9423
  %20 = load i64, i64* %ioaddr, align 8, !dbg !9424
  call void %19(i64 %20) #12, !dbg !9420
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9425
  %a25 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 10, !dbg !9426
  %22 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a25, align 8, !dbg !9426
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %22, i32 0, i32 1, !dbg !9427
  %23 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !9427
  %24 = load i64, i64* %ioaddr, align 8, !dbg !9428
  call void %23(i64 %24, i32 4, i16 zeroext 2325) #12, !dbg !9425
  %25 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9429
  call void @pcnet32_restart(%struct.net_device* %25, i32 2) #12, !dbg !9430
  %26 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9431
  call void @netif_wake_queue(%struct.net_device* %26) #12, !dbg !9432
  br label %if.end, !dbg !9433

if.end:                                           ; preds = %if.then, %do.end23
  %27 = load i32, i32* %work_done, align 4, !dbg !9434
  %28 = load i32, i32* %budget.addr, align 4, !dbg !9436
  %cmp26 = icmp slt i32 %27, %28, !dbg !9437
  br i1 %cmp26, label %land.lhs.true, label %if.end39, !dbg !9438

land.lhs.true:                                    ; preds = %if.end
  %29 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !9439
  %30 = load i32, i32* %work_done, align 4, !dbg !9440
  %call28 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %29, i32 %30) #12, !dbg !9441
  br i1 %call28, label %if.then30, label %if.end39, !dbg !9442

if.then30:                                        ; preds = %land.lhs.true
  %31 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9443
  %a31 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %31, i32 0, i32 10, !dbg !9445
  %32 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a31, align 8, !dbg !9445
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %32, i32 0, i32 0, !dbg !9446
  %33 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !9446
  %34 = load i64, i64* %ioaddr, align 8, !dbg !9447
  %call32 = call zeroext i16 %33(i64 %34, i32 3) #12, !dbg !9443
  store i16 %call32, i16* %val, align 2, !dbg !9448
  %35 = load i16, i16* %val, align 2, !dbg !9449
  %conv33 = zext i16 %35 to i32, !dbg !9449
  %and = and i32 %conv33, 255, !dbg !9449
  %conv34 = trunc i32 %and to i16, !dbg !9449
  store i16 %conv34, i16* %val, align 2, !dbg !9449
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9450
  %a35 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 10, !dbg !9451
  %37 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a35, align 8, !dbg !9451
  %write_csr36 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %37, i32 0, i32 1, !dbg !9452
  %38 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr36, align 8, !dbg !9452
  %39 = load i64, i64* %ioaddr, align 8, !dbg !9453
  %40 = load i16, i16* %val, align 2, !dbg !9454
  call void %38(i64 %39, i32 3, i16 zeroext %40) #12, !dbg !9450
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9455
  %a37 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 10, !dbg !9456
  %42 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a37, align 8, !dbg !9456
  %write_csr38 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %42, i32 0, i32 1, !dbg !9457
  %43 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr38, align 8, !dbg !9457
  %44 = load i64, i64* %ioaddr, align 8, !dbg !9458
  call void %43(i64 %44, i32 0, i16 zeroext 64) #12, !dbg !9455
  br label %if.end39, !dbg !9459

if.end39:                                         ; preds = %if.then30, %land.lhs.true, %if.end
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9460
  %lock40 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 11, !dbg !9461
  %46 = load i64, i64* %flags, align 8, !dbg !9462
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %46, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !9466
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !9466
  store i32 1, i32* %tmp.i, align 4, !dbg !9466
  %47 = load i32, i32* %tmp.i, align 4, !dbg !9466
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !9473
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !9473
  store i32 1, i32* %tmp8.i, align 4, !dbg !9473
  %48 = load i32, i32* %tmp8.i, align 4, !dbg !9473
  %49 = load i64, i64* %flags.addr.i, align 8, !dbg !9475
  call void @arch_local_irq_restore(i64 %49) #14, !dbg !9475
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9476, !srcloc !9478
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !9479
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !9479
  %rlock.i42 = bitcast %union.anon.46* %51 to %struct.raw_spinlock*, !dbg !9479
  %52 = load i32, i32* %work_done, align 4, !dbg !9481
  ret i32 %52, !dbg !9482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_alloc_ring(%struct.net_device* %dev, i8* %name) #2 !dbg !9483 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %name.addr = alloca i8*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9486, metadata !DIExpression()), !dbg !9487
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9488, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !9490, metadata !DIExpression()), !dbg !9491
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9492
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !9493
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !9493
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !9491
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9494
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 4, !dbg !9495
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !9495
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !9496
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9497
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 15, !dbg !9498
  %5 = load i32, i32* %tx_ring_size, align 4, !dbg !9498
  %conv = zext i32 %5 to i64, !dbg !9497
  %mul = mul i64 16, %conv, !dbg !9499
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9500
  %tx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 21, !dbg !9501
  %call2 = call i8* @dma_alloc_coherent(%struct.device* %dev1, i64 %mul, i64* %tx_ring_dma_addr, i32 3264) #12, !dbg !9502
  %7 = bitcast i8* %call2 to %struct.pcnet32_tx_head*, !dbg !9502
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9503
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 2, !dbg !9504
  store %struct.pcnet32_tx_head* %7, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !9505
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9506
  %tx_ring3 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 2, !dbg !9508
  %10 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring3, align 8, !dbg !9508
  %cmp = icmp eq %struct.pcnet32_tx_head* %10, null, !dbg !9509
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9510

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9511

do.body:                                          ; preds = %if.then
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9513
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 33, !dbg !9513
  %12 = load i32, i32* %msg_enable, align 8, !dbg !9513
  %and = and i32 %12, 1, !dbg !9513
  %tobool = icmp ne i32 %and, 0, !dbg !9513
  br i1 %tobool, label %if.then5, label %if.end, !dbg !9516

if.then5:                                         ; preds = %do.body
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9513
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %13, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.56, i64 0, i64 0)) #13, !dbg !9513
  br label %if.end, !dbg !9513

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !9516

do.end:                                           ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9517
  br label %return, !dbg !9517

if.end6:                                          ; preds = %entry
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9518
  %pci_dev7 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 4, !dbg !9519
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev7, align 8, !dbg !9519
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !9520
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9521
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 14, !dbg !9522
  %17 = load i32, i32* %rx_ring_size, align 8, !dbg !9522
  %conv9 = zext i32 %17 to i64, !dbg !9521
  %mul10 = mul i64 16, %conv9, !dbg !9523
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9524
  %rx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 20, !dbg !9525
  %call11 = call i8* @dma_alloc_coherent(%struct.device* %dev8, i64 %mul10, i64* %rx_ring_dma_addr, i32 3264) #12, !dbg !9526
  %19 = bitcast i8* %call11 to %struct.pcnet32_rx_head*, !dbg !9526
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9527
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 1, !dbg !9528
  store %struct.pcnet32_rx_head* %19, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !9529
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9530
  %rx_ring12 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 1, !dbg !9532
  %22 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring12, align 8, !dbg !9532
  %cmp13 = icmp eq %struct.pcnet32_rx_head* %22, null, !dbg !9533
  br i1 %cmp13, label %if.then15, label %if.end23, !dbg !9534

if.then15:                                        ; preds = %if.end6
  br label %do.body16, !dbg !9535

do.body16:                                        ; preds = %if.then15
  %23 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9537
  %msg_enable17 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %23, i32 0, i32 33, !dbg !9537
  %24 = load i32, i32* %msg_enable17, align 8, !dbg !9537
  %and18 = and i32 %24, 1, !dbg !9537
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9537
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !9540

if.then20:                                        ; preds = %do.body16
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9537
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %25, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.56, i64 0, i64 0)) #13, !dbg !9537
  br label %if.end21, !dbg !9537

if.end21:                                         ; preds = %if.then20, %do.body16
  br label %do.end22, !dbg !9540

do.end22:                                         ; preds = %if.end21
  store i32 -12, i32* %retval, align 4, !dbg !9541
  br label %return, !dbg !9541

if.end23:                                         ; preds = %if.end6
  %26 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9542
  %tx_ring_size24 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %26, i32 0, i32 15, !dbg !9543
  %27 = load i32, i32* %tx_ring_size24, align 4, !dbg !9543
  %conv25 = zext i32 %27 to i64, !dbg !9542
  %call26 = call i8* @kcalloc(i64 %conv25, i64 8, i32 3264) #12, !dbg !9544
  %28 = bitcast i8* %call26 to i64*, !dbg !9544
  %29 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9545
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %29, i32 0, i32 8, !dbg !9546
  store i64* %28, i64** %tx_dma_addr, align 8, !dbg !9547
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9548
  %tx_dma_addr27 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 8, !dbg !9550
  %31 = load i64*, i64** %tx_dma_addr27, align 8, !dbg !9550
  %tobool28 = icmp ne i64* %31, null, !dbg !9548
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !9551

if.then29:                                        ; preds = %if.end23
  store i32 -12, i32* %retval, align 4, !dbg !9552
  br label %return, !dbg !9552

if.end30:                                         ; preds = %if.end23
  %32 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9553
  %rx_ring_size31 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %32, i32 0, i32 14, !dbg !9554
  %33 = load i32, i32* %rx_ring_size31, align 8, !dbg !9554
  %conv32 = zext i32 %33 to i64, !dbg !9553
  %call33 = call i8* @kcalloc(i64 %conv32, i64 8, i32 3264) #12, !dbg !9555
  %34 = bitcast i8* %call33 to i64*, !dbg !9555
  %35 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9556
  %rx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %35, i32 0, i32 9, !dbg !9557
  store i64* %34, i64** %rx_dma_addr, align 8, !dbg !9558
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9559
  %rx_dma_addr34 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 9, !dbg !9561
  %37 = load i64*, i64** %rx_dma_addr34, align 8, !dbg !9561
  %tobool35 = icmp ne i64* %37, null, !dbg !9559
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !9562

if.then36:                                        ; preds = %if.end30
  store i32 -12, i32* %retval, align 4, !dbg !9563
  br label %return, !dbg !9563

if.end37:                                         ; preds = %if.end30
  %38 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9564
  %tx_ring_size38 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %38, i32 0, i32 15, !dbg !9565
  %39 = load i32, i32* %tx_ring_size38, align 4, !dbg !9565
  %conv39 = zext i32 %39 to i64, !dbg !9564
  %call40 = call i8* @kcalloc(i64 %conv39, i64 8, i32 3264) #12, !dbg !9566
  %40 = bitcast i8* %call40 to %struct.sk_buff**, !dbg !9566
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9567
  %tx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 6, !dbg !9568
  store %struct.sk_buff** %40, %struct.sk_buff*** %tx_skbuff, align 8, !dbg !9569
  %42 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9570
  %tx_skbuff41 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %42, i32 0, i32 6, !dbg !9572
  %43 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff41, align 8, !dbg !9572
  %tobool42 = icmp ne %struct.sk_buff** %43, null, !dbg !9570
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !9573

if.then43:                                        ; preds = %if.end37
  store i32 -12, i32* %retval, align 4, !dbg !9574
  br label %return, !dbg !9574

if.end44:                                         ; preds = %if.end37
  %44 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9575
  %rx_ring_size45 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %44, i32 0, i32 14, !dbg !9576
  %45 = load i32, i32* %rx_ring_size45, align 8, !dbg !9576
  %conv46 = zext i32 %45 to i64, !dbg !9575
  %call47 = call i8* @kcalloc(i64 %conv46, i64 8, i32 3264) #12, !dbg !9577
  %46 = bitcast i8* %call47 to %struct.sk_buff**, !dbg !9577
  %47 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9578
  %rx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %47, i32 0, i32 7, !dbg !9579
  store %struct.sk_buff** %46, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !9580
  %48 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9581
  %rx_skbuff48 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %48, i32 0, i32 7, !dbg !9583
  %49 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff48, align 8, !dbg !9583
  %tobool49 = icmp ne %struct.sk_buff** %49, null, !dbg !9581
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !9584

if.then50:                                        ; preds = %if.end44
  store i32 -12, i32* %retval, align 4, !dbg !9585
  br label %return, !dbg !9585

if.end51:                                         ; preds = %if.end44
  store i32 0, i32* %retval, align 4, !dbg !9586
  br label %return, !dbg !9586

return:                                           ; preds = %if.end51, %if.then50, %if.then43, %if.then36, %if.then29, %do.end22, %do.end
  %50 = load i32, i32* %retval, align 4, !dbg !9587
  ret i32 %50, !dbg !9587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #2 !dbg !9588 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9593, metadata !DIExpression()), !dbg !9594
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9595
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9596
  %call = call i8* @dev_name(%struct.device* %dev) #12, !dbg !9597
  ret i8* %call, !dbg !9598
}

; Function Attrs: noredzone
declare dso_local i64 @probe_irq_on() #3

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #3

; Function Attrs: noredzone
declare dso_local i32 @probe_irq_off(i64) #3

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_watchdog(%struct.timer_list* %t) #2 !dbg !9599 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !9351, metadata !DIExpression()), !dbg !9600
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !9602
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !9603
  %t.addr = alloca %struct.timer_list*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pcnet32_private*, align 8
  %dev = alloca %struct.net_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !9612, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9614, metadata !DIExpression()), !dbg !9616
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !9616
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !9616
  store i8* %1, i8** %__mptr, align 8, !dbg !9616
  br label %do.body, !dbg !9616

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9617

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9616
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !9616
  %3 = bitcast i8* %add.ptr to %struct.pcnet32_private*, !dbg !9616
  store %struct.pcnet32_private* %3, %struct.pcnet32_private** %tmp, align 8, !dbg !9617
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %tmp, align 8, !dbg !9616
  store %struct.pcnet32_private* %4, %struct.pcnet32_private** %lp, align 8, !dbg !9613
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9619, metadata !DIExpression()), !dbg !9620
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9621
  %dev1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 24, !dbg !9622
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9622
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !9620
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9623, metadata !DIExpression()), !dbg !9624
  br label %do.body2, !dbg !9625

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !9626

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9627, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9630, metadata !DIExpression()), !dbg !9629
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9629
  %conv = zext i1 %cmp to i32, !dbg !9629
  store i32 1, i32* %tmp4, align 4, !dbg !9629
  %7 = load i32, i32* %tmp4, align 4, !dbg !9629
  br label %do.body5, !dbg !9631

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !9632

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9633

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !9635, metadata !DIExpression()), !dbg !9638
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !9639, metadata !DIExpression()), !dbg !9638
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !9638
  %conv11 = zext i1 %cmp10 to i32, !dbg !9638
  store i32 1, i32* %tmp12, align 4, !dbg !9638
  %8 = load i32, i32* %tmp12, align 4, !dbg !9638
  %call = call i64 @arch_local_irq_save() #12, !dbg !9640
  store i64 %call, i64* %flags, align 8, !dbg !9640
  br label %do.end13, !dbg !9640

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !9633

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !9632

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9641, !srcloc !9642
  br label %do.body16, !dbg !9641

do.body16:                                        ; preds = %do.body15
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9643
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 11, !dbg !9643
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9644
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9645
  %rlock.i = bitcast %union.anon.46* %11 to %struct.raw_spinlock*, !dbg !9645
  br label %do.end18, !dbg !9643

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !9641

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9632

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9631

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9626

do.end22:                                         ; preds = %do.end21
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9646
  call void @pcnet32_check_media(%struct.net_device* %12, i32 0) #12, !dbg !9647
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9648
  %lock23 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 11, !dbg !9649
  %14 = load i64, i64* %flags, align 8, !dbg !9650
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !9651
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !9651
  store i32 1, i32* %tmp.i, align 4, !dbg !9651
  %15 = load i32, i32* %tmp.i, align 4, !dbg !9651
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !9652
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !9652
  store i32 1, i32* %tmp8.i, align 4, !dbg !9652
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !9652
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !9653
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !9653
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9654, !srcloc !9478
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !9655
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9655
  %rlock.i27 = bitcast %union.anon.46* %19 to %struct.raw_spinlock*, !dbg !9655
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9656
  %watchdog_timer = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 32, !dbg !9657
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !9658
  %add = add i64 %21, 500, !dbg !9658
  %call24 = call i64 @round_jiffies(i64 %add) #12, !dbg !9659
  %call25 = call i32 @mod_timer(%struct.timer_list* %watchdog_timer, i64 %call24) #12, !dbg !9660
  ret void, !dbg !9661
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !9662 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9665, metadata !DIExpression()), !dbg !9666
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9667, metadata !DIExpression()), !dbg !9668
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9669
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9670
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9671
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !9672
  ret void, !dbg !9673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #2 !dbg !9674 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9677, metadata !DIExpression()), !dbg !9678
  call void @llvm.dbg.declare(metadata i16* %value, metadata !9679, metadata !DIExpression()), !dbg !9678
  %0 = load i32, i32* %port.addr, align 4, !dbg !9678
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !9678, !srcloc !9680
  store i16 %1, i16* %value, align 2, !dbg !9678
  %2 = load i16, i16* %value, align 2, !dbg !9678
  ret i16 %2, !dbg !9678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #2 !dbg !9681 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9686, metadata !DIExpression()), !dbg !9685
  %0 = load i16, i16* %value.addr, align 2, !dbg !9685
  %1 = load i32, i32* %port.addr, align 4, !dbg !9685
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #7, !dbg !9685, !srcloc !9687
  ret void, !dbg !9685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_wio_write_csr(i64 %addr, i32 %index, i16 zeroext %val) #2 !dbg !9688 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9689, metadata !DIExpression()), !dbg !9690
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9691, metadata !DIExpression()), !dbg !9692
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9693, metadata !DIExpression()), !dbg !9694
  %0 = load i32, i32* %index.addr, align 4, !dbg !9695
  %conv = trunc i32 %0 to i16, !dbg !9695
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9696
  %add = add i64 %1, 18, !dbg !9697
  %conv1 = trunc i64 %add to i32, !dbg !9696
  call void @outw(i16 zeroext %conv, i32 %conv1) #12, !dbg !9698
  %2 = load i16, i16* %val.addr, align 2, !dbg !9699
  %3 = load i64, i64* %addr.addr, align 8, !dbg !9700
  %add2 = add i64 %3, 16, !dbg !9701
  %conv3 = trunc i64 %add2 to i32, !dbg !9700
  call void @outw(i16 zeroext %2, i32 %conv3) #12, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcnet32_wio_read_bcr(i64 %addr, i32 %index) #2 !dbg !9704 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9705, metadata !DIExpression()), !dbg !9706
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9707, metadata !DIExpression()), !dbg !9708
  %0 = load i32, i32* %index.addr, align 4, !dbg !9709
  %conv = trunc i32 %0 to i16, !dbg !9709
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9710
  %add = add i64 %1, 18, !dbg !9711
  %conv1 = trunc i64 %add to i32, !dbg !9710
  call void @outw(i16 zeroext %conv, i32 %conv1) #12, !dbg !9712
  %2 = load i64, i64* %addr.addr, align 8, !dbg !9713
  %add2 = add i64 %2, 22, !dbg !9714
  %conv3 = trunc i64 %add2 to i32, !dbg !9713
  %call = call zeroext i16 @inw(i32 %conv3) #12, !dbg !9715
  ret i16 %call, !dbg !9716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_wio_write_bcr(i64 %addr, i32 %index, i16 zeroext %val) #2 !dbg !9717 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9722, metadata !DIExpression()), !dbg !9723
  %0 = load i32, i32* %index.addr, align 4, !dbg !9724
  %conv = trunc i32 %0 to i16, !dbg !9724
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9725
  %add = add i64 %1, 18, !dbg !9726
  %conv1 = trunc i64 %add to i32, !dbg !9725
  call void @outw(i16 zeroext %conv, i32 %conv1) #12, !dbg !9727
  %2 = load i16, i16* %val.addr, align 2, !dbg !9728
  %3 = load i64, i64* %addr.addr, align 8, !dbg !9729
  %add2 = add i64 %3, 22, !dbg !9730
  %conv3 = trunc i64 %add2 to i32, !dbg !9729
  call void @outw(i16 zeroext %2, i32 %conv3) #12, !dbg !9731
  ret void, !dbg !9732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcnet32_wio_read_rap(i64 %addr) #2 !dbg !9733 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  %0 = load i64, i64* %addr.addr, align 8, !dbg !9736
  %add = add i64 %0, 18, !dbg !9737
  %conv = trunc i64 %add to i32, !dbg !9736
  %call = call zeroext i16 @inw(i32 %conv) #12, !dbg !9738
  ret i16 %call, !dbg !9739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_wio_write_rap(i64 %addr, i16 zeroext %val) #2 !dbg !9740 {
entry:
  %addr.addr = alloca i64, align 8
  %val.addr = alloca i16, align 2
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9741, metadata !DIExpression()), !dbg !9742
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  %0 = load i16, i16* %val.addr, align 2, !dbg !9745
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9746
  %add = add i64 %1, 18, !dbg !9747
  %conv = trunc i64 %add to i32, !dbg !9746
  call void @outw(i16 zeroext %0, i32 %conv) #12, !dbg !9748
  ret void, !dbg !9749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @inl(i32 %port) #2 !dbg !9750 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9753, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.declare(metadata i32* %value, metadata !9755, metadata !DIExpression()), !dbg !9754
  %0 = load i32, i32* %port.addr, align 4, !dbg !9754
  %1 = call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !9754, !srcloc !9756
  store i32 %1, i32* %value, align 4, !dbg !9754
  %2 = load i32, i32* %value, align 4, !dbg !9754
  ret i32 %2, !dbg !9754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outl(i32 %value, i32 %port) #2 !dbg !9757 {
entry:
  %value.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9760, metadata !DIExpression()), !dbg !9761
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9762, metadata !DIExpression()), !dbg !9761
  %0 = load i32, i32* %value.addr, align 4, !dbg !9761
  %1 = load i32, i32* %port.addr, align 4, !dbg !9761
  call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32 %1) #7, !dbg !9761, !srcloc !9763
  ret void, !dbg !9761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_dwio_write_csr(i64 %addr, i32 %index, i16 zeroext %val) #2 !dbg !9764 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9769, metadata !DIExpression()), !dbg !9770
  %0 = load i32, i32* %index.addr, align 4, !dbg !9771
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9772
  %add = add i64 %1, 20, !dbg !9773
  %conv = trunc i64 %add to i32, !dbg !9772
  call void @outl(i32 %0, i32 %conv) #12, !dbg !9774
  %2 = load i16, i16* %val.addr, align 2, !dbg !9775
  %conv1 = zext i16 %2 to i32, !dbg !9775
  %3 = load i64, i64* %addr.addr, align 8, !dbg !9776
  %add2 = add i64 %3, 16, !dbg !9777
  %conv3 = trunc i64 %add2 to i32, !dbg !9776
  call void @outl(i32 %conv1, i32 %conv3) #12, !dbg !9778
  ret void, !dbg !9779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcnet32_dwio_read_bcr(i64 %addr, i32 %index) #2 !dbg !9780 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9781, metadata !DIExpression()), !dbg !9782
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  %0 = load i32, i32* %index.addr, align 4, !dbg !9785
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9786
  %add = add i64 %1, 20, !dbg !9787
  %conv = trunc i64 %add to i32, !dbg !9786
  call void @outl(i32 %0, i32 %conv) #12, !dbg !9788
  %2 = load i64, i64* %addr.addr, align 8, !dbg !9789
  %add1 = add i64 %2, 28, !dbg !9790
  %conv2 = trunc i64 %add1 to i32, !dbg !9789
  %call = call i32 @inl(i32 %conv2) #12, !dbg !9791
  %and = and i32 %call, 65535, !dbg !9792
  %conv3 = trunc i32 %and to i16, !dbg !9791
  ret i16 %conv3, !dbg !9793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_dwio_write_bcr(i64 %addr, i32 %index, i16 zeroext %val) #2 !dbg !9794 {
entry:
  %addr.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9795, metadata !DIExpression()), !dbg !9796
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9797, metadata !DIExpression()), !dbg !9798
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9799, metadata !DIExpression()), !dbg !9800
  %0 = load i32, i32* %index.addr, align 4, !dbg !9801
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9802
  %add = add i64 %1, 20, !dbg !9803
  %conv = trunc i64 %add to i32, !dbg !9802
  call void @outl(i32 %0, i32 %conv) #12, !dbg !9804
  %2 = load i16, i16* %val.addr, align 2, !dbg !9805
  %conv1 = zext i16 %2 to i32, !dbg !9805
  %3 = load i64, i64* %addr.addr, align 8, !dbg !9806
  %add2 = add i64 %3, 28, !dbg !9807
  %conv3 = trunc i64 %add2 to i32, !dbg !9806
  call void @outl(i32 %conv1, i32 %conv3) #12, !dbg !9808
  ret void, !dbg !9809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcnet32_dwio_read_rap(i64 %addr) #2 !dbg !9810 {
entry:
  %addr.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  %0 = load i64, i64* %addr.addr, align 8, !dbg !9813
  %add = add i64 %0, 20, !dbg !9814
  %conv = trunc i64 %add to i32, !dbg !9813
  %call = call i32 @inl(i32 %conv) #12, !dbg !9815
  %and = and i32 %call, 65535, !dbg !9816
  %conv1 = trunc i32 %and to i16, !dbg !9815
  ret i16 %conv1, !dbg !9817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_dwio_write_rap(i64 %addr, i16 zeroext %val) #2 !dbg !9818 {
entry:
  %addr.addr = alloca i64, align 8
  %val.addr = alloca i16, align 2
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !9819, metadata !DIExpression()), !dbg !9820
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9821, metadata !DIExpression()), !dbg !9822
  %0 = load i16, i16* %val.addr, align 2, !dbg !9823
  %conv = zext i16 %0 to i32, !dbg !9823
  %1 = load i64, i64* %addr.addr, align 8, !dbg !9824
  %add = add i64 %1, 20, !dbg !9825
  %conv1 = trunc i64 %add to i32, !dbg !9824
  call void @outl(i32 %conv, i32 %conv1) #12, !dbg !9826
  ret void, !dbg !9827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #2 !dbg !9828 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9829, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9831, metadata !DIExpression()), !dbg !9832
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9833
  %1 = bitcast i8* %0 to i32*, !dbg !9834
  %2 = load i32, i32* %1, align 4, !dbg !9834
  store i32 %2, i32* %a, align 4, !dbg !9832
  %3 = load i32, i32* %a, align 4, !dbg !9835
  %and = and i32 1, %3, !dbg !9836
  %tobool = icmp ne i32 %and, 0, !dbg !9837
  ret i1 %tobool, !dbg !9838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #2 !dbg !9839 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9842
  %1 = bitcast i8* %0 to i32*, !dbg !9843
  %2 = load i32, i32* %1, align 4, !dbg !9843
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !9844
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !9845
  %4 = bitcast i8* %add.ptr to i16*, !dbg !9846
  %5 = load i16, i16* %4, align 2, !dbg !9846
  %conv = zext i16 %5 to i32, !dbg !9847
  %or = or i32 %2, %conv, !dbg !9848
  %cmp = icmp eq i32 %or, 0, !dbg !9849
  ret i1 %cmp, !dbg !9850
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_rx(%struct.net_device* %dev, i32 %budget) #2 !dbg !9851 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %budget.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %entry1 = alloca i32, align 4
  %rxp = alloca %struct.pcnet32_rx_head*, align 8
  %npackets = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !9856, metadata !DIExpression()), !dbg !9857
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9858
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !9859
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !9859
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !9857
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !9860, metadata !DIExpression()), !dbg !9861
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9862
  %cur_rx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 12, !dbg !9863
  %3 = load i32, i32* %cur_rx, align 8, !dbg !9863
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9864
  %rx_mod_mask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 16, !dbg !9865
  %5 = load i32, i32* %rx_mod_mask, align 8, !dbg !9865
  %and = and i32 %3, %5, !dbg !9866
  store i32 %and, i32* %entry1, align 4, !dbg !9861
  call void @llvm.dbg.declare(metadata %struct.pcnet32_rx_head** %rxp, metadata !9867, metadata !DIExpression()), !dbg !9868
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9869
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 1, !dbg !9870
  %7 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !9870
  %8 = load i32, i32* %entry1, align 4, !dbg !9871
  %idxprom = sext i32 %8 to i64, !dbg !9869
  %arrayidx = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %7, i64 %idxprom, !dbg !9869
  store %struct.pcnet32_rx_head* %arrayidx, %struct.pcnet32_rx_head** %rxp, align 8, !dbg !9868
  call void @llvm.dbg.declare(metadata i32* %npackets, metadata !9872, metadata !DIExpression()), !dbg !9873
  store i32 0, i32* %npackets, align 4, !dbg !9873
  br label %while.cond, !dbg !9874

while.cond:                                       ; preds = %while.body, %entry
  %9 = load i32, i32* %npackets, align 4, !dbg !9875
  %10 = load i32, i32* %budget.addr, align 4, !dbg !9876
  %cmp = icmp slt i32 %9, %10, !dbg !9877
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9878

land.rhs:                                         ; preds = %while.cond
  %11 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rxp, align 8, !dbg !9879
  %status = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %11, i32 0, i32 2, !dbg !9879
  %12 = load i16, i16* %status, align 2, !dbg !9879
  %conv = sext i16 %12 to i32, !dbg !9880
  %cmp2 = icmp sge i32 %conv, 0, !dbg !9881
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !9882
  br i1 %13, label %while.body, label %while.end, !dbg !9874

while.body:                                       ; preds = %land.end
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9883
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9885
  %16 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rxp, align 8, !dbg !9886
  %17 = load i32, i32* %entry1, align 4, !dbg !9887
  call void @pcnet32_rx_entry(%struct.net_device* %14, %struct.pcnet32_private* %15, %struct.pcnet32_rx_head* %16, i32 %17) #12, !dbg !9888
  %18 = load i32, i32* %npackets, align 4, !dbg !9889
  %add = add i32 %18, 1, !dbg !9889
  store i32 %add, i32* %npackets, align 4, !dbg !9889
  %19 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rxp, align 8, !dbg !9890
  %buf_length = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %19, i32 0, i32 1, !dbg !9891
  store i16 -1544, i16* %buf_length, align 4, !dbg !9892
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9893, !srcloc !9894
  %20 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rxp, align 8, !dbg !9895
  %status4 = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %20, i32 0, i32 2, !dbg !9896
  store i16 -32768, i16* %status4, align 2, !dbg !9897
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9898
  %cur_rx5 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 12, !dbg !9899
  %22 = load i32, i32* %cur_rx5, align 8, !dbg !9900
  %inc = add i32 %22, 1, !dbg !9900
  store i32 %inc, i32* %cur_rx5, align 8, !dbg !9900
  %23 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9901
  %rx_mod_mask6 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %23, i32 0, i32 16, !dbg !9902
  %24 = load i32, i32* %rx_mod_mask6, align 8, !dbg !9902
  %and7 = and i32 %inc, %24, !dbg !9903
  store i32 %and7, i32* %entry1, align 4, !dbg !9904
  %25 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9905
  %rx_ring8 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %25, i32 0, i32 1, !dbg !9906
  %26 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring8, align 8, !dbg !9906
  %27 = load i32, i32* %entry1, align 4, !dbg !9907
  %idxprom9 = sext i32 %27 to i64, !dbg !9905
  %arrayidx10 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %26, i64 %idxprom9, !dbg !9905
  store %struct.pcnet32_rx_head* %arrayidx10, %struct.pcnet32_rx_head** %rxp, align 8, !dbg !9908
  br label %while.cond, !dbg !9874, !llvm.loop !9909

while.end:                                        ; preds = %land.end
  %28 = load i32, i32* %npackets, align 4, !dbg !9911
  ret i32 %28, !dbg !9912
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !9913 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !9917, metadata !DIExpression()), !dbg !9918
  %call = call i64 @arch_local_save_flags() #12, !dbg !9919
  store i64 %call, i64* %f, align 8, !dbg !9920
  call void @arch_local_irq_disable() #12, !dbg !9921
  %0 = load i64, i64* %f, align 8, !dbg !9922
  ret i64 %0, !dbg !9923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_tx(%struct.net_device* %dev) #2 !dbg !9924 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %dirty_tx = alloca i32, align 4
  %delta = alloca i32, align 4
  %must_restart = alloca i32, align 4
  %entry2 = alloca i32, align 4
  %status = alloca i32, align 4
  %err_status = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9925, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !9927, metadata !DIExpression()), !dbg !9928
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9929
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !9930
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !9930
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata i32* %dirty_tx, metadata !9931, metadata !DIExpression()), !dbg !9932
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9933
  %dirty_tx1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 23, !dbg !9934
  %3 = load i32, i32* %dirty_tx1, align 4, !dbg !9934
  store i32 %3, i32* %dirty_tx, align 4, !dbg !9932
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !9935, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.declare(metadata i32* %must_restart, metadata !9937, metadata !DIExpression()), !dbg !9938
  store i32 0, i32* %must_restart, align 4, !dbg !9938
  br label %while.cond, !dbg !9939

while.cond:                                       ; preds = %if.end78, %entry
  %4 = load i32, i32* %dirty_tx, align 4, !dbg !9940
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9941
  %cur_tx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 13, !dbg !9942
  %6 = load i32, i32* %cur_tx, align 4, !dbg !9942
  %cmp = icmp ne i32 %4, %6, !dbg !9943
  br i1 %cmp, label %while.body, label %while.end, !dbg !9939

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %entry2, metadata !9944, metadata !DIExpression()), !dbg !9946
  %7 = load i32, i32* %dirty_tx, align 4, !dbg !9947
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9948
  %tx_mod_mask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 17, !dbg !9949
  %9 = load i32, i32* %tx_mod_mask, align 4, !dbg !9949
  %and = and i32 %7, %9, !dbg !9950
  store i32 %and, i32* %entry2, align 4, !dbg !9946
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9951, metadata !DIExpression()), !dbg !9952
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9953
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 2, !dbg !9953
  %11 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !9953
  %12 = load i32, i32* %entry2, align 4, !dbg !9953
  %idxprom = sext i32 %12 to i64, !dbg !9953
  %arrayidx = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %11, i64 %idxprom, !dbg !9953
  %status3 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx, i32 0, i32 2, !dbg !9953
  %13 = load i16, i16* %status3, align 2, !dbg !9953
  %conv = sext i16 %13 to i32, !dbg !9954
  store i32 %conv, i32* %status, align 4, !dbg !9952
  %14 = load i32, i32* %status, align 4, !dbg !9955
  %cmp4 = icmp slt i32 %14, 0, !dbg !9957
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9958

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !9959

if.end:                                           ; preds = %while.body
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9960
  %tx_ring6 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %15, i32 0, i32 2, !dbg !9961
  %16 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring6, align 8, !dbg !9961
  %17 = load i32, i32* %entry2, align 4, !dbg !9962
  %idxprom7 = sext i32 %17 to i64, !dbg !9960
  %arrayidx8 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %16, i64 %idxprom7, !dbg !9960
  %base = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx8, i32 0, i32 0, !dbg !9963
  store i32 0, i32* %base, align 4, !dbg !9964
  %18 = load i32, i32* %status, align 4, !dbg !9965
  %and9 = and i32 %18, 16384, !dbg !9967
  %tobool = icmp ne i32 %and9, 0, !dbg !9967
  br i1 %tobool, label %if.then10, label %if.else, !dbg !9968

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %err_status, metadata !9969, metadata !DIExpression()), !dbg !9971
  %19 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9972
  %tx_ring11 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %19, i32 0, i32 2, !dbg !9972
  %20 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring11, align 8, !dbg !9972
  %21 = load i32, i32* %entry2, align 4, !dbg !9972
  %idxprom12 = sext i32 %21 to i64, !dbg !9972
  %arrayidx13 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %20, i64 %idxprom12, !dbg !9972
  %misc = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx13, i32 0, i32 3, !dbg !9972
  %22 = load i32, i32* %misc, align 4, !dbg !9972
  store i32 %22, i32* %err_status, align 4, !dbg !9971
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9973
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %23, i32 0, i32 24, !dbg !9974
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 5, !dbg !9975
  %24 = load i64, i64* %tx_errors, align 8, !dbg !9976
  %inc = add i64 %24, 1, !dbg !9976
  store i64 %inc, i64* %tx_errors, align 8, !dbg !9976
  br label %do.body, !dbg !9977

do.body:                                          ; preds = %if.then10
  %25 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !9978
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %25, i32 0, i32 33, !dbg !9978
  %26 = load i32, i32* %msg_enable, align 8, !dbg !9978
  %and14 = and i32 %26, 128, !dbg !9978
  %tobool15 = icmp ne i32 %and14, 0, !dbg !9978
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !9981

if.then16:                                        ; preds = %do.body
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9978
  %28 = load i32, i32* %status, align 4, !dbg !9978
  %29 = load i32, i32* %err_status, align 4, !dbg !9978
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %27, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.50, i64 0, i64 0), i32 %28, i32 %29) #13, !dbg !9978
  br label %if.end17, !dbg !9978

if.end17:                                         ; preds = %if.then16, %do.body
  br label %do.end, !dbg !9981

do.end:                                           ; preds = %if.end17
  %30 = load i32, i32* %err_status, align 4, !dbg !9982
  %and18 = and i32 %30, 67108864, !dbg !9984
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9984
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !9985

if.then20:                                        ; preds = %do.end
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9986
  %stats21 = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 24, !dbg !9987
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats21, i32 0, i32 16, !dbg !9988
  %32 = load i64, i64* %tx_aborted_errors, align 8, !dbg !9989
  %inc22 = add i64 %32, 1, !dbg !9989
  store i64 %inc22, i64* %tx_aborted_errors, align 8, !dbg !9989
  br label %if.end23, !dbg !9986

if.end23:                                         ; preds = %if.then20, %do.end
  %33 = load i32, i32* %err_status, align 4, !dbg !9990
  %and24 = and i32 %33, 134217728, !dbg !9992
  %tobool25 = icmp ne i32 %and24, 0, !dbg !9992
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !9993

if.then26:                                        ; preds = %if.end23
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9994
  %stats27 = getelementptr inbounds %struct.net_device, %struct.net_device* %34, i32 0, i32 24, !dbg !9995
  %tx_carrier_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats27, i32 0, i32 17, !dbg !9996
  %35 = load i64, i64* %tx_carrier_errors, align 8, !dbg !9997
  %inc28 = add i64 %35, 1, !dbg !9997
  store i64 %inc28, i64* %tx_carrier_errors, align 8, !dbg !9997
  br label %if.end29, !dbg !9994

if.end29:                                         ; preds = %if.then26, %if.end23
  %36 = load i32, i32* %err_status, align 4, !dbg !9998
  %and30 = and i32 %36, 268435456, !dbg !10000
  %tobool31 = icmp ne i32 %and30, 0, !dbg !10000
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !10001

if.then32:                                        ; preds = %if.end29
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10002
  %stats33 = getelementptr inbounds %struct.net_device, %struct.net_device* %37, i32 0, i32 24, !dbg !10003
  %tx_window_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats33, i32 0, i32 20, !dbg !10004
  %38 = load i64, i64* %tx_window_errors, align 8, !dbg !10005
  %inc34 = add i64 %38, 1, !dbg !10005
  store i64 %inc34, i64* %tx_window_errors, align 8, !dbg !10005
  br label %if.end35, !dbg !10002

if.end35:                                         ; preds = %if.then32, %if.end29
  %39 = load i32, i32* %err_status, align 4, !dbg !10006
  %and36 = and i32 %39, 1073741824, !dbg !10008
  %tobool37 = icmp ne i32 %and36, 0, !dbg !10008
  br i1 %tobool37, label %if.then38, label %if.end48, !dbg !10009

if.then38:                                        ; preds = %if.end35
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10010
  %stats39 = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 24, !dbg !10012
  %tx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats39, i32 0, i32 18, !dbg !10013
  %41 = load i64, i64* %tx_fifo_errors, align 8, !dbg !10014
  %inc40 = add i64 %41, 1, !dbg !10014
  store i64 %inc40, i64* %tx_fifo_errors, align 8, !dbg !10014
  br label %do.body41, !dbg !10015

do.body41:                                        ; preds = %if.then38
  %42 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10016
  %msg_enable42 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %42, i32 0, i32 33, !dbg !10016
  %43 = load i32, i32* %msg_enable42, align 8, !dbg !10016
  %and43 = and i32 %43, 128, !dbg !10016
  %tobool44 = icmp ne i32 %and43, 0, !dbg !10016
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !10019

if.then45:                                        ; preds = %do.body41
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10016
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %44, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i64 0, i64 0)) #13, !dbg !10016
  br label %if.end46, !dbg !10016

if.end46:                                         ; preds = %if.then45, %do.body41
  br label %do.end47, !dbg !10019

do.end47:                                         ; preds = %if.end46
  store i32 1, i32* %must_restart, align 4, !dbg !10020
  br label %if.end48, !dbg !10021

if.end48:                                         ; preds = %do.end47, %if.end35
  br label %if.end57, !dbg !10022

if.else:                                          ; preds = %if.end
  %45 = load i32, i32* %status, align 4, !dbg !10023
  %and49 = and i32 %45, 6144, !dbg !10026
  %tobool50 = icmp ne i32 %and49, 0, !dbg !10026
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !10027

if.then51:                                        ; preds = %if.else
  %46 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10028
  %stats52 = getelementptr inbounds %struct.net_device, %struct.net_device* %46, i32 0, i32 24, !dbg !10029
  %collisions = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats52, i32 0, i32 9, !dbg !10030
  %47 = load i64, i64* %collisions, align 8, !dbg !10031
  %inc53 = add i64 %47, 1, !dbg !10031
  store i64 %inc53, i64* %collisions, align 8, !dbg !10031
  br label %if.end54, !dbg !10028

if.end54:                                         ; preds = %if.then51, %if.else
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10032
  %stats55 = getelementptr inbounds %struct.net_device, %struct.net_device* %48, i32 0, i32 24, !dbg !10033
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats55, i32 0, i32 1, !dbg !10034
  %49 = load i64, i64* %tx_packets, align 8, !dbg !10035
  %inc56 = add i64 %49, 1, !dbg !10035
  store i64 %inc56, i64* %tx_packets, align 8, !dbg !10035
  br label %if.end57

if.end57:                                         ; preds = %if.end54, %if.end48
  %50 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10036
  %tx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %50, i32 0, i32 6, !dbg !10038
  %51 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff, align 8, !dbg !10038
  %52 = load i32, i32* %entry2, align 4, !dbg !10039
  %idxprom58 = sext i32 %52 to i64, !dbg !10036
  %arrayidx59 = getelementptr %struct.sk_buff*, %struct.sk_buff** %51, i64 %idxprom58, !dbg !10036
  %53 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx59, align 8, !dbg !10036
  %tobool60 = icmp ne %struct.sk_buff* %53, null, !dbg !10036
  br i1 %tobool60, label %if.then61, label %if.end78, !dbg !10040

if.then61:                                        ; preds = %if.end57
  %54 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10041
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %54, i32 0, i32 4, !dbg !10041
  %55 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !10041
  %dev62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %55, i32 0, i32 41, !dbg !10041
  %56 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10041
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %56, i32 0, i32 8, !dbg !10041
  %57 = load i64*, i64** %tx_dma_addr, align 8, !dbg !10041
  %58 = load i32, i32* %entry2, align 4, !dbg !10041
  %idxprom63 = sext i32 %58 to i64, !dbg !10041
  %arrayidx64 = getelementptr i64, i64* %57, i64 %idxprom63, !dbg !10041
  %59 = load i64, i64* %arrayidx64, align 8, !dbg !10041
  %60 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10041
  %tx_skbuff65 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %60, i32 0, i32 6, !dbg !10041
  %61 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff65, align 8, !dbg !10041
  %62 = load i32, i32* %entry2, align 4, !dbg !10041
  %idxprom66 = sext i32 %62 to i64, !dbg !10041
  %arrayidx67 = getelementptr %struct.sk_buff*, %struct.sk_buff** %61, i64 %idxprom66, !dbg !10041
  %63 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx67, align 8, !dbg !10041
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %63, i32 0, i32 5, !dbg !10041
  %64 = load i32, i32* %len, align 8, !dbg !10041
  %conv68 = zext i32 %64 to i64, !dbg !10041
  call void @dma_unmap_single_attrs(%struct.device* %dev62, i64 %59, i64 %conv68, i32 1, i64 0) #12, !dbg !10041
  %65 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10043
  %tx_skbuff69 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %65, i32 0, i32 6, !dbg !10044
  %66 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff69, align 8, !dbg !10044
  %67 = load i32, i32* %entry2, align 4, !dbg !10045
  %idxprom70 = sext i32 %67 to i64, !dbg !10043
  %arrayidx71 = getelementptr %struct.sk_buff*, %struct.sk_buff** %66, i64 %idxprom70, !dbg !10043
  %68 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx71, align 8, !dbg !10043
  call void @dev_kfree_skb_any(%struct.sk_buff* %68) #12, !dbg !10046
  %69 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10047
  %tx_skbuff72 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %69, i32 0, i32 6, !dbg !10048
  %70 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff72, align 8, !dbg !10048
  %71 = load i32, i32* %entry2, align 4, !dbg !10049
  %idxprom73 = sext i32 %71 to i64, !dbg !10047
  %arrayidx74 = getelementptr %struct.sk_buff*, %struct.sk_buff** %70, i64 %idxprom73, !dbg !10047
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx74, align 8, !dbg !10050
  %72 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10051
  %tx_dma_addr75 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %72, i32 0, i32 8, !dbg !10052
  %73 = load i64*, i64** %tx_dma_addr75, align 8, !dbg !10052
  %74 = load i32, i32* %entry2, align 4, !dbg !10053
  %idxprom76 = sext i32 %74 to i64, !dbg !10051
  %arrayidx77 = getelementptr i64, i64* %73, i64 %idxprom76, !dbg !10051
  store i64 0, i64* %arrayidx77, align 8, !dbg !10054
  br label %if.end78, !dbg !10055

if.end78:                                         ; preds = %if.then61, %if.end57
  %75 = load i32, i32* %dirty_tx, align 4, !dbg !10056
  %inc79 = add i32 %75, 1, !dbg !10056
  store i32 %inc79, i32* %dirty_tx, align 4, !dbg !10056
  br label %while.cond, !dbg !9939, !llvm.loop !10057

while.end:                                        ; preds = %if.then, %while.cond
  %76 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10059
  %cur_tx80 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %76, i32 0, i32 13, !dbg !10060
  %77 = load i32, i32* %cur_tx80, align 4, !dbg !10060
  %78 = load i32, i32* %dirty_tx, align 4, !dbg !10061
  %sub = sub i32 %77, %78, !dbg !10062
  %79 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10063
  %tx_mod_mask81 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %79, i32 0, i32 17, !dbg !10064
  %80 = load i32, i32* %tx_mod_mask81, align 4, !dbg !10064
  %81 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10065
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %81, i32 0, i32 15, !dbg !10066
  %82 = load i32, i32* %tx_ring_size, align 4, !dbg !10066
  %add = add i32 %80, %82, !dbg !10067
  %and82 = and i32 %sub, %add, !dbg !10068
  store i32 %and82, i32* %delta, align 4, !dbg !10069
  %83 = load i32, i32* %delta, align 4, !dbg !10070
  %84 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10072
  %tx_ring_size83 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %84, i32 0, i32 15, !dbg !10073
  %85 = load i32, i32* %tx_ring_size83, align 4, !dbg !10073
  %cmp84 = icmp ugt i32 %83, %85, !dbg !10074
  br i1 %cmp84, label %if.then86, label %if.end100, !dbg !10075

if.then86:                                        ; preds = %while.end
  br label %do.body87, !dbg !10076

do.body87:                                        ; preds = %if.then86
  %86 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10078
  %msg_enable88 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %86, i32 0, i32 33, !dbg !10078
  %87 = load i32, i32* %msg_enable88, align 8, !dbg !10078
  %and89 = and i32 %87, 1, !dbg !10078
  %tobool90 = icmp ne i32 %and89, 0, !dbg !10078
  br i1 %tobool90, label %if.then91, label %if.end94, !dbg !10081

if.then91:                                        ; preds = %do.body87
  %88 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10078
  %89 = load i32, i32* %dirty_tx, align 4, !dbg !10078
  %90 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10078
  %cur_tx92 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %90, i32 0, i32 13, !dbg !10078
  %91 = load i32, i32* %cur_tx92, align 4, !dbg !10078
  %92 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10078
  %tx_full = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %92, i32 0, i32 26, !dbg !10078
  %93 = load i8, i8* %tx_full, align 8, !dbg !10078
  %conv93 = sext i8 %93 to i32, !dbg !10078
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %88, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i64 0, i64 0), i32 %89, i32 %91, i32 %conv93) #13, !dbg !10078
  br label %if.end94, !dbg !10078

if.end94:                                         ; preds = %if.then91, %do.body87
  br label %do.end95, !dbg !10081

do.end95:                                         ; preds = %if.end94
  %94 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10082
  %tx_ring_size96 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %94, i32 0, i32 15, !dbg !10083
  %95 = load i32, i32* %tx_ring_size96, align 4, !dbg !10083
  %96 = load i32, i32* %dirty_tx, align 4, !dbg !10084
  %add97 = add i32 %96, %95, !dbg !10084
  store i32 %add97, i32* %dirty_tx, align 4, !dbg !10084
  %97 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10085
  %tx_ring_size98 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %97, i32 0, i32 15, !dbg !10086
  %98 = load i32, i32* %tx_ring_size98, align 4, !dbg !10086
  %99 = load i32, i32* %delta, align 4, !dbg !10087
  %sub99 = sub i32 %99, %98, !dbg !10087
  store i32 %sub99, i32* %delta, align 4, !dbg !10087
  br label %if.end100, !dbg !10088

if.end100:                                        ; preds = %do.end95, %while.end
  %100 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10089
  %tx_full101 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %100, i32 0, i32 26, !dbg !10091
  %101 = load i8, i8* %tx_full101, align 8, !dbg !10091
  %conv102 = sext i8 %101 to i32, !dbg !10089
  %tobool103 = icmp ne i32 %conv102, 0, !dbg !10089
  br i1 %tobool103, label %land.lhs.true, label %if.end113, !dbg !10092

land.lhs.true:                                    ; preds = %if.end100
  %102 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10093
  %call104 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %102) #12, !dbg !10094
  br i1 %call104, label %land.lhs.true106, label %if.end113, !dbg !10095

land.lhs.true106:                                 ; preds = %land.lhs.true
  %103 = load i32, i32* %delta, align 4, !dbg !10096
  %104 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10097
  %tx_ring_size107 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %104, i32 0, i32 15, !dbg !10098
  %105 = load i32, i32* %tx_ring_size107, align 4, !dbg !10098
  %sub108 = sub i32 %105, 2, !dbg !10099
  %cmp109 = icmp ult i32 %103, %sub108, !dbg !10100
  br i1 %cmp109, label %if.then111, label %if.end113, !dbg !10101

if.then111:                                       ; preds = %land.lhs.true106
  %106 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10102
  %tx_full112 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %106, i32 0, i32 26, !dbg !10104
  store i8 0, i8* %tx_full112, align 8, !dbg !10105
  %107 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10106
  call void @netif_wake_queue(%struct.net_device* %107) #12, !dbg !10107
  br label %if.end113, !dbg !10108

if.end113:                                        ; preds = %if.then111, %land.lhs.true106, %land.lhs.true, %if.end100
  %108 = load i32, i32* %dirty_tx, align 4, !dbg !10109
  %109 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10110
  %dirty_tx114 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %109, i32 0, i32 23, !dbg !10111
  store i32 %108, i32* %dirty_tx114, align 4, !dbg !10112
  %110 = load i32, i32* %must_restart, align 4, !dbg !10113
  ret i32 %110, !dbg !10114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_restart(%struct.net_device* %dev, i32 %csr0_bits) #2 !dbg !10115 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %csr0_bits.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  store i32 %csr0_bits, i32* %csr0_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %csr0_bits.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !10120, metadata !DIExpression()), !dbg !10121
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10122
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !10123
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !10123
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !10121
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !10124, metadata !DIExpression()), !dbg !10125
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10126
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !10127
  %3 = load i64, i64* %base_addr, align 8, !dbg !10127
  store i64 %3, i64* %ioaddr, align 8, !dbg !10125
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10128, metadata !DIExpression()), !dbg !10129
  store i32 0, i32* %i, align 4, !dbg !10130
  br label %for.cond, !dbg !10132

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !10133
  %cmp = icmp slt i32 %4, 100, !dbg !10135
  br i1 %cmp, label %for.body, label %for.end, !dbg !10136

for.body:                                         ; preds = %for.cond
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10137
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 10, !dbg !10139
  %6 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !10139
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %6, i32 0, i32 0, !dbg !10140
  %7 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !10140
  %8 = load i64, i64* %ioaddr, align 8, !dbg !10141
  %call1 = call zeroext i16 %7(i64 %8, i32 0) #12, !dbg !10137
  %conv = zext i16 %call1 to i32, !dbg !10137
  %and = and i32 %conv, 4, !dbg !10142
  %tobool = icmp ne i32 %and, 0, !dbg !10142
  br i1 %tobool, label %if.then, label %if.end, !dbg !10143

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10144

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10145

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !10146
  %inc = add i32 %9, 1, !dbg !10146
  store i32 %inc, i32* %i, align 4, !dbg !10146
  br label %for.cond, !dbg !10147, !llvm.loop !10148

for.end:                                          ; preds = %if.then, %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !10150
  %cmp2 = icmp sge i32 %10, 100, !dbg !10152
  br i1 %cmp2, label %if.then4, label %if.end9, !dbg !10153

if.then4:                                         ; preds = %for.end
  br label %do.body, !dbg !10154

do.body:                                          ; preds = %if.then4
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10155
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 33, !dbg !10155
  %12 = load i32, i32* %msg_enable, align 8, !dbg !10155
  %and5 = and i32 %12, 1, !dbg !10155
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10155
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10158

if.then7:                                         ; preds = %do.body
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10155
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %13, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.pcnet32_restart, i64 0, i64 0)) #13, !dbg !10155
  br label %if.end8, !dbg !10155

if.end8:                                          ; preds = %if.then7, %do.body
  br label %do.end, !dbg !10158

do.end:                                           ; preds = %if.end8
  br label %if.end9, !dbg !10158

if.end9:                                          ; preds = %do.end, %for.end
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10159
  call void @pcnet32_purge_tx_ring(%struct.net_device* %14) #12, !dbg !10160
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10161
  %call10 = call i32 @pcnet32_init_ring(%struct.net_device* %15) #12, !dbg !10163
  %tobool11 = icmp ne i32 %call10, 0, !dbg !10163
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !10164

if.then12:                                        ; preds = %if.end9
  br label %return, !dbg !10165

if.end13:                                         ; preds = %if.end9
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10166
  %a14 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 10, !dbg !10167
  %17 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a14, align 8, !dbg !10167
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %17, i32 0, i32 1, !dbg !10168
  %18 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !10168
  %19 = load i64, i64* %ioaddr, align 8, !dbg !10169
  call void %18(i64 %19, i32 0, i16 zeroext 1) #12, !dbg !10166
  store i32 0, i32* %i, align 4, !dbg !10170
  br label %while.cond, !dbg !10171

while.cond:                                       ; preds = %if.end25, %if.end13
  %20 = load i32, i32* %i, align 4, !dbg !10172
  %inc15 = add i32 %20, 1, !dbg !10172
  store i32 %inc15, i32* %i, align 4, !dbg !10172
  %cmp16 = icmp slt i32 %20, 1000, !dbg !10173
  br i1 %cmp16, label %while.body, label %while.end, !dbg !10171

while.body:                                       ; preds = %while.cond
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10174
  %a18 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 10, !dbg !10176
  %22 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a18, align 8, !dbg !10176
  %read_csr19 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %22, i32 0, i32 0, !dbg !10177
  %23 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr19, align 8, !dbg !10177
  %24 = load i64, i64* %ioaddr, align 8, !dbg !10178
  %call20 = call zeroext i16 %23(i64 %24, i32 0) #12, !dbg !10174
  %conv21 = zext i16 %call20 to i32, !dbg !10174
  %and22 = and i32 %conv21, 256, !dbg !10179
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10179
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !10180

if.then24:                                        ; preds = %while.body
  br label %while.end, !dbg !10181

if.end25:                                         ; preds = %while.body
  br label %while.cond, !dbg !10171, !llvm.loop !10182

while.end:                                        ; preds = %if.then24, %while.cond
  %25 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10184
  %a26 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %25, i32 0, i32 10, !dbg !10185
  %26 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a26, align 8, !dbg !10185
  %write_csr27 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %26, i32 0, i32 1, !dbg !10186
  %27 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr27, align 8, !dbg !10186
  %28 = load i64, i64* %ioaddr, align 8, !dbg !10187
  %29 = load i32, i32* %csr0_bits.addr, align 4, !dbg !10188
  %conv28 = trunc i32 %29 to i16, !dbg !10188
  call void %27(i64 %28, i32 0, i16 zeroext %conv28) #12, !dbg !10184
  br label %return, !dbg !10189

return:                                           ; preds = %while.end, %if.then12
  ret void, !dbg !10189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #2 !dbg !10190 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10191, metadata !DIExpression()), !dbg !10192
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10193
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !10194
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #12, !dbg !10195
  ret void, !dbg !10196
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_rx_entry(%struct.net_device* %dev, %struct.pcnet32_private* %lp, %struct.pcnet32_rx_head* %rxp, i32 %entry1) #2 !dbg !10197 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp.addr = alloca %struct.pcnet32_private*, align 8
  %rxp.addr = alloca %struct.pcnet32_rx_head*, align 8
  %entry.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %rx_in_place = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %pkt_len = alloca i16, align 2
  %newskb = alloca %struct.sk_buff*, align 8
  %new_dma_addr = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  store %struct.pcnet32_private* %lp, %struct.pcnet32_private** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp.addr, metadata !10202, metadata !DIExpression()), !dbg !10203
  store %struct.pcnet32_rx_head* %rxp, %struct.pcnet32_rx_head** %rxp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pcnet32_rx_head** %rxp.addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  store i32 %entry1, i32* %entry.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %entry.addr, metadata !10206, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10208, metadata !DIExpression()), !dbg !10209
  %0 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rxp.addr, align 8, !dbg !10210
  %status2 = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %0, i32 0, i32 2, !dbg !10210
  %1 = load i16, i16* %status2, align 2, !dbg !10210
  %conv = sext i16 %1 to i32, !dbg !10211
  %shr = ashr i32 %conv, 8, !dbg !10212
  store i32 %shr, i32* %status, align 4, !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %rx_in_place, metadata !10213, metadata !DIExpression()), !dbg !10214
  store i32 0, i32* %rx_in_place, align 4, !dbg !10214
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !10215, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.declare(metadata i16* %pkt_len, metadata !10217, metadata !DIExpression()), !dbg !10218
  %2 = load i32, i32* %status, align 4, !dbg !10219
  %cmp = icmp ne i32 %2, 3, !dbg !10221
  br i1 %cmp, label %if.then, label %if.end29, !dbg !10222

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %status, align 4, !dbg !10223
  %and = and i32 %3, 1, !dbg !10226
  %tobool = icmp ne i32 %and, 0, !dbg !10226
  br i1 %tobool, label %if.then4, label %if.end, !dbg !10227

if.then4:                                         ; preds = %if.then
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10228
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 24, !dbg !10229
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !10230
  %5 = load i64, i64* %rx_errors, align 8, !dbg !10231
  %inc = add i64 %5, 1, !dbg !10231
  store i64 %inc, i64* %rx_errors, align 8, !dbg !10231
  br label %if.end, !dbg !10228

if.end:                                           ; preds = %if.then4, %if.then
  %6 = load i32, i32* %status, align 4, !dbg !10232
  %and5 = and i32 %6, 32, !dbg !10234
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10234
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !10235

if.then7:                                         ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10236
  %stats8 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 24, !dbg !10237
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats8, i32 0, i32 13, !dbg !10238
  %8 = load i64, i64* %rx_frame_errors, align 8, !dbg !10239
  %inc9 = add i64 %8, 1, !dbg !10239
  store i64 %inc9, i64* %rx_frame_errors, align 8, !dbg !10239
  br label %if.end10, !dbg !10236

if.end10:                                         ; preds = %if.then7, %if.end
  %9 = load i32, i32* %status, align 4, !dbg !10240
  %and11 = and i32 %9, 16, !dbg !10242
  %tobool12 = icmp ne i32 %and11, 0, !dbg !10242
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !10243

if.then13:                                        ; preds = %if.end10
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10244
  %stats14 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 24, !dbg !10245
  %rx_over_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats14, i32 0, i32 11, !dbg !10246
  %11 = load i64, i64* %rx_over_errors, align 8, !dbg !10247
  %inc15 = add i64 %11, 1, !dbg !10247
  store i64 %inc15, i64* %rx_over_errors, align 8, !dbg !10247
  br label %if.end16, !dbg !10244

if.end16:                                         ; preds = %if.then13, %if.end10
  %12 = load i32, i32* %status, align 4, !dbg !10248
  %and17 = and i32 %12, 8, !dbg !10250
  %tobool18 = icmp ne i32 %and17, 0, !dbg !10250
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !10251

if.then19:                                        ; preds = %if.end16
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10252
  %stats20 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 24, !dbg !10253
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats20, i32 0, i32 12, !dbg !10254
  %14 = load i64, i64* %rx_crc_errors, align 8, !dbg !10255
  %inc21 = add i64 %14, 1, !dbg !10255
  store i64 %inc21, i64* %rx_crc_errors, align 8, !dbg !10255
  br label %if.end22, !dbg !10252

if.end22:                                         ; preds = %if.then19, %if.end16
  %15 = load i32, i32* %status, align 4, !dbg !10256
  %and23 = and i32 %15, 4, !dbg !10258
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10258
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !10259

if.then25:                                        ; preds = %if.end22
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10260
  %stats26 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 24, !dbg !10261
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats26, i32 0, i32 14, !dbg !10262
  %17 = load i64, i64* %rx_fifo_errors, align 8, !dbg !10263
  %inc27 = add i64 %17, 1, !dbg !10263
  store i64 %inc27, i64* %rx_fifo_errors, align 8, !dbg !10263
  br label %if.end28, !dbg !10260

if.end28:                                         ; preds = %if.then25, %if.end22
  br label %return, !dbg !10264

if.end29:                                         ; preds = %entry
  %18 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rxp.addr, align 8, !dbg !10265
  %msg_length = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %18, i32 0, i32 3, !dbg !10265
  %19 = load i32, i32* %msg_length, align 4, !dbg !10265
  %and30 = and i32 %19, 4095, !dbg !10266
  %sub = sub i32 %and30, 4, !dbg !10267
  %conv31 = trunc i32 %sub to i16, !dbg !10268
  store i16 %conv31, i16* %pkt_len, align 2, !dbg !10269
  %20 = load i16, i16* %pkt_len, align 2, !dbg !10270
  %conv32 = sext i16 %20 to i32, !dbg !10270
  %cmp33 = icmp sgt i32 %conv32, 1544, !dbg !10270
  %lnot = xor i1 %cmp33, true, !dbg !10270
  %lnot35 = xor i1 %lnot, true, !dbg !10270
  %lnot.ext = zext i1 %lnot35 to i32, !dbg !10270
  %conv36 = sext i32 %lnot.ext to i64, !dbg !10270
  %tobool37 = icmp ne i64 %conv36, 0, !dbg !10270
  br i1 %tobool37, label %if.then38, label %if.end47, !dbg !10272

if.then38:                                        ; preds = %if.end29
  br label %do.body, !dbg !10273

do.body:                                          ; preds = %if.then38
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10275
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 33, !dbg !10275
  %22 = load i32, i32* %msg_enable, align 8, !dbg !10275
  %and39 = and i32 %22, 1, !dbg !10275
  %tobool40 = icmp ne i32 %and39, 0, !dbg !10275
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !10278

if.then41:                                        ; preds = %do.body
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10275
  %24 = load i16, i16* %pkt_len, align 2, !dbg !10275
  %conv42 = sext i16 %24 to i32, !dbg !10275
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %23, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0), i32 %conv42) #13, !dbg !10275
  br label %if.end43, !dbg !10275

if.end43:                                         ; preds = %if.then41, %do.body
  br label %do.end, !dbg !10278

do.end:                                           ; preds = %if.end43
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10279
  %stats44 = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 24, !dbg !10280
  %rx_errors45 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats44, i32 0, i32 4, !dbg !10281
  %26 = load i64, i64* %rx_errors45, align 8, !dbg !10282
  %inc46 = add i64 %26, 1, !dbg !10282
  store i64 %inc46, i64* %rx_errors45, align 8, !dbg !10282
  br label %return, !dbg !10283

if.end47:                                         ; preds = %if.end29
  %27 = load i16, i16* %pkt_len, align 2, !dbg !10284
  %conv48 = sext i16 %27 to i32, !dbg !10284
  %cmp49 = icmp slt i32 %conv48, 60, !dbg !10286
  br i1 %cmp49, label %if.then51, label %if.end62, !dbg !10287

if.then51:                                        ; preds = %if.end47
  br label %do.body52, !dbg !10288

do.body52:                                        ; preds = %if.then51
  %28 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10290
  %msg_enable53 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %28, i32 0, i32 33, !dbg !10290
  %29 = load i32, i32* %msg_enable53, align 8, !dbg !10290
  %and54 = and i32 %29, 64, !dbg !10290
  %tobool55 = icmp ne i32 %and54, 0, !dbg !10290
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !10293

if.then56:                                        ; preds = %do.body52
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10290
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0)) #13, !dbg !10290
  br label %if.end57, !dbg !10290

if.end57:                                         ; preds = %if.then56, %do.body52
  br label %do.end58, !dbg !10293

do.end58:                                         ; preds = %if.end57
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10294
  %stats59 = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 24, !dbg !10295
  %rx_errors60 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats59, i32 0, i32 4, !dbg !10296
  %32 = load i64, i64* %rx_errors60, align 8, !dbg !10297
  %inc61 = add i64 %32, 1, !dbg !10297
  store i64 %inc61, i64* %rx_errors60, align 8, !dbg !10297
  br label %return, !dbg !10298

if.end62:                                         ; preds = %if.end47
  %33 = load i16, i16* %pkt_len, align 2, !dbg !10299
  %conv63 = sext i16 %33 to i32, !dbg !10299
  %34 = load i32, i32* @rx_copybreak, align 4, !dbg !10301
  %cmp64 = icmp sgt i32 %conv63, %34, !dbg !10302
  br i1 %cmp64, label %if.then66, label %if.else99, !dbg !10303

if.then66:                                        ; preds = %if.end62
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newskb, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.declare(metadata i64* %new_dma_addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  %35 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10309
  %call = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %35, i32 1544) #12, !dbg !10310
  store %struct.sk_buff* %call, %struct.sk_buff** %newskb, align 8, !dbg !10311
  %36 = load %struct.sk_buff*, %struct.sk_buff** %newskb, align 8, !dbg !10312
  %tobool67 = icmp ne %struct.sk_buff* %36, null, !dbg !10312
  br i1 %tobool67, label %if.then68, label %if.else97, !dbg !10314

if.then68:                                        ; preds = %if.then66
  %37 = load %struct.sk_buff*, %struct.sk_buff** %newskb, align 8, !dbg !10315
  call void @skb_reserve(%struct.sk_buff* %37, i32 0) #12, !dbg !10317
  %38 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10318
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %38, i32 0, i32 4, !dbg !10318
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !10318
  %dev69 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !10318
  %40 = load %struct.sk_buff*, %struct.sk_buff** %newskb, align 8, !dbg !10318
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %40, i32 0, i32 37, !dbg !10318
  %41 = load i8*, i8** %data, align 8, !dbg !10318
  %call70 = call i64 @dma_map_single_attrs(%struct.device* %dev69, i8* %41, i64 1544, i32 2, i64 0) #12, !dbg !10318
  store i64 %call70, i64* %new_dma_addr, align 8, !dbg !10319
  %42 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10320
  %pci_dev71 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %42, i32 0, i32 4, !dbg !10322
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev71, align 8, !dbg !10322
  %dev72 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !10323
  %44 = load i64, i64* %new_dma_addr, align 8, !dbg !10324
  %call73 = call i32 @dma_mapping_error(%struct.device* %dev72, i64 %44) #12, !dbg !10325
  %tobool74 = icmp ne i32 %call73, 0, !dbg !10325
  br i1 %tobool74, label %if.then75, label %if.else, !dbg !10326

if.then75:                                        ; preds = %if.then68
  br label %do.body76, !dbg !10327

do.body76:                                        ; preds = %if.then75
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10329
  %msg_enable77 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 33, !dbg !10329
  %46 = load i32, i32* %msg_enable77, align 8, !dbg !10329
  %and78 = and i32 %46, 64, !dbg !10329
  %tobool79 = icmp ne i32 %and78, 0, !dbg !10329
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !10332

if.then80:                                        ; preds = %do.body76
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10329
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0)) #13, !dbg !10329
  br label %if.end81, !dbg !10329

if.end81:                                         ; preds = %if.then80, %do.body76
  br label %do.end82, !dbg !10332

do.end82:                                         ; preds = %if.end81
  %48 = load %struct.sk_buff*, %struct.sk_buff** %newskb, align 8, !dbg !10333
  call void @consume_skb(%struct.sk_buff* %48) #12, !dbg !10333
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !10334
  br label %if.end96, !dbg !10335

if.else:                                          ; preds = %if.then68
  %49 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10336
  %rx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %49, i32 0, i32 7, !dbg !10338
  %50 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !10338
  %51 = load i32, i32* %entry.addr, align 4, !dbg !10339
  %idxprom = sext i32 %51 to i64, !dbg !10336
  %arrayidx = getelementptr %struct.sk_buff*, %struct.sk_buff** %50, i64 %idxprom, !dbg !10336
  %52 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !10336
  store %struct.sk_buff* %52, %struct.sk_buff** %skb, align 8, !dbg !10340
  %53 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10341
  %pci_dev83 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %53, i32 0, i32 4, !dbg !10341
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev83, align 8, !dbg !10341
  %dev84 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !10341
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10341
  %rx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 9, !dbg !10341
  %56 = load i64*, i64** %rx_dma_addr, align 8, !dbg !10341
  %57 = load i32, i32* %entry.addr, align 4, !dbg !10341
  %idxprom85 = sext i32 %57 to i64, !dbg !10341
  %arrayidx86 = getelementptr i64, i64* %56, i64 %idxprom85, !dbg !10341
  %58 = load i64, i64* %arrayidx86, align 8, !dbg !10341
  call void @dma_unmap_single_attrs(%struct.device* %dev84, i64 %58, i64 1544, i32 2, i64 0) #12, !dbg !10341
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10342
  %60 = load i16, i16* %pkt_len, align 2, !dbg !10343
  %conv87 = sext i16 %60 to i32, !dbg !10343
  %call88 = call i8* @skb_put(%struct.sk_buff* %59, i32 %conv87) #12, !dbg !10344
  %61 = load %struct.sk_buff*, %struct.sk_buff** %newskb, align 8, !dbg !10345
  %62 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10346
  %rx_skbuff89 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %62, i32 0, i32 7, !dbg !10347
  %63 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff89, align 8, !dbg !10347
  %64 = load i32, i32* %entry.addr, align 4, !dbg !10348
  %idxprom90 = sext i32 %64 to i64, !dbg !10346
  %arrayidx91 = getelementptr %struct.sk_buff*, %struct.sk_buff** %63, i64 %idxprom90, !dbg !10346
  store %struct.sk_buff* %61, %struct.sk_buff** %arrayidx91, align 8, !dbg !10349
  %65 = load i64, i64* %new_dma_addr, align 8, !dbg !10350
  %66 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10351
  %rx_dma_addr92 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %66, i32 0, i32 9, !dbg !10352
  %67 = load i64*, i64** %rx_dma_addr92, align 8, !dbg !10352
  %68 = load i32, i32* %entry.addr, align 4, !dbg !10353
  %idxprom93 = sext i32 %68 to i64, !dbg !10351
  %arrayidx94 = getelementptr i64, i64* %67, i64 %idxprom93, !dbg !10351
  store i64 %65, i64* %arrayidx94, align 8, !dbg !10354
  %69 = load i64, i64* %new_dma_addr, align 8, !dbg !10355
  %conv95 = trunc i64 %69 to i32, !dbg !10355
  %70 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rxp.addr, align 8, !dbg !10356
  %base = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %70, i32 0, i32 0, !dbg !10357
  store i32 %conv95, i32* %base, align 4, !dbg !10358
  store i32 1, i32* %rx_in_place, align 4, !dbg !10359
  br label %if.end96

if.end96:                                         ; preds = %if.else, %do.end82
  br label %if.end98, !dbg !10360

if.else97:                                        ; preds = %if.then66
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !10361
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.end96
  br label %if.end102, !dbg !10362

if.else99:                                        ; preds = %if.end62
  %71 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10363
  %72 = load i16, i16* %pkt_len, align 2, !dbg !10364
  %conv100 = sext i16 %72 to i32, !dbg !10364
  %add = add i32 %conv100, 0, !dbg !10365
  %call101 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %71, i32 %add) #12, !dbg !10366
  store %struct.sk_buff* %call101, %struct.sk_buff** %skb, align 8, !dbg !10367
  br label %if.end102

if.end102:                                        ; preds = %if.else99, %if.end98
  %73 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10368
  %cmp103 = icmp eq %struct.sk_buff* %73, null, !dbg !10370
  br i1 %cmp103, label %if.then105, label %if.end108, !dbg !10371

if.then105:                                       ; preds = %if.end102
  %74 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10372
  %stats106 = getelementptr inbounds %struct.net_device, %struct.net_device* %74, i32 0, i32 24, !dbg !10374
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats106, i32 0, i32 6, !dbg !10375
  %75 = load i64, i64* %rx_dropped, align 8, !dbg !10376
  %inc107 = add i64 %75, 1, !dbg !10376
  store i64 %inc107, i64* %rx_dropped, align 8, !dbg !10376
  br label %return, !dbg !10377

if.end108:                                        ; preds = %if.end102
  %76 = load i32, i32* %rx_in_place, align 4, !dbg !10378
  %tobool109 = icmp ne i32 %76, 0, !dbg !10378
  br i1 %tobool109, label %if.end130, label %if.then110, !dbg !10380

if.then110:                                       ; preds = %if.end108
  %77 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10381
  call void @skb_reserve(%struct.sk_buff* %77, i32 0) #12, !dbg !10383
  %78 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10384
  %79 = load i16, i16* %pkt_len, align 2, !dbg !10385
  %conv111 = sext i16 %79 to i32, !dbg !10385
  %call112 = call i8* @skb_put(%struct.sk_buff* %78, i32 %conv111) #12, !dbg !10386
  %80 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10387
  %pci_dev113 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %80, i32 0, i32 4, !dbg !10388
  %81 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev113, align 8, !dbg !10388
  %dev114 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %81, i32 0, i32 41, !dbg !10389
  %82 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10390
  %rx_dma_addr115 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %82, i32 0, i32 9, !dbg !10391
  %83 = load i64*, i64** %rx_dma_addr115, align 8, !dbg !10391
  %84 = load i32, i32* %entry.addr, align 4, !dbg !10392
  %idxprom116 = sext i32 %84 to i64, !dbg !10390
  %arrayidx117 = getelementptr i64, i64* %83, i64 %idxprom116, !dbg !10390
  %85 = load i64, i64* %arrayidx117, align 8, !dbg !10390
  %86 = load i16, i16* %pkt_len, align 2, !dbg !10393
  %conv118 = sext i16 %86 to i64, !dbg !10393
  call void @dma_sync_single_for_cpu(%struct.device* %dev114, i64 %85, i64 %conv118, i32 2) #12, !dbg !10394
  %87 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10395
  %88 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10396
  %rx_skbuff119 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %88, i32 0, i32 7, !dbg !10397
  %89 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff119, align 8, !dbg !10397
  %90 = load i32, i32* %entry.addr, align 4, !dbg !10398
  %idxprom120 = sext i32 %90 to i64, !dbg !10396
  %arrayidx121 = getelementptr %struct.sk_buff*, %struct.sk_buff** %89, i64 %idxprom120, !dbg !10396
  %91 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx121, align 8, !dbg !10396
  %data122 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %91, i32 0, i32 37, !dbg !10399
  %92 = load i8*, i8** %data122, align 8, !dbg !10399
  %93 = load i16, i16* %pkt_len, align 2, !dbg !10400
  %conv123 = sext i16 %93 to i32, !dbg !10400
  call void @skb_copy_to_linear_data(%struct.sk_buff* %87, i8* %92, i32 %conv123) #12, !dbg !10401
  %94 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10402
  %pci_dev124 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %94, i32 0, i32 4, !dbg !10403
  %95 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev124, align 8, !dbg !10403
  %dev125 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %95, i32 0, i32 41, !dbg !10404
  %96 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !10405
  %rx_dma_addr126 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %96, i32 0, i32 9, !dbg !10406
  %97 = load i64*, i64** %rx_dma_addr126, align 8, !dbg !10406
  %98 = load i32, i32* %entry.addr, align 4, !dbg !10407
  %idxprom127 = sext i32 %98 to i64, !dbg !10405
  %arrayidx128 = getelementptr i64, i64* %97, i64 %idxprom127, !dbg !10405
  %99 = load i64, i64* %arrayidx128, align 8, !dbg !10405
  %100 = load i16, i16* %pkt_len, align 2, !dbg !10408
  %conv129 = sext i16 %100 to i64, !dbg !10408
  call void @dma_sync_single_for_device(%struct.device* %dev125, i64 %99, i64 %conv129, i32 2) #12, !dbg !10409
  br label %if.end130, !dbg !10410

if.end130:                                        ; preds = %if.then110, %if.end108
  %101 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10411
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %101, i32 0, i32 5, !dbg !10412
  %102 = load i32, i32* %len, align 8, !dbg !10412
  %conv131 = zext i32 %102 to i64, !dbg !10411
  %103 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10413
  %stats132 = getelementptr inbounds %struct.net_device, %struct.net_device* %103, i32 0, i32 24, !dbg !10414
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats132, i32 0, i32 2, !dbg !10415
  %104 = load i64, i64* %rx_bytes, align 8, !dbg !10416
  %add133 = add i64 %104, %conv131, !dbg !10416
  store i64 %add133, i64* %rx_bytes, align 8, !dbg !10416
  %105 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10417
  %106 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10418
  %call134 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %105, %struct.net_device* %106) #12, !dbg !10419
  %107 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10420
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %107, i32 0, i32 29, !dbg !10421
  store i16 %call134, i16* %protocol, align 8, !dbg !10422
  %108 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10423
  %call135 = call i32 @netif_receive_skb(%struct.sk_buff* %108) #12, !dbg !10424
  %109 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10425
  %stats136 = getelementptr inbounds %struct.net_device, %struct.net_device* %109, i32 0, i32 24, !dbg !10426
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats136, i32 0, i32 0, !dbg !10427
  %110 = load i64, i64* %rx_packets, align 8, !dbg !10428
  %inc137 = add i64 %110, 1, !dbg !10428
  store i64 %inc137, i64* %rx_packets, align 8, !dbg !10428
  br label %return, !dbg !10429

return:                                           ; preds = %if.end130, %if.then105, %do.end58, %do.end, %if.end28
  ret void, !dbg !10429
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #2 !dbg !10430 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10433, metadata !DIExpression()), !dbg !10434
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10435, metadata !DIExpression()), !dbg !10436
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10437
  %1 = load i32, i32* %length.addr, align 4, !dbg !10438
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #12, !dbg !10439
  ret %struct.sk_buff* %call, !dbg !10440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #2 !dbg !10441 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10444, metadata !DIExpression()), !dbg !10445
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10446, metadata !DIExpression()), !dbg !10447
  %0 = load i32, i32* %len.addr, align 4, !dbg !10448
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10449
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !10450
  %2 = load i8*, i8** %data, align 8, !dbg !10451
  %idx.ext = sext i32 %0 to i64, !dbg !10451
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !10451
  store i8* %add.ptr, i8** %data, align 8, !dbg !10451
  %3 = load i32, i32* %len.addr, align 4, !dbg !10452
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10453
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !10454
  %5 = load i32, i32* %tail, align 8, !dbg !10455
  %add = add i32 %5, %3, !dbg !10455
  store i32 %add, i32* %tail, align 8, !dbg !10455
  ret void, !dbg !10456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !7913 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10459, metadata !DIExpression()), !dbg !10460
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10461, metadata !DIExpression()), !dbg !10462
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !10465, metadata !DIExpression()), !dbg !10466
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !10467, metadata !DIExpression()), !dbg !10470
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10470
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !10470
  %lnot = xor i1 %call, true, !dbg !10470
  %lnot1 = xor i1 %lnot, true, !dbg !10470
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10470
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !10470
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !10471
  %tobool = icmp ne i32 %1, 0, !dbg !10471
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10471

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !10471
  %tobool2 = trunc i8 %2 to i1, !dbg !10471
  %lnot3 = xor i1 %tobool2, true, !dbg !10471
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !10473
  %lnot5 = xor i1 %3, true, !dbg !10471
  %lnot7 = xor i1 %lnot5, true, !dbg !10471
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !10471
  %conv = sext i32 %lnot.ext8 to i64, !dbg !10471
  %tobool9 = icmp ne i64 %conv, 0, !dbg !10471
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !10470

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !10474
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10476, metadata !DIExpression()), !dbg !10478
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10478
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !10479
  %tobool10 = icmp ne i32 %4, 0, !dbg !10479
  %lnot11 = xor i1 %tobool10, true, !dbg !10479
  %lnot13 = xor i1 %lnot11, true, !dbg !10479
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !10479
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !10479
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !10479
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !10478

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !10479

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !10481

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !10483

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10481
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !10481
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10481
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !10481
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.48, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !10481
  br label %do.body21, !dbg !10481

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !10485

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !10487

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !10485

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 276, i32 2313, i64 12) #7, !dbg !10489, !srcloc !10491
  br label %do.end25, !dbg !10489

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #7, !dbg !10492, !srcloc !10494
  br label %do.body26, !dbg !10485

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !10495

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !10485

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !10481

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !10497

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !10481

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !10481

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !10478
  %tobool32 = icmp ne i32 %7, 0, !dbg !10478
  %lnot33 = xor i1 %tobool32, true, !dbg !10478
  %lnot35 = xor i1 %lnot33, true, !dbg !10478
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !10478
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !10478
  store i64 %conv37, i64* %tmp, align 8, !dbg !10479
  %8 = load i64, i64* %tmp, align 8, !dbg !10478
  br label %if.end38, !dbg !10474

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !10470
  %tobool40 = icmp ne i32 %9, 0, !dbg !10470
  %lnot41 = xor i1 %tobool40, true, !dbg !10470
  %lnot43 = xor i1 %lnot41, true, !dbg !10470
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !10470
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !10470
  store i64 %conv45, i64* %tmp39, align 8, !dbg !10471
  %10 = load i64, i64* %tmp39, align 8, !dbg !10470
  %tobool46 = icmp ne i64 %10, 0, !dbg !10499
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !10500

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !10501
  br label %return, !dbg !10501

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10502
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !10503
  %13 = load i64, i64* %size.addr, align 8, !dbg !10504
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !10505
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10506
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !10507
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !10507
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !10507
  %18 = ptrtoint i8* %17 to i64, !dbg !10507
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !10507
  %shr = lshr i64 %call49, 12, !dbg !10507
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !10507
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !10508
  %20 = ptrtoint i8* %19 to i64, !dbg !10508
  %and = and i64 %20, 4095, !dbg !10508
  %21 = load i64, i64* %size.addr, align 8, !dbg !10509
  %22 = load i32, i32* %dir.addr, align 4, !dbg !10510
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !10511
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !10512
  store i64 %call50, i64* %retval, align 8, !dbg !10513
  br label %return, !dbg !10513

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !10514
  ret i64 %24, !dbg !10514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !10515 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10518, metadata !DIExpression()), !dbg !10519
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !10520, metadata !DIExpression()), !dbg !10521
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10522
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !10523
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #12, !dbg !10524
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !10525
  %cmp = icmp eq i64 %2, -1, !dbg !10527
  br i1 %cmp, label %if.then, label %if.end, !dbg !10528

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10529
  br label %return, !dbg !10529

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10530
  br label %return, !dbg !10530

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !10531
  ret i32 %3, !dbg !10531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !10532 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10533, metadata !DIExpression()), !dbg !10534
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10535
  call void @kfree_skb(%struct.sk_buff* %0) #12, !dbg !10536
  ret void, !dbg !10537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !10538 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10541, metadata !DIExpression()), !dbg !10542
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !10543, metadata !DIExpression()), !dbg !10544
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10545, metadata !DIExpression()), !dbg !10546
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !10547, metadata !DIExpression()), !dbg !10548
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !10549, metadata !DIExpression()), !dbg !10550
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10551
  %1 = load i64, i64* %addr.addr, align 8, !dbg !10552
  %2 = load i64, i64* %size.addr, align 8, !dbg !10553
  %3 = load i32, i32* %dir.addr, align 4, !dbg !10554
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !10555
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !10556
  ret void, !dbg !10557
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #3

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_to_linear_data(%struct.sk_buff* %skb, i8* %from, i32 %len) #2 !dbg !10558 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %from.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10561, metadata !DIExpression()), !dbg !10562
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !10563, metadata !DIExpression()), !dbg !10564
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10565, metadata !DIExpression()), !dbg !10566
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10567
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !10568
  %1 = load i8*, i8** %data, align 8, !dbg !10568
  %2 = load i8*, i8** %from.addr, align 8, !dbg !10569
  %3 = load i32, i32* %len.addr, align 4, !dbg !10570
  %conv = zext i32 %3 to i64, !dbg !10570
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %conv, i1 false), !dbg !10571
  ret void, !dbg !10572
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_device(%struct.device*, i64, i64, i32) #3

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #3

; Function Attrs: noredzone
declare dso_local i32 @netif_receive_skb(%struct.sk_buff*) #3

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #3

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !10573 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10578
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10580
  %1 = load i8*, i8** %init_name, align 8, !dbg !10580
  %tobool = icmp ne i8* %1, null, !dbg !10578
  br i1 %tobool, label %if.then, label %if.end, !dbg !10581

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10582
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !10583
  %3 = load i8*, i8** %init_name1, align 8, !dbg !10583
  store i8* %3, i8** %retval, align 8, !dbg !10584
  br label %return, !dbg !10584

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10585
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !10586
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !10587
  store i8* %call, i8** %retval, align 8, !dbg !10588
  br label %return, !dbg !10588

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !10589
  ret i8* %5, !dbg !10589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !10590 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  ret void, !dbg !10599
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !10600 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.declare(metadata i64* %y, metadata !10606, metadata !DIExpression()), !dbg !10607
  %0 = load i64, i64* %x.addr, align 8, !dbg !10608
  %sub = sub i64 %0, -2147483648, !dbg !10609
  store i64 %sub, i64* %y, align 8, !dbg !10607
  %1 = load i64, i64* %y, align 8, !dbg !10610
  %2 = load i64, i64* %x.addr, align 8, !dbg !10611
  %3 = load i64, i64* %y, align 8, !dbg !10612
  %cmp = icmp ugt i64 %2, %3, !dbg !10613
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10614

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !10615
  br label %cond.end, !dbg !10614

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !10616
  %sub1 = sub i64 -2147483648, %5, !dbg !10617
  br label %cond.end, !dbg !10614

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !10614
  %add = add i64 %1, %cond, !dbg !10618
  store i64 %add, i64* %x.addr, align 8, !dbg !10619
  %6 = load i64, i64* %x.addr, align 8, !dbg !10620
  ret i64 %6, !dbg !10621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !10622 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10627, metadata !DIExpression()), !dbg !10628
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10629
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !10630
  %1 = load i8*, i8** %name, align 8, !dbg !10630
  ret i8* %1, !dbg !10631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !10632 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10635, metadata !DIExpression()), !dbg !10636
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !10637, metadata !DIExpression()), !dbg !10638
  ret void, !dbg !10639
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #3

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !10640 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10644, metadata !DIExpression()), !dbg !10643
  %0 = load i64, i64* %__edi, align 8, !dbg !10643
  store i64 %0, i64* %__edi, align 8, !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10645, metadata !DIExpression()), !dbg !10643
  %1 = load i64, i64* %__esi, align 8, !dbg !10643
  store i64 %1, i64* %__esi, align 8, !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10646, metadata !DIExpression()), !dbg !10643
  %2 = load i64, i64* %__edx, align 8, !dbg !10643
  store i64 %2, i64* %__edx, align 8, !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10647, metadata !DIExpression()), !dbg !10643
  %3 = load i64, i64* %__ecx, align 8, !dbg !10643
  store i64 %3, i64* %__ecx, align 8, !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10648, metadata !DIExpression()), !dbg !10643
  %4 = load i64, i64* %__eax, align 8, !dbg !10643
  store i64 %4, i64* %__eax, align 8, !dbg !10643
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !10643
  %6 = call i64 @llvm.read_register.i64(metadata !7941), !dbg !10649
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !10649, !srcloc !10652
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10649
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10649
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10649
  call void @llvm.write_register.i64(metadata !7941, i64 %asmresult1), !dbg !10649
  %8 = load i64, i64* %__eax, align 8, !dbg !10649
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !10653, metadata !DIExpression()), !dbg !10655
  store i64 -1, i64* %__mask, align 8, !dbg !10655
  %9 = load i64, i64* %__mask, align 8, !dbg !10655
  store i64 %9, i64* %tmp, align 8, !dbg !10655
  %10 = load i64, i64* %tmp, align 8, !dbg !10655
  %and = and i64 %8, %10, !dbg !10649
  store i64 %and, i64* %__ret, align 8, !dbg !10649
  %11 = load i64, i64* %__ret, align 8, !dbg !10643
  store i64 %11, i64* %tmp2, align 8, !dbg !10656
  %12 = load i64, i64* %tmp2, align 8, !dbg !10643
  ret i64 %12, !dbg !10657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !10658 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10659, metadata !DIExpression()), !dbg !10661
  %0 = load i64, i64* %__edi, align 8, !dbg !10661
  store i64 %0, i64* %__edi, align 8, !dbg !10661
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10662, metadata !DIExpression()), !dbg !10661
  %1 = load i64, i64* %__esi, align 8, !dbg !10661
  store i64 %1, i64* %__esi, align 8, !dbg !10661
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10663, metadata !DIExpression()), !dbg !10661
  %2 = load i64, i64* %__edx, align 8, !dbg !10661
  store i64 %2, i64* %__edx, align 8, !dbg !10661
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10664, metadata !DIExpression()), !dbg !10661
  %3 = load i64, i64* %__ecx, align 8, !dbg !10661
  store i64 %3, i64* %__ecx, align 8, !dbg !10661
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10665, metadata !DIExpression()), !dbg !10661
  %4 = load i64, i64* %__eax, align 8, !dbg !10661
  store i64 %4, i64* %__eax, align 8, !dbg !10661
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !10661
  %6 = call i64 @llvm.read_register.i64(metadata !7941), !dbg !10661
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !10661, !srcloc !10666
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10661
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10661
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10661
  call void @llvm.write_register.i64(metadata !7941, i64 %asmresult1), !dbg !10661
  ret void, !dbg !10667
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #2 !dbg !10668 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10669, metadata !DIExpression()), !dbg !10670
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10671
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #12, !dbg !10672
  ret void, !dbg !10673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #2 !dbg !10674 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10677, metadata !DIExpression()), !dbg !10678
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10679
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !10680
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #12, !dbg !10681
  ret i1 %call1, !dbg !10682
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #2 !dbg !10683 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !10688, metadata !DIExpression()), !dbg !10689
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !10690
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !10691
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !10692
  ret i1 %call, !dbg !10693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #2 !dbg !10694 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10697, metadata !DIExpression()), !dbg !10698
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10699, metadata !DIExpression()), !dbg !10700
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10701
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !10702
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !10702
  %2 = load i32, i32* %index.addr, align 4, !dbg !10703
  %idxprom = zext i32 %2 to i64, !dbg !10701
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !10701
  ret %struct.netdev_queue* %arrayidx, !dbg !10704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !10705 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !10712, metadata !DIExpression()), !dbg !10715
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !10717, metadata !DIExpression()), !dbg !10718
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !10719, metadata !DIExpression()), !dbg !10720
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10721, metadata !DIExpression()), !dbg !10723
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10725, metadata !DIExpression()), !dbg !10726
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10727, metadata !DIExpression()), !dbg !10735
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10737, metadata !DIExpression()), !dbg !10738
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10739, metadata !DIExpression()), !dbg !10740
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10741, metadata !DIExpression()), !dbg !10742
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10743
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10744
  %div = sdiv i64 %1, 64, !dbg !10744
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10745
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10743
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10746
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10747
  %conv.i = trunc i64 %4 to i32, !dbg !10747
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !10748
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10749
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10749
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !10749
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10750
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !10750
  br i1 %8, label %cond.true, label %cond.false, !dbg !10750

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !10750
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !10750
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !10751
  %and.i = and i64 %11, 63, !dbg !10752
  %shl.i = shl i64 1, %and.i, !dbg !10753
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !10754
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !10755
  %shr.i = ashr i64 %13, 6, !dbg !10756
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !10754
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !10754
  %and1.i = and i64 %shl.i, %14, !dbg !10757
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !10758
  %conv = zext i1 %cmp.i to i32, !dbg !10750
  br label %cond.end, !dbg !10750

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !10750
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !10750
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !10759
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !10760
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !10761, !srcloc !10762
  store i8 %19, i8* %oldbit.i, align 1, !dbg !10761
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !10763
  %tobool.i = trunc i8 %20 to i1, !dbg !10763
  %conv2 = zext i1 %tobool.i to i32, !dbg !10750
  br label %cond.end, !dbg !10750

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !10750
  %tobool = icmp ne i32 %cond, 0, !dbg !10750
  ret i1 %tobool, !dbg !10764
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !10765 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10769, metadata !DIExpression()), !dbg !10770
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10771, metadata !DIExpression()), !dbg !10772
  ret i1 true, !dbg !10773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !10774 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10778, metadata !DIExpression()), !dbg !10779
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10780, metadata !DIExpression()), !dbg !10781
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10782, metadata !DIExpression()), !dbg !10783
  ret void, !dbg !10784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_purge_tx_ring(%struct.net_device* %dev) #2 !dbg !10785 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10786, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !10788, metadata !DIExpression()), !dbg !10789
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10790
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !10791
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !10791
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !10789
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10792, metadata !DIExpression()), !dbg !10793
  store i32 0, i32* %i, align 4, !dbg !10794
  br label %for.cond, !dbg !10796

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10797
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10799
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 15, !dbg !10800
  %4 = load i32, i32* %tx_ring_size, align 4, !dbg !10800
  %cmp = icmp ult i32 %2, %4, !dbg !10801
  br i1 %cmp, label %for.body, label %for.end, !dbg !10802

for.body:                                         ; preds = %for.cond
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10803
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 2, !dbg !10805
  %6 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !10805
  %7 = load i32, i32* %i, align 4, !dbg !10806
  %idxprom = sext i32 %7 to i64, !dbg !10803
  %arrayidx = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %6, i64 %idxprom, !dbg !10803
  %status = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx, i32 0, i32 2, !dbg !10807
  store i16 0, i16* %status, align 2, !dbg !10808
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10809, !srcloc !10810
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10811
  %tx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 6, !dbg !10813
  %9 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff, align 8, !dbg !10813
  %10 = load i32, i32* %i, align 4, !dbg !10814
  %idxprom1 = sext i32 %10 to i64, !dbg !10811
  %arrayidx2 = getelementptr %struct.sk_buff*, %struct.sk_buff** %9, i64 %idxprom1, !dbg !10811
  %11 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx2, align 8, !dbg !10811
  %tobool = icmp ne %struct.sk_buff* %11, null, !dbg !10811
  br i1 %tobool, label %if.then, label %if.end20, !dbg !10815

if.then:                                          ; preds = %for.body
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10816
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 4, !dbg !10819
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !10819
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !10820
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10821
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 8, !dbg !10822
  %15 = load i64*, i64** %tx_dma_addr, align 8, !dbg !10822
  %16 = load i32, i32* %i, align 4, !dbg !10823
  %idxprom4 = sext i32 %16 to i64, !dbg !10821
  %arrayidx5 = getelementptr i64, i64* %15, i64 %idxprom4, !dbg !10821
  %17 = load i64, i64* %arrayidx5, align 8, !dbg !10821
  %call6 = call i32 @dma_mapping_error(%struct.device* %dev3, i64 %17) #12, !dbg !10824
  %tobool7 = icmp ne i32 %call6, 0, !dbg !10824
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !10825

if.then8:                                         ; preds = %if.then
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10826
  %pci_dev9 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 4, !dbg !10826
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev9, align 8, !dbg !10826
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !10826
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10826
  %tx_dma_addr11 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 8, !dbg !10826
  %21 = load i64*, i64** %tx_dma_addr11, align 8, !dbg !10826
  %22 = load i32, i32* %i, align 4, !dbg !10826
  %idxprom12 = sext i32 %22 to i64, !dbg !10826
  %arrayidx13 = getelementptr i64, i64* %21, i64 %idxprom12, !dbg !10826
  %23 = load i64, i64* %arrayidx13, align 8, !dbg !10826
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10826
  %tx_skbuff14 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 6, !dbg !10826
  %25 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff14, align 8, !dbg !10826
  %26 = load i32, i32* %i, align 4, !dbg !10826
  %idxprom15 = sext i32 %26 to i64, !dbg !10826
  %arrayidx16 = getelementptr %struct.sk_buff*, %struct.sk_buff** %25, i64 %idxprom15, !dbg !10826
  %27 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx16, align 8, !dbg !10826
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %27, i32 0, i32 5, !dbg !10826
  %28 = load i32, i32* %len, align 8, !dbg !10826
  %conv = zext i32 %28 to i64, !dbg !10826
  call void @dma_unmap_single_attrs(%struct.device* %dev10, i64 %23, i64 %conv, i32 1, i64 0) #12, !dbg !10826
  br label %if.end, !dbg !10826

if.end:                                           ; preds = %if.then8, %if.then
  %29 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10827
  %tx_skbuff17 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %29, i32 0, i32 6, !dbg !10828
  %30 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff17, align 8, !dbg !10828
  %31 = load i32, i32* %i, align 4, !dbg !10829
  %idxprom18 = sext i32 %31 to i64, !dbg !10827
  %arrayidx19 = getelementptr %struct.sk_buff*, %struct.sk_buff** %30, i64 %idxprom18, !dbg !10827
  %32 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx19, align 8, !dbg !10827
  call void @dev_kfree_skb_any(%struct.sk_buff* %32) #12, !dbg !10830
  br label %if.end20, !dbg !10831

if.end20:                                         ; preds = %if.end, %for.body
  %33 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10832
  %tx_skbuff21 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %33, i32 0, i32 6, !dbg !10833
  %34 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff21, align 8, !dbg !10833
  %35 = load i32, i32* %i, align 4, !dbg !10834
  %idxprom22 = sext i32 %35 to i64, !dbg !10832
  %arrayidx23 = getelementptr %struct.sk_buff*, %struct.sk_buff** %34, i64 %idxprom22, !dbg !10832
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx23, align 8, !dbg !10835
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10836
  %tx_dma_addr24 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 8, !dbg !10837
  %37 = load i64*, i64** %tx_dma_addr24, align 8, !dbg !10837
  %38 = load i32, i32* %i, align 4, !dbg !10838
  %idxprom25 = sext i32 %38 to i64, !dbg !10836
  %arrayidx26 = getelementptr i64, i64* %37, i64 %idxprom25, !dbg !10836
  store i64 0, i64* %arrayidx26, align 8, !dbg !10839
  br label %for.inc, !dbg !10840

for.inc:                                          ; preds = %if.end20
  %39 = load i32, i32* %i, align 4, !dbg !10841
  %inc = add i32 %39, 1, !dbg !10841
  store i32 %inc, i32* %i, align 4, !dbg !10841
  br label %for.cond, !dbg !10842, !llvm.loop !10843

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_init_ring(%struct.net_device* %dev) #2 !dbg !10846 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %i = alloca i32, align 4
  %rx_skbuff = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !10849, metadata !DIExpression()), !dbg !10850
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10851
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !10852
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !10852
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !10850
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10853, metadata !DIExpression()), !dbg !10854
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10855
  %tx_full = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 26, !dbg !10856
  store i8 0, i8* %tx_full, align 8, !dbg !10857
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10858
  %cur_tx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 13, !dbg !10859
  store i32 0, i32* %cur_tx, align 4, !dbg !10860
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10861
  %cur_rx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 12, !dbg !10862
  store i32 0, i32* %cur_rx, align 8, !dbg !10863
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10864
  %dirty_tx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 23, !dbg !10865
  store i32 0, i32* %dirty_tx, align 4, !dbg !10866
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10867
  %dirty_rx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 22, !dbg !10868
  store i32 0, i32* %dirty_rx, align 8, !dbg !10869
  store i32 0, i32* %i, align 4, !dbg !10870
  br label %for.cond, !dbg !10872

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !10873
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10875
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 14, !dbg !10876
  %9 = load i32, i32* %rx_ring_size, align 8, !dbg !10876
  %cmp = icmp ult i32 %7, %9, !dbg !10877
  br i1 %cmp, label %for.body, label %for.end, !dbg !10878

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %rx_skbuff, metadata !10879, metadata !DIExpression()), !dbg !10881
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10882
  %rx_skbuff1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 7, !dbg !10883
  %11 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff1, align 8, !dbg !10883
  %12 = load i32, i32* %i, align 4, !dbg !10884
  %idxprom = sext i32 %12 to i64, !dbg !10882
  %arrayidx = getelementptr %struct.sk_buff*, %struct.sk_buff** %11, i64 %idxprom, !dbg !10882
  %13 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !10882
  store %struct.sk_buff* %13, %struct.sk_buff** %rx_skbuff, align 8, !dbg !10881
  %14 = load %struct.sk_buff*, %struct.sk_buff** %rx_skbuff, align 8, !dbg !10885
  %cmp2 = icmp eq %struct.sk_buff* %14, null, !dbg !10887
  br i1 %cmp2, label %if.then, label %if.end14, !dbg !10888

if.then:                                          ; preds = %for.body
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10889
  %call3 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %15, i32 1544) #12, !dbg !10891
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10892
  %rx_skbuff4 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 7, !dbg !10893
  %17 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff4, align 8, !dbg !10893
  %18 = load i32, i32* %i, align 4, !dbg !10894
  %idxprom5 = sext i32 %18 to i64, !dbg !10892
  %arrayidx6 = getelementptr %struct.sk_buff*, %struct.sk_buff** %17, i64 %idxprom5, !dbg !10892
  store %struct.sk_buff* %call3, %struct.sk_buff** %arrayidx6, align 8, !dbg !10895
  %19 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10896
  %rx_skbuff7 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %19, i32 0, i32 7, !dbg !10897
  %20 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff7, align 8, !dbg !10897
  %21 = load i32, i32* %i, align 4, !dbg !10898
  %idxprom8 = sext i32 %21 to i64, !dbg !10896
  %arrayidx9 = getelementptr %struct.sk_buff*, %struct.sk_buff** %20, i64 %idxprom8, !dbg !10896
  %22 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx9, align 8, !dbg !10896
  store %struct.sk_buff* %22, %struct.sk_buff** %rx_skbuff, align 8, !dbg !10899
  %23 = load %struct.sk_buff*, %struct.sk_buff** %rx_skbuff, align 8, !dbg !10900
  %tobool = icmp ne %struct.sk_buff* %23, null, !dbg !10900
  br i1 %tobool, label %if.end13, label %if.then10, !dbg !10902

if.then10:                                        ; preds = %if.then
  br label %do.body, !dbg !10903

do.body:                                          ; preds = %if.then10
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10905
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 33, !dbg !10905
  %25 = load i32, i32* %msg_enable, align 8, !dbg !10905
  %and = and i32 %25, 1, !dbg !10905
  %tobool11 = icmp ne i32 %and, 0, !dbg !10905
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !10908

if.then12:                                        ; preds = %do.body
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10905
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %26, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.pcnet32_init_ring, i64 0, i64 0)) #13, !dbg !10905
  br label %if.end, !dbg !10905

if.end:                                           ; preds = %if.then12, %do.body
  br label %do.end, !dbg !10908

do.end:                                           ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !10909
  br label %return, !dbg !10909

if.end13:                                         ; preds = %if.then
  %27 = load %struct.sk_buff*, %struct.sk_buff** %rx_skbuff, align 8, !dbg !10910
  call void @skb_reserve(%struct.sk_buff* %27, i32 0) #12, !dbg !10911
  br label %if.end14, !dbg !10912

if.end14:                                         ; preds = %if.end13, %for.body
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10913, !srcloc !10914
  %28 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10915
  %rx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %28, i32 0, i32 9, !dbg !10917
  %29 = load i64*, i64** %rx_dma_addr, align 8, !dbg !10917
  %30 = load i32, i32* %i, align 4, !dbg !10918
  %idxprom15 = sext i32 %30 to i64, !dbg !10915
  %arrayidx16 = getelementptr i64, i64* %29, i64 %idxprom15, !dbg !10915
  %31 = load i64, i64* %arrayidx16, align 8, !dbg !10915
  %cmp17 = icmp eq i64 %31, 0, !dbg !10919
  br i1 %cmp17, label %if.then18, label %if.end40, !dbg !10920

if.then18:                                        ; preds = %if.end14
  %32 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10921
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %32, i32 0, i32 4, !dbg !10921
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !10921
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !10921
  %34 = load %struct.sk_buff*, %struct.sk_buff** %rx_skbuff, align 8, !dbg !10921
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %34, i32 0, i32 37, !dbg !10921
  %35 = load i8*, i8** %data, align 8, !dbg !10921
  %call20 = call i64 @dma_map_single_attrs(%struct.device* %dev19, i8* %35, i64 1544, i32 2, i64 0) #12, !dbg !10921
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10923
  %rx_dma_addr21 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 9, !dbg !10924
  %37 = load i64*, i64** %rx_dma_addr21, align 8, !dbg !10924
  %38 = load i32, i32* %i, align 4, !dbg !10925
  %idxprom22 = sext i32 %38 to i64, !dbg !10923
  %arrayidx23 = getelementptr i64, i64* %37, i64 %idxprom22, !dbg !10923
  store i64 %call20, i64* %arrayidx23, align 8, !dbg !10926
  %39 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10927
  %pci_dev24 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %39, i32 0, i32 4, !dbg !10929
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev24, align 8, !dbg !10929
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 41, !dbg !10930
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10931
  %rx_dma_addr26 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 9, !dbg !10932
  %42 = load i64*, i64** %rx_dma_addr26, align 8, !dbg !10932
  %43 = load i32, i32* %i, align 4, !dbg !10933
  %idxprom27 = sext i32 %43 to i64, !dbg !10931
  %arrayidx28 = getelementptr i64, i64* %42, i64 %idxprom27, !dbg !10931
  %44 = load i64, i64* %arrayidx28, align 8, !dbg !10931
  %call29 = call i32 @dma_mapping_error(%struct.device* %dev25, i64 %44) #12, !dbg !10934
  %tobool30 = icmp ne i32 %call29, 0, !dbg !10934
  br i1 %tobool30, label %if.then31, label %if.end39, !dbg !10935

if.then31:                                        ; preds = %if.then18
  br label %do.body32, !dbg !10936

do.body32:                                        ; preds = %if.then31
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10938
  %msg_enable33 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 33, !dbg !10938
  %46 = load i32, i32* %msg_enable33, align 8, !dbg !10938
  %and34 = and i32 %46, 1, !dbg !10938
  %tobool35 = icmp ne i32 %and34, 0, !dbg !10938
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !10941

if.then36:                                        ; preds = %do.body32
  %47 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10938
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %47, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.pcnet32_init_ring, i64 0, i64 0)) #13, !dbg !10938
  br label %if.end37, !dbg !10938

if.end37:                                         ; preds = %if.then36, %do.body32
  br label %do.end38, !dbg !10941

do.end38:                                         ; preds = %if.end37
  store i32 -1, i32* %retval, align 4, !dbg !10942
  br label %return, !dbg !10942

if.end39:                                         ; preds = %if.then18
  br label %if.end40, !dbg !10943

if.end40:                                         ; preds = %if.end39, %if.end14
  %48 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10944
  %rx_dma_addr41 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %48, i32 0, i32 9, !dbg !10944
  %49 = load i64*, i64** %rx_dma_addr41, align 8, !dbg !10944
  %50 = load i32, i32* %i, align 4, !dbg !10944
  %idxprom42 = sext i32 %50 to i64, !dbg !10944
  %arrayidx43 = getelementptr i64, i64* %49, i64 %idxprom42, !dbg !10944
  %51 = load i64, i64* %arrayidx43, align 8, !dbg !10944
  %conv = trunc i64 %51 to i32, !dbg !10944
  %52 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10945
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %52, i32 0, i32 1, !dbg !10946
  %53 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !10946
  %54 = load i32, i32* %i, align 4, !dbg !10947
  %idxprom44 = sext i32 %54 to i64, !dbg !10945
  %arrayidx45 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %53, i64 %idxprom44, !dbg !10945
  %base = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx45, i32 0, i32 0, !dbg !10948
  store i32 %conv, i32* %base, align 4, !dbg !10949
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10950
  %rx_ring46 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 1, !dbg !10951
  %56 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring46, align 8, !dbg !10951
  %57 = load i32, i32* %i, align 4, !dbg !10952
  %idxprom47 = sext i32 %57 to i64, !dbg !10950
  %arrayidx48 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %56, i64 %idxprom47, !dbg !10950
  %buf_length = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx48, i32 0, i32 1, !dbg !10953
  store i16 -1544, i16* %buf_length, align 4, !dbg !10954
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10955, !srcloc !10956
  %58 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10957
  %rx_ring49 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %58, i32 0, i32 1, !dbg !10958
  %59 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring49, align 8, !dbg !10958
  %60 = load i32, i32* %i, align 4, !dbg !10959
  %idxprom50 = sext i32 %60 to i64, !dbg !10957
  %arrayidx51 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %59, i64 %idxprom50, !dbg !10957
  %status = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx51, i32 0, i32 2, !dbg !10960
  store i16 -32768, i16* %status, align 2, !dbg !10961
  br label %for.inc, !dbg !10962

for.inc:                                          ; preds = %if.end40
  %61 = load i32, i32* %i, align 4, !dbg !10963
  %inc = add i32 %61, 1, !dbg !10963
  store i32 %inc, i32* %i, align 4, !dbg !10963
  br label %for.cond, !dbg !10964, !llvm.loop !10965

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10967
  br label %for.cond52, !dbg !10969

for.cond52:                                       ; preds = %for.inc65, %for.end
  %62 = load i32, i32* %i, align 4, !dbg !10970
  %63 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10972
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %63, i32 0, i32 15, !dbg !10973
  %64 = load i32, i32* %tx_ring_size, align 4, !dbg !10973
  %cmp53 = icmp ult i32 %62, %64, !dbg !10974
  br i1 %cmp53, label %for.body55, label %for.end67, !dbg !10975

for.body55:                                       ; preds = %for.cond52
  %65 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10976
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %65, i32 0, i32 2, !dbg !10978
  %66 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !10978
  %67 = load i32, i32* %i, align 4, !dbg !10979
  %idxprom56 = sext i32 %67 to i64, !dbg !10976
  %arrayidx57 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %66, i64 %idxprom56, !dbg !10976
  %status58 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx57, i32 0, i32 2, !dbg !10980
  store i16 0, i16* %status58, align 2, !dbg !10981
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10982, !srcloc !10983
  %68 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10984
  %tx_ring59 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %68, i32 0, i32 2, !dbg !10985
  %69 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring59, align 8, !dbg !10985
  %70 = load i32, i32* %i, align 4, !dbg !10986
  %idxprom60 = sext i32 %70 to i64, !dbg !10984
  %arrayidx61 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %69, i64 %idxprom60, !dbg !10984
  %base62 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx61, i32 0, i32 0, !dbg !10987
  store i32 0, i32* %base62, align 4, !dbg !10988
  %71 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10989
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %71, i32 0, i32 8, !dbg !10990
  %72 = load i64*, i64** %tx_dma_addr, align 8, !dbg !10990
  %73 = load i32, i32* %i, align 4, !dbg !10991
  %idxprom63 = sext i32 %73 to i64, !dbg !10989
  %arrayidx64 = getelementptr i64, i64* %72, i64 %idxprom63, !dbg !10989
  store i64 0, i64* %arrayidx64, align 8, !dbg !10992
  br label %for.inc65, !dbg !10993

for.inc65:                                        ; preds = %for.body55
  %74 = load i32, i32* %i, align 4, !dbg !10994
  %inc66 = add i32 %74, 1, !dbg !10994
  store i32 %inc66, i32* %i, align 4, !dbg !10994
  br label %for.cond52, !dbg !10995, !llvm.loop !10996

for.end67:                                        ; preds = %for.cond52
  %75 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10998
  %tx_len_bits = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %75, i32 0, i32 19, !dbg !10998
  %76 = load i16, i16* %tx_len_bits, align 2, !dbg !10998
  %conv68 = zext i16 %76 to i32, !dbg !10998
  %77 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10998
  %rx_len_bits = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %77, i32 0, i32 18, !dbg !10998
  %78 = load i16, i16* %rx_len_bits, align 8, !dbg !10998
  %conv69 = zext i16 %78 to i32, !dbg !10998
  %or = or i32 %conv68, %conv69, !dbg !10998
  %conv70 = trunc i32 %or to i16, !dbg !10998
  %79 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !10999
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %79, i32 0, i32 0, !dbg !11000
  %80 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block, align 8, !dbg !11000
  %tlen_rlen = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %80, i32 0, i32 1, !dbg !11001
  store i16 %conv70, i16* %tlen_rlen, align 2, !dbg !11002
  store i32 0, i32* %i, align 4, !dbg !11003
  br label %for.cond71, !dbg !11005

for.cond71:                                       ; preds = %for.inc80, %for.end67
  %81 = load i32, i32* %i, align 4, !dbg !11006
  %cmp72 = icmp slt i32 %81, 6, !dbg !11008
  br i1 %cmp72, label %for.body74, label %for.end82, !dbg !11009

for.body74:                                       ; preds = %for.cond71
  %82 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11010
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %82, i32 0, i32 74, !dbg !11011
  %83 = load i8*, i8** %dev_addr, align 8, !dbg !11011
  %84 = load i32, i32* %i, align 4, !dbg !11012
  %idxprom75 = sext i32 %84 to i64, !dbg !11010
  %arrayidx76 = getelementptr i8, i8* %83, i64 %idxprom75, !dbg !11010
  %85 = load i8, i8* %arrayidx76, align 1, !dbg !11010
  %86 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11013
  %init_block77 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %86, i32 0, i32 0, !dbg !11014
  %87 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block77, align 8, !dbg !11014
  %phys_addr = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %87, i32 0, i32 2, !dbg !11015
  %88 = load i32, i32* %i, align 4, !dbg !11016
  %idxprom78 = sext i32 %88 to i64, !dbg !11013
  %arrayidx79 = getelementptr [6 x i8], [6 x i8]* %phys_addr, i64 0, i64 %idxprom78, !dbg !11013
  store i8 %85, i8* %arrayidx79, align 1, !dbg !11017
  br label %for.inc80, !dbg !11013

for.inc80:                                        ; preds = %for.body74
  %89 = load i32, i32* %i, align 4, !dbg !11018
  %inc81 = add i32 %89, 1, !dbg !11018
  store i32 %inc81, i32* %i, align 4, !dbg !11018
  br label %for.cond71, !dbg !11019, !llvm.loop !11020

for.end82:                                        ; preds = %for.cond71
  %90 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11022
  %rx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %90, i32 0, i32 20, !dbg !11022
  %91 = load i64, i64* %rx_ring_dma_addr, align 8, !dbg !11022
  %conv83 = trunc i64 %91 to i32, !dbg !11022
  %92 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11023
  %init_block84 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %92, i32 0, i32 0, !dbg !11024
  %93 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block84, align 8, !dbg !11024
  %rx_ring85 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %93, i32 0, i32 5, !dbg !11025
  store i32 %conv83, i32* %rx_ring85, align 4, !dbg !11026
  %94 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11027
  %tx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %94, i32 0, i32 21, !dbg !11027
  %95 = load i64, i64* %tx_ring_dma_addr, align 8, !dbg !11027
  %conv86 = trunc i64 %95 to i32, !dbg !11027
  %96 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11028
  %init_block87 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %96, i32 0, i32 0, !dbg !11029
  %97 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block87, align 8, !dbg !11029
  %tx_ring88 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %97, i32 0, i32 6, !dbg !11030
  store i32 %conv86, i32* %tx_ring88, align 4, !dbg !11031
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11032, !srcloc !11033
  store i32 0, i32* %retval, align 4, !dbg !11034
  br label %return, !dbg !11034

return:                                           ; preds = %for.end82, %do.end38, %do.end
  %98 = load i32, i32* %retval, align 4, !dbg !11035
  ret i32 %98, !dbg !11035
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !11036 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11037, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11039, metadata !DIExpression()), !dbg !11041
  %0 = load i64, i64* %__edi, align 8, !dbg !11041
  store i64 %0, i64* %__edi, align 8, !dbg !11041
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11042, metadata !DIExpression()), !dbg !11041
  %1 = load i64, i64* %__esi, align 8, !dbg !11041
  store i64 %1, i64* %__esi, align 8, !dbg !11041
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11043, metadata !DIExpression()), !dbg !11041
  %2 = load i64, i64* %__edx, align 8, !dbg !11041
  store i64 %2, i64* %__edx, align 8, !dbg !11041
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11044, metadata !DIExpression()), !dbg !11041
  %3 = load i64, i64* %__ecx, align 8, !dbg !11041
  store i64 %3, i64* %__ecx, align 8, !dbg !11041
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11045, metadata !DIExpression()), !dbg !11041
  %4 = load i64, i64* %__eax, align 8, !dbg !11041
  store i64 %4, i64* %__eax, align 8, !dbg !11041
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11041
  %6 = call i64 @llvm.read_register.i64(metadata !7941), !dbg !11041
  %7 = load i64, i64* %f.addr, align 8, !dbg !11041
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !11041, !srcloc !11046
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11041
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11041
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11041
  call void @llvm.write_register.i64(metadata !7941, i64 %asmresult1), !dbg !11041
  ret void, !dbg !11047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #2 !dbg !11048 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11051, metadata !DIExpression()), !dbg !11052
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11053, metadata !DIExpression()), !dbg !11054
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11055, metadata !DIExpression()), !dbg !11056
  %0 = load i64, i64* %n.addr, align 8, !dbg !11057
  %1 = load i64, i64* %size.addr, align 8, !dbg !11058
  %2 = load i32, i32* %flags.addr, align 4, !dbg !11059
  %or = or i32 %2, 256, !dbg !11060
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !11061
  ret i8* %call, !dbg !11062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #2 !dbg !11063 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11064, metadata !DIExpression()), !dbg !11068
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11077, metadata !DIExpression()), !dbg !11078
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11079, metadata !DIExpression()), !dbg !11080
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11081, metadata !DIExpression()), !dbg !11082
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11083, metadata !DIExpression()), !dbg !11087
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11089, metadata !DIExpression()), !dbg !11093
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11095, metadata !DIExpression()), !dbg !11099
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11104, metadata !DIExpression()), !dbg !11105
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11106, metadata !DIExpression()), !dbg !11107
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11108, metadata !DIExpression()), !dbg !11109
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11110, metadata !DIExpression()), !dbg !11111
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11112, metadata !DIExpression()), !dbg !11113
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11114, metadata !DIExpression()), !dbg !11115
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11116, metadata !DIExpression()), !dbg !11117
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11118, metadata !DIExpression()), !dbg !11119
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !11126, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !11128, metadata !DIExpression()), !dbg !11131
  %0 = load i64, i64* %n.addr, align 8, !dbg !11131
  store i64 %0, i64* %__a, align 8, !dbg !11131
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !11132, metadata !DIExpression()), !dbg !11131
  %1 = load i64, i64* %size.addr, align 8, !dbg !11131
  store i64 %1, i64* %__b, align 8, !dbg !11131
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !11133, metadata !DIExpression()), !dbg !11131
  store i64* %bytes, i64** %__d, align 8, !dbg !11131
  %cmp = icmp eq i64* %__a, %__b, !dbg !11131
  %conv = zext i1 %cmp to i32, !dbg !11131
  %2 = load i64*, i64** %__d, align 8, !dbg !11131
  %cmp1 = icmp eq i64* %__a, %2, !dbg !11131
  %conv2 = zext i1 %cmp1 to i32, !dbg !11131
  %3 = load i64, i64* %__a, align 8, !dbg !11131
  %4 = load i64, i64* %__b, align 8, !dbg !11131
  %5 = load i64*, i64** %__d, align 8, !dbg !11131
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !11131
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !11131
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !11131
  store i64 %8, i64* %5, align 8, !dbg !11131
  %frombool = zext i1 %7 to i8, !dbg !11131
  store i8 %frombool, i8* %tmp, align 1, !dbg !11131
  %9 = load i8, i8* %tmp, align 1, !dbg !11131
  %tobool = trunc i8 %9 to i1, !dbg !11131
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !11134
  %lnot = xor i1 %call, true, !dbg !11134
  %lnot3 = xor i1 %lnot, true, !dbg !11134
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11134
  %conv4 = sext i32 %lnot.ext to i64, !dbg !11134
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !11134
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11135

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11136
  br label %return, !dbg !11136

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !11137
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !11138
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !11139

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !11140
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !11141
  br i1 %13, label %if.then6, label %if.end8, !dbg !11142

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !11143
  %15 = load i32, i32* %flags.addr, align 4, !dbg !11144
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !11145
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !11146
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !11147

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !11148
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !11149
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11150

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !11151
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !11152
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !11153
  %call.i.i = call i32 @get_order(i64 %21) #15, !dbg !11154
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11113
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !11155
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11156
  %24 = load i32, i32* %order.i.i, align 4, !dbg !11157
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11158
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11159
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11160
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #14, !dbg !11161
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11161
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11161
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11161
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !11161
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11162
  br label %kmalloc.exit, !dbg !11162

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !11163
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11164
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !11164
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11166

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11167
  br label %kmalloc_index.exit.i, !dbg !11167

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11168
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !11170
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11171

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11172
  br label %kmalloc_index.exit.i, !dbg !11172

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11173
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !11175
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11176

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11177
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !11178
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11179

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11180
  br label %kmalloc_index.exit.i, !dbg !11180

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11181
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !11183
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11184

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11185
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !11186
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11187

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11188
  br label %kmalloc_index.exit.i, !dbg !11188

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11189
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !11191
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11192

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11193
  br label %kmalloc_index.exit.i, !dbg !11193

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11194
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !11196
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11197

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11198
  br label %kmalloc_index.exit.i, !dbg !11198

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11199
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !11201
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11202

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11203
  br label %kmalloc_index.exit.i, !dbg !11203

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11204
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !11206
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11207

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11208
  br label %kmalloc_index.exit.i, !dbg !11208

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11209
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !11211
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11212

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11213
  br label %kmalloc_index.exit.i, !dbg !11213

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11214
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !11216
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11217

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11218
  br label %kmalloc_index.exit.i, !dbg !11218

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11219
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !11221
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11222

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11223
  br label %kmalloc_index.exit.i, !dbg !11223

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11224
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !11226
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11227

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11228
  br label %kmalloc_index.exit.i, !dbg !11228

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11229
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !11231
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11232

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11233
  br label %kmalloc_index.exit.i, !dbg !11233

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11234
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !11236
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11237

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11238
  br label %kmalloc_index.exit.i, !dbg !11238

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11239
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !11241
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11242

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11243
  br label %kmalloc_index.exit.i, !dbg !11243

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11244
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !11246
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11247

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11248
  br label %kmalloc_index.exit.i, !dbg !11248

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11249
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !11251
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11252

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11253
  br label %kmalloc_index.exit.i, !dbg !11253

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11254
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !11256
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11257

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11258
  br label %kmalloc_index.exit.i, !dbg !11258

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11259
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !11261
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11262

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11263
  br label %kmalloc_index.exit.i, !dbg !11263

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11264
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !11266
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11267

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11268
  br label %kmalloc_index.exit.i, !dbg !11268

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11269
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !11271
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11272

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11273
  br label %kmalloc_index.exit.i, !dbg !11273

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11274
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !11276
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11277

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11278
  br label %kmalloc_index.exit.i, !dbg !11278

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11279
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !11281
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11282

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11283
  br label %kmalloc_index.exit.i, !dbg !11283

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11284
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !11286
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11287

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11288
  br label %kmalloc_index.exit.i, !dbg !11288

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11289
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !11291
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11292

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11293
  br label %kmalloc_index.exit.i, !dbg !11293

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11294
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !11296
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11297

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11298
  br label %kmalloc_index.exit.i, !dbg !11298

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11299
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !11301
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11302

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11303
  br label %kmalloc_index.exit.i, !dbg !11303

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11304
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !11306
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11307

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11308
  br label %kmalloc_index.exit.i, !dbg !11308

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !11309, !srcloc !11312
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 159) #7, !dbg !11313, !srcloc !11316
  unreachable, !dbg !11317

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !11318
  store i32 %59, i32* %index.i, align 4, !dbg !11319
  %60 = load i32, i32* %index.i, align 4, !dbg !11320
  %tobool.i = icmp ne i32 %60, 0, !dbg !11320
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11322

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11323
  br label %kmalloc.exit, !dbg !11323

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !11324
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11325
  %and.i.i = and i32 %62, 17, !dbg !11325
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11325
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11325
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11325
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11325
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11327

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11328
  br label %kmalloc_type.exit.i, !dbg !11328

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11329
  %and2.i.i = and i32 %63, 1, !dbg !11330
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11329
  %64 = zext i1 %tobool3.i.i to i64, !dbg !11329
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11329
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11331
  br label %kmalloc_type.exit.i, !dbg !11331

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !11332
  %idxprom.i = zext i32 %65 to i64, !dbg !11333
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11333
  %66 = load i32, i32* %index.i, align 4, !dbg !11334
  %idxprom6.i = zext i32 %66 to i64, !dbg !11333
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11333
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11333
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !11335
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !11336
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11337
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11338
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #14, !dbg !11339
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11339
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11339
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11339
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !11339
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11082
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11340
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !11341
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11342
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11343
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #14, !dbg !11344
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11345
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !11346
  store i8* %76, i8** %retval.i, align 8, !dbg !11347
  br label %kmalloc.exit, !dbg !11347

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !11348
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !11349
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #14, !dbg !11350
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11350
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11350
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11350
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !11350
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11351
  br label %kmalloc.exit, !dbg !11351

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !11352
  store i8* %79, i8** %retval, align 8, !dbg !11353
  br label %return, !dbg !11353

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !11354
  %81 = load i32, i32* %flags.addr, align 4, !dbg !11355
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !11356
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !11356
  %maskedptr = and i64 %ptrint, 7, !dbg !11356
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !11356
  call void @llvm.assume(i1 %maskcond), !dbg !11356
  store i8* %call9, i8** %retval, align 8, !dbg !11357
  br label %return, !dbg !11357

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !11358
  ret i8* %82, !dbg !11358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !11359 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !11363, metadata !DIExpression()), !dbg !11364
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !11365
  %tobool = trunc i8 %0 to i1, !dbg !11365
  %lnot = xor i1 %tobool, true, !dbg !11365
  %lnot1 = xor i1 %lnot, true, !dbg !11365
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11365
  %conv = sext i32 %lnot.ext to i64, !dbg !11365
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11365
  ret i1 %tobool2, !dbg !11366
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !11367 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11369, metadata !DIExpression()), !dbg !11373
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11375, metadata !DIExpression()), !dbg !11376
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11377, metadata !DIExpression()), !dbg !11378
  %0 = load i64, i64* %size.addr, align 8, !dbg !11379
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11381
  br i1 %1, label %if.then, label %if.end447, !dbg !11382

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11383
  %tobool = icmp ne i64 %2, 0, !dbg !11383
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11386

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11387
  br label %return, !dbg !11387

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11388
  %cmp = icmp ult i64 %3, 4096, !dbg !11390
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11391

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11392
  br label %return, !dbg !11392

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub = sub i64 %4, 1, !dbg !11393
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11393
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11393

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub4 = sub i64 %6, 1, !dbg !11393
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11393
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11393

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub6 = sub i64 %8, 1, !dbg !11393
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11393
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11393

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11393

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub9 = sub i64 %9, 1, !dbg !11393
  %and = and i64 %sub9, -9223372036854775808, !dbg !11393
  %tobool10 = icmp ne i64 %and, 0, !dbg !11393
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11393

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11393

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub13 = sub i64 %10, 1, !dbg !11393
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11393
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11393
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11393

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11393

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub18 = sub i64 %11, 1, !dbg !11393
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11393
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11393
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11393

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11393

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub23 = sub i64 %12, 1, !dbg !11393
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11393
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11393
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11393

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11393

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub28 = sub i64 %13, 1, !dbg !11393
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11393
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11393
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11393

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11393

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub33 = sub i64 %14, 1, !dbg !11393
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11393
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11393
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11393

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11393

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub38 = sub i64 %15, 1, !dbg !11393
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11393
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11393
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11393

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11393

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub43 = sub i64 %16, 1, !dbg !11393
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11393
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11393
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11393

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11393

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub48 = sub i64 %17, 1, !dbg !11393
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11393
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11393
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11393

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11393

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub53 = sub i64 %18, 1, !dbg !11393
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11393
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11393
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11393

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11393

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub58 = sub i64 %19, 1, !dbg !11393
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11393
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11393
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11393

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11393

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub63 = sub i64 %20, 1, !dbg !11393
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11393
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11393
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11393

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11393

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub68 = sub i64 %21, 1, !dbg !11393
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11393
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11393
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11393

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11393

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub73 = sub i64 %22, 1, !dbg !11393
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11393
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11393
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11393

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11393

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub78 = sub i64 %23, 1, !dbg !11393
  %and79 = and i64 %sub78, 562949953421312, !dbg !11393
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11393
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11393

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11393

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub83 = sub i64 %24, 1, !dbg !11393
  %and84 = and i64 %sub83, 281474976710656, !dbg !11393
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11393
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11393

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11393

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub88 = sub i64 %25, 1, !dbg !11393
  %and89 = and i64 %sub88, 140737488355328, !dbg !11393
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11393
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11393

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11393

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub93 = sub i64 %26, 1, !dbg !11393
  %and94 = and i64 %sub93, 70368744177664, !dbg !11393
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11393
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11393

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11393

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub98 = sub i64 %27, 1, !dbg !11393
  %and99 = and i64 %sub98, 35184372088832, !dbg !11393
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11393
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11393

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11393

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub103 = sub i64 %28, 1, !dbg !11393
  %and104 = and i64 %sub103, 17592186044416, !dbg !11393
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11393
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11393

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11393

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub108 = sub i64 %29, 1, !dbg !11393
  %and109 = and i64 %sub108, 8796093022208, !dbg !11393
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11393
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11393

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11393

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub113 = sub i64 %30, 1, !dbg !11393
  %and114 = and i64 %sub113, 4398046511104, !dbg !11393
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11393
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11393

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11393

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub118 = sub i64 %31, 1, !dbg !11393
  %and119 = and i64 %sub118, 2199023255552, !dbg !11393
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11393
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11393

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11393

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub123 = sub i64 %32, 1, !dbg !11393
  %and124 = and i64 %sub123, 1099511627776, !dbg !11393
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11393
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11393

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11393

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub128 = sub i64 %33, 1, !dbg !11393
  %and129 = and i64 %sub128, 549755813888, !dbg !11393
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11393
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11393

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11393

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub133 = sub i64 %34, 1, !dbg !11393
  %and134 = and i64 %sub133, 274877906944, !dbg !11393
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11393
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11393

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11393

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub138 = sub i64 %35, 1, !dbg !11393
  %and139 = and i64 %sub138, 137438953472, !dbg !11393
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11393
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11393

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11393

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub143 = sub i64 %36, 1, !dbg !11393
  %and144 = and i64 %sub143, 68719476736, !dbg !11393
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11393
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11393

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11393

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub148 = sub i64 %37, 1, !dbg !11393
  %and149 = and i64 %sub148, 34359738368, !dbg !11393
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11393
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11393

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11393

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub153 = sub i64 %38, 1, !dbg !11393
  %and154 = and i64 %sub153, 17179869184, !dbg !11393
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11393
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11393

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11393

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub158 = sub i64 %39, 1, !dbg !11393
  %and159 = and i64 %sub158, 8589934592, !dbg !11393
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11393
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11393

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11393

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub163 = sub i64 %40, 1, !dbg !11393
  %and164 = and i64 %sub163, 4294967296, !dbg !11393
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11393
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11393

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11393

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub168 = sub i64 %41, 1, !dbg !11393
  %and169 = and i64 %sub168, 2147483648, !dbg !11393
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11393
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11393

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11393

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub173 = sub i64 %42, 1, !dbg !11393
  %and174 = and i64 %sub173, 1073741824, !dbg !11393
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11393
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11393

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11393

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub178 = sub i64 %43, 1, !dbg !11393
  %and179 = and i64 %sub178, 536870912, !dbg !11393
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11393
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11393

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11393

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub183 = sub i64 %44, 1, !dbg !11393
  %and184 = and i64 %sub183, 268435456, !dbg !11393
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11393
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11393

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11393

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub188 = sub i64 %45, 1, !dbg !11393
  %and189 = and i64 %sub188, 134217728, !dbg !11393
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11393
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11393

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11393

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub193 = sub i64 %46, 1, !dbg !11393
  %and194 = and i64 %sub193, 67108864, !dbg !11393
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11393
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11393

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11393

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub198 = sub i64 %47, 1, !dbg !11393
  %and199 = and i64 %sub198, 33554432, !dbg !11393
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11393
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11393

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11393

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub203 = sub i64 %48, 1, !dbg !11393
  %and204 = and i64 %sub203, 16777216, !dbg !11393
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11393
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11393

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11393

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub208 = sub i64 %49, 1, !dbg !11393
  %and209 = and i64 %sub208, 8388608, !dbg !11393
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11393
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11393

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11393

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub213 = sub i64 %50, 1, !dbg !11393
  %and214 = and i64 %sub213, 4194304, !dbg !11393
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11393
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11393

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11393

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub218 = sub i64 %51, 1, !dbg !11393
  %and219 = and i64 %sub218, 2097152, !dbg !11393
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11393
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11393

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11393

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub223 = sub i64 %52, 1, !dbg !11393
  %and224 = and i64 %sub223, 1048576, !dbg !11393
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11393
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11393

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11393

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub228 = sub i64 %53, 1, !dbg !11393
  %and229 = and i64 %sub228, 524288, !dbg !11393
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11393
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11393

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11393

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub233 = sub i64 %54, 1, !dbg !11393
  %and234 = and i64 %sub233, 262144, !dbg !11393
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11393
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11393

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11393

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub238 = sub i64 %55, 1, !dbg !11393
  %and239 = and i64 %sub238, 131072, !dbg !11393
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11393
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11393

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11393

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub243 = sub i64 %56, 1, !dbg !11393
  %and244 = and i64 %sub243, 65536, !dbg !11393
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11393
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11393

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11393

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub248 = sub i64 %57, 1, !dbg !11393
  %and249 = and i64 %sub248, 32768, !dbg !11393
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11393
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11393

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11393

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub253 = sub i64 %58, 1, !dbg !11393
  %and254 = and i64 %sub253, 16384, !dbg !11393
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11393
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11393

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11393

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub258 = sub i64 %59, 1, !dbg !11393
  %and259 = and i64 %sub258, 8192, !dbg !11393
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11393
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11393

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11393

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub263 = sub i64 %60, 1, !dbg !11393
  %and264 = and i64 %sub263, 4096, !dbg !11393
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11393
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11393

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11393

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub268 = sub i64 %61, 1, !dbg !11393
  %and269 = and i64 %sub268, 2048, !dbg !11393
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11393
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11393

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11393

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub273 = sub i64 %62, 1, !dbg !11393
  %and274 = and i64 %sub273, 1024, !dbg !11393
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11393
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11393

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11393

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub278 = sub i64 %63, 1, !dbg !11393
  %and279 = and i64 %sub278, 512, !dbg !11393
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11393
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11393

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11393

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub283 = sub i64 %64, 1, !dbg !11393
  %and284 = and i64 %sub283, 256, !dbg !11393
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11393
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11393

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11393

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub288 = sub i64 %65, 1, !dbg !11393
  %and289 = and i64 %sub288, 128, !dbg !11393
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11393
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11393

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11393

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub293 = sub i64 %66, 1, !dbg !11393
  %and294 = and i64 %sub293, 64, !dbg !11393
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11393
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11393

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11393

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub298 = sub i64 %67, 1, !dbg !11393
  %and299 = and i64 %sub298, 32, !dbg !11393
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11393
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11393

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11393

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub303 = sub i64 %68, 1, !dbg !11393
  %and304 = and i64 %sub303, 16, !dbg !11393
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11393
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11393

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11393

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub308 = sub i64 %69, 1, !dbg !11393
  %and309 = and i64 %sub308, 8, !dbg !11393
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11393
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11393

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11393

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub313 = sub i64 %70, 1, !dbg !11393
  %and314 = and i64 %sub313, 4, !dbg !11393
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11393
  %71 = zext i1 %tobool315 to i64, !dbg !11393
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11393
  br label %cond.end, !dbg !11393

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11393
  br label %cond.end317, !dbg !11393

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11393
  br label %cond.end319, !dbg !11393

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11393
  br label %cond.end321, !dbg !11393

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11393
  br label %cond.end323, !dbg !11393

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11393
  br label %cond.end325, !dbg !11393

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11393
  br label %cond.end327, !dbg !11393

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11393
  br label %cond.end329, !dbg !11393

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11393
  br label %cond.end331, !dbg !11393

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11393
  br label %cond.end333, !dbg !11393

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11393
  br label %cond.end335, !dbg !11393

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11393
  br label %cond.end337, !dbg !11393

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11393
  br label %cond.end339, !dbg !11393

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11393
  br label %cond.end341, !dbg !11393

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11393
  br label %cond.end343, !dbg !11393

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11393
  br label %cond.end345, !dbg !11393

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11393
  br label %cond.end347, !dbg !11393

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11393
  br label %cond.end349, !dbg !11393

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11393
  br label %cond.end351, !dbg !11393

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11393
  br label %cond.end353, !dbg !11393

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11393
  br label %cond.end355, !dbg !11393

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11393
  br label %cond.end357, !dbg !11393

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11393
  br label %cond.end359, !dbg !11393

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11393
  br label %cond.end361, !dbg !11393

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11393
  br label %cond.end363, !dbg !11393

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11393
  br label %cond.end365, !dbg !11393

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11393
  br label %cond.end367, !dbg !11393

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11393
  br label %cond.end369, !dbg !11393

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11393
  br label %cond.end371, !dbg !11393

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11393
  br label %cond.end373, !dbg !11393

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11393
  br label %cond.end375, !dbg !11393

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11393
  br label %cond.end377, !dbg !11393

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11393
  br label %cond.end379, !dbg !11393

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11393
  br label %cond.end381, !dbg !11393

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11393
  br label %cond.end383, !dbg !11393

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11393
  br label %cond.end385, !dbg !11393

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11393
  br label %cond.end387, !dbg !11393

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11393
  br label %cond.end389, !dbg !11393

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11393
  br label %cond.end391, !dbg !11393

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11393
  br label %cond.end393, !dbg !11393

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11393
  br label %cond.end395, !dbg !11393

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11393
  br label %cond.end397, !dbg !11393

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11393
  br label %cond.end399, !dbg !11393

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11393
  br label %cond.end401, !dbg !11393

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11393
  br label %cond.end403, !dbg !11393

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11393
  br label %cond.end405, !dbg !11393

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11393
  br label %cond.end407, !dbg !11393

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11393
  br label %cond.end409, !dbg !11393

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11393
  br label %cond.end411, !dbg !11393

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11393
  br label %cond.end413, !dbg !11393

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11393
  br label %cond.end415, !dbg !11393

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11393
  br label %cond.end417, !dbg !11393

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11393
  br label %cond.end419, !dbg !11393

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11393
  br label %cond.end421, !dbg !11393

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11393
  br label %cond.end423, !dbg !11393

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11393
  br label %cond.end425, !dbg !11393

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11393
  br label %cond.end427, !dbg !11393

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11393
  br label %cond.end429, !dbg !11393

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11393
  br label %cond.end431, !dbg !11393

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11393
  br label %cond.end433, !dbg !11393

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11393
  br label %cond.end435, !dbg !11393

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11393
  br label %cond.end437, !dbg !11393

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11393
  br label %cond.end440, !dbg !11393

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11393

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11393
  br label %cond.end444, !dbg !11393

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11393
  %sub443 = sub i64 %72, 1, !dbg !11393
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !11393
  br label %cond.end444, !dbg !11393

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11393
  %sub446 = sub i32 %cond445, 12, !dbg !11394
  %add = add i32 %sub446, 1, !dbg !11395
  store i32 %add, i32* %retval, align 4, !dbg !11396
  br label %return, !dbg !11396

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11397
  %dec = add i64 %73, -1, !dbg !11397
  store i64 %dec, i64* %size.addr, align 8, !dbg !11397
  %74 = load i64, i64* %size.addr, align 8, !dbg !11398
  %shr = lshr i64 %74, 12, !dbg !11398
  store i64 %shr, i64* %size.addr, align 8, !dbg !11398
  %75 = load i64, i64* %size.addr, align 8, !dbg !11399
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11376
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11400
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11401
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !11400, !srcloc !11402
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11400
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11403
  %add.i = add i32 %79, 1, !dbg !11404
  store i32 %add.i, i32* %retval, align 4, !dbg !11405
  br label %return, !dbg !11405

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11406
  ret i32 %80, !dbg !11406
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !11407 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11369, metadata !DIExpression()), !dbg !11411
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11375, metadata !DIExpression()), !dbg !11413
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11414, metadata !DIExpression()), !dbg !11415
  %0 = load i64, i64* %n.addr, align 8, !dbg !11416
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11413
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11417
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11418
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !11417, !srcloc !11402
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11417
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11419
  %add.i = add i32 %4, 1, !dbg !11420
  %sub = sub i32 %add.i, 1, !dbg !11421
  ret i32 %sub, !dbg !11422
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !11423 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11427, metadata !DIExpression()), !dbg !11428
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11429, metadata !DIExpression()), !dbg !11430
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11431, metadata !DIExpression()), !dbg !11432
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11433, metadata !DIExpression()), !dbg !11434
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11435
  ret i8* %0, !dbg !11436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_check_media(%struct.net_device* %dev, i32 %verbose) #2 !dbg !11437 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %verbose.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %curr_link = alloca i32, align 4
  %prev_link = alloca i32, align 4
  %bcr9 = alloca i32, align 4
  %ioaddr = alloca i64, align 8
  %ioaddr22 = alloca i64, align 8
  %ecmd = alloca %struct.ethtool_cmd, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11438, metadata !DIExpression()), !dbg !11439
  store i32 %verbose, i32* %verbose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verbose.addr, metadata !11440, metadata !DIExpression()), !dbg !11441
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !11442, metadata !DIExpression()), !dbg !11443
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11444
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11445
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !11445
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !11443
  call void @llvm.dbg.declare(metadata i32* %curr_link, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.declare(metadata i32* %prev_link, metadata !11448, metadata !DIExpression()), !dbg !11449
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11450
  %call1 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %2) #12, !dbg !11451
  %3 = zext i1 %call1 to i64, !dbg !11451
  %cond = select i1 %call1, i32 1, i32 0, !dbg !11451
  store i32 %cond, i32* %prev_link, align 4, !dbg !11449
  call void @llvm.dbg.declare(metadata i32* %bcr9, metadata !11452, metadata !DIExpression()), !dbg !11453
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11454
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 29, !dbg !11456
  %bf.load = load i8, i8* %mii, align 8, !dbg !11456
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !11456
  %bf.clear = and i8 %bf.lshr, 1, !dbg !11456
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11456
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11454
  br i1 %tobool, label %if.then, label %if.else, !dbg !11457

if.then:                                          ; preds = %entry
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11458
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 31, !dbg !11460
  %call2 = call i32 @mii_link_ok(%struct.mii_if_info* %mii_if) #12, !dbg !11461
  store i32 %call2, i32* %curr_link, align 4, !dbg !11462
  br label %if.end31, !dbg !11463

if.else:                                          ; preds = %entry
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11464
  %chip_version = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 35, !dbg !11466
  %7 = load i16, i16* %chip_version, align 8, !dbg !11466
  %conv = zext i16 %7 to i32, !dbg !11464
  %cmp = icmp eq i32 %conv, 9761, !dbg !11467
  br i1 %cmp, label %if.then4, label %if.else21, !dbg !11468

if.then4:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !11469, metadata !DIExpression()), !dbg !11472
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11473
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 5, !dbg !11474
  %9 = load i64, i64* %base_addr, align 8, !dbg !11474
  store i64 %9, i64* %ioaddr, align 8, !dbg !11472
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11475
  %autoneg = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 29, !dbg !11477
  %bf.load5 = load i8, i8* %autoneg, align 8, !dbg !11477
  %bf.lshr6 = lshr i8 %bf.load5, 3, !dbg !11477
  %bf.clear7 = and i8 %bf.lshr6, 1, !dbg !11477
  %bf.cast8 = zext i8 %bf.clear7 to i32, !dbg !11477
  %tobool9 = icmp ne i32 %bf.cast8, 0, !dbg !11475
  br i1 %tobool9, label %if.else20, label %land.lhs.true, !dbg !11478

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11479
  %port_tp = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 29, !dbg !11480
  %bf.load10 = load i8, i8* %port_tp, align 8, !dbg !11480
  %bf.lshr11 = lshr i8 %bf.load10, 4, !dbg !11480
  %bf.clear12 = and i8 %bf.lshr11, 1, !dbg !11480
  %bf.cast13 = zext i8 %bf.clear12 to i32, !dbg !11480
  %tobool14 = icmp ne i32 %bf.cast13, 0, !dbg !11479
  br i1 %tobool14, label %if.then15, label %if.else20, !dbg !11481

if.then15:                                        ; preds = %land.lhs.true
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11482
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 10, !dbg !11483
  %13 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !11483
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %13, i32 0, i32 2, !dbg !11484
  %14 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !11484
  %15 = load i64, i64* %ioaddr, align 8, !dbg !11485
  %call16 = call zeroext i16 %14(i64 %15, i32 4) #12, !dbg !11482
  %conv17 = zext i16 %call16 to i32, !dbg !11482
  %cmp18 = icmp ne i32 %conv17, 192, !dbg !11486
  %conv19 = zext i1 %cmp18 to i32, !dbg !11486
  store i32 %conv19, i32* %curr_link, align 4, !dbg !11487
  br label %if.end, !dbg !11488

if.else20:                                        ; preds = %land.lhs.true, %if.then4
  store i32 1, i32* %curr_link, align 4, !dbg !11489
  br label %if.end

if.end:                                           ; preds = %if.else20, %if.then15
  br label %if.end30, !dbg !11490

if.else21:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %ioaddr22, metadata !11491, metadata !DIExpression()), !dbg !11493
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11494
  %base_addr23 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 5, !dbg !11495
  %17 = load i64, i64* %base_addr23, align 8, !dbg !11495
  store i64 %17, i64* %ioaddr22, align 8, !dbg !11493
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11496
  %a24 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 10, !dbg !11497
  %19 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a24, align 8, !dbg !11497
  %read_bcr25 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %19, i32 0, i32 2, !dbg !11498
  %20 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr25, align 8, !dbg !11498
  %21 = load i64, i64* %ioaddr22, align 8, !dbg !11499
  %call26 = call zeroext i16 %20(i64 %21, i32 4) #12, !dbg !11496
  %conv27 = zext i16 %call26 to i32, !dbg !11496
  %cmp28 = icmp ne i32 %conv27, 192, !dbg !11500
  %conv29 = zext i1 %cmp28 to i32, !dbg !11500
  store i32 %conv29, i32* %curr_link, align 4, !dbg !11501
  br label %if.end30

if.end30:                                         ; preds = %if.else21, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %22 = load i32, i32* %curr_link, align 4, !dbg !11502
  %tobool32 = icmp ne i32 %22, 0, !dbg !11502
  br i1 %tobool32, label %if.else47, label %if.then33, !dbg !11504

if.then33:                                        ; preds = %if.end31
  %23 = load i32, i32* %prev_link, align 4, !dbg !11505
  %tobool34 = icmp ne i32 %23, 0, !dbg !11505
  br i1 %tobool34, label %if.then36, label %lor.lhs.false, !dbg !11508

lor.lhs.false:                                    ; preds = %if.then33
  %24 = load i32, i32* %verbose.addr, align 4, !dbg !11509
  %tobool35 = icmp ne i32 %24, 0, !dbg !11509
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !11510

if.then36:                                        ; preds = %lor.lhs.false, %if.then33
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11511
  call void @netif_carrier_off(%struct.net_device* %25) #12, !dbg !11513
  br label %do.body, !dbg !11514

do.body:                                          ; preds = %if.then36
  %26 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11515
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %26, i32 0, i32 33, !dbg !11515
  %27 = load i32, i32* %msg_enable, align 8, !dbg !11515
  %and = and i32 %27, 4, !dbg !11515
  %tobool37 = icmp ne i32 %and, 0, !dbg !11515
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !11518

if.then38:                                        ; preds = %do.body
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11515
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0)) #13, !dbg !11515
  br label %if.end39, !dbg !11515

if.end39:                                         ; preds = %if.then38, %do.body
  br label %do.end, !dbg !11518

do.end:                                           ; preds = %if.end39
  br label %if.end40, !dbg !11519

if.end40:                                         ; preds = %do.end, %lor.lhs.false
  %29 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11520
  %phycount = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %29, i32 0, i32 27, !dbg !11522
  %30 = load i8, i8* %phycount, align 1, !dbg !11522
  %conv41 = sext i8 %30 to i32, !dbg !11520
  %cmp42 = icmp sgt i32 %conv41, 1, !dbg !11523
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !11524

if.then44:                                        ; preds = %if.end40
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11525
  %call45 = call i32 @pcnet32_check_otherphy(%struct.net_device* %31) #12, !dbg !11527
  store i32 %call45, i32* %curr_link, align 4, !dbg !11528
  store i32 0, i32* %prev_link, align 4, !dbg !11529
  br label %if.end46, !dbg !11530

if.end46:                                         ; preds = %if.then44, %if.end40
  br label %if.end108, !dbg !11531

if.else47:                                        ; preds = %if.end31
  %32 = load i32, i32* %verbose.addr, align 4, !dbg !11532
  %tobool48 = icmp ne i32 %32, 0, !dbg !11532
  br i1 %tobool48, label %if.then51, label %lor.lhs.false49, !dbg !11534

lor.lhs.false49:                                  ; preds = %if.else47
  %33 = load i32, i32* %prev_link, align 4, !dbg !11535
  %tobool50 = icmp ne i32 %33, 0, !dbg !11535
  br i1 %tobool50, label %if.end107, label %if.then51, !dbg !11536

if.then51:                                        ; preds = %lor.lhs.false49, %if.else47
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11537
  call void @netif_carrier_on(%struct.net_device* %34) #12, !dbg !11539
  %35 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11540
  %mii52 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %35, i32 0, i32 29, !dbg !11542
  %bf.load53 = load i8, i8* %mii52, align 8, !dbg !11542
  %bf.lshr54 = lshr i8 %bf.load53, 2, !dbg !11542
  %bf.clear55 = and i8 %bf.lshr54, 1, !dbg !11542
  %bf.cast56 = zext i8 %bf.clear55 to i32, !dbg !11542
  %tobool57 = icmp ne i32 %bf.cast56, 0, !dbg !11540
  br i1 %tobool57, label %if.then58, label %if.else98, !dbg !11543

if.then58:                                        ; preds = %if.then51
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11544
  %msg_enable59 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 33, !dbg !11544
  %37 = load i32, i32* %msg_enable59, align 8, !dbg !11544
  %and60 = and i32 %37, 4, !dbg !11544
  %tobool61 = icmp ne i32 %and60, 0, !dbg !11544
  br i1 %tobool61, label %if.then62, label %if.end70, !dbg !11547

if.then62:                                        ; preds = %if.then58
  call void @llvm.dbg.declare(metadata %struct.ethtool_cmd* %ecmd, metadata !11548, metadata !DIExpression()), !dbg !11569
  %38 = bitcast %struct.ethtool_cmd* %ecmd to i8*, !dbg !11569
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 44, i1 false), !dbg !11569
  %39 = bitcast i8* %38 to %struct.ethtool_cmd*, !dbg !11569
  %40 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %39, i32 0, i32 0, !dbg !11569
  store i32 1, i32* %40, align 4, !dbg !11569
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11570
  %mii_if63 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 31, !dbg !11571
  %call64 = call i32 @mii_ethtool_gset(%struct.mii_if_info* %mii_if63, %struct.ethtool_cmd* %ecmd) #12, !dbg !11572
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11573
  %call65 = call i32 @ethtool_cmd_speed(%struct.ethtool_cmd* %ecmd) #12, !dbg !11574
  %duplex = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 4, !dbg !11575
  %43 = load i8, i8* %duplex, align 2, !dbg !11575
  %conv66 = zext i8 %43 to i32, !dbg !11576
  %cmp67 = icmp eq i32 %conv66, 1, !dbg !11577
  %44 = zext i1 %cmp67 to i64, !dbg !11578
  %cond69 = select i1 %cmp67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), !dbg !11578
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %42, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i64 0, i64 0), i32 %call65, i8* %cond69) #13, !dbg !11579
  br label %if.end70, !dbg !11580

if.end70:                                         ; preds = %if.then62, %if.then58
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11581
  %a71 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 10, !dbg !11582
  %46 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a71, align 8, !dbg !11582
  %read_bcr72 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %46, i32 0, i32 2, !dbg !11583
  %47 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr72, align 8, !dbg !11583
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11584
  %base_addr73 = getelementptr inbounds %struct.net_device, %struct.net_device* %48, i32 0, i32 5, !dbg !11585
  %49 = load i64, i64* %base_addr73, align 8, !dbg !11585
  %call74 = call zeroext i16 %47(i64 %49, i32 9) #12, !dbg !11581
  %conv75 = zext i16 %call74 to i32, !dbg !11581
  store i32 %conv75, i32* %bcr9, align 4, !dbg !11586
  %50 = load i32, i32* %bcr9, align 4, !dbg !11587
  %and76 = and i32 %50, 1, !dbg !11589
  %51 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11590
  %mii_if77 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %51, i32 0, i32 31, !dbg !11591
  %full_duplex = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if77, i32 0, i32 4, !dbg !11592
  %bf.load78 = load i8, i8* %full_duplex, align 8, !dbg !11592
  %bf.clear79 = and i8 %bf.load78, 1, !dbg !11592
  %bf.cast80 = zext i8 %bf.clear79 to i32, !dbg !11592
  %cmp81 = icmp ne i32 %and76, %bf.cast80, !dbg !11593
  br i1 %cmp81, label %if.then83, label %if.end97, !dbg !11594

if.then83:                                        ; preds = %if.end70
  %52 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11595
  %mii_if84 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %52, i32 0, i32 31, !dbg !11598
  %full_duplex85 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if84, i32 0, i32 4, !dbg !11599
  %bf.load86 = load i8, i8* %full_duplex85, align 8, !dbg !11599
  %bf.clear87 = and i8 %bf.load86, 1, !dbg !11599
  %bf.cast88 = zext i8 %bf.clear87 to i32, !dbg !11599
  %tobool89 = icmp ne i32 %bf.cast88, 0, !dbg !11595
  br i1 %tobool89, label %if.then90, label %if.else91, !dbg !11600

if.then90:                                        ; preds = %if.then83
  %53 = load i32, i32* %bcr9, align 4, !dbg !11601
  %or = or i32 %53, 1, !dbg !11601
  store i32 %or, i32* %bcr9, align 4, !dbg !11601
  br label %if.end93, !dbg !11602

if.else91:                                        ; preds = %if.then83
  %54 = load i32, i32* %bcr9, align 4, !dbg !11603
  %and92 = and i32 %54, -2, !dbg !11603
  store i32 %and92, i32* %bcr9, align 4, !dbg !11603
  br label %if.end93

if.end93:                                         ; preds = %if.else91, %if.then90
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11604
  %a94 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 10, !dbg !11605
  %56 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a94, align 8, !dbg !11605
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %56, i32 0, i32 3, !dbg !11606
  %57 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !11606
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11607
  %base_addr95 = getelementptr inbounds %struct.net_device, %struct.net_device* %58, i32 0, i32 5, !dbg !11608
  %59 = load i64, i64* %base_addr95, align 8, !dbg !11608
  %60 = load i32, i32* %bcr9, align 4, !dbg !11609
  %conv96 = trunc i32 %60 to i16, !dbg !11609
  call void %57(i64 %59, i32 9, i16 zeroext %conv96) #12, !dbg !11604
  br label %if.end97, !dbg !11610

if.end97:                                         ; preds = %if.end93, %if.end70
  br label %if.end106, !dbg !11611

if.else98:                                        ; preds = %if.then51
  br label %do.body99, !dbg !11612

do.body99:                                        ; preds = %if.else98
  %61 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11614
  %msg_enable100 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %61, i32 0, i32 33, !dbg !11614
  %62 = load i32, i32* %msg_enable100, align 8, !dbg !11614
  %and101 = and i32 %62, 4, !dbg !11614
  %tobool102 = icmp ne i32 %and101, 0, !dbg !11614
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !11617

if.then103:                                       ; preds = %do.body99
  %63 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11614
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i64 0, i64 0)) #13, !dbg !11614
  br label %if.end104, !dbg !11614

if.end104:                                        ; preds = %if.then103, %do.body99
  br label %do.end105, !dbg !11617

do.end105:                                        ; preds = %if.end104
  br label %if.end106

if.end106:                                        ; preds = %do.end105, %if.end97
  br label %if.end107, !dbg !11618

if.end107:                                        ; preds = %if.end106, %lor.lhs.false49
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end46
  ret void, !dbg !11619
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #3

; Function Attrs: noredzone
declare dso_local i64 @round_jiffies(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_carrier_ok(%struct.net_device* %dev) #2 !dbg !11620 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11621, metadata !DIExpression()), !dbg !11622
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11623
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !11624
  %call = call zeroext i1 @test_bit(i64 2, i64* %state) #12, !dbg !11625
  %lnot = xor i1 %call, true, !dbg !11626
  ret i1 %lnot, !dbg !11627
}

; Function Attrs: noredzone
declare dso_local i32 @mii_link_ok(%struct.mii_if_info*) #3

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #3

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_check_otherphy(%struct.net_device* %dev) #2 !dbg !11628 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %mii = alloca %struct.mii_if_info, align 8
  %bmcr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11629, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !11631, metadata !DIExpression()), !dbg !11632
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11633
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11634
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !11634
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !11632
  call void @llvm.dbg.declare(metadata %struct.mii_if_info* %mii, metadata !11635, metadata !DIExpression()), !dbg !11636
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11637
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 31, !dbg !11638
  %3 = bitcast %struct.mii_if_info* %mii to i8*, !dbg !11638
  %4 = bitcast %struct.mii_if_info* %mii_if to i8*, !dbg !11638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !11638
  call void @llvm.dbg.declare(metadata i16* %bmcr, metadata !11639, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11641, metadata !DIExpression()), !dbg !11642
  store i32 0, i32* %i, align 4, !dbg !11643
  br label %for.cond, !dbg !11645

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !11646
  %cmp = icmp slt i32 %5, 32, !dbg !11648
  br i1 %cmp, label %for.body, label %for.end, !dbg !11649

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !11650
  %7 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11653
  %mii_if1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %7, i32 0, i32 31, !dbg !11654
  %phy_id = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if1, i32 0, i32 0, !dbg !11655
  %8 = load i32, i32* %phy_id, align 8, !dbg !11655
  %cmp2 = icmp eq i32 %6, %8, !dbg !11656
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11657

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11658

if.end:                                           ; preds = %for.body
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11659
  %phymask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 34, !dbg !11661
  %10 = load i32, i32* %phymask, align 4, !dbg !11661
  %11 = load i32, i32* %i, align 4, !dbg !11662
  %shl = shl i32 1, %11, !dbg !11663
  %and = and i32 %10, %shl, !dbg !11664
  %tobool = icmp ne i32 %and, 0, !dbg !11664
  br i1 %tobool, label %if.then3, label %if.end25, !dbg !11665

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !11666
  %phy_id4 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii, i32 0, i32 0, !dbg !11668
  store i32 %12, i32* %phy_id4, align 8, !dbg !11669
  %call5 = call i32 @mii_link_ok(%struct.mii_if_info* %mii) #12, !dbg !11670
  %tobool6 = icmp ne i32 %call5, 0, !dbg !11670
  br i1 %tobool6, label %if.then7, label %if.end24, !dbg !11672

if.then7:                                         ; preds = %if.then3
  br label %do.body, !dbg !11673

do.body:                                          ; preds = %if.then7
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11675
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 33, !dbg !11675
  %14 = load i32, i32* %msg_enable, align 8, !dbg !11675
  %and8 = and i32 %14, 4, !dbg !11675
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11675
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !11678

if.then10:                                        ; preds = %do.body
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11675
  %16 = load i32, i32* %i, align 4, !dbg !11675
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0), i32 %16) #13, !dbg !11675
  br label %if.end11, !dbg !11675

if.end11:                                         ; preds = %if.then10, %do.body
  br label %do.end, !dbg !11678

do.end:                                           ; preds = %if.end11
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11679
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11680
  %mii_if12 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 31, !dbg !11681
  %phy_id13 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if12, i32 0, i32 0, !dbg !11682
  %19 = load i32, i32* %phy_id13, align 8, !dbg !11682
  %call14 = call i32 @mdio_read(%struct.net_device* %17, i32 %19, i32 0) #12, !dbg !11683
  %conv = trunc i32 %call14 to i16, !dbg !11683
  store i16 %conv, i16* %bmcr, align 2, !dbg !11684
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11685
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11686
  %mii_if15 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 31, !dbg !11687
  %phy_id16 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if15, i32 0, i32 0, !dbg !11688
  %22 = load i32, i32* %phy_id16, align 8, !dbg !11688
  %23 = load i16, i16* %bmcr, align 2, !dbg !11689
  %conv17 = zext i16 %23 to i32, !dbg !11689
  %or = or i32 %conv17, 1024, !dbg !11690
  call void @mdio_write(%struct.net_device* %20, i32 %22, i32 0, i32 %or) #12, !dbg !11691
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11692
  %25 = load i32, i32* %i, align 4, !dbg !11693
  %call18 = call i32 @mdio_read(%struct.net_device* %24, i32 %25, i32 0) #12, !dbg !11694
  %conv19 = trunc i32 %call18 to i16, !dbg !11694
  store i16 %conv19, i16* %bmcr, align 2, !dbg !11695
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11696
  %27 = load i32, i32* %i, align 4, !dbg !11697
  %28 = load i16, i16* %bmcr, align 2, !dbg !11698
  %conv20 = zext i16 %28 to i32, !dbg !11698
  %and21 = and i32 %conv20, -1025, !dbg !11699
  call void @mdio_write(%struct.net_device* %26, i32 %27, i32 0, i32 %and21) #12, !dbg !11700
  %29 = load i32, i32* %i, align 4, !dbg !11701
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11702
  %mii_if22 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 31, !dbg !11703
  %phy_id23 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if22, i32 0, i32 0, !dbg !11704
  store i32 %29, i32* %phy_id23, align 8, !dbg !11705
  store i32 1, i32* %retval, align 4, !dbg !11706
  br label %return, !dbg !11706

if.end24:                                         ; preds = %if.then3
  br label %if.end25, !dbg !11707

if.end25:                                         ; preds = %if.end24, %if.end
  br label %for.inc, !dbg !11708

for.inc:                                          ; preds = %if.end25, %if.then
  %31 = load i32, i32* %i, align 4, !dbg !11709
  %inc = add i32 %31, 1, !dbg !11709
  store i32 %inc, i32* %i, align 4, !dbg !11709
  br label %for.cond, !dbg !11710, !llvm.loop !11711

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11713
  br label %return, !dbg !11713

return:                                           ; preds = %for.end, %do.end
  %32 = load i32, i32* %retval, align 4, !dbg !11714
  ret i32 %32, !dbg !11714
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #3

; Function Attrs: noredzone
declare dso_local i32 @mii_ethtool_gset(%struct.mii_if_info*, %struct.ethtool_cmd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ethtool_cmd_speed(%struct.ethtool_cmd* %ep) #2 !dbg !11715 {
entry:
  %ep.addr = alloca %struct.ethtool_cmd*, align 8
  store %struct.ethtool_cmd* %ep, %struct.ethtool_cmd** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_cmd** %ep.addr, metadata !11720, metadata !DIExpression()), !dbg !11721
  %0 = load %struct.ethtool_cmd*, %struct.ethtool_cmd** %ep.addr, align 8, !dbg !11722
  %speed_hi = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %0, i32 0, i32 12, !dbg !11723
  %1 = load i16, i16* %speed_hi, align 4, !dbg !11723
  %conv = zext i16 %1 to i32, !dbg !11722
  %shl = shl i32 %conv, 16, !dbg !11724
  %2 = load %struct.ethtool_cmd*, %struct.ethtool_cmd** %ep.addr, align 8, !dbg !11725
  %speed = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %2, i32 0, i32 3, !dbg !11726
  %3 = load i16, i16* %speed, align 4, !dbg !11726
  %conv1 = zext i16 %3 to i32, !dbg !11725
  %or = or i32 %shl, %conv1, !dbg !11727
  ret i32 %or, !dbg !11728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_open(%struct.net_device* %dev) #2 !dbg !11729 {
entry:
  %lock.addr.i381 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i381, metadata !9351, metadata !DIExpression()), !dbg !11730
  %flags.addr.i382 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i382, metadata !9357, metadata !DIExpression()), !dbg !11732
  %tmp.i383 = alloca i32, align 4
  %tmp8.i384 = alloca i32, align 4
  %lock.addr.i379 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i379, metadata !9351, metadata !DIExpression()), !dbg !11733
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !11735
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !11736
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %ioaddr = alloca i64, align 8
  %val = alloca i16, align 2
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %first_phy = alloca i32, align 4
  %bmcr = alloca i16, align 2
  %bcr9 = alloca i32, align 4
  %ecmd = alloca %struct.ethtool_cmd, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11743, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !11745, metadata !DIExpression()), !dbg !11746
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11747
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11748
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !11748
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !11746
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !11749, metadata !DIExpression()), !dbg !11750
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11751
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 4, !dbg !11752
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !11752
  store %struct.pci_dev* %3, %struct.pci_dev** %pdev, align 8, !dbg !11750
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !11753, metadata !DIExpression()), !dbg !11754
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11755
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 5, !dbg !11756
  %5 = load i64, i64* %base_addr, align 8, !dbg !11756
  store i64 %5, i64* %ioaddr, align 8, !dbg !11754
  call void @llvm.dbg.declare(metadata i16* %val, metadata !11757, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11759, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11761, metadata !DIExpression()), !dbg !11762
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11763, metadata !DIExpression()), !dbg !11764
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11765
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 6, !dbg !11767
  %7 = load i32, i32* %irq, align 8, !dbg !11767
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11768
  %shared_irq = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 29, !dbg !11769
  %bf.load = load i8, i8* %shared_irq, align 8, !dbg !11769
  %bf.clear = and i8 %bf.load, 1, !dbg !11769
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11769
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11768
  %9 = zext i1 %tobool to i64, !dbg !11768
  %cond = select i1 %tobool, i32 128, i32 0, !dbg !11768
  %conv = sext i32 %cond to i64, !dbg !11768
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11770
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 0, !dbg !11771
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11770
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11772
  %12 = bitcast %struct.net_device* %11 to i8*, !dbg !11773
  %call1 = call i32 @request_irq(i32 %7, i32 (i32, i8*)* @pcnet32_interrupt, i64 %conv, i8* %arraydecay, i8* %12) #12, !dbg !11774
  %tobool2 = icmp ne i32 %call1, 0, !dbg !11774
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11775

if.then:                                          ; preds = %entry
  store i32 -11, i32* %retval, align 4, !dbg !11776
  br label %return, !dbg !11776

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !11778

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !11779

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11780, metadata !DIExpression()), !dbg !11782
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11783, metadata !DIExpression()), !dbg !11782
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11782
  %conv4 = zext i1 %cmp to i32, !dbg !11782
  store i32 1, i32* %tmp, align 4, !dbg !11782
  %13 = load i32, i32* %tmp, align 4, !dbg !11782
  br label %do.body5, !dbg !11784

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !11785

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11786

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !11788, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11792, metadata !DIExpression()), !dbg !11791
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !11791
  %conv11 = zext i1 %cmp10 to i32, !dbg !11791
  store i32 1, i32* %tmp12, align 4, !dbg !11791
  %14 = load i32, i32* %tmp12, align 4, !dbg !11791
  %call13 = call i64 @arch_local_irq_save() #12, !dbg !11793
  store i64 %call13, i64* %flags, align 8, !dbg !11793
  br label %do.end, !dbg !11793

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !11786

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !11785

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11794, !srcloc !11795
  br label %do.body16, !dbg !11794

do.body16:                                        ; preds = %do.body15
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11796
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %15, i32 0, i32 11, !dbg !11796
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11797
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !11798
  %rlock.i = bitcast %union.anon.46* %17 to %struct.raw_spinlock*, !dbg !11798
  br label %do.end18, !dbg !11796

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11794

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11785

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11784

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11779

do.end22:                                         ; preds = %do.end21
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11799
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 74, !dbg !11801
  %19 = load i8*, i8** %dev_addr, align 8, !dbg !11801
  %call23 = call zeroext i1 @is_valid_ether_addr(i8* %19) #12, !dbg !11802
  br i1 %call23, label %if.end25, label %if.then24, !dbg !11803

if.then24:                                        ; preds = %do.end22
  store i32 -22, i32* %rc, align 4, !dbg !11804
  br label %err_free_irq, !dbg !11806

if.end25:                                         ; preds = %do.end22
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11807
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 10, !dbg !11808
  %21 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !11808
  %reset = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %21, i32 0, i32 6, !dbg !11809
  %22 = load void (i64)*, void (i64)** %reset, align 8, !dbg !11809
  %23 = load i64, i64* %ioaddr, align 8, !dbg !11810
  call void %22(i64 %23) #12, !dbg !11807
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11811
  %a26 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 10, !dbg !11812
  %25 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a26, align 8, !dbg !11812
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %25, i32 0, i32 3, !dbg !11813
  %26 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !11813
  %27 = load i64, i64* %ioaddr, align 8, !dbg !11814
  call void %26(i64 %27, i32 20, i16 zeroext 2) #12, !dbg !11811
  br label %do.body27, !dbg !11815

do.body27:                                        ; preds = %if.end25
  %28 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11816
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %28, i32 0, i32 33, !dbg !11816
  %29 = load i32, i32* %msg_enable, align 8, !dbg !11816
  %and = and i32 %29, 32, !dbg !11816
  %tobool28 = icmp ne i32 %and, 0, !dbg !11816
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !11819

if.then29:                                        ; preds = %do.body27
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11816
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11816
  %irq30 = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 6, !dbg !11816
  %32 = load i32, i32* %irq30, align 8, !dbg !11816
  %33 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11816
  %tx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %33, i32 0, i32 21, !dbg !11816
  %34 = load i64, i64* %tx_ring_dma_addr, align 8, !dbg !11816
  %conv31 = trunc i64 %34 to i32, !dbg !11816
  %35 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11816
  %rx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %35, i32 0, i32 20, !dbg !11816
  %36 = load i64, i64* %rx_ring_dma_addr, align 8, !dbg !11816
  %conv32 = trunc i64 %36 to i32, !dbg !11816
  %37 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11816
  %init_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %37, i32 0, i32 3, !dbg !11816
  %38 = load i64, i64* %init_dma_addr, align 8, !dbg !11816
  %conv33 = trunc i64 %38 to i32, !dbg !11816
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %30, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.pcnet32_open, i64 0, i64 0), i32 %32, i32 %conv31, i32 %conv32, i32 %conv33) #13, !dbg !11816
  br label %if.end34, !dbg !11816

if.end34:                                         ; preds = %if.then29, %do.body27
  br label %do.end35, !dbg !11819

do.end35:                                         ; preds = %if.end34
  %39 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11820
  %options = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %39, i32 0, i32 28, !dbg !11821
  %40 = load i32, i32* %options, align 4, !dbg !11821
  %and36 = and i32 %40, 4, !dbg !11822
  %tobool37 = icmp ne i32 %and36, 0, !dbg !11823
  %lnot = xor i1 %tobool37, true, !dbg !11823
  %lnot38 = xor i1 %lnot, true, !dbg !11824
  %lnot.ext = zext i1 %lnot38 to i32, !dbg !11824
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11825
  %autoneg = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 29, !dbg !11826
  %42 = trunc i32 %lnot.ext to i8, !dbg !11827
  %bf.load39 = load i8, i8* %autoneg, align 8, !dbg !11827
  %bf.value = and i8 %42, 1, !dbg !11827
  %bf.shl = shl i8 %bf.value, 3, !dbg !11827
  %bf.clear40 = and i8 %bf.load39, -9, !dbg !11827
  %bf.set = or i8 %bf.clear40, %bf.shl, !dbg !11827
  store i8 %bf.set, i8* %autoneg, align 8, !dbg !11827
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !11827
  %43 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11828
  %options41 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %43, i32 0, i32 28, !dbg !11829
  %44 = load i32, i32* %options41, align 4, !dbg !11829
  %and42 = and i32 %44, 1, !dbg !11830
  %tobool43 = icmp ne i32 %and42, 0, !dbg !11831
  %lnot44 = xor i1 %tobool43, true, !dbg !11831
  %lnot46 = xor i1 %lnot44, true, !dbg !11832
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !11832
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11833
  %port_tp = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 29, !dbg !11834
  %46 = trunc i32 %lnot.ext47 to i8, !dbg !11835
  %bf.load48 = load i8, i8* %port_tp, align 8, !dbg !11835
  %bf.value49 = and i8 %46, 1, !dbg !11835
  %bf.shl50 = shl i8 %bf.value49, 4, !dbg !11835
  %bf.clear51 = and i8 %bf.load48, -17, !dbg !11835
  %bf.set52 = or i8 %bf.clear51, %bf.shl50, !dbg !11835
  store i8 %bf.set52, i8* %port_tp, align 8, !dbg !11835
  %bf.result.cast53 = zext i8 %bf.value49 to i32, !dbg !11835
  %47 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11836
  %options54 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %47, i32 0, i32 28, !dbg !11837
  %48 = load i32, i32* %options54, align 4, !dbg !11837
  %and55 = and i32 %48, 128, !dbg !11838
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11839
  %lnot57 = xor i1 %tobool56, true, !dbg !11839
  %lnot59 = xor i1 %lnot57, true, !dbg !11840
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !11840
  %49 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11841
  %fdx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %49, i32 0, i32 29, !dbg !11842
  %50 = trunc i32 %lnot.ext60 to i8, !dbg !11843
  %bf.load61 = load i8, i8* %fdx, align 8, !dbg !11843
  %bf.value62 = and i8 %50, 1, !dbg !11843
  %bf.shl63 = shl i8 %bf.value62, 5, !dbg !11843
  %bf.clear64 = and i8 %bf.load61, -33, !dbg !11843
  %bf.set65 = or i8 %bf.clear64, %bf.shl63, !dbg !11843
  store i8 %bf.set65, i8* %fdx, align 8, !dbg !11843
  %bf.result.cast66 = zext i8 %bf.value62 to i32, !dbg !11843
  %51 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11844
  %a67 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %51, i32 0, i32 10, !dbg !11845
  %52 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a67, align 8, !dbg !11845
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %52, i32 0, i32 2, !dbg !11846
  %53 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !11846
  %54 = load i64, i64* %ioaddr, align 8, !dbg !11847
  %call68 = call zeroext i16 %53(i64 %54, i32 2) #12, !dbg !11844
  %conv69 = zext i16 %call68 to i32, !dbg !11844
  %and70 = and i32 %conv69, -3, !dbg !11848
  %conv71 = trunc i32 %and70 to i16, !dbg !11844
  store i16 %conv71, i16* %val, align 2, !dbg !11849
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11850
  %options72 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 28, !dbg !11852
  %56 = load i32, i32* %options72, align 4, !dbg !11852
  %and73 = and i32 %56, 4, !dbg !11853
  %tobool74 = icmp ne i32 %and73, 0, !dbg !11853
  br i1 %tobool74, label %if.then75, label %if.end78, !dbg !11854

if.then75:                                        ; preds = %do.end35
  %57 = load i16, i16* %val, align 2, !dbg !11855
  %conv76 = zext i16 %57 to i32, !dbg !11855
  %or = or i32 %conv76, 2, !dbg !11855
  %conv77 = trunc i32 %or to i16, !dbg !11855
  store i16 %conv77, i16* %val, align 2, !dbg !11855
  br label %if.end78, !dbg !11856

if.end78:                                         ; preds = %if.then75, %do.end35
  %58 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11857
  %a79 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %58, i32 0, i32 10, !dbg !11858
  %59 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a79, align 8, !dbg !11858
  %write_bcr80 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %59, i32 0, i32 3, !dbg !11859
  %60 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr80, align 8, !dbg !11859
  %61 = load i64, i64* %ioaddr, align 8, !dbg !11860
  %62 = load i16, i16* %val, align 2, !dbg !11861
  call void %60(i64 %61, i32 2, i16 zeroext %62) #12, !dbg !11857
  %63 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11862
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %63, i32 0, i32 31, !dbg !11864
  %full_duplex = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if, i32 0, i32 4, !dbg !11865
  %bf.load81 = load i8, i8* %full_duplex, align 8, !dbg !11865
  %bf.clear82 = and i8 %bf.load81, 1, !dbg !11865
  %bf.cast83 = zext i8 %bf.clear82 to i32, !dbg !11865
  %tobool84 = icmp ne i32 %bf.cast83, 0, !dbg !11862
  br i1 %tobool84, label %if.then85, label %if.end123, !dbg !11866

if.then85:                                        ; preds = %if.end78
  %64 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11867
  %a86 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %64, i32 0, i32 10, !dbg !11869
  %65 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a86, align 8, !dbg !11869
  %read_bcr87 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %65, i32 0, i32 2, !dbg !11870
  %66 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr87, align 8, !dbg !11870
  %67 = load i64, i64* %ioaddr, align 8, !dbg !11871
  %call88 = call zeroext i16 %66(i64 %67, i32 9) #12, !dbg !11867
  %conv89 = zext i16 %call88 to i32, !dbg !11867
  %and90 = and i32 %conv89, -4, !dbg !11872
  %conv91 = trunc i32 %and90 to i16, !dbg !11867
  store i16 %conv91, i16* %val, align 2, !dbg !11873
  %68 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11874
  %options92 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %68, i32 0, i32 28, !dbg !11876
  %69 = load i32, i32* %options92, align 4, !dbg !11876
  %and93 = and i32 %69, 128, !dbg !11877
  %tobool94 = icmp ne i32 %and93, 0, !dbg !11877
  br i1 %tobool94, label %if.then95, label %if.else, !dbg !11878

if.then95:                                        ; preds = %if.then85
  %70 = load i16, i16* %val, align 2, !dbg !11879
  %conv96 = zext i16 %70 to i32, !dbg !11879
  %or97 = or i32 %conv96, 1, !dbg !11879
  %conv98 = trunc i32 %or97 to i16, !dbg !11879
  store i16 %conv98, i16* %val, align 2, !dbg !11879
  %71 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11881
  %options99 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %71, i32 0, i32 28, !dbg !11883
  %72 = load i32, i32* %options99, align 4, !dbg !11883
  %cmp100 = icmp eq i32 %72, 128, !dbg !11884
  br i1 %cmp100, label %if.then102, label %if.end106, !dbg !11885

if.then102:                                       ; preds = %if.then95
  %73 = load i16, i16* %val, align 2, !dbg !11886
  %conv103 = zext i16 %73 to i32, !dbg !11886
  %or104 = or i32 %conv103, 2, !dbg !11886
  %conv105 = trunc i32 %or104 to i16, !dbg !11886
  store i16 %conv105, i16* %val, align 2, !dbg !11886
  br label %if.end106, !dbg !11887

if.end106:                                        ; preds = %if.then102, %if.then95
  br label %if.end120, !dbg !11888

if.else:                                          ; preds = %if.then85
  %74 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11889
  %options107 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %74, i32 0, i32 28, !dbg !11891
  %75 = load i32, i32* %options107, align 4, !dbg !11891
  %and108 = and i32 %75, 4, !dbg !11892
  %tobool109 = icmp ne i32 %and108, 0, !dbg !11892
  br i1 %tobool109, label %if.then110, label %if.end119, !dbg !11893

if.then110:                                       ; preds = %if.else
  %76 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11894
  %chip_version = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %76, i32 0, i32 35, !dbg !11897
  %77 = load i16, i16* %chip_version, align 8, !dbg !11897
  %conv111 = zext i16 %77 to i32, !dbg !11894
  %cmp112 = icmp eq i32 %conv111, 9767, !dbg !11898
  br i1 %cmp112, label %if.then114, label %if.end118, !dbg !11899

if.then114:                                       ; preds = %if.then110
  %78 = load i16, i16* %val, align 2, !dbg !11900
  %conv115 = zext i16 %78 to i32, !dbg !11900
  %or116 = or i32 %conv115, 3, !dbg !11900
  %conv117 = trunc i32 %or116 to i16, !dbg !11900
  store i16 %conv117, i16* %val, align 2, !dbg !11900
  br label %if.end118, !dbg !11901

if.end118:                                        ; preds = %if.then114, %if.then110
  br label %if.end119, !dbg !11902

if.end119:                                        ; preds = %if.end118, %if.else
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end106
  %79 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11903
  %a121 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %79, i32 0, i32 10, !dbg !11904
  %80 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a121, align 8, !dbg !11904
  %write_bcr122 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %80, i32 0, i32 3, !dbg !11905
  %81 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr122, align 8, !dbg !11905
  %82 = load i64, i64* %ioaddr, align 8, !dbg !11906
  %83 = load i16, i16* %val, align 2, !dbg !11907
  call void %81(i64 %82, i32 9, i16 zeroext %83) #12, !dbg !11903
  br label %if.end123, !dbg !11908

if.end123:                                        ; preds = %if.end120, %if.end78
  %84 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11909
  %a124 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %84, i32 0, i32 10, !dbg !11910
  %85 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a124, align 8, !dbg !11910
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %85, i32 0, i32 0, !dbg !11911
  %86 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !11911
  %87 = load i64, i64* %ioaddr, align 8, !dbg !11912
  %call125 = call zeroext i16 %86(i64 %87, i32 124) #12, !dbg !11909
  %conv126 = zext i16 %call125 to i32, !dbg !11909
  %and127 = and i32 %conv126, -17, !dbg !11913
  %conv128 = trunc i32 %and127 to i16, !dbg !11909
  store i16 %conv128, i16* %val, align 2, !dbg !11914
  %88 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11915
  %options129 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %88, i32 0, i32 28, !dbg !11917
  %89 = load i32, i32* %options129, align 4, !dbg !11917
  %and130 = and i32 %89, 3, !dbg !11918
  %cmp131 = icmp eq i32 %and130, 2, !dbg !11919
  br i1 %cmp131, label %if.then133, label %if.end137, !dbg !11920

if.then133:                                       ; preds = %if.end123
  %90 = load i16, i16* %val, align 2, !dbg !11921
  %conv134 = zext i16 %90 to i32, !dbg !11921
  %or135 = or i32 %conv134, 16, !dbg !11921
  %conv136 = trunc i32 %or135 to i16, !dbg !11921
  store i16 %conv136, i16* %val, align 2, !dbg !11921
  br label %if.end137, !dbg !11922

if.end137:                                        ; preds = %if.then133, %if.end123
  %91 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11923
  %a138 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %91, i32 0, i32 10, !dbg !11924
  %92 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a138, align 8, !dbg !11924
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %92, i32 0, i32 1, !dbg !11925
  %93 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !11925
  %94 = load i64, i64* %ioaddr, align 8, !dbg !11926
  %95 = load i16, i16* %val, align 2, !dbg !11927
  call void %93(i64 %94, i32 124, i16 zeroext %95) #12, !dbg !11923
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11928
  %tobool139 = icmp ne %struct.pci_dev* %96, null, !dbg !11928
  br i1 %tobool139, label %land.lhs.true, label %if.end165, !dbg !11930

land.lhs.true:                                    ; preds = %if.end137
  %97 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11931
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %97, i32 0, i32 9, !dbg !11932
  %98 = load i16, i16* %subsystem_vendor, align 8, !dbg !11932
  %conv140 = zext i16 %98 to i32, !dbg !11931
  %cmp141 = icmp eq i32 %conv140, 4697, !dbg !11933
  br i1 %cmp141, label %land.lhs.true143, label %if.end165, !dbg !11934

land.lhs.true143:                                 ; preds = %land.lhs.true
  %99 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11935
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %99, i32 0, i32 10, !dbg !11936
  %100 = load i16, i16* %subsystem_device, align 2, !dbg !11936
  %conv144 = zext i16 %100 to i32, !dbg !11935
  %cmp145 = icmp eq i32 %conv144, 9985, !dbg !11937
  br i1 %cmp145, label %if.then151, label %lor.lhs.false, !dbg !11938

lor.lhs.false:                                    ; preds = %land.lhs.true143
  %101 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11939
  %subsystem_device147 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %101, i32 0, i32 10, !dbg !11940
  %102 = load i16, i16* %subsystem_device147, align 2, !dbg !11940
  %conv148 = zext i16 %102 to i32, !dbg !11939
  %cmp149 = icmp eq i32 %conv148, 9987, !dbg !11941
  br i1 %cmp149, label %if.then151, label %if.end165, !dbg !11942

if.then151:                                       ; preds = %lor.lhs.false, %land.lhs.true143
  %103 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11943
  %options152 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %103, i32 0, i32 28, !dbg !11946
  %104 = load i32, i32* %options152, align 4, !dbg !11946
  %and153 = and i32 %104, 4, !dbg !11947
  %tobool154 = icmp ne i32 %and153, 0, !dbg !11947
  br i1 %tobool154, label %if.then155, label %if.end164, !dbg !11948

if.then155:                                       ; preds = %if.then151
  %105 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11949
  %options156 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %105, i32 0, i32 28, !dbg !11951
  store i32 192, i32* %options156, align 4, !dbg !11952
  br label %do.body157, !dbg !11953

do.body157:                                       ; preds = %if.then155
  %106 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11954
  %msg_enable158 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %106, i32 0, i32 33, !dbg !11954
  %107 = load i32, i32* %msg_enable158, align 8, !dbg !11954
  %and159 = and i32 %107, 4, !dbg !11954
  %tobool160 = icmp ne i32 %and159, 0, !dbg !11954
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !11957

if.then161:                                       ; preds = %do.body157
  %108 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11954
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %108, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !11954
  br label %if.end162, !dbg !11954

if.end162:                                        ; preds = %if.then161, %do.body157
  br label %do.end163, !dbg !11957

do.end163:                                        ; preds = %if.end162
  br label %if.end164, !dbg !11958

if.end164:                                        ; preds = %do.end163, %if.then151
  br label %if.end165, !dbg !11959

if.end165:                                        ; preds = %if.end164, %lor.lhs.false, %land.lhs.true, %if.end137
  %109 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11960
  %phycount = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %109, i32 0, i32 27, !dbg !11962
  %110 = load i8, i8* %phycount, align 1, !dbg !11962
  %conv166 = sext i8 %110 to i32, !dbg !11960
  %cmp167 = icmp slt i32 %conv166, 2, !dbg !11963
  br i1 %cmp167, label %if.then169, label %if.else237, !dbg !11964

if.then169:                                       ; preds = %if.end165
  %111 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11965
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %111, i32 0, i32 29, !dbg !11968
  %bf.load170 = load i8, i8* %mii, align 8, !dbg !11968
  %bf.lshr = lshr i8 %bf.load170, 2, !dbg !11968
  %bf.clear171 = and i8 %bf.lshr, 1, !dbg !11968
  %bf.cast172 = zext i8 %bf.clear171 to i32, !dbg !11968
  %tobool173 = icmp ne i32 %bf.cast172, 0, !dbg !11965
  br i1 %tobool173, label %land.lhs.true174, label %if.else211, !dbg !11969

land.lhs.true174:                                 ; preds = %if.then169
  %112 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11970
  %options175 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %112, i32 0, i32 28, !dbg !11971
  %113 = load i32, i32* %options175, align 4, !dbg !11971
  %and176 = and i32 %113, 4, !dbg !11972
  %tobool177 = icmp ne i32 %and176, 0, !dbg !11972
  br i1 %tobool177, label %if.else211, label %if.then178, !dbg !11973

if.then178:                                       ; preds = %land.lhs.true174
  %114 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11974
  %a179 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %114, i32 0, i32 10, !dbg !11976
  %115 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a179, align 8, !dbg !11976
  %write_bcr180 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %115, i32 0, i32 3, !dbg !11977
  %116 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr180, align 8, !dbg !11977
  %117 = load i64, i64* %ioaddr, align 8, !dbg !11978
  %118 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11979
  %a181 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %118, i32 0, i32 10, !dbg !11980
  %119 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a181, align 8, !dbg !11980
  %read_bcr182 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %119, i32 0, i32 2, !dbg !11981
  %120 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr182, align 8, !dbg !11981
  %121 = load i64, i64* %ioaddr, align 8, !dbg !11982
  %call183 = call zeroext i16 %120(i64 %121, i32 32) #12, !dbg !11979
  %conv184 = zext i16 %call183 to i32, !dbg !11979
  %or185 = or i32 %conv184, 128, !dbg !11983
  %conv186 = trunc i32 %or185 to i16, !dbg !11979
  call void %116(i64 %117, i32 32, i16 zeroext %conv186) #12, !dbg !11974
  %122 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11984
  %a187 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %122, i32 0, i32 10, !dbg !11985
  %123 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a187, align 8, !dbg !11985
  %read_bcr188 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %123, i32 0, i32 2, !dbg !11986
  %124 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr188, align 8, !dbg !11986
  %125 = load i64, i64* %ioaddr, align 8, !dbg !11987
  %call189 = call zeroext i16 %124(i64 %125, i32 32) #12, !dbg !11984
  %conv190 = zext i16 %call189 to i32, !dbg !11984
  %and191 = and i32 %conv190, -185, !dbg !11988
  %conv192 = trunc i32 %and191 to i16, !dbg !11984
  store i16 %conv192, i16* %val, align 2, !dbg !11989
  %126 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11990
  %options193 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %126, i32 0, i32 28, !dbg !11992
  %127 = load i32, i32* %options193, align 4, !dbg !11992
  %and194 = and i32 %127, 128, !dbg !11993
  %tobool195 = icmp ne i32 %and194, 0, !dbg !11993
  br i1 %tobool195, label %if.then196, label %if.end200, !dbg !11994

if.then196:                                       ; preds = %if.then178
  %128 = load i16, i16* %val, align 2, !dbg !11995
  %conv197 = zext i16 %128 to i32, !dbg !11995
  %or198 = or i32 %conv197, 16, !dbg !11995
  %conv199 = trunc i32 %or198 to i16, !dbg !11995
  store i16 %conv199, i16* %val, align 2, !dbg !11995
  br label %if.end200, !dbg !11996

if.end200:                                        ; preds = %if.then196, %if.then178
  %129 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !11997
  %options201 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %129, i32 0, i32 28, !dbg !11999
  %130 = load i32, i32* %options201, align 4, !dbg !11999
  %and202 = and i32 %130, 64, !dbg !12000
  %tobool203 = icmp ne i32 %and202, 0, !dbg !12000
  br i1 %tobool203, label %if.then204, label %if.end208, !dbg !12001

if.then204:                                       ; preds = %if.end200
  %131 = load i16, i16* %val, align 2, !dbg !12002
  %conv205 = zext i16 %131 to i32, !dbg !12002
  %or206 = or i32 %conv205, 8, !dbg !12002
  %conv207 = trunc i32 %or206 to i16, !dbg !12002
  store i16 %conv207, i16* %val, align 2, !dbg !12002
  br label %if.end208, !dbg !12003

if.end208:                                        ; preds = %if.then204, %if.end200
  %132 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12004
  %a209 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %132, i32 0, i32 10, !dbg !12005
  %133 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a209, align 8, !dbg !12005
  %write_bcr210 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %133, i32 0, i32 3, !dbg !12006
  %134 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr210, align 8, !dbg !12006
  %135 = load i64, i64* %ioaddr, align 8, !dbg !12007
  %136 = load i16, i16* %val, align 2, !dbg !12008
  call void %134(i64 %135, i32 32, i16 zeroext %136) #12, !dbg !12004
  br label %if.end236, !dbg !12009

if.else211:                                       ; preds = %land.lhs.true174, %if.then169
  %137 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12010
  %options212 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %137, i32 0, i32 28, !dbg !12013
  %138 = load i32, i32* %options212, align 4, !dbg !12013
  %and213 = and i32 %138, 4, !dbg !12014
  %tobool214 = icmp ne i32 %and213, 0, !dbg !12014
  br i1 %tobool214, label %if.then215, label %if.end235, !dbg !12015

if.then215:                                       ; preds = %if.else211
  %139 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12016
  %a216 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %139, i32 0, i32 10, !dbg !12018
  %140 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a216, align 8, !dbg !12018
  %write_bcr217 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %140, i32 0, i32 3, !dbg !12019
  %141 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr217, align 8, !dbg !12019
  %142 = load i64, i64* %ioaddr, align 8, !dbg !12020
  %143 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12021
  %a218 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %143, i32 0, i32 10, !dbg !12022
  %144 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a218, align 8, !dbg !12022
  %read_bcr219 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %144, i32 0, i32 2, !dbg !12023
  %145 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr219, align 8, !dbg !12023
  %146 = load i64, i64* %ioaddr, align 8, !dbg !12024
  %call220 = call zeroext i16 %145(i64 %146, i32 32) #12, !dbg !12021
  %conv221 = zext i16 %call220 to i32, !dbg !12021
  %or222 = or i32 %conv221, 128, !dbg !12025
  %conv223 = trunc i32 %or222 to i16, !dbg !12021
  call void %141(i64 %142, i32 32, i16 zeroext %conv223) #12, !dbg !12016
  %147 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12026
  %a224 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %147, i32 0, i32 10, !dbg !12027
  %148 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a224, align 8, !dbg !12027
  %read_bcr225 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %148, i32 0, i32 2, !dbg !12028
  %149 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr225, align 8, !dbg !12028
  %150 = load i64, i64* %ioaddr, align 8, !dbg !12029
  %call226 = call zeroext i16 %149(i64 %150, i32 32) #12, !dbg !12026
  %conv227 = zext i16 %call226 to i32, !dbg !12026
  %and228 = and i32 %conv227, -153, !dbg !12030
  %conv229 = trunc i32 %and228 to i16, !dbg !12026
  store i16 %conv229, i16* %val, align 2, !dbg !12031
  %151 = load i16, i16* %val, align 2, !dbg !12032
  %conv230 = zext i16 %151 to i32, !dbg !12032
  %or231 = or i32 %conv230, 32, !dbg !12032
  %conv232 = trunc i32 %or231 to i16, !dbg !12032
  store i16 %conv232, i16* %val, align 2, !dbg !12032
  %152 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12033
  %a233 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %152, i32 0, i32 10, !dbg !12034
  %153 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a233, align 8, !dbg !12034
  %write_bcr234 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %153, i32 0, i32 3, !dbg !12035
  %154 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr234, align 8, !dbg !12035
  %155 = load i64, i64* %ioaddr, align 8, !dbg !12036
  %156 = load i16, i16* %val, align 2, !dbg !12037
  call void %154(i64 %155, i32 32, i16 zeroext %156) #12, !dbg !12033
  br label %if.end235, !dbg !12038

if.end235:                                        ; preds = %if.then215, %if.else211
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.end208
  br label %if.end318, !dbg !12039

if.else237:                                       ; preds = %if.end165
  call void @llvm.dbg.declare(metadata i32* %first_phy, metadata !12040, metadata !DIExpression()), !dbg !12042
  store i32 -1, i32* %first_phy, align 4, !dbg !12042
  call void @llvm.dbg.declare(metadata i16* %bmcr, metadata !12043, metadata !DIExpression()), !dbg !12044
  call void @llvm.dbg.declare(metadata i32* %bcr9, metadata !12045, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.declare(metadata %struct.ethtool_cmd* %ecmd, metadata !12047, metadata !DIExpression()), !dbg !12048
  %157 = bitcast %struct.ethtool_cmd* %ecmd to i8*, !dbg !12048
  call void @llvm.memset.p0i8.i64(i8* align 4 %157, i8 0, i64 44, i1 false), !dbg !12048
  %158 = bitcast i8* %157 to %struct.ethtool_cmd*, !dbg !12048
  %159 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %158, i32 0, i32 0, !dbg !12048
  store i32 1, i32* %159, align 4, !dbg !12048
  %160 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12049
  %a238 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %160, i32 0, i32 10, !dbg !12050
  %161 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a238, align 8, !dbg !12050
  %read_bcr239 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %161, i32 0, i32 2, !dbg !12051
  %162 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr239, align 8, !dbg !12051
  %163 = load i64, i64* %ioaddr, align 8, !dbg !12052
  %call240 = call zeroext i16 %162(i64 %163, i32 2) #12, !dbg !12049
  store i16 %call240, i16* %val, align 2, !dbg !12053
  %164 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12054
  %a241 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %164, i32 0, i32 10, !dbg !12055
  %165 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a241, align 8, !dbg !12055
  %write_bcr242 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %165, i32 0, i32 3, !dbg !12056
  %166 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr242, align 8, !dbg !12056
  %167 = load i64, i64* %ioaddr, align 8, !dbg !12057
  %168 = load i16, i16* %val, align 2, !dbg !12058
  %conv243 = zext i16 %168 to i32, !dbg !12058
  %and244 = and i32 %conv243, -3, !dbg !12059
  %conv245 = trunc i32 %and244 to i16, !dbg !12058
  call void %166(i64 %167, i32 2, i16 zeroext %conv245) #12, !dbg !12054
  %169 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12060
  %a246 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %169, i32 0, i32 10, !dbg !12061
  %170 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a246, align 8, !dbg !12061
  %read_bcr247 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %170, i32 0, i32 2, !dbg !12062
  %171 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr247, align 8, !dbg !12062
  %172 = load i64, i64* %ioaddr, align 8, !dbg !12063
  %call248 = call zeroext i16 %171(i64 %172, i32 32) #12, !dbg !12060
  store i16 %call248, i16* %val, align 2, !dbg !12064
  %173 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12065
  %a249 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %173, i32 0, i32 10, !dbg !12066
  %174 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a249, align 8, !dbg !12066
  %write_bcr250 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %174, i32 0, i32 3, !dbg !12067
  %175 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr250, align 8, !dbg !12067
  %176 = load i64, i64* %ioaddr, align 8, !dbg !12068
  %177 = load i16, i16* %val, align 2, !dbg !12069
  %conv251 = zext i16 %177 to i32, !dbg !12069
  %and252 = and i32 %conv251, -129, !dbg !12070
  %conv253 = trunc i32 %and252 to i16, !dbg !12069
  call void %175(i64 %176, i32 32, i16 zeroext %conv253) #12, !dbg !12065
  %178 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12071
  %options254 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %178, i32 0, i32 28, !dbg !12073
  %179 = load i32, i32* %options254, align 4, !dbg !12073
  %and255 = and i32 %179, 4, !dbg !12074
  %tobool256 = icmp ne i32 %and255, 0, !dbg !12074
  br i1 %tobool256, label %if.end279, label %if.then257, !dbg !12075

if.then257:                                       ; preds = %if.else237
  %port = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 5, !dbg !12076
  store i8 2, i8* %port, align 1, !dbg !12078
  %transceiver = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 7, !dbg !12079
  store i8 0, i8* %transceiver, align 1, !dbg !12080
  %autoneg258 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 8, !dbg !12081
  store i8 0, i8* %autoneg258, align 2, !dbg !12082
  %180 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12083
  %options259 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %180, i32 0, i32 28, !dbg !12084
  %181 = load i32, i32* %options259, align 4, !dbg !12084
  %and260 = and i32 %181, 64, !dbg !12085
  %tobool261 = icmp ne i32 %and260, 0, !dbg !12086
  %182 = zext i1 %tobool261 to i64, !dbg !12086
  %cond262 = select i1 %tobool261, i32 100, i32 10, !dbg !12086
  call void @ethtool_cmd_speed_set(%struct.ethtool_cmd* %ecmd, i32 %cond262) #12, !dbg !12087
  %183 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12088
  %a263 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %183, i32 0, i32 10, !dbg !12089
  %184 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a263, align 8, !dbg !12089
  %read_bcr264 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %184, i32 0, i32 2, !dbg !12090
  %185 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr264, align 8, !dbg !12090
  %186 = load i64, i64* %ioaddr, align 8, !dbg !12091
  %call265 = call zeroext i16 %185(i64 %186, i32 9) #12, !dbg !12088
  %conv266 = zext i16 %call265 to i32, !dbg !12088
  store i32 %conv266, i32* %bcr9, align 4, !dbg !12092
  %187 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12093
  %options267 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %187, i32 0, i32 28, !dbg !12095
  %188 = load i32, i32* %options267, align 4, !dbg !12095
  %and268 = and i32 %188, 128, !dbg !12096
  %tobool269 = icmp ne i32 %and268, 0, !dbg !12096
  br i1 %tobool269, label %if.then270, label %if.else272, !dbg !12097

if.then270:                                       ; preds = %if.then257
  %duplex = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 4, !dbg !12098
  store i8 1, i8* %duplex, align 2, !dbg !12100
  %189 = load i32, i32* %bcr9, align 4, !dbg !12101
  %or271 = or i32 %189, 1, !dbg !12101
  store i32 %or271, i32* %bcr9, align 4, !dbg !12101
  br label %if.end275, !dbg !12102

if.else272:                                       ; preds = %if.then257
  %duplex273 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 4, !dbg !12103
  store i8 0, i8* %duplex273, align 2, !dbg !12105
  %190 = load i32, i32* %bcr9, align 4, !dbg !12106
  %or274 = or i32 %190, -2, !dbg !12106
  store i32 %or274, i32* %bcr9, align 4, !dbg !12106
  br label %if.end275

if.end275:                                        ; preds = %if.else272, %if.then270
  %191 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12107
  %a276 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %191, i32 0, i32 10, !dbg !12108
  %192 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a276, align 8, !dbg !12108
  %write_bcr277 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %192, i32 0, i32 3, !dbg !12109
  %193 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr277, align 8, !dbg !12109
  %194 = load i64, i64* %ioaddr, align 8, !dbg !12110
  %195 = load i32, i32* %bcr9, align 4, !dbg !12111
  %conv278 = trunc i32 %195 to i16, !dbg !12111
  call void %193(i64 %194, i32 9, i16 zeroext %conv278) #12, !dbg !12107
  br label %if.end279, !dbg !12112

if.end279:                                        ; preds = %if.end275, %if.else237
  store i32 0, i32* %i, align 4, !dbg !12113
  br label %for.cond, !dbg !12115

for.cond:                                         ; preds = %for.inc, %if.end279
  %196 = load i32, i32* %i, align 4, !dbg !12116
  %cmp280 = icmp slt i32 %196, 32, !dbg !12118
  br i1 %cmp280, label %for.body, label %for.end, !dbg !12119

for.body:                                         ; preds = %for.cond
  %197 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12120
  %phymask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %197, i32 0, i32 34, !dbg !12123
  %198 = load i32, i32* %phymask, align 4, !dbg !12123
  %199 = load i32, i32* %i, align 4, !dbg !12124
  %shl = shl i32 1, %199, !dbg !12125
  %and282 = and i32 %198, %shl, !dbg !12126
  %tobool283 = icmp ne i32 %and282, 0, !dbg !12126
  br i1 %tobool283, label %if.then284, label %if.end308, !dbg !12127

if.then284:                                       ; preds = %for.body
  %200 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12128
  %201 = load i32, i32* %i, align 4, !dbg !12130
  %call285 = call i32 @mdio_read(%struct.net_device* %200, i32 %201, i32 0) #12, !dbg !12131
  %conv286 = trunc i32 %call285 to i16, !dbg !12131
  store i16 %conv286, i16* %bmcr, align 2, !dbg !12132
  %202 = load i32, i32* %first_phy, align 4, !dbg !12133
  %cmp287 = icmp eq i32 %202, -1, !dbg !12135
  br i1 %cmp287, label %if.then289, label %if.else292, !dbg !12136

if.then289:                                       ; preds = %if.then284
  %203 = load i32, i32* %i, align 4, !dbg !12137
  store i32 %203, i32* %first_phy, align 4, !dbg !12139
  %204 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12140
  %205 = load i32, i32* %i, align 4, !dbg !12141
  %206 = load i16, i16* %bmcr, align 2, !dbg !12142
  %conv290 = zext i16 %206 to i32, !dbg !12142
  %and291 = and i32 %conv290, -1025, !dbg !12143
  call void @mdio_write(%struct.net_device* %204, i32 %205, i32 0, i32 %and291) #12, !dbg !12144
  br label %if.end295, !dbg !12145

if.else292:                                       ; preds = %if.then284
  %207 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12146
  %208 = load i32, i32* %i, align 4, !dbg !12148
  %209 = load i16, i16* %bmcr, align 2, !dbg !12149
  %conv293 = zext i16 %209 to i32, !dbg !12149
  %or294 = or i32 %conv293, 1024, !dbg !12150
  call void @mdio_write(%struct.net_device* %207, i32 %208, i32 0, i32 %or294) #12, !dbg !12151
  br label %if.end295

if.end295:                                        ; preds = %if.else292, %if.then289
  %210 = load i32, i32* %i, align 4, !dbg !12152
  %211 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12153
  %mii_if296 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %211, i32 0, i32 31, !dbg !12154
  %phy_id = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if296, i32 0, i32 0, !dbg !12155
  store i32 %210, i32* %phy_id, align 8, !dbg !12156
  %212 = load i32, i32* %i, align 4, !dbg !12157
  %conv297 = trunc i32 %212 to i8, !dbg !12157
  %phy_address = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 6, !dbg !12158
  store i8 %conv297, i8* %phy_address, align 4, !dbg !12159
  %213 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12160
  %options298 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %213, i32 0, i32 28, !dbg !12162
  %214 = load i32, i32* %options298, align 4, !dbg !12162
  %and299 = and i32 %214, 4, !dbg !12163
  %tobool300 = icmp ne i32 %and299, 0, !dbg !12163
  br i1 %tobool300, label %if.then301, label %if.end305, !dbg !12164

if.then301:                                       ; preds = %if.end295
  %215 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12165
  %mii_if302 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %215, i32 0, i32 31, !dbg !12167
  %call303 = call i32 @mii_ethtool_gset(%struct.mii_if_info* %mii_if302, %struct.ethtool_cmd* %ecmd) #12, !dbg !12168
  %autoneg304 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %ecmd, i32 0, i32 8, !dbg !12169
  store i8 1, i8* %autoneg304, align 2, !dbg !12170
  br label %if.end305, !dbg !12171

if.end305:                                        ; preds = %if.then301, %if.end295
  %216 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12172
  %mii_if306 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %216, i32 0, i32 31, !dbg !12173
  %call307 = call i32 @mii_ethtool_sset(%struct.mii_if_info* %mii_if306, %struct.ethtool_cmd* %ecmd) #12, !dbg !12174
  br label %if.end308, !dbg !12175

if.end308:                                        ; preds = %if.end305, %for.body
  br label %for.inc, !dbg !12176

for.inc:                                          ; preds = %if.end308
  %217 = load i32, i32* %i, align 4, !dbg !12177
  %inc = add i32 %217, 1, !dbg !12177
  store i32 %inc, i32* %i, align 4, !dbg !12177
  br label %for.cond, !dbg !12178, !llvm.loop !12179

for.end:                                          ; preds = %for.cond
  %218 = load i32, i32* %first_phy, align 4, !dbg !12181
  %219 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12182
  %mii_if309 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %219, i32 0, i32 31, !dbg !12183
  %phy_id310 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if309, i32 0, i32 0, !dbg !12184
  store i32 %218, i32* %phy_id310, align 8, !dbg !12185
  br label %do.body311, !dbg !12186

do.body311:                                       ; preds = %for.end
  %220 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12187
  %msg_enable312 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %220, i32 0, i32 33, !dbg !12187
  %221 = load i32, i32* %msg_enable312, align 8, !dbg !12187
  %and313 = and i32 %221, 4, !dbg !12187
  %tobool314 = icmp ne i32 %and313, 0, !dbg !12187
  br i1 %tobool314, label %if.then315, label %if.end316, !dbg !12190

if.then315:                                       ; preds = %do.body311
  %222 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12187
  %223 = load i32, i32* %first_phy, align 4, !dbg !12187
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %222, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0), i32 %223) #13, !dbg !12187
  br label %if.end316, !dbg !12187

if.end316:                                        ; preds = %if.then315, %do.body311
  br label %do.end317, !dbg !12190

do.end317:                                        ; preds = %if.end316
  br label %if.end318

if.end318:                                        ; preds = %do.end317, %if.end236
  %224 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12191
  %options319 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %224, i32 0, i32 28, !dbg !12191
  %225 = load i32, i32* %options319, align 4, !dbg !12191
  %and320 = and i32 %225, 3, !dbg !12191
  %shl321 = shl i32 %and320, 7, !dbg !12191
  %conv322 = trunc i32 %shl321 to i16, !dbg !12191
  %226 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12192
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %226, i32 0, i32 0, !dbg !12193
  %227 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block, align 8, !dbg !12193
  %mode = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %227, i32 0, i32 0, !dbg !12194
  store i16 %conv322, i16* %mode, align 4, !dbg !12195
  %228 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12196
  call void @pcnet32_load_multicast(%struct.net_device* %228) #12, !dbg !12197
  %229 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12198
  %call323 = call i32 @pcnet32_init_ring(%struct.net_device* %229) #12, !dbg !12200
  %tobool324 = icmp ne i32 %call323, 0, !dbg !12200
  br i1 %tobool324, label %if.then325, label %if.end326, !dbg !12201

if.then325:                                       ; preds = %if.end318
  store i32 -12, i32* %rc, align 4, !dbg !12202
  br label %err_free_ring, !dbg !12204

if.end326:                                        ; preds = %if.end318
  %230 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12205
  %napi = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %230, i32 0, i32 25, !dbg !12206
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !12207
  %231 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12208
  %a327 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %231, i32 0, i32 10, !dbg !12209
  %232 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a327, align 8, !dbg !12209
  %write_csr328 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %232, i32 0, i32 1, !dbg !12210
  %233 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr328, align 8, !dbg !12210
  %234 = load i64, i64* %ioaddr, align 8, !dbg !12211
  %235 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12212
  %init_dma_addr329 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %235, i32 0, i32 3, !dbg !12213
  %236 = load i64, i64* %init_dma_addr329, align 8, !dbg !12213
  %and330 = and i64 %236, 65535, !dbg !12214
  %conv331 = trunc i64 %and330 to i16, !dbg !12215
  call void %233(i64 %234, i32 1, i16 zeroext %conv331) #12, !dbg !12208
  %237 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12216
  %a332 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %237, i32 0, i32 10, !dbg !12217
  %238 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a332, align 8, !dbg !12217
  %write_csr333 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %238, i32 0, i32 1, !dbg !12218
  %239 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr333, align 8, !dbg !12218
  %240 = load i64, i64* %ioaddr, align 8, !dbg !12219
  %241 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12220
  %init_dma_addr334 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %241, i32 0, i32 3, !dbg !12221
  %242 = load i64, i64* %init_dma_addr334, align 8, !dbg !12221
  %shr = lshr i64 %242, 16, !dbg !12222
  %conv335 = trunc i64 %shr to i16, !dbg !12223
  call void %239(i64 %240, i32 2, i16 zeroext %conv335) #12, !dbg !12216
  %243 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12224
  %a336 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %243, i32 0, i32 10, !dbg !12225
  %244 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a336, align 8, !dbg !12225
  %write_csr337 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %244, i32 0, i32 1, !dbg !12226
  %245 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr337, align 8, !dbg !12226
  %246 = load i64, i64* %ioaddr, align 8, !dbg !12227
  call void %245(i64 %246, i32 4, i16 zeroext 2325) #12, !dbg !12224
  %247 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12228
  %a338 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %247, i32 0, i32 10, !dbg !12229
  %248 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a338, align 8, !dbg !12229
  %write_csr339 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %248, i32 0, i32 1, !dbg !12230
  %249 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr339, align 8, !dbg !12230
  %250 = load i64, i64* %ioaddr, align 8, !dbg !12231
  call void %249(i64 %250, i32 0, i16 zeroext 1) #12, !dbg !12228
  %251 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12232
  call void @netif_start_queue(%struct.net_device* %251) #12, !dbg !12233
  %252 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12234
  %chip_version340 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %252, i32 0, i32 35, !dbg !12236
  %253 = load i16, i16* %chip_version340, align 8, !dbg !12236
  %conv341 = zext i16 %253 to i32, !dbg !12234
  %cmp342 = icmp sge i32 %conv341, 9761, !dbg !12237
  br i1 %cmp342, label %if.then344, label %if.end346, !dbg !12238

if.then344:                                       ; preds = %if.end326
  %254 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12239
  call void @pcnet32_check_media(%struct.net_device* %254, i32 1) #12, !dbg !12241
  %255 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12242
  %watchdog_timer = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %255, i32 0, i32 32, !dbg !12243
  %256 = load volatile i64, i64* @jiffies, align 8, !dbg !12244
  %add = add i64 %256, 500, !dbg !12244
  %call345 = call i32 @mod_timer(%struct.timer_list* %watchdog_timer, i64 %add) #12, !dbg !12245
  br label %if.end346, !dbg !12246

if.end346:                                        ; preds = %if.then344, %if.end326
  store i32 0, i32* %i, align 4, !dbg !12247
  br label %while.cond, !dbg !12248

while.cond:                                       ; preds = %if.end357, %if.end346
  %257 = load i32, i32* %i, align 4, !dbg !12249
  %inc347 = add i32 %257, 1, !dbg !12249
  store i32 %inc347, i32* %i, align 4, !dbg !12249
  %cmp348 = icmp slt i32 %257, 100, !dbg !12250
  br i1 %cmp348, label %while.body, label %while.end, !dbg !12248

while.body:                                       ; preds = %while.cond
  %258 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12251
  %a350 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %258, i32 0, i32 10, !dbg !12253
  %259 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a350, align 8, !dbg !12253
  %read_csr351 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %259, i32 0, i32 0, !dbg !12254
  %260 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr351, align 8, !dbg !12254
  %261 = load i64, i64* %ioaddr, align 8, !dbg !12255
  %call352 = call zeroext i16 %260(i64 %261, i32 0) #12, !dbg !12251
  %conv353 = zext i16 %call352 to i32, !dbg !12251
  %and354 = and i32 %conv353, 256, !dbg !12256
  %tobool355 = icmp ne i32 %and354, 0, !dbg !12256
  br i1 %tobool355, label %if.then356, label %if.end357, !dbg !12257

if.then356:                                       ; preds = %while.body
  br label %while.end, !dbg !12258

if.end357:                                        ; preds = %while.body
  br label %while.cond, !dbg !12248, !llvm.loop !12259

while.end:                                        ; preds = %if.then356, %while.cond
  %262 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12261
  %a358 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %262, i32 0, i32 10, !dbg !12262
  %263 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a358, align 8, !dbg !12262
  %write_csr359 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %263, i32 0, i32 1, !dbg !12263
  %264 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr359, align 8, !dbg !12263
  %265 = load i64, i64* %ioaddr, align 8, !dbg !12264
  call void %264(i64 %265, i32 0, i16 zeroext 66) #12, !dbg !12261
  br label %do.body360, !dbg !12265

do.body360:                                       ; preds = %while.end
  %266 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12266
  %msg_enable361 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %266, i32 0, i32 33, !dbg !12266
  %267 = load i32, i32* %msg_enable361, align 8, !dbg !12266
  %and362 = and i32 %267, 32, !dbg !12266
  %tobool363 = icmp ne i32 %and362, 0, !dbg !12266
  br i1 %tobool363, label %if.then364, label %if.end371, !dbg !12269

if.then364:                                       ; preds = %do.body360
  %268 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12266
  %269 = load i32, i32* %i, align 4, !dbg !12266
  %270 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12266
  %init_dma_addr365 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %270, i32 0, i32 3, !dbg !12266
  %271 = load i64, i64* %init_dma_addr365, align 8, !dbg !12266
  %conv366 = trunc i64 %271 to i32, !dbg !12266
  %272 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12266
  %a367 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %272, i32 0, i32 10, !dbg !12266
  %273 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a367, align 8, !dbg !12266
  %read_csr368 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %273, i32 0, i32 0, !dbg !12266
  %274 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr368, align 8, !dbg !12266
  %275 = load i64, i64* %ioaddr, align 8, !dbg !12266
  %call369 = call zeroext i16 %274(i64 %275, i32 0) #12, !dbg !12266
  %conv370 = zext i16 %call369 to i32, !dbg !12266
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %268, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.67, i64 0, i64 0), i32 %269, i32 %conv366, i32 %conv370) #13, !dbg !12266
  br label %if.end371, !dbg !12266

if.end371:                                        ; preds = %if.then364, %do.body360
  br label %do.end372, !dbg !12269

do.end372:                                        ; preds = %if.end371
  %276 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12270
  %lock373 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %276, i32 0, i32 11, !dbg !12271
  %277 = load i64, i64* %flags, align 8, !dbg !12272
  store %struct.spinlock* %lock373, %struct.spinlock** %lock.addr.i381, align 8
  store i64 %277, i64* %flags.addr.i382, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12273
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12273
  store i32 1, i32* %tmp.i383, align 4, !dbg !12273
  %278 = load i32, i32* %tmp.i383, align 4, !dbg !12273
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12274
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12274
  store i32 1, i32* %tmp8.i384, align 4, !dbg !12274
  %279 = load i32, i32* %tmp8.i384, align 4, !dbg !12274
  %280 = load i64, i64* %flags.addr.i382, align 8, !dbg !12275
  call void @arch_local_irq_restore(i64 %280) #14, !dbg !12275
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12276, !srcloc !9478
  %281 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i381, align 8, !dbg !12277
  %282 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %281, i32 0, i32 0, !dbg !12277
  %rlock.i385 = bitcast %union.anon.46* %282 to %struct.raw_spinlock*, !dbg !12277
  store i32 0, i32* %retval, align 4, !dbg !12278
  br label %return, !dbg !12278

err_free_ring:                                    ; preds = %if.then325
  call void @llvm.dbg.label(metadata !12279), !dbg !12280
  %283 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12281
  call void @pcnet32_purge_rx_ring(%struct.net_device* %283) #12, !dbg !12282
  %284 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12283
  %a374 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %284, i32 0, i32 10, !dbg !12284
  %285 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a374, align 8, !dbg !12284
  %write_bcr375 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %285, i32 0, i32 3, !dbg !12285
  %286 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr375, align 8, !dbg !12285
  %287 = load i64, i64* %ioaddr, align 8, !dbg !12286
  call void %286(i64 %287, i32 20, i16 zeroext 4) #12, !dbg !12283
  br label %err_free_irq, !dbg !12283

err_free_irq:                                     ; preds = %err_free_ring, %if.then24
  call void @llvm.dbg.label(metadata !12287), !dbg !12288
  %288 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12289
  %lock376 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %288, i32 0, i32 11, !dbg !12290
  %289 = load i64, i64* %flags, align 8, !dbg !12291
  store %struct.spinlock* %lock376, %struct.spinlock** %lock.addr.i379, align 8
  store i64 %289, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12292
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12292
  store i32 1, i32* %tmp.i, align 4, !dbg !12292
  %290 = load i32, i32* %tmp.i, align 4, !dbg !12292
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12293
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12293
  store i32 1, i32* %tmp8.i, align 4, !dbg !12293
  %291 = load i32, i32* %tmp8.i, align 4, !dbg !12293
  %292 = load i64, i64* %flags.addr.i, align 8, !dbg !12294
  call void @arch_local_irq_restore(i64 %292) #14, !dbg !12294
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12295, !srcloc !9478
  %293 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i379, align 8, !dbg !12296
  %294 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %293, i32 0, i32 0, !dbg !12296
  %rlock.i380 = bitcast %union.anon.46* %294 to %struct.raw_spinlock*, !dbg !12296
  %295 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12297
  %irq377 = getelementptr inbounds %struct.net_device, %struct.net_device* %295, i32 0, i32 6, !dbg !12298
  %296 = load i32, i32* %irq377, align 8, !dbg !12298
  %297 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12299
  %298 = bitcast %struct.net_device* %297 to i8*, !dbg !12299
  %call378 = call i8* @free_irq(i32 %296, i8* %298) #12, !dbg !12300
  %299 = load i32, i32* %rc, align 4, !dbg !12301
  store i32 %299, i32* %retval, align 4, !dbg !12302
  br label %return, !dbg !12302

return:                                           ; preds = %err_free_irq, %do.end372, %if.then
  %300 = load i32, i32* %retval, align 4, !dbg !12303
  ret i32 %300, !dbg !12303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_close(%struct.net_device* %dev) #2 !dbg !12304 {
entry:
  %lock.addr.i68 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i68, metadata !8236, metadata !DIExpression()), !dbg !12305
  %lock.addr.i63 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i63, metadata !9351, metadata !DIExpression()), !dbg !12312
  %flags.addr.i64 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i64, metadata !9357, metadata !DIExpression()), !dbg !12314
  %tmp.i65 = alloca i32, align 4
  %tmp8.i66 = alloca i32, align 4
  %lock.addr.i61 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i61, metadata !9351, metadata !DIExpression()), !dbg !12315
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !12317
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !12318
  %dev.addr = alloca %struct.net_device*, align 8
  %ioaddr = alloca i64, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !12327, metadata !DIExpression()), !dbg !12328
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12329
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 5, !dbg !12330
  %1 = load i64, i64* %base_addr, align 8, !dbg !12330
  store i64 %1, i64* %ioaddr, align 8, !dbg !12328
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !12331, metadata !DIExpression()), !dbg !12332
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12333
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !12334
  %3 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !12334
  store %struct.pcnet32_private* %3, %struct.pcnet32_private** %lp, align 8, !dbg !12332
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12335, metadata !DIExpression()), !dbg !12336
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12337
  %watchdog_timer = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 32, !dbg !12337
  %call1 = call i32 @del_timer(%struct.timer_list* %watchdog_timer) #12, !dbg !12337
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12338
  call void @netif_stop_queue(%struct.net_device* %5) #12, !dbg !12339
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12340
  %napi = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 25, !dbg !12341
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !12342
  br label %do.body, !dbg !12343

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !12344

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12345, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12348, metadata !DIExpression()), !dbg !12347
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12347
  %conv = zext i1 %cmp to i32, !dbg !12347
  store i32 1, i32* %tmp, align 4, !dbg !12347
  %7 = load i32, i32* %tmp, align 4, !dbg !12347
  br label %do.body3, !dbg !12349

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12350

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !12351

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !12353, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !12357, metadata !DIExpression()), !dbg !12356
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !12356
  %conv9 = zext i1 %cmp8 to i32, !dbg !12356
  store i32 1, i32* %tmp10, align 4, !dbg !12356
  %8 = load i32, i32* %tmp10, align 4, !dbg !12356
  %call11 = call i64 @arch_local_irq_save() #12, !dbg !12358
  store i64 %call11, i64* %flags, align 8, !dbg !12358
  br label %do.end, !dbg !12358

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !12351

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !12350

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12359, !srcloc !12360
  br label %do.body14, !dbg !12359

do.body14:                                        ; preds = %do.body13
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12361
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 11, !dbg !12361
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12362
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !12363
  %rlock.i = bitcast %union.anon.46* %11 to %struct.raw_spinlock*, !dbg !12363
  br label %do.end16, !dbg !12361

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !12359

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12350

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12349

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !12344

do.end20:                                         ; preds = %do.end19
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12364
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 10, !dbg !12365
  %13 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !12365
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %13, i32 0, i32 0, !dbg !12366
  %14 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !12366
  %15 = load i64, i64* %ioaddr, align 8, !dbg !12367
  %call21 = call zeroext i16 %14(i64 %15, i32 112) #12, !dbg !12364
  %conv22 = zext i16 %call21 to i64, !dbg !12364
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12368
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 24, !dbg !12369
  %rx_missed_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 15, !dbg !12370
  store i64 %conv22, i64* %rx_missed_errors, align 8, !dbg !12371
  br label %do.body23, !dbg !12372

do.body23:                                        ; preds = %do.end20
  %17 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12373
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %17, i32 0, i32 33, !dbg !12373
  %18 = load i32, i32* %msg_enable, align 8, !dbg !12373
  %and = and i32 %18, 16, !dbg !12373
  %tobool = icmp ne i32 %and, 0, !dbg !12373
  br i1 %tobool, label %if.then, label %if.end, !dbg !12376

if.then:                                          ; preds = %do.body23
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12373
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12373
  %a24 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 10, !dbg !12373
  %21 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a24, align 8, !dbg !12373
  %read_csr25 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %21, i32 0, i32 0, !dbg !12373
  %22 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr25, align 8, !dbg !12373
  %23 = load i64, i64* %ioaddr, align 8, !dbg !12373
  %call26 = call zeroext i16 %22(i64 %23, i32 0) #12, !dbg !12373
  %conv27 = zext i16 %call26 to i32, !dbg !12373
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %19, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.72, i64 0, i64 0), i32 %conv27) #13, !dbg !12373
  br label %if.end, !dbg !12373

if.end:                                           ; preds = %if.then, %do.body23
  br label %do.end28, !dbg !12376

do.end28:                                         ; preds = %if.end
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12377
  %a29 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 10, !dbg !12378
  %25 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a29, align 8, !dbg !12378
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %25, i32 0, i32 1, !dbg !12379
  %26 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !12379
  %27 = load i64, i64* %ioaddr, align 8, !dbg !12380
  call void %26(i64 %27, i32 0, i16 zeroext 4) #12, !dbg !12377
  %28 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12381
  %a30 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %28, i32 0, i32 10, !dbg !12382
  %29 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a30, align 8, !dbg !12382
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %29, i32 0, i32 3, !dbg !12383
  %30 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !12383
  %31 = load i64, i64* %ioaddr, align 8, !dbg !12384
  call void %30(i64 %31, i32 20, i16 zeroext 4) #12, !dbg !12381
  %32 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12385
  %lock31 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %32, i32 0, i32 11, !dbg !12386
  %33 = load i64, i64* %flags, align 8, !dbg !12387
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i63, align 8
  store i64 %33, i64* %flags.addr.i64, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12388
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12388
  store i32 1, i32* %tmp.i65, align 4, !dbg !12388
  %34 = load i32, i32* %tmp.i65, align 4, !dbg !12388
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12389
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12389
  store i32 1, i32* %tmp8.i66, align 4, !dbg !12389
  %35 = load i32, i32* %tmp8.i66, align 4, !dbg !12389
  %36 = load i64, i64* %flags.addr.i64, align 8, !dbg !12390
  call void @arch_local_irq_restore(i64 %36) #14, !dbg !12390
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12391, !srcloc !9478
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i63, align 8, !dbg !12392
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !12392
  %rlock.i67 = bitcast %union.anon.46* %38 to %struct.raw_spinlock*, !dbg !12392
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12393
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %39, i32 0, i32 6, !dbg !12394
  %40 = load i32, i32* %irq, align 8, !dbg !12394
  %41 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12395
  %42 = bitcast %struct.net_device* %41 to i8*, !dbg !12395
  %call32 = call i8* @free_irq(i32 %40, i8* %42) #12, !dbg !12396
  br label %do.body33, !dbg !12397

do.body33:                                        ; preds = %do.end28
  br label %do.body34, !dbg !12398

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !12399, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !12402, metadata !DIExpression()), !dbg !12401
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !12401
  %conv38 = zext i1 %cmp37 to i32, !dbg !12401
  store i32 1, i32* %tmp39, align 4, !dbg !12401
  %43 = load i32, i32* %tmp39, align 4, !dbg !12401
  br label %do.body40, !dbg !12403

do.body40:                                        ; preds = %do.body34
  br label %do.body41, !dbg !12404

do.body41:                                        ; preds = %do.body40
  br label %do.body42, !dbg !12405

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !12407, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !12411, metadata !DIExpression()), !dbg !12410
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !12410
  %conv46 = zext i1 %cmp45 to i32, !dbg !12410
  store i32 1, i32* %tmp47, align 4, !dbg !12410
  %44 = load i32, i32* %tmp47, align 4, !dbg !12410
  %call48 = call i64 @arch_local_irq_save() #12, !dbg !12412
  store i64 %call48, i64* %flags, align 8, !dbg !12412
  br label %do.end49, !dbg !12412

do.end49:                                         ; preds = %do.body42
  br label %do.end50, !dbg !12405

do.end50:                                         ; preds = %do.end49
  br label %do.body51, !dbg !12404

do.body51:                                        ; preds = %do.end50
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12413, !srcloc !12414
  br label %do.body52, !dbg !12413

do.body52:                                        ; preds = %do.body51
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12415
  %lock53 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 11, !dbg !12415
  store %struct.spinlock* %lock53, %struct.spinlock** %lock.addr.i68, align 8
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i68, align 8, !dbg !12416
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !12417
  %rlock.i69 = bitcast %union.anon.46* %47 to %struct.raw_spinlock*, !dbg !12417
  br label %do.end55, !dbg !12415

do.end55:                                         ; preds = %do.body52
  br label %do.end56, !dbg !12413

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !12404

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !12403

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !12398

do.end59:                                         ; preds = %do.end58
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12418
  call void @pcnet32_purge_rx_ring(%struct.net_device* %48) #12, !dbg !12419
  %49 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12420
  call void @pcnet32_purge_tx_ring(%struct.net_device* %49) #12, !dbg !12421
  %50 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12422
  %lock60 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %50, i32 0, i32 11, !dbg !12423
  %51 = load i64, i64* %flags, align 8, !dbg !12424
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i61, align 8
  store i64 %51, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12425
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12425
  store i32 1, i32* %tmp.i, align 4, !dbg !12425
  %52 = load i32, i32* %tmp.i, align 4, !dbg !12425
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12426
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12426
  store i32 1, i32* %tmp8.i, align 4, !dbg !12426
  %53 = load i32, i32* %tmp8.i, align 4, !dbg !12426
  %54 = load i64, i64* %flags.addr.i, align 8, !dbg !12427
  call void @arch_local_irq_restore(i64 %54) #14, !dbg !12427
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12428, !srcloc !9478
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i61, align 8, !dbg !12429
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !12429
  %rlock.i62 = bitcast %union.anon.46* %56 to %struct.raw_spinlock*, !dbg !12429
  ret i32 0, !dbg !12430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_start_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !12431 {
entry:
  %lock.addr.i76 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i76, metadata !9351, metadata !DIExpression()), !dbg !12432
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !12434
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !12435
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %status = alloca i16, align 2
  %entry1 = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12442, metadata !DIExpression()), !dbg !12443
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12444, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !12446, metadata !DIExpression()), !dbg !12447
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12448
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !12449
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !12449
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !12447
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !12450, metadata !DIExpression()), !dbg !12451
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12452
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !12453
  %3 = load i64, i64* %base_addr, align 8, !dbg !12453
  store i64 %3, i64* %ioaddr, align 8, !dbg !12451
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12454, metadata !DIExpression()), !dbg !12455
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !12456, metadata !DIExpression()), !dbg !12457
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12458, metadata !DIExpression()), !dbg !12459
  br label %do.body, !dbg !12460

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !12461

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12462, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12465, metadata !DIExpression()), !dbg !12464
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12464
  %conv = zext i1 %cmp to i32, !dbg !12464
  store i32 1, i32* %tmp, align 4, !dbg !12464
  %4 = load i32, i32* %tmp, align 4, !dbg !12464
  br label %do.body3, !dbg !12466

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12467

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !12468

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !12470, metadata !DIExpression()), !dbg !12473
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !12474, metadata !DIExpression()), !dbg !12473
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !12473
  %conv9 = zext i1 %cmp8 to i32, !dbg !12473
  store i32 1, i32* %tmp10, align 4, !dbg !12473
  %5 = load i32, i32* %tmp10, align 4, !dbg !12473
  %call11 = call i64 @arch_local_irq_save() #12, !dbg !12475
  store i64 %call11, i64* %flags, align 8, !dbg !12475
  br label %do.end, !dbg !12475

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !12468

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !12467

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12476, !srcloc !12477
  br label %do.body14, !dbg !12476

do.body14:                                        ; preds = %do.body13
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12478
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 11, !dbg !12478
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12479
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !12480
  %rlock.i = bitcast %union.anon.46* %8 to %struct.raw_spinlock*, !dbg !12480
  br label %do.end16, !dbg !12478

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !12476

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12467

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12466

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !12461

do.end20:                                         ; preds = %do.end19
  br label %do.body21, !dbg !12481

do.body21:                                        ; preds = %do.end20
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12482
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 33, !dbg !12482
  %10 = load i32, i32* %msg_enable, align 8, !dbg !12482
  %and = and i32 %10, 256, !dbg !12482
  %tobool = icmp ne i32 %and, 0, !dbg !12482
  br i1 %tobool, label %if.then, label %if.end, !dbg !12485

if.then:                                          ; preds = %do.body21
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12482
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12482
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 10, !dbg !12482
  %13 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !12482
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %13, i32 0, i32 0, !dbg !12482
  %14 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !12482
  %15 = load i64, i64* %ioaddr, align 8, !dbg !12482
  %call22 = call zeroext i16 %14(i64 %15, i32 0) #12, !dbg !12482
  %conv23 = zext i16 %call22 to i32, !dbg !12482
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pcnet32_start_xmit, i64 0, i64 0), i32 %conv23) #13, !dbg !12482
  br label %if.end, !dbg !12482

if.end:                                           ; preds = %if.then, %do.body21
  br label %do.end24, !dbg !12485

do.end24:                                         ; preds = %if.end
  store i16 -32000, i16* %status, align 2, !dbg !12486
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12487
  %cur_tx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 13, !dbg !12488
  %17 = load i32, i32* %cur_tx, align 4, !dbg !12488
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12489
  %tx_mod_mask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 17, !dbg !12490
  %19 = load i32, i32* %tx_mod_mask, align 4, !dbg !12490
  %and25 = and i32 %17, %19, !dbg !12491
  store i32 %and25, i32* %entry1, align 4, !dbg !12492
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12493
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %20, i32 0, i32 5, !dbg !12493
  %21 = load i32, i32* %len, align 8, !dbg !12493
  %sub = sub i32 0, %21, !dbg !12493
  %conv26 = trunc i32 %sub to i16, !dbg !12493
  %22 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12494
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %22, i32 0, i32 2, !dbg !12495
  %23 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !12495
  %24 = load i32, i32* %entry1, align 4, !dbg !12496
  %idxprom = sext i32 %24 to i64, !dbg !12494
  %arrayidx = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %23, i64 %idxprom, !dbg !12494
  %length = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx, i32 0, i32 1, !dbg !12497
  store i16 %conv26, i16* %length, align 4, !dbg !12498
  %25 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12499
  %tx_ring27 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %25, i32 0, i32 2, !dbg !12500
  %26 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring27, align 8, !dbg !12500
  %27 = load i32, i32* %entry1, align 4, !dbg !12501
  %idxprom28 = sext i32 %27 to i64, !dbg !12499
  %arrayidx29 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %26, i64 %idxprom28, !dbg !12499
  %misc = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx29, i32 0, i32 3, !dbg !12502
  store i32 0, i32* %misc, align 4, !dbg !12503
  %28 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12504
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %28, i32 0, i32 4, !dbg !12504
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !12504
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !12504
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12504
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %30, i32 0, i32 37, !dbg !12504
  %31 = load i8*, i8** %data, align 8, !dbg !12504
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12504
  %len31 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %32, i32 0, i32 5, !dbg !12504
  %33 = load i32, i32* %len31, align 8, !dbg !12504
  %conv32 = zext i32 %33 to i64, !dbg !12504
  %call33 = call i64 @dma_map_single_attrs(%struct.device* %dev30, i8* %31, i64 %conv32, i32 1, i64 0) #12, !dbg !12504
  %34 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12505
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %34, i32 0, i32 8, !dbg !12506
  %35 = load i64*, i64** %tx_dma_addr, align 8, !dbg !12506
  %36 = load i32, i32* %entry1, align 4, !dbg !12507
  %idxprom34 = sext i32 %36 to i64, !dbg !12505
  %arrayidx35 = getelementptr i64, i64* %35, i64 %idxprom34, !dbg !12505
  store i64 %call33, i64* %arrayidx35, align 8, !dbg !12508
  %37 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12509
  %pci_dev36 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %37, i32 0, i32 4, !dbg !12511
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev36, align 8, !dbg !12511
  %dev37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !12512
  %39 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12513
  %tx_dma_addr38 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %39, i32 0, i32 8, !dbg !12514
  %40 = load i64*, i64** %tx_dma_addr38, align 8, !dbg !12514
  %41 = load i32, i32* %entry1, align 4, !dbg !12515
  %idxprom39 = sext i32 %41 to i64, !dbg !12513
  %arrayidx40 = getelementptr i64, i64* %40, i64 %idxprom39, !dbg !12513
  %42 = load i64, i64* %arrayidx40, align 8, !dbg !12513
  %call41 = call i32 @dma_mapping_error(%struct.device* %dev37, i64 %42) #12, !dbg !12516
  %tobool42 = icmp ne i32 %call41, 0, !dbg !12516
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !12517

if.then43:                                        ; preds = %do.end24
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12518
  call void @dev_kfree_skb_any(%struct.sk_buff* %43) #12, !dbg !12520
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12521
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %44, i32 0, i32 24, !dbg !12522
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 7, !dbg !12523
  %45 = load i64, i64* %tx_dropped, align 8, !dbg !12524
  %inc = add i64 %45, 1, !dbg !12524
  store i64 %inc, i64* %tx_dropped, align 8, !dbg !12524
  br label %drop_packet, !dbg !12525

if.end44:                                         ; preds = %do.end24
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12526
  %47 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12527
  %tx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %47, i32 0, i32 6, !dbg !12528
  %48 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff, align 8, !dbg !12528
  %49 = load i32, i32* %entry1, align 4, !dbg !12529
  %idxprom45 = sext i32 %49 to i64, !dbg !12527
  %arrayidx46 = getelementptr %struct.sk_buff*, %struct.sk_buff** %48, i64 %idxprom45, !dbg !12527
  store %struct.sk_buff* %46, %struct.sk_buff** %arrayidx46, align 8, !dbg !12530
  %50 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12531
  %tx_dma_addr47 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %50, i32 0, i32 8, !dbg !12531
  %51 = load i64*, i64** %tx_dma_addr47, align 8, !dbg !12531
  %52 = load i32, i32* %entry1, align 4, !dbg !12531
  %idxprom48 = sext i32 %52 to i64, !dbg !12531
  %arrayidx49 = getelementptr i64, i64* %51, i64 %idxprom48, !dbg !12531
  %53 = load i64, i64* %arrayidx49, align 8, !dbg !12531
  %conv50 = trunc i64 %53 to i32, !dbg !12531
  %54 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12532
  %tx_ring51 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %54, i32 0, i32 2, !dbg !12533
  %55 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring51, align 8, !dbg !12533
  %56 = load i32, i32* %entry1, align 4, !dbg !12534
  %idxprom52 = sext i32 %56 to i64, !dbg !12532
  %arrayidx53 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %55, i64 %idxprom52, !dbg !12532
  %base = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx53, i32 0, i32 0, !dbg !12535
  store i32 %conv50, i32* %base, align 4, !dbg !12536
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12537, !srcloc !12538
  %57 = load i16, i16* %status, align 2, !dbg !12539
  %58 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12540
  %tx_ring54 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %58, i32 0, i32 2, !dbg !12541
  %59 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring54, align 8, !dbg !12541
  %60 = load i32, i32* %entry1, align 4, !dbg !12542
  %idxprom55 = sext i32 %60 to i64, !dbg !12540
  %arrayidx56 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %59, i64 %idxprom55, !dbg !12540
  %status57 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx56, i32 0, i32 2, !dbg !12543
  store i16 %57, i16* %status57, align 2, !dbg !12544
  %61 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12545
  %cur_tx58 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %61, i32 0, i32 13, !dbg !12546
  %62 = load i32, i32* %cur_tx58, align 4, !dbg !12547
  %inc59 = add i32 %62, 1, !dbg !12547
  store i32 %inc59, i32* %cur_tx58, align 4, !dbg !12547
  %63 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12548
  %len60 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %63, i32 0, i32 5, !dbg !12549
  %64 = load i32, i32* %len60, align 8, !dbg !12549
  %conv61 = zext i32 %64 to i64, !dbg !12548
  %65 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12550
  %stats62 = getelementptr inbounds %struct.net_device, %struct.net_device* %65, i32 0, i32 24, !dbg !12551
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats62, i32 0, i32 3, !dbg !12552
  %66 = load i64, i64* %tx_bytes, align 8, !dbg !12553
  %add = add i64 %66, %conv61, !dbg !12553
  store i64 %add, i64* %tx_bytes, align 8, !dbg !12553
  %67 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12554
  %a63 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %67, i32 0, i32 10, !dbg !12555
  %68 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a63, align 8, !dbg !12555
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %68, i32 0, i32 1, !dbg !12556
  %69 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !12556
  %70 = load i64, i64* %ioaddr, align 8, !dbg !12557
  call void %69(i64 %70, i32 0, i16 zeroext 72) #12, !dbg !12554
  %71 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12558
  %tx_ring64 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %71, i32 0, i32 2, !dbg !12560
  %72 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring64, align 8, !dbg !12560
  %73 = load i32, i32* %entry1, align 4, !dbg !12561
  %add65 = add i32 %73, 1, !dbg !12562
  %74 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12563
  %tx_mod_mask66 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %74, i32 0, i32 17, !dbg !12564
  %75 = load i32, i32* %tx_mod_mask66, align 4, !dbg !12564
  %and67 = and i32 %add65, %75, !dbg !12565
  %idxprom68 = zext i32 %and67 to i64, !dbg !12558
  %arrayidx69 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %72, i64 %idxprom68, !dbg !12558
  %base70 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx69, i32 0, i32 0, !dbg !12566
  %76 = load i32, i32* %base70, align 4, !dbg !12566
  %cmp71 = icmp ne i32 %76, 0, !dbg !12567
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !12568

if.then73:                                        ; preds = %if.end44
  %77 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12569
  %tx_full = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %77, i32 0, i32 26, !dbg !12571
  store i8 1, i8* %tx_full, align 8, !dbg !12572
  %78 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12573
  call void @netif_stop_queue(%struct.net_device* %78) #12, !dbg !12574
  br label %if.end74, !dbg !12575

if.end74:                                         ; preds = %if.then73, %if.end44
  br label %drop_packet, !dbg !12576

drop_packet:                                      ; preds = %if.end74, %if.then43
  call void @llvm.dbg.label(metadata !12577), !dbg !12578
  %79 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12579
  %lock75 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %79, i32 0, i32 11, !dbg !12580
  %80 = load i64, i64* %flags, align 8, !dbg !12581
  store %struct.spinlock* %lock75, %struct.spinlock** %lock.addr.i76, align 8
  store i64 %80, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12582
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12582
  store i32 1, i32* %tmp.i, align 4, !dbg !12582
  %81 = load i32, i32* %tmp.i, align 4, !dbg !12582
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12583
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12583
  store i32 1, i32* %tmp8.i, align 4, !dbg !12583
  %82 = load i32, i32* %tmp8.i, align 4, !dbg !12583
  %83 = load i64, i64* %flags.addr.i, align 8, !dbg !12584
  call void @arch_local_irq_restore(i64 %83) #14, !dbg !12584
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12585, !srcloc !9478
  %84 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i76, align 8, !dbg !12586
  %85 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %84, i32 0, i32 0, !dbg !12586
  %rlock.i77 = bitcast %union.anon.46* %85 to %struct.raw_spinlock*, !dbg !12586
  ret i32 0, !dbg !12587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_set_multicast_list(%struct.net_device* %dev) #2 !dbg !12588 {
entry:
  %lock.addr.i52 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i52, metadata !9351, metadata !DIExpression()), !dbg !12589
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !12591
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !12592
  %dev.addr = alloca %struct.net_device*, align 8
  %ioaddr = alloca i64, align 8
  %flags = alloca i64, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %csr15 = alloca i32, align 4
  %suspended = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12599, metadata !DIExpression()), !dbg !12600
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !12601, metadata !DIExpression()), !dbg !12602
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12603
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 5, !dbg !12604
  %1 = load i64, i64* %base_addr, align 8, !dbg !12604
  store i64 %1, i64* %ioaddr, align 8, !dbg !12602
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12605, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !12607, metadata !DIExpression()), !dbg !12608
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12609
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !12610
  %3 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !12610
  store %struct.pcnet32_private* %3, %struct.pcnet32_private** %lp, align 8, !dbg !12608
  call void @llvm.dbg.declare(metadata i32* %csr15, metadata !12611, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.declare(metadata i32* %suspended, metadata !12613, metadata !DIExpression()), !dbg !12614
  br label %do.body, !dbg !12615

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12616

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12617, metadata !DIExpression()), !dbg !12619
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12620, metadata !DIExpression()), !dbg !12619
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12619
  %conv = zext i1 %cmp to i32, !dbg !12619
  store i32 1, i32* %tmp, align 4, !dbg !12619
  %4 = load i32, i32* %tmp, align 4, !dbg !12619
  br label %do.body2, !dbg !12621

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12622

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12623

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12625, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12629, metadata !DIExpression()), !dbg !12628
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12628
  %conv8 = zext i1 %cmp7 to i32, !dbg !12628
  store i32 1, i32* %tmp9, align 4, !dbg !12628
  %5 = load i32, i32* %tmp9, align 4, !dbg !12628
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !12630
  store i64 %call10, i64* %flags, align 8, !dbg !12630
  br label %do.end, !dbg !12630

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !12623

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !12622

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12631, !srcloc !12632
  br label %do.body13, !dbg !12631

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12633
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 11, !dbg !12633
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12634
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !12635
  %rlock.i = bitcast %union.anon.46* %8 to %struct.raw_spinlock*, !dbg !12635
  br label %do.end15, !dbg !12633

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !12631

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12622

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12621

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12616

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12636
  %call20 = call i32 @pcnet32_suspend(%struct.net_device* %9, i64* %flags, i32 0) #12, !dbg !12637
  store i32 %call20, i32* %suspended, align 4, !dbg !12638
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12639
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 10, !dbg !12640
  %11 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !12640
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %11, i32 0, i32 0, !dbg !12641
  %12 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !12641
  %13 = load i64, i64* %ioaddr, align 8, !dbg !12642
  %call21 = call zeroext i16 %12(i64 %13, i32 15) #12, !dbg !12639
  %conv22 = zext i16 %call21 to i32, !dbg !12639
  store i32 %conv22, i32* %csr15, align 4, !dbg !12643
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12644
  %flags23 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 36, !dbg !12646
  %15 = load i32, i32* %flags23, align 8, !dbg !12646
  %and = and i32 %15, 256, !dbg !12647
  %tobool = icmp ne i32 %and, 0, !dbg !12647
  br i1 %tobool, label %if.then, label %if.else, !dbg !12648

if.then:                                          ; preds = %do.end19
  br label %do.body24, !dbg !12649

do.body24:                                        ; preds = %if.then
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12651
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 33, !dbg !12651
  %17 = load i32, i32* %msg_enable, align 8, !dbg !12651
  %and25 = and i32 %17, 8192, !dbg !12651
  %tobool26 = icmp ne i32 %and25, 0, !dbg !12651
  br i1 %tobool26, label %if.then27, label %if.end, !dbg !12654

if.then27:                                        ; preds = %do.body24
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12651
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %18, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.74, i64 0, i64 0)) #13, !dbg !12651
  br label %if.end, !dbg !12651

if.end:                                           ; preds = %if.then27, %do.body24
  br label %do.end28, !dbg !12654

do.end28:                                         ; preds = %if.end
  %19 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12655
  %options = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %19, i32 0, i32 28, !dbg !12655
  %20 = load i32, i32* %options, align 4, !dbg !12655
  %and29 = and i32 %20, 3, !dbg !12655
  %shl = shl i32 %and29, 7, !dbg !12655
  %or = or i32 32768, %shl, !dbg !12655
  %conv30 = trunc i32 %or to i16, !dbg !12655
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12656
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 0, !dbg !12657
  %22 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block, align 8, !dbg !12657
  %mode = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %22, i32 0, i32 0, !dbg !12658
  store i16 %conv30, i16* %mode, align 4, !dbg !12659
  %23 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12660
  %a31 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %23, i32 0, i32 10, !dbg !12661
  %24 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a31, align 8, !dbg !12661
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %24, i32 0, i32 1, !dbg !12662
  %25 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !12662
  %26 = load i64, i64* %ioaddr, align 8, !dbg !12663
  %27 = load i32, i32* %csr15, align 4, !dbg !12664
  %or32 = or i32 %27, 32768, !dbg !12665
  %conv33 = trunc i32 %or32 to i16, !dbg !12664
  call void %25(i64 %26, i32 15, i16 zeroext %conv33) #12, !dbg !12660
  br label %if.end44, !dbg !12666

if.else:                                          ; preds = %do.end19
  %28 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12667
  %options34 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %28, i32 0, i32 28, !dbg !12667
  %29 = load i32, i32* %options34, align 4, !dbg !12667
  %and35 = and i32 %29, 3, !dbg !12667
  %shl36 = shl i32 %and35, 7, !dbg !12667
  %conv37 = trunc i32 %shl36 to i16, !dbg !12667
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12669
  %init_block38 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 0, !dbg !12670
  %31 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block38, align 8, !dbg !12670
  %mode39 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %31, i32 0, i32 0, !dbg !12671
  store i16 %conv37, i16* %mode39, align 4, !dbg !12672
  %32 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12673
  %a40 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %32, i32 0, i32 10, !dbg !12674
  %33 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a40, align 8, !dbg !12674
  %write_csr41 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %33, i32 0, i32 1, !dbg !12675
  %34 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr41, align 8, !dbg !12675
  %35 = load i64, i64* %ioaddr, align 8, !dbg !12676
  %36 = load i32, i32* %csr15, align 4, !dbg !12677
  %and42 = and i32 %36, 32767, !dbg !12678
  %conv43 = trunc i32 %and42 to i16, !dbg !12677
  call void %34(i64 %35, i32 15, i16 zeroext %conv43) #12, !dbg !12673
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12679
  call void @pcnet32_load_multicast(%struct.net_device* %37) #12, !dbg !12680
  br label %if.end44

if.end44:                                         ; preds = %if.else, %do.end28
  %38 = load i32, i32* %suspended, align 4, !dbg !12681
  %tobool45 = icmp ne i32 %38, 0, !dbg !12681
  br i1 %tobool45, label %if.then46, label %if.else47, !dbg !12683

if.then46:                                        ; preds = %if.end44
  %39 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12684
  %40 = load i64, i64* %ioaddr, align 8, !dbg !12686
  call void @pcnet32_clr_suspend(%struct.pcnet32_private* %39, i64 %40) #12, !dbg !12687
  br label %if.end50, !dbg !12688

if.else47:                                        ; preds = %if.end44
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12689
  %a48 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 10, !dbg !12691
  %42 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a48, align 8, !dbg !12691
  %write_csr49 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %42, i32 0, i32 1, !dbg !12692
  %43 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr49, align 8, !dbg !12692
  %44 = load i64, i64* %ioaddr, align 8, !dbg !12693
  call void %43(i64 %44, i32 0, i16 zeroext 4) #12, !dbg !12689
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12694
  call void @pcnet32_restart(%struct.net_device* %45, i32 66) #12, !dbg !12695
  %46 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12696
  call void @netif_wake_queue(%struct.net_device* %46) #12, !dbg !12697
  br label %if.end50

if.end50:                                         ; preds = %if.else47, %if.then46
  %47 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12698
  %lock51 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %47, i32 0, i32 11, !dbg !12699
  %48 = load i64, i64* %flags, align 8, !dbg !12700
  store %struct.spinlock* %lock51, %struct.spinlock** %lock.addr.i52, align 8
  store i64 %48, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12701
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12701
  store i32 1, i32* %tmp.i, align 4, !dbg !12701
  %49 = load i32, i32* %tmp.i, align 4, !dbg !12701
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12702
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12702
  store i32 1, i32* %tmp8.i, align 4, !dbg !12702
  %50 = load i32, i32* %tmp8.i, align 4, !dbg !12702
  %51 = load i64, i64* %flags.addr.i, align 8, !dbg !12703
  call void @arch_local_irq_restore(i64 %51) #14, !dbg !12703
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12704, !srcloc !9478
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i52, align 8, !dbg !12705
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !12705
  %rlock.i53 = bitcast %union.anon.46* %53 to %struct.raw_spinlock*, !dbg !12705
  ret void, !dbg !12706
}

; Function Attrs: noredzone
declare dso_local i32 @eth_mac_addr(%struct.net_device*, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_ioctl(%struct.net_device* %dev, %struct.ifreq* %rq, i32 %cmd) #2 !dbg !12707 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !9351, metadata !DIExpression()), !dbg !12708
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !12712
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !12713
  %dev.addr = alloca %struct.net_device*, align 8
  %rq.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %rc = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !12722, metadata !DIExpression()), !dbg !12723
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !12724, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !12726, metadata !DIExpression()), !dbg !12727
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12728
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !12729
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !12729
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !12727
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12730, metadata !DIExpression()), !dbg !12731
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12732, metadata !DIExpression()), !dbg !12733
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12734
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 29, !dbg !12735
  %bf.load = load i8, i8* %mii, align 8, !dbg !12735
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !12735
  %bf.clear = and i8 %bf.lshr, 1, !dbg !12735
  %bf.cast = zext i8 %bf.clear to i32, !dbg !12735
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12734
  br i1 %tobool, label %if.then, label %if.else, !dbg !12736

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12737

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !12738

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12739, metadata !DIExpression()), !dbg !12741
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12742, metadata !DIExpression()), !dbg !12741
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12741
  %conv = zext i1 %cmp to i32, !dbg !12741
  store i32 1, i32* %tmp, align 4, !dbg !12741
  %3 = load i32, i32* %tmp, align 4, !dbg !12741
  br label %do.body2, !dbg !12743

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12744

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12745

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12747, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12751, metadata !DIExpression()), !dbg !12750
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12750
  %conv8 = zext i1 %cmp7 to i32, !dbg !12750
  store i32 1, i32* %tmp9, align 4, !dbg !12750
  %4 = load i32, i32* %tmp9, align 4, !dbg !12750
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !12752
  store i64 %call10, i64* %flags, align 8, !dbg !12752
  br label %do.end, !dbg !12752

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !12745

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !12744

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12753, !srcloc !12754
  br label %do.body13, !dbg !12753

do.body13:                                        ; preds = %do.body12
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12755
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 11, !dbg !12755
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12756
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !12757
  %rlock.i = bitcast %union.anon.46* %7 to %struct.raw_spinlock*, !dbg !12757
  br label %do.end15, !dbg !12755

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !12753

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12744

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12743

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12738

do.end19:                                         ; preds = %do.end18
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12758
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 31, !dbg !12759
  %9 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !12760
  %call20 = call %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %9) #12, !dbg !12761
  %10 = load i32, i32* %cmd.addr, align 4, !dbg !12762
  %call21 = call i32 @generic_mii_ioctl(%struct.mii_if_info* %mii_if, %struct.mii_ioctl_data* %call20, i32 %10, i32* null) #12, !dbg !12763
  store i32 %call21, i32* %rc, align 4, !dbg !12764
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12765
  %lock22 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 11, !dbg !12766
  %12 = load i64, i64* %flags, align 8, !dbg !12767
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12768
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12768
  store i32 1, i32* %tmp.i, align 4, !dbg !12768
  %13 = load i32, i32* %tmp.i, align 4, !dbg !12768
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12769
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12769
  store i32 1, i32* %tmp8.i, align 4, !dbg !12769
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !12769
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !12770
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !12770
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12771, !srcloc !9478
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !12772
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !12772
  %rlock.i24 = bitcast %union.anon.46* %17 to %struct.raw_spinlock*, !dbg !12772
  br label %if.end, !dbg !12773

if.else:                                          ; preds = %entry
  store i32 -95, i32* %rc, align 4, !dbg !12774
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end19
  %18 = load i32, i32* %rc, align 4, !dbg !12776
  ret i32 %18, !dbg !12777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #2 !dbg !12778 {
entry:
  %lock.addr.i80 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i80, metadata !9351, metadata !DIExpression()), !dbg !12779
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !12781
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !12782
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12789, metadata !DIExpression()), !dbg !12790
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !12791, metadata !DIExpression()), !dbg !12792
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !12793, metadata !DIExpression()), !dbg !12794
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12795
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !12796
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !12796
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !12794
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !12797, metadata !DIExpression()), !dbg !12798
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12799
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !12800
  %3 = load i64, i64* %base_addr, align 8, !dbg !12800
  store i64 %3, i64* %ioaddr, align 8, !dbg !12798
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12801, metadata !DIExpression()), !dbg !12802
  br label %do.body, !dbg !12803

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12804

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12805, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12808, metadata !DIExpression()), !dbg !12807
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12807
  %conv = zext i1 %cmp to i32, !dbg !12807
  store i32 1, i32* %tmp, align 4, !dbg !12807
  %4 = load i32, i32* %tmp, align 4, !dbg !12807
  br label %do.body2, !dbg !12809

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12810

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12811

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12813, metadata !DIExpression()), !dbg !12816
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12817, metadata !DIExpression()), !dbg !12816
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12816
  %conv8 = zext i1 %cmp7 to i32, !dbg !12816
  store i32 1, i32* %tmp9, align 4, !dbg !12816
  %5 = load i32, i32* %tmp9, align 4, !dbg !12816
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !12818
  store i64 %call10, i64* %flags, align 8, !dbg !12818
  br label %do.end, !dbg !12818

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !12811

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !12810

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12819, !srcloc !12820
  br label %do.body13, !dbg !12819

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12821
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 11, !dbg !12821
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12822
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !12823
  %rlock.i = bitcast %union.anon.46* %8 to %struct.raw_spinlock*, !dbg !12823
  br label %do.end15, !dbg !12821

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !12819

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12810

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12809

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12804

do.end19:                                         ; preds = %do.end18
  %9 = load i32, i32* @pcnet32_debug, align 4, !dbg !12824
  %and = and i32 %9, 1, !dbg !12826
  %tobool = icmp ne i32 %and, 0, !dbg !12826
  br i1 %tobool, label %if.then, label %if.end, !dbg !12827

if.then:                                          ; preds = %do.end19
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12828
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 0, !dbg !12828
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12828
  %11 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12828
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %11, i32 0, i32 10, !dbg !12828
  %12 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !12828
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %12, i32 0, i32 0, !dbg !12828
  %13 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !12828
  %14 = load i64, i64* %ioaddr, align 8, !dbg !12828
  %call20 = call zeroext i16 %13(i64 %14, i32 0) #12, !dbg !12828
  %conv21 = zext i16 %call20 to i32, !dbg !12828
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.76, i64 0, i64 0), i8* %arraydecay, i32 %conv21) #13, !dbg !12828
  br label %if.end, !dbg !12828

if.end:                                           ; preds = %if.then, %do.end19
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12829
  %a23 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %15, i32 0, i32 10, !dbg !12830
  %16 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a23, align 8, !dbg !12830
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %16, i32 0, i32 1, !dbg !12831
  %17 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !12831
  %18 = load i64, i64* %ioaddr, align 8, !dbg !12832
  call void %17(i64 %18, i32 0, i16 zeroext 4) #12, !dbg !12829
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12833
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 24, !dbg !12834
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 5, !dbg !12835
  %20 = load i64, i64* %tx_errors, align 8, !dbg !12836
  %inc = add i64 %20, 1, !dbg !12836
  store i64 %inc, i64* %tx_errors, align 8, !dbg !12836
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12837
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 33, !dbg !12837
  %22 = load i32, i32* %msg_enable, align 8, !dbg !12837
  %and24 = and i32 %22, 128, !dbg !12837
  %tobool25 = icmp ne i32 %and24, 0, !dbg !12837
  br i1 %tobool25, label %if.then26, label %if.end78, !dbg !12839

if.then26:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12840, metadata !DIExpression()), !dbg !12842
  %23 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12843
  %dirty_tx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %23, i32 0, i32 23, !dbg !12844
  %24 = load i32, i32* %dirty_tx, align 4, !dbg !12844
  %25 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12845
  %cur_tx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %25, i32 0, i32 13, !dbg !12846
  %26 = load i32, i32* %cur_tx, align 4, !dbg !12846
  %27 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12847
  %tx_full = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %27, i32 0, i32 26, !dbg !12848
  %28 = load i8, i8* %tx_full, align 8, !dbg !12848
  %conv27 = sext i8 %28 to i32, !dbg !12847
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !12847
  %29 = zext i1 %tobool28 to i64, !dbg !12847
  %cond = select i1 %tobool28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.79, i64 0, i64 0), !dbg !12847
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12849
  %cur_rx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 12, !dbg !12850
  %31 = load i32, i32* %cur_rx, align 8, !dbg !12850
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.77, i64 0, i64 0), i32 %24, i32 %26, i8* %cond, i32 %31) #13, !dbg !12851
  store i32 0, i32* %i, align 4, !dbg !12852
  br label %for.cond, !dbg !12854

for.cond:                                         ; preds = %for.inc, %if.then26
  %32 = load i32, i32* %i, align 4, !dbg !12855
  %33 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12857
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %33, i32 0, i32 14, !dbg !12858
  %34 = load i32, i32* %rx_ring_size, align 8, !dbg !12858
  %cmp30 = icmp ult i32 %32, %34, !dbg !12859
  br i1 %cmp30, label %for.body, label %for.end, !dbg !12860

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %i, align 4, !dbg !12861
  %and32 = and i32 %35, 1, !dbg !12862
  %tobool33 = icmp ne i32 %and32, 0, !dbg !12861
  %36 = zext i1 %tobool33 to i64, !dbg !12861
  %cond34 = select i1 %tobool33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i64 0, i64 0), !dbg !12861
  %37 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12863
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %37, i32 0, i32 1, !dbg !12863
  %38 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !12863
  %39 = load i32, i32* %i, align 4, !dbg !12863
  %idxprom = sext i32 %39 to i64, !dbg !12863
  %arrayidx = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %38, i64 %idxprom, !dbg !12863
  %base = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx, i32 0, i32 0, !dbg !12863
  %40 = load i32, i32* %base, align 4, !dbg !12863
  %41 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12864
  %rx_ring35 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %41, i32 0, i32 1, !dbg !12864
  %42 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring35, align 8, !dbg !12864
  %43 = load i32, i32* %i, align 4, !dbg !12864
  %idxprom36 = sext i32 %43 to i64, !dbg !12864
  %arrayidx37 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %42, i64 %idxprom36, !dbg !12864
  %buf_length = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx37, i32 0, i32 1, !dbg !12864
  %44 = load i16, i16* %buf_length, align 4, !dbg !12864
  %conv38 = zext i16 %44 to i32, !dbg !12864
  %sub = sub i32 0, %conv38, !dbg !12865
  %and39 = and i32 %sub, 65535, !dbg !12866
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12867
  %rx_ring40 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 1, !dbg !12867
  %46 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring40, align 8, !dbg !12867
  %47 = load i32, i32* %i, align 4, !dbg !12867
  %idxprom41 = sext i32 %47 to i64, !dbg !12867
  %arrayidx42 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %46, i64 %idxprom41, !dbg !12867
  %msg_length = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx42, i32 0, i32 3, !dbg !12867
  %48 = load i32, i32* %msg_length, align 4, !dbg !12867
  %49 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12868
  %rx_ring43 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %49, i32 0, i32 1, !dbg !12868
  %50 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring43, align 8, !dbg !12868
  %51 = load i32, i32* %i, align 4, !dbg !12868
  %idxprom44 = sext i32 %51 to i64, !dbg !12868
  %arrayidx45 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %50, i64 %idxprom44, !dbg !12868
  %status = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx45, i32 0, i32 2, !dbg !12868
  %52 = load i16, i16* %status, align 2, !dbg !12868
  %conv46 = zext i16 %52 to i32, !dbg !12868
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80, i64 0, i64 0), i8* %cond34, i32 %40, i32 %and39, i32 %48, i32 %conv46) #13, !dbg !12869
  br label %for.inc, !dbg !12869

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %i, align 4, !dbg !12870
  %inc48 = add i32 %53, 1, !dbg !12870
  store i32 %inc48, i32* %i, align 4, !dbg !12870
  br label %for.cond, !dbg !12871, !llvm.loop !12872

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !12874
  br label %for.cond49, !dbg !12876

for.cond49:                                       ; preds = %for.inc74, %for.end
  %54 = load i32, i32* %i, align 4, !dbg !12877
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12879
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 15, !dbg !12880
  %56 = load i32, i32* %tx_ring_size, align 4, !dbg !12880
  %cmp50 = icmp ult i32 %54, %56, !dbg !12881
  br i1 %cmp50, label %for.body52, label %for.end76, !dbg !12882

for.body52:                                       ; preds = %for.cond49
  %57 = load i32, i32* %i, align 4, !dbg !12883
  %and53 = and i32 %57, 1, !dbg !12884
  %tobool54 = icmp ne i32 %and53, 0, !dbg !12883
  %58 = zext i1 %tobool54 to i64, !dbg !12883
  %cond55 = select i1 %tobool54, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i64 0, i64 0), !dbg !12883
  %59 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12885
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %59, i32 0, i32 2, !dbg !12885
  %60 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !12885
  %61 = load i32, i32* %i, align 4, !dbg !12885
  %idxprom56 = sext i32 %61 to i64, !dbg !12885
  %arrayidx57 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %60, i64 %idxprom56, !dbg !12885
  %base58 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx57, i32 0, i32 0, !dbg !12885
  %62 = load i32, i32* %base58, align 4, !dbg !12885
  %63 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12886
  %tx_ring59 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %63, i32 0, i32 2, !dbg !12886
  %64 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring59, align 8, !dbg !12886
  %65 = load i32, i32* %i, align 4, !dbg !12886
  %idxprom60 = sext i32 %65 to i64, !dbg !12886
  %arrayidx61 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %64, i64 %idxprom60, !dbg !12886
  %length = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx61, i32 0, i32 1, !dbg !12886
  %66 = load i16, i16* %length, align 4, !dbg !12886
  %conv62 = zext i16 %66 to i32, !dbg !12886
  %sub63 = sub i32 0, %conv62, !dbg !12887
  %and64 = and i32 %sub63, 65535, !dbg !12888
  %67 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12889
  %tx_ring65 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %67, i32 0, i32 2, !dbg !12889
  %68 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring65, align 8, !dbg !12889
  %69 = load i32, i32* %i, align 4, !dbg !12889
  %idxprom66 = sext i32 %69 to i64, !dbg !12889
  %arrayidx67 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %68, i64 %idxprom66, !dbg !12889
  %misc = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx67, i32 0, i32 3, !dbg !12889
  %70 = load i32, i32* %misc, align 4, !dbg !12889
  %71 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12890
  %tx_ring68 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %71, i32 0, i32 2, !dbg !12890
  %72 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring68, align 8, !dbg !12890
  %73 = load i32, i32* %i, align 4, !dbg !12890
  %idxprom69 = sext i32 %73 to i64, !dbg !12890
  %arrayidx70 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %72, i64 %idxprom69, !dbg !12890
  %status71 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx70, i32 0, i32 2, !dbg !12890
  %74 = load i16, i16* %status71, align 2, !dbg !12890
  %conv72 = zext i16 %74 to i32, !dbg !12890
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80, i64 0, i64 0), i8* %cond55, i32 %62, i32 %and64, i32 %70, i32 %conv72) #13, !dbg !12891
  br label %for.inc74, !dbg !12891

for.inc74:                                        ; preds = %for.body52
  %75 = load i32, i32* %i, align 4, !dbg !12892
  %inc75 = add i32 %75, 1, !dbg !12892
  store i32 %inc75, i32* %i, align 4, !dbg !12892
  br label %for.cond49, !dbg !12893, !llvm.loop !12894

for.end76:                                        ; preds = %for.cond49
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)) #13, !dbg !12896
  br label %if.end78, !dbg !12897

if.end78:                                         ; preds = %for.end76, %if.end
  %76 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12898
  call void @pcnet32_restart(%struct.net_device* %76, i32 66) #12, !dbg !12899
  %77 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12900
  call void @netif_trans_update(%struct.net_device* %77) #12, !dbg !12901
  %78 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12902
  call void @netif_wake_queue(%struct.net_device* %78) #12, !dbg !12903
  %79 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12904
  %lock79 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %79, i32 0, i32 11, !dbg !12905
  %80 = load i64, i64* %flags, align 8, !dbg !12906
  store %struct.spinlock* %lock79, %struct.spinlock** %lock.addr.i80, align 8
  store i64 %80, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12907
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12907
  store i32 1, i32* %tmp.i, align 4, !dbg !12907
  %81 = load i32, i32* %tmp.i, align 4, !dbg !12907
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12908
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12908
  store i32 1, i32* %tmp8.i, align 4, !dbg !12908
  %82 = load i32, i32* %tmp8.i, align 4, !dbg !12908
  %83 = load i64, i64* %flags.addr.i, align 8, !dbg !12909
  call void @arch_local_irq_restore(i64 %83) #14, !dbg !12909
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12910, !srcloc !9478
  %84 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i80, align 8, !dbg !12911
  %85 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %84, i32 0, i32 0, !dbg !12911
  %rlock.i81 = bitcast %union.anon.46* %85 to %struct.raw_spinlock*, !dbg !12911
  ret void, !dbg !12912
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device_stats* @pcnet32_get_stats(%struct.net_device* %dev) #2 !dbg !12913 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !9351, metadata !DIExpression()), !dbg !12914
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !12916
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !12917
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12924, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !12926, metadata !DIExpression()), !dbg !12927
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12928
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !12929
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !12929
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !12927
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !12930, metadata !DIExpression()), !dbg !12931
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12932
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !12933
  %3 = load i64, i64* %base_addr, align 8, !dbg !12933
  store i64 %3, i64* %ioaddr, align 8, !dbg !12931
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12934, metadata !DIExpression()), !dbg !12935
  br label %do.body, !dbg !12936

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12937

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12938, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12941, metadata !DIExpression()), !dbg !12940
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12940
  %conv = zext i1 %cmp to i32, !dbg !12940
  store i32 1, i32* %tmp, align 4, !dbg !12940
  %4 = load i32, i32* %tmp, align 4, !dbg !12940
  br label %do.body2, !dbg !12942

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12943

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12944

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12946, metadata !DIExpression()), !dbg !12949
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12950, metadata !DIExpression()), !dbg !12949
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12949
  %conv8 = zext i1 %cmp7 to i32, !dbg !12949
  store i32 1, i32* %tmp9, align 4, !dbg !12949
  %5 = load i32, i32* %tmp9, align 4, !dbg !12949
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !12951
  store i64 %call10, i64* %flags, align 8, !dbg !12951
  br label %do.end, !dbg !12951

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !12944

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !12943

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12952, !srcloc !12953
  br label %do.body13, !dbg !12952

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12954
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 11, !dbg !12954
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12955
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !12956
  %rlock.i = bitcast %union.anon.46* %8 to %struct.raw_spinlock*, !dbg !12956
  br label %do.end15, !dbg !12954

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !12952

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12943

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12942

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12937

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12957
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 10, !dbg !12958
  %10 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !12958
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %10, i32 0, i32 0, !dbg !12959
  %11 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !12959
  %12 = load i64, i64* %ioaddr, align 8, !dbg !12960
  %call20 = call zeroext i16 %11(i64 %12, i32 112) #12, !dbg !12957
  %conv21 = zext i16 %call20 to i64, !dbg !12957
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12961
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 24, !dbg !12962
  %rx_missed_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 15, !dbg !12963
  store i64 %conv21, i64* %rx_missed_errors, align 8, !dbg !12964
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !12965
  %lock22 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 11, !dbg !12966
  %15 = load i64, i64* %flags, align 8, !dbg !12967
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !12968
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !12968
  store i32 1, i32* %tmp.i, align 4, !dbg !12968
  %16 = load i32, i32* %tmp.i, align 4, !dbg !12968
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !12969
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !12969
  store i32 1, i32* %tmp8.i, align 4, !dbg !12969
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !12969
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !12970
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !12970
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12971, !srcloc !9478
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !12972
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !12972
  %rlock.i25 = bitcast %union.anon.46* %20 to %struct.raw_spinlock*, !dbg !12972
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12973
  %stats23 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 24, !dbg !12974
  ret %struct.net_device_stats* %stats23, !dbg !12975
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !12976 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12984, metadata !DIExpression()), !dbg !12985
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !12986, metadata !DIExpression()), !dbg !12987
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !12988, metadata !DIExpression()), !dbg !12989
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  %0 = load i32, i32* %irq.addr, align 4, !dbg !12994
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !12995
  %2 = load i64, i64* %flags.addr, align 8, !dbg !12996
  %3 = load i8*, i8** %name.addr, align 8, !dbg !12997
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !12998
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !12999
  ret i32 %call, !dbg !13000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_interrupt(i32 %irq, i8* %dev_id) #2 !dbg !13001 {
entry:
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !13002, metadata !DIExpression()), !dbg !13006
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13008, metadata !DIExpression()), !dbg !13010
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %csr0 = alloca i16, align 2
  %boguscnt = alloca i32, align 4
  %val = alloca i16, align 2
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13012, metadata !DIExpression()), !dbg !13013
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !13014, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !13016, metadata !DIExpression()), !dbg !13017
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !13018
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !13018
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !13017
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13019, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !13021, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.declare(metadata i16* %csr0, metadata !13023, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.declare(metadata i32* %boguscnt, metadata !13025, metadata !DIExpression()), !dbg !13026
  %2 = load i32, i32* @max_interrupt_work, align 4, !dbg !13027
  store i32 %2, i32* %boguscnt, align 4, !dbg !13026
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13028
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 5, !dbg !13029
  %4 = load i64, i64* %base_addr, align 8, !dbg !13029
  store i64 %4, i64* %ioaddr, align 8, !dbg !13030
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13031
  %call = call i8* @netdev_priv(%struct.net_device* %5) #12, !dbg !13032
  %6 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13032
  store %struct.pcnet32_private* %6, %struct.pcnet32_private** %lp, align 8, !dbg !13033
  %7 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13034
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %7, i32 0, i32 11, !dbg !13035
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13036, !srcloc !13038
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13039
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !13039
  %rlock.i = bitcast %union.anon.46* %9 to %struct.raw_spinlock*, !dbg !13039
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13041
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 10, !dbg !13042
  %11 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13042
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %11, i32 0, i32 0, !dbg !13043
  %12 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !13043
  %13 = load i64, i64* %ioaddr, align 8, !dbg !13044
  %call1 = call zeroext i16 %12(i64 %13, i32 0) #12, !dbg !13041
  store i16 %call1, i16* %csr0, align 2, !dbg !13045
  br label %while.cond, !dbg !13046

while.cond:                                       ; preds = %if.end54, %entry
  %14 = load i16, i16* %csr0, align 2, !dbg !13047
  %conv = zext i16 %14 to i32, !dbg !13047
  %and = and i32 %conv, 36608, !dbg !13048
  %tobool = icmp ne i32 %and, 0, !dbg !13048
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13049

land.rhs:                                         ; preds = %while.cond
  %15 = load i32, i32* %boguscnt, align 4, !dbg !13050
  %dec = add i32 %15, -1, !dbg !13050
  store i32 %dec, i32* %boguscnt, align 4, !dbg !13050
  %cmp = icmp sge i32 %dec, 0, !dbg !13051
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !13052
  br i1 %16, label %while.body, label %while.end, !dbg !13046

while.body:                                       ; preds = %land.end
  %17 = load i16, i16* %csr0, align 2, !dbg !13053
  %conv3 = zext i16 %17 to i32, !dbg !13053
  %cmp4 = icmp eq i32 %conv3, 65535, !dbg !13056
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13057

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !13058

if.end:                                           ; preds = %while.body
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13059
  %a6 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 10, !dbg !13060
  %19 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a6, align 8, !dbg !13060
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %19, i32 0, i32 1, !dbg !13061
  %20 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !13061
  %21 = load i64, i64* %ioaddr, align 8, !dbg !13062
  %22 = load i16, i16* %csr0, align 2, !dbg !13063
  %conv7 = zext i16 %22 to i32, !dbg !13063
  %and8 = and i32 %conv7, -80, !dbg !13064
  %conv9 = trunc i32 %and8 to i16, !dbg !13063
  call void %20(i64 %21, i32 0, i16 zeroext %conv9) #12, !dbg !13059
  br label %do.body, !dbg !13065

do.body:                                          ; preds = %if.end
  %23 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13066
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %23, i32 0, i32 33, !dbg !13066
  %24 = load i32, i32* %msg_enable, align 8, !dbg !13066
  %and10 = and i32 %24, 512, !dbg !13066
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13066
  br i1 %tobool11, label %if.then12, label %if.end18, !dbg !13069

if.then12:                                        ; preds = %do.body
  %25 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13066
  %26 = load i16, i16* %csr0, align 2, !dbg !13066
  %conv13 = zext i16 %26 to i32, !dbg !13066
  %27 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13066
  %a14 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %27, i32 0, i32 10, !dbg !13066
  %28 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a14, align 8, !dbg !13066
  %read_csr15 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %28, i32 0, i32 0, !dbg !13066
  %29 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr15, align 8, !dbg !13066
  %30 = load i64, i64* %ioaddr, align 8, !dbg !13066
  %call16 = call zeroext i16 %29(i64 %30, i32 0) #12, !dbg !13066
  %conv17 = zext i16 %call16 to i32, !dbg !13066
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.68, i64 0, i64 0), i32 %conv13, i32 %conv17) #13, !dbg !13066
  br label %if.end18, !dbg !13066

if.end18:                                         ; preds = %if.then12, %do.body
  br label %do.end, !dbg !13069

do.end:                                           ; preds = %if.end18
  %31 = load i16, i16* %csr0, align 2, !dbg !13070
  %conv19 = zext i16 %31 to i32, !dbg !13070
  %and20 = and i32 %conv19, 16384, !dbg !13072
  %tobool21 = icmp ne i32 %and20, 0, !dbg !13072
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !13073

if.then22:                                        ; preds = %do.end
  %32 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13074
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %32, i32 0, i32 24, !dbg !13075
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 5, !dbg !13076
  %33 = load i64, i64* %tx_errors, align 8, !dbg !13077
  %inc = add i64 %33, 1, !dbg !13077
  store i64 %inc, i64* %tx_errors, align 8, !dbg !13077
  br label %if.end23, !dbg !13074

if.end23:                                         ; preds = %if.then22, %do.end
  %34 = load i16, i16* %csr0, align 2, !dbg !13078
  %conv24 = zext i16 %34 to i32, !dbg !13078
  %and25 = and i32 %conv24, 4096, !dbg !13080
  %tobool26 = icmp ne i32 %and25, 0, !dbg !13080
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !13081

if.then27:                                        ; preds = %if.end23
  %35 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13082
  %stats28 = getelementptr inbounds %struct.net_device, %struct.net_device* %35, i32 0, i32 24, !dbg !13084
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats28, i32 0, i32 4, !dbg !13085
  %36 = load i64, i64* %rx_errors, align 8, !dbg !13086
  %inc29 = add i64 %36, 1, !dbg !13086
  store i64 %inc29, i64* %rx_errors, align 8, !dbg !13086
  br label %if.end30, !dbg !13087

if.end30:                                         ; preds = %if.then27, %if.end23
  %37 = load i16, i16* %csr0, align 2, !dbg !13088
  %conv31 = zext i16 %37 to i32, !dbg !13088
  %and32 = and i32 %conv31, 2048, !dbg !13090
  %tobool33 = icmp ne i32 %and32, 0, !dbg !13090
  br i1 %tobool33, label %if.then34, label %if.end43, !dbg !13091

if.then34:                                        ; preds = %if.end30
  br label %do.body35, !dbg !13092

do.body35:                                        ; preds = %if.then34
  %38 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13094
  %msg_enable36 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %38, i32 0, i32 33, !dbg !13094
  %39 = load i32, i32* %msg_enable36, align 8, !dbg !13094
  %and37 = and i32 %39, 1, !dbg !13094
  %tobool38 = icmp ne i32 %and37, 0, !dbg !13094
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !13097

if.then39:                                        ; preds = %do.body35
  %40 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13094
  %41 = load i16, i16* %csr0, align 2, !dbg !13094
  %conv40 = zext i16 %41 to i32, !dbg !13094
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %40, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i64 0, i64 0), i32 %conv40) #13, !dbg !13094
  br label %if.end41, !dbg !13094

if.end41:                                         ; preds = %if.then39, %do.body35
  br label %do.end42, !dbg !13097

do.end42:                                         ; preds = %if.end41
  br label %if.end43, !dbg !13098

if.end43:                                         ; preds = %do.end42, %if.end30
  %42 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13099
  %napi = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %42, i32 0, i32 25, !dbg !13101
  %call44 = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %napi) #12, !dbg !13102
  br i1 %call44, label %if.then45, label %if.end54, !dbg !13103

if.then45:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata i16* %val, metadata !13104, metadata !DIExpression()), !dbg !13106
  %43 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13107
  %a46 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %43, i32 0, i32 10, !dbg !13108
  %44 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a46, align 8, !dbg !13108
  %read_csr47 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %44, i32 0, i32 0, !dbg !13109
  %45 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr47, align 8, !dbg !13109
  %46 = load i64, i64* %ioaddr, align 8, !dbg !13110
  %call48 = call zeroext i16 %45(i64 %46, i32 3) #12, !dbg !13107
  store i16 %call48, i16* %val, align 2, !dbg !13111
  %47 = load i16, i16* %val, align 2, !dbg !13112
  %conv49 = zext i16 %47 to i32, !dbg !13112
  %or = or i32 %conv49, 24320, !dbg !13112
  %conv50 = trunc i32 %or to i16, !dbg !13112
  store i16 %conv50, i16* %val, align 2, !dbg !13112
  %48 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13113
  %a51 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %48, i32 0, i32 10, !dbg !13114
  %49 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a51, align 8, !dbg !13114
  %write_csr52 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %49, i32 0, i32 1, !dbg !13115
  %50 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr52, align 8, !dbg !13115
  %51 = load i64, i64* %ioaddr, align 8, !dbg !13116
  %52 = load i16, i16* %val, align 2, !dbg !13117
  call void %50(i64 %51, i32 3, i16 zeroext %52) #12, !dbg !13113
  %53 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13118
  %napi53 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %53, i32 0, i32 25, !dbg !13119
  call void @__napi_schedule(%struct.napi_struct* %napi53) #12, !dbg !13120
  br label %while.end, !dbg !13121

if.end54:                                         ; preds = %if.end43
  %54 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13122
  %a55 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %54, i32 0, i32 10, !dbg !13123
  %55 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a55, align 8, !dbg !13123
  %read_csr56 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %55, i32 0, i32 0, !dbg !13124
  %56 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr56, align 8, !dbg !13124
  %57 = load i64, i64* %ioaddr, align 8, !dbg !13125
  %call57 = call zeroext i16 %56(i64 %57, i32 0) #12, !dbg !13122
  store i16 %call57, i16* %csr0, align 2, !dbg !13126
  br label %while.cond, !dbg !13046, !llvm.loop !13127

while.end:                                        ; preds = %if.then45, %if.then, %land.end
  br label %do.body58, !dbg !13129

do.body58:                                        ; preds = %while.end
  %58 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13130
  %msg_enable59 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %58, i32 0, i32 33, !dbg !13130
  %59 = load i32, i32* %msg_enable59, align 8, !dbg !13130
  %and60 = and i32 %59, 512, !dbg !13130
  %tobool61 = icmp ne i32 %and60, 0, !dbg !13130
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !13133

if.then62:                                        ; preds = %do.body58
  %60 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13130
  %61 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13130
  %a63 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %61, i32 0, i32 10, !dbg !13130
  %62 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a63, align 8, !dbg !13130
  %read_csr64 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %62, i32 0, i32 0, !dbg !13130
  %63 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr64, align 8, !dbg !13130
  %64 = load i64, i64* %ioaddr, align 8, !dbg !13130
  %call65 = call zeroext i16 %63(i64 %64, i32 0) #12, !dbg !13130
  %conv66 = zext i16 %call65 to i32, !dbg !13130
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %60, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70, i64 0, i64 0), i32 %conv66) #13, !dbg !13130
  br label %if.end67, !dbg !13130

if.end67:                                         ; preds = %if.then62, %do.body58
  br label %do.end68, !dbg !13133

do.end68:                                         ; preds = %if.end67
  %65 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13134
  %lock69 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %65, i32 0, i32 11, !dbg !13135
  store %struct.spinlock* %lock69, %struct.spinlock** %lock.addr.i70, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13136, !srcloc !13138
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !13139
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !13139
  %rlock.i71 = bitcast %union.anon.46* %67 to %struct.raw_spinlock*, !dbg !13139
  ret i32 1, !dbg !13141
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_printk(i8*, %struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ethtool_cmd_speed_set(%struct.ethtool_cmd* %ep, i32 %speed) #2 !dbg !13142 {
entry:
  %ep.addr = alloca %struct.ethtool_cmd*, align 8
  %speed.addr = alloca i32, align 4
  store %struct.ethtool_cmd* %ep, %struct.ethtool_cmd** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_cmd** %ep.addr, metadata !13146, metadata !DIExpression()), !dbg !13147
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !13148, metadata !DIExpression()), !dbg !13149
  %0 = load i32, i32* %speed.addr, align 4, !dbg !13150
  %and = and i32 %0, 65535, !dbg !13151
  %conv = trunc i32 %and to i16, !dbg !13152
  %1 = load %struct.ethtool_cmd*, %struct.ethtool_cmd** %ep.addr, align 8, !dbg !13153
  %speed1 = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %1, i32 0, i32 3, !dbg !13154
  store i16 %conv, i16* %speed1, align 4, !dbg !13155
  %2 = load i32, i32* %speed.addr, align 4, !dbg !13156
  %shr = lshr i32 %2, 16, !dbg !13157
  %conv2 = trunc i32 %shr to i16, !dbg !13158
  %3 = load %struct.ethtool_cmd*, %struct.ethtool_cmd** %ep.addr, align 8, !dbg !13159
  %speed_hi = getelementptr inbounds %struct.ethtool_cmd, %struct.ethtool_cmd* %3, i32 0, i32 12, !dbg !13160
  store i16 %conv2, i16* %speed_hi, align 4, !dbg !13161
  ret void, !dbg !13162
}

; Function Attrs: noredzone
declare dso_local i32 @mii_ethtool_sset(%struct.mii_if_info*, %struct.ethtool_cmd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_load_multicast(%struct.net_device* %dev) #2 !dbg !13163 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %ib = alloca %struct.pcnet32_init_block*, align 8
  %mcast_table = alloca i16*, align 8
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %ioaddr = alloca i64, align 8
  %i = alloca i32, align 4
  %crc = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13164, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13166, metadata !DIExpression()), !dbg !13167
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13168
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13169
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13169
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13167
  call void @llvm.dbg.declare(metadata %struct.pcnet32_init_block** %ib, metadata !13170, metadata !DIExpression()), !dbg !13173
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13174
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 0, !dbg !13175
  %3 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block, align 8, !dbg !13175
  store %struct.pcnet32_init_block* %3, %struct.pcnet32_init_block** %ib, align 8, !dbg !13173
  call void @llvm.dbg.declare(metadata i16** %mcast_table, metadata !13176, metadata !DIExpression()), !dbg !13179
  %4 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %ib, align 8, !dbg !13180
  %filter = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %4, i32 0, i32 4, !dbg !13181
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %filter, i64 0, i64 0, !dbg !13180
  %5 = bitcast i32* %arraydecay to i16*, !dbg !13182
  store i16* %5, i16** %mcast_table, align 8, !dbg !13179
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !13183, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !13185, metadata !DIExpression()), !dbg !13186
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13187
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 5, !dbg !13188
  %7 = load i64, i64* %base_addr, align 8, !dbg !13188
  store i64 %7, i64* %ioaddr, align 8, !dbg !13186
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13189, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !13191, metadata !DIExpression()), !dbg !13192
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13193
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 36, !dbg !13195
  %9 = load i32, i32* %flags, align 8, !dbg !13195
  %and = and i32 %9, 512, !dbg !13196
  %tobool = icmp ne i32 %and, 0, !dbg !13196
  br i1 %tobool, label %if.then, label %if.end, !dbg !13197

if.then:                                          ; preds = %entry
  %10 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %ib, align 8, !dbg !13198
  %filter1 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %10, i32 0, i32 4, !dbg !13200
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %filter1, i64 0, i64 0, !dbg !13198
  store volatile i32 -1, i32* %arrayidx, align 4, !dbg !13201
  %11 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %ib, align 8, !dbg !13202
  %filter2 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %11, i32 0, i32 4, !dbg !13203
  %arrayidx3 = getelementptr [2 x i32], [2 x i32]* %filter2, i64 0, i64 1, !dbg !13202
  store volatile i32 -1, i32* %arrayidx3, align 4, !dbg !13204
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13205
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 10, !dbg !13206
  %13 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13206
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %13, i32 0, i32 1, !dbg !13207
  %14 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !13207
  %15 = load i64, i64* %ioaddr, align 8, !dbg !13208
  call void %14(i64 %15, i32 8, i16 zeroext -1) #12, !dbg !13205
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13209
  %a4 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 10, !dbg !13210
  %17 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a4, align 8, !dbg !13210
  %write_csr5 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %17, i32 0, i32 1, !dbg !13211
  %18 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr5, align 8, !dbg !13211
  %19 = load i64, i64* %ioaddr, align 8, !dbg !13212
  call void %18(i64 %19, i32 9, i16 zeroext -1) #12, !dbg !13209
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13213
  %a6 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 10, !dbg !13214
  %21 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a6, align 8, !dbg !13214
  %write_csr7 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %21, i32 0, i32 1, !dbg !13215
  %22 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr7, align 8, !dbg !13215
  %23 = load i64, i64* %ioaddr, align 8, !dbg !13216
  call void %22(i64 %23, i32 10, i16 zeroext -1) #12, !dbg !13213
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13217
  %a8 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 10, !dbg !13218
  %25 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a8, align 8, !dbg !13218
  %write_csr9 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %25, i32 0, i32 1, !dbg !13219
  %26 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr9, align 8, !dbg !13219
  %27 = load i64, i64* %ioaddr, align 8, !dbg !13220
  call void %26(i64 %27, i32 11, i16 zeroext -1) #12, !dbg !13217
  br label %for.end41, !dbg !13221

if.end:                                           ; preds = %entry
  %28 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %ib, align 8, !dbg !13222
  %filter10 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %28, i32 0, i32 4, !dbg !13223
  %arrayidx11 = getelementptr [2 x i32], [2 x i32]* %filter10, i64 0, i64 0, !dbg !13222
  store volatile i32 0, i32* %arrayidx11, align 4, !dbg !13224
  %29 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %ib, align 8, !dbg !13225
  %filter12 = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %29, i32 0, i32 4, !dbg !13226
  %arrayidx13 = getelementptr [2 x i32], [2 x i32]* %filter12, i64 0, i64 1, !dbg !13225
  store volatile i32 0, i32* %arrayidx13, align 4, !dbg !13227
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13228, metadata !DIExpression()), !dbg !13231
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13231
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %30, i32 0, i32 63, !dbg !13231
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 0, !dbg !13231
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !13231
  %31 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13231
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !13231
  store i8* %32, i8** %__mptr, align 8, !dbg !13231
  br label %do.body, !dbg !13231

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !13232

do.end:                                           ; preds = %do.body
  %33 = load i8*, i8** %__mptr, align 8, !dbg !13231
  %add.ptr = getelementptr i8, i8* %33, i64 0, !dbg !13231
  %34 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !13231
  store %struct.netdev_hw_addr* %34, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13232
  %35 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13231
  store %struct.netdev_hw_addr* %35, %struct.netdev_hw_addr** %ha, align 8, !dbg !13234
  br label %for.cond, !dbg !13234

for.cond:                                         ; preds = %do.end29, %do.end
  %36 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13235
  %list14 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %36, i32 0, i32 0, !dbg !13235
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13235
  %mc15 = getelementptr inbounds %struct.net_device, %struct.net_device* %37, i32 0, i32 63, !dbg !13235
  %list16 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc15, i32 0, i32 0, !dbg !13235
  %cmp = icmp eq %struct.list_head* %list14, %list16, !dbg !13235
  %lnot = xor i1 %cmp, true, !dbg !13235
  br i1 %lnot, label %for.body, label %for.end, !dbg !13234

for.body:                                         ; preds = %for.cond
  %38 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13237
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %38, i32 0, i32 1, !dbg !13237
  %arraydecay17 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !13237
  %call18 = call i32 @crc32_le(i32 -1, i8* %arraydecay17, i64 6) #16, !dbg !13237
  store i32 %call18, i32* %crc, align 4, !dbg !13239
  %39 = load i32, i32* %crc, align 4, !dbg !13240
  %shr = lshr i32 %39, 26, !dbg !13241
  store i32 %shr, i32* %crc, align 4, !dbg !13242
  %40 = load i32, i32* %crc, align 4, !dbg !13243
  %and19 = and i32 %40, 15, !dbg !13243
  %shl = shl i32 1, %and19, !dbg !13243
  %conv = trunc i32 %shl to i16, !dbg !13243
  %conv20 = zext i16 %conv to i32, !dbg !13243
  %41 = load i16*, i16** %mcast_table, align 8, !dbg !13244
  %42 = load i32, i32* %crc, align 4, !dbg !13245
  %shr21 = lshr i32 %42, 4, !dbg !13246
  %idxprom = zext i32 %shr21 to i64, !dbg !13244
  %arrayidx22 = getelementptr i16, i16* %41, i64 %idxprom, !dbg !13244
  %43 = load volatile i16, i16* %arrayidx22, align 2, !dbg !13247
  %conv23 = zext i16 %43 to i32, !dbg !13247
  %or = or i32 %conv23, %conv20, !dbg !13247
  %conv24 = trunc i32 %or to i16, !dbg !13247
  store volatile i16 %conv24, i16* %arrayidx22, align 2, !dbg !13247
  br label %for.inc, !dbg !13248

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !13249, metadata !DIExpression()), !dbg !13251
  %44 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13251
  %list26 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %44, i32 0, i32 0, !dbg !13251
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26, i32 0, i32 0, !dbg !13251
  %45 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !13251
  %46 = bitcast %struct.list_head* %45 to i8*, !dbg !13251
  store i8* %46, i8** %__mptr25, align 8, !dbg !13251
  br label %do.body28, !dbg !13251

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !13252

do.end29:                                         ; preds = %do.body28
  %47 = load i8*, i8** %__mptr25, align 8, !dbg !13251
  %add.ptr31 = getelementptr i8, i8* %47, i64 0, !dbg !13251
  %48 = bitcast i8* %add.ptr31 to %struct.netdev_hw_addr*, !dbg !13251
  store %struct.netdev_hw_addr* %48, %struct.netdev_hw_addr** %tmp30, align 8, !dbg !13252
  %49 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp30, align 8, !dbg !13251
  store %struct.netdev_hw_addr* %49, %struct.netdev_hw_addr** %ha, align 8, !dbg !13235
  br label %for.cond, !dbg !13235, !llvm.loop !13254

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13256
  br label %for.cond32, !dbg !13258

for.cond32:                                       ; preds = %for.inc40, %for.end
  %50 = load i32, i32* %i, align 4, !dbg !13259
  %cmp33 = icmp slt i32 %50, 4, !dbg !13261
  br i1 %cmp33, label %for.body35, label %for.end41, !dbg !13262

for.body35:                                       ; preds = %for.cond32
  %51 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13263
  %a36 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %51, i32 0, i32 10, !dbg !13264
  %52 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a36, align 8, !dbg !13264
  %write_csr37 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %52, i32 0, i32 1, !dbg !13265
  %53 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr37, align 8, !dbg !13265
  %54 = load i64, i64* %ioaddr, align 8, !dbg !13266
  %55 = load i32, i32* %i, align 4, !dbg !13267
  %add = add i32 8, %55, !dbg !13268
  %56 = load i16*, i16** %mcast_table, align 8, !dbg !13269
  %57 = load i32, i32* %i, align 4, !dbg !13269
  %idxprom38 = sext i32 %57 to i64, !dbg !13269
  %arrayidx39 = getelementptr i16, i16* %56, i64 %idxprom38, !dbg !13269
  %58 = load volatile i16, i16* %arrayidx39, align 2, !dbg !13269
  call void %53(i64 %54, i32 %add, i16 zeroext %58) #12, !dbg !13263
  br label %for.inc40, !dbg !13263

for.inc40:                                        ; preds = %for.body35
  %59 = load i32, i32* %i, align 4, !dbg !13270
  %inc = add i32 %59, 1, !dbg !13270
  store i32 %inc, i32* %i, align 4, !dbg !13270
  br label %for.cond32, !dbg !13271, !llvm.loop !13272

for.end41:                                        ; preds = %if.then, %for.cond32
  ret void, !dbg !13274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #2 !dbg !13275 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !13278, metadata !DIExpression()), !dbg !13279
  br label %do.body, !dbg !13280

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !13281
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !13281
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !13281
  %lnot = xor i1 %call, true, !dbg !13281
  %lnot1 = xor i1 %lnot, true, !dbg !13281
  %lnot2 = xor i1 %lnot1, true, !dbg !13281
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13281
  %conv = sext i32 %lnot.ext to i64, !dbg !13281
  %tobool = icmp ne i64 %conv, 0, !dbg !13281
  br i1 %tobool, label %if.then, label %if.end, !dbg !13284

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !13281

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !13285

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !13287

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13285

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0), i32 509, i32 0, i64 12) #7, !dbg !13289, !srcloc !13291
  br label %do.end6, !dbg !13289

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !13285

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 281) #7, !dbg !13292, !srcloc !13295
  unreachable, !dbg !13296

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !13285

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !13285

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !13284

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13297, !srcloc !13298
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !13299
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !13300
  call void @clear_bit(i64 0, i64* %state11) #12, !dbg !13301
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !13302
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !13303
  call void @clear_bit(i64 3, i64* %state12) #12, !dbg !13304
  ret void, !dbg !13305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #2 !dbg !13306 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !13307, metadata !DIExpression()), !dbg !13311
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13313, metadata !DIExpression()), !dbg !13314
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13315
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !13316
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !13317
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !13318
  call void @clear_bit(i64 0, i64* %state.i) #14, !dbg !13319
  ret void, !dbg !13320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_purge_rx_ring(%struct.net_device* %dev) #2 !dbg !13321 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13322, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13324, metadata !DIExpression()), !dbg !13325
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13326
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13327
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13327
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13328, metadata !DIExpression()), !dbg !13329
  store i32 0, i32* %i, align 4, !dbg !13330
  br label %for.cond, !dbg !13332

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !13333
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13335
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 14, !dbg !13336
  %4 = load i32, i32* %rx_ring_size, align 8, !dbg !13336
  %cmp = icmp ult i32 %2, %4, !dbg !13337
  br i1 %cmp, label %for.body, label %for.end, !dbg !13338

for.body:                                         ; preds = %for.cond
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13339
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 1, !dbg !13341
  %6 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !13341
  %7 = load i32, i32* %i, align 4, !dbg !13342
  %idxprom = sext i32 %7 to i64, !dbg !13339
  %arrayidx = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %6, i64 %idxprom, !dbg !13339
  %status = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx, i32 0, i32 2, !dbg !13343
  store i16 0, i16* %status, align 2, !dbg !13344
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13345, !srcloc !13346
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13347
  %rx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 7, !dbg !13349
  %9 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !13349
  %10 = load i32, i32* %i, align 4, !dbg !13350
  %idxprom1 = sext i32 %10 to i64, !dbg !13347
  %arrayidx2 = getelementptr %struct.sk_buff*, %struct.sk_buff** %9, i64 %idxprom1, !dbg !13347
  %11 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx2, align 8, !dbg !13347
  %tobool = icmp ne %struct.sk_buff* %11, null, !dbg !13347
  br i1 %tobool, label %if.then, label %if.end17, !dbg !13351

if.then:                                          ; preds = %for.body
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13352
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 4, !dbg !13355
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !13355
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !13356
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13357
  %rx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 9, !dbg !13358
  %15 = load i64*, i64** %rx_dma_addr, align 8, !dbg !13358
  %16 = load i32, i32* %i, align 4, !dbg !13359
  %idxprom4 = sext i32 %16 to i64, !dbg !13357
  %arrayidx5 = getelementptr i64, i64* %15, i64 %idxprom4, !dbg !13357
  %17 = load i64, i64* %arrayidx5, align 8, !dbg !13357
  %call6 = call i32 @dma_mapping_error(%struct.device* %dev3, i64 %17) #12, !dbg !13360
  %tobool7 = icmp ne i32 %call6, 0, !dbg !13360
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !13361

if.then8:                                         ; preds = %if.then
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13362
  %pci_dev9 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 4, !dbg !13362
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev9, align 8, !dbg !13362
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !13362
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13362
  %rx_dma_addr11 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 9, !dbg !13362
  %21 = load i64*, i64** %rx_dma_addr11, align 8, !dbg !13362
  %22 = load i32, i32* %i, align 4, !dbg !13362
  %idxprom12 = sext i32 %22 to i64, !dbg !13362
  %arrayidx13 = getelementptr i64, i64* %21, i64 %idxprom12, !dbg !13362
  %23 = load i64, i64* %arrayidx13, align 8, !dbg !13362
  call void @dma_unmap_single_attrs(%struct.device* %dev10, i64 %23, i64 1544, i32 2, i64 0) #12, !dbg !13362
  br label %if.end, !dbg !13362

if.end:                                           ; preds = %if.then8, %if.then
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13363
  %rx_skbuff14 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 7, !dbg !13364
  %25 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff14, align 8, !dbg !13364
  %26 = load i32, i32* %i, align 4, !dbg !13365
  %idxprom15 = sext i32 %26 to i64, !dbg !13363
  %arrayidx16 = getelementptr %struct.sk_buff*, %struct.sk_buff** %25, i64 %idxprom15, !dbg !13363
  %27 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx16, align 8, !dbg !13363
  call void @dev_kfree_skb_any(%struct.sk_buff* %27) #12, !dbg !13366
  br label %if.end17, !dbg !13367

if.end17:                                         ; preds = %if.end, %for.body
  %28 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13368
  %rx_skbuff18 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %28, i32 0, i32 7, !dbg !13369
  %29 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff18, align 8, !dbg !13369
  %30 = load i32, i32* %i, align 4, !dbg !13370
  %idxprom19 = sext i32 %30 to i64, !dbg !13368
  %arrayidx20 = getelementptr %struct.sk_buff*, %struct.sk_buff** %29, i64 %idxprom19, !dbg !13368
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx20, align 8, !dbg !13371
  %31 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13372
  %rx_dma_addr21 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %31, i32 0, i32 9, !dbg !13373
  %32 = load i64*, i64** %rx_dma_addr21, align 8, !dbg !13373
  %33 = load i32, i32* %i, align 4, !dbg !13374
  %idxprom22 = sext i32 %33 to i64, !dbg !13372
  %arrayidx23 = getelementptr i64, i64* %32, i64 %idxprom22, !dbg !13372
  store i64 0, i64* %arrayidx23, align 8, !dbg !13375
  br label %for.inc, !dbg !13376

for.inc:                                          ; preds = %if.end17
  %34 = load i32, i32* %i, align 4, !dbg !13377
  %inc = add i32 %34, 1, !dbg !13377
  store i32 %inc, i32* %i, align 4, !dbg !13377
  br label %for.cond, !dbg !13378, !llvm.loop !13379

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13381
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #3

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #3

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !13382 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13387, metadata !DIExpression()), !dbg !13389
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13391, metadata !DIExpression()), !dbg !13392
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13393, metadata !DIExpression()), !dbg !13395
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13397, metadata !DIExpression()), !dbg !13398
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13399, metadata !DIExpression()), !dbg !13400
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13401, metadata !DIExpression()), !dbg !13402
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13403
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13404
  %div = sdiv i64 %1, 64, !dbg !13404
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13405
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13403
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13406
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13407
  %conv.i = trunc i64 %4 to i32, !dbg !13407
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13408
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13409
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13409
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !13409
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13410
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13411
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !13412
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !13414
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !13415

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !13416
  %12 = bitcast i64* %11 to i8*, !dbg !13416
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13416
  %shr.i = ashr i64 %13, 3, !dbg !13416
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !13416
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !13418
  %and.i = and i64 %14, 7, !dbg !13418
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !13418
  %shl.i = shl i32 1, %sh_prom.i, !dbg !13418
  %neg.i = xor i32 %shl.i, -1, !dbg !13419
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !13420, !srcloc !13421
  br label %arch_clear_bit.exit, !dbg !13422

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !13423
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !13425
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !13426, !srcloc !13427
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !13428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !13429 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13432, metadata !DIExpression()), !dbg !13433
  ret i1 true, !dbg !13434
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #2 !dbg !13435 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !13436, metadata !DIExpression()), !dbg !13438
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13440, metadata !DIExpression()), !dbg !13441
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13442
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !13443
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !13444
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !13445
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !13446
  ret void, !dbg !13447
}

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !13448 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13449, metadata !DIExpression()), !dbg !13451
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13453, metadata !DIExpression()), !dbg !13454
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13393, metadata !DIExpression()), !dbg !13455
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13397, metadata !DIExpression()), !dbg !13457
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13458, metadata !DIExpression()), !dbg !13459
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13460, metadata !DIExpression()), !dbg !13461
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13462
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13463
  %div = sdiv i64 %1, 64, !dbg !13463
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13464
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13462
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13465
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13466
  %conv.i = trunc i64 %4 to i32, !dbg !13466
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13467
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13468
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13468
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !13468
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13469
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13470
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !13471
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !13473
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !13474

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !13475
  %12 = bitcast i64* %11 to i8*, !dbg !13475
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13475
  %shr.i = ashr i64 %13, 3, !dbg !13475
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !13475
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !13477
  %and.i = and i64 %14, 7, !dbg !13477
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !13477
  %shl.i = shl i32 1, %sh_prom.i, !dbg !13477
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !13478, !srcloc !13479
  br label %arch_set_bit.exit, !dbg !13480

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !13481
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !13483
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !13484, !srcloc !13485
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !13486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_suspend(%struct.net_device* %dev, i64* %flags, i32 %can_sleep) #2 !dbg !13487 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !8236, metadata !DIExpression()), !dbg !13490
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9351, metadata !DIExpression()), !dbg !13498
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !13500
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %flags.addr = alloca i64*, align 8
  %can_sleep.addr = alloca i32, align 4
  %csr5 = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %a = alloca %struct.pcnet32_access*, align 8
  %ioaddr = alloca i64, align 8
  %ticks = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13501, metadata !DIExpression()), !dbg !13502
  store i64* %flags, i64** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flags.addr, metadata !13503, metadata !DIExpression()), !dbg !13504
  store i32 %can_sleep, i32* %can_sleep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %can_sleep.addr, metadata !13505, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.declare(metadata i32* %csr5, metadata !13507, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13509, metadata !DIExpression()), !dbg !13510
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13511
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13512
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13512
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13510
  call void @llvm.dbg.declare(metadata %struct.pcnet32_access** %a, metadata !13513, metadata !DIExpression()), !dbg !13514
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13515
  %a1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 10, !dbg !13516
  %3 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a1, align 8, !dbg !13516
  store %struct.pcnet32_access* %3, %struct.pcnet32_access** %a, align 8, !dbg !13514
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !13517, metadata !DIExpression()), !dbg !13518
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13519
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 5, !dbg !13520
  %5 = load i64, i64* %base_addr, align 8, !dbg !13520
  store i64 %5, i64* %ioaddr, align 8, !dbg !13518
  call void @llvm.dbg.declare(metadata i32* %ticks, metadata !13521, metadata !DIExpression()), !dbg !13522
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13523
  %chip_version = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 35, !dbg !13525
  %7 = load i16, i16* %chip_version, align 8, !dbg !13525
  %conv = zext i16 %7 to i32, !dbg !13523
  %cmp = icmp slt i32 %conv, 9761, !dbg !13526
  br i1 %cmp, label %if.then, label %if.end, !dbg !13527

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13528
  br label %return, !dbg !13528

if.end:                                           ; preds = %entry
  %8 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13529
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %8, i32 0, i32 0, !dbg !13530
  %9 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !13530
  %10 = load i64, i64* %ioaddr, align 8, !dbg !13531
  %call3 = call zeroext i16 %9(i64 %10, i32 5) #12, !dbg !13529
  %conv4 = zext i16 %call3 to i32, !dbg !13529
  store i32 %conv4, i32* %csr5, align 4, !dbg !13532
  %11 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13533
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %11, i32 0, i32 1, !dbg !13534
  %12 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !13534
  %13 = load i64, i64* %ioaddr, align 8, !dbg !13535
  %14 = load i32, i32* %csr5, align 4, !dbg !13536
  %or = or i32 %14, 1, !dbg !13537
  %conv5 = trunc i32 %or to i16, !dbg !13536
  call void %12(i64 %13, i32 5, i16 zeroext %conv5) #12, !dbg !13533
  store i32 0, i32* %ticks, align 4, !dbg !13538
  br label %while.cond, !dbg !13539

while.cond:                                       ; preds = %if.end43, %if.end
  %15 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13540
  %read_csr6 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %15, i32 0, i32 0, !dbg !13541
  %16 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr6, align 8, !dbg !13541
  %17 = load i64, i64* %ioaddr, align 8, !dbg !13542
  %call7 = call zeroext i16 %16(i64 %17, i32 5) #12, !dbg !13540
  %conv8 = zext i16 %call7 to i32, !dbg !13540
  %and = and i32 %conv8, 1, !dbg !13543
  %tobool = icmp ne i32 %and, 0, !dbg !13544
  %lnot = xor i1 %tobool, true, !dbg !13544
  br i1 %lnot, label %while.body, label %while.end, !dbg !13539

while.body:                                       ; preds = %while.cond
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13545
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 11, !dbg !13546
  %19 = load i64*, i64** %flags.addr, align 8, !dbg !13547
  %20 = load i64, i64* %19, align 8, !dbg !13548
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !13549
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !13549
  store i32 1, i32* %tmp.i, align 4, !dbg !13549
  %21 = load i32, i32* %tmp.i, align 4, !dbg !13549
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !13550
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !13550
  store i32 1, i32* %tmp8.i, align 4, !dbg !13550
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !13550
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !13551
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !13551
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13552, !srcloc !9478
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13553
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !13553
  %rlock.i = bitcast %union.anon.46* %25 to %struct.raw_spinlock*, !dbg !13553
  %26 = load i32, i32* %can_sleep.addr, align 4, !dbg !13554
  %tobool9 = icmp ne i32 %26, 0, !dbg !13554
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !13556

if.then10:                                        ; preds = %while.body
  call void @msleep(i32 1) #12, !dbg !13557
  br label %if.end11, !dbg !13557

if.else:                                          ; preds = %while.body
  call void @__const_udelay(i64 4295000) #12, !dbg !13558
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  br label %do.body, !dbg !13563

do.body:                                          ; preds = %if.end11
  br label %do.body12, !dbg !13564

do.body12:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13565, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13568, metadata !DIExpression()), !dbg !13567
  %cmp13 = icmp eq i64* %__dummy, %__dummy2, !dbg !13567
  %conv14 = zext i1 %cmp13 to i32, !dbg !13567
  store i32 1, i32* %tmp, align 4, !dbg !13567
  %27 = load i32, i32* %tmp, align 4, !dbg !13567
  br label %do.body15, !dbg !13569

do.body15:                                        ; preds = %do.body12
  br label %do.body16, !dbg !13570

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !13571

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !13573, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !13577, metadata !DIExpression()), !dbg !13576
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !13576
  %conv21 = zext i1 %cmp20 to i32, !dbg !13576
  store i32 1, i32* %tmp22, align 4, !dbg !13576
  %28 = load i32, i32* %tmp22, align 4, !dbg !13576
  %call23 = call i64 @arch_local_irq_save() #12, !dbg !13578
  %29 = load i64*, i64** %flags.addr, align 8, !dbg !13578
  store i64 %call23, i64* %29, align 8, !dbg !13578
  br label %do.end, !dbg !13578

do.end:                                           ; preds = %do.body17
  br label %do.end24, !dbg !13571

do.end24:                                         ; preds = %do.end
  br label %do.body25, !dbg !13570

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13579, !srcloc !13580
  br label %do.body26, !dbg !13579

do.body26:                                        ; preds = %do.body25
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13581
  %lock27 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 11, !dbg !13581
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i44, align 8
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !13582
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !13583
  %rlock.i45 = bitcast %union.anon.46* %32 to %struct.raw_spinlock*, !dbg !13583
  br label %do.end29, !dbg !13581

do.end29:                                         ; preds = %do.body26
  br label %do.end30, !dbg !13579

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !13570

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !13569

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !13564

do.end33:                                         ; preds = %do.end32
  %33 = load i32, i32* %ticks, align 4, !dbg !13584
  %inc = add i32 %33, 1, !dbg !13584
  store i32 %inc, i32* %ticks, align 4, !dbg !13584
  %34 = load i32, i32* %ticks, align 4, !dbg !13585
  %cmp34 = icmp sgt i32 %34, 200, !dbg !13587
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !13588

if.then36:                                        ; preds = %do.end33
  br label %do.body37, !dbg !13589

do.body37:                                        ; preds = %if.then36
  %35 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13591
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %35, i32 0, i32 33, !dbg !13591
  %36 = load i32, i32* %msg_enable, align 8, !dbg !13591
  %and38 = and i32 %36, 8192, !dbg !13591
  %tobool39 = icmp ne i32 %and38, 0, !dbg !13591
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !13594

if.then40:                                        ; preds = %do.body37
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13591
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %37, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.75, i64 0, i64 0)) #13, !dbg !13591
  br label %if.end41, !dbg !13591

if.end41:                                         ; preds = %if.then40, %do.body37
  br label %do.end42, !dbg !13594

do.end42:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !13595
  br label %return, !dbg !13595

if.end43:                                         ; preds = %do.end33
  br label %while.cond, !dbg !13539, !llvm.loop !13596

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !13598
  br label %return, !dbg !13598

return:                                           ; preds = %while.end, %do.end42, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !13599
  ret i32 %38, !dbg !13599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_clr_suspend(%struct.pcnet32_private* %lp, i64 %ioaddr) #2 !dbg !13600 {
entry:
  %lp.addr = alloca %struct.pcnet32_private*, align 8
  %ioaddr.addr = alloca i64, align 8
  %csr5 = alloca i32, align 4
  store %struct.pcnet32_private* %lp, %struct.pcnet32_private** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp.addr, metadata !13603, metadata !DIExpression()), !dbg !13604
  store i64 %ioaddr, i64* %ioaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ioaddr.addr, metadata !13605, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.declare(metadata i32* %csr5, metadata !13607, metadata !DIExpression()), !dbg !13608
  %0 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !13609
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %0, i32 0, i32 10, !dbg !13610
  %1 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13610
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %1, i32 0, i32 0, !dbg !13611
  %2 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !13611
  %3 = load i64, i64* %ioaddr.addr, align 8, !dbg !13612
  %call = call zeroext i16 %2(i64 %3, i32 5) #12, !dbg !13609
  %conv = zext i16 %call to i32, !dbg !13609
  store i32 %conv, i32* %csr5, align 4, !dbg !13608
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !13613
  %a1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 10, !dbg !13614
  %5 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a1, align 8, !dbg !13614
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %5, i32 0, i32 1, !dbg !13615
  %6 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !13615
  %7 = load i64, i64* %ioaddr.addr, align 8, !dbg !13616
  %8 = load i32, i32* %csr5, align 4, !dbg !13617
  %and = and i32 %8, -2, !dbg !13618
  %conv2 = trunc i32 %and to i16, !dbg !13617
  call void %6(i64 %7, i32 5, i16 zeroext %conv2) #12, !dbg !13613
  ret void, !dbg !13619
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noredzone
declare dso_local i32 @generic_mii_ioctl(%struct.mii_if_info*, %struct.mii_ioctl_data*, i32, i32*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %rq) #2 !dbg !13620 {
entry:
  %rq.addr = alloca %struct.ifreq*, align 8
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !13623, metadata !DIExpression()), !dbg !13624
  %0 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !13625
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !13626
  %1 = bitcast %union.anon.13* %ifr_ifru to %struct.mii_ioctl_data*, !dbg !13627
  ret %struct.mii_ioctl_data* %1, !dbg !13628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_trans_update(%struct.net_device* %dev) #2 !dbg !13629 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13630, metadata !DIExpression()), !dbg !13631
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !13632, metadata !DIExpression()), !dbg !13633
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13634
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !13635
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !13633
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !13636
  %trans_start = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 9, !dbg !13638
  %2 = load i64, i64* %trans_start, align 8, !dbg !13638
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !13639
  %cmp = icmp ne i64 %2, %3, !dbg !13640
  br i1 %cmp, label %if.then, label %if.end, !dbg !13641

if.then:                                          ; preds = %entry
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !13642
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !13643
  %trans_start1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 9, !dbg !13644
  store i64 %4, i64* %trans_start1, align 8, !dbg !13645
  br label %if.end, !dbg !13643

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_get_drvinfo(%struct.net_device* %dev, %struct.ethtool_drvinfo* %info) #2 !dbg !13647 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13648, metadata !DIExpression()), !dbg !13649
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !13650, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13652, metadata !DIExpression()), !dbg !13653
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13654
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13655
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13655
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13653
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !13656
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !13657
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !13656
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 32) #12, !dbg !13658
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13659
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 4, !dbg !13661
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !13661
  %tobool = icmp ne %struct.pci_dev* %4, null, !dbg !13659
  br i1 %tobool, label %if.then, label %if.else, !dbg !13662

if.then:                                          ; preds = %entry
  %5 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !13663
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %5, i32 0, i32 4, !dbg !13664
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !13663
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13665
  %pci_dev3 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 4, !dbg !13666
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev3, align 8, !dbg !13666
  %call4 = call i8* @pci_name(%struct.pci_dev* %7) #12, !dbg !13667
  %call5 = call i64 @strlcpy(i8* %arraydecay2, i8* %call4, i64 32) #12, !dbg !13668
  br label %if.end, !dbg !13668

if.else:                                          ; preds = %entry
  %8 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !13669
  %bus_info6 = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %8, i32 0, i32 4, !dbg !13670
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info6, i64 0, i64 0, !dbg !13669
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13671
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 5, !dbg !13672
  %10 = load i64, i64* %base_addr, align 8, !dbg !13672
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay7, i64 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i64 0, i64 0), i64 %10) #12, !dbg !13673
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_get_regs_len(%struct.net_device* %dev) #2 !dbg !13675 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %j = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13676, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13678, metadata !DIExpression()), !dbg !13679
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13680
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13681
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13681
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13679
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13682, metadata !DIExpression()), !dbg !13683
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13684
  %phycount = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 27, !dbg !13685
  %3 = load i8, i8* %phycount, align 1, !dbg !13685
  %conv = sext i8 %3 to i32, !dbg !13684
  %mul = mul i32 %conv, 32, !dbg !13686
  store i32 %mul, i32* %j, align 4, !dbg !13683
  %4 = load i32, i32* %j, align 4, !dbg !13687
  %add = add i32 136, %4, !dbg !13688
  %conv1 = sext i32 %add to i64, !dbg !13689
  %mul2 = mul i64 %conv1, 2, !dbg !13690
  %conv3 = trunc i64 %mul2 to i32, !dbg !13689
  ret i32 %conv3, !dbg !13691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_get_regs(%struct.net_device* %dev, %struct.ethtool_regs* %regs, i8* %ptr) #2 !dbg !13692 {
entry:
  %lock.addr.i98 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i98, metadata !9351, metadata !DIExpression()), !dbg !13693
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !13695
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !13696
  %dev.addr = alloca %struct.net_device*, align 8
  %regs.addr = alloca %struct.ethtool_regs*, align 8
  %ptr.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %csr0 = alloca i32, align 4
  %buff = alloca i16*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %a = alloca %struct.pcnet32_access*, align 8
  %ioaddr = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13703, metadata !DIExpression()), !dbg !13704
  store %struct.ethtool_regs* %regs, %struct.ethtool_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_regs** %regs.addr, metadata !13705, metadata !DIExpression()), !dbg !13706
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13707, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13709, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.declare(metadata i32* %csr0, metadata !13711, metadata !DIExpression()), !dbg !13712
  call void @llvm.dbg.declare(metadata i16** %buff, metadata !13713, metadata !DIExpression()), !dbg !13715
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !13716
  %1 = bitcast i8* %0 to i16*, !dbg !13716
  store i16* %1, i16** %buff, align 8, !dbg !13715
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13717, metadata !DIExpression()), !dbg !13718
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13719
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !13720
  %3 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13720
  store %struct.pcnet32_private* %3, %struct.pcnet32_private** %lp, align 8, !dbg !13718
  call void @llvm.dbg.declare(metadata %struct.pcnet32_access** %a, metadata !13721, metadata !DIExpression()), !dbg !13722
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13723
  %a1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 10, !dbg !13724
  %5 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a1, align 8, !dbg !13724
  store %struct.pcnet32_access* %5, %struct.pcnet32_access** %a, align 8, !dbg !13722
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !13725, metadata !DIExpression()), !dbg !13726
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13727
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 5, !dbg !13728
  %7 = load i64, i64* %base_addr, align 8, !dbg !13728
  store i64 %7, i64* %ioaddr, align 8, !dbg !13726
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13729, metadata !DIExpression()), !dbg !13730
  br label %do.body, !dbg !13731

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13732

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13733, metadata !DIExpression()), !dbg !13735
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13736, metadata !DIExpression()), !dbg !13735
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13735
  %conv = zext i1 %cmp to i32, !dbg !13735
  store i32 1, i32* %tmp, align 4, !dbg !13735
  %8 = load i32, i32* %tmp, align 4, !dbg !13735
  br label %do.body3, !dbg !13737

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13738

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !13739

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !13741, metadata !DIExpression()), !dbg !13744
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !13745, metadata !DIExpression()), !dbg !13744
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !13744
  %conv9 = zext i1 %cmp8 to i32, !dbg !13744
  store i32 1, i32* %tmp10, align 4, !dbg !13744
  %9 = load i32, i32* %tmp10, align 4, !dbg !13744
  %call11 = call i64 @arch_local_irq_save() #12, !dbg !13746
  store i64 %call11, i64* %flags, align 8, !dbg !13746
  br label %do.end, !dbg !13746

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !13739

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !13738

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13747, !srcloc !13748
  br label %do.body14, !dbg !13747

do.body14:                                        ; preds = %do.body13
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13749
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 11, !dbg !13749
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13750
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !13751
  %rlock.i = bitcast %union.anon.46* %12 to %struct.raw_spinlock*, !dbg !13751
  br label %do.end16, !dbg !13749

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !13747

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13738

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !13737

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !13732

do.end20:                                         ; preds = %do.end19
  %13 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13752
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %13, i32 0, i32 0, !dbg !13753
  %14 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !13753
  %15 = load i64, i64* %ioaddr, align 8, !dbg !13754
  %call21 = call zeroext i16 %14(i64 %15, i32 0) #12, !dbg !13752
  %conv22 = zext i16 %call21 to i32, !dbg !13752
  store i32 %conv22, i32* %csr0, align 4, !dbg !13755
  %16 = load i32, i32* %csr0, align 4, !dbg !13756
  %and = and i32 %16, 4, !dbg !13758
  %tobool = icmp ne i32 %and, 0, !dbg !13758
  br i1 %tobool, label %if.end, label %if.then, !dbg !13759

if.then:                                          ; preds = %do.end20
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13760
  %call23 = call i32 @pcnet32_suspend(%struct.net_device* %17, i64* %flags, i32 1) #12, !dbg !13761
  br label %if.end, !dbg !13761

if.end:                                           ; preds = %if.then, %do.end20
  store i32 0, i32* %i, align 4, !dbg !13762
  br label %for.cond, !dbg !13764

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !13765
  %cmp24 = icmp slt i32 %18, 16, !dbg !13767
  br i1 %cmp24, label %for.body, label %for.end, !dbg !13768

for.body:                                         ; preds = %for.cond
  %19 = load i64, i64* %ioaddr, align 8, !dbg !13769
  %20 = load i32, i32* %i, align 4, !dbg !13770
  %conv26 = sext i32 %20 to i64, !dbg !13770
  %add = add i64 %19, %conv26, !dbg !13771
  %conv27 = trunc i64 %add to i32, !dbg !13769
  %call28 = call zeroext i16 @inw(i32 %conv27) #12, !dbg !13772
  %21 = load i16*, i16** %buff, align 8, !dbg !13773
  %incdec.ptr = getelementptr i16, i16* %21, i32 1, !dbg !13773
  store i16* %incdec.ptr, i16** %buff, align 8, !dbg !13773
  store i16 %call28, i16* %21, align 2, !dbg !13774
  br label %for.inc, !dbg !13775

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !13776
  %add29 = add i32 %22, 2, !dbg !13776
  store i32 %add29, i32* %i, align 4, !dbg !13776
  br label %for.cond, !dbg !13777, !llvm.loop !13778

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13780
  br label %for.cond30, !dbg !13782

for.cond30:                                       ; preds = %for.inc37, %for.end
  %23 = load i32, i32* %i, align 4, !dbg !13783
  %cmp31 = icmp slt i32 %23, 90, !dbg !13785
  br i1 %cmp31, label %for.body33, label %for.end38, !dbg !13786

for.body33:                                       ; preds = %for.cond30
  %24 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13787
  %read_csr34 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %24, i32 0, i32 0, !dbg !13788
  %25 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr34, align 8, !dbg !13788
  %26 = load i64, i64* %ioaddr, align 8, !dbg !13789
  %27 = load i32, i32* %i, align 4, !dbg !13790
  %call35 = call zeroext i16 %25(i64 %26, i32 %27) #12, !dbg !13787
  %28 = load i16*, i16** %buff, align 8, !dbg !13791
  %incdec.ptr36 = getelementptr i16, i16* %28, i32 1, !dbg !13791
  store i16* %incdec.ptr36, i16** %buff, align 8, !dbg !13791
  store i16 %call35, i16* %28, align 2, !dbg !13792
  br label %for.inc37, !dbg !13793

for.inc37:                                        ; preds = %for.body33
  %29 = load i32, i32* %i, align 4, !dbg !13794
  %inc = add i32 %29, 1, !dbg !13794
  store i32 %inc, i32* %i, align 4, !dbg !13794
  br label %for.cond30, !dbg !13795, !llvm.loop !13796

for.end38:                                        ; preds = %for.cond30
  %30 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13798
  %read_csr39 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %30, i32 0, i32 0, !dbg !13799
  %31 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr39, align 8, !dbg !13799
  %32 = load i64, i64* %ioaddr, align 8, !dbg !13800
  %call40 = call zeroext i16 %31(i64 %32, i32 112) #12, !dbg !13798
  %33 = load i16*, i16** %buff, align 8, !dbg !13801
  %incdec.ptr41 = getelementptr i16, i16* %33, i32 1, !dbg !13801
  store i16* %incdec.ptr41, i16** %buff, align 8, !dbg !13801
  store i16 %call40, i16* %33, align 2, !dbg !13802
  %34 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13803
  %read_csr42 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %34, i32 0, i32 0, !dbg !13804
  %35 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr42, align 8, !dbg !13804
  %36 = load i64, i64* %ioaddr, align 8, !dbg !13805
  %call43 = call zeroext i16 %35(i64 %36, i32 114) #12, !dbg !13803
  %37 = load i16*, i16** %buff, align 8, !dbg !13806
  %incdec.ptr44 = getelementptr i16, i16* %37, i32 1, !dbg !13806
  store i16* %incdec.ptr44, i16** %buff, align 8, !dbg !13806
  store i16 %call43, i16* %37, align 2, !dbg !13807
  store i32 0, i32* %i, align 4, !dbg !13808
  br label %for.cond45, !dbg !13810

for.cond45:                                       ; preds = %for.inc51, %for.end38
  %38 = load i32, i32* %i, align 4, !dbg !13811
  %cmp46 = icmp slt i32 %38, 30, !dbg !13813
  br i1 %cmp46, label %for.body48, label %for.end53, !dbg !13814

for.body48:                                       ; preds = %for.cond45
  %39 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13815
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %39, i32 0, i32 2, !dbg !13816
  %40 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !13816
  %41 = load i64, i64* %ioaddr, align 8, !dbg !13817
  %42 = load i32, i32* %i, align 4, !dbg !13818
  %call49 = call zeroext i16 %40(i64 %41, i32 %42) #12, !dbg !13815
  %43 = load i16*, i16** %buff, align 8, !dbg !13819
  %incdec.ptr50 = getelementptr i16, i16* %43, i32 1, !dbg !13819
  store i16* %incdec.ptr50, i16** %buff, align 8, !dbg !13819
  store i16 %call49, i16* %43, align 2, !dbg !13820
  br label %for.inc51, !dbg !13821

for.inc51:                                        ; preds = %for.body48
  %44 = load i32, i32* %i, align 4, !dbg !13822
  %inc52 = add i32 %44, 1, !dbg !13822
  store i32 %inc52, i32* %i, align 4, !dbg !13822
  br label %for.cond45, !dbg !13823, !llvm.loop !13824

for.end53:                                        ; preds = %for.cond45
  %45 = load i16*, i16** %buff, align 8, !dbg !13826
  %incdec.ptr54 = getelementptr i16, i16* %45, i32 1, !dbg !13826
  store i16* %incdec.ptr54, i16** %buff, align 8, !dbg !13826
  store i16 0, i16* %45, align 2, !dbg !13827
  store i32 31, i32* %i, align 4, !dbg !13828
  br label %for.cond55, !dbg !13830

for.cond55:                                       ; preds = %for.inc62, %for.end53
  %46 = load i32, i32* %i, align 4, !dbg !13831
  %cmp56 = icmp slt i32 %46, 36, !dbg !13833
  br i1 %cmp56, label %for.body58, label %for.end64, !dbg !13834

for.body58:                                       ; preds = %for.cond55
  %47 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !13835
  %read_bcr59 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %47, i32 0, i32 2, !dbg !13836
  %48 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr59, align 8, !dbg !13836
  %49 = load i64, i64* %ioaddr, align 8, !dbg !13837
  %50 = load i32, i32* %i, align 4, !dbg !13838
  %call60 = call zeroext i16 %48(i64 %49, i32 %50) #12, !dbg !13835
  %51 = load i16*, i16** %buff, align 8, !dbg !13839
  %incdec.ptr61 = getelementptr i16, i16* %51, i32 1, !dbg !13839
  store i16* %incdec.ptr61, i16** %buff, align 8, !dbg !13839
  store i16 %call60, i16* %51, align 2, !dbg !13840
  br label %for.inc62, !dbg !13841

for.inc62:                                        ; preds = %for.body58
  %52 = load i32, i32* %i, align 4, !dbg !13842
  %inc63 = add i32 %52, 1, !dbg !13842
  store i32 %inc63, i32* %i, align 4, !dbg !13842
  br label %for.cond55, !dbg !13843, !llvm.loop !13844

for.end64:                                        ; preds = %for.cond55
  %53 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13846
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %53, i32 0, i32 29, !dbg !13848
  %bf.load = load i8, i8* %mii, align 8, !dbg !13848
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !13848
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13848
  %bf.cast = zext i8 %bf.clear to i32, !dbg !13848
  %tobool65 = icmp ne i32 %bf.cast, 0, !dbg !13846
  br i1 %tobool65, label %if.then66, label %if.end92, !dbg !13849

if.then66:                                        ; preds = %for.end64
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13850, metadata !DIExpression()), !dbg !13852
  store i32 0, i32* %j, align 4, !dbg !13853
  br label %for.cond67, !dbg !13855

for.cond67:                                       ; preds = %for.inc89, %if.then66
  %54 = load i32, i32* %j, align 4, !dbg !13856
  %cmp68 = icmp slt i32 %54, 32, !dbg !13858
  br i1 %cmp68, label %for.body70, label %for.end91, !dbg !13859

for.body70:                                       ; preds = %for.cond67
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13860
  %phymask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 34, !dbg !13863
  %56 = load i32, i32* %phymask, align 4, !dbg !13863
  %57 = load i32, i32* %j, align 4, !dbg !13864
  %shl = shl i32 1, %57, !dbg !13865
  %and71 = and i32 %56, %shl, !dbg !13866
  %tobool72 = icmp ne i32 %and71, 0, !dbg !13866
  br i1 %tobool72, label %if.then73, label %if.end88, !dbg !13867

if.then73:                                        ; preds = %for.body70
  store i32 0, i32* %i, align 4, !dbg !13868
  br label %for.cond74, !dbg !13871

for.cond74:                                       ; preds = %for.inc85, %if.then73
  %58 = load i32, i32* %i, align 4, !dbg !13872
  %cmp75 = icmp slt i32 %58, 32, !dbg !13874
  br i1 %cmp75, label %for.body77, label %for.end87, !dbg !13875

for.body77:                                       ; preds = %for.cond74
  %59 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13876
  %a78 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %59, i32 0, i32 10, !dbg !13878
  %60 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a78, align 8, !dbg !13878
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %60, i32 0, i32 3, !dbg !13879
  %61 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !13879
  %62 = load i64, i64* %ioaddr, align 8, !dbg !13880
  %63 = load i32, i32* %j, align 4, !dbg !13881
  %shl79 = shl i32 %63, 5, !dbg !13882
  %64 = load i32, i32* %i, align 4, !dbg !13883
  %or = or i32 %shl79, %64, !dbg !13884
  %conv80 = trunc i32 %or to i16, !dbg !13885
  call void %61(i64 %62, i32 33, i16 zeroext %conv80) #12, !dbg !13876
  %65 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13886
  %a81 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %65, i32 0, i32 10, !dbg !13887
  %66 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a81, align 8, !dbg !13887
  %read_bcr82 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %66, i32 0, i32 2, !dbg !13888
  %67 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr82, align 8, !dbg !13888
  %68 = load i64, i64* %ioaddr, align 8, !dbg !13889
  %call83 = call zeroext i16 %67(i64 %68, i32 34) #12, !dbg !13886
  %69 = load i16*, i16** %buff, align 8, !dbg !13890
  %incdec.ptr84 = getelementptr i16, i16* %69, i32 1, !dbg !13890
  store i16* %incdec.ptr84, i16** %buff, align 8, !dbg !13890
  store i16 %call83, i16* %69, align 2, !dbg !13891
  br label %for.inc85, !dbg !13892

for.inc85:                                        ; preds = %for.body77
  %70 = load i32, i32* %i, align 4, !dbg !13893
  %inc86 = add i32 %70, 1, !dbg !13893
  store i32 %inc86, i32* %i, align 4, !dbg !13893
  br label %for.cond74, !dbg !13894, !llvm.loop !13895

for.end87:                                        ; preds = %for.cond74
  br label %if.end88, !dbg !13897

if.end88:                                         ; preds = %for.end87, %for.body70
  br label %for.inc89, !dbg !13898

for.inc89:                                        ; preds = %if.end88
  %71 = load i32, i32* %j, align 4, !dbg !13899
  %inc90 = add i32 %71, 1, !dbg !13899
  store i32 %inc90, i32* %j, align 4, !dbg !13899
  br label %for.cond67, !dbg !13900, !llvm.loop !13901

for.end91:                                        ; preds = %for.cond67
  br label %if.end92, !dbg !13903

if.end92:                                         ; preds = %for.end91, %for.end64
  %72 = load i32, i32* %csr0, align 4, !dbg !13904
  %and93 = and i32 %72, 4, !dbg !13906
  %tobool94 = icmp ne i32 %and93, 0, !dbg !13906
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !13907

if.then95:                                        ; preds = %if.end92
  %73 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13908
  %74 = load i64, i64* %ioaddr, align 8, !dbg !13909
  call void @pcnet32_clr_suspend(%struct.pcnet32_private* %73, i64 %74) #12, !dbg !13910
  br label %if.end96, !dbg !13910

if.end96:                                         ; preds = %if.then95, %if.end92
  %75 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13911
  %lock97 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %75, i32 0, i32 11, !dbg !13912
  %76 = load i64, i64* %flags, align 8, !dbg !13913
  store %struct.spinlock* %lock97, %struct.spinlock** %lock.addr.i98, align 8
  store i64 %76, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !13914
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !13914
  store i32 1, i32* %tmp.i, align 4, !dbg !13914
  %77 = load i32, i32* %tmp.i, align 4, !dbg !13914
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !13915
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !13915
  store i32 1, i32* %tmp8.i, align 4, !dbg !13915
  %78 = load i32, i32* %tmp8.i, align 4, !dbg !13915
  %79 = load i64, i64* %flags.addr.i, align 8, !dbg !13916
  call void @arch_local_irq_restore(i64 %79) #14, !dbg !13916
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13917, !srcloc !9478
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i98, align 8, !dbg !13918
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !13918
  %rlock.i99 = bitcast %union.anon.46* %81 to %struct.raw_spinlock*, !dbg !13918
  ret void, !dbg !13919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_get_msglevel(%struct.net_device* %dev) #2 !dbg !13920 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13921, metadata !DIExpression()), !dbg !13922
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13923, metadata !DIExpression()), !dbg !13924
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13925
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13926
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13926
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13924
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13927
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 33, !dbg !13928
  %3 = load i32, i32* %msg_enable, align 8, !dbg !13928
  ret i32 %3, !dbg !13929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_set_msglevel(%struct.net_device* %dev, i32 %value) #2 !dbg !13930 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %value.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13931, metadata !DIExpression()), !dbg !13932
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !13933, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13935, metadata !DIExpression()), !dbg !13936
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13937
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13938
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13938
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13936
  %2 = load i32, i32* %value.addr, align 4, !dbg !13939
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13940
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 33, !dbg !13941
  store i32 %2, i32* %msg_enable, align 8, !dbg !13942
  ret void, !dbg !13943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_nway_reset(%struct.net_device* %dev) #2 !dbg !13944 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !9351, metadata !DIExpression()), !dbg !13945
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !13949
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !13950
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %flags = alloca i64, align 8
  %r = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13957, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !13959, metadata !DIExpression()), !dbg !13960
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13961
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13962
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !13962
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !13960
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13963, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13965, metadata !DIExpression()), !dbg !13966
  store i32 -95, i32* %r, align 4, !dbg !13966
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13967
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 29, !dbg !13968
  %bf.load = load i8, i8* %mii, align 8, !dbg !13968
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !13968
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13968
  %bf.cast = zext i8 %bf.clear to i32, !dbg !13968
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13967
  br i1 %tobool, label %if.then, label %if.end, !dbg !13969

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13970

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !13971

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13972, metadata !DIExpression()), !dbg !13974
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13975, metadata !DIExpression()), !dbg !13974
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13974
  %conv = zext i1 %cmp to i32, !dbg !13974
  store i32 1, i32* %tmp, align 4, !dbg !13974
  %3 = load i32, i32* %tmp, align 4, !dbg !13974
  br label %do.body2, !dbg !13976

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13977

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13978

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13980, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13984, metadata !DIExpression()), !dbg !13983
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13983
  %conv8 = zext i1 %cmp7 to i32, !dbg !13983
  store i32 1, i32* %tmp9, align 4, !dbg !13983
  %4 = load i32, i32* %tmp9, align 4, !dbg !13983
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !13985
  store i64 %call10, i64* %flags, align 8, !dbg !13985
  br label %do.end, !dbg !13985

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !13978

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !13977

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13986, !srcloc !13987
  br label %do.body13, !dbg !13986

do.body13:                                        ; preds = %do.body12
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13988
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 11, !dbg !13988
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13989
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !13990
  %rlock.i = bitcast %union.anon.46* %7 to %struct.raw_spinlock*, !dbg !13990
  br label %do.end15, !dbg !13988

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !13986

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13977

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13976

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !13971

do.end19:                                         ; preds = %do.end18
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13991
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 31, !dbg !13992
  %call20 = call i32 @mii_nway_restart(%struct.mii_if_info* %mii_if) #12, !dbg !13993
  store i32 %call20, i32* %r, align 4, !dbg !13994
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !13995
  %lock21 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 11, !dbg !13996
  %10 = load i64, i64* %flags, align 8, !dbg !13997
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !13998
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !13998
  store i32 1, i32* %tmp.i, align 4, !dbg !13998
  %11 = load i32, i32* %tmp.i, align 4, !dbg !13998
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !13999
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !13999
  store i32 1, i32* %tmp8.i, align 4, !dbg !13999
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !13999
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !14000
  call void @arch_local_irq_restore(i64 %13) #14, !dbg !14000
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14001, !srcloc !9478
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !14002
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !14002
  %rlock.i23 = bitcast %union.anon.46* %15 to %struct.raw_spinlock*, !dbg !14002
  br label %if.end, !dbg !14003

if.end:                                           ; preds = %do.end19, %entry
  %16 = load i32, i32* %r, align 4, !dbg !14004
  ret i32 %16, !dbg !14005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_get_link(%struct.net_device* %dev) #2 !dbg !14006 {
entry:
  %lock.addr.i60 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i60, metadata !9351, metadata !DIExpression()), !dbg !14007
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !14009
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !14010
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %flags = alloca i64, align 8
  %r = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %ioaddr = alloca i64, align 8
  %ioaddr47 = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14017, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14019, metadata !DIExpression()), !dbg !14020
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14021
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14022
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14022
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14020
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14023, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14025, metadata !DIExpression()), !dbg !14026
  br label %do.body, !dbg !14027

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14028

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14029, metadata !DIExpression()), !dbg !14031
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14032, metadata !DIExpression()), !dbg !14031
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14031
  %conv = zext i1 %cmp to i32, !dbg !14031
  store i32 1, i32* %tmp, align 4, !dbg !14031
  %2 = load i32, i32* %tmp, align 4, !dbg !14031
  br label %do.body2, !dbg !14033

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14034

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14035

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14037, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14041, metadata !DIExpression()), !dbg !14040
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14040
  %conv8 = zext i1 %cmp7 to i32, !dbg !14040
  store i32 1, i32* %tmp9, align 4, !dbg !14040
  %3 = load i32, i32* %tmp9, align 4, !dbg !14040
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !14042
  store i64 %call10, i64* %flags, align 8, !dbg !14042
  br label %do.end, !dbg !14042

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !14035

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !14034

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14043, !srcloc !14044
  br label %do.body13, !dbg !14043

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14045
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 11, !dbg !14045
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14046
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !14047
  %rlock.i = bitcast %union.anon.46* %6 to %struct.raw_spinlock*, !dbg !14047
  br label %do.end15, !dbg !14045

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !14043

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14034

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14033

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14028

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14048
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %7, i32 0, i32 29, !dbg !14050
  %bf.load = load i8, i8* %mii, align 8, !dbg !14050
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !14050
  %bf.clear = and i8 %bf.lshr, 1, !dbg !14050
  %bf.cast = zext i8 %bf.clear to i32, !dbg !14050
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14048
  br i1 %tobool, label %if.then, label %if.else, !dbg !14051

if.then:                                          ; preds = %do.end19
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14052
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 31, !dbg !14054
  %call20 = call i32 @mii_link_ok(%struct.mii_if_info* %mii_if) #12, !dbg !14055
  store i32 %call20, i32* %r, align 4, !dbg !14056
  br label %if.end58, !dbg !14057

if.else:                                          ; preds = %do.end19
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14058
  %chip_version = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 35, !dbg !14060
  %10 = load i16, i16* %chip_version, align 8, !dbg !14060
  %conv21 = zext i16 %10 to i32, !dbg !14058
  %cmp22 = icmp eq i32 %conv21, 9761, !dbg !14061
  br i1 %cmp22, label %if.then24, label %if.else41, !dbg !14062

if.then24:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !14063, metadata !DIExpression()), !dbg !14065
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14066
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 5, !dbg !14067
  %12 = load i64, i64* %base_addr, align 8, !dbg !14067
  store i64 %12, i64* %ioaddr, align 8, !dbg !14065
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14068
  %autoneg = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 29, !dbg !14070
  %bf.load25 = load i8, i8* %autoneg, align 8, !dbg !14070
  %bf.lshr26 = lshr i8 %bf.load25, 3, !dbg !14070
  %bf.clear27 = and i8 %bf.lshr26, 1, !dbg !14070
  %bf.cast28 = zext i8 %bf.clear27 to i32, !dbg !14070
  %tobool29 = icmp ne i32 %bf.cast28, 0, !dbg !14068
  br i1 %tobool29, label %if.else40, label %land.lhs.true, !dbg !14071

land.lhs.true:                                    ; preds = %if.then24
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14072
  %port_tp = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 29, !dbg !14073
  %bf.load30 = load i8, i8* %port_tp, align 8, !dbg !14073
  %bf.lshr31 = lshr i8 %bf.load30, 4, !dbg !14073
  %bf.clear32 = and i8 %bf.lshr31, 1, !dbg !14073
  %bf.cast33 = zext i8 %bf.clear32 to i32, !dbg !14073
  %tobool34 = icmp ne i32 %bf.cast33, 0, !dbg !14072
  br i1 %tobool34, label %if.then35, label %if.else40, !dbg !14074

if.then35:                                        ; preds = %land.lhs.true
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14075
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %15, i32 0, i32 10, !dbg !14076
  %16 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14076
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %16, i32 0, i32 2, !dbg !14077
  %17 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !14077
  %18 = load i64, i64* %ioaddr, align 8, !dbg !14078
  %call36 = call zeroext i16 %17(i64 %18, i32 4) #12, !dbg !14075
  %conv37 = zext i16 %call36 to i32, !dbg !14075
  %cmp38 = icmp ne i32 %conv37, 192, !dbg !14079
  %conv39 = zext i1 %cmp38 to i32, !dbg !14079
  store i32 %conv39, i32* %r, align 4, !dbg !14080
  br label %if.end, !dbg !14081

if.else40:                                        ; preds = %land.lhs.true, %if.then24
  store i32 1, i32* %r, align 4, !dbg !14082
  br label %if.end

if.end:                                           ; preds = %if.else40, %if.then35
  br label %if.end57, !dbg !14083

if.else41:                                        ; preds = %if.else
  %19 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14084
  %chip_version42 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %19, i32 0, i32 35, !dbg !14086
  %20 = load i16, i16* %chip_version42, align 8, !dbg !14086
  %conv43 = zext i16 %20 to i32, !dbg !14084
  %cmp44 = icmp sgt i32 %conv43, 9761, !dbg !14087
  br i1 %cmp44, label %if.then46, label %if.else55, !dbg !14088

if.then46:                                        ; preds = %if.else41
  call void @llvm.dbg.declare(metadata i64* %ioaddr47, metadata !14089, metadata !DIExpression()), !dbg !14091
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14092
  %base_addr48 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 5, !dbg !14093
  %22 = load i64, i64* %base_addr48, align 8, !dbg !14093
  store i64 %22, i64* %ioaddr47, align 8, !dbg !14091
  %23 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14094
  %a49 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %23, i32 0, i32 10, !dbg !14095
  %24 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a49, align 8, !dbg !14095
  %read_bcr50 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %24, i32 0, i32 2, !dbg !14096
  %25 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr50, align 8, !dbg !14096
  %26 = load i64, i64* %ioaddr47, align 8, !dbg !14097
  %call51 = call zeroext i16 %25(i64 %26, i32 4) #12, !dbg !14094
  %conv52 = zext i16 %call51 to i32, !dbg !14094
  %cmp53 = icmp ne i32 %conv52, 192, !dbg !14098
  %conv54 = zext i1 %cmp53 to i32, !dbg !14098
  store i32 %conv54, i32* %r, align 4, !dbg !14099
  br label %if.end56, !dbg !14100

if.else55:                                        ; preds = %if.else41
  store i32 1, i32* %r, align 4, !dbg !14101
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then46
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then
  %27 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14103
  %lock59 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %27, i32 0, i32 11, !dbg !14104
  %28 = load i64, i64* %flags, align 8, !dbg !14105
  store %struct.spinlock* %lock59, %struct.spinlock** %lock.addr.i60, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !14106
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !14106
  store i32 1, i32* %tmp.i, align 4, !dbg !14106
  %29 = load i32, i32* %tmp.i, align 4, !dbg !14106
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !14107
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !14107
  store i32 1, i32* %tmp8.i, align 4, !dbg !14107
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !14107
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !14108
  call void @arch_local_irq_restore(i64 %31) #14, !dbg !14108
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14109, !srcloc !9478
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i60, align 8, !dbg !14110
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !14110
  %rlock.i61 = bitcast %union.anon.46* %33 to %struct.raw_spinlock*, !dbg !14110
  %34 = load i32, i32* %r, align 4, !dbg !14111
  ret i32 %34, !dbg !14112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_get_ringparam(%struct.net_device* %dev, %struct.ethtool_ringparam* %ering) #2 !dbg !14113 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ering.addr = alloca %struct.ethtool_ringparam*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14114, metadata !DIExpression()), !dbg !14115
  store %struct.ethtool_ringparam* %ering, %struct.ethtool_ringparam** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ering.addr, metadata !14116, metadata !DIExpression()), !dbg !14117
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14118, metadata !DIExpression()), !dbg !14119
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14120
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14121
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14121
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14119
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14122
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 4, !dbg !14123
  store i32 512, i32* %tx_max_pending, align 4, !dbg !14124
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14125
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 15, !dbg !14126
  %4 = load i32, i32* %tx_ring_size, align 4, !dbg !14126
  %5 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14127
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %5, i32 0, i32 8, !dbg !14128
  store i32 %4, i32* %tx_pending, align 4, !dbg !14129
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14130
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 1, !dbg !14131
  store i32 512, i32* %rx_max_pending, align 4, !dbg !14132
  %7 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14133
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %7, i32 0, i32 14, !dbg !14134
  %8 = load i32, i32* %rx_ring_size, align 8, !dbg !14134
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14135
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 5, !dbg !14136
  store i32 %8, i32* %rx_pending, align 4, !dbg !14137
  ret void, !dbg !14138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_set_ringparam(%struct.net_device* %dev, %struct.ethtool_ringparam* %ering) #2 !dbg !14139 {
entry:
  %lock.addr.i74 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i74, metadata !9351, metadata !DIExpression()), !dbg !14140
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !14142
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !14143
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ering.addr = alloca %struct.ethtool_ringparam*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %flags = alloca i64, align 8
  %size = alloca i32, align 4
  %ioaddr = alloca i64, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__UNIQUE_ID___x321 = alloca i32, align 4
  %__UNIQUE_ID___y322 = alloca i32, align 4
  %tmp24 = alloca i32, align 4
  %__UNIQUE_ID___x323 = alloca i32, align 4
  %__UNIQUE_ID___y324 = alloca i32, align 4
  %tmp38 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14150, metadata !DIExpression()), !dbg !14151
  store %struct.ethtool_ringparam* %ering, %struct.ethtool_ringparam** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ering.addr, metadata !14152, metadata !DIExpression()), !dbg !14153
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14154, metadata !DIExpression()), !dbg !14155
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14156
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14157
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14157
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14155
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14158, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.declare(metadata i32* %size, metadata !14160, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !14162, metadata !DIExpression()), !dbg !14163
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14164
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !14165
  %3 = load i64, i64* %base_addr, align 8, !dbg !14165
  store i64 %3, i64* %ioaddr, align 8, !dbg !14163
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14166, metadata !DIExpression()), !dbg !14167
  %4 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14168
  %rx_mini_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %4, i32 0, i32 6, !dbg !14170
  %5 = load i32, i32* %rx_mini_pending, align 4, !dbg !14170
  %tobool = icmp ne i32 %5, 0, !dbg !14168
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14171

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14172
  %rx_jumbo_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 7, !dbg !14173
  %7 = load i32, i32* %rx_jumbo_pending, align 4, !dbg !14173
  %tobool1 = icmp ne i32 %7, 0, !dbg !14172
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14174

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !14175
  br label %return, !dbg !14175

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14176
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %8) #12, !dbg !14178
  br i1 %call2, label %if.then3, label %if.end4, !dbg !14179

if.then3:                                         ; preds = %if.end
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14180
  call void @pcnet32_netif_stop(%struct.net_device* %9) #12, !dbg !14181
  br label %if.end4, !dbg !14181

if.end4:                                          ; preds = %if.then3, %if.end
  br label %do.body, !dbg !14182

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !14183

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14184, metadata !DIExpression()), !dbg !14186
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14187, metadata !DIExpression()), !dbg !14186
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14186
  %conv = zext i1 %cmp to i32, !dbg !14186
  store i32 1, i32* %tmp, align 4, !dbg !14186
  %10 = load i32, i32* %tmp, align 4, !dbg !14186
  br label %do.body6, !dbg !14188

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !14189

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !14190

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !14192, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !14196, metadata !DIExpression()), !dbg !14195
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !14195
  %conv12 = zext i1 %cmp11 to i32, !dbg !14195
  store i32 1, i32* %tmp13, align 4, !dbg !14195
  %11 = load i32, i32* %tmp13, align 4, !dbg !14195
  %call14 = call i64 @arch_local_irq_save() #12, !dbg !14197
  store i64 %call14, i64* %flags, align 8, !dbg !14197
  br label %do.end, !dbg !14197

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !14190

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !14189

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14198, !srcloc !14199
  br label %do.body17, !dbg !14198

do.body17:                                        ; preds = %do.body16
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14200
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 11, !dbg !14200
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14201
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !14202
  %rlock.i = bitcast %union.anon.46* %14 to %struct.raw_spinlock*, !dbg !14202
  br label %do.end19, !dbg !14200

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !14198

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !14189

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !14188

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !14183

do.end23:                                         ; preds = %do.end22
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14203
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %15, i32 0, i32 10, !dbg !14204
  %16 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14204
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %16, i32 0, i32 1, !dbg !14205
  %17 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !14205
  %18 = load i64, i64* %ioaddr, align 8, !dbg !14206
  call void %17(i64 %18, i32 0, i16 zeroext 4) #12, !dbg !14203
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x321, metadata !14207, metadata !DIExpression()), !dbg !14209
  %19 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14209
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %19, i32 0, i32 8, !dbg !14209
  %20 = load i32, i32* %tx_pending, align 4, !dbg !14209
  store i32 %20, i32* %__UNIQUE_ID___x321, align 4, !dbg !14209
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y322, metadata !14210, metadata !DIExpression()), !dbg !14209
  store i32 512, i32* %__UNIQUE_ID___y322, align 4, !dbg !14209
  %21 = load i32, i32* %__UNIQUE_ID___x321, align 4, !dbg !14209
  %22 = load i32, i32* %__UNIQUE_ID___y322, align 4, !dbg !14209
  %cmp25 = icmp ult i32 %21, %22, !dbg !14209
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !14209

cond.true:                                        ; preds = %do.end23
  %23 = load i32, i32* %__UNIQUE_ID___x321, align 4, !dbg !14209
  br label %cond.end, !dbg !14209

cond.false:                                       ; preds = %do.end23
  %24 = load i32, i32* %__UNIQUE_ID___y322, align 4, !dbg !14209
  br label %cond.end, !dbg !14209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %24, %cond.false ], !dbg !14209
  store i32 %cond, i32* %tmp24, align 4, !dbg !14209
  %25 = load i32, i32* %tmp24, align 4, !dbg !14209
  store i32 %25, i32* %size, align 4, !dbg !14211
  store i32 2, i32* %i, align 4, !dbg !14212
  br label %for.cond, !dbg !14214

for.cond:                                         ; preds = %for.inc, %cond.end
  %26 = load i32, i32* %i, align 4, !dbg !14215
  %cmp27 = icmp sle i32 %26, 9, !dbg !14217
  br i1 %cmp27, label %for.body, label %for.end, !dbg !14218

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %size, align 4, !dbg !14219
  %28 = load i32, i32* %i, align 4, !dbg !14222
  %shl = shl i32 1, %28, !dbg !14223
  %cmp29 = icmp ule i32 %27, %shl, !dbg !14224
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14225

if.then31:                                        ; preds = %for.body
  br label %for.end, !dbg !14226

if.end32:                                         ; preds = %for.body
  br label %for.inc, !dbg !14227

for.inc:                                          ; preds = %if.end32
  %29 = load i32, i32* %i, align 4, !dbg !14228
  %inc = add i32 %29, 1, !dbg !14228
  store i32 %inc, i32* %i, align 4, !dbg !14228
  br label %for.cond, !dbg !14229, !llvm.loop !14230

for.end:                                          ; preds = %if.then31, %for.cond
  %30 = load i32, i32* %i, align 4, !dbg !14232
  %shl33 = shl i32 1, %30, !dbg !14234
  %31 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14235
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %31, i32 0, i32 15, !dbg !14236
  %32 = load i32, i32* %tx_ring_size, align 4, !dbg !14236
  %cmp34 = icmp ne i32 %shl33, %32, !dbg !14237
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !14238

if.then36:                                        ; preds = %for.end
  %33 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14239
  %34 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14240
  %35 = load i32, i32* %i, align 4, !dbg !14241
  call void @pcnet32_realloc_tx_ring(%struct.net_device* %33, %struct.pcnet32_private* %34, i32 %35) #12, !dbg !14242
  br label %if.end37, !dbg !14242

if.end37:                                         ; preds = %if.then36, %for.end
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x323, metadata !14243, metadata !DIExpression()), !dbg !14245
  %36 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ering.addr, align 8, !dbg !14245
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %36, i32 0, i32 5, !dbg !14245
  %37 = load i32, i32* %rx_pending, align 4, !dbg !14245
  store i32 %37, i32* %__UNIQUE_ID___x323, align 4, !dbg !14245
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y324, metadata !14246, metadata !DIExpression()), !dbg !14245
  store i32 512, i32* %__UNIQUE_ID___y324, align 4, !dbg !14245
  %38 = load i32, i32* %__UNIQUE_ID___x323, align 4, !dbg !14245
  %39 = load i32, i32* %__UNIQUE_ID___y324, align 4, !dbg !14245
  %cmp39 = icmp ult i32 %38, %39, !dbg !14245
  br i1 %cmp39, label %cond.true41, label %cond.false42, !dbg !14245

cond.true41:                                      ; preds = %if.end37
  %40 = load i32, i32* %__UNIQUE_ID___x323, align 4, !dbg !14245
  br label %cond.end43, !dbg !14245

cond.false42:                                     ; preds = %if.end37
  %41 = load i32, i32* %__UNIQUE_ID___y324, align 4, !dbg !14245
  br label %cond.end43, !dbg !14245

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi i32 [ %40, %cond.true41 ], [ %41, %cond.false42 ], !dbg !14245
  store i32 %cond44, i32* %tmp38, align 4, !dbg !14245
  %42 = load i32, i32* %tmp38, align 4, !dbg !14245
  store i32 %42, i32* %size, align 4, !dbg !14247
  store i32 2, i32* %i, align 4, !dbg !14248
  br label %for.cond45, !dbg !14250

for.cond45:                                       ; preds = %for.inc54, %cond.end43
  %43 = load i32, i32* %i, align 4, !dbg !14251
  %cmp46 = icmp sle i32 %43, 9, !dbg !14253
  br i1 %cmp46, label %for.body48, label %for.end56, !dbg !14254

for.body48:                                       ; preds = %for.cond45
  %44 = load i32, i32* %size, align 4, !dbg !14255
  %45 = load i32, i32* %i, align 4, !dbg !14258
  %shl49 = shl i32 1, %45, !dbg !14259
  %cmp50 = icmp ule i32 %44, %shl49, !dbg !14260
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !14261

if.then52:                                        ; preds = %for.body48
  br label %for.end56, !dbg !14262

if.end53:                                         ; preds = %for.body48
  br label %for.inc54, !dbg !14263

for.inc54:                                        ; preds = %if.end53
  %46 = load i32, i32* %i, align 4, !dbg !14264
  %inc55 = add i32 %46, 1, !dbg !14264
  store i32 %inc55, i32* %i, align 4, !dbg !14264
  br label %for.cond45, !dbg !14265, !llvm.loop !14266

for.end56:                                        ; preds = %if.then52, %for.cond45
  %47 = load i32, i32* %i, align 4, !dbg !14268
  %shl57 = shl i32 1, %47, !dbg !14270
  %48 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14271
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %48, i32 0, i32 14, !dbg !14272
  %49 = load i32, i32* %rx_ring_size, align 8, !dbg !14272
  %cmp58 = icmp ne i32 %shl57, %49, !dbg !14273
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !14274

if.then60:                                        ; preds = %for.end56
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14275
  %51 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14276
  %52 = load i32, i32* %i, align 4, !dbg !14277
  call void @pcnet32_realloc_rx_ring(%struct.net_device* %50, %struct.pcnet32_private* %51, i32 %52) #12, !dbg !14278
  br label %if.end61, !dbg !14278

if.end61:                                         ; preds = %if.then60, %for.end56
  %53 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14279
  %rx_ring_size62 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %53, i32 0, i32 14, !dbg !14280
  %54 = load i32, i32* %rx_ring_size62, align 8, !dbg !14280
  %div = udiv i32 %54, 2, !dbg !14281
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14282
  %napi = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 25, !dbg !14283
  %weight = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %napi, i32 0, i32 2, !dbg !14284
  store i32 %div, i32* %weight, align 8, !dbg !14285
  %56 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14286
  %call63 = call zeroext i1 @netif_running(%struct.net_device* %56) #12, !dbg !14288
  br i1 %call63, label %if.then64, label %if.end65, !dbg !14289

if.then64:                                        ; preds = %if.end61
  %57 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14290
  call void @pcnet32_netif_start(%struct.net_device* %57) #12, !dbg !14292
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14293
  call void @pcnet32_restart(%struct.net_device* %58, i32 66) #12, !dbg !14294
  br label %if.end65, !dbg !14295

if.end65:                                         ; preds = %if.then64, %if.end61
  %59 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14296
  %lock66 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %59, i32 0, i32 11, !dbg !14297
  %60 = load i64, i64* %flags, align 8, !dbg !14298
  store %struct.spinlock* %lock66, %struct.spinlock** %lock.addr.i74, align 8
  store i64 %60, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !14299
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !14299
  store i32 1, i32* %tmp.i, align 4, !dbg !14299
  %61 = load i32, i32* %tmp.i, align 4, !dbg !14299
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !14300
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !14300
  store i32 1, i32* %tmp8.i, align 4, !dbg !14300
  %62 = load i32, i32* %tmp8.i, align 4, !dbg !14300
  %63 = load i64, i64* %flags.addr.i, align 8, !dbg !14301
  call void @arch_local_irq_restore(i64 %63) #14, !dbg !14301
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14302, !srcloc !9478
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i74, align 8, !dbg !14303
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !14303
  %rlock.i75 = bitcast %union.anon.46* %65 to %struct.raw_spinlock*, !dbg !14303
  br label %do.body67, !dbg !14304

do.body67:                                        ; preds = %if.end65
  %66 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14305
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %66, i32 0, i32 33, !dbg !14305
  %67 = load i32, i32* %msg_enable, align 8, !dbg !14305
  %and = and i32 %67, 1, !dbg !14305
  %tobool68 = icmp ne i32 %and, 0, !dbg !14305
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !14308

if.then69:                                        ; preds = %do.body67
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14305
  %69 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14305
  %rx_ring_size70 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %69, i32 0, i32 14, !dbg !14305
  %70 = load i32, i32* %rx_ring_size70, align 8, !dbg !14305
  %71 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14305
  %tx_ring_size71 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %71, i32 0, i32 15, !dbg !14305
  %72 = load i32, i32* %tx_ring_size71, align 4, !dbg !14305
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %68, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.84, i64 0, i64 0), i32 %70, i32 %72) #13, !dbg !14305
  br label %if.end72, !dbg !14305

if.end72:                                         ; preds = %if.then69, %do.body67
  br label %do.end73, !dbg !14308

do.end73:                                         ; preds = %if.end72
  store i32 0, i32* %retval, align 4, !dbg !14309
  br label %return, !dbg !14309

return:                                           ; preds = %do.end73, %if.then
  %73 = load i32, i32* %retval, align 4, !dbg !14310
  ret i32 %73, !dbg !14310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_ethtool_test(%struct.net_device* %dev, %struct.ethtool_test* %test, i64* %data) #2 !dbg !14311 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %test.addr = alloca %struct.ethtool_test*, align 8
  %data.addr = alloca i64*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %rc = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14312, metadata !DIExpression()), !dbg !14313
  store %struct.ethtool_test* %test, %struct.ethtool_test** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_test** %test.addr, metadata !14314, metadata !DIExpression()), !dbg !14315
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14318, metadata !DIExpression()), !dbg !14319
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14320
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14321
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14321
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14319
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !14322, metadata !DIExpression()), !dbg !14323
  %2 = load %struct.ethtool_test*, %struct.ethtool_test** %test.addr, align 8, !dbg !14324
  %flags = getelementptr inbounds %struct.ethtool_test, %struct.ethtool_test* %2, i32 0, i32 1, !dbg !14326
  %3 = load i32, i32* %flags, align 4, !dbg !14326
  %cmp = icmp eq i32 %3, 1, !dbg !14327
  br i1 %cmp, label %if.then, label %if.else14, !dbg !14328

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14329
  %5 = load i64*, i64** %data.addr, align 8, !dbg !14331
  %call1 = call i32 @pcnet32_loopback_test(%struct.net_device* %4, i64* %5) #12, !dbg !14332
  store i32 %call1, i32* %rc, align 4, !dbg !14333
  %6 = load i32, i32* %rc, align 4, !dbg !14334
  %tobool = icmp ne i32 %6, 0, !dbg !14334
  br i1 %tobool, label %if.then2, label %if.else, !dbg !14336

if.then2:                                         ; preds = %if.then
  br label %do.body, !dbg !14337

do.body:                                          ; preds = %if.then2
  %7 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14339
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %7, i32 0, i32 33, !dbg !14339
  %8 = load i32, i32* %msg_enable, align 8, !dbg !14339
  %and = and i32 %8, 8192, !dbg !14339
  %tobool3 = icmp ne i32 %and, 0, !dbg !14339
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !14342

if.then4:                                         ; preds = %do.body
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14339
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86, i64 0, i64 0)) #13, !dbg !14339
  br label %if.end, !dbg !14339

if.end:                                           ; preds = %if.then4, %do.body
  br label %do.end, !dbg !14342

do.end:                                           ; preds = %if.end
  %10 = load %struct.ethtool_test*, %struct.ethtool_test** %test.addr, align 8, !dbg !14343
  %flags5 = getelementptr inbounds %struct.ethtool_test, %struct.ethtool_test* %10, i32 0, i32 1, !dbg !14344
  %11 = load i32, i32* %flags5, align 4, !dbg !14345
  %or = or i32 %11, 2, !dbg !14345
  store i32 %or, i32* %flags5, align 4, !dbg !14345
  br label %if.end13, !dbg !14346

if.else:                                          ; preds = %if.then
  br label %do.body6, !dbg !14347

do.body6:                                         ; preds = %if.else
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14348
  %msg_enable7 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 33, !dbg !14348
  %13 = load i32, i32* %msg_enable7, align 8, !dbg !14348
  %and8 = and i32 %13, 8192, !dbg !14348
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14348
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !14351

if.then10:                                        ; preds = %do.body6
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14348
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.87, i64 0, i64 0)) #13, !dbg !14348
  br label %if.end11, !dbg !14348

if.end11:                                         ; preds = %if.then10, %do.body6
  br label %do.end12, !dbg !14351

do.end12:                                         ; preds = %if.end11
  br label %if.end13

if.end13:                                         ; preds = %do.end12, %do.end
  br label %if.end22, !dbg !14352

if.else14:                                        ; preds = %entry
  br label %do.body15, !dbg !14353

do.body15:                                        ; preds = %if.else14
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14354
  %msg_enable16 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %15, i32 0, i32 33, !dbg !14354
  %16 = load i32, i32* %msg_enable16, align 8, !dbg !14354
  %and17 = and i32 %16, 8192, !dbg !14354
  %tobool18 = icmp ne i32 %and17, 0, !dbg !14354
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !14357

if.then19:                                        ; preds = %do.body15
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14354
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %17, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.88, i64 0, i64 0)) #13, !dbg !14354
  br label %if.end20, !dbg !14354

if.end20:                                         ; preds = %if.then19, %do.body15
  br label %do.end21, !dbg !14357

do.end21:                                         ; preds = %if.end20
  br label %if.end22

if.end22:                                         ; preds = %do.end21, %if.end13
  ret void, !dbg !14358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_get_strings(%struct.net_device* %dev, i32 %stringset, i8* %data) #2 !dbg !14359 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14360, metadata !DIExpression()), !dbg !14361
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !14362, metadata !DIExpression()), !dbg !14363
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14364, metadata !DIExpression()), !dbg !14365
  %0 = load i8*, i8** %data.addr, align 8, !dbg !14366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 16 getelementptr inbounds ([1 x [32 x i8]], [1 x [32 x i8]]* @pcnet32_gstrings_test, i32 0, i32 0, i32 0), i64 32, i1 false), !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_set_phys_id(%struct.net_device* %dev, i32 %state) #2 !dbg !14369 {
entry:
  %lock.addr.i120 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i120, metadata !8236, metadata !DIExpression()), !dbg !14370
  %lock.addr.i115 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i115, metadata !9351, metadata !DIExpression()), !dbg !14378
  %flags.addr.i116 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i116, metadata !9357, metadata !DIExpression()), !dbg !14380
  %tmp.i117 = alloca i32, align 4
  %tmp8.i118 = alloca i32, align 4
  %lock.addr.i113 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i113, metadata !8236, metadata !DIExpression()), !dbg !14381
  %lock.addr.i108 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i108, metadata !9351, metadata !DIExpression()), !dbg !14388
  %flags.addr.i109 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i109, metadata !9357, metadata !DIExpression()), !dbg !14390
  %tmp.i110 = alloca i32, align 4
  %tmp8.i111 = alloca i32, align 4
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !9351, metadata !DIExpression()), !dbg !14391
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !14393
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !14394
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %state.addr = alloca i32, align 4
  %lp = alloca %struct.pcnet32_private*, align 8
  %a = alloca %struct.pcnet32_access*, align 8
  %ioaddr = alloca i64, align 8
  %flags = alloca i64, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__dummy68 = alloca i64, align 8
  %__dummy269 = alloca i64, align 8
  %tmp72 = alloca i32, align 4
  %__dummy76 = alloca i64, align 8
  %__dummy277 = alloca i64, align 8
  %tmp80 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14401, metadata !DIExpression()), !dbg !14402
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !14403, metadata !DIExpression()), !dbg !14404
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14405, metadata !DIExpression()), !dbg !14406
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14407
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14408
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14408
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14406
  call void @llvm.dbg.declare(metadata %struct.pcnet32_access** %a, metadata !14409, metadata !DIExpression()), !dbg !14410
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14411
  %a1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 10, !dbg !14412
  %3 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a1, align 8, !dbg !14412
  store %struct.pcnet32_access* %3, %struct.pcnet32_access** %a, align 8, !dbg !14410
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !14413, metadata !DIExpression()), !dbg !14414
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14415
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 5, !dbg !14416
  %5 = load i64, i64* %base_addr, align 8, !dbg !14416
  store i64 %5, i64* %ioaddr, align 8, !dbg !14414
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14417, metadata !DIExpression()), !dbg !14418
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14419, metadata !DIExpression()), !dbg !14420
  %6 = load i32, i32* %state.addr, align 4, !dbg !14421
  switch i32 %6, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb25
    i32 3, label %sw.bb25
    i32 0, label %sw.bb65
  ], !dbg !14422

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !14423

do.body:                                          ; preds = %sw.bb
  br label %do.body2, !dbg !14424

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14425, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14428, metadata !DIExpression()), !dbg !14427
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14427
  %conv = zext i1 %cmp to i32, !dbg !14427
  store i32 1, i32* %tmp, align 4, !dbg !14427
  %7 = load i32, i32* %tmp, align 4, !dbg !14427
  br label %do.body3, !dbg !14429

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14430

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !14431

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !14433, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !14437, metadata !DIExpression()), !dbg !14436
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !14436
  %conv9 = zext i1 %cmp8 to i32, !dbg !14436
  store i32 1, i32* %tmp10, align 4, !dbg !14436
  %8 = load i32, i32* %tmp10, align 4, !dbg !14436
  %call11 = call i64 @arch_local_irq_save() #12, !dbg !14438
  store i64 %call11, i64* %flags, align 8, !dbg !14438
  br label %do.end, !dbg !14438

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !14431

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !14430

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14439, !srcloc !14440
  br label %do.body14, !dbg !14439

do.body14:                                        ; preds = %do.body13
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14441
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 11, !dbg !14441
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14442
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !14443
  %rlock.i = bitcast %union.anon.46* %11 to %struct.raw_spinlock*, !dbg !14443
  br label %do.end16, !dbg !14441

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !14439

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14430

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14429

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !14424

do.end20:                                         ; preds = %do.end19
  store i32 4, i32* %i, align 4, !dbg !14444
  br label %for.cond, !dbg !14446

for.cond:                                         ; preds = %for.inc, %do.end20
  %12 = load i32, i32* %i, align 4, !dbg !14447
  %cmp21 = icmp slt i32 %12, 8, !dbg !14449
  br i1 %cmp21, label %for.body, label %for.end, !dbg !14450

for.body:                                         ; preds = %for.cond
  %13 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14451
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %13, i32 0, i32 2, !dbg !14452
  %14 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !14452
  %15 = load i64, i64* %ioaddr, align 8, !dbg !14453
  %16 = load i32, i32* %i, align 4, !dbg !14454
  %call23 = call zeroext i16 %14(i64 %15, i32 %16) #12, !dbg !14451
  %17 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14455
  %save_regs = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %17, i32 0, i32 36, !dbg !14456
  %18 = load i32, i32* %i, align 4, !dbg !14457
  %sub = sub i32 %18, 4, !dbg !14458
  %idxprom = sext i32 %sub to i64, !dbg !14455
  %arrayidx = getelementptr [4 x i16], [4 x i16]* %save_regs, i64 0, i64 %idxprom, !dbg !14455
  store i16 %call23, i16* %arrayidx, align 2, !dbg !14459
  br label %for.inc, !dbg !14455

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !14460
  %inc = add i32 %19, 1, !dbg !14460
  store i32 %inc, i32* %i, align 4, !dbg !14460
  br label %for.cond, !dbg !14461, !llvm.loop !14462

for.end:                                          ; preds = %for.cond
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14464
  %lock24 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 11, !dbg !14465
  %21 = load i64, i64* %flags, align 8, !dbg !14466
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i108, align 8
  store i64 %21, i64* %flags.addr.i109, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !14467
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !14467
  store i32 1, i32* %tmp.i110, align 4, !dbg !14467
  %22 = load i32, i32* %tmp.i110, align 4, !dbg !14467
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !14468
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !14468
  store i32 1, i32* %tmp8.i111, align 4, !dbg !14468
  %23 = load i32, i32* %tmp8.i111, align 4, !dbg !14468
  %24 = load i64, i64* %flags.addr.i109, align 8, !dbg !14469
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !14469
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14470, !srcloc !9478
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i108, align 8, !dbg !14471
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !14471
  %rlock.i112 = bitcast %union.anon.46* %26 to %struct.raw_spinlock*, !dbg !14471
  store i32 2, i32* %retval, align 4, !dbg !14472
  br label %return, !dbg !14472

sw.bb25:                                          ; preds = %entry, %entry
  br label %do.body26, !dbg !14473

do.body26:                                        ; preds = %sw.bb25
  br label %do.body27, !dbg !14474

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !14475, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !14478, metadata !DIExpression()), !dbg !14477
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !14477
  %conv31 = zext i1 %cmp30 to i32, !dbg !14477
  store i32 1, i32* %tmp32, align 4, !dbg !14477
  %27 = load i32, i32* %tmp32, align 4, !dbg !14477
  br label %do.body33, !dbg !14479

do.body33:                                        ; preds = %do.body27
  br label %do.body34, !dbg !14480

do.body34:                                        ; preds = %do.body33
  br label %do.body35, !dbg !14481

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !14483, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !14487, metadata !DIExpression()), !dbg !14486
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !14486
  %conv39 = zext i1 %cmp38 to i32, !dbg !14486
  store i32 1, i32* %tmp40, align 4, !dbg !14486
  %28 = load i32, i32* %tmp40, align 4, !dbg !14486
  %call41 = call i64 @arch_local_irq_save() #12, !dbg !14488
  store i64 %call41, i64* %flags, align 8, !dbg !14488
  br label %do.end42, !dbg !14488

do.end42:                                         ; preds = %do.body35
  br label %do.end43, !dbg !14481

do.end43:                                         ; preds = %do.end42
  br label %do.body44, !dbg !14480

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14489, !srcloc !14490
  br label %do.body45, !dbg !14489

do.body45:                                        ; preds = %do.body44
  %29 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14491
  %lock46 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %29, i32 0, i32 11, !dbg !14491
  store %struct.spinlock* %lock46, %struct.spinlock** %lock.addr.i113, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i113, align 8, !dbg !14492
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !14493
  %rlock.i114 = bitcast %union.anon.46* %31 to %struct.raw_spinlock*, !dbg !14493
  br label %do.end48, !dbg !14491

do.end48:                                         ; preds = %do.body45
  br label %do.end49, !dbg !14489

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !14480

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !14479

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !14474

do.end52:                                         ; preds = %do.end51
  store i32 4, i32* %i, align 4, !dbg !14494
  br label %for.cond53, !dbg !14496

for.cond53:                                       ; preds = %for.inc61, %do.end52
  %32 = load i32, i32* %i, align 4, !dbg !14497
  %cmp54 = icmp slt i32 %32, 8, !dbg !14499
  br i1 %cmp54, label %for.body56, label %for.end63, !dbg !14500

for.body56:                                       ; preds = %for.cond53
  %33 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14501
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %33, i32 0, i32 3, !dbg !14502
  %34 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !14502
  %35 = load i64, i64* %ioaddr, align 8, !dbg !14503
  %36 = load i32, i32* %i, align 4, !dbg !14504
  %37 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14505
  %read_bcr57 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %37, i32 0, i32 2, !dbg !14506
  %38 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr57, align 8, !dbg !14506
  %39 = load i64, i64* %ioaddr, align 8, !dbg !14507
  %40 = load i32, i32* %i, align 4, !dbg !14508
  %call58 = call zeroext i16 %38(i64 %39, i32 %40) #12, !dbg !14505
  %conv59 = zext i16 %call58 to i32, !dbg !14505
  %xor = xor i32 %conv59, 16384, !dbg !14509
  %conv60 = trunc i32 %xor to i16, !dbg !14505
  call void %34(i64 %35, i32 %36, i16 zeroext %conv60) #12, !dbg !14501
  br label %for.inc61, !dbg !14501

for.inc61:                                        ; preds = %for.body56
  %41 = load i32, i32* %i, align 4, !dbg !14510
  %inc62 = add i32 %41, 1, !dbg !14510
  store i32 %inc62, i32* %i, align 4, !dbg !14510
  br label %for.cond53, !dbg !14511, !llvm.loop !14512

for.end63:                                        ; preds = %for.cond53
  %42 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14514
  %lock64 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %42, i32 0, i32 11, !dbg !14515
  %43 = load i64, i64* %flags, align 8, !dbg !14516
  store %struct.spinlock* %lock64, %struct.spinlock** %lock.addr.i115, align 8
  store i64 %43, i64* %flags.addr.i116, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !14517
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !14517
  store i32 1, i32* %tmp.i117, align 4, !dbg !14517
  %44 = load i32, i32* %tmp.i117, align 4, !dbg !14517
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !14518
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !14518
  store i32 1, i32* %tmp8.i118, align 4, !dbg !14518
  %45 = load i32, i32* %tmp8.i118, align 4, !dbg !14518
  %46 = load i64, i64* %flags.addr.i116, align 8, !dbg !14519
  call void @arch_local_irq_restore(i64 %46) #14, !dbg !14519
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14520, !srcloc !9478
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i115, align 8, !dbg !14521
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !14521
  %rlock.i119 = bitcast %union.anon.46* %48 to %struct.raw_spinlock*, !dbg !14521
  br label %sw.epilog, !dbg !14522

sw.bb65:                                          ; preds = %entry
  br label %do.body66, !dbg !14523

do.body66:                                        ; preds = %sw.bb65
  br label %do.body67, !dbg !14524

do.body67:                                        ; preds = %do.body66
  call void @llvm.dbg.declare(metadata i64* %__dummy68, metadata !14525, metadata !DIExpression()), !dbg !14527
  call void @llvm.dbg.declare(metadata i64* %__dummy269, metadata !14528, metadata !DIExpression()), !dbg !14527
  %cmp70 = icmp eq i64* %__dummy68, %__dummy269, !dbg !14527
  %conv71 = zext i1 %cmp70 to i32, !dbg !14527
  store i32 1, i32* %tmp72, align 4, !dbg !14527
  %49 = load i32, i32* %tmp72, align 4, !dbg !14527
  br label %do.body73, !dbg !14529

do.body73:                                        ; preds = %do.body67
  br label %do.body74, !dbg !14530

do.body74:                                        ; preds = %do.body73
  br label %do.body75, !dbg !14531

do.body75:                                        ; preds = %do.body74
  call void @llvm.dbg.declare(metadata i64* %__dummy76, metadata !14533, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.declare(metadata i64* %__dummy277, metadata !14537, metadata !DIExpression()), !dbg !14536
  %cmp78 = icmp eq i64* %__dummy76, %__dummy277, !dbg !14536
  %conv79 = zext i1 %cmp78 to i32, !dbg !14536
  store i32 1, i32* %tmp80, align 4, !dbg !14536
  %50 = load i32, i32* %tmp80, align 4, !dbg !14536
  %call81 = call i64 @arch_local_irq_save() #12, !dbg !14538
  store i64 %call81, i64* %flags, align 8, !dbg !14538
  br label %do.end82, !dbg !14538

do.end82:                                         ; preds = %do.body75
  br label %do.end83, !dbg !14531

do.end83:                                         ; preds = %do.end82
  br label %do.body84, !dbg !14530

do.body84:                                        ; preds = %do.end83
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14539, !srcloc !14540
  br label %do.body85, !dbg !14539

do.body85:                                        ; preds = %do.body84
  %51 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14541
  %lock86 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %51, i32 0, i32 11, !dbg !14541
  store %struct.spinlock* %lock86, %struct.spinlock** %lock.addr.i120, align 8
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i120, align 8, !dbg !14542
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !14543
  %rlock.i121 = bitcast %union.anon.46* %53 to %struct.raw_spinlock*, !dbg !14543
  br label %do.end88, !dbg !14541

do.end88:                                         ; preds = %do.body85
  br label %do.end89, !dbg !14539

do.end89:                                         ; preds = %do.end88
  br label %do.end90, !dbg !14530

do.end90:                                         ; preds = %do.end89
  br label %do.end91, !dbg !14529

do.end91:                                         ; preds = %do.end90
  br label %do.end92, !dbg !14524

do.end92:                                         ; preds = %do.end91
  store i32 4, i32* %i, align 4, !dbg !14544
  br label %for.cond93, !dbg !14546

for.cond93:                                       ; preds = %for.inc102, %do.end92
  %54 = load i32, i32* %i, align 4, !dbg !14547
  %cmp94 = icmp slt i32 %54, 8, !dbg !14549
  br i1 %cmp94, label %for.body96, label %for.end104, !dbg !14550

for.body96:                                       ; preds = %for.cond93
  %55 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14551
  %write_bcr97 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %55, i32 0, i32 3, !dbg !14552
  %56 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr97, align 8, !dbg !14552
  %57 = load i64, i64* %ioaddr, align 8, !dbg !14553
  %58 = load i32, i32* %i, align 4, !dbg !14554
  %59 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14555
  %save_regs98 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %59, i32 0, i32 36, !dbg !14556
  %60 = load i32, i32* %i, align 4, !dbg !14557
  %sub99 = sub i32 %60, 4, !dbg !14558
  %idxprom100 = sext i32 %sub99 to i64, !dbg !14555
  %arrayidx101 = getelementptr [4 x i16], [4 x i16]* %save_regs98, i64 0, i64 %idxprom100, !dbg !14555
  %61 = load i16, i16* %arrayidx101, align 2, !dbg !14555
  call void %56(i64 %57, i32 %58, i16 zeroext %61) #12, !dbg !14551
  br label %for.inc102, !dbg !14551

for.inc102:                                       ; preds = %for.body96
  %62 = load i32, i32* %i, align 4, !dbg !14559
  %inc103 = add i32 %62, 1, !dbg !14559
  store i32 %inc103, i32* %i, align 4, !dbg !14559
  br label %for.cond93, !dbg !14560, !llvm.loop !14561

for.end104:                                       ; preds = %for.cond93
  %63 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14563
  %lock105 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %63, i32 0, i32 11, !dbg !14564
  %64 = load i64, i64* %flags, align 8, !dbg !14565
  store %struct.spinlock* %lock105, %struct.spinlock** %lock.addr.i106, align 8
  store i64 %64, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !14566
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !14566
  store i32 1, i32* %tmp.i, align 4, !dbg !14566
  %65 = load i32, i32* %tmp.i, align 4, !dbg !14566
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !14567
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !14567
  store i32 1, i32* %tmp8.i, align 4, !dbg !14567
  %66 = load i32, i32* %tmp8.i, align 4, !dbg !14567
  %67 = load i64, i64* %flags.addr.i, align 8, !dbg !14568
  call void @arch_local_irq_restore(i64 %67) #14, !dbg !14568
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14569, !srcloc !9478
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !14570
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !14570
  %rlock.i107 = bitcast %union.anon.46* %69 to %struct.raw_spinlock*, !dbg !14570
  br label %sw.epilog, !dbg !14571

sw.epilog:                                        ; preds = %for.end104, %entry, %for.end63
  store i32 0, i32* %retval, align 4, !dbg !14572
  br label %return, !dbg !14572

return:                                           ; preds = %sw.epilog, %for.end
  %70 = load i32, i32* %retval, align 4, !dbg !14573
  ret i32 %70, !dbg !14573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_get_sset_count(%struct.net_device* %dev, i32 %sset) #2 !dbg !14574 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14575, metadata !DIExpression()), !dbg !14576
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !14577, metadata !DIExpression()), !dbg !14578
  %0 = load i32, i32* %sset.addr, align 4, !dbg !14579
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !14580

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !14581
  br label %return, !dbg !14581

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !14583
  br label %return, !dbg !14583

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !14584
  ret i32 %1, !dbg !14584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_get_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !14585 {
entry:
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !9351, metadata !DIExpression()), !dbg !14586
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !14588
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !14589
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14596, metadata !DIExpression()), !dbg !14597
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !14598, metadata !DIExpression()), !dbg !14599
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14600, metadata !DIExpression()), !dbg !14601
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14602
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14603
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14603
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14601
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14604, metadata !DIExpression()), !dbg !14605
  br label %do.body, !dbg !14606

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14607

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14608, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14611, metadata !DIExpression()), !dbg !14610
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14610
  %conv = zext i1 %cmp to i32, !dbg !14610
  store i32 1, i32* %tmp, align 4, !dbg !14610
  %2 = load i32, i32* %tmp, align 4, !dbg !14610
  br label %do.body2, !dbg !14612

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14613

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14614

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14616, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14620, metadata !DIExpression()), !dbg !14619
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14619
  %conv8 = zext i1 %cmp7 to i32, !dbg !14619
  store i32 1, i32* %tmp9, align 4, !dbg !14619
  %3 = load i32, i32* %tmp9, align 4, !dbg !14619
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !14621
  store i64 %call10, i64* %flags, align 8, !dbg !14621
  br label %do.end, !dbg !14621

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !14614

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !14613

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14622, !srcloc !14623
  br label %do.body13, !dbg !14622

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14624
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %4, i32 0, i32 11, !dbg !14624
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14625
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !14626
  %rlock.i = bitcast %union.anon.46* %6 to %struct.raw_spinlock*, !dbg !14626
  br label %do.end15, !dbg !14624

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !14622

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14613

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14612

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14607

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14627
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %7, i32 0, i32 29, !dbg !14629
  %bf.load = load i8, i8* %mii, align 8, !dbg !14629
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !14629
  %bf.clear = and i8 %bf.lshr, 1, !dbg !14629
  %bf.cast = zext i8 %bf.clear to i32, !dbg !14629
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14627
  br i1 %tobool, label %if.then, label %if.else, !dbg !14630

if.then:                                          ; preds = %do.end19
  %8 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14631
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %8, i32 0, i32 31, !dbg !14633
  %9 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14634
  call void @mii_ethtool_get_link_ksettings(%struct.mii_if_info* %mii_if, %struct.ethtool_link_ksettings* %9) #12, !dbg !14635
  br label %if.end62, !dbg !14636

if.else:                                          ; preds = %do.end19
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14637
  %chip_version = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 35, !dbg !14639
  %11 = load i16, i16* %chip_version, align 8, !dbg !14639
  %conv20 = zext i16 %11 to i32, !dbg !14637
  %cmp21 = icmp eq i32 %conv20, 9761, !dbg !14640
  br i1 %cmp21, label %if.then23, label %if.end61, !dbg !14641

if.then23:                                        ; preds = %if.else
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14642
  %autoneg = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 29, !dbg !14645
  %bf.load24 = load i8, i8* %autoneg, align 8, !dbg !14645
  %bf.lshr25 = lshr i8 %bf.load24, 3, !dbg !14645
  %bf.clear26 = and i8 %bf.lshr25, 1, !dbg !14645
  %bf.cast27 = zext i8 %bf.clear26 to i32, !dbg !14645
  %tobool28 = icmp ne i32 %bf.cast27, 0, !dbg !14642
  br i1 %tobool28, label %if.then29, label %if.else40, !dbg !14646

if.then29:                                        ; preds = %if.then23
  %13 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14647
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %13, i32 0, i32 0, !dbg !14649
  %autoneg30 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !14650
  store i8 1, i8* %autoneg30, align 1, !dbg !14651
  %14 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14652
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %14, i32 0, i32 10, !dbg !14654
  %15 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14654
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %15, i32 0, i32 2, !dbg !14655
  %16 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !14655
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14656
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 5, !dbg !14657
  %18 = load i64, i64* %base_addr, align 8, !dbg !14657
  %call31 = call zeroext i16 %16(i64 %18, i32 4) #12, !dbg !14652
  %conv32 = zext i16 %call31 to i32, !dbg !14652
  %cmp33 = icmp eq i32 %conv32, 192, !dbg !14658
  br i1 %cmp33, label %if.then35, label %if.else37, !dbg !14659

if.then35:                                        ; preds = %if.then29
  %19 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14660
  %base36 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %19, i32 0, i32 0, !dbg !14661
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base36, i32 0, i32 3, !dbg !14662
  store i8 1, i8* %port, align 1, !dbg !14663
  br label %if.end, !dbg !14660

if.else37:                                        ; preds = %if.then29
  %20 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14664
  %base38 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %20, i32 0, i32 0, !dbg !14665
  %port39 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base38, i32 0, i32 3, !dbg !14666
  store i8 0, i8* %port39, align 1, !dbg !14667
  br label %if.end

if.end:                                           ; preds = %if.else37, %if.then35
  br label %if.end51, !dbg !14668

if.else40:                                        ; preds = %if.then23
  %21 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14669
  %base41 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %21, i32 0, i32 0, !dbg !14671
  %autoneg42 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base41, i32 0, i32 5, !dbg !14672
  store i8 0, i8* %autoneg42, align 1, !dbg !14673
  %22 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14674
  %port_tp = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %22, i32 0, i32 29, !dbg !14675
  %bf.load43 = load i8, i8* %port_tp, align 8, !dbg !14675
  %bf.lshr44 = lshr i8 %bf.load43, 4, !dbg !14675
  %bf.clear45 = and i8 %bf.lshr44, 1, !dbg !14675
  %bf.cast46 = zext i8 %bf.clear45 to i32, !dbg !14675
  %tobool47 = icmp ne i32 %bf.cast46, 0, !dbg !14674
  %23 = zext i1 %tobool47 to i64, !dbg !14674
  %cond = select i1 %tobool47, i32 0, i32 1, !dbg !14674
  %conv48 = trunc i32 %cond to i8, !dbg !14674
  %24 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14676
  %base49 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %24, i32 0, i32 0, !dbg !14677
  %port50 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base49, i32 0, i32 3, !dbg !14678
  store i8 %conv48, i8* %port50, align 1, !dbg !14679
  br label %if.end51

if.end51:                                         ; preds = %if.else40, %if.end
  %25 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14680
  %fdx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %25, i32 0, i32 29, !dbg !14681
  %bf.load52 = load i8, i8* %fdx, align 8, !dbg !14681
  %bf.lshr53 = lshr i8 %bf.load52, 5, !dbg !14681
  %bf.clear54 = and i8 %bf.lshr53, 1, !dbg !14681
  %bf.cast55 = zext i8 %bf.clear54 to i32, !dbg !14681
  %tobool56 = icmp ne i32 %bf.cast55, 0, !dbg !14680
  %26 = zext i1 %tobool56 to i64, !dbg !14680
  %cond57 = select i1 %tobool56, i32 1, i32 0, !dbg !14680
  %conv58 = trunc i32 %cond57 to i8, !dbg !14680
  %27 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14682
  %base59 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %27, i32 0, i32 0, !dbg !14683
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base59, i32 0, i32 2, !dbg !14684
  store i8 %conv58, i8* %duplex, align 8, !dbg !14685
  %28 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14686
  %base60 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %28, i32 0, i32 0, !dbg !14687
  %speed = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base60, i32 0, i32 1, !dbg !14688
  store i32 10, i32* %speed, align 4, !dbg !14689
  %29 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14690
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %29, i32 0, i32 1, !dbg !14691
  %supported = getelementptr inbounds %struct.anon.126, %struct.anon.126* %link_modes, i32 0, i32 0, !dbg !14692
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !14690
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay, i32 384) #12, !dbg !14693
  br label %if.end61, !dbg !14694

if.end61:                                         ; preds = %if.end51, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14695
  %lock63 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 11, !dbg !14696
  %31 = load i64, i64* %flags, align 8, !dbg !14697
  store %struct.spinlock* %lock63, %struct.spinlock** %lock.addr.i64, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !14698
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !14698
  store i32 1, i32* %tmp.i, align 4, !dbg !14698
  %32 = load i32, i32* %tmp.i, align 4, !dbg !14698
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !14699
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !14699
  store i32 1, i32* %tmp8.i, align 4, !dbg !14699
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !14699
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !14700
  call void @arch_local_irq_restore(i64 %34) #14, !dbg !14700
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14701, !srcloc !9478
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !14702
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !14702
  %rlock.i65 = bitcast %union.anon.46* %36 to %struct.raw_spinlock*, !dbg !14702
  ret i32 0, !dbg !14703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !14704 {
entry:
  %lock.addr.i112 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i112, metadata !9351, metadata !DIExpression()), !dbg !14705
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !14707
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !14708
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %flags = alloca i64, align 8
  %r = alloca i32, align 4
  %suspended = alloca i32, align 4
  %bcr2 = alloca i32, align 4
  %bcr9 = alloca i32, align 4
  %csr15 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14715, metadata !DIExpression()), !dbg !14716
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !14717, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14719, metadata !DIExpression()), !dbg !14720
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14721
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14722
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14722
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14720
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !14723, metadata !DIExpression()), !dbg !14724
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14725
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !14726
  %3 = load i64, i64* %base_addr, align 8, !dbg !14726
  store i64 %3, i64* %ioaddr, align 8, !dbg !14724
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14727, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14729, metadata !DIExpression()), !dbg !14730
  store i32 -95, i32* %r, align 4, !dbg !14730
  call void @llvm.dbg.declare(metadata i32* %suspended, metadata !14731, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.declare(metadata i32* %bcr2, metadata !14733, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.declare(metadata i32* %bcr9, metadata !14735, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.declare(metadata i32* %csr15, metadata !14737, metadata !DIExpression()), !dbg !14738
  br label %do.body, !dbg !14739

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14740

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14741, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14744, metadata !DIExpression()), !dbg !14743
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14743
  %conv = zext i1 %cmp to i32, !dbg !14743
  store i32 1, i32* %tmp, align 4, !dbg !14743
  %4 = load i32, i32* %tmp, align 4, !dbg !14743
  br label %do.body2, !dbg !14745

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14746

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14747

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14749, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14753, metadata !DIExpression()), !dbg !14752
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14752
  %conv8 = zext i1 %cmp7 to i32, !dbg !14752
  store i32 1, i32* %tmp9, align 4, !dbg !14752
  %5 = load i32, i32* %tmp9, align 4, !dbg !14752
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !14754
  store i64 %call10, i64* %flags, align 8, !dbg !14754
  br label %do.end, !dbg !14754

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !14747

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !14746

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14755, !srcloc !14756
  br label %do.body13, !dbg !14755

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14757
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %6, i32 0, i32 11, !dbg !14757
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14758
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !14759
  %rlock.i = bitcast %union.anon.46* %8 to %struct.raw_spinlock*, !dbg !14759
  br label %do.end15, !dbg !14757

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !14755

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14746

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14745

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14740

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14760
  %mii = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %9, i32 0, i32 29, !dbg !14762
  %bf.load = load i8, i8* %mii, align 8, !dbg !14762
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !14762
  %bf.clear = and i8 %bf.lshr, 1, !dbg !14762
  %bf.cast = zext i8 %bf.clear to i32, !dbg !14762
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14760
  br i1 %tobool, label %if.then, label %if.else, !dbg !14763

if.then:                                          ; preds = %do.end19
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14764
  %mii_if = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 31, !dbg !14766
  %11 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14767
  %call20 = call i32 @mii_ethtool_set_link_ksettings(%struct.mii_if_info* %mii_if, %struct.ethtool_link_ksettings* %11) #12, !dbg !14768
  store i32 %call20, i32* %r, align 4, !dbg !14769
  br label %if.end110, !dbg !14770

if.else:                                          ; preds = %do.end19
  %12 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14771
  %chip_version = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %12, i32 0, i32 35, !dbg !14773
  %13 = load i16, i16* %chip_version, align 8, !dbg !14773
  %conv21 = zext i16 %13 to i32, !dbg !14771
  %cmp22 = icmp eq i32 %conv21, 9761, !dbg !14774
  br i1 %cmp22, label %if.then24, label %if.end109, !dbg !14775

if.then24:                                        ; preds = %if.else
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14776
  %call25 = call i32 @pcnet32_suspend(%struct.net_device* %14, i64* %flags, i32 0) #12, !dbg !14778
  store i32 %call25, i32* %suspended, align 4, !dbg !14779
  %15 = load i32, i32* %suspended, align 4, !dbg !14780
  %tobool26 = icmp ne i32 %15, 0, !dbg !14780
  br i1 %tobool26, label %if.end, label %if.then27, !dbg !14782

if.then27:                                        ; preds = %if.then24
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14783
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 10, !dbg !14784
  %17 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !14784
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %17, i32 0, i32 1, !dbg !14785
  %18 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !14785
  %19 = load i64, i64* %ioaddr, align 8, !dbg !14786
  call void %18(i64 %19, i32 0, i16 zeroext 4) #12, !dbg !14783
  br label %if.end, !dbg !14783

if.end:                                           ; preds = %if.then27, %if.then24
  %20 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14787
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %20, i32 0, i32 0, !dbg !14788
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !14789
  %21 = load i8, i8* %autoneg, align 1, !dbg !14789
  %conv28 = zext i8 %21 to i32, !dbg !14787
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !14790
  %conv30 = zext i1 %cmp29 to i32, !dbg !14790
  %22 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14791
  %autoneg31 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %22, i32 0, i32 29, !dbg !14792
  %23 = trunc i32 %conv30 to i8, !dbg !14793
  %bf.load32 = load i8, i8* %autoneg31, align 8, !dbg !14793
  %bf.value = and i8 %23, 1, !dbg !14793
  %bf.shl = shl i8 %bf.value, 3, !dbg !14793
  %bf.clear33 = and i8 %bf.load32, -9, !dbg !14793
  %bf.set = or i8 %bf.clear33, %bf.shl, !dbg !14793
  store i8 %bf.set, i8* %autoneg31, align 8, !dbg !14793
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !14793
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14794
  %a34 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 10, !dbg !14795
  %25 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a34, align 8, !dbg !14795
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %25, i32 0, i32 2, !dbg !14796
  %26 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !14796
  %27 = load i64, i64* %ioaddr, align 8, !dbg !14797
  %call35 = call zeroext i16 %26(i64 %27, i32 2) #12, !dbg !14794
  %conv36 = zext i16 %call35 to i32, !dbg !14794
  store i32 %conv36, i32* %bcr2, align 4, !dbg !14798
  %28 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14799
  %base37 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %28, i32 0, i32 0, !dbg !14801
  %autoneg38 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base37, i32 0, i32 5, !dbg !14802
  %29 = load i8, i8* %autoneg38, align 1, !dbg !14802
  %conv39 = zext i8 %29 to i32, !dbg !14799
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !14803
  br i1 %cmp40, label %if.then42, label %if.else45, !dbg !14804

if.then42:                                        ; preds = %if.end
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14805
  %a43 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 10, !dbg !14807
  %31 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a43, align 8, !dbg !14807
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %31, i32 0, i32 3, !dbg !14808
  %32 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !14808
  %33 = load i64, i64* %ioaddr, align 8, !dbg !14809
  %34 = load i32, i32* %bcr2, align 4, !dbg !14810
  %or = or i32 %34, 2, !dbg !14811
  %conv44 = trunc i32 %or to i16, !dbg !14810
  call void %32(i64 %33, i32 2, i16 zeroext %conv44) #12, !dbg !14805
  br label %if.end101, !dbg !14812

if.else45:                                        ; preds = %if.end
  %35 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14813
  %a46 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %35, i32 0, i32 10, !dbg !14815
  %36 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a46, align 8, !dbg !14815
  %write_bcr47 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %36, i32 0, i32 3, !dbg !14816
  %37 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr47, align 8, !dbg !14816
  %38 = load i64, i64* %ioaddr, align 8, !dbg !14817
  %39 = load i32, i32* %bcr2, align 4, !dbg !14818
  %and = and i32 %39, -3, !dbg !14819
  %conv48 = trunc i32 %and to i16, !dbg !14818
  call void %37(i64 %38, i32 2, i16 zeroext %conv48) #12, !dbg !14813
  %40 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14820
  %base49 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %40, i32 0, i32 0, !dbg !14821
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base49, i32 0, i32 3, !dbg !14822
  %41 = load i8, i8* %port, align 1, !dbg !14822
  %conv50 = zext i8 %41 to i32, !dbg !14820
  %cmp51 = icmp eq i32 %conv50, 0, !dbg !14823
  %conv52 = zext i1 %cmp51 to i32, !dbg !14823
  %42 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14824
  %port_tp = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %42, i32 0, i32 29, !dbg !14825
  %43 = trunc i32 %conv52 to i8, !dbg !14826
  %bf.load53 = load i8, i8* %port_tp, align 8, !dbg !14826
  %bf.value54 = and i8 %43, 1, !dbg !14826
  %bf.shl55 = shl i8 %bf.value54, 4, !dbg !14826
  %bf.clear56 = and i8 %bf.load53, -17, !dbg !14826
  %bf.set57 = or i8 %bf.clear56, %bf.shl55, !dbg !14826
  store i8 %bf.set57, i8* %port_tp, align 8, !dbg !14826
  %bf.result.cast58 = zext i8 %bf.value54 to i32, !dbg !14826
  %44 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14827
  %a59 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %44, i32 0, i32 10, !dbg !14828
  %45 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a59, align 8, !dbg !14828
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %45, i32 0, i32 0, !dbg !14829
  %46 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !14829
  %47 = load i64, i64* %ioaddr, align 8, !dbg !14830
  %call60 = call zeroext i16 %46(i64 %47, i32 15) #12, !dbg !14827
  %conv61 = zext i16 %call60 to i32, !dbg !14827
  %and62 = and i32 %conv61, -385, !dbg !14831
  store i32 %and62, i32* %csr15, align 4, !dbg !14832
  %48 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14833
  %base63 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %48, i32 0, i32 0, !dbg !14835
  %port64 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base63, i32 0, i32 3, !dbg !14836
  %49 = load i8, i8* %port64, align 1, !dbg !14836
  %conv65 = zext i8 %49 to i32, !dbg !14833
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !14837
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !14838

if.then68:                                        ; preds = %if.else45
  %50 = load i32, i32* %csr15, align 4, !dbg !14839
  %or69 = or i32 %50, 128, !dbg !14839
  store i32 %or69, i32* %csr15, align 4, !dbg !14839
  br label %if.end70, !dbg !14840

if.end70:                                         ; preds = %if.then68, %if.else45
  %51 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14841
  %a71 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %51, i32 0, i32 10, !dbg !14842
  %52 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a71, align 8, !dbg !14842
  %write_csr72 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %52, i32 0, i32 1, !dbg !14843
  %53 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr72, align 8, !dbg !14843
  %54 = load i64, i64* %ioaddr, align 8, !dbg !14844
  %55 = load i32, i32* %csr15, align 4, !dbg !14845
  %conv73 = trunc i32 %55 to i16, !dbg !14845
  call void %53(i64 %54, i32 15, i16 zeroext %conv73) #12, !dbg !14841
  %56 = load i32, i32* %csr15, align 4, !dbg !14846
  %conv74 = trunc i32 %56 to i16, !dbg !14846
  %57 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14847
  %init_block = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %57, i32 0, i32 0, !dbg !14848
  %58 = load %struct.pcnet32_init_block*, %struct.pcnet32_init_block** %init_block, align 8, !dbg !14848
  %mode = getelementptr inbounds %struct.pcnet32_init_block, %struct.pcnet32_init_block* %58, i32 0, i32 0, !dbg !14849
  store i16 %conv74, i16* %mode, align 4, !dbg !14850
  %59 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14851
  %base75 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %59, i32 0, i32 0, !dbg !14852
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base75, i32 0, i32 2, !dbg !14853
  %60 = load i8, i8* %duplex, align 8, !dbg !14853
  %conv76 = zext i8 %60 to i32, !dbg !14851
  %cmp77 = icmp eq i32 %conv76, 1, !dbg !14854
  %conv78 = zext i1 %cmp77 to i32, !dbg !14854
  %61 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14855
  %fdx = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %61, i32 0, i32 29, !dbg !14856
  %62 = trunc i32 %conv78 to i8, !dbg !14857
  %bf.load79 = load i8, i8* %fdx, align 8, !dbg !14857
  %bf.value80 = and i8 %62, 1, !dbg !14857
  %bf.shl81 = shl i8 %bf.value80, 5, !dbg !14857
  %bf.clear82 = and i8 %bf.load79, -33, !dbg !14857
  %bf.set83 = or i8 %bf.clear82, %bf.shl81, !dbg !14857
  store i8 %bf.set83, i8* %fdx, align 8, !dbg !14857
  %bf.result.cast84 = zext i8 %bf.value80 to i32, !dbg !14857
  %63 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14858
  %a85 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %63, i32 0, i32 10, !dbg !14859
  %64 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a85, align 8, !dbg !14859
  %read_bcr86 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %64, i32 0, i32 2, !dbg !14860
  %65 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr86, align 8, !dbg !14860
  %66 = load i64, i64* %ioaddr, align 8, !dbg !14861
  %call87 = call zeroext i16 %65(i64 %66, i32 9) #12, !dbg !14858
  %conv88 = zext i16 %call87 to i32, !dbg !14858
  %and89 = and i32 %conv88, -4, !dbg !14862
  store i32 %and89, i32* %bcr9, align 4, !dbg !14863
  %67 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !14864
  %base90 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %67, i32 0, i32 0, !dbg !14866
  %duplex91 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base90, i32 0, i32 2, !dbg !14867
  %68 = load i8, i8* %duplex91, align 8, !dbg !14867
  %conv92 = zext i8 %68 to i32, !dbg !14864
  %cmp93 = icmp eq i32 %conv92, 1, !dbg !14868
  br i1 %cmp93, label %if.then95, label %if.end97, !dbg !14869

if.then95:                                        ; preds = %if.end70
  %69 = load i32, i32* %bcr9, align 4, !dbg !14870
  %or96 = or i32 %69, 3, !dbg !14870
  store i32 %or96, i32* %bcr9, align 4, !dbg !14870
  br label %if.end97, !dbg !14871

if.end97:                                         ; preds = %if.then95, %if.end70
  %70 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14872
  %a98 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %70, i32 0, i32 10, !dbg !14873
  %71 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a98, align 8, !dbg !14873
  %write_bcr99 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %71, i32 0, i32 3, !dbg !14874
  %72 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr99, align 8, !dbg !14874
  %73 = load i64, i64* %ioaddr, align 8, !dbg !14875
  %74 = load i32, i32* %bcr9, align 4, !dbg !14876
  %conv100 = trunc i32 %74 to i16, !dbg !14876
  call void %72(i64 %73, i32 9, i16 zeroext %conv100) #12, !dbg !14872
  br label %if.end101

if.end101:                                        ; preds = %if.end97, %if.then42
  %75 = load i32, i32* %suspended, align 4, !dbg !14877
  %tobool102 = icmp ne i32 %75, 0, !dbg !14877
  br i1 %tobool102, label %if.then103, label %if.else104, !dbg !14879

if.then103:                                       ; preds = %if.end101
  %76 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14880
  %77 = load i64, i64* %ioaddr, align 8, !dbg !14881
  call void @pcnet32_clr_suspend(%struct.pcnet32_private* %76, i64 %77) #12, !dbg !14882
  br label %if.end108, !dbg !14882

if.else104:                                       ; preds = %if.end101
  %78 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14883
  %call105 = call zeroext i1 @netif_running(%struct.net_device* %78) #12, !dbg !14885
  br i1 %call105, label %if.then106, label %if.end107, !dbg !14886

if.then106:                                       ; preds = %if.else104
  %79 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14887
  call void @pcnet32_restart(%struct.net_device* %79, i32 66) #12, !dbg !14888
  br label %if.end107, !dbg !14888

if.end107:                                        ; preds = %if.then106, %if.else104
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then103
  store i32 0, i32* %r, align 4, !dbg !14889
  br label %if.end109, !dbg !14890

if.end109:                                        ; preds = %if.end108, %if.else
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then
  %80 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14891
  %lock111 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %80, i32 0, i32 11, !dbg !14892
  %81 = load i64, i64* %flags, align 8, !dbg !14893
  store %struct.spinlock* %lock111, %struct.spinlock** %lock.addr.i112, align 8
  store i64 %81, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !14894
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !14894
  store i32 1, i32* %tmp.i, align 4, !dbg !14894
  %82 = load i32, i32* %tmp.i, align 4, !dbg !14894
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !14895
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !14895
  store i32 1, i32* %tmp8.i, align 4, !dbg !14895
  %83 = load i32, i32* %tmp8.i, align 4, !dbg !14895
  %84 = load i64, i64* %flags.addr.i, align 8, !dbg !14896
  call void @arch_local_irq_restore(i64 %84) #14, !dbg !14896
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14897, !srcloc !9478
  %85 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i112, align 8, !dbg !14898
  %86 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %85, i32 0, i32 0, !dbg !14898
  %rlock.i113 = bitcast %union.anon.46* %86 to %struct.raw_spinlock*, !dbg !14898
  %87 = load i32, i32* %r, align 4, !dbg !14899
  ret i32 %87, !dbg !14900
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @mii_nway_restart(%struct.mii_if_info*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #2 !dbg !14901 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14902, metadata !DIExpression()), !dbg !14903
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14904
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !14905
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !14906
  ret i1 %call, !dbg !14907
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_netif_stop(%struct.net_device* %dev) #2 !dbg !14908 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14909, metadata !DIExpression()), !dbg !14910
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !14911, metadata !DIExpression()), !dbg !14912
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14913
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14914
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !14914
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !14912
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14915
  call void @netif_trans_update(%struct.net_device* %2) #12, !dbg !14916
  %3 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !14917
  %napi = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %3, i32 0, i32 25, !dbg !14918
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !14919
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14920
  call void @netif_tx_disable(%struct.net_device* %4) #12, !dbg !14921
  ret void, !dbg !14922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_realloc_tx_ring(%struct.net_device* %dev, %struct.pcnet32_private* %lp, i32 %size) #2 !dbg !14923 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp.addr = alloca %struct.pcnet32_private*, align 8
  %size.addr = alloca i32, align 4
  %new_ring_dma_addr = alloca i64, align 8
  %new_dma_addr_list = alloca i64*, align 8
  %new_tx_ring = alloca %struct.pcnet32_tx_head*, align 8
  %new_skb_list = alloca %struct.sk_buff**, align 8
  %entries = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14926, metadata !DIExpression()), !dbg !14927
  store %struct.pcnet32_private* %lp, %struct.pcnet32_private** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp.addr, metadata !14928, metadata !DIExpression()), !dbg !14929
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14930, metadata !DIExpression()), !dbg !14931
  call void @llvm.dbg.declare(metadata i64* %new_ring_dma_addr, metadata !14932, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.declare(metadata i64** %new_dma_addr_list, metadata !14934, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.declare(metadata %struct.pcnet32_tx_head** %new_tx_ring, metadata !14936, metadata !DIExpression()), !dbg !14937
  call void @llvm.dbg.declare(metadata %struct.sk_buff*** %new_skb_list, metadata !14938, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.declare(metadata i32* %entries, metadata !14940, metadata !DIExpression()), !dbg !14941
  %0 = load i32, i32* %size.addr, align 4, !dbg !14942
  %sh_prom = zext i32 %0 to i64, !dbg !14942
  %shl = shl i64 1, %sh_prom, !dbg !14942
  %conv = trunc i64 %shl to i32, !dbg !14942
  store i32 %conv, i32* %entries, align 4, !dbg !14941
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14943
  call void @pcnet32_purge_tx_ring(%struct.net_device* %1) #12, !dbg !14944
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14945
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 4, !dbg !14946
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !14946
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !14947
  %4 = load i32, i32* %entries, align 4, !dbg !14948
  %conv2 = zext i32 %4 to i64, !dbg !14948
  %mul = mul i64 16, %conv2, !dbg !14949
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev1, i64 %mul, i64* %new_ring_dma_addr, i32 2592) #12, !dbg !14950
  %5 = bitcast i8* %call to %struct.pcnet32_tx_head*, !dbg !14950
  store %struct.pcnet32_tx_head* %5, %struct.pcnet32_tx_head** %new_tx_ring, align 8, !dbg !14951
  %6 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %new_tx_ring, align 8, !dbg !14952
  %cmp = icmp eq %struct.pcnet32_tx_head* %6, null, !dbg !14954
  br i1 %cmp, label %if.then, label %if.end, !dbg !14955

if.then:                                          ; preds = %entry
  br label %return, !dbg !14956

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %entries, align 4, !dbg !14957
  %conv4 = zext i32 %7 to i64, !dbg !14957
  %call5 = call i8* @kcalloc(i64 %conv4, i64 8, i32 2592) #12, !dbg !14958
  %8 = bitcast i8* %call5 to i64*, !dbg !14958
  store i64* %8, i64** %new_dma_addr_list, align 8, !dbg !14959
  %9 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !14960
  %tobool = icmp ne i64* %9, null, !dbg !14960
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !14962

if.then6:                                         ; preds = %if.end
  br label %free_new_tx_ring, !dbg !14963

if.end7:                                          ; preds = %if.end
  %10 = load i32, i32* %entries, align 4, !dbg !14964
  %conv8 = zext i32 %10 to i64, !dbg !14964
  %call9 = call i8* @kcalloc(i64 %conv8, i64 8, i32 2592) #12, !dbg !14965
  %11 = bitcast i8* %call9 to %struct.sk_buff**, !dbg !14965
  store %struct.sk_buff** %11, %struct.sk_buff*** %new_skb_list, align 8, !dbg !14966
  %12 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !14967
  %tobool10 = icmp ne %struct.sk_buff** %12, null, !dbg !14967
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !14969

if.then11:                                        ; preds = %if.end7
  br label %free_new_lists, !dbg !14970

if.end12:                                         ; preds = %if.end7
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14971
  %tx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 6, !dbg !14972
  %14 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff, align 8, !dbg !14972
  %15 = bitcast %struct.sk_buff** %14 to i8*, !dbg !14971
  call void @kfree(i8* %15) #12, !dbg !14973
  %16 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14974
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %16, i32 0, i32 8, !dbg !14975
  %17 = load i64*, i64** %tx_dma_addr, align 8, !dbg !14975
  %18 = bitcast i64* %17 to i8*, !dbg !14974
  call void @kfree(i8* %18) #12, !dbg !14976
  %19 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14977
  %pci_dev13 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %19, i32 0, i32 4, !dbg !14978
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev13, align 8, !dbg !14978
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !14979
  %21 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14980
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %21, i32 0, i32 15, !dbg !14981
  %22 = load i32, i32* %tx_ring_size, align 4, !dbg !14981
  %conv15 = zext i32 %22 to i64, !dbg !14980
  %mul16 = mul i64 16, %conv15, !dbg !14982
  %23 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14983
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %23, i32 0, i32 2, !dbg !14984
  %24 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !14984
  %25 = bitcast %struct.pcnet32_tx_head* %24 to i8*, !dbg !14983
  %26 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14985
  %tx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %26, i32 0, i32 21, !dbg !14986
  %27 = load i64, i64* %tx_ring_dma_addr, align 8, !dbg !14986
  call void @dma_free_coherent(%struct.device* %dev14, i64 %mul16, i8* %25, i64 %27) #12, !dbg !14987
  %28 = load i32, i32* %entries, align 4, !dbg !14988
  %29 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14989
  %tx_ring_size17 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %29, i32 0, i32 15, !dbg !14990
  store i32 %28, i32* %tx_ring_size17, align 4, !dbg !14991
  %30 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14992
  %tx_ring_size18 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %30, i32 0, i32 15, !dbg !14993
  %31 = load i32, i32* %tx_ring_size18, align 4, !dbg !14993
  %sub = sub i32 %31, 1, !dbg !14994
  %32 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !14995
  %tx_mod_mask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %32, i32 0, i32 17, !dbg !14996
  store i32 %sub, i32* %tx_mod_mask, align 4, !dbg !14997
  %33 = load i32, i32* %size.addr, align 4, !dbg !14998
  %shl19 = shl i32 %33, 12, !dbg !14999
  %conv20 = trunc i32 %shl19 to i16, !dbg !15000
  %34 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15001
  %tx_len_bits = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %34, i32 0, i32 19, !dbg !15002
  store i16 %conv20, i16* %tx_len_bits, align 2, !dbg !15003
  %35 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %new_tx_ring, align 8, !dbg !15004
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15005
  %tx_ring21 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 2, !dbg !15006
  store %struct.pcnet32_tx_head* %35, %struct.pcnet32_tx_head** %tx_ring21, align 8, !dbg !15007
  %37 = load i64, i64* %new_ring_dma_addr, align 8, !dbg !15008
  %38 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15009
  %tx_ring_dma_addr22 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %38, i32 0, i32 21, !dbg !15010
  store i64 %37, i64* %tx_ring_dma_addr22, align 8, !dbg !15011
  %39 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15012
  %40 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15013
  %tx_dma_addr23 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %40, i32 0, i32 8, !dbg !15014
  store i64* %39, i64** %tx_dma_addr23, align 8, !dbg !15015
  %41 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15016
  %42 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15017
  %tx_skbuff24 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %42, i32 0, i32 6, !dbg !15018
  store %struct.sk_buff** %41, %struct.sk_buff*** %tx_skbuff24, align 8, !dbg !15019
  br label %return, !dbg !15020

free_new_lists:                                   ; preds = %if.then11
  call void @llvm.dbg.label(metadata !15021), !dbg !15022
  %43 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15023
  %44 = bitcast i64* %43 to i8*, !dbg !15023
  call void @kfree(i8* %44) #12, !dbg !15024
  br label %free_new_tx_ring, !dbg !15024

free_new_tx_ring:                                 ; preds = %free_new_lists, %if.then6
  call void @llvm.dbg.label(metadata !15025), !dbg !15026
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15027
  %pci_dev25 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 4, !dbg !15028
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev25, align 8, !dbg !15028
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !15029
  %47 = load i32, i32* %entries, align 4, !dbg !15030
  %conv27 = zext i32 %47 to i64, !dbg !15030
  %mul28 = mul i64 16, %conv27, !dbg !15031
  %48 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %new_tx_ring, align 8, !dbg !15032
  %49 = bitcast %struct.pcnet32_tx_head* %48 to i8*, !dbg !15032
  %50 = load i64, i64* %new_ring_dma_addr, align 8, !dbg !15033
  call void @dma_free_coherent(%struct.device* %dev26, i64 %mul28, i8* %49, i64 %50) #12, !dbg !15034
  br label %return, !dbg !15035

return:                                           ; preds = %free_new_tx_ring, %if.end12, %if.then
  ret void, !dbg !15035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_realloc_rx_ring(%struct.net_device* %dev, %struct.pcnet32_private* %lp, i32 %size) #2 !dbg !15036 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp.addr = alloca %struct.pcnet32_private*, align 8
  %size.addr = alloca i32, align 4
  %new_ring_dma_addr = alloca i64, align 8
  %new_dma_addr_list = alloca i64*, align 8
  %new_rx_ring = alloca %struct.pcnet32_rx_head*, align 8
  %new_skb_list = alloca %struct.sk_buff**, align 8
  %new = alloca i32, align 4
  %overlap = alloca i32, align 4
  %entries = alloca i32, align 4
  %__UNIQUE_ID___x319 = alloca i32, align 4
  %__UNIQUE_ID___y320 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %rx_skbuff31 = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15037, metadata !DIExpression()), !dbg !15038
  store %struct.pcnet32_private* %lp, %struct.pcnet32_private** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp.addr, metadata !15039, metadata !DIExpression()), !dbg !15040
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata i64* %new_ring_dma_addr, metadata !15043, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.declare(metadata i64** %new_dma_addr_list, metadata !15045, metadata !DIExpression()), !dbg !15046
  call void @llvm.dbg.declare(metadata %struct.pcnet32_rx_head** %new_rx_ring, metadata !15047, metadata !DIExpression()), !dbg !15048
  call void @llvm.dbg.declare(metadata %struct.sk_buff*** %new_skb_list, metadata !15049, metadata !DIExpression()), !dbg !15050
  call void @llvm.dbg.declare(metadata i32* %new, metadata !15051, metadata !DIExpression()), !dbg !15052
  call void @llvm.dbg.declare(metadata i32* %overlap, metadata !15053, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.declare(metadata i32* %entries, metadata !15055, metadata !DIExpression()), !dbg !15056
  %0 = load i32, i32* %size.addr, align 4, !dbg !15057
  %sh_prom = zext i32 %0 to i64, !dbg !15057
  %shl = shl i64 1, %sh_prom, !dbg !15057
  %conv = trunc i64 %shl to i32, !dbg !15057
  store i32 %conv, i32* %entries, align 4, !dbg !15056
  %1 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15058
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %1, i32 0, i32 4, !dbg !15059
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !15059
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !15060
  %3 = load i32, i32* %entries, align 4, !dbg !15061
  %conv2 = zext i32 %3 to i64, !dbg !15061
  %mul = mul i64 16, %conv2, !dbg !15062
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev1, i64 %mul, i64* %new_ring_dma_addr, i32 2592) #12, !dbg !15063
  %4 = bitcast i8* %call to %struct.pcnet32_rx_head*, !dbg !15063
  store %struct.pcnet32_rx_head* %4, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15064
  %5 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15065
  %cmp = icmp eq %struct.pcnet32_rx_head* %5, null, !dbg !15067
  br i1 %cmp, label %if.then, label %if.end, !dbg !15068

if.then:                                          ; preds = %entry
  br label %return, !dbg !15069

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %entries, align 4, !dbg !15070
  %conv4 = zext i32 %6 to i64, !dbg !15070
  %call5 = call i8* @kcalloc(i64 %conv4, i64 8, i32 2592) #12, !dbg !15071
  %7 = bitcast i8* %call5 to i64*, !dbg !15071
  store i64* %7, i64** %new_dma_addr_list, align 8, !dbg !15072
  %8 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15073
  %tobool = icmp ne i64* %8, null, !dbg !15073
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !15075

if.then6:                                         ; preds = %if.end
  br label %free_new_rx_ring, !dbg !15076

if.end7:                                          ; preds = %if.end
  %9 = load i32, i32* %entries, align 4, !dbg !15077
  %conv8 = zext i32 %9 to i64, !dbg !15077
  %call9 = call i8* @kcalloc(i64 %conv8, i64 8, i32 2592) #12, !dbg !15078
  %10 = bitcast i8* %call9 to %struct.sk_buff**, !dbg !15078
  store %struct.sk_buff** %10, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15079
  %11 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15080
  %tobool10 = icmp ne %struct.sk_buff** %11, null, !dbg !15080
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !15082

if.then11:                                        ; preds = %if.end7
  br label %free_new_lists, !dbg !15083

if.end12:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x319, metadata !15084, metadata !DIExpression()), !dbg !15086
  %12 = load i32, i32* %entries, align 4, !dbg !15086
  store i32 %12, i32* %__UNIQUE_ID___x319, align 4, !dbg !15086
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y320, metadata !15087, metadata !DIExpression()), !dbg !15086
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15086
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 14, !dbg !15086
  %14 = load i32, i32* %rx_ring_size, align 8, !dbg !15086
  store i32 %14, i32* %__UNIQUE_ID___y320, align 4, !dbg !15086
  %15 = load i32, i32* %__UNIQUE_ID___x319, align 4, !dbg !15086
  %16 = load i32, i32* %__UNIQUE_ID___y320, align 4, !dbg !15086
  %cmp13 = icmp ult i32 %15, %16, !dbg !15086
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !15086

cond.true:                                        ; preds = %if.end12
  %17 = load i32, i32* %__UNIQUE_ID___x319, align 4, !dbg !15086
  br label %cond.end, !dbg !15086

cond.false:                                       ; preds = %if.end12
  %18 = load i32, i32* %__UNIQUE_ID___y320, align 4, !dbg !15086
  br label %cond.end, !dbg !15086

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !15086
  store i32 %cond, i32* %tmp, align 4, !dbg !15086
  %19 = load i32, i32* %tmp, align 4, !dbg !15086
  store i32 %19, i32* %overlap, align 4, !dbg !15088
  store i32 0, i32* %new, align 4, !dbg !15089
  br label %for.cond, !dbg !15091

for.cond:                                         ; preds = %for.inc, %cond.end
  %20 = load i32, i32* %new, align 4, !dbg !15092
  %21 = load i32, i32* %overlap, align 4, !dbg !15094
  %cmp15 = icmp slt i32 %20, %21, !dbg !15095
  br i1 %cmp15, label %for.body, label %for.end, !dbg !15096

for.body:                                         ; preds = %for.cond
  %22 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15097
  %23 = load i32, i32* %new, align 4, !dbg !15099
  %idxprom = sext i32 %23 to i64, !dbg !15097
  %arrayidx = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %22, i64 %idxprom, !dbg !15097
  %24 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15100
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %24, i32 0, i32 1, !dbg !15101
  %25 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !15101
  %26 = load i32, i32* %new, align 4, !dbg !15102
  %idxprom17 = sext i32 %26 to i64, !dbg !15100
  %arrayidx18 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %25, i64 %idxprom17, !dbg !15100
  %27 = bitcast %struct.pcnet32_rx_head* %arrayidx to i8*, !dbg !15100
  %28 = bitcast %struct.pcnet32_rx_head* %arrayidx18 to i8*, !dbg !15100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 16, i1 false), !dbg !15100
  %29 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15103
  %rx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %29, i32 0, i32 9, !dbg !15104
  %30 = load i64*, i64** %rx_dma_addr, align 8, !dbg !15104
  %31 = load i32, i32* %new, align 4, !dbg !15105
  %idxprom19 = sext i32 %31 to i64, !dbg !15103
  %arrayidx20 = getelementptr i64, i64* %30, i64 %idxprom19, !dbg !15103
  %32 = load i64, i64* %arrayidx20, align 8, !dbg !15103
  %33 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15106
  %34 = load i32, i32* %new, align 4, !dbg !15107
  %idxprom21 = sext i32 %34 to i64, !dbg !15106
  %arrayidx22 = getelementptr i64, i64* %33, i64 %idxprom21, !dbg !15106
  store i64 %32, i64* %arrayidx22, align 8, !dbg !15108
  %35 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15109
  %rx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %35, i32 0, i32 7, !dbg !15110
  %36 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !15110
  %37 = load i32, i32* %new, align 4, !dbg !15111
  %idxprom23 = sext i32 %37 to i64, !dbg !15109
  %arrayidx24 = getelementptr %struct.sk_buff*, %struct.sk_buff** %36, i64 %idxprom23, !dbg !15109
  %38 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx24, align 8, !dbg !15109
  %39 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15112
  %40 = load i32, i32* %new, align 4, !dbg !15113
  %idxprom25 = sext i32 %40 to i64, !dbg !15112
  %arrayidx26 = getelementptr %struct.sk_buff*, %struct.sk_buff** %39, i64 %idxprom25, !dbg !15112
  store %struct.sk_buff* %38, %struct.sk_buff** %arrayidx26, align 8, !dbg !15114
  br label %for.inc, !dbg !15115

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %new, align 4, !dbg !15116
  %inc = add i32 %41, 1, !dbg !15116
  store i32 %inc, i32* %new, align 4, !dbg !15116
  br label %for.cond, !dbg !15117, !llvm.loop !15118

for.end:                                          ; preds = %for.cond
  br label %for.cond27, !dbg !15120

for.cond27:                                       ; preds = %for.inc74, %for.end
  %42 = load i32, i32* %new, align 4, !dbg !15121
  %43 = load i32, i32* %entries, align 4, !dbg !15124
  %cmp28 = icmp ult i32 %42, %43, !dbg !15125
  br i1 %cmp28, label %for.body30, label %for.end76, !dbg !15126

for.body30:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %rx_skbuff31, metadata !15127, metadata !DIExpression()), !dbg !15129
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15130
  %call32 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %44, i32 1544) #12, !dbg !15131
  %45 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15132
  %46 = load i32, i32* %new, align 4, !dbg !15133
  %idxprom33 = sext i32 %46 to i64, !dbg !15132
  %arrayidx34 = getelementptr %struct.sk_buff*, %struct.sk_buff** %45, i64 %idxprom33, !dbg !15132
  store %struct.sk_buff* %call32, %struct.sk_buff** %arrayidx34, align 8, !dbg !15134
  %47 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15135
  %48 = load i32, i32* %new, align 4, !dbg !15136
  %idxprom35 = sext i32 %48 to i64, !dbg !15135
  %arrayidx36 = getelementptr %struct.sk_buff*, %struct.sk_buff** %47, i64 %idxprom35, !dbg !15135
  %49 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx36, align 8, !dbg !15135
  store %struct.sk_buff* %49, %struct.sk_buff** %rx_skbuff31, align 8, !dbg !15137
  %50 = load %struct.sk_buff*, %struct.sk_buff** %rx_skbuff31, align 8, !dbg !15138
  %tobool37 = icmp ne %struct.sk_buff* %50, null, !dbg !15138
  br i1 %tobool37, label %if.end42, label %if.then38, !dbg !15140

if.then38:                                        ; preds = %for.body30
  br label %do.body, !dbg !15141

do.body:                                          ; preds = %if.then38
  %51 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15143
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %51, i32 0, i32 33, !dbg !15143
  %52 = load i32, i32* %msg_enable, align 8, !dbg !15143
  %and = and i32 %52, 1, !dbg !15143
  %tobool39 = icmp ne i32 %and, 0, !dbg !15143
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !15146

if.then40:                                        ; preds = %do.body
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15143
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %53, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.pcnet32_realloc_rx_ring, i64 0, i64 0)) #13, !dbg !15143
  br label %if.end41, !dbg !15143

if.end41:                                         ; preds = %if.then40, %do.body
  br label %do.end, !dbg !15146

do.end:                                           ; preds = %if.end41
  br label %free_all_new, !dbg !15147

if.end42:                                         ; preds = %for.body30
  %54 = load %struct.sk_buff*, %struct.sk_buff** %rx_skbuff31, align 8, !dbg !15148
  call void @skb_reserve(%struct.sk_buff* %54, i32 0) #12, !dbg !15149
  %55 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15150
  %pci_dev43 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %55, i32 0, i32 4, !dbg !15150
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev43, align 8, !dbg !15150
  %dev44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 41, !dbg !15150
  %57 = load %struct.sk_buff*, %struct.sk_buff** %rx_skbuff31, align 8, !dbg !15150
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %57, i32 0, i32 37, !dbg !15150
  %58 = load i8*, i8** %data, align 8, !dbg !15150
  %call45 = call i64 @dma_map_single_attrs(%struct.device* %dev44, i8* %58, i64 1544, i32 2, i64 0) #12, !dbg !15150
  %59 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15151
  %60 = load i32, i32* %new, align 4, !dbg !15152
  %idxprom46 = sext i32 %60 to i64, !dbg !15151
  %arrayidx47 = getelementptr i64, i64* %59, i64 %idxprom46, !dbg !15151
  store i64 %call45, i64* %arrayidx47, align 8, !dbg !15153
  %61 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15154
  %pci_dev48 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %61, i32 0, i32 4, !dbg !15156
  %62 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev48, align 8, !dbg !15156
  %dev49 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %62, i32 0, i32 41, !dbg !15157
  %63 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15158
  %64 = load i32, i32* %new, align 4, !dbg !15159
  %idxprom50 = sext i32 %64 to i64, !dbg !15158
  %arrayidx51 = getelementptr i64, i64* %63, i64 %idxprom50, !dbg !15158
  %65 = load i64, i64* %arrayidx51, align 8, !dbg !15158
  %call52 = call i32 @dma_mapping_error(%struct.device* %dev49, i64 %65) #12, !dbg !15160
  %tobool53 = icmp ne i32 %call52, 0, !dbg !15160
  br i1 %tobool53, label %if.then54, label %if.end64, !dbg !15161

if.then54:                                        ; preds = %if.end42
  br label %do.body55, !dbg !15162

do.body55:                                        ; preds = %if.then54
  %66 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15164
  %msg_enable56 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %66, i32 0, i32 33, !dbg !15164
  %67 = load i32, i32* %msg_enable56, align 8, !dbg !15164
  %and57 = and i32 %67, 1, !dbg !15164
  %tobool58 = icmp ne i32 %and57, 0, !dbg !15164
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !15167

if.then59:                                        ; preds = %do.body55
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15164
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %68, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.pcnet32_realloc_rx_ring, i64 0, i64 0)) #13, !dbg !15164
  br label %if.end60, !dbg !15164

if.end60:                                         ; preds = %if.then59, %do.body55
  br label %do.end61, !dbg !15167

do.end61:                                         ; preds = %if.end60
  %69 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15168
  %70 = load i32, i32* %new, align 4, !dbg !15168
  %idxprom62 = sext i32 %70 to i64, !dbg !15168
  %arrayidx63 = getelementptr %struct.sk_buff*, %struct.sk_buff** %69, i64 %idxprom62, !dbg !15168
  %71 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx63, align 8, !dbg !15168
  call void @consume_skb(%struct.sk_buff* %71) #12, !dbg !15168
  br label %free_all_new, !dbg !15169

if.end64:                                         ; preds = %if.end42
  %72 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15170
  %73 = load i32, i32* %new, align 4, !dbg !15170
  %idxprom65 = sext i32 %73 to i64, !dbg !15170
  %arrayidx66 = getelementptr i64, i64* %72, i64 %idxprom65, !dbg !15170
  %74 = load i64, i64* %arrayidx66, align 8, !dbg !15170
  %conv67 = trunc i64 %74 to i32, !dbg !15170
  %75 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15171
  %76 = load i32, i32* %new, align 4, !dbg !15172
  %idxprom68 = sext i32 %76 to i64, !dbg !15171
  %arrayidx69 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %75, i64 %idxprom68, !dbg !15171
  %base = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx69, i32 0, i32 0, !dbg !15173
  store i32 %conv67, i32* %base, align 4, !dbg !15174
  %77 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15175
  %78 = load i32, i32* %new, align 4, !dbg !15176
  %idxprom70 = sext i32 %78 to i64, !dbg !15175
  %arrayidx71 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %77, i64 %idxprom70, !dbg !15175
  %buf_length = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx71, i32 0, i32 1, !dbg !15177
  store i16 -1544, i16* %buf_length, align 4, !dbg !15178
  %79 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15179
  %80 = load i32, i32* %new, align 4, !dbg !15180
  %idxprom72 = sext i32 %80 to i64, !dbg !15179
  %arrayidx73 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %79, i64 %idxprom72, !dbg !15179
  %status = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx73, i32 0, i32 2, !dbg !15181
  store i16 -32768, i16* %status, align 2, !dbg !15182
  br label %for.inc74, !dbg !15183

for.inc74:                                        ; preds = %if.end64
  %81 = load i32, i32* %new, align 4, !dbg !15184
  %inc75 = add i32 %81, 1, !dbg !15184
  store i32 %inc75, i32* %new, align 4, !dbg !15184
  br label %for.cond27, !dbg !15185, !llvm.loop !15186

for.end76:                                        ; preds = %for.cond27
  br label %for.cond77, !dbg !15188

for.cond77:                                       ; preds = %for.inc105, %for.end76
  %82 = load i32, i32* %new, align 4, !dbg !15189
  %83 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15192
  %rx_ring_size78 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %83, i32 0, i32 14, !dbg !15193
  %84 = load i32, i32* %rx_ring_size78, align 8, !dbg !15193
  %cmp79 = icmp ult i32 %82, %84, !dbg !15194
  br i1 %cmp79, label %for.body81, label %for.end107, !dbg !15195

for.body81:                                       ; preds = %for.cond77
  %85 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15196
  %rx_skbuff82 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %85, i32 0, i32 7, !dbg !15199
  %86 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff82, align 8, !dbg !15199
  %87 = load i32, i32* %new, align 4, !dbg !15200
  %idxprom83 = sext i32 %87 to i64, !dbg !15196
  %arrayidx84 = getelementptr %struct.sk_buff*, %struct.sk_buff** %86, i64 %idxprom83, !dbg !15196
  %88 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx84, align 8, !dbg !15196
  %tobool85 = icmp ne %struct.sk_buff* %88, null, !dbg !15196
  br i1 %tobool85, label %if.then86, label %if.end104, !dbg !15201

if.then86:                                        ; preds = %for.body81
  %89 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15202
  %pci_dev87 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %89, i32 0, i32 4, !dbg !15205
  %90 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev87, align 8, !dbg !15205
  %dev88 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %90, i32 0, i32 41, !dbg !15206
  %91 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15207
  %rx_dma_addr89 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %91, i32 0, i32 9, !dbg !15208
  %92 = load i64*, i64** %rx_dma_addr89, align 8, !dbg !15208
  %93 = load i32, i32* %new, align 4, !dbg !15209
  %idxprom90 = sext i32 %93 to i64, !dbg !15207
  %arrayidx91 = getelementptr i64, i64* %92, i64 %idxprom90, !dbg !15207
  %94 = load i64, i64* %arrayidx91, align 8, !dbg !15207
  %call92 = call i32 @dma_mapping_error(%struct.device* %dev88, i64 %94) #12, !dbg !15210
  %tobool93 = icmp ne i32 %call92, 0, !dbg !15210
  br i1 %tobool93, label %if.end100, label %if.then94, !dbg !15211

if.then94:                                        ; preds = %if.then86
  %95 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15212
  %pci_dev95 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %95, i32 0, i32 4, !dbg !15212
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev95, align 8, !dbg !15212
  %dev96 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %96, i32 0, i32 41, !dbg !15212
  %97 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15212
  %rx_dma_addr97 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %97, i32 0, i32 9, !dbg !15212
  %98 = load i64*, i64** %rx_dma_addr97, align 8, !dbg !15212
  %99 = load i32, i32* %new, align 4, !dbg !15212
  %idxprom98 = sext i32 %99 to i64, !dbg !15212
  %arrayidx99 = getelementptr i64, i64* %98, i64 %idxprom98, !dbg !15212
  %100 = load i64, i64* %arrayidx99, align 8, !dbg !15212
  call void @dma_unmap_single_attrs(%struct.device* %dev96, i64 %100, i64 1544, i32 2, i64 0) #12, !dbg !15212
  br label %if.end100, !dbg !15212

if.end100:                                        ; preds = %if.then94, %if.then86
  %101 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15213
  %rx_skbuff101 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %101, i32 0, i32 7, !dbg !15213
  %102 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff101, align 8, !dbg !15213
  %103 = load i32, i32* %new, align 4, !dbg !15213
  %idxprom102 = sext i32 %103 to i64, !dbg !15213
  %arrayidx103 = getelementptr %struct.sk_buff*, %struct.sk_buff** %102, i64 %idxprom102, !dbg !15213
  %104 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx103, align 8, !dbg !15213
  call void @consume_skb(%struct.sk_buff* %104) #12, !dbg !15213
  br label %if.end104, !dbg !15214

if.end104:                                        ; preds = %if.end100, %for.body81
  br label %for.inc105, !dbg !15215

for.inc105:                                       ; preds = %if.end104
  %105 = load i32, i32* %new, align 4, !dbg !15216
  %inc106 = add i32 %105, 1, !dbg !15216
  store i32 %inc106, i32* %new, align 4, !dbg !15216
  br label %for.cond77, !dbg !15217, !llvm.loop !15218

for.end107:                                       ; preds = %for.cond77
  %106 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15220
  %rx_skbuff108 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %106, i32 0, i32 7, !dbg !15221
  %107 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff108, align 8, !dbg !15221
  %108 = bitcast %struct.sk_buff** %107 to i8*, !dbg !15220
  call void @kfree(i8* %108) #12, !dbg !15222
  %109 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15223
  %rx_dma_addr109 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %109, i32 0, i32 9, !dbg !15224
  %110 = load i64*, i64** %rx_dma_addr109, align 8, !dbg !15224
  %111 = bitcast i64* %110 to i8*, !dbg !15223
  call void @kfree(i8* %111) #12, !dbg !15225
  %112 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15226
  %pci_dev110 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %112, i32 0, i32 4, !dbg !15227
  %113 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev110, align 8, !dbg !15227
  %dev111 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %113, i32 0, i32 41, !dbg !15228
  %114 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15229
  %rx_ring_size112 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %114, i32 0, i32 14, !dbg !15230
  %115 = load i32, i32* %rx_ring_size112, align 8, !dbg !15230
  %conv113 = zext i32 %115 to i64, !dbg !15229
  %mul114 = mul i64 16, %conv113, !dbg !15231
  %116 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15232
  %rx_ring115 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %116, i32 0, i32 1, !dbg !15233
  %117 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring115, align 8, !dbg !15233
  %118 = bitcast %struct.pcnet32_rx_head* %117 to i8*, !dbg !15232
  %119 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15234
  %rx_ring_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %119, i32 0, i32 20, !dbg !15235
  %120 = load i64, i64* %rx_ring_dma_addr, align 8, !dbg !15235
  call void @dma_free_coherent(%struct.device* %dev111, i64 %mul114, i8* %118, i64 %120) #12, !dbg !15236
  %121 = load i32, i32* %entries, align 4, !dbg !15237
  %122 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15238
  %rx_ring_size116 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %122, i32 0, i32 14, !dbg !15239
  store i32 %121, i32* %rx_ring_size116, align 8, !dbg !15240
  %123 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15241
  %rx_ring_size117 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %123, i32 0, i32 14, !dbg !15242
  %124 = load i32, i32* %rx_ring_size117, align 8, !dbg !15242
  %sub = sub i32 %124, 1, !dbg !15243
  %125 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15244
  %rx_mod_mask = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %125, i32 0, i32 16, !dbg !15245
  store i32 %sub, i32* %rx_mod_mask, align 8, !dbg !15246
  %126 = load i32, i32* %size.addr, align 4, !dbg !15247
  %shl118 = shl i32 %126, 4, !dbg !15248
  %conv119 = trunc i32 %shl118 to i16, !dbg !15249
  %127 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15250
  %rx_len_bits = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %127, i32 0, i32 18, !dbg !15251
  store i16 %conv119, i16* %rx_len_bits, align 8, !dbg !15252
  %128 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15253
  %129 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15254
  %rx_ring120 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %129, i32 0, i32 1, !dbg !15255
  store %struct.pcnet32_rx_head* %128, %struct.pcnet32_rx_head** %rx_ring120, align 8, !dbg !15256
  %130 = load i64, i64* %new_ring_dma_addr, align 8, !dbg !15257
  %131 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15258
  %rx_ring_dma_addr121 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %131, i32 0, i32 20, !dbg !15259
  store i64 %130, i64* %rx_ring_dma_addr121, align 8, !dbg !15260
  %132 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15261
  %133 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15262
  %rx_dma_addr122 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %133, i32 0, i32 9, !dbg !15263
  store i64* %132, i64** %rx_dma_addr122, align 8, !dbg !15264
  %134 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15265
  %135 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15266
  %rx_skbuff123 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %135, i32 0, i32 7, !dbg !15267
  store %struct.sk_buff** %134, %struct.sk_buff*** %rx_skbuff123, align 8, !dbg !15268
  br label %return, !dbg !15269

free_all_new:                                     ; preds = %do.end61, %do.end
  call void @llvm.dbg.label(metadata !15270), !dbg !15271
  br label %while.cond, !dbg !15272

while.cond:                                       ; preds = %if.end145, %free_all_new
  %136 = load i32, i32* %new, align 4, !dbg !15273
  %dec = add i32 %136, -1, !dbg !15273
  store i32 %dec, i32* %new, align 4, !dbg !15273
  %137 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15274
  %rx_ring_size124 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %137, i32 0, i32 14, !dbg !15275
  %138 = load i32, i32* %rx_ring_size124, align 8, !dbg !15275
  %cmp125 = icmp uge i32 %dec, %138, !dbg !15276
  br i1 %cmp125, label %while.body, label %while.end, !dbg !15272

while.body:                                       ; preds = %while.cond
  %139 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15277
  %140 = load i32, i32* %new, align 4, !dbg !15280
  %idxprom127 = sext i32 %140 to i64, !dbg !15277
  %arrayidx128 = getelementptr %struct.sk_buff*, %struct.sk_buff** %139, i64 %idxprom127, !dbg !15277
  %141 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx128, align 8, !dbg !15277
  %tobool129 = icmp ne %struct.sk_buff* %141, null, !dbg !15277
  br i1 %tobool129, label %if.then130, label %if.end145, !dbg !15281

if.then130:                                       ; preds = %while.body
  %142 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15282
  %pci_dev131 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %142, i32 0, i32 4, !dbg !15285
  %143 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev131, align 8, !dbg !15285
  %dev132 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %143, i32 0, i32 41, !dbg !15286
  %144 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15287
  %145 = load i32, i32* %new, align 4, !dbg !15288
  %idxprom133 = sext i32 %145 to i64, !dbg !15287
  %arrayidx134 = getelementptr i64, i64* %144, i64 %idxprom133, !dbg !15287
  %146 = load i64, i64* %arrayidx134, align 8, !dbg !15287
  %call135 = call i32 @dma_mapping_error(%struct.device* %dev132, i64 %146) #12, !dbg !15289
  %tobool136 = icmp ne i32 %call135, 0, !dbg !15289
  br i1 %tobool136, label %if.end142, label %if.then137, !dbg !15290

if.then137:                                       ; preds = %if.then130
  %147 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15291
  %pci_dev138 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %147, i32 0, i32 4, !dbg !15291
  %148 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev138, align 8, !dbg !15291
  %dev139 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %148, i32 0, i32 41, !dbg !15291
  %149 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15291
  %150 = load i32, i32* %new, align 4, !dbg !15291
  %idxprom140 = sext i32 %150 to i64, !dbg !15291
  %arrayidx141 = getelementptr i64, i64* %149, i64 %idxprom140, !dbg !15291
  %151 = load i64, i64* %arrayidx141, align 8, !dbg !15291
  call void @dma_unmap_single_attrs(%struct.device* %dev139, i64 %151, i64 1544, i32 2, i64 0) #12, !dbg !15291
  br label %if.end142, !dbg !15291

if.end142:                                        ; preds = %if.then137, %if.then130
  %152 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15292
  %153 = load i32, i32* %new, align 4, !dbg !15292
  %idxprom143 = sext i32 %153 to i64, !dbg !15292
  %arrayidx144 = getelementptr %struct.sk_buff*, %struct.sk_buff** %152, i64 %idxprom143, !dbg !15292
  %154 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx144, align 8, !dbg !15292
  call void @consume_skb(%struct.sk_buff* %154) #12, !dbg !15292
  br label %if.end145, !dbg !15293

if.end145:                                        ; preds = %if.end142, %while.body
  br label %while.cond, !dbg !15272, !llvm.loop !15294

while.end:                                        ; preds = %while.cond
  %155 = load %struct.sk_buff**, %struct.sk_buff*** %new_skb_list, align 8, !dbg !15296
  %156 = bitcast %struct.sk_buff** %155 to i8*, !dbg !15296
  call void @kfree(i8* %156) #12, !dbg !15297
  br label %free_new_lists, !dbg !15297

free_new_lists:                                   ; preds = %while.end, %if.then11
  call void @llvm.dbg.label(metadata !15298), !dbg !15299
  %157 = load i64*, i64** %new_dma_addr_list, align 8, !dbg !15300
  %158 = bitcast i64* %157 to i8*, !dbg !15300
  call void @kfree(i8* %158) #12, !dbg !15301
  br label %free_new_rx_ring, !dbg !15301

free_new_rx_ring:                                 ; preds = %free_new_lists, %if.then6
  call void @llvm.dbg.label(metadata !15302), !dbg !15303
  %159 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp.addr, align 8, !dbg !15304
  %pci_dev146 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %159, i32 0, i32 4, !dbg !15305
  %160 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev146, align 8, !dbg !15305
  %dev147 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %160, i32 0, i32 41, !dbg !15306
  %161 = load i32, i32* %entries, align 4, !dbg !15307
  %conv148 = zext i32 %161 to i64, !dbg !15307
  %mul149 = mul i64 16, %conv148, !dbg !15308
  %162 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %new_rx_ring, align 8, !dbg !15309
  %163 = bitcast %struct.pcnet32_rx_head* %162 to i8*, !dbg !15309
  %164 = load i64, i64* %new_ring_dma_addr, align 8, !dbg !15310
  call void @dma_free_coherent(%struct.device* %dev147, i64 %mul149, i8* %163, i64 %164) #12, !dbg !15311
  br label %return, !dbg !15312

return:                                           ; preds = %free_new_rx_ring, %for.end107, %if.then
  ret void, !dbg !15312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_netif_start(%struct.net_device* %dev) #2 !dbg !15313 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %ioaddr = alloca i64, align 8
  %val = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15314, metadata !DIExpression()), !dbg !15315
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !15316, metadata !DIExpression()), !dbg !15317
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15318
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15319
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !15319
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !15317
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !15320, metadata !DIExpression()), !dbg !15321
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15322
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 5, !dbg !15323
  %3 = load i64, i64* %base_addr, align 8, !dbg !15323
  store i64 %3, i64* %ioaddr, align 8, !dbg !15321
  call void @llvm.dbg.declare(metadata i16* %val, metadata !15324, metadata !DIExpression()), !dbg !15325
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15326
  call void @netif_wake_queue(%struct.net_device* %4) #12, !dbg !15327
  %5 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15328
  %a = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %5, i32 0, i32 10, !dbg !15329
  %6 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15329
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %6, i32 0, i32 0, !dbg !15330
  %7 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !15330
  %8 = load i64, i64* %ioaddr, align 8, !dbg !15331
  %call1 = call zeroext i16 %7(i64 %8, i32 3) #12, !dbg !15328
  store i16 %call1, i16* %val, align 2, !dbg !15332
  %9 = load i16, i16* %val, align 2, !dbg !15333
  %conv = zext i16 %9 to i32, !dbg !15333
  %and = and i32 %conv, 255, !dbg !15333
  %conv2 = trunc i32 %and to i16, !dbg !15333
  store i16 %conv2, i16* %val, align 2, !dbg !15333
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15334
  %a3 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 10, !dbg !15335
  %11 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a3, align 8, !dbg !15335
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %11, i32 0, i32 1, !dbg !15336
  %12 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !15336
  %13 = load i64, i64* %ioaddr, align 8, !dbg !15337
  %14 = load i16, i16* %val, align 2, !dbg !15338
  call void %12(i64 %13, i32 3, i16 zeroext %14) #12, !dbg !15334
  %15 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15339
  %napi = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %15, i32 0, i32 25, !dbg !15340
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !15341
  ret void, !dbg !15342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_disable(%struct.net_device* %dev) #2 !dbg !15343 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !13436, metadata !DIExpression()), !dbg !15344
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15349, metadata !DIExpression()), !dbg !15350
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15351, metadata !DIExpression()), !dbg !15352
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !15353, metadata !DIExpression()), !dbg !15354
  call void @local_bh_disable() #12, !dbg !15355
  store i32 0, i32* %cpu, align 4, !dbg !15356
  store i32 0, i32* %i, align 4, !dbg !15357
  br label %for.cond, !dbg !15358

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15359
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15360
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !15361
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !15361
  %cmp = icmp ult i32 %0, %2, !dbg !15362
  br i1 %cmp, label %for.body, label %for.end, !dbg !15363

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !15364, metadata !DIExpression()), !dbg !15365
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15366
  %4 = load i32, i32* %i, align 4, !dbg !15367
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !15368
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !15365
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !15369
  %6 = load i32, i32* %cpu, align 4, !dbg !15370
  call void @__netif_tx_lock(%struct.netdev_queue* %5, i32 %6) #12, !dbg !15371
  %7 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !15372
  store %struct.netdev_queue* %7, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !15373
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %8, i32 0, i32 10, !dbg !15374
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !15375
  %9 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !15376
  call void @__netif_tx_unlock(%struct.netdev_queue* %9) #12, !dbg !15377
  br label %for.inc, !dbg !15378

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !15379
  %inc = add i32 %10, 1, !dbg !15379
  store i32 %inc, i32* %i, align 4, !dbg !15379
  br label %for.cond, !dbg !15380, !llvm.loop !15381

for.end:                                          ; preds = %for.cond
  call void @local_bh_enable() #12, !dbg !15383
  ret void, !dbg !15384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_disable() #2 !dbg !15385 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !15387, metadata !DIExpression()), !dbg !15390
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !15396, metadata !DIExpression()), !dbg !15398
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !15399, metadata !DIExpression()), !dbg !15403
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !15404, metadata !DIExpression()), !dbg !15405
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !15406, metadata !DIExpression()), !dbg !15407
  %tmp = alloca i64, align 8
  br label %__here, !dbg !15408

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !15410), !dbg !15408
  store i64 ptrtoint (i8* blockaddress(@local_bh_disable, %__here) to i64), i64* %tmp, align 8, !dbg !15408
  %0 = load i64, i64* %tmp, align 8, !dbg !15408
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !15411
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !15398
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #7, !dbg !15398
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !15398

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !15398
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !15398
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !15398

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !15398
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !15398
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !15398

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !15398
  br label %__local_bh_disable_ip.exit, !dbg !15398

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !15398

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !15398
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !15398
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !15403
  %conv.i.i = sext i32 %7 to i64, !dbg !15403
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !15403
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !15403
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !15403
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !15403
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #7, !dbg !15403, !srcloc !15412
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15413, !srcloc !15414
  ret void, !dbg !15415

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_lock(%struct.netdev_queue* %txq, i32 %cpu) #2 !dbg !15416 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13008, metadata !DIExpression()), !dbg !15419
  %txq.addr = alloca %struct.netdev_queue*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !15421, metadata !DIExpression()), !dbg !15422
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !15423, metadata !DIExpression()), !dbg !15424
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !15425
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 7, !dbg !15426
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15427, !srcloc !13038
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15428
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !15428
  %rlock.i = bitcast %union.anon.46* %2 to %struct.raw_spinlock*, !dbg !15428
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !15429
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !15430
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 8, !dbg !15431
  store i32 %3, i32* %xmit_lock_owner, align 8, !dbg !15432
  ret void, !dbg !15433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_unlock(%struct.netdev_queue* %txq) #2 !dbg !15434 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13002, metadata !DIExpression()), !dbg !15435
  %txq.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !15437, metadata !DIExpression()), !dbg !15438
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !15439
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 8, !dbg !15440
  store i32 -1, i32* %xmit_lock_owner, align 8, !dbg !15441
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !15442
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 7, !dbg !15443
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15444, !srcloc !13138
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15445
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !15445
  %rlock.i = bitcast %union.anon.46* %3 to %struct.raw_spinlock*, !dbg !15445
  ret void, !dbg !15446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_enable() #2 !dbg !15447 {
entry:
  %tmp = alloca i64, align 8
  br label %__here, !dbg !15448

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !15450), !dbg !15448
  store i64 ptrtoint (i8* blockaddress(@local_bh_enable, %__here) to i64), i64* %tmp, align 8, !dbg !15448
  %0 = load i64, i64* %tmp, align 8, !dbg !15448
  call void @__local_bh_enable_ip(i64 %0, i32 512) #12, !dbg !15451
  ret void, !dbg !15452

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_loopback_test(%struct.net_device* %dev, i64* %data1) #2 !dbg !7923 {
entry:
  %lock.addr.i296 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i296, metadata !8236, metadata !DIExpression()), !dbg !15453
  %lock.addr.i291 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i291, metadata !9351, metadata !DIExpression()), !dbg !15464
  %flags.addr.i292 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i292, metadata !9357, metadata !DIExpression()), !dbg !15466
  %tmp.i293 = alloca i32, align 4
  %tmp8.i294 = alloca i32, align 4
  %lock.addr.i289 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i289, metadata !9351, metadata !DIExpression()), !dbg !15467
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9357, metadata !DIExpression()), !dbg !15469
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8236, metadata !DIExpression()), !dbg !15470
  %dev.addr = alloca %struct.net_device*, align 8
  %data1.addr = alloca i64*, align 8
  %lp = alloca %struct.pcnet32_private*, align 8
  %a = alloca %struct.pcnet32_access*, align 8
  %ioaddr = alloca i64, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %x = alloca i32, align 4
  %i = alloca i32, align 4
  %numbuffs = alloca i32, align 4
  %status = alloca i16, align 2
  %teststatus = alloca i16, align 2
  %rc = alloca i32, align 4
  %size = alloca i32, align 4
  %packet = alloca i8*, align 8
  %flags = alloca i64, align 8
  %ticks = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__UNIQUE_ID___x327 = alloca i32, align 4
  %__UNIQUE_ID___y328 = alloca i32, align 4
  %__UNIQUE_ID___x325 = alloca i32, align 4
  %__UNIQUE_ID___y326 = alloca i32, align 4
  %tmp23 = alloca i32, align 4
  %tmp26 = alloca i32, align 4
  %__dummy152 = alloca i64, align 8
  %__dummy2153 = alloca i64, align 8
  %tmp156 = alloca i32, align 4
  %__dummy160 = alloca i64, align 8
  %__dummy2161 = alloca i64, align 8
  %tmp164 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15477, metadata !DIExpression()), !dbg !15478
  store i64* %data1, i64** %data1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data1.addr, metadata !15479, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.declare(metadata %struct.pcnet32_private** %lp, metadata !15481, metadata !DIExpression()), !dbg !15482
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15483
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15484
  %1 = bitcast i8* %call to %struct.pcnet32_private*, !dbg !15484
  store %struct.pcnet32_private* %1, %struct.pcnet32_private** %lp, align 8, !dbg !15482
  call void @llvm.dbg.declare(metadata %struct.pcnet32_access** %a, metadata !15485, metadata !DIExpression()), !dbg !15486
  %2 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15487
  %a1 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %2, i32 0, i32 10, !dbg !15488
  %3 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a1, align 8, !dbg !15488
  store %struct.pcnet32_access* %3, %struct.pcnet32_access** %a, align 8, !dbg !15486
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !15489, metadata !DIExpression()), !dbg !15490
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15491
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 5, !dbg !15492
  %5 = load i64, i64* %base_addr, align 8, !dbg !15492
  store i64 %5, i64* %ioaddr, align 8, !dbg !15490
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15493, metadata !DIExpression()), !dbg !15494
  call void @llvm.dbg.declare(metadata i32* %x, metadata !15495, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15497, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.declare(metadata i32* %numbuffs, metadata !15499, metadata !DIExpression()), !dbg !15500
  store i32 4, i32* %numbuffs, align 4, !dbg !15500
  call void @llvm.dbg.declare(metadata i16* %status, metadata !15501, metadata !DIExpression()), !dbg !15502
  store i16 -32000, i16* %status, align 2, !dbg !15502
  call void @llvm.dbg.declare(metadata i16* %teststatus, metadata !15503, metadata !DIExpression()), !dbg !15504
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !15505, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.declare(metadata i32* %size, metadata !15507, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !15509, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15511, metadata !DIExpression()), !dbg !15512
  call void @llvm.dbg.declare(metadata i64* %ticks, metadata !15513, metadata !DIExpression()), !dbg !15514
  store i32 1, i32* %rc, align 4, !dbg !15515
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15516
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %6) #12, !dbg !15518
  br i1 %call2, label %if.then, label %if.end, !dbg !15519

if.then:                                          ; preds = %entry
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15520
  call void @pcnet32_netif_stop(%struct.net_device* %7) #12, !dbg !15521
  br label %if.end, !dbg !15521

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !15522

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !15523

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15524, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15527, metadata !DIExpression()), !dbg !15526
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15526
  %conv = zext i1 %cmp to i32, !dbg !15526
  store i32 1, i32* %tmp, align 4, !dbg !15526
  %8 = load i32, i32* %tmp, align 4, !dbg !15526
  br label %do.body4, !dbg !15528

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !15529

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !15530

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !15532, metadata !DIExpression()), !dbg !15535
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !15536, metadata !DIExpression()), !dbg !15535
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !15535
  %conv10 = zext i1 %cmp9 to i32, !dbg !15535
  store i32 1, i32* %tmp11, align 4, !dbg !15535
  %9 = load i32, i32* %tmp11, align 4, !dbg !15535
  %call12 = call i64 @arch_local_irq_save() #12, !dbg !15537
  store i64 %call12, i64* %flags, align 8, !dbg !15537
  br label %do.end, !dbg !15537

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !15530

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !15529

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15538, !srcloc !15539
  br label %do.body15, !dbg !15538

do.body15:                                        ; preds = %do.body14
  %10 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15540
  %lock = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %10, i32 0, i32 11, !dbg !15540
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15541
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !15542
  %rlock.i = bitcast %union.anon.46* %12 to %struct.raw_spinlock*, !dbg !15542
  br label %do.end17, !dbg !15540

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !15538

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !15529

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !15528

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !15523

do.end21:                                         ; preds = %do.end20
  %13 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15543
  %a22 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %13, i32 0, i32 10, !dbg !15544
  %14 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a22, align 8, !dbg !15544
  %write_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %14, i32 0, i32 1, !dbg !15545
  %15 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr, align 8, !dbg !15545
  %16 = load i64, i64* %ioaddr, align 8, !dbg !15546
  call void %15(i64 %16, i32 0, i16 zeroext 4) #12, !dbg !15543
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x327, metadata !15547, metadata !DIExpression()), !dbg !15549
  %17 = load i32, i32* %numbuffs, align 4, !dbg !15549
  store i32 %17, i32* %__UNIQUE_ID___x327, align 4, !dbg !15549
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y328, metadata !15550, metadata !DIExpression()), !dbg !15549
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x325, metadata !15551, metadata !DIExpression()), !dbg !15553
  %18 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15553
  %rx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %18, i32 0, i32 14, !dbg !15553
  %19 = load i32, i32* %rx_ring_size, align 8, !dbg !15553
  store i32 %19, i32* %__UNIQUE_ID___x325, align 4, !dbg !15553
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y326, metadata !15554, metadata !DIExpression()), !dbg !15553
  %20 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15553
  %tx_ring_size = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %20, i32 0, i32 15, !dbg !15553
  %21 = load i32, i32* %tx_ring_size, align 4, !dbg !15553
  store i32 %21, i32* %__UNIQUE_ID___y326, align 4, !dbg !15553
  %22 = load i32, i32* %__UNIQUE_ID___x325, align 4, !dbg !15553
  %23 = load i32, i32* %__UNIQUE_ID___y326, align 4, !dbg !15553
  %cmp24 = icmp ult i32 %22, %23, !dbg !15553
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !15553

cond.true:                                        ; preds = %do.end21
  %24 = load i32, i32* %__UNIQUE_ID___x325, align 4, !dbg !15553
  br label %cond.end, !dbg !15553

cond.false:                                       ; preds = %do.end21
  %25 = load i32, i32* %__UNIQUE_ID___y326, align 4, !dbg !15553
  br label %cond.end, !dbg !15553

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %24, %cond.true ], [ %25, %cond.false ], !dbg !15553
  store i32 %cond, i32* %tmp23, align 4, !dbg !15553
  %26 = load i32, i32* %tmp23, align 4, !dbg !15553
  store i32 %26, i32* %__UNIQUE_ID___y328, align 4, !dbg !15549
  %27 = load i32, i32* %__UNIQUE_ID___x327, align 4, !dbg !15549
  %28 = load i32, i32* %__UNIQUE_ID___y328, align 4, !dbg !15549
  %cmp27 = icmp slt i32 %27, %28, !dbg !15549
  br i1 %cmp27, label %cond.true29, label %cond.false30, !dbg !15549

cond.true29:                                      ; preds = %cond.end
  %29 = load i32, i32* %__UNIQUE_ID___x327, align 4, !dbg !15549
  br label %cond.end31, !dbg !15549

cond.false30:                                     ; preds = %cond.end
  %30 = load i32, i32* %__UNIQUE_ID___y328, align 4, !dbg !15549
  br label %cond.end31, !dbg !15549

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi i32 [ %29, %cond.true29 ], [ %30, %cond.false30 ], !dbg !15549
  store i32 %cond32, i32* %tmp26, align 4, !dbg !15549
  %31 = load i32, i32* %tmp26, align 4, !dbg !15549
  store i32 %31, i32* %numbuffs, align 4, !dbg !15555
  %32 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15556
  %a33 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %32, i32 0, i32 10, !dbg !15557
  %33 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a33, align 8, !dbg !15557
  %reset = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %33, i32 0, i32 6, !dbg !15558
  %34 = load void (i64)*, void (i64)** %reset, align 8, !dbg !15558
  %35 = load i64, i64* %ioaddr, align 8, !dbg !15559
  call void %34(i64 %35) #12, !dbg !15556
  %36 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15560
  %a34 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %36, i32 0, i32 10, !dbg !15561
  %37 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a34, align 8, !dbg !15561
  %write_csr35 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %37, i32 0, i32 1, !dbg !15562
  %38 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr35, align 8, !dbg !15562
  %39 = load i64, i64* %ioaddr, align 8, !dbg !15563
  call void %38(i64 %39, i32 4, i16 zeroext 2325) #12, !dbg !15560
  %40 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15564
  %a36 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %40, i32 0, i32 10, !dbg !15565
  %41 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a36, align 8, !dbg !15565
  %write_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %41, i32 0, i32 3, !dbg !15566
  %42 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr, align 8, !dbg !15566
  %43 = load i64, i64* %ioaddr, align 8, !dbg !15567
  call void %42(i64 %43, i32 20, i16 zeroext 2) #12, !dbg !15564
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15568
  call void @pcnet32_restart(%struct.net_device* %44, i32 0) #12, !dbg !15569
  %45 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15570
  %a37 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %45, i32 0, i32 10, !dbg !15571
  %46 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a37, align 8, !dbg !15571
  %write_csr38 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %46, i32 0, i32 1, !dbg !15572
  %47 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr38, align 8, !dbg !15572
  %48 = load i64, i64* %ioaddr, align 8, !dbg !15573
  call void %47(i64 %48, i32 0, i16 zeroext 4) #12, !dbg !15570
  store i32 75, i32* %size, align 4, !dbg !15574
  store i32 0, i32* %x, align 4, !dbg !15575
  br label %for.cond, !dbg !15577

for.cond:                                         ; preds = %for.inc120, %cond.end31
  %49 = load i32, i32* %x, align 4, !dbg !15578
  %50 = load i32, i32* %numbuffs, align 4, !dbg !15580
  %cmp39 = icmp slt i32 %49, %50, !dbg !15581
  br i1 %cmp39, label %for.body, label %for.end122, !dbg !15582

for.body:                                         ; preds = %for.cond
  %51 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15583
  %52 = load i32, i32* %size, align 4, !dbg !15585
  %call41 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %51, i32 %52) #12, !dbg !15586
  store %struct.sk_buff* %call41, %struct.sk_buff** %skb, align 8, !dbg !15587
  %53 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15588
  %tobool = icmp ne %struct.sk_buff* %53, null, !dbg !15588
  br i1 %tobool, label %if.end48, label %if.then42, !dbg !15590

if.then42:                                        ; preds = %for.body
  br label %do.body43, !dbg !15591

do.body43:                                        ; preds = %if.then42
  %54 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15593
  %msg_enable = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %54, i32 0, i32 33, !dbg !15593
  %55 = load i32, i32* %msg_enable, align 8, !dbg !15593
  %and = and i32 %55, 8192, !dbg !15593
  %tobool44 = icmp ne i32 %and, 0, !dbg !15593
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !15596

if.then45:                                        ; preds = %do.body43
  %56 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15593
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %56, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.89, i64 0, i64 0), i32 1008) #13, !dbg !15593
  br label %if.end46, !dbg !15593

if.end46:                                         ; preds = %if.then45, %do.body43
  br label %do.end47, !dbg !15596

do.end47:                                         ; preds = %if.end46
  br label %clean_up, !dbg !15597

if.end48:                                         ; preds = %for.body
  %57 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15598
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %57, i32 0, i32 37, !dbg !15599
  %58 = load i8*, i8** %data, align 8, !dbg !15599
  store i8* %58, i8** %packet, align 8, !dbg !15600
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15601
  %60 = load i32, i32* %size, align 4, !dbg !15602
  %call49 = call i8* @skb_put(%struct.sk_buff* %59, i32 %60) #12, !dbg !15603
  %61 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15604
  %62 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15605
  %tx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %62, i32 0, i32 6, !dbg !15606
  %63 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff, align 8, !dbg !15606
  %64 = load i32, i32* %x, align 4, !dbg !15607
  %idxprom = sext i32 %64 to i64, !dbg !15605
  %arrayidx = getelementptr %struct.sk_buff*, %struct.sk_buff** %63, i64 %idxprom, !dbg !15605
  store %struct.sk_buff* %61, %struct.sk_buff** %arrayidx, align 8, !dbg !15608
  %65 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15609
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %65, i32 0, i32 5, !dbg !15609
  %66 = load i32, i32* %len, align 8, !dbg !15609
  %sub = sub i32 0, %66, !dbg !15609
  %conv50 = trunc i32 %sub to i16, !dbg !15609
  %67 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15610
  %tx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %67, i32 0, i32 2, !dbg !15611
  %68 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring, align 8, !dbg !15611
  %69 = load i32, i32* %x, align 4, !dbg !15612
  %idxprom51 = sext i32 %69 to i64, !dbg !15610
  %arrayidx52 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %68, i64 %idxprom51, !dbg !15610
  %length = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx52, i32 0, i32 1, !dbg !15613
  store i16 %conv50, i16* %length, align 4, !dbg !15614
  %70 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15615
  %tx_ring53 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %70, i32 0, i32 2, !dbg !15616
  %71 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring53, align 8, !dbg !15616
  %72 = load i32, i32* %x, align 4, !dbg !15617
  %idxprom54 = sext i32 %72 to i64, !dbg !15615
  %arrayidx55 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %71, i64 %idxprom54, !dbg !15615
  %misc = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx55, i32 0, i32 3, !dbg !15618
  store i32 0, i32* %misc, align 4, !dbg !15619
  store i32 0, i32* %i, align 4, !dbg !15620
  br label %for.cond56, !dbg !15622

for.cond56:                                       ; preds = %for.inc, %if.end48
  %73 = load i32, i32* %i, align 4, !dbg !15623
  %cmp57 = icmp slt i32 %73, 6, !dbg !15625
  br i1 %cmp57, label %for.body59, label %for.end, !dbg !15626

for.body59:                                       ; preds = %for.cond56
  %74 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15627
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %74, i32 0, i32 74, !dbg !15628
  %75 = load i8*, i8** %dev_addr, align 8, !dbg !15628
  %76 = load i32, i32* %i, align 4, !dbg !15629
  %idxprom60 = sext i32 %76 to i64, !dbg !15627
  %arrayidx61 = getelementptr i8, i8* %75, i64 %idxprom60, !dbg !15627
  %77 = load i8, i8* %arrayidx61, align 1, !dbg !15627
  %78 = load i8*, i8** %packet, align 8, !dbg !15630
  %incdec.ptr = getelementptr i8, i8* %78, i32 1, !dbg !15630
  store i8* %incdec.ptr, i8** %packet, align 8, !dbg !15630
  store i8 %77, i8* %78, align 1, !dbg !15631
  br label %for.inc, !dbg !15632

for.inc:                                          ; preds = %for.body59
  %79 = load i32, i32* %i, align 4, !dbg !15633
  %inc = add i32 %79, 1, !dbg !15633
  store i32 %inc, i32* %i, align 4, !dbg !15633
  br label %for.cond56, !dbg !15634, !llvm.loop !15635

for.end:                                          ; preds = %for.cond56
  store i32 0, i32* %i, align 4, !dbg !15637
  br label %for.cond62, !dbg !15639

for.cond62:                                       ; preds = %for.inc70, %for.end
  %80 = load i32, i32* %i, align 4, !dbg !15640
  %cmp63 = icmp slt i32 %80, 6, !dbg !15642
  br i1 %cmp63, label %for.body65, label %for.end72, !dbg !15643

for.body65:                                       ; preds = %for.cond62
  %81 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15644
  %dev_addr66 = getelementptr inbounds %struct.net_device, %struct.net_device* %81, i32 0, i32 74, !dbg !15645
  %82 = load i8*, i8** %dev_addr66, align 8, !dbg !15645
  %83 = load i32, i32* %i, align 4, !dbg !15646
  %idxprom67 = sext i32 %83 to i64, !dbg !15644
  %arrayidx68 = getelementptr i8, i8* %82, i64 %idxprom67, !dbg !15644
  %84 = load i8, i8* %arrayidx68, align 1, !dbg !15644
  %85 = load i8*, i8** %packet, align 8, !dbg !15647
  %incdec.ptr69 = getelementptr i8, i8* %85, i32 1, !dbg !15647
  store i8* %incdec.ptr69, i8** %packet, align 8, !dbg !15647
  store i8 %84, i8* %85, align 1, !dbg !15648
  br label %for.inc70, !dbg !15649

for.inc70:                                        ; preds = %for.body65
  %86 = load i32, i32* %i, align 4, !dbg !15650
  %inc71 = add i32 %86, 1, !dbg !15650
  store i32 %inc71, i32* %i, align 4, !dbg !15650
  br label %for.cond62, !dbg !15651, !llvm.loop !15652

for.end72:                                        ; preds = %for.cond62
  %87 = load i8*, i8** %packet, align 8, !dbg !15654
  %incdec.ptr73 = getelementptr i8, i8* %87, i32 1, !dbg !15654
  store i8* %incdec.ptr73, i8** %packet, align 8, !dbg !15654
  store i8 8, i8* %87, align 1, !dbg !15655
  %88 = load i8*, i8** %packet, align 8, !dbg !15656
  %incdec.ptr74 = getelementptr i8, i8* %88, i32 1, !dbg !15656
  store i8* %incdec.ptr74, i8** %packet, align 8, !dbg !15656
  store i8 6, i8* %88, align 1, !dbg !15657
  %89 = load i32, i32* %x, align 4, !dbg !15658
  %conv75 = trunc i32 %89 to i8, !dbg !15658
  %90 = load i8*, i8** %packet, align 8, !dbg !15659
  %incdec.ptr76 = getelementptr i8, i8* %90, i32 1, !dbg !15659
  store i8* %incdec.ptr76, i8** %packet, align 8, !dbg !15659
  store i8 %conv75, i8* %90, align 1, !dbg !15660
  store i32 0, i32* %i, align 4, !dbg !15661
  br label %for.cond77, !dbg !15663

for.cond77:                                       ; preds = %for.inc83, %for.end72
  %91 = load i32, i32* %i, align 4, !dbg !15664
  %cmp78 = icmp slt i32 %91, 60, !dbg !15666
  br i1 %cmp78, label %for.body80, label %for.end85, !dbg !15667

for.body80:                                       ; preds = %for.cond77
  %92 = load i32, i32* %i, align 4, !dbg !15668
  %conv81 = trunc i32 %92 to i8, !dbg !15668
  %93 = load i8*, i8** %packet, align 8, !dbg !15669
  %incdec.ptr82 = getelementptr i8, i8* %93, i32 1, !dbg !15669
  store i8* %incdec.ptr82, i8** %packet, align 8, !dbg !15669
  store i8 %conv81, i8* %93, align 1, !dbg !15670
  br label %for.inc83, !dbg !15671

for.inc83:                                        ; preds = %for.body80
  %94 = load i32, i32* %i, align 4, !dbg !15672
  %inc84 = add i32 %94, 1, !dbg !15672
  store i32 %inc84, i32* %i, align 4, !dbg !15672
  br label %for.cond77, !dbg !15673, !llvm.loop !15674

for.end85:                                        ; preds = %for.cond77
  %95 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15676
  %pci_dev = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %95, i32 0, i32 4, !dbg !15676
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !15676
  %dev86 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %96, i32 0, i32 41, !dbg !15676
  %97 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15676
  %data87 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %97, i32 0, i32 37, !dbg !15676
  %98 = load i8*, i8** %data87, align 8, !dbg !15676
  %99 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15676
  %len88 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %99, i32 0, i32 5, !dbg !15676
  %100 = load i32, i32* %len88, align 8, !dbg !15676
  %conv89 = zext i32 %100 to i64, !dbg !15676
  %call90 = call i64 @dma_map_single_attrs(%struct.device* %dev86, i8* %98, i64 %conv89, i32 1, i64 0) #12, !dbg !15676
  %101 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15677
  %tx_dma_addr = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %101, i32 0, i32 8, !dbg !15678
  %102 = load i64*, i64** %tx_dma_addr, align 8, !dbg !15678
  %103 = load i32, i32* %x, align 4, !dbg !15679
  %idxprom91 = sext i32 %103 to i64, !dbg !15677
  %arrayidx92 = getelementptr i64, i64* %102, i64 %idxprom91, !dbg !15677
  store i64 %call90, i64* %arrayidx92, align 8, !dbg !15680
  %104 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15681
  %pci_dev93 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %104, i32 0, i32 4, !dbg !15683
  %105 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev93, align 8, !dbg !15683
  %dev94 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %105, i32 0, i32 41, !dbg !15684
  %106 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15685
  %tx_dma_addr95 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %106, i32 0, i32 8, !dbg !15686
  %107 = load i64*, i64** %tx_dma_addr95, align 8, !dbg !15686
  %108 = load i32, i32* %x, align 4, !dbg !15687
  %idxprom96 = sext i32 %108 to i64, !dbg !15685
  %arrayidx97 = getelementptr i64, i64* %107, i64 %idxprom96, !dbg !15685
  %109 = load i64, i64* %arrayidx97, align 8, !dbg !15685
  %call98 = call i32 @dma_mapping_error(%struct.device* %dev94, i64 %109) #12, !dbg !15688
  %tobool99 = icmp ne i32 %call98, 0, !dbg !15688
  br i1 %tobool99, label %if.then100, label %if.end108, !dbg !15689

if.then100:                                       ; preds = %for.end85
  br label %do.body101, !dbg !15690

do.body101:                                       ; preds = %if.then100
  %110 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15692
  %msg_enable102 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %110, i32 0, i32 33, !dbg !15692
  %111 = load i32, i32* %msg_enable102, align 8, !dbg !15692
  %and103 = and i32 %111, 8192, !dbg !15692
  %tobool104 = icmp ne i32 %and103, 0, !dbg !15692
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !15695

if.then105:                                       ; preds = %do.body101
  %112 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15692
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %112, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.90, i64 0, i64 0), i32 1037) #13, !dbg !15692
  br label %if.end106, !dbg !15692

if.end106:                                        ; preds = %if.then105, %do.body101
  br label %do.end107, !dbg !15695

do.end107:                                        ; preds = %if.end106
  br label %clean_up, !dbg !15696

if.end108:                                        ; preds = %for.end85
  %113 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15697
  %tx_dma_addr109 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %113, i32 0, i32 8, !dbg !15697
  %114 = load i64*, i64** %tx_dma_addr109, align 8, !dbg !15697
  %115 = load i32, i32* %x, align 4, !dbg !15697
  %idxprom110 = sext i32 %115 to i64, !dbg !15697
  %arrayidx111 = getelementptr i64, i64* %114, i64 %idxprom110, !dbg !15697
  %116 = load i64, i64* %arrayidx111, align 8, !dbg !15697
  %conv112 = trunc i64 %116 to i32, !dbg !15697
  %117 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15698
  %tx_ring113 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %117, i32 0, i32 2, !dbg !15699
  %118 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring113, align 8, !dbg !15699
  %119 = load i32, i32* %x, align 4, !dbg !15700
  %idxprom114 = sext i32 %119 to i64, !dbg !15698
  %arrayidx115 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %118, i64 %idxprom114, !dbg !15698
  %base = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx115, i32 0, i32 0, !dbg !15701
  store i32 %conv112, i32* %base, align 4, !dbg !15702
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15703, !srcloc !15704
  %120 = load i16, i16* %status, align 2, !dbg !15705
  %121 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15706
  %tx_ring116 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %121, i32 0, i32 2, !dbg !15707
  %122 = load %struct.pcnet32_tx_head*, %struct.pcnet32_tx_head** %tx_ring116, align 8, !dbg !15707
  %123 = load i32, i32* %x, align 4, !dbg !15708
  %idxprom117 = sext i32 %123 to i64, !dbg !15706
  %arrayidx118 = getelementptr %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %122, i64 %idxprom117, !dbg !15706
  %status119 = getelementptr inbounds %struct.pcnet32_tx_head, %struct.pcnet32_tx_head* %arrayidx118, i32 0, i32 2, !dbg !15709
  store i16 %120, i16* %status119, align 2, !dbg !15710
  br label %for.inc120, !dbg !15711

for.inc120:                                       ; preds = %if.end108
  %124 = load i32, i32* %x, align 4, !dbg !15712
  %inc121 = add i32 %124, 1, !dbg !15712
  store i32 %inc121, i32* %x, align 4, !dbg !15712
  br label %for.cond, !dbg !15713, !llvm.loop !15714

for.end122:                                       ; preds = %for.cond
  %125 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15716
  %read_bcr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %125, i32 0, i32 2, !dbg !15717
  %126 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr, align 8, !dbg !15717
  %127 = load i64, i64* %ioaddr, align 8, !dbg !15718
  %call123 = call zeroext i16 %126(i64 %127, i32 32) #12, !dbg !15716
  %conv124 = zext i16 %call123 to i32, !dbg !15716
  store i32 %conv124, i32* %x, align 4, !dbg !15719
  %128 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15720
  %write_bcr125 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %128, i32 0, i32 3, !dbg !15721
  %129 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr125, align 8, !dbg !15721
  %130 = load i64, i64* %ioaddr, align 8, !dbg !15722
  %131 = load i32, i32* %x, align 4, !dbg !15723
  %or = or i32 %131, 2, !dbg !15724
  %conv126 = trunc i32 %or to i16, !dbg !15723
  call void %129(i64 %130, i32 32, i16 zeroext %conv126) #12, !dbg !15720
  %132 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15725
  %read_csr = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %132, i32 0, i32 0, !dbg !15726
  %133 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr, align 8, !dbg !15726
  %134 = load i64, i64* %ioaddr, align 8, !dbg !15727
  %call127 = call zeroext i16 %133(i64 %134, i32 15) #12, !dbg !15725
  %conv128 = zext i16 %call127 to i32, !dbg !15725
  %and129 = and i32 %conv128, 65532, !dbg !15728
  store i32 %and129, i32* %x, align 4, !dbg !15729
  %135 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15730
  %a130 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %135, i32 0, i32 10, !dbg !15731
  %136 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a130, align 8, !dbg !15731
  %write_csr131 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %136, i32 0, i32 1, !dbg !15732
  %137 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr131, align 8, !dbg !15732
  %138 = load i64, i64* %ioaddr, align 8, !dbg !15733
  %139 = load i32, i32* %x, align 4, !dbg !15734
  %or132 = or i32 %139, 68, !dbg !15735
  %conv133 = trunc i32 %or132 to i16, !dbg !15734
  call void %137(i64 %138, i32 15, i16 zeroext %conv133) #12, !dbg !15730
  store i16 -32768, i16* %teststatus, align 2, !dbg !15736
  %140 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15737
  %a134 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %140, i32 0, i32 10, !dbg !15738
  %141 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a134, align 8, !dbg !15738
  %write_csr135 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %141, i32 0, i32 1, !dbg !15739
  %142 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr135, align 8, !dbg !15739
  %143 = load i64, i64* %ioaddr, align 8, !dbg !15740
  call void %142(i64 %143, i32 0, i16 zeroext 2) #12, !dbg !15737
  store i32 0, i32* %x, align 4, !dbg !15741
  br label %for.cond136, !dbg !15742

for.cond136:                                      ; preds = %for.inc189, %for.end122
  %144 = load i32, i32* %x, align 4, !dbg !15743
  %145 = load i32, i32* %numbuffs, align 4, !dbg !15744
  %cmp137 = icmp slt i32 %144, %145, !dbg !15745
  br i1 %cmp137, label %for.body139, label %for.end191, !dbg !15746

for.body139:                                      ; preds = %for.cond136
  store i64 0, i64* %ticks, align 8, !dbg !15747
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15748, !srcloc !15749
  br label %while.cond, !dbg !15750

while.cond:                                       ; preds = %do.end176, %for.body139
  %146 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15751
  %rx_ring = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %146, i32 0, i32 1, !dbg !15752
  %147 = load %struct.pcnet32_rx_head*, %struct.pcnet32_rx_head** %rx_ring, align 8, !dbg !15752
  %148 = load i32, i32* %x, align 4, !dbg !15753
  %idxprom140 = sext i32 %148 to i64, !dbg !15751
  %arrayidx141 = getelementptr %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %147, i64 %idxprom140, !dbg !15751
  %status142 = getelementptr inbounds %struct.pcnet32_rx_head, %struct.pcnet32_rx_head* %arrayidx141, i32 0, i32 2, !dbg !15754
  %149 = load i16, i16* %status142, align 2, !dbg !15754
  %conv143 = zext i16 %149 to i32, !dbg !15751
  %150 = load i16, i16* %teststatus, align 2, !dbg !15755
  %conv144 = zext i16 %150 to i32, !dbg !15755
  %and145 = and i32 %conv143, %conv144, !dbg !15756
  %tobool146 = icmp ne i32 %and145, 0, !dbg !15756
  br i1 %tobool146, label %land.rhs, label %land.end, !dbg !15757

land.rhs:                                         ; preds = %while.cond
  %151 = load i64, i64* %ticks, align 8, !dbg !15758
  %cmp147 = icmp ult i64 %151, 200, !dbg !15759
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %152 = phi i1 [ false, %while.cond ], [ %cmp147, %land.rhs ], !dbg !15760
  br i1 %152, label %while.body, label %while.end, !dbg !15750

while.body:                                       ; preds = %land.end
  %153 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15761
  %lock149 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %153, i32 0, i32 11, !dbg !15762
  %154 = load i64, i64* %flags, align 8, !dbg !15763
  store %struct.spinlock* %lock149, %struct.spinlock** %lock.addr.i291, align 8
  store i64 %154, i64* %flags.addr.i292, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !15764
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !15764
  store i32 1, i32* %tmp.i293, align 4, !dbg !15764
  %155 = load i32, i32* %tmp.i293, align 4, !dbg !15764
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !15765
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !15765
  store i32 1, i32* %tmp8.i294, align 4, !dbg !15765
  %156 = load i32, i32* %tmp8.i294, align 4, !dbg !15765
  %157 = load i64, i64* %flags.addr.i292, align 8, !dbg !15766
  call void @arch_local_irq_restore(i64 %157) #14, !dbg !15766
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15767, !srcloc !9478
  %158 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i291, align 8, !dbg !15768
  %159 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %158, i32 0, i32 0, !dbg !15768
  %rlock.i295 = bitcast %union.anon.46* %159 to %struct.raw_spinlock*, !dbg !15768
  call void @msleep(i32 1) #12, !dbg !15769
  br label %do.body150, !dbg !15770

do.body150:                                       ; preds = %while.body
  br label %do.body151, !dbg !15771

do.body151:                                       ; preds = %do.body150
  call void @llvm.dbg.declare(metadata i64* %__dummy152, metadata !15772, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.declare(metadata i64* %__dummy2153, metadata !15775, metadata !DIExpression()), !dbg !15774
  %cmp154 = icmp eq i64* %__dummy152, %__dummy2153, !dbg !15774
  %conv155 = zext i1 %cmp154 to i32, !dbg !15774
  store i32 1, i32* %tmp156, align 4, !dbg !15774
  %160 = load i32, i32* %tmp156, align 4, !dbg !15774
  br label %do.body157, !dbg !15776

do.body157:                                       ; preds = %do.body151
  br label %do.body158, !dbg !15777

do.body158:                                       ; preds = %do.body157
  br label %do.body159, !dbg !15778

do.body159:                                       ; preds = %do.body158
  call void @llvm.dbg.declare(metadata i64* %__dummy160, metadata !15780, metadata !DIExpression()), !dbg !15783
  call void @llvm.dbg.declare(metadata i64* %__dummy2161, metadata !15784, metadata !DIExpression()), !dbg !15783
  %cmp162 = icmp eq i64* %__dummy160, %__dummy2161, !dbg !15783
  %conv163 = zext i1 %cmp162 to i32, !dbg !15783
  store i32 1, i32* %tmp164, align 4, !dbg !15783
  %161 = load i32, i32* %tmp164, align 4, !dbg !15783
  %call165 = call i64 @arch_local_irq_save() #12, !dbg !15785
  store i64 %call165, i64* %flags, align 8, !dbg !15785
  br label %do.end166, !dbg !15785

do.end166:                                        ; preds = %do.body159
  br label %do.end167, !dbg !15778

do.end167:                                        ; preds = %do.end166
  br label %do.body168, !dbg !15777

do.body168:                                       ; preds = %do.end167
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15786, !srcloc !15787
  br label %do.body169, !dbg !15786

do.body169:                                       ; preds = %do.body168
  %162 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15788
  %lock170 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %162, i32 0, i32 11, !dbg !15788
  store %struct.spinlock* %lock170, %struct.spinlock** %lock.addr.i296, align 8
  %163 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i296, align 8, !dbg !15789
  %164 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %163, i32 0, i32 0, !dbg !15790
  %rlock.i297 = bitcast %union.anon.46* %164 to %struct.raw_spinlock*, !dbg !15790
  br label %do.end172, !dbg !15788

do.end172:                                        ; preds = %do.body169
  br label %do.end173, !dbg !15786

do.end173:                                        ; preds = %do.end172
  br label %do.end174, !dbg !15777

do.end174:                                        ; preds = %do.end173
  br label %do.end175, !dbg !15776

do.end175:                                        ; preds = %do.end174
  br label %do.end176, !dbg !15771

do.end176:                                        ; preds = %do.end175
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15791, !srcloc !15792
  %165 = load i64, i64* %ticks, align 8, !dbg !15793
  %inc177 = add i64 %165, 1, !dbg !15793
  store i64 %inc177, i64* %ticks, align 8, !dbg !15793
  br label %while.cond, !dbg !15750, !llvm.loop !15794

while.end:                                        ; preds = %land.end
  %166 = load i64, i64* %ticks, align 8, !dbg !15796
  %cmp178 = icmp eq i64 %166, 200, !dbg !15798
  br i1 %cmp178, label %if.then180, label %if.end188, !dbg !15799

if.then180:                                       ; preds = %while.end
  br label %do.body181, !dbg !15800

do.body181:                                       ; preds = %if.then180
  %167 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15802
  %msg_enable182 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %167, i32 0, i32 33, !dbg !15802
  %168 = load i32, i32* %msg_enable182, align 8, !dbg !15802
  %and183 = and i32 %168, 8192, !dbg !15802
  %tobool184 = icmp ne i32 %and183, 0, !dbg !15802
  br i1 %tobool184, label %if.then185, label %if.end186, !dbg !15805

if.then185:                                       ; preds = %do.body181
  %169 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15802
  %170 = load i32, i32* %x, align 4, !dbg !15802
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %169, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.91, i64 0, i64 0), i32 %170) #13, !dbg !15802
  br label %if.end186, !dbg !15802

if.end186:                                        ; preds = %if.then185, %do.body181
  br label %do.end187, !dbg !15805

do.end187:                                        ; preds = %if.end186
  br label %for.end191, !dbg !15806

if.end188:                                        ; preds = %while.end
  br label %for.inc189, !dbg !15807

for.inc189:                                       ; preds = %if.end188
  %171 = load i32, i32* %x, align 4, !dbg !15808
  %inc190 = add i32 %171, 1, !dbg !15808
  store i32 %inc190, i32* %x, align 4, !dbg !15808
  br label %for.cond136, !dbg !15809, !llvm.loop !15810

for.end191:                                       ; preds = %do.end187, %for.cond136
  %172 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15812
  %a192 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %172, i32 0, i32 10, !dbg !15813
  %173 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a192, align 8, !dbg !15813
  %write_csr193 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %173, i32 0, i32 1, !dbg !15814
  %174 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr193, align 8, !dbg !15814
  %175 = load i64, i64* %ioaddr, align 8, !dbg !15815
  call void %174(i64 %175, i32 0, i16 zeroext 4) #12, !dbg !15812
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15816, !srcloc !15817
  %176 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15818
  %msg_enable194 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %176, i32 0, i32 33, !dbg !15818
  %177 = load i32, i32* %msg_enable194, align 8, !dbg !15818
  %and195 = and i32 %177, 8192, !dbg !15818
  %tobool196 = icmp ne i32 %and195, 0, !dbg !15818
  br i1 %tobool196, label %land.lhs.true, label %if.end221, !dbg !15820

land.lhs.true:                                    ; preds = %for.end191
  %178 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15821
  %msg_enable197 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %178, i32 0, i32 33, !dbg !15821
  %179 = load i32, i32* %msg_enable197, align 8, !dbg !15821
  %and198 = and i32 %179, 4096, !dbg !15821
  %tobool199 = icmp ne i32 %and198, 0, !dbg !15821
  br i1 %tobool199, label %if.then200, label %if.end221, !dbg !15822

if.then200:                                       ; preds = %land.lhs.true
  %180 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15823
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %180, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i64 0, i64 0)) #13, !dbg !15825
  store i32 0, i32* %x, align 4, !dbg !15826
  br label %for.cond201, !dbg !15828

for.cond201:                                      ; preds = %for.inc218, %if.then200
  %181 = load i32, i32* %x, align 4, !dbg !15829
  %182 = load i32, i32* %numbuffs, align 4, !dbg !15831
  %cmp202 = icmp slt i32 %181, %182, !dbg !15832
  br i1 %cmp202, label %for.body204, label %for.end220, !dbg !15833

for.body204:                                      ; preds = %for.cond201
  %183 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15834
  %184 = load i32, i32* %x, align 4, !dbg !15836
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %183, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i64 0, i64 0), i32 %184) #13, !dbg !15837
  %185 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15838
  %rx_skbuff = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %185, i32 0, i32 7, !dbg !15839
  %186 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !15839
  %187 = load i32, i32* %x, align 4, !dbg !15840
  %idxprom205 = sext i32 %187 to i64, !dbg !15838
  %arrayidx206 = getelementptr %struct.sk_buff*, %struct.sk_buff** %186, i64 %idxprom205, !dbg !15838
  %188 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx206, align 8, !dbg !15838
  store %struct.sk_buff* %188, %struct.sk_buff** %skb, align 8, !dbg !15841
  store i32 0, i32* %i, align 4, !dbg !15842
  br label %for.cond207, !dbg !15844

for.cond207:                                      ; preds = %for.inc214, %for.body204
  %189 = load i32, i32* %i, align 4, !dbg !15845
  %190 = load i32, i32* %size, align 4, !dbg !15847
  %cmp208 = icmp slt i32 %189, %190, !dbg !15848
  br i1 %cmp208, label %for.body210, label %for.end216, !dbg !15849

for.body210:                                      ; preds = %for.cond207
  %191 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15850
  %data211 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %191, i32 0, i32 37, !dbg !15850
  %192 = load i8*, i8** %data211, align 8, !dbg !15850
  %193 = load i32, i32* %i, align 4, !dbg !15850
  %idx.ext = sext i32 %193 to i64, !dbg !15850
  %add.ptr = getelementptr i8, i8* %192, i64 %idx.ext, !dbg !15850
  %194 = load i8, i8* %add.ptr, align 1, !dbg !15850
  %conv212 = zext i8 %194 to i32, !dbg !15850
  %call213 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0), i32 %conv212) #13, !dbg !15850
  br label %for.inc214, !dbg !15850

for.inc214:                                       ; preds = %for.body210
  %195 = load i32, i32* %i, align 4, !dbg !15851
  %inc215 = add i32 %195, 1, !dbg !15851
  store i32 %inc215, i32* %i, align 4, !dbg !15851
  br label %for.cond207, !dbg !15852, !llvm.loop !15853

for.end216:                                       ; preds = %for.cond207
  %call217 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #13, !dbg !15855
  br label %for.inc218, !dbg !15856

for.inc218:                                       ; preds = %for.end216
  %196 = load i32, i32* %x, align 4, !dbg !15857
  %inc219 = add i32 %196, 1, !dbg !15857
  store i32 %inc219, i32* %x, align 4, !dbg !15857
  br label %for.cond201, !dbg !15858, !llvm.loop !15859

for.end220:                                       ; preds = %for.cond201
  br label %if.end221, !dbg !15861

if.end221:                                        ; preds = %for.end220, %land.lhs.true, %for.end191
  store i32 0, i32* %x, align 4, !dbg !15862
  store i32 0, i32* %rc, align 4, !dbg !15863
  br label %while.cond222, !dbg !15864

while.cond222:                                    ; preds = %for.end267, %if.end221
  %197 = load i32, i32* %x, align 4, !dbg !15865
  %198 = load i32, i32* %numbuffs, align 4, !dbg !15866
  %cmp223 = icmp slt i32 %197, %198, !dbg !15867
  br i1 %cmp223, label %land.rhs225, label %land.end227, !dbg !15868

land.rhs225:                                      ; preds = %while.cond222
  %199 = load i32, i32* %rc, align 4, !dbg !15869
  %tobool226 = icmp ne i32 %199, 0, !dbg !15870
  %lnot = xor i1 %tobool226, true, !dbg !15870
  br label %land.end227

land.end227:                                      ; preds = %land.rhs225, %while.cond222
  %200 = phi i1 [ false, %while.cond222 ], [ %lnot, %land.rhs225 ], !dbg !15871
  br i1 %200, label %while.body228, label %while.end269, !dbg !15864

while.body228:                                    ; preds = %land.end227
  %201 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15872
  %rx_skbuff229 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %201, i32 0, i32 7, !dbg !15874
  %202 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff229, align 8, !dbg !15874
  %203 = load i32, i32* %x, align 4, !dbg !15875
  %idxprom230 = sext i32 %203 to i64, !dbg !15872
  %arrayidx231 = getelementptr %struct.sk_buff*, %struct.sk_buff** %202, i64 %idxprom230, !dbg !15872
  %204 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx231, align 8, !dbg !15872
  store %struct.sk_buff* %204, %struct.sk_buff** %skb, align 8, !dbg !15876
  %205 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15877
  %tx_skbuff232 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %205, i32 0, i32 6, !dbg !15878
  %206 = load %struct.sk_buff**, %struct.sk_buff*** %tx_skbuff232, align 8, !dbg !15878
  %207 = load i32, i32* %x, align 4, !dbg !15879
  %idxprom233 = sext i32 %207 to i64, !dbg !15877
  %arrayidx234 = getelementptr %struct.sk_buff*, %struct.sk_buff** %206, i64 %idxprom233, !dbg !15877
  %208 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx234, align 8, !dbg !15877
  %data235 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %208, i32 0, i32 37, !dbg !15880
  %209 = load i8*, i8** %data235, align 8, !dbg !15880
  store i8* %209, i8** %packet, align 8, !dbg !15881
  store i32 0, i32* %i, align 4, !dbg !15882
  br label %for.cond236, !dbg !15884

for.cond236:                                      ; preds = %for.inc265, %while.body228
  %210 = load i32, i32* %i, align 4, !dbg !15885
  %211 = load i32, i32* %size, align 4, !dbg !15887
  %cmp237 = icmp slt i32 %210, %211, !dbg !15888
  br i1 %cmp237, label %for.body239, label %for.end267, !dbg !15889

for.body239:                                      ; preds = %for.cond236
  %212 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15890
  %data240 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %212, i32 0, i32 37, !dbg !15893
  %213 = load i8*, i8** %data240, align 8, !dbg !15893
  %214 = load i32, i32* %i, align 4, !dbg !15894
  %idx.ext241 = sext i32 %214 to i64, !dbg !15895
  %add.ptr242 = getelementptr i8, i8* %213, i64 %idx.ext241, !dbg !15895
  %215 = load i8, i8* %add.ptr242, align 1, !dbg !15896
  %conv243 = zext i8 %215 to i32, !dbg !15896
  %216 = load i8*, i8** %packet, align 8, !dbg !15897
  %217 = load i32, i32* %i, align 4, !dbg !15898
  %idxprom244 = sext i32 %217 to i64, !dbg !15897
  %arrayidx245 = getelementptr i8, i8* %216, i64 %idxprom244, !dbg !15897
  %218 = load i8, i8* %arrayidx245, align 1, !dbg !15897
  %conv246 = zext i8 %218 to i32, !dbg !15897
  %cmp247 = icmp ne i32 %conv243, %conv246, !dbg !15899
  br i1 %cmp247, label %if.then249, label %if.end264, !dbg !15900

if.then249:                                       ; preds = %for.body239
  br label %do.body250, !dbg !15901

do.body250:                                       ; preds = %if.then249
  %219 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15903
  %msg_enable251 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %219, i32 0, i32 33, !dbg !15903
  %220 = load i32, i32* %msg_enable251, align 8, !dbg !15903
  %and252 = and i32 %220, 8192, !dbg !15903
  %tobool253 = icmp ne i32 %and252, 0, !dbg !15903
  br i1 %tobool253, label %if.then254, label %if.end262, !dbg !15906

if.then254:                                       ; preds = %do.body250
  %221 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15903
  %222 = load i32, i32* %i, align 4, !dbg !15903
  %223 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15903
  %data255 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %223, i32 0, i32 37, !dbg !15903
  %224 = load i8*, i8** %data255, align 8, !dbg !15903
  %225 = load i32, i32* %i, align 4, !dbg !15903
  %idx.ext256 = sext i32 %225 to i64, !dbg !15903
  %add.ptr257 = getelementptr i8, i8* %224, i64 %idx.ext256, !dbg !15903
  %226 = load i8, i8* %add.ptr257, align 1, !dbg !15903
  %conv258 = zext i8 %226 to i32, !dbg !15903
  %227 = load i8*, i8** %packet, align 8, !dbg !15903
  %228 = load i32, i32* %i, align 4, !dbg !15903
  %idxprom259 = sext i32 %228 to i64, !dbg !15903
  %arrayidx260 = getelementptr i8, i8* %227, i64 %idxprom259, !dbg !15903
  %229 = load i8, i8* %arrayidx260, align 1, !dbg !15903
  %conv261 = zext i8 %229 to i32, !dbg !15903
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), %struct.net_device* %221, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.96, i64 0, i64 0), i32 %222, i32 %conv258, i32 %conv261) #13, !dbg !15903
  br label %if.end262, !dbg !15903

if.end262:                                        ; preds = %if.then254, %do.body250
  br label %do.end263, !dbg !15906

do.end263:                                        ; preds = %if.end262
  store i32 1, i32* %rc, align 4, !dbg !15907
  br label %for.end267, !dbg !15908

if.end264:                                        ; preds = %for.body239
  br label %for.inc265, !dbg !15909

for.inc265:                                       ; preds = %if.end264
  %230 = load i32, i32* %i, align 4, !dbg !15910
  %inc266 = add i32 %230, 1, !dbg !15910
  store i32 %inc266, i32* %i, align 4, !dbg !15910
  br label %for.cond236, !dbg !15911, !llvm.loop !15912

for.end267:                                       ; preds = %do.end263, %for.cond236
  %231 = load i32, i32* %x, align 4, !dbg !15914
  %inc268 = add i32 %231, 1, !dbg !15914
  store i32 %inc268, i32* %x, align 4, !dbg !15914
  br label %while.cond222, !dbg !15864, !llvm.loop !15915

while.end269:                                     ; preds = %land.end227
  br label %clean_up, !dbg !15864

clean_up:                                         ; preds = %while.end269, %do.end107, %do.end47
  call void @llvm.dbg.label(metadata !15917), !dbg !15918
  %232 = load i32, i32* %rc, align 4, !dbg !15919
  %conv270 = sext i32 %232 to i64, !dbg !15919
  %233 = load i64*, i64** %data1.addr, align 8, !dbg !15920
  store i64 %conv270, i64* %233, align 8, !dbg !15921
  %234 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15922
  call void @pcnet32_purge_tx_ring(%struct.net_device* %234) #12, !dbg !15923
  %235 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15924
  %read_csr271 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %235, i32 0, i32 0, !dbg !15925
  %236 = load i16 (i64, i32)*, i16 (i64, i32)** %read_csr271, align 8, !dbg !15925
  %237 = load i64, i64* %ioaddr, align 8, !dbg !15926
  %call272 = call zeroext i16 %236(i64 %237, i32 15) #12, !dbg !15924
  %conv273 = zext i16 %call272 to i32, !dbg !15924
  store i32 %conv273, i32* %x, align 4, !dbg !15927
  %238 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15928
  %write_csr274 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %238, i32 0, i32 1, !dbg !15929
  %239 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_csr274, align 8, !dbg !15929
  %240 = load i64, i64* %ioaddr, align 8, !dbg !15930
  %241 = load i32, i32* %x, align 4, !dbg !15931
  %and275 = and i32 %241, -69, !dbg !15932
  %conv276 = trunc i32 %and275 to i16, !dbg !15933
  call void %239(i64 %240, i32 15, i16 zeroext %conv276) #12, !dbg !15928
  %242 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15934
  %read_bcr277 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %242, i32 0, i32 2, !dbg !15935
  %243 = load i16 (i64, i32)*, i16 (i64, i32)** %read_bcr277, align 8, !dbg !15935
  %244 = load i64, i64* %ioaddr, align 8, !dbg !15936
  %call278 = call zeroext i16 %243(i64 %244, i32 32) #12, !dbg !15934
  %conv279 = zext i16 %call278 to i32, !dbg !15934
  store i32 %conv279, i32* %x, align 4, !dbg !15937
  %245 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a, align 8, !dbg !15938
  %write_bcr280 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %245, i32 0, i32 3, !dbg !15939
  %246 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr280, align 8, !dbg !15939
  %247 = load i64, i64* %ioaddr, align 8, !dbg !15940
  %248 = load i32, i32* %x, align 4, !dbg !15941
  %and281 = and i32 %248, -3, !dbg !15942
  %conv282 = trunc i32 %and281 to i16, !dbg !15943
  call void %246(i64 %247, i32 32, i16 zeroext %conv282) #12, !dbg !15938
  %249 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15944
  %call283 = call zeroext i1 @netif_running(%struct.net_device* %249) #12, !dbg !15946
  br i1 %call283, label %if.then284, label %if.else, !dbg !15947

if.then284:                                       ; preds = %clean_up
  %250 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15948
  call void @pcnet32_netif_start(%struct.net_device* %250) #12, !dbg !15950
  %251 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15951
  call void @pcnet32_restart(%struct.net_device* %251, i32 66) #12, !dbg !15952
  br label %if.end287, !dbg !15953

if.else:                                          ; preds = %clean_up
  %252 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15954
  call void @pcnet32_purge_rx_ring(%struct.net_device* %252) #12, !dbg !15956
  %253 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15957
  %a285 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %253, i32 0, i32 10, !dbg !15958
  %254 = load %struct.pcnet32_access*, %struct.pcnet32_access** %a285, align 8, !dbg !15958
  %write_bcr286 = getelementptr inbounds %struct.pcnet32_access, %struct.pcnet32_access* %254, i32 0, i32 3, !dbg !15959
  %255 = load void (i64, i32, i16)*, void (i64, i32, i16)** %write_bcr286, align 8, !dbg !15959
  %256 = load i64, i64* %ioaddr, align 8, !dbg !15960
  call void %255(i64 %256, i32 20, i16 zeroext 4) #12, !dbg !15957
  br label %if.end287

if.end287:                                        ; preds = %if.else, %if.then284
  %257 = load %struct.pcnet32_private*, %struct.pcnet32_private** %lp, align 8, !dbg !15961
  %lock288 = getelementptr inbounds %struct.pcnet32_private, %struct.pcnet32_private* %257, i32 0, i32 11, !dbg !15962
  %258 = load i64, i64* %flags, align 8, !dbg !15963
  store %struct.spinlock* %lock288, %struct.spinlock** %lock.addr.i289, align 8
  store i64 %258, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1621, metadata !9463, metadata !DIExpression()) #7, !dbg !15964
  call void @llvm.dbg.declare(metadata !1621, metadata !9467, metadata !DIExpression()) #7, !dbg !15964
  store i32 1, i32* %tmp.i, align 4, !dbg !15964
  %259 = load i32, i32* %tmp.i, align 4, !dbg !15964
  call void @llvm.dbg.declare(metadata !1621, metadata !9468, metadata !DIExpression()) #7, !dbg !15965
  call void @llvm.dbg.declare(metadata !1621, metadata !9474, metadata !DIExpression()) #7, !dbg !15965
  store i32 1, i32* %tmp8.i, align 4, !dbg !15965
  %260 = load i32, i32* %tmp8.i, align 4, !dbg !15965
  %261 = load i64, i64* %flags.addr.i, align 8, !dbg !15966
  call void @arch_local_irq_restore(i64 %261) #14, !dbg !15966
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15967, !srcloc !9478
  %262 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i289, align 8, !dbg !15968
  %263 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %262, i32 0, i32 0, !dbg !15968
  %rlock.i290 = bitcast %union.anon.46* %263 to %struct.raw_spinlock*, !dbg !15968
  %264 = load i32, i32* %rc, align 4, !dbg !15969
  ret i32 %264, !dbg !15970
}

; Function Attrs: noredzone
declare dso_local void @mii_ethtool_get_link_ksettings(%struct.mii_if_info*, %struct.ethtool_link_ksettings*) #3

; Function Attrs: noredzone
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(i64*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @mii_ethtool_set_link_ksettings(%struct.mii_if_info*, %struct.ethtool_link_ksettings*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !15971 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15974, metadata !DIExpression()), !dbg !15975
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15976, metadata !DIExpression()), !dbg !15977
  %0 = load i8*, i8** %data.addr, align 8, !dbg !15978
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15979
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !15980
  store i8* %0, i8** %driver_data, align 8, !dbg !15981
  ret void, !dbg !15982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !15983 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !15986, metadata !DIExpression()), !dbg !15987
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !15988
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !15989
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !15990
  ret i8* %call, !dbg !15991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !15992 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15995, metadata !DIExpression()), !dbg !15996
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15997
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !15998
  %1 = load i8*, i8** %driver_data, align 8, !dbg !15998
  ret i8* %1, !dbg !15999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_pm_suspend(%struct.device* %device_d) #2 !dbg !16000 {
entry:
  %device_d.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.device* %device_d, %struct.device** %device_d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device_d.addr, metadata !16001, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !16003, metadata !DIExpression()), !dbg !16004
  %0 = load %struct.device*, %struct.device** %device_d.addr, align 8, !dbg !16005
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !16006
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !16006
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !16004
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16007
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #12, !dbg !16009
  br i1 %call1, label %if.then, label %if.end, !dbg !16010

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16011
  call void @netif_device_detach(%struct.net_device* %3) #12, !dbg !16013
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16014
  %call2 = call i32 @pcnet32_close(%struct.net_device* %4) #12, !dbg !16015
  br label %if.end, !dbg !16016

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !16017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcnet32_pm_resume(%struct.device* %device_d) #2 !dbg !16018 {
entry:
  %device_d.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.device* %device_d, %struct.device** %device_d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device_d.addr, metadata !16019, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !16021, metadata !DIExpression()), !dbg !16022
  %0 = load %struct.device*, %struct.device** %device_d.addr, align 8, !dbg !16023
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !16024
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !16024
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !16022
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16025
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #12, !dbg !16027
  br i1 %call1, label %if.then, label %if.end, !dbg !16028

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16029
  %call2 = call i32 @pcnet32_open(%struct.net_device* %3) #12, !dbg !16031
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16032
  call void @netif_device_attach(%struct.net_device* %4) #12, !dbg !16033
  br label %if.end, !dbg !16034

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !16035
}

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #3

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netif_msg_init(i32 %debug_value, i32 %default_msg_enable_bits) #2 !dbg !16036 {
entry:
  %retval = alloca i32, align 4
  %debug_value.addr = alloca i32, align 4
  %default_msg_enable_bits.addr = alloca i32, align 4
  store i32 %debug_value, i32* %debug_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debug_value.addr, metadata !16039, metadata !DIExpression()), !dbg !16040
  store i32 %default_msg_enable_bits, i32* %default_msg_enable_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_msg_enable_bits.addr, metadata !16041, metadata !DIExpression()), !dbg !16042
  %0 = load i32, i32* %debug_value.addr, align 4, !dbg !16043
  %cmp = icmp slt i32 %0, 0, !dbg !16045
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16046

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %debug_value.addr, align 4, !dbg !16047
  %conv = sext i32 %1 to i64, !dbg !16047
  %cmp1 = icmp uge i64 %conv, 32, !dbg !16048
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16049

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %default_msg_enable_bits.addr, align 4, !dbg !16050
  store i32 %2, i32* %retval, align 4, !dbg !16051
  br label %return, !dbg !16051

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %debug_value.addr, align 4, !dbg !16052
  %cmp3 = icmp eq i32 %3, 0, !dbg !16054
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !16055

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16056
  br label %return, !dbg !16056

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %debug_value.addr, align 4, !dbg !16057
  %shl = shl i32 1, %4, !dbg !16058
  %sub = sub i32 %shl, 1, !dbg !16059
  store i32 %sub, i32* %retval, align 4, !dbg !16060
  br label %return, !dbg !16060

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !16061
  ret i32 %5, !dbg !16061
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcnet32_probe_vlbus(i32* %pcnet32_portlist) #2 !dbg !16062 {
entry:
  %pcnet32_portlist.addr = alloca i32*, align 8
  %port = alloca i32*, align 8
  %ioaddr = alloca i32, align 4
  store i32* %pcnet32_portlist, i32** %pcnet32_portlist.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pcnet32_portlist.addr, metadata !16065, metadata !DIExpression()), !dbg !16066
  call void @llvm.dbg.declare(metadata i32** %port, metadata !16067, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.declare(metadata i32* %ioaddr, metadata !16069, metadata !DIExpression()), !dbg !16070
  %0 = load i32*, i32** %pcnet32_portlist.addr, align 8, !dbg !16071
  store i32* %0, i32** %port, align 8, !dbg !16073
  br label %for.cond, !dbg !16074

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32*, i32** %port, align 8, !dbg !16075
  %2 = load i32, i32* %1, align 4, !dbg !16077
  store i32 %2, i32* %ioaddr, align 4, !dbg !16078
  %tobool = icmp ne i32 %2, 0, !dbg !16079
  br i1 %tobool, label %for.body, label %for.end, !dbg !16079

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %ioaddr, align 4, !dbg !16080
  %conv = zext i32 %3 to i64, !dbg !16080
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %conv, i64 32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.98, i64 0, i64 0), i32 0) #12, !dbg !16080
  %tobool1 = icmp ne %struct.resource* %call, null, !dbg !16080
  br i1 %tobool1, label %if.then, label %if.end14, !dbg !16083

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %ioaddr, align 4, !dbg !16084
  %add = add i32 %4, 14, !dbg !16087
  %call2 = call zeroext i8 @inb(i32 %add) #12, !dbg !16088
  %conv3 = zext i8 %call2 to i32, !dbg !16088
  %cmp = icmp eq i32 %conv3, 87, !dbg !16089
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !16090

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %ioaddr, align 4, !dbg !16091
  %add5 = add i32 %5, 15, !dbg !16092
  %call6 = call zeroext i8 @inb(i32 %add5) #12, !dbg !16093
  %conv7 = zext i8 %call6 to i32, !dbg !16093
  %cmp8 = icmp eq i32 %conv7, 87, !dbg !16094
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !16095

if.then10:                                        ; preds = %land.lhs.true
  %6 = load i32, i32* %ioaddr, align 4, !dbg !16096
  %conv11 = zext i32 %6 to i64, !dbg !16096
  %call12 = call i32 @pcnet32_probe1(i64 %conv11, i32 0, %struct.pci_dev* null) #12, !dbg !16098
  br label %if.end, !dbg !16099

if.else:                                          ; preds = %land.lhs.true, %if.then
  %7 = load i32, i32* %ioaddr, align 4, !dbg !16100
  %conv13 = zext i32 %7 to i64, !dbg !16100
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv13, i64 32) #12, !dbg !16100
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  br label %if.end14, !dbg !16102

if.end14:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !16103

for.inc:                                          ; preds = %if.end14
  %8 = load i32*, i32** %port, align 8, !dbg !16104
  %incdec.ptr = getelementptr i32, i32* %8, i32 1, !dbg !16104
  store i32* %incdec.ptr, i32** %port, align 8, !dbg !16104
  br label %for.cond, !dbg !16105, !llvm.loop !16106

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16108
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }
attributes #16 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!7941}
!llvm.module.flags = !{!7942, !7943, !7944, !7945}
!llvm.ident = !{!7946}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 2961, type: !7940, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7243, globals: !7686, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/amd/pcnet32.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !12, !33, !40, !47, !53, !58, !64, !71, !77, !86, !94, !125, !159, !200, !207, !238, !251, !259, !265, !272, !276, !280, !287, !293, !299, !6491, !6627, !6707, !6783, !6791, !7052, !7070, !7077, !7082, !7086, !7091, !7098, !7106, !7112, !7133, !7142, !7148}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !6, line: 115, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!10 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!11 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !6, line: 836, baseType: !13, size: 32, elements: !14)
!13 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32}
!15 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!17 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!18 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!19 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!21 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!22 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!23 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!24 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!25 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!26 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!27 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!28 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!29 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!30 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!31 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!32 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !6, line: 860, baseType: !13, size: 32, elements: !34)
!34 = !{!35, !36, !37, !38, !39}
!35 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!39 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !41, line: 15, baseType: !13, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45, !46}
!43 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !48, line: 546, baseType: !13, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !54, line: 65, baseType: !13, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57}
!56 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !59, line: 16, baseType: !13, size: 32, elements: !60)
!59 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!60 = !{!61, !62, !63}
!61 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !65, line: 59, baseType: !13, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70}
!67 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!70 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !72, line: 54, baseType: !13, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76}
!74 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !78, line: 296, baseType: !13, size: 32, elements: !79)
!78 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!79 = !{!80, !81, !82, !83, !84, !85}
!80 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!84 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!85 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !87, line: 9, baseType: !13, size: 32, elements: !88)
!87 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!88 = !{!89, !90, !91, !92, !93}
!89 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !95, line: 369, baseType: !13, size: 32, elements: !96)
!95 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!96 = !{!97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124}
!97 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!101 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!102 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!103 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!104 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!105 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!106 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!107 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!108 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!109 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!110 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!111 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!112 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!113 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!114 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!115 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!116 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!117 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!118 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!119 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!120 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!121 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!122 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!123 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!124 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !126, line: 170, baseType: !13, size: 32, elements: !127)
!126 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158}
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !126, line: 204, baseType: !13, size: 32, elements: !160)
!160 = !{!161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199}
!161 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!169 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!170 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!171 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!172 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!177 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!199 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !95, line: 578, baseType: !13, size: 32, elements: !201)
!201 = !{!202, !203, !204, !205, !206}
!202 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !126, line: 130, baseType: !13, size: 32, elements: !208)
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!213 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!214 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!215 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!216 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!217 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!218 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!219 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!220 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!221 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!222 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!223 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!224 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!225 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!226 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!227 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!228 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!229 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!230 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!231 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!232 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!233 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!234 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!235 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!236 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!237 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !239, line: 585, baseType: !13, size: 32, elements: !240)
!239 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248, !249, !250}
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!247 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!250 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !239, line: 602, baseType: !13, size: 32, elements: !252)
!252 = !{!253, !254, !255, !256, !257, !258}
!253 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!257 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!258 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !239, line: 615, baseType: !13, size: 32, elements: !260)
!260 = !{!261, !262, !263, !264}
!261 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!262 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!263 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!264 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !239, line: 626, baseType: !13, size: 32, elements: !266)
!266 = !{!267, !268, !269, !270, !271}
!267 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!268 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!269 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!270 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!271 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !239, line: 638, baseType: !13, size: 32, elements: !273)
!273 = !{!274, !275}
!274 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!275 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!276 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !239, line: 647, baseType: !13, size: 32, elements: !277)
!277 = !{!278, !279}
!278 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!279 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !281, line: 54, baseType: !13, size: 32, elements: !282)
!281 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!282 = !{!283, !284, !285, !286}
!283 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!284 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!285 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!286 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !288, line: 26, baseType: !13, size: 32, elements: !289)
!288 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!289 = !{!290, !291, !292}
!290 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!291 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!292 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!293 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !6, line: 423, baseType: !13, size: 32, elements: !294)
!294 = !{!295, !296, !297, !298}
!295 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!296 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!297 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!298 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!299 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !300, file: !6, line: 2085, baseType: !13, size: 32, elements: !7045)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !6, line: 1858, size: 15808, elements: !301)
!301 = !{!302, !307, !330, !347, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !364, !372, !373, !374, !375, !376, !377, !378, !379, !380, !406, !416, !417, !418, !423, !424, !428, !431, !5524, !6040, !6044, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110, !6115, !6116, !6117, !6392, !6393, !6394, !6395, !6398, !6401, !6404, !6407, !6410, !6411, !6424, !6425, !6426, !6427, !6428, !6429, !6436, !6437, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6482, !6483, !6484, !6485, !6486, !6487, !6488, !6489, !6490, !6495, !6496, !6497, !6502, !6539, !7000, !7002, !7003, !7007, !7008, !7009, !7010, !7016, !7018, !7021, !7024, !7026, !7027, !7028, !7029, !7030, !7034, !7037}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !300, file: !6, line: 1859, baseType: !303, size: 128)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 128, elements: !305)
!304 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!305 = !{!306}
!306 = !DISubrange(count: 16)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !300, file: !6, line: 1860, baseType: !308, size: 64, offset: 128)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !6, line: 938, size: 384, elements: !310)
!310 = !{!311, !319, !325, !327}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !309, file: !6, line: 939, baseType: !312, size: 128)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !313, line: 186, size: 128, elements: !314)
!313 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !312, file: !313, line: 187, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !312, file: !313, line: 187, baseType: !318, size: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !309, file: !6, line: 940, baseType: !320, size: 128, offset: 128)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !313, line: 178, size: 128, elements: !321)
!321 = !{!322, !324}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !320, file: !313, line: 179, baseType: !323, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !320, file: !313, line: 179, baseType: !323, size: 64, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !309, file: !6, line: 941, baseType: !326, size: 64, offset: 256)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !6, line: 942, baseType: !328, size: 64, offset: 320)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !304)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !300, file: !6, line: 1861, baseType: !331, size: 64, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !6, line: 930, size: 128, elements: !333)
!333 = !{!334, !343}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !332, file: !6, line: 931, baseType: !335, size: 128, align: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !313, line: 216, size: 128, align: 64, elements: !336)
!336 = !{!337, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !335, file: !313, line: 217, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !335, file: !313, line: 218, baseType: !340, size: 64, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{null, !338}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !332, file: !6, line: 932, baseType: !344, offset: 128)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: -1)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !300, file: !6, line: 1866, baseType: !348, size: 64, offset: 256)
!348 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !300, file: !6, line: 1867, baseType: !348, size: 64, offset: 320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !300, file: !6, line: 1868, baseType: !348, size: 64, offset: 384)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !300, file: !6, line: 1869, baseType: !7, size: 32, offset: 448)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !300, file: !6, line: 1877, baseType: !348, size: 64, offset: 512)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !300, file: !6, line: 1879, baseType: !320, size: 128, offset: 576)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !300, file: !6, line: 1880, baseType: !320, size: 128, offset: 704)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !300, file: !6, line: 1881, baseType: !320, size: 128, offset: 832)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !300, file: !6, line: 1882, baseType: !320, size: 128, offset: 960)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !300, file: !6, line: 1883, baseType: !320, size: 128, offset: 1088)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !300, file: !6, line: 1884, baseType: !320, size: 128, offset: 1216)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !300, file: !6, line: 1889, baseType: !360, size: 256, offset: 1344)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !300, file: !6, line: 1886, size: 256, elements: !361)
!361 = !{!362, !363}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !360, file: !6, line: 1887, baseType: !320, size: 128)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !360, file: !6, line: 1888, baseType: !320, size: 128, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !300, file: !6, line: 1891, baseType: !365, size: 64, offset: 1600)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !366, line: 12, baseType: !367)
!366 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !368, line: 23, baseType: !369)
!368 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !370, line: 31, baseType: !371)
!370 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!371 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !300, file: !6, line: 1892, baseType: !365, size: 64, offset: 1664)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !300, file: !6, line: 1893, baseType: !365, size: 64, offset: 1728)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !300, file: !6, line: 1894, baseType: !365, size: 64, offset: 1792)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !300, file: !6, line: 1895, baseType: !365, size: 64, offset: 1856)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !300, file: !6, line: 1896, baseType: !365, size: 64, offset: 1920)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !300, file: !6, line: 1897, baseType: !365, size: 64, offset: 1984)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !300, file: !6, line: 1899, baseType: !7, size: 32, offset: 2048)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !300, file: !6, line: 1900, baseType: !7, size: 32, offset: 2080)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !300, file: !6, line: 1902, baseType: !381, size: 1472, offset: 2112)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !6, line: 169, size: 1472, elements: !382)
!382 = !{!383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !381, file: !6, line: 170, baseType: !348, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !381, file: !6, line: 171, baseType: !348, size: 64, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !381, file: !6, line: 172, baseType: !348, size: 64, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !381, file: !6, line: 173, baseType: !348, size: 64, offset: 192)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !381, file: !6, line: 174, baseType: !348, size: 64, offset: 256)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !381, file: !6, line: 175, baseType: !348, size: 64, offset: 320)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !381, file: !6, line: 176, baseType: !348, size: 64, offset: 384)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !381, file: !6, line: 177, baseType: !348, size: 64, offset: 448)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !381, file: !6, line: 178, baseType: !348, size: 64, offset: 512)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !381, file: !6, line: 179, baseType: !348, size: 64, offset: 576)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !381, file: !6, line: 180, baseType: !348, size: 64, offset: 640)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !381, file: !6, line: 181, baseType: !348, size: 64, offset: 704)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !381, file: !6, line: 182, baseType: !348, size: 64, offset: 768)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !381, file: !6, line: 183, baseType: !348, size: 64, offset: 832)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !381, file: !6, line: 184, baseType: !348, size: 64, offset: 896)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !381, file: !6, line: 185, baseType: !348, size: 64, offset: 960)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !381, file: !6, line: 186, baseType: !348, size: 64, offset: 1024)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !381, file: !6, line: 187, baseType: !348, size: 64, offset: 1088)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !381, file: !6, line: 188, baseType: !348, size: 64, offset: 1152)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !381, file: !6, line: 189, baseType: !348, size: 64, offset: 1216)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !381, file: !6, line: 190, baseType: !348, size: 64, offset: 1280)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !381, file: !6, line: 191, baseType: !348, size: 64, offset: 1344)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !381, file: !6, line: 192, baseType: !348, size: 64, offset: 1408)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !300, file: !6, line: 1904, baseType: !407, size: 64, offset: 3584)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !408, line: 13, baseType: !409)
!408 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !313, line: 175, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 173, size: 64, elements: !411)
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !410, file: !313, line: 174, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !368, line: 22, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !370, line: 30, baseType: !415)
!415 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !300, file: !6, line: 1905, baseType: !407, size: 64, offset: 3648)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !300, file: !6, line: 1906, baseType: !407, size: 64, offset: 3712)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !300, file: !6, line: 1909, baseType: !419, size: 32, offset: 3776)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !313, line: 168, baseType: !420)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 166, size: 32, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !420, file: !313, line: 167, baseType: !7, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !300, file: !6, line: 1910, baseType: !419, size: 32, offset: 3808)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !300, file: !6, line: 1913, baseType: !425, size: 64, offset: 3840)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !6, line: 1913, flags: DIFlagFwdDecl)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !300, file: !6, line: 1914, baseType: !429, size: 64, offset: 3904)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !6, line: 1914, flags: DIFlagFwdDecl)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !300, file: !6, line: 1916, baseType: !432, size: 64, offset: 3968)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !6, line: 1283, size: 4416, elements: !435)
!435 = !{!436, !440, !444, !445, !446, !608, !612, !617, !621, !622, !627, !628, !751, !756, !760, !766, !770, !802, !810, !814, !819, !823, !824, !830, !834, !838, !842, !843, !865, !869, !884, !895, !899, !908, !912, !913, !917, !938, !942, !946, !950, !954, !961, !965, !983, !987, !1037, !1041, !1046, !1050, !1054, !1058, !1068, !1069, !1078, !1084, !1085, !1089, !1093, !1097, !1101, !1102, !1106, !1107, !5484, !5504, !5508, !5514, !5520}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !434, file: !6, line: 1284, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = !DISubroutineType(types: !439)
!439 = !{!7, !326}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !434, file: !6, line: 1285, baseType: !441, size: 64, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{null, !326}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !434, file: !6, line: 1286, baseType: !437, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !434, file: !6, line: 1287, baseType: !437, size: 64, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !434, file: !6, line: 1288, baseType: !447, size: 64, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DISubroutineType(types: !449)
!449 = !{!450, !451, !326}
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !6, line: 120, baseType: !5)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !453, line: 713, size: 1600, elements: !454)
!453 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!454 = !{!455, !477, !484, !491, !495, !507, !508, !509, !512, !513, !514, !520, !521, !522, !523, !524, !525, !526, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !566, !567, !568, !569, !571, !572, !577, !582, !587, !588, !589, !590, !591, !592, !593, !594, !595, !597, !598, !600, !601, !602}
!455 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 714, baseType: !456, size: 192)
!456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 714, size: 192, elements: !457)
!457 = !{!458, !468, !476}
!458 = !DIDerivedType(tag: DW_TAG_member, scope: !456, file: !453, line: 715, baseType: !459, size: 192)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !456, file: !453, line: 715, size: 192, elements: !460)
!460 = !{!461, !462, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !459, file: !453, line: 717, baseType: !451, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !459, file: !453, line: 718, baseType: !451, size: 64, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !459, file: !453, line: 720, baseType: !464, size: 64, offset: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !459, file: !453, line: 720, size: 64, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !464, file: !453, line: 721, baseType: !326, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !464, file: !453, line: 726, baseType: !348, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !456, file: !453, line: 729, baseType: !469, size: 192, align: 64)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !470, line: 24, size: 192, align: 64, elements: !471)
!470 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!471 = !{!472, !473, !475}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !469, file: !470, line: 25, baseType: !348, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !469, file: !470, line: 26, baseType: !474, size: 64, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !469, file: !470, line: 27, baseType: !474, size: 64, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !456, file: !453, line: 730, baseType: !320, size: 128)
!477 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 733, baseType: !478, size: 64, offset: 192)
!478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 733, size: 64, elements: !479)
!479 = !{!480, !483}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !478, file: !453, line: 734, baseType: !481, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !288, line: 19, flags: DIFlagFwdDecl)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !478, file: !453, line: 735, baseType: !7, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 738, baseType: !485, size: 64, offset: 256)
!485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 738, size: 64, elements: !486)
!486 = !{!487, !490}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !485, file: !453, line: 739, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !489, line: 29, baseType: !413)
!489 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!490 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !485, file: !453, line: 740, baseType: !367, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !452, file: !453, line: 748, baseType: !492, size: 384, align: 64, offset: 320)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 384, elements: !493)
!493 = !{!494}
!494 = !DISubrange(count: 48)
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 750, baseType: !496, size: 128, offset: 704)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 750, size: 128, elements: !497)
!497 = !{!498, !506}
!498 = !DIDerivedType(tag: DW_TAG_member, scope: !496, file: !453, line: 751, baseType: !499, size: 128)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !496, file: !453, line: 751, size: 128, elements: !500)
!500 = !{!501, !502}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !499, file: !453, line: 752, baseType: !348, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !499, file: !453, line: 753, baseType: !503, size: 64, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{null, !451}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !496, file: !453, line: 755, baseType: !320, size: 128)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !452, file: !453, line: 761, baseType: !13, size: 32, offset: 832)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !452, file: !453, line: 762, baseType: !13, size: 32, offset: 864)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !452, file: !453, line: 763, baseType: !510, size: 16, offset: 896)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !370, line: 24, baseType: !511)
!511 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !452, file: !453, line: 764, baseType: !510, size: 16, offset: 912)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !452, file: !453, line: 769, baseType: !510, size: 16, offset: 928)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !452, file: !453, line: 780, baseType: !515, offset: 944)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, elements: !518)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !370, line: 21, baseType: !517)
!517 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!518 = !{!519}
!519 = !DISubrange(count: 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !452, file: !453, line: 782, baseType: !516, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !452, file: !453, line: 783, baseType: !516, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !452, file: !453, line: 784, baseType: !516, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !452, file: !453, line: 785, baseType: !516, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !452, file: !453, line: 786, baseType: !516, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !452, file: !453, line: 787, baseType: !516, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !452, file: !453, line: 795, baseType: !527, offset: 960)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, elements: !518)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !370, line: 27, baseType: !13)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !452, file: !453, line: 807, baseType: !515, offset: 960)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !452, file: !453, line: 809, baseType: !516, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !452, file: !453, line: 810, baseType: !516, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !452, file: !453, line: 811, baseType: !516, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !452, file: !453, line: 812, baseType: !516, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !452, file: !453, line: 813, baseType: !516, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !452, file: !453, line: 815, baseType: !516, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !452, file: !453, line: 816, baseType: !516, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !452, file: !453, line: 817, baseType: !516, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !452, file: !453, line: 818, baseType: !516, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !452, file: !453, line: 819, baseType: !516, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !452, file: !453, line: 821, baseType: !516, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !452, file: !453, line: 822, baseType: !516, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !452, file: !453, line: 823, baseType: !516, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !452, file: !453, line: 832, baseType: !515, offset: 976)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !452, file: !453, line: 834, baseType: !516, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !452, file: !453, line: 835, baseType: !516, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !452, file: !453, line: 836, baseType: !516, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !452, file: !453, line: 837, baseType: !516, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !452, file: !453, line: 838, baseType: !516, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !452, file: !453, line: 840, baseType: !516, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !452, file: !453, line: 843, baseType: !516, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !452, file: !453, line: 844, baseType: !516, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !452, file: !453, line: 845, baseType: !516, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !452, file: !453, line: 847, baseType: !516, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !452, file: !453, line: 848, baseType: !516, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!555 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 866, baseType: !556, size: 32, offset: 992)
!556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 866, size: 32, elements: !557)
!557 = !{!558, !561}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !556, file: !453, line: 867, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !560, line: 37, baseType: !528)
!560 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !556, file: !453, line: 868, baseType: !562, size: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !556, file: !453, line: 868, size: 32, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !562, file: !453, line: 869, baseType: !510, size: 16)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !562, file: !453, line: 870, baseType: !510, size: 16, offset: 16)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !452, file: !453, line: 873, baseType: !528, size: 32, offset: 1024)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !452, file: !453, line: 874, baseType: !7, size: 32, offset: 1056)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !452, file: !453, line: 875, baseType: !528, size: 32, offset: 1088)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !452, file: !453, line: 876, baseType: !570, size: 16, offset: 1120)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !560, line: 30, baseType: !510)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !452, file: !453, line: 877, baseType: !510, size: 16, offset: 1136)
!572 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 879, baseType: !573, size: 32, offset: 1152)
!573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 879, size: 32, elements: !574)
!574 = !{!575, !576}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !573, file: !453, line: 880, baseType: !13, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !573, file: !453, line: 881, baseType: !13, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 888, baseType: !578, size: 32, offset: 1184)
!578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 888, size: 32, elements: !579)
!579 = !{!580, !581}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !578, file: !453, line: 889, baseType: !528, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !578, file: !453, line: 890, baseType: !528, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, scope: !452, file: !453, line: 893, baseType: !583, size: 16, offset: 1216)
!583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !452, file: !453, line: 893, size: 16, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !583, file: !453, line: 894, baseType: !570, size: 16)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !583, file: !453, line: 895, baseType: !516, size: 8)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !452, file: !453, line: 898, baseType: !510, size: 16, offset: 1232)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !452, file: !453, line: 899, baseType: !510, size: 16, offset: 1248)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !452, file: !453, line: 900, baseType: !510, size: 16, offset: 1264)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !452, file: !453, line: 902, baseType: !570, size: 16, offset: 1280)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !452, file: !453, line: 903, baseType: !510, size: 16, offset: 1296)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !452, file: !453, line: 904, baseType: !510, size: 16, offset: 1312)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !452, file: !453, line: 905, baseType: !510, size: 16, offset: 1328)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !452, file: !453, line: 908, baseType: !527, offset: 1344)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !452, file: !453, line: 912, baseType: !596, size: 32, offset: 1344)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !453, line: 606, baseType: !13)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !452, file: !453, line: 913, baseType: !596, size: 32, offset: 1376)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !452, file: !453, line: 914, baseType: !599, size: 64, offset: 1408)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !452, file: !453, line: 915, baseType: !599, size: 64, offset: 1472)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !452, file: !453, line: 916, baseType: !13, size: 32, offset: 1536)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !452, file: !453, line: 917, baseType: !603, size: 32, offset: 1568)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !604, line: 113, baseType: !605)
!604 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !604, line: 111, size: 32, elements: !606)
!606 = !{!607}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !605, file: !604, line: 112, baseType: !419, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !434, file: !6, line: 1290, baseType: !609, size: 64, offset: 320)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DISubroutineType(types: !611)
!611 = !{!365, !451, !326, !365}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !434, file: !6, line: 1293, baseType: !613, size: 64, offset: 384)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{!616, !326, !451, !326}
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !368, line: 19, baseType: !510)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !434, file: !6, line: 1296, baseType: !618, size: 64, offset: 448)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DISubroutineType(types: !620)
!620 = !{null, !326, !7}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !434, file: !6, line: 1298, baseType: !441, size: 64, offset: 512)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !434, file: !6, line: 1299, baseType: !623, size: 64, offset: 576)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!7, !326, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !434, file: !6, line: 1301, baseType: !437, size: 64, offset: 640)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !434, file: !6, line: 1302, baseType: !629, size: 64, offset: 704)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!7, !326, !632, !7}
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !634, line: 234, size: 320, elements: !635)
!634 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!635 = !{!636, !640}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !633, file: !634, line: 239, baseType: !637, size: 128)
!637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !633, file: !634, line: 236, size: 128, elements: !638)
!638 = !{!639}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !637, file: !634, line: 238, baseType: !303, size: 128)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !633, file: !634, line: 255, baseType: !641, size: 192, offset: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !633, file: !634, line: 241, size: 192, elements: !642)
!642 = !{!643, !655, !656, !657, !658, !659, !661, !662, !663, !672, !673, !674, !675}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !641, file: !634, line: 242, baseType: !644, size: 128)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !645, line: 32, size: 128, elements: !646)
!645 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!646 = !{!647, !651}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !644, file: !645, line: 33, baseType: !648, size: 16)
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !645, line: 26, baseType: !649)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !650, line: 10, baseType: !511)
!650 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!651 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !644, file: !645, line: 34, baseType: !652, size: 112, offset: 16)
!652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 112, elements: !653)
!653 = !{!654}
!654 = !DISubrange(count: 14)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !641, file: !634, line: 243, baseType: !644, size: 128)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !641, file: !634, line: 244, baseType: !644, size: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !641, file: !634, line: 245, baseType: !644, size: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !641, file: !634, line: 246, baseType: !644, size: 128)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !641, file: !634, line: 247, baseType: !660, size: 16)
!660 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !641, file: !634, line: 248, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !641, file: !634, line: 249, baseType: !7, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !641, file: !634, line: 250, baseType: !664, size: 192)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !634, line: 196, size: 192, elements: !665)
!665 = !{!666, !667, !668, !669, !670, !671}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !664, file: !634, line: 197, baseType: !348, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !664, file: !634, line: 198, baseType: !348, size: 64, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !664, file: !634, line: 199, baseType: !511, size: 16, offset: 128)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !664, file: !634, line: 200, baseType: !517, size: 8, offset: 144)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !664, file: !634, line: 201, baseType: !517, size: 8, offset: 152)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !664, file: !634, line: 202, baseType: !517, size: 8, offset: 160)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !641, file: !634, line: 251, baseType: !303, size: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !641, file: !634, line: 252, baseType: !303, size: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !641, file: !634, line: 253, baseType: !626, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !641, file: !634, line: 254, baseType: !676, size: 128)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !634, line: 207, size: 128, elements: !677)
!677 = !{!678, !679, !680}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !676, file: !634, line: 208, baseType: !13, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !676, file: !634, line: 209, baseType: !13, size: 32, offset: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !676, file: !634, line: 222, baseType: !681, size: 64, offset: 64)
!681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !676, file: !634, line: 210, size: 64, elements: !682)
!682 = !{!683, !691, !698, !710, !716, !723, !734, !742}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !681, file: !634, line: 212, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !686, line: 56, baseType: !687)
!686 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 53, size: 32, elements: !688)
!688 = !{!689, !690}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !687, file: !686, line: 54, baseType: !511, size: 16)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !687, file: !686, line: 55, baseType: !511, size: 16, offset: 16)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !681, file: !634, line: 213, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !686, line: 80, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 77, size: 64, elements: !695)
!695 = !{!696, !697}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !694, file: !686, line: 78, baseType: !13, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !694, file: !686, line: 79, baseType: !13, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !681, file: !634, line: 214, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !686, line: 66, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 58, size: 192, elements: !702)
!702 = !{!703, !704, !705, !706, !707, !708, !709}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !701, file: !686, line: 59, baseType: !13, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !701, file: !686, line: 60, baseType: !13, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !701, file: !686, line: 61, baseType: !13, size: 32, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !701, file: !686, line: 62, baseType: !13, size: 32, offset: 96)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !701, file: !686, line: 63, baseType: !13, size: 32, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !701, file: !686, line: 64, baseType: !511, size: 16, offset: 160)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !701, file: !686, line: 65, baseType: !511, size: 16, offset: 176)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !681, file: !634, line: 215, baseType: !711, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !686, line: 70, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 68, size: 32, elements: !714)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !713, file: !686, line: 69, baseType: !13, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !681, file: !634, line: 216, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !686, line: 75, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 72, size: 160, elements: !720)
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !719, file: !686, line: 73, baseType: !13, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !719, file: !686, line: 74, baseType: !303, size: 128, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !681, file: !634, line: 217, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !686, line: 89, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 82, size: 192, elements: !727)
!727 = !{!728, !729, !730, !731, !732, !733}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !726, file: !686, line: 83, baseType: !511, size: 16)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !726, file: !686, line: 84, baseType: !13, size: 32, offset: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !726, file: !686, line: 85, baseType: !13, size: 32, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !726, file: !686, line: 86, baseType: !13, size: 32, offset: 96)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !726, file: !686, line: 87, baseType: !13, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !726, file: !686, line: 88, baseType: !13, size: 32, offset: 160)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !681, file: !634, line: 220, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !686, line: 44, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 40, size: 96, elements: !738)
!738 = !{!739, !740, !741}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !737, file: !686, line: 41, baseType: !13, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !737, file: !686, line: 42, baseType: !13, size: 32, offset: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !737, file: !686, line: 43, baseType: !511, size: 16, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !681, file: !634, line: 221, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !686, line: 51, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 46, size: 128, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !745, file: !686, line: 47, baseType: !13, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !745, file: !686, line: 48, baseType: !13, size: 32, offset: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !745, file: !686, line: 49, baseType: !511, size: 16, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !745, file: !686, line: 50, baseType: !13, size: 32, offset: 96)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !434, file: !6, line: 1304, baseType: !752, size: 64, offset: 768)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DISubroutineType(types: !754)
!754 = !{!7, !326, !755}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !434, file: !6, line: 1306, baseType: !757, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!7, !326, !7}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !434, file: !6, line: 1308, baseType: !761, size: 64, offset: 896)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!7, !326, !764}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !6, line: 206, flags: DIFlagFwdDecl)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !434, file: !6, line: 1310, baseType: !767, size: 64, offset: 960)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DISubroutineType(types: !769)
!769 = !{null, !326, !13}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !434, file: !6, line: 1313, baseType: !771, size: 64, offset: 1024)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{null, !326, !774}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !776, line: 214, size: 1536, elements: !777)
!776 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!777 = !{!778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !775, file: !776, line: 215, baseType: !369, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !775, file: !776, line: 216, baseType: !369, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !775, file: !776, line: 217, baseType: !369, size: 64, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !775, file: !776, line: 218, baseType: !369, size: 64, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !775, file: !776, line: 219, baseType: !369, size: 64, offset: 256)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !775, file: !776, line: 220, baseType: !369, size: 64, offset: 320)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !775, file: !776, line: 221, baseType: !369, size: 64, offset: 384)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !775, file: !776, line: 222, baseType: !369, size: 64, offset: 448)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !775, file: !776, line: 223, baseType: !369, size: 64, offset: 512)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !775, file: !776, line: 224, baseType: !369, size: 64, offset: 576)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !775, file: !776, line: 227, baseType: !369, size: 64, offset: 640)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !775, file: !776, line: 228, baseType: !369, size: 64, offset: 704)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !775, file: !776, line: 229, baseType: !369, size: 64, offset: 768)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !775, file: !776, line: 230, baseType: !369, size: 64, offset: 832)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !775, file: !776, line: 231, baseType: !369, size: 64, offset: 896)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !775, file: !776, line: 232, baseType: !369, size: 64, offset: 960)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !775, file: !776, line: 235, baseType: !369, size: 64, offset: 1024)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !775, file: !776, line: 236, baseType: !369, size: 64, offset: 1088)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !775, file: !776, line: 237, baseType: !369, size: 64, offset: 1152)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !775, file: !776, line: 238, baseType: !369, size: 64, offset: 1216)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !775, file: !776, line: 239, baseType: !369, size: 64, offset: 1280)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !775, file: !776, line: 242, baseType: !369, size: 64, offset: 1344)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !775, file: !776, line: 243, baseType: !369, size: 64, offset: 1408)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !775, file: !776, line: 244, baseType: !369, size: 64, offset: 1472)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !434, file: !6, line: 1315, baseType: !803, size: 64, offset: 1088)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{!806, !808, !7}
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !313, line: 30, baseType: !807)
!807 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !300)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !434, file: !6, line: 1316, baseType: !811, size: 64, offset: 1152)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{!7, !7, !808, !626}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !434, file: !6, line: 1319, baseType: !815, size: 64, offset: 1216)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!818, !326}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !434, file: !6, line: 1321, baseType: !820, size: 64, offset: 1280)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DISubroutineType(types: !822)
!822 = !{!7, !326, !570, !616}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !434, file: !6, line: 1323, baseType: !820, size: 64, offset: 1344)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !434, file: !6, line: 1331, baseType: !825, size: 64, offset: 1408)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!7, !326, !7, !828}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !368, line: 17, baseType: !516)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !434, file: !6, line: 1333, baseType: !831, size: 64, offset: 1472)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!7, !326, !7, !616, !829, !570}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !434, file: !6, line: 1336, baseType: !835, size: 64, offset: 1536)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!7, !326, !7, !7, !7}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !434, file: !6, line: 1339, baseType: !839, size: 64, offset: 1600)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{!7, !326, !7, !806}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !434, file: !6, line: 1341, baseType: !839, size: 64, offset: 1664)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !434, file: !6, line: 1343, baseType: !844, size: 64, offset: 1728)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!7, !326, !7, !847}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !849, line: 20, size: 576, elements: !850)
!849 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!850 = !{!851, !852, !856, !857, !858, !859, !860, !861, !862, !863, !864}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !848, file: !849, line: 21, baseType: !528, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !848, file: !849, line: 22, baseType: !853, size: 256, offset: 32)
!853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 256, elements: !854)
!854 = !{!855}
!855 = !DISubrange(count: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !848, file: !849, line: 23, baseType: !528, size: 32, offset: 288)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !848, file: !849, line: 24, baseType: !528, size: 32, offset: 320)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !848, file: !849, line: 25, baseType: !528, size: 32, offset: 352)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !848, file: !849, line: 26, baseType: !528, size: 32, offset: 384)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !848, file: !849, line: 27, baseType: !528, size: 32, offset: 416)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !848, file: !849, line: 28, baseType: !528, size: 32, offset: 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !848, file: !849, line: 29, baseType: !528, size: 32, offset: 480)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !848, file: !849, line: 30, baseType: !528, size: 32, offset: 512)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !848, file: !849, line: 31, baseType: !570, size: 16, offset: 544)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !434, file: !6, line: 1346, baseType: !866, size: 64, offset: 1792)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DISubroutineType(types: !868)
!868 = !{!7, !326, !7, !7}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !434, file: !6, line: 1348, baseType: !870, size: 64, offset: 1856)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{!7, !326, !7, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !849, line: 9, size: 512, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881, !882, !883}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !874, file: !849, line: 10, baseType: !369, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !874, file: !849, line: 11, baseType: !369, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !874, file: !849, line: 12, baseType: !369, size: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !874, file: !849, line: 13, baseType: !369, size: 64, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !874, file: !849, line: 14, baseType: !369, size: 64, offset: 256)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !874, file: !849, line: 15, baseType: !369, size: 64, offset: 320)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !874, file: !849, line: 16, baseType: !369, size: 64, offset: 384)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !874, file: !849, line: 17, baseType: !369, size: 64, offset: 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !434, file: !6, line: 1352, baseType: !885, size: 64, offset: 1920)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{!7, !326, !7, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !891, line: 213, size: 32, elements: !892)
!891 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !890, file: !891, line: 214, baseType: !510, size: 16)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !890, file: !891, line: 215, baseType: !510, size: 16, offset: 16)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !434, file: !6, line: 1355, baseType: !896, size: 64, offset: 1984)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!7, !326, !7, !451}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !434, file: !6, line: 1357, baseType: !900, size: 64, offset: 2048)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{!7, !326, !7, !903, !903}
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !776, line: 956, size: 128, elements: !905)
!905 = !{!906, !907}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !904, file: !776, line: 957, baseType: !528, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !904, file: !776, line: 958, baseType: !369, size: 64, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !434, file: !6, line: 1361, baseType: !909, size: 64, offset: 2112)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!7, !326, !7, !367, !7}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !434, file: !6, line: 1364, baseType: !839, size: 64, offset: 2176)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !434, file: !6, line: 1367, baseType: !914, size: 64, offset: 2240)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!7, !326, !12, !626}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !434, file: !6, line: 1400, baseType: !918, size: 64, offset: 2304)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!7, !326, !326, !921}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !923, line: 75, size: 384, elements: !924)
!923 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!924 = !{!925, !926, !929, !933, !937}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !922, file: !923, line: 76, baseType: !328, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !922, file: !923, line: 77, baseType: !927, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !922, file: !923, line: 78, baseType: !930, size: 64, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !923, line: 78, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !922, file: !923, line: 79, baseType: !934, size: 160, offset: 192)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 160, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 20)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !922, file: !923, line: 80, baseType: !829, size: 8, offset: 352)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !434, file: !6, line: 1403, baseType: !939, size: 64, offset: 2368)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!7, !326, !326}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !434, file: !6, line: 1405, baseType: !943, size: 64, offset: 2432)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!326, !326, !451, !806}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !434, file: !6, line: 1408, baseType: !947, size: 64, offset: 2496)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{!365, !326, !365}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !434, file: !6, line: 1410, baseType: !951, size: 64, offset: 2560)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{!7, !326, !365}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !434, file: !6, line: 1412, baseType: !955, size: 64, offset: 2624)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{!7, !326, !958}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !960, line: 35, flags: DIFlagFwdDecl)
!960 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !434, file: !6, line: 1414, baseType: !962, size: 64, offset: 2688)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !326, !958}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !434, file: !6, line: 1417, baseType: !966, size: 64, offset: 2752)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!7, !969, !888, !326, !981, !616, !616, !921}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !971, line: 8, size: 96, elements: !972)
!971 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!972 = !{!973, !974, !975, !976, !978, !979, !980}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !970, file: !971, line: 9, baseType: !516, size: 8)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !970, file: !971, line: 10, baseType: !516, size: 8, offset: 8)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !970, file: !971, line: 11, baseType: !510, size: 16, offset: 16)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !970, file: !971, line: 12, baseType: !977, size: 32, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !370, line: 26, baseType: !7)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !970, file: !971, line: 13, baseType: !510, size: 16, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !970, file: !971, line: 14, baseType: !516, size: 8, offset: 80)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !970, file: !971, line: 15, baseType: !516, size: 8, offset: 88)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !434, file: !6, line: 1424, baseType: !984, size: 64, offset: 2816)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!7, !969, !888, !326, !981, !616}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !434, file: !6, line: 1429, baseType: !988, size: 64, offset: 2880)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!7, !451, !991, !326, !326, !1036}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !923, line: 203, size: 1024, elements: !993)
!993 = !{!994, !995, !1005, !1009, !1013, !1014, !1018, !1019, !1020, !1021, !1023, !1024, !1025, !1026}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !992, file: !923, line: 204, baseType: !451, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !992, file: !923, line: 205, baseType: !996, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !891, line: 44, size: 128, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !998, file: !891, line: 45, baseType: !528, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !998, file: !891, line: 46, baseType: !510, size: 16, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !998, file: !891, line: 47, baseType: !510, size: 16, offset: 48)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !998, file: !891, line: 48, baseType: !528, size: 32, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !998, file: !891, line: 49, baseType: !528, size: 32, offset: 96)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !992, file: !923, line: 206, baseType: !1006, size: 64, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!7, !451, !991}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !992, file: !923, line: 208, baseType: !1010, size: 64, offset: 192)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!7, !991}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !992, file: !923, line: 209, baseType: !626, size: 64, offset: 256)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !992, file: !923, line: 211, baseType: !1015, size: 64, offset: 320)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1017, line: 76, flags: DIFlagFwdDecl)
!1017 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !992, file: !923, line: 212, baseType: !921, size: 64, offset: 384)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !992, file: !923, line: 213, baseType: !616, size: 16, offset: 448)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !992, file: !923, line: 214, baseType: !616, size: 16, offset: 464)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !992, file: !923, line: 215, baseType: !1022, size: 32, offset: 480)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !368, line: 21, baseType: !528)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !992, file: !923, line: 216, baseType: !13, size: 32, offset: 512)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !992, file: !923, line: 216, baseType: !13, size: 32, offset: 544)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !992, file: !923, line: 217, baseType: !806, size: 8, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_member, scope: !992, file: !923, line: 218, baseType: !1027, size: 384, offset: 640)
!1027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !992, file: !923, line: 218, size: 384, elements: !1028)
!1028 = !{!1029, !1031}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1027, file: !923, line: 219, baseType: !1030, size: 384)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 384, elements: !493)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1027, file: !923, line: 224, baseType: !1032, size: 384)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 384, elements: !1034)
!1033 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1034 = !{!1035}
!1035 = !DISubrange(count: 6)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !434, file: !6, line: 1434, baseType: !1038, size: 64, offset: 2944)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!7, !451, !888, !326, !981, !616, !1022, !1022, !921}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !434, file: !6, line: 1440, baseType: !1042, size: 64, offset: 3008)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!7, !326, !1045, !616, !921}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !434, file: !6, line: 1444, baseType: !1047, size: 64, offset: 3072)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!7, !451, !1022, !1022, !326, !1022, !7}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !434, file: !6, line: 1449, baseType: !1051, size: 64, offset: 3136)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!7, !326, !1045, !616}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !434, file: !6, line: 1452, baseType: !1055, size: 64, offset: 3200)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!7, !326, !806}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !434, file: !6, line: 1454, baseType: !1059, size: 64, offset: 3264)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!7, !326, !1062}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !6, line: 820, size: 264, elements: !1064)
!1064 = !{!1065, !1067}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1063, file: !6, line: 821, baseType: !1066, size: 256)
!1066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 256, elements: !854)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1063, file: !6, line: 822, baseType: !517, size: 8, offset: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !434, file: !6, line: 1456, baseType: !1059, size: 64, offset: 3328)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !434, file: !6, line: 1458, baseType: !1070, size: 64, offset: 3392)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!7, !326, !1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !313, line: 55, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1076, line: 72, baseType: !1077)
!1076 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1076, line: 16, baseType: !348)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !434, file: !6, line: 1460, baseType: !1079, size: 64, offset: 3456)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !326, !1082}
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !6, line: 67, flags: DIFlagFwdDecl)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !434, file: !6, line: 1462, baseType: !1079, size: 64, offset: 3520)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !434, file: !6, line: 1464, baseType: !1086, size: 64, offset: 3584)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!626, !326, !326}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !434, file: !6, line: 1466, baseType: !1090, size: 64, offset: 3648)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{null, !326, !626}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !434, file: !6, line: 1469, baseType: !1094, size: 64, offset: 3712)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!7, !326, !7, !1022}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !434, file: !6, line: 1472, baseType: !1098, size: 64, offset: 3776)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!7, !808}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !434, file: !6, line: 1473, baseType: !1055, size: 64, offset: 3840)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !434, file: !6, line: 1475, baseType: !1103, size: 64, offset: 3904)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!7, !326, !451}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !434, file: !6, line: 1477, baseType: !618, size: 64, offset: 3968)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !434, file: !6, line: 1479, baseType: !1108, size: 64, offset: 4032)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!7, !326, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !6, line: 894, size: 256, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1112, file: !6, line: 895, baseType: !33, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !6, line: 896, baseType: !1116, size: 192, offset: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1112, file: !6, line: 896, size: 192, elements: !1117)
!1117 = !{!1118, !1127, !5477}
!1118 = !DIDerivedType(tag: DW_TAG_member, scope: !1116, file: !6, line: 898, baseType: !1119, size: 192)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1116, file: !6, line: 898, size: 192, elements: !1120)
!1120 = !{!1121, !1122, !1126}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1119, file: !6, line: 899, baseType: !1022, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1119, file: !6, line: 900, baseType: !1123, size: 64, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1125, line: 11, flags: DIFlagFwdDecl)
!1125 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1119, file: !6, line: 901, baseType: !921, size: 64, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, scope: !1116, file: !6, line: 904, baseType: !1128, size: 64)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1116, file: !6, line: 904, size: 64, elements: !1129)
!1129 = !{!1130}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1128, file: !6, line: 905, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !95, line: 222, size: 2560, elements: !1133)
!1133 = !{!1134, !5456, !5457, !5475, !5476}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1132, file: !95, line: 223, baseType: !1135, size: 2048)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !95, line: 141, size: 2048, elements: !1136)
!1136 = !{!1137, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1135, file: !95, line: 145, baseType: !1138, size: 64, align: 512)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !95, line: 54, size: 2368, elements: !1141)
!1141 = !{!1142, !1341, !1346, !5102, !5106, !5110, !5111, !5115, !5121, !5122, !5123, !5124, !5125, !5129, !5133, !5137, !5138, !5139, !5143, !5144, !5156, !5160, !5164, !5176, !5365, !5369, !5373, !5378, !5382, !5386, !5390, !5396, !5400, !5407, !5411, !5413, !5414}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1140, file: !95, line: 56, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!7, !1146}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !126, line: 483, size: 960, align: 64, elements: !1148)
!1148 = !{!1149, !1165, !1176, !1187, !1211, !1217, !1225, !1242, !1255, !1261, !1270, !1275, !1283, !1295, !1315, !1322, !1326, !1330, !1335}
!1149 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !126, line: 484, baseType: !1150, size: 512)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 484, size: 512, elements: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1150, file: !126, line: 485, baseType: !528, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1150, file: !126, line: 486, baseType: !528, size: 32, offset: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1150, file: !126, line: 487, baseType: !528, size: 32, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1150, file: !126, line: 488, baseType: !528, size: 32, offset: 96)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1150, file: !126, line: 489, baseType: !528, size: 32, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1150, file: !126, line: 492, baseType: !528, size: 32, offset: 160)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1150, file: !126, line: 493, baseType: !528, size: 32, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1150, file: !126, line: 496, baseType: !303, size: 128, offset: 224)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1150, file: !126, line: 497, baseType: !528, size: 32, offset: 352)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1150, file: !126, line: 498, baseType: !528, size: 32, offset: 384)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1150, file: !126, line: 499, baseType: !528, size: 32, offset: 416)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1150, file: !126, line: 500, baseType: !528, size: 32, offset: 448)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1150, file: !126, line: 501, baseType: !528, size: 32, offset: 480)
!1165 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !126, line: 507, baseType: !1166, size: 256)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 507, size: 256, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1175}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1166, file: !126, line: 508, baseType: !528, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1166, file: !126, line: 509, baseType: !369, size: 64, align: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, scope: !1166, file: !126, line: 510, baseType: !1171, size: 64, offset: 128)
!1171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1166, file: !126, line: 510, size: 64, elements: !1172)
!1172 = !{!1173, !1174}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1171, file: !126, line: 511, baseType: !369, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1171, file: !126, line: 512, baseType: !369, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1166, file: !126, line: 514, baseType: !369, size: 64, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1147, file: !126, line: 532, baseType: !1177, size: 448)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 517, size: 448, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1177, file: !126, line: 518, baseType: !369, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1177, file: !126, line: 521, baseType: !369, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1177, file: !126, line: 522, baseType: !369, size: 64, align: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1177, file: !126, line: 523, baseType: !369, size: 64, align: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1177, file: !126, line: 524, baseType: !528, size: 32, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1177, file: !126, line: 529, baseType: !528, size: 32, offset: 288)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1177, file: !126, line: 530, baseType: !369, size: 64, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1177, file: !126, line: 531, baseType: !369, size: 64, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !126, line: 534, baseType: !1188, size: 960)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 534, size: 960, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1188, file: !126, line: 535, baseType: !528, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1188, file: !126, line: 536, baseType: !528, size: 32, offset: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1188, file: !126, line: 537, baseType: !369, size: 64, align: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1188, file: !126, line: 538, baseType: !369, size: 64, align: 64, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1188, file: !126, line: 539, baseType: !528, size: 32, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1188, file: !126, line: 540, baseType: !528, size: 32, offset: 224)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1188, file: !126, line: 541, baseType: !369, size: 64, align: 64, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1188, file: !126, line: 542, baseType: !528, size: 32, offset: 320)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1188, file: !126, line: 543, baseType: !528, size: 32, offset: 352)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1188, file: !126, line: 544, baseType: !303, size: 128, offset: 384)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1188, file: !126, line: 545, baseType: !528, size: 32, offset: 512)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1188, file: !126, line: 550, baseType: !528, size: 32, offset: 544)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1188, file: !126, line: 551, baseType: !528, size: 32, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1188, file: !126, line: 552, baseType: !528, size: 32, offset: 608)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1188, file: !126, line: 553, baseType: !369, size: 64, align: 64, offset: 640)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1188, file: !126, line: 554, baseType: !528, size: 32, offset: 704)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1188, file: !126, line: 555, baseType: !528, size: 32, offset: 736)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1188, file: !126, line: 556, baseType: !369, size: 64, align: 64, offset: 768)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1188, file: !126, line: 557, baseType: !528, size: 32, offset: 832)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1188, file: !126, line: 558, baseType: !528, size: 32, offset: 864)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1188, file: !126, line: 559, baseType: !528, size: 32, offset: 896)
!1211 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !126, line: 562, baseType: !1212, size: 128)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 562, size: 128, elements: !1213)
!1213 = !{!1214, !1215, !1216}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1212, file: !126, line: 563, baseType: !369, size: 64, align: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1212, file: !126, line: 564, baseType: !528, size: 32, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1212, file: !126, line: 565, baseType: !528, size: 32, offset: 96)
!1217 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !126, line: 568, baseType: !1218, size: 160)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 568, size: 160, elements: !1219)
!1219 = !{!1220, !1221, !1222, !1223, !1224}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1218, file: !126, line: 569, baseType: !528, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1218, file: !126, line: 570, baseType: !528, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1218, file: !126, line: 571, baseType: !528, size: 32, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1218, file: !126, line: 572, baseType: !528, size: 32, offset: 96)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1218, file: !126, line: 573, baseType: !528, size: 32, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1147, file: !126, line: 600, baseType: !1226, size: 576)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 579, size: 576, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1226, file: !126, line: 580, baseType: !528, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1226, file: !126, line: 581, baseType: !528, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1226, file: !126, line: 582, baseType: !528, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1226, file: !126, line: 583, baseType: !528, size: 32, offset: 96)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1226, file: !126, line: 587, baseType: !369, size: 64, align: 64, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1226, file: !126, line: 588, baseType: !369, size: 64, align: 64, offset: 192)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1226, file: !126, line: 589, baseType: !528, size: 32, offset: 256)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1226, file: !126, line: 590, baseType: !528, size: 32, offset: 288)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1226, file: !126, line: 591, baseType: !528, size: 32, offset: 320)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1226, file: !126, line: 592, baseType: !528, size: 32, offset: 352)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1226, file: !126, line: 596, baseType: !369, size: 64, align: 64, offset: 384)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1226, file: !126, line: 597, baseType: !369, size: 64, align: 64, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1226, file: !126, line: 598, baseType: !528, size: 32, offset: 512)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1226, file: !126, line: 599, baseType: !528, size: 32, offset: 544)
!1242 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !126, line: 602, baseType: !1243, size: 96)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 602, size: 96, elements: !1244)
!1244 = !{!1245, !1253, !1254}
!1245 = !DIDerivedType(tag: DW_TAG_member, scope: !1243, file: !126, line: 603, baseType: !1246, size: 32)
!1246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1243, file: !126, line: 603, size: 32, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1246, file: !126, line: 604, baseType: !528, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1246, file: !126, line: 605, baseType: !528, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1246, file: !126, line: 606, baseType: !528, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1246, file: !126, line: 607, baseType: !528, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1246, file: !126, line: 608, baseType: !528, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1243, file: !126, line: 610, baseType: !528, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1243, file: !126, line: 611, baseType: !528, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1147, file: !126, line: 618, baseType: !1256, size: 128)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 614, size: 128, elements: !1257)
!1257 = !{!1258, !1259, !1260}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1256, file: !126, line: 615, baseType: !528, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1256, file: !126, line: 616, baseType: !528, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1256, file: !126, line: 617, baseType: !369, size: 64, align: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1147, file: !126, line: 627, baseType: !1262, size: 256)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 620, size: 256, elements: !1263)
!1263 = !{!1264, !1265, !1266, !1267, !1268, !1269}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1262, file: !126, line: 621, baseType: !528, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1262, file: !126, line: 622, baseType: !528, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1262, file: !126, line: 623, baseType: !528, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1262, file: !126, line: 624, baseType: !528, size: 32, offset: 96)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1262, file: !126, line: 625, baseType: !369, size: 64, align: 64, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1262, file: !126, line: 626, baseType: !528, size: 32, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1147, file: !126, line: 632, baseType: !1271, size: 128)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 629, size: 128, elements: !1272)
!1272 = !{!1273, !1274}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1271, file: !126, line: 630, baseType: !369, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1271, file: !126, line: 631, baseType: !528, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !126, line: 634, baseType: !1276, size: 256)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 634, size: 256, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1282}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1276, file: !126, line: 635, baseType: !369, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1276, file: !126, line: 636, baseType: !369, size: 64, align: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1276, file: !126, line: 637, baseType: !528, size: 32, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1276, file: !126, line: 638, baseType: !528, size: 32, offset: 160)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1276, file: !126, line: 639, baseType: !528, size: 32, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1147, file: !126, line: 656, baseType: !1284, size: 384)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 642, size: 384, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1284, file: !126, line: 643, baseType: !528, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1284, file: !126, line: 644, baseType: !528, size: 32, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1284, file: !126, line: 645, baseType: !528, size: 32, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1284, file: !126, line: 646, baseType: !528, size: 32, offset: 96)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1284, file: !126, line: 647, baseType: !369, size: 64, align: 64, offset: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1284, file: !126, line: 652, baseType: !528, size: 32, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1284, file: !126, line: 653, baseType: !528, size: 32, offset: 224)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1284, file: !126, line: 654, baseType: !369, size: 64, offset: 256)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1284, file: !126, line: 655, baseType: !369, size: 64, offset: 320)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1147, file: !126, line: 673, baseType: !1296, size: 256)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 658, size: 256, elements: !1297)
!1297 = !{!1298, !1299, !1304, !1305, !1306}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1296, file: !126, line: 659, baseType: !528, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, scope: !1296, file: !126, line: 660, baseType: !1300, size: 32, offset: 32)
!1300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1296, file: !126, line: 660, size: 32, elements: !1301)
!1301 = !{!1302, !1303}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1300, file: !126, line: 661, baseType: !528, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1300, file: !126, line: 662, baseType: !528, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1296, file: !126, line: 664, baseType: !528, size: 32, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !126, line: 665, baseType: !528, size: 32, offset: 96)
!1306 = !DIDerivedType(tag: DW_TAG_member, scope: !1296, file: !126, line: 666, baseType: !1307, size: 128, offset: 128)
!1307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1296, file: !126, line: 666, size: 128, elements: !1308)
!1308 = !{!1309, !1310}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1307, file: !126, line: 667, baseType: !528, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, scope: !1307, file: !126, line: 668, baseType: !1311, size: 128)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1307, file: !126, line: 668, size: 128, elements: !1312)
!1312 = !{!1313, !1314}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1311, file: !126, line: 669, baseType: !369, size: 64, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1311, file: !126, line: 670, baseType: !528, size: 32, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1147, file: !126, line: 683, baseType: !1316, size: 128)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 675, size: 128, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1316, file: !126, line: 676, baseType: !528, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1316, file: !126, line: 678, baseType: !528, size: 32, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !126, line: 679, baseType: !528, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1316, file: !126, line: 682, baseType: !528, size: 32, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1147, file: !126, line: 687, baseType: !1323, size: 32)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 685, size: 32, elements: !1324)
!1324 = !{!1325}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1323, file: !126, line: 686, baseType: !528, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1147, file: !126, line: 691, baseType: !1327, size: 32)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 689, size: 32, elements: !1328)
!1328 = !{!1329}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1327, file: !126, line: 690, baseType: !528, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1147, file: !126, line: 696, baseType: !1331, size: 64)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 693, size: 64, elements: !1332)
!1332 = !{!1333, !1334}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1331, file: !126, line: 694, baseType: !528, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1331, file: !126, line: 695, baseType: !528, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1147, file: !126, line: 702, baseType: !1336, size: 96)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !126, line: 698, size: 96, elements: !1337)
!1337 = !{!1338, !1339, !1340}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1336, file: !126, line: 699, baseType: !528, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1336, file: !126, line: 700, baseType: !528, size: 32, offset: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1336, file: !126, line: 701, baseType: !528, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1140, file: !95, line: 57, baseType: !1342, size: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!1345, !1146}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1140, file: !95, line: 58, baseType: !1347, size: 64, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !1345, !1350}
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !78, line: 916, size: 1856, align: 32, elements: !1352)
!1352 = !{!1353, !1363, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5085, !5086, !5095, !5096, !5097, !5098, !5099, !5100, !5101}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1351, file: !78, line: 920, baseType: !1354, size: 128)
!1354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1351, file: !78, line: 917, size: 128, elements: !1355)
!1355 = !{!1356, !1362}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1354, file: !78, line: 918, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1358, line: 58, size: 64, elements: !1359)
!1358 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1359 = !{!1360}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1357, file: !1358, line: 59, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1354, file: !78, line: 919, baseType: !335, size: 128, align: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1351, file: !78, line: 921, baseType: !1364, size: 128, offset: 128)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1365, line: 8, size: 128, elements: !1366)
!1365 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1366 = !{!1367, !1371}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1364, file: !1365, line: 9, baseType: !1368, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1370, line: 18, flags: DIFlagFwdDecl)
!1370 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1364, file: !1365, line: 10, baseType: !1372, size: 64, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1370, line: 89, size: 1536, elements: !1374)
!1374 = !{!1375, !1376, !1386, !1394, !1395, !1408, !5036, !5037, !5049, !5050, !5051, !5052, !5053, !5059, !5060, !5061}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1373, file: !1370, line: 91, baseType: !13, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1373, file: !1370, line: 92, baseType: !1377, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1378, line: 277, baseType: !1379)
!1378 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1378, line: 277, size: 32, elements: !1380)
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1379, file: !1378, line: 277, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1378, line: 70, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1378, line: 65, size: 32, elements: !1384)
!1384 = !{!1385}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1383, file: !1378, line: 66, baseType: !13, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1373, file: !1370, line: 93, baseType: !1387, size: 128, offset: 64)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1388, line: 38, size: 128, elements: !1389)
!1388 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1389 = !{!1390, !1392}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1387, file: !1388, line: 39, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1387, file: !1388, line: 39, baseType: !1393, size: 64, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1373, file: !1370, line: 94, baseType: !1372, size: 64, offset: 192)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1373, file: !1370, line: 95, baseType: !1396, size: 128, offset: 256)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1370, line: 47, size: 128, elements: !1397)
!1397 = !{!1398, !1407}
!1398 = !DIDerivedType(tag: DW_TAG_member, scope: !1396, file: !1370, line: 48, baseType: !1399, size: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1396, file: !1370, line: 48, size: 64, elements: !1400)
!1400 = !{!1401, !1406}
!1401 = !DIDerivedType(tag: DW_TAG_member, scope: !1399, file: !1370, line: 49, baseType: !1402, size: 64)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1399, file: !1370, line: 49, size: 64, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1402, file: !1370, line: 50, baseType: !1022, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1402, file: !1370, line: 50, baseType: !1022, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1399, file: !1370, line: 52, baseType: !367, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1396, file: !1370, line: 54, baseType: !981, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1373, file: !1370, line: 96, baseType: !1409, size: 64, offset: 384)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !78, line: 610, size: 4224, elements: !1411)
!1411 = !{!1412, !1414, !1415, !1423, !1430, !1431, !1578, !4765, !4766, !4767, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !5012, !5020, !5021, !5022, !5032, !5033, !5034, !5035}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1410, file: !78, line: 611, baseType: !1413, size: 16)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !313, line: 19, baseType: !511)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1410, file: !78, line: 612, baseType: !511, size: 16, offset: 16)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1410, file: !78, line: 613, baseType: !1416, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1417, line: 23, baseType: !1418)
!1417 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1417, line: 21, size: 32, elements: !1419)
!1419 = !{!1420}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1418, file: !1417, line: 22, baseType: !1421, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !313, line: 32, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1076, line: 49, baseType: !13)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1410, file: !78, line: 614, baseType: !1424, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1417, line: 28, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1417, line: 26, size: 32, elements: !1426)
!1426 = !{!1427}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1425, file: !1417, line: 27, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !313, line: 33, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1076, line: 50, baseType: !13)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1410, file: !78, line: 615, baseType: !13, size: 32, offset: 96)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1410, file: !78, line: 622, baseType: !1432, size: 64, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !78, line: 1864, size: 1536, align: 512, elements: !1435)
!1435 = !{!1436, !1440, !1453, !1457, !1463, !1467, !1471, !1475, !1479, !1483, !1487, !1488, !1494, !1498, !1522, !1551, !1558, !1564, !1569, !1573, !1574}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1434, file: !78, line: 1865, baseType: !1437, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!1372, !1409, !1372, !13}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1434, file: !78, line: 1866, baseType: !1441, size: 64, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!328, !1372, !1409, !1444}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1446, line: 10, size: 128, elements: !1447)
!1446 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1447 = !{!1448, !1452}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1445, file: !1446, line: 11, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{null, !626}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1445, file: !1446, line: 12, baseType: !626, size: 64, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1434, file: !78, line: 1867, baseType: !1454, size: 64, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!7, !1409, !7}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1434, file: !78, line: 1868, baseType: !1458, size: 64, offset: 192)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!1461, !1409, !7}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !78, line: 581, flags: DIFlagFwdDecl)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1434, file: !78, line: 1870, baseType: !1464, size: 64, offset: 256)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!7, !1372, !1073, !7}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1434, file: !78, line: 1872, baseType: !1468, size: 64, offset: 320)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!7, !1409, !1372, !1413, !806}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1434, file: !78, line: 1873, baseType: !1472, size: 64, offset: 384)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!7, !1372, !1409, !1372}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1434, file: !78, line: 1874, baseType: !1476, size: 64, offset: 448)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!7, !1409, !1372}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1434, file: !78, line: 1875, baseType: !1480, size: 64, offset: 512)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!7, !1409, !1372, !328}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1434, file: !78, line: 1876, baseType: !1484, size: 64, offset: 576)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!7, !1409, !1372, !1413}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1434, file: !78, line: 1877, baseType: !1476, size: 64, offset: 640)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1434, file: !78, line: 1878, baseType: !1489, size: 64, offset: 704)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!7, !1409, !1372, !1413, !1492}
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !313, line: 16, baseType: !1493)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !313, line: 13, baseType: !1022)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1434, file: !78, line: 1879, baseType: !1495, size: 64, offset: 768)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!7, !1409, !1372, !1409, !1372, !13}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1434, file: !78, line: 1881, baseType: !1499, size: 64, offset: 832)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!7, !1372, !1502}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !78, line: 219, size: 640, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1512, !1519, !1520, !1521}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1503, file: !78, line: 220, baseType: !13, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1503, file: !78, line: 221, baseType: !1413, size: 16, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1503, file: !78, line: 222, baseType: !1416, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1503, file: !78, line: 223, baseType: !1424, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1503, file: !78, line: 224, baseType: !1510, size: 64, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !313, line: 46, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1076, line: 88, baseType: !415)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1503, file: !78, line: 225, baseType: !1513, size: 128, offset: 192)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1514, line: 13, size: 128, elements: !1515)
!1514 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1515 = !{!1516, !1518}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1513, file: !1514, line: 14, baseType: !1517, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1514, line: 8, baseType: !414)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1513, file: !1514, line: 15, baseType: !1033, size: 64, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1503, file: !78, line: 226, baseType: !1513, size: 128, offset: 320)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1503, file: !78, line: 227, baseType: !1513, size: 128, offset: 448)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1503, file: !78, line: 234, baseType: !1350, size: 64, offset: 576)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1434, file: !78, line: 1882, baseType: !1523, size: 64, offset: 896)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!7, !1526, !1528, !1022, !13}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1530, line: 22, size: 1152, elements: !1531)
!1530 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1531 = !{!1532, !1533, !1534, !1535, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1529, file: !1530, line: 23, baseType: !1022, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1529, file: !1530, line: 24, baseType: !1413, size: 16, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1529, file: !1530, line: 25, baseType: !13, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1529, file: !1530, line: 26, baseType: !1536, size: 32, offset: 96)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !313, line: 104, baseType: !1022)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1529, file: !1530, line: 27, baseType: !367, size: 64, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1529, file: !1530, line: 28, baseType: !367, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1529, file: !1530, line: 37, baseType: !367, size: 64, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1529, file: !1530, line: 38, baseType: !1492, size: 32, offset: 320)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1529, file: !1530, line: 39, baseType: !1492, size: 32, offset: 352)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1529, file: !1530, line: 40, baseType: !1416, size: 32, offset: 384)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1529, file: !1530, line: 41, baseType: !1424, size: 32, offset: 416)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1529, file: !1530, line: 42, baseType: !1510, size: 64, offset: 448)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1529, file: !1530, line: 43, baseType: !1513, size: 128, offset: 512)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1529, file: !1530, line: 44, baseType: !1513, size: 128, offset: 640)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1529, file: !1530, line: 45, baseType: !1513, size: 128, offset: 768)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1529, file: !1530, line: 46, baseType: !1513, size: 128, offset: 896)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1529, file: !1530, line: 47, baseType: !367, size: 64, offset: 1024)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1529, file: !1530, line: 48, baseType: !367, size: 64, offset: 1088)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1434, file: !78, line: 1883, baseType: !1552, size: 64, offset: 960)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!1555, !1372, !1073, !1074}
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !313, line: 60, baseType: !1556)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1076, line: 73, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1076, line: 15, baseType: !1033)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1434, file: !78, line: 1884, baseType: !1559, size: 64, offset: 1024)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!7, !1409, !1562, !367, !367}
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !78, line: 50, flags: DIFlagFwdDecl)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1434, file: !78, line: 1886, baseType: !1565, size: 64, offset: 1088)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!7, !1409, !1568, !7}
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1434, file: !78, line: 1887, baseType: !1570, size: 64, offset: 1152)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!7, !1409, !1372, !1350, !13, !1413}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1434, file: !78, line: 1890, baseType: !1484, size: 64, offset: 1216)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1434, file: !78, line: 1891, baseType: !1575, size: 64, offset: 1280)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!7, !1409, !1461, !7}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1410, file: !78, line: 623, baseType: !1579, size: 64, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !78, line: 1416, size: 9472, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1631, !4373, !4455, !4538, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4554, !4558, !4559, !4562, !4563, !4566, !4567, !4568, !4609, !4636, !4637, !4638, !4639, !4640, !4641, !4644, !4646, !4652, !4653, !4655, !4656, !4657, !4716, !4717, !4732, !4733, !4734, !4735, !4736, !4739, !4740, !4741, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1580, file: !78, line: 1417, baseType: !320, size: 128)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1580, file: !78, line: 1418, baseType: !1492, size: 32, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1580, file: !78, line: 1419, baseType: !517, size: 8, offset: 160)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1580, file: !78, line: 1420, baseType: !348, size: 64, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1580, file: !78, line: 1421, baseType: !1510, size: 64, offset: 256)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1580, file: !78, line: 1422, baseType: !1588, size: 64, offset: 320)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !78, line: 2228, size: 576, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1600, !1604, !1608, !1612, !1613, !1614, !1618, !1622, !1623, !1624, !1628, !1629, !1630}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1589, file: !78, line: 2229, baseType: !328, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1589, file: !78, line: 2230, baseType: !7, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1589, file: !78, line: 2238, baseType: !1594, size: 64, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!7, !1597}
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1599, line: 28, flags: DIFlagFwdDecl)
!1599 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1589, file: !78, line: 2239, baseType: !1601, size: 64, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1603)
!1603 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !78, line: 70, flags: DIFlagFwdDecl)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1589, file: !78, line: 2240, baseType: !1605, size: 64, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!1372, !1588, !7, !328, !626}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1589, file: !78, line: 2242, baseType: !1609, size: 64, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{null, !1579}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1589, file: !78, line: 2243, baseType: !1015, size: 64, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1589, file: !78, line: 2244, baseType: !1588, size: 64, offset: 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1589, file: !78, line: 2245, baseType: !1615, size: 64, offset: 512)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !313, line: 182, size: 64, elements: !1616)
!1616 = !{!1617}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1615, file: !313, line: 183, baseType: !316, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1589, file: !78, line: 2247, baseType: !1619, offset: 576)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1620, line: 187, elements: !1621)
!1620 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1621 = !{}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1589, file: !78, line: 2248, baseType: !1619, offset: 576)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1589, file: !78, line: 2249, baseType: !1619, offset: 576)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1589, file: !78, line: 2250, baseType: !1625, offset: 576)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1619, elements: !1626)
!1626 = !{!1627}
!1627 = !DISubrange(count: 3)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1589, file: !78, line: 2252, baseType: !1619, offset: 576)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1589, file: !78, line: 2253, baseType: !1619, offset: 576)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1589, file: !78, line: 2254, baseType: !1619, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1580, file: !78, line: 1423, baseType: !1632, size: 64, offset: 384)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !78, line: 1935, size: 1472, elements: !1635)
!1635 = !{!1636, !1640, !1644, !1645, !1649, !1655, !1659, !1660, !1661, !1665, !1669, !1670, !1671, !1672, !1678, !1682, !1683, !1746, !1747, !1748, !1749, !4357, !4372}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1634, file: !78, line: 1936, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!1409, !1579}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1634, file: !78, line: 1937, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{null, !1409}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1634, file: !78, line: 1938, baseType: !1641, size: 64, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1634, file: !78, line: 1940, baseType: !1646, size: 64, offset: 192)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{null, !1409, !7}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1634, file: !78, line: 1941, baseType: !1650, size: 64, offset: 256)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!7, !1409, !1653}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !48, line: 40, flags: DIFlagFwdDecl)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1634, file: !78, line: 1942, baseType: !1656, size: 64, offset: 320)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!7, !1409}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1634, file: !78, line: 1943, baseType: !1641, size: 64, offset: 384)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1634, file: !78, line: 1944, baseType: !1609, size: 64, offset: 448)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1634, file: !78, line: 1945, baseType: !1662, size: 64, offset: 512)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!7, !1579, !7}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1634, file: !78, line: 1946, baseType: !1666, size: 64, offset: 576)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!7, !1579}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1634, file: !78, line: 1947, baseType: !1666, size: 64, offset: 640)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1634, file: !78, line: 1948, baseType: !1666, size: 64, offset: 704)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1634, file: !78, line: 1949, baseType: !1666, size: 64, offset: 768)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1634, file: !78, line: 1950, baseType: !1673, size: 64, offset: 832)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!7, !1372, !1676}
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !78, line: 57, flags: DIFlagFwdDecl)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1634, file: !78, line: 1951, baseType: !1679, size: 64, offset: 896)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!7, !1579, !1036, !1073}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1634, file: !78, line: 1952, baseType: !1609, size: 64, offset: 960)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1634, file: !78, line: 1954, baseType: !1684, size: 64, offset: 1024)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!7, !1687, !1372}
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1689, line: 16, size: 896, elements: !1690)
!1689 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1719, !1741, !1742, !1745}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1688, file: !1689, line: 17, baseType: !1073, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1688, file: !1689, line: 18, baseType: !1074, size: 64, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1688, file: !1689, line: 19, baseType: !1074, size: 64, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1688, file: !1689, line: 20, baseType: !1074, size: 64, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1688, file: !1689, line: 21, baseType: !1074, size: 64, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1688, file: !1689, line: 22, baseType: !1510, size: 64, offset: 320)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1688, file: !1689, line: 23, baseType: !1510, size: 64, offset: 384)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1688, file: !1689, line: 24, baseType: !1699, size: 192, offset: 448)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1700, line: 53, size: 192, elements: !1701)
!1700 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1701 = !{!1702, !1703, !1718}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1699, file: !1700, line: 54, baseType: !407, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1699, file: !1700, line: 55, baseType: !1704, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1705, line: 83, baseType: !1706)
!1705 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1705, line: 71, elements: !1707)
!1707 = !{!1708}
!1708 = !DIDerivedType(tag: DW_TAG_member, scope: !1706, file: !1705, line: 72, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1706, file: !1705, line: 72, elements: !1710)
!1710 = !{!1711}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1709, file: !1705, line: 73, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1705, line: 20, elements: !1713)
!1713 = !{!1714}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1712, file: !1705, line: 21, baseType: !1715)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1716, line: 25, baseType: !1717)
!1716 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1716, line: 25, elements: !1621)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1699, file: !1700, line: 59, baseType: !320, size: 128, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1688, file: !1689, line: 25, baseType: !1720, size: 64, offset: 640)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1689, line: 31, size: 256, elements: !1723)
!1723 = !{!1724, !1729, !1733, !1737}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1722, file: !1689, line: 32, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!626, !1687, !1728}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1722, file: !1689, line: 33, baseType: !1730, size: 64, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{null, !1687, !626}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1722, file: !1689, line: 34, baseType: !1734, size: 64, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{!626, !1687, !626, !1728}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1722, file: !1689, line: 35, baseType: !1738, size: 64, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!7, !1687, !626}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1688, file: !1689, line: 26, baseType: !7, size: 32, offset: 704)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1688, file: !1689, line: 27, baseType: !1743, size: 64, offset: 768)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1688, file: !1689, line: 28, baseType: !626, size: 64, offset: 832)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1634, file: !78, line: 1955, baseType: !1684, size: 64, offset: 1088)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1634, file: !78, line: 1956, baseType: !1684, size: 64, offset: 1152)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1634, file: !78, line: 1957, baseType: !1684, size: 64, offset: 1216)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1634, file: !78, line: 1963, baseType: !1750, size: 64, offset: 1280)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!7, !1579, !1753, !1776}
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1755, line: 68, size: 512, align: 128, elements: !1756)
!1755 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1756 = !{!1757, !1758, !4349, !4356}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1754, file: !1755, line: 69, baseType: !348, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, scope: !1754, file: !1755, line: 77, baseType: !1759, size: 320, offset: 64)
!1759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1754, file: !1755, line: 77, size: 320, elements: !1760)
!1760 = !{!1761, !2066, !2071, !2099, !2107, !2113, !4280, !4348}
!1761 = !DIDerivedType(tag: DW_TAG_member, scope: !1759, file: !1755, line: 78, baseType: !1762, size: 320)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1759, file: !1755, line: 78, size: 320, elements: !1763)
!1763 = !{!1764, !1765, !2064, !2065}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1762, file: !1755, line: 84, baseType: !320, size: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1762, file: !1755, line: 86, baseType: !1766, size: 64, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !78, line: 451, size: 1216, align: 64, elements: !1768)
!1768 = !{!1769, !1770, !1778, !1779, !1780, !1788, !1797, !1798, !1799, !1800, !2057, !2058, !2061, !2062, !2063}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1767, file: !78, line: 452, baseType: !1409, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1767, file: !78, line: 453, baseType: !1771, size: 128, offset: 64)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1772, line: 292, size: 128, elements: !1773)
!1772 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1773 = !{!1774, !1775, !1777}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1771, file: !1772, line: 293, baseType: !1704)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1771, file: !1772, line: 295, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !313, line: 148, baseType: !13)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1771, file: !1772, line: 296, baseType: !626, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1767, file: !78, line: 454, baseType: !1776, size: 32, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1767, file: !78, line: 455, baseType: !419, size: 32, offset: 224)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1767, file: !78, line: 460, baseType: !1781, size: 128, offset: 256)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !470, line: 125, size: 128, elements: !1782)
!1782 = !{!1783, !1787}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1781, file: !470, line: 126, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !470, line: 31, size: 64, elements: !1785)
!1785 = !{!1786}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1784, file: !470, line: 32, baseType: !474, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1781, file: !470, line: 127, baseType: !474, size: 64, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1767, file: !78, line: 461, baseType: !1789, size: 256, offset: 384)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1790, line: 35, size: 256, elements: !1791)
!1790 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1791 = !{!1792, !1793, !1794, !1796}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1789, file: !1790, line: 36, baseType: !407, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1789, file: !1790, line: 42, baseType: !407, size: 64, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1789, file: !1790, line: 46, baseType: !1795, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1705, line: 29, baseType: !1712)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1789, file: !1790, line: 47, baseType: !320, size: 128, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1767, file: !78, line: 462, baseType: !348, size: 64, offset: 640)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1767, file: !78, line: 463, baseType: !348, size: 64, offset: 704)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1767, file: !78, line: 464, baseType: !348, size: 64, offset: 768)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1767, file: !78, line: 465, baseType: !1801, size: 64, offset: 832)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !78, line: 367, size: 1408, elements: !1804)
!1804 = !{!1805, !1809, !1813, !1817, !1821, !1825, !1831, !1837, !1841, !1846, !1850, !1854, !1858, !2021, !2025, !2031, !2032, !2033, !2037, !2042, !2046, !2053}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1803, file: !78, line: 368, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!7, !1753, !1653}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1803, file: !78, line: 369, baseType: !1810, size: 64, offset: 64)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!7, !1350, !1753}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1803, file: !78, line: 372, baseType: !1814, size: 64, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!7, !1766, !1653}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1803, file: !78, line: 375, baseType: !1818, size: 64, offset: 192)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!7, !1753}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1803, file: !78, line: 381, baseType: !1822, size: 64, offset: 256)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!7, !1350, !1766, !323, !13}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1803, file: !78, line: 383, baseType: !1826, size: 64, offset: 320)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{null, !1829}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !78, line: 290, flags: DIFlagFwdDecl)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1803, file: !78, line: 385, baseType: !1832, size: 64, offset: 384)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!7, !1350, !1766, !1510, !13, !13, !1835, !1836}
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1803, file: !78, line: 388, baseType: !1838, size: 64, offset: 448)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!7, !1350, !1766, !1510, !13, !13, !1753, !626}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1803, file: !78, line: 393, baseType: !1842, size: 64, offset: 512)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!1845, !1766, !1845}
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !313, line: 125, baseType: !367)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1803, file: !78, line: 394, baseType: !1847, size: 64, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{null, !1753, !13, !13}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1803, file: !78, line: 395, baseType: !1851, size: 64, offset: 640)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!7, !1753, !1776}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1803, file: !78, line: 396, baseType: !1855, size: 64, offset: 704)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{null, !1753}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1803, file: !78, line: 397, baseType: !1859, size: 64, offset: 768)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!1555, !1862, !1882}
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !78, line: 320, size: 384, elements: !1864)
!1864 = !{!1865, !1866, !1867, !1871, !1872, !1873, !1874, !1875}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1863, file: !78, line: 321, baseType: !1350, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1863, file: !78, line: 326, baseType: !1510, size: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1863, file: !78, line: 327, baseType: !1868, size: 64, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !1862, !1033, !1033}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1863, file: !78, line: 328, baseType: !626, size: 64, offset: 192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1863, file: !78, line: 329, baseType: !7, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1863, file: !78, line: 330, baseType: !616, size: 16, offset: 288)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1863, file: !78, line: 331, baseType: !616, size: 16, offset: 304)
!1875 = !DIDerivedType(tag: DW_TAG_member, scope: !1863, file: !78, line: 332, baseType: !1876, size: 64, offset: 320)
!1876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1863, file: !78, line: 332, size: 64, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1876, file: !78, line: 333, baseType: !13, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1876, file: !78, line: 334, baseType: !1880, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !78, line: 334, flags: DIFlagFwdDecl)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1884, line: 29, size: 320, elements: !1885)
!1884 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1885 = !{!1886, !1887, !1888, !1889, !2012}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1883, file: !1884, line: 35, baseType: !13, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1883, file: !1884, line: 36, baseType: !1074, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1883, file: !1884, line: 37, baseType: !1074, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !1884, line: 38, baseType: !1890, size: 64, offset: 192)
!1890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1883, file: !1884, line: 38, size: 64, elements: !1891)
!1891 = !{!1892, !1900, !1907, !1916}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1890, file: !1884, line: 39, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1896, line: 17, size: 128, elements: !1897)
!1896 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1897 = !{!1898, !1899}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1895, file: !1896, line: 19, baseType: !626, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1895, file: !1896, line: 20, baseType: !1075, size: 64, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1890, file: !1884, line: 40, baseType: !1901, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1884, line: 15, size: 128, elements: !1904)
!1904 = !{!1905, !1906}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1903, file: !1884, line: 16, baseType: !626, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1903, file: !1884, line: 17, baseType: !1074, size: 64, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1890, file: !1884, line: 41, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1911, line: 31, size: 128, elements: !1912)
!1911 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1912 = !{!1913, !1914, !1915}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1910, file: !1911, line: 32, baseType: !1753, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1910, file: !1911, line: 33, baseType: !13, size: 32, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1910, file: !1911, line: 34, baseType: !13, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1890, file: !1884, line: 42, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1919, line: 57, size: 1088, elements: !1920)
!1919 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1920 = !{!1921, !1922, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1958, !1959, !1986}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1918, file: !1919, line: 58, baseType: !1699, size: 192)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1918, file: !1919, line: 59, baseType: !1923, size: 128, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1924, line: 40, baseType: !1925)
!1924 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1924, line: 36, size: 128, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1925, file: !1924, line: 37, baseType: !1704)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1925, file: !1924, line: 38, baseType: !320, size: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1918, file: !1919, line: 59, baseType: !1923, size: 128, offset: 320)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1918, file: !1919, line: 60, baseType: !13, size: 32, offset: 448)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1918, file: !1919, line: 61, baseType: !13, size: 32, offset: 480)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1918, file: !1919, line: 62, baseType: !13, size: 32, offset: 512)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1918, file: !1919, line: 63, baseType: !13, size: 32, offset: 544)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1918, file: !1919, line: 67, baseType: !13, size: 32, offset: 576)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1918, file: !1919, line: 68, baseType: !13, size: 32, offset: 608)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1918, file: !1919, line: 69, baseType: !13, size: 32, offset: 640)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1918, file: !1919, line: 70, baseType: !13, size: 32, offset: 672)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1918, file: !1919, line: 71, baseType: !13, size: 32, offset: 704)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1918, file: !1919, line: 72, baseType: !13, size: 32, offset: 736)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1918, file: !1919, line: 73, baseType: !1753, size: 64, offset: 768)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1918, file: !1919, line: 74, baseType: !1942, size: 64, offset: 832)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !78, line: 1314, size: 320, elements: !1944)
!1944 = !{!1945, !1953, !1954, !1955, !1956, !1957}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1943, file: !78, line: 1315, baseType: !1946)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1947, line: 20, baseType: !1948)
!1947 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1947, line: 11, elements: !1949)
!1949 = !{!1950}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1948, file: !1947, line: 12, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1716, line: 33, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1716, line: 31, elements: !1621)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1943, file: !78, line: 1316, baseType: !7, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1943, file: !78, line: 1317, baseType: !7, size: 32, offset: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1943, file: !78, line: 1318, baseType: !1942, size: 64, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1943, file: !78, line: 1319, baseType: !1350, size: 64, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1943, file: !78, line: 1320, baseType: !335, size: 128, align: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1918, file: !1919, line: 75, baseType: !1942, size: 64, offset: 896)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1918, file: !1919, line: 76, baseType: !1960, size: 64, offset: 960)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1919, line: 26, size: 320, elements: !1962)
!1962 = !{!1963, !1964, !1965, !1966, !1984, !1985}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1961, file: !1919, line: 27, baseType: !1753, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1961, file: !1919, line: 28, baseType: !13, size: 32, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1961, file: !1919, line: 28, baseType: !13, size: 32, offset: 96)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1961, file: !1919, line: 29, baseType: !1967, size: 64, offset: 128)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1919, line: 93, size: 256, elements: !1970)
!1970 = !{!1971, !1975, !1979, !1983}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1969, file: !1919, line: 101, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!7, !1917, !1960}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1969, file: !1919, line: 107, baseType: !1976, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{null, !1917, !1960}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1969, file: !1919, line: 117, baseType: !1980, size: 64, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!806, !1917, !1960}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1969, file: !1919, line: 122, baseType: !1980, size: 64, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1961, file: !1919, line: 30, baseType: !13, size: 32, offset: 192)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1961, file: !1919, line: 31, baseType: !348, size: 64, offset: 256)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1918, file: !1919, line: 77, baseType: !1987, size: 64, offset: 1024)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1989, line: 13, size: 896, elements: !1990)
!1989 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1988, file: !1989, line: 14, baseType: !603, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1988, file: !1989, line: 15, baseType: !419, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1988, file: !1989, line: 16, baseType: !419, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1988, file: !1989, line: 21, baseType: !407, size: 64, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1988, file: !1989, line: 27, baseType: !348, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1988, file: !1989, line: 28, baseType: !348, size: 64, offset: 256)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1988, file: !1989, line: 29, baseType: !407, size: 64, offset: 320)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1988, file: !1989, line: 32, baseType: !312, size: 128, offset: 384)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1988, file: !1989, line: 33, baseType: !1416, size: 32, offset: 512)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1988, file: !1989, line: 37, baseType: !407, size: 64, offset: 576)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1988, file: !1989, line: 44, baseType: !2002, size: 256, offset: 640)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2003, line: 15, size: 256, elements: !2004)
!2003 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010, !2011}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2002, file: !2003, line: 16, baseType: !1795)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2002, file: !2003, line: 18, baseType: !7, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2002, file: !2003, line: 19, baseType: !7, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2002, file: !2003, line: 20, baseType: !7, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2002, file: !2003, line: 21, baseType: !7, size: 32, offset: 96)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2002, file: !2003, line: 22, baseType: !348, size: 64, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2002, file: !2003, line: 23, baseType: !348, size: 64, offset: 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !1884, line: 44, baseType: !2013, size: 64, offset: 256)
!2013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1883, file: !1884, line: 44, size: 64, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !2013, file: !1884, line: 45, baseType: !348, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, scope: !2013, file: !1884, line: 46, baseType: !2017, size: 64)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2013, file: !1884, line: 46, size: 64, elements: !2018)
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2017, file: !1884, line: 47, baseType: !13, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !2017, file: !1884, line: 48, baseType: !13, size: 32, offset: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1803, file: !78, line: 402, baseType: !2022, size: 64, offset: 832)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!7, !1766, !1753, !1753, !40}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1803, file: !78, line: 404, baseType: !2026, size: 64, offset: 896)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DISubroutineType(types: !2028)
!2028 = !{!806, !1753, !2029}
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2030, line: 305, baseType: !13)
!2030 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1803, file: !78, line: 405, baseType: !1855, size: 64, offset: 960)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1803, file: !78, line: 406, baseType: !1818, size: 64, offset: 1024)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1803, file: !78, line: 407, baseType: !2034, size: 64, offset: 1088)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!7, !1753, !348, !348}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1803, file: !78, line: 409, baseType: !2038, size: 64, offset: 1152)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !1753, !2041, !2041}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1803, file: !78, line: 410, baseType: !2043, size: 64, offset: 1216)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!7, !1766, !1753}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1803, file: !78, line: 413, baseType: !2047, size: 64, offset: 1280)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!7, !2050, !1350, !2052}
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !78, line: 61, flags: DIFlagFwdDecl)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1803, file: !78, line: 415, baseType: !2054, size: 64, offset: 1344)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{null, !1350}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1767, file: !78, line: 466, baseType: !348, size: 64, offset: 896)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1767, file: !78, line: 467, baseType: !2059, size: 32, offset: 960)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2060, line: 8, baseType: !1022)
!2060 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1767, file: !78, line: 468, baseType: !1704, offset: 992)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1767, file: !78, line: 469, baseType: !320, size: 128, offset: 1024)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1767, file: !78, line: 470, baseType: !626, size: 64, offset: 1152)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1762, file: !1755, line: 87, baseType: !348, size: 64, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1762, file: !1755, line: 94, baseType: !348, size: 64, offset: 256)
!2066 = !DIDerivedType(tag: DW_TAG_member, scope: !1759, file: !1755, line: 96, baseType: !2067, size: 64)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1759, file: !1755, line: 96, size: 64, elements: !2068)
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2067, file: !1755, line: 101, baseType: !2070, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !313, line: 143, baseType: !367)
!2071 = !DIDerivedType(tag: DW_TAG_member, scope: !1759, file: !1755, line: 103, baseType: !2072, size: 320)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1759, file: !1755, line: 103, size: 320, elements: !2073)
!2073 = !{!2074, !2084, !2087, !2088}
!2074 = !DIDerivedType(tag: DW_TAG_member, scope: !2072, file: !1755, line: 104, baseType: !2075, size: 128)
!2075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2072, file: !1755, line: 104, size: 128, elements: !2076)
!2076 = !{!2077, !2078}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2075, file: !1755, line: 105, baseType: !320, size: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !2075, file: !1755, line: 106, baseType: !2079, size: 128)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2075, file: !1755, line: 106, size: 128, elements: !2080)
!2080 = !{!2081, !2082, !2083}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2079, file: !1755, line: 107, baseType: !1753, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2079, file: !1755, line: 109, baseType: !7, size: 32, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2079, file: !1755, line: 110, baseType: !7, size: 32, offset: 96)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2072, file: !1755, line: 117, baseType: !2085, size: 64, offset: 128)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1755, line: 117, flags: DIFlagFwdDecl)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2072, file: !1755, line: 119, baseType: !626, size: 64, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_member, scope: !2072, file: !1755, line: 120, baseType: !2089, size: 64, offset: 256)
!2089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2072, file: !1755, line: 120, size: 64, elements: !2090)
!2090 = !{!2091, !2092, !2093}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2089, file: !1755, line: 121, baseType: !626, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2089, file: !1755, line: 122, baseType: !348, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, scope: !2089, file: !1755, line: 123, baseType: !2094, size: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2089, file: !1755, line: 123, size: 32, elements: !2095)
!2095 = !{!2096, !2097, !2098}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2094, file: !1755, line: 124, baseType: !13, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2094, file: !1755, line: 125, baseType: !13, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2094, file: !1755, line: 126, baseType: !13, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !1759, file: !1755, line: 130, baseType: !2100, size: 192)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1759, file: !1755, line: 130, size: 192, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2106}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2100, file: !1755, line: 131, baseType: !348, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2100, file: !1755, line: 134, baseType: !517, size: 8, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2100, file: !1755, line: 135, baseType: !517, size: 8, offset: 72)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2100, file: !1755, line: 136, baseType: !419, size: 32, offset: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2100, file: !1755, line: 137, baseType: !13, size: 32, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !1759, file: !1755, line: 139, baseType: !2108, size: 256)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1759, file: !1755, line: 139, size: 256, elements: !2109)
!2109 = !{!2110, !2111, !2112}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2108, file: !1755, line: 140, baseType: !348, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2108, file: !1755, line: 141, baseType: !419, size: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2108, file: !1755, line: 143, baseType: !320, size: 128, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, scope: !1759, file: !1755, line: 145, baseType: !2114, size: 256)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1759, file: !1755, line: 145, size: 256, elements: !2115)
!2115 = !{!2116, !2117, !2120, !2121, !4279}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2114, file: !1755, line: 146, baseType: !348, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2114, file: !1755, line: 147, baseType: !2118, size: 64, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2119, line: 509, baseType: !1753)
!2119 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2114, file: !1755, line: 148, baseType: !348, size: 64, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !1755, line: 149, baseType: !2122, size: 64, offset: 192)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2114, file: !1755, line: 149, size: 64, elements: !2123)
!2123 = !{!2124, !4278}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2122, file: !1755, line: 150, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1755, line: 388, size: 7296, elements: !2127)
!2127 = !{!2128, !4276}
!2128 = !DIDerivedType(tag: DW_TAG_member, scope: !2126, file: !1755, line: 389, baseType: !2129, size: 7296)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !1755, line: 389, size: 7296, elements: !2130)
!2130 = !{!2131, !2249, !2250, !2251, !2255, !2256, !2257, !2258, !2259, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2300, !2308, !2311, !2350, !2351, !4260, !4261, !4264, !4265, !4266, !4269, !4270, !4271, !4274, !4275}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2129, file: !1755, line: 390, baseType: !2132, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1755, line: 305, size: 1472, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2149, !2150, !2155, !2156, !2159, !2243, !2244, !2245, !2246, !2247}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2133, file: !1755, line: 308, baseType: !348, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2133, file: !1755, line: 309, baseType: !348, size: 64, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2133, file: !1755, line: 313, baseType: !2132, size: 64, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2133, file: !1755, line: 313, baseType: !2132, size: 64, offset: 192)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2133, file: !1755, line: 315, baseType: !469, size: 192, align: 64, offset: 256)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2133, file: !1755, line: 323, baseType: !348, size: 64, offset: 448)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2133, file: !1755, line: 327, baseType: !2125, size: 64, offset: 512)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2133, file: !1755, line: 333, baseType: !2143, size: 64, offset: 576)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2119, line: 284, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2119, line: 284, size: 64, elements: !2145)
!2145 = !{!2146}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2144, file: !2119, line: 284, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2148, line: 19, baseType: !348)
!2148 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2133, file: !1755, line: 334, baseType: !348, size: 64, offset: 640)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2133, file: !1755, line: 343, baseType: !2151, size: 256, offset: 704)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2133, file: !1755, line: 340, size: 256, elements: !2152)
!2152 = !{!2153, !2154}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2151, file: !1755, line: 341, baseType: !469, size: 192, align: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2151, file: !1755, line: 342, baseType: !348, size: 64, offset: 192)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2133, file: !1755, line: 351, baseType: !320, size: 128, offset: 960)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2133, file: !1755, line: 353, baseType: !2157, size: 64, offset: 1088)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1755, line: 353, flags: DIFlagFwdDecl)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2133, file: !1755, line: 356, baseType: !2160, size: 64, offset: 1152)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !48, line: 557, size: 832, elements: !2163)
!2163 = !{!2164, !2168, !2169, !2173, !2177, !2217, !2221, !2225, !2229, !2230, !2231, !2235, !2239}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2162, file: !48, line: 558, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{null, !2132}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2162, file: !48, line: 559, baseType: !2165, size: 64, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2162, file: !48, line: 560, baseType: !2170, size: 64, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{!7, !2132, !348}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2162, file: !48, line: 561, baseType: !2174, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{!7, !2132}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2162, file: !48, line: 562, baseType: !2178, size: 64, offset: 256)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1755, line: 682, baseType: !13)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !48, line: 508, size: 768, elements: !2184)
!2184 = !{!2185, !2186, !2187, !2188, !2189, !2190, !2197, !2204, !2210, !2211, !2212, !2214, !2216}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2183, file: !48, line: 509, baseType: !2132, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2183, file: !48, line: 510, baseType: !13, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2183, file: !48, line: 511, baseType: !1776, size: 32, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2183, file: !48, line: 512, baseType: !348, size: 64, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2183, file: !48, line: 513, baseType: !348, size: 64, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2183, file: !48, line: 514, baseType: !2191, size: 64, offset: 256)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2119, line: 385, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2119, line: 385, size: 64, elements: !2194)
!2194 = !{!2195}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2193, file: !2119, line: 385, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2148, line: 15, baseType: !348)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2183, file: !48, line: 516, baseType: !2198, size: 64, offset: 320)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2119, line: 359, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2119, line: 359, size: 64, elements: !2201)
!2201 = !{!2202}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2200, file: !2119, line: 359, baseType: !2203, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2148, line: 16, baseType: !348)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2183, file: !48, line: 519, baseType: !2205, size: 64, offset: 384)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2148, line: 21, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2148, line: 21, size: 64, elements: !2207)
!2207 = !{!2208}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2206, file: !2148, line: 21, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2148, line: 14, baseType: !348)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2183, file: !48, line: 521, baseType: !1753, size: 64, offset: 448)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2183, file: !48, line: 522, baseType: !1753, size: 64, offset: 512)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2183, file: !48, line: 528, baseType: !2213, size: 64, offset: 576)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2183, file: !48, line: 532, baseType: !2215, size: 64, offset: 640)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2183, file: !48, line: 536, baseType: !2118, size: 64, offset: 704)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2162, file: !48, line: 563, baseType: !2218, size: 64, offset: 320)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!2181, !2182, !47}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2162, file: !48, line: 565, baseType: !2222, size: 64, offset: 384)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{null, !2182, !348, !348}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2162, file: !48, line: 567, baseType: !2226, size: 64, offset: 448)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!348, !2132}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2162, file: !48, line: 571, baseType: !2178, size: 64, offset: 512)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2162, file: !48, line: 574, baseType: !2178, size: 64, offset: 576)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2162, file: !48, line: 579, baseType: !2232, size: 64, offset: 640)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!7, !2132, !348, !626, !7, !7}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2162, file: !48, line: 585, baseType: !2236, size: 64, offset: 704)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{!328, !2132}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2162, file: !48, line: 615, baseType: !2240, size: 64, offset: 768)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!1753, !2132, !348}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2133, file: !1755, line: 359, baseType: !348, size: 64, offset: 1216)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2133, file: !1755, line: 361, baseType: !1350, size: 64, offset: 1280)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2133, file: !1755, line: 362, baseType: !626, size: 64, offset: 1344)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2133, file: !1755, line: 365, baseType: !407, size: 64, offset: 1408)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2133, file: !1755, line: 373, baseType: !2248, offset: 1472)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1755, line: 296, elements: !1621)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2129, file: !1755, line: 391, baseType: !1784, size: 64, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2129, file: !1755, line: 392, baseType: !367, size: 64, offset: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2129, file: !1755, line: 394, baseType: !2252, size: 64, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!348, !1350, !348, !348, !348, !348}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2129, file: !1755, line: 398, baseType: !348, size: 64, offset: 256)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2129, file: !1755, line: 399, baseType: !348, size: 64, offset: 320)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2129, file: !1755, line: 405, baseType: !348, size: 64, offset: 384)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2129, file: !1755, line: 406, baseType: !348, size: 64, offset: 448)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2129, file: !1755, line: 407, baseType: !2260, size: 64, offset: 512)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2119, line: 286, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2119, line: 286, size: 64, elements: !2263)
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2262, file: !2119, line: 286, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2148, line: 18, baseType: !348)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2129, file: !1755, line: 416, baseType: !419, size: 32, offset: 576)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2129, file: !1755, line: 428, baseType: !419, size: 32, offset: 608)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2129, file: !1755, line: 437, baseType: !419, size: 32, offset: 640)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2129, file: !1755, line: 447, baseType: !419, size: 32, offset: 672)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2129, file: !1755, line: 450, baseType: !407, size: 64, offset: 704)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2129, file: !1755, line: 452, baseType: !7, size: 32, offset: 768)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2129, file: !1755, line: 454, baseType: !1704, offset: 800)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2129, file: !1755, line: 457, baseType: !1789, size: 256, offset: 832)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2129, file: !1755, line: 459, baseType: !320, size: 128, offset: 1088)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2129, file: !1755, line: 466, baseType: !348, size: 64, offset: 1216)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2129, file: !1755, line: 467, baseType: !348, size: 64, offset: 1280)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2129, file: !1755, line: 469, baseType: !348, size: 64, offset: 1344)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2129, file: !1755, line: 470, baseType: !348, size: 64, offset: 1408)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2129, file: !1755, line: 471, baseType: !409, size: 64, offset: 1472)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2129, file: !1755, line: 472, baseType: !348, size: 64, offset: 1536)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2129, file: !1755, line: 473, baseType: !348, size: 64, offset: 1600)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2129, file: !1755, line: 474, baseType: !348, size: 64, offset: 1664)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2129, file: !1755, line: 475, baseType: !348, size: 64, offset: 1728)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2129, file: !1755, line: 477, baseType: !1704, offset: 1792)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2129, file: !1755, line: 478, baseType: !348, size: 64, offset: 1792)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2129, file: !1755, line: 478, baseType: !348, size: 64, offset: 1856)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2129, file: !1755, line: 478, baseType: !348, size: 64, offset: 1920)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2129, file: !1755, line: 478, baseType: !348, size: 64, offset: 1984)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2129, file: !1755, line: 479, baseType: !348, size: 64, offset: 2048)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2129, file: !1755, line: 479, baseType: !348, size: 64, offset: 2112)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2129, file: !1755, line: 479, baseType: !348, size: 64, offset: 2176)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2129, file: !1755, line: 480, baseType: !348, size: 64, offset: 2240)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2129, file: !1755, line: 480, baseType: !348, size: 64, offset: 2304)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2129, file: !1755, line: 480, baseType: !348, size: 64, offset: 2368)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2129, file: !1755, line: 480, baseType: !348, size: 64, offset: 2432)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2129, file: !1755, line: 482, baseType: !2297, size: 2816, offset: 2496)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 2816, elements: !2298)
!2298 = !{!2299}
!2299 = !DISubrange(count: 44)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2129, file: !1755, line: 488, baseType: !2301, size: 256, offset: 5312)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2302, line: 60, size: 256, elements: !2303)
!2302 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2303 = !{!2304}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2301, file: !2302, line: 61, baseType: !2305, size: 256)
!2305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 256, elements: !2306)
!2306 = !{!2307}
!2307 = !DISubrange(count: 4)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2129, file: !1755, line: 490, baseType: !2309, size: 64, offset: 5568)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1755, line: 490, flags: DIFlagFwdDecl)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2129, file: !1755, line: 493, baseType: !2312, size: 896, offset: 5632)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2313, line: 53, baseType: !2314)
!2313 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2313, line: 13, size: 896, elements: !2315)
!2315 = !{!2316, !2317, !2318, !2319, !2322, !2323, !2324, !2325, !2345, !2346, !2347}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2314, file: !2313, line: 18, baseType: !367, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2314, file: !2313, line: 28, baseType: !409, size: 64, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2314, file: !2313, line: 31, baseType: !1789, size: 256, offset: 128)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2314, file: !2313, line: 32, baseType: !2320, size: 64, offset: 384)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2313, line: 32, flags: DIFlagFwdDecl)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2314, file: !2313, line: 37, baseType: !511, size: 16, offset: 448)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2314, file: !2313, line: 40, baseType: !1699, size: 192, offset: 512)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2314, file: !2313, line: 41, baseType: !626, size: 64, offset: 704)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2314, file: !2313, line: 42, baseType: !2326, size: 64, offset: 768)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2328)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2329, line: 13, size: 896, elements: !2330)
!2329 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2328, file: !2329, line: 14, baseType: !626, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2328, file: !2329, line: 15, baseType: !348, size: 64, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2328, file: !2329, line: 17, baseType: !348, size: 64, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2328, file: !2329, line: 17, baseType: !348, size: 64, offset: 192)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2328, file: !2329, line: 19, baseType: !1033, size: 64, offset: 256)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2328, file: !2329, line: 21, baseType: !1033, size: 64, offset: 320)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2328, file: !2329, line: 22, baseType: !1033, size: 64, offset: 384)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2328, file: !2329, line: 23, baseType: !1033, size: 64, offset: 448)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2328, file: !2329, line: 24, baseType: !1033, size: 64, offset: 512)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2328, file: !2329, line: 25, baseType: !1033, size: 64, offset: 576)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2328, file: !2329, line: 26, baseType: !1033, size: 64, offset: 640)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2328, file: !2329, line: 27, baseType: !1033, size: 64, offset: 704)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2328, file: !2329, line: 28, baseType: !1033, size: 64, offset: 768)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2328, file: !2329, line: 29, baseType: !1033, size: 64, offset: 832)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2314, file: !2313, line: 44, baseType: !419, size: 32, offset: 832)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2314, file: !2313, line: 50, baseType: !616, size: 16, offset: 864)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2314, file: !2313, line: 51, baseType: !2348, size: 16, offset: 880)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !368, line: 18, baseType: !2349)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !370, line: 23, baseType: !660)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2129, file: !1755, line: 495, baseType: !348, size: 64, offset: 6528)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2129, file: !1755, line: 497, baseType: !2352, size: 64, offset: 6592)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1755, line: 381, size: 384, elements: !2354)
!2354 = !{!2355, !2356, !4259}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2353, file: !1755, line: 382, baseType: !419, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2353, file: !1755, line: 383, baseType: !2357, size: 128, offset: 64)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1755, line: 376, size: 128, elements: !2358)
!2358 = !{!2359, !4257}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2357, file: !1755, line: 377, baseType: !2360, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2362, line: 640, size: 48640, elements: !2363)
!2362 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2363 = !{!2364, !2370, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2385, !2403, !2414, !2495, !2496, !2497, !2508, !2509, !2511, !2512, !2513, !2514, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2592, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2624, !2626, !2627, !2628, !2640, !2641, !2642, !2643, !2644, !2645, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2669, !2674, !2982, !2983, !2984, !2985, !2986, !2989, !2992, !2995, !2998, !3720, !3816, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3864, !3865, !3866, !3867, !3868, !3873, !3874, !3875, !3878, !3879, !3882, !3885, !3888, !3891, !3923, !3926, !3927, !4006, !4007, !4010, !4011, !4014, !4015, !4016, !4020, !4021, !4022, !4035, !4036, !4037, !4047, !4052, !4053, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2361, file: !2362, line: 646, baseType: !2365, size: 128)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2366, line: 56, size: 128, elements: !2367)
!2366 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2367 = !{!2368, !2369}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2365, file: !2366, line: 57, baseType: !348, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2365, file: !2366, line: 58, baseType: !1022, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2361, file: !2362, line: 649, baseType: !2371, size: 64, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1033)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2361, file: !2362, line: 657, baseType: !626, size: 64, offset: 192)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2361, file: !2362, line: 658, baseType: !603, size: 32, offset: 256)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2361, file: !2362, line: 660, baseType: !13, size: 32, offset: 288)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2361, file: !2362, line: 661, baseType: !13, size: 32, offset: 320)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2361, file: !2362, line: 684, baseType: !7, size: 32, offset: 352)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2361, file: !2362, line: 686, baseType: !7, size: 32, offset: 384)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2361, file: !2362, line: 687, baseType: !7, size: 32, offset: 416)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2361, file: !2362, line: 688, baseType: !7, size: 32, offset: 448)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2361, file: !2362, line: 689, baseType: !13, size: 32, offset: 480)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2361, file: !2362, line: 691, baseType: !2382, size: 64, offset: 512)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2384)
!2384 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2362, line: 691, flags: DIFlagFwdDecl)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2361, file: !2362, line: 692, baseType: !2386, size: 832, offset: 576)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2362, line: 451, size: 832, elements: !2387)
!2387 = !{!2388, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2386, file: !2362, line: 453, baseType: !2389, size: 128)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2362, line: 325, size: 128, elements: !2390)
!2390 = !{!2391, !2392}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2389, file: !2362, line: 326, baseType: !348, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2389, file: !2362, line: 327, baseType: !1022, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2386, file: !2362, line: 454, baseType: !469, size: 192, align: 64, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2386, file: !2362, line: 455, baseType: !320, size: 128, offset: 320)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2386, file: !2362, line: 456, baseType: !13, size: 32, offset: 448)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2386, file: !2362, line: 458, baseType: !367, size: 64, offset: 512)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2386, file: !2362, line: 459, baseType: !367, size: 64, offset: 576)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2386, file: !2362, line: 460, baseType: !367, size: 64, offset: 640)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2386, file: !2362, line: 461, baseType: !367, size: 64, offset: 704)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2386, file: !2362, line: 463, baseType: !367, size: 64, offset: 768)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2386, file: !2362, line: 465, baseType: !2402, offset: 832)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2362, line: 415, elements: !1621)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2361, file: !2362, line: 693, baseType: !2404, size: 384, offset: 1408)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2362, line: 489, size: 384, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2409, !2410, !2411, !2412}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2404, file: !2362, line: 490, baseType: !320, size: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2404, file: !2362, line: 491, baseType: !348, size: 64, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2404, file: !2362, line: 492, baseType: !348, size: 64, offset: 192)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2404, file: !2362, line: 493, baseType: !13, size: 32, offset: 256)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2404, file: !2362, line: 494, baseType: !511, size: 16, offset: 288)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2404, file: !2362, line: 495, baseType: !511, size: 16, offset: 304)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2404, file: !2362, line: 497, baseType: !2413, size: 64, offset: 320)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2361, file: !2362, line: 697, baseType: !2415, size: 1792, offset: 1792)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2362, line: 507, size: 1792, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2492, !2493}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2415, file: !2362, line: 508, baseType: !469, size: 192, align: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2415, file: !2362, line: 515, baseType: !367, size: 64, offset: 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2415, file: !2362, line: 516, baseType: !367, size: 64, offset: 256)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2415, file: !2362, line: 517, baseType: !367, size: 64, offset: 320)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2415, file: !2362, line: 518, baseType: !367, size: 64, offset: 384)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2415, file: !2362, line: 519, baseType: !367, size: 64, offset: 448)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2415, file: !2362, line: 526, baseType: !413, size: 64, offset: 512)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2415, file: !2362, line: 527, baseType: !367, size: 64, offset: 576)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2415, file: !2362, line: 528, baseType: !13, size: 32, offset: 640)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2415, file: !2362, line: 554, baseType: !13, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2415, file: !2362, line: 555, baseType: !13, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2415, file: !2362, line: 556, baseType: !13, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2415, file: !2362, line: 557, baseType: !13, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2415, file: !2362, line: 563, baseType: !2431, size: 512, offset: 704)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !54, line: 118, size: 512, elements: !2432)
!2432 = !{!2433, !2439, !2440, !2445, !2488, !2489, !2490, !2491}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2431, file: !54, line: 119, baseType: !2434, size: 256)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2435, line: 9, size: 256, elements: !2436)
!2435 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2434, file: !2435, line: 10, baseType: !469, size: 192, align: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2434, file: !2435, line: 11, baseType: !488, size: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2431, file: !54, line: 120, baseType: !488, size: 64, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2431, file: !54, line: 121, baseType: !2441, size: 64, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{!53, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2431, file: !54, line: 122, baseType: !2446, size: 64, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !54, line: 159, size: 512, align: 512, elements: !2448)
!2448 = !{!2449, !2469, !2470, !2473, !2478, !2479, !2483, !2487}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2447, file: !54, line: 160, baseType: !2450, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !54, line: 214, size: 4608, align: 512, elements: !2452)
!2452 = !{!2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2451, file: !54, line: 215, baseType: !1795)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2451, file: !54, line: 216, baseType: !13, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2451, file: !54, line: 217, baseType: !13, size: 32, offset: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2451, file: !54, line: 218, baseType: !13, size: 32, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2451, file: !54, line: 219, baseType: !13, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2451, file: !54, line: 220, baseType: !13, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2451, file: !54, line: 221, baseType: !13, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2451, file: !54, line: 222, baseType: !13, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2451, file: !54, line: 233, baseType: !488, size: 64, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2451, file: !54, line: 234, baseType: !2444, size: 64, offset: 192)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2451, file: !54, line: 235, baseType: !488, size: 64, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2451, file: !54, line: 236, baseType: !2444, size: 64, offset: 320)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2451, file: !54, line: 237, baseType: !2466, size: 4096, offset: 512)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2447, size: 4096, elements: !2467)
!2467 = !{!2468}
!2468 = !DISubrange(count: 8)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2447, file: !54, line: 161, baseType: !13, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2447, file: !54, line: 162, baseType: !2471, size: 32, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !313, line: 27, baseType: !2472)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1076, line: 96, baseType: !7)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2447, file: !54, line: 163, baseType: !2474, size: 32, offset: 128)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1378, line: 276, baseType: !2475)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1378, line: 276, size: 32, elements: !2476)
!2476 = !{!2477}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2475, file: !1378, line: 276, baseType: !1382, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2447, file: !54, line: 164, baseType: !2444, size: 64, offset: 192)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2447, file: !54, line: 165, baseType: !2480, size: 128, offset: 256)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2435, line: 14, size: 128, elements: !2481)
!2481 = !{!2482}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2480, file: !2435, line: 15, baseType: !1781, size: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2447, file: !54, line: 166, baseType: !2484, size: 64, offset: 384)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!488}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2447, file: !54, line: 167, baseType: !488, size: 64, offset: 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2431, file: !54, line: 123, baseType: !829, size: 8, offset: 448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2431, file: !54, line: 124, baseType: !829, size: 8, offset: 456)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2431, file: !54, line: 125, baseType: !829, size: 8, offset: 464)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2431, file: !54, line: 126, baseType: !829, size: 8, offset: 472)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2415, file: !2362, line: 572, baseType: !2431, size: 512, offset: 1216)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2415, file: !2362, line: 580, baseType: !2494, size: 64, offset: 1728)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2361, file: !2362, line: 721, baseType: !13, size: 32, offset: 3584)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2361, file: !2362, line: 722, baseType: !7, size: 32, offset: 3616)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2361, file: !2362, line: 723, baseType: !2498, size: 64, offset: 3648)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2500)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2501, line: 17, baseType: !2502)
!2501 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2501, line: 17, size: 64, elements: !2503)
!2503 = !{!2504}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2502, file: !2501, line: 17, baseType: !2505, size: 64)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 64, elements: !2506)
!2506 = !{!2507}
!2507 = !DISubrange(count: 1)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2361, file: !2362, line: 724, baseType: !2500, size: 64, offset: 3712)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2361, file: !2362, line: 749, baseType: !2510, offset: 3776)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2362, line: 290, elements: !1621)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2361, file: !2362, line: 751, baseType: !320, size: 128, offset: 3776)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2361, file: !2362, line: 757, baseType: !2125, size: 64, offset: 3904)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2361, file: !2362, line: 758, baseType: !2125, size: 64, offset: 3968)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2361, file: !2362, line: 761, baseType: !2515, size: 320, offset: 4032)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2302, line: 34, size: 320, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2515, file: !2302, line: 35, baseType: !367, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2515, file: !2302, line: 36, baseType: !2519, size: 256, offset: 64)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2132, size: 256, elements: !2306)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2361, file: !2362, line: 766, baseType: !7, size: 32, offset: 4352)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2361, file: !2362, line: 767, baseType: !7, size: 32, offset: 4384)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2361, file: !2362, line: 768, baseType: !7, size: 32, offset: 4416)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2361, file: !2362, line: 770, baseType: !7, size: 32, offset: 4448)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2361, file: !2362, line: 772, baseType: !348, size: 64, offset: 4480)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2361, file: !2362, line: 775, baseType: !13, size: 32, offset: 4544)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2361, file: !2362, line: 778, baseType: !13, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2361, file: !2362, line: 779, baseType: !13, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2361, file: !2362, line: 780, baseType: !13, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2361, file: !2362, line: 803, baseType: !13, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2361, file: !2362, line: 806, baseType: !13, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2361, file: !2362, line: 807, baseType: !13, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2361, file: !2362, line: 809, baseType: !13, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2361, file: !2362, line: 815, baseType: !13, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2361, file: !2362, line: 831, baseType: !348, size: 64, offset: 4672)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2361, file: !2362, line: 833, baseType: !2536, size: 384, offset: 4736)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !59, line: 25, size: 384, elements: !2537)
!2537 = !{!2538, !2543}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2536, file: !59, line: 26, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{!1033, !2542}
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, scope: !2536, file: !59, line: 27, baseType: !2544, size: 320, offset: 64)
!2544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2536, file: !59, line: 27, size: 320, elements: !2545)
!2545 = !{!2546, !2556, !2582}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2544, file: !59, line: 36, baseType: !2547, size: 320)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2544, file: !59, line: 29, size: 320, elements: !2548)
!2548 = !{!2549, !2551, !2552, !2553, !2554, !2555}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2547, file: !59, line: 30, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2547, file: !59, line: 31, baseType: !1022, size: 32, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2547, file: !59, line: 32, baseType: !1022, size: 32, offset: 96)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2547, file: !59, line: 33, baseType: !1022, size: 32, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2547, file: !59, line: 34, baseType: !367, size: 64, offset: 192)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2547, file: !59, line: 35, baseType: !2550, size: 64, offset: 256)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2544, file: !59, line: 46, baseType: !2557, size: 192)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2544, file: !59, line: 38, size: 192, elements: !2558)
!2558 = !{!2559, !2560, !2561, !2581}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2557, file: !59, line: 39, baseType: !2471, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2557, file: !59, line: 40, baseType: !58, size: 32, offset: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !59, line: 41, baseType: !2562, size: 64, offset: 64)
!2562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !59, line: 41, size: 64, elements: !2563)
!2563 = !{!2564, !2572}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2562, file: !59, line: 42, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2567, line: 7, size: 128, elements: !2568)
!2567 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2568 = !{!2569, !2571}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2566, file: !2567, line: 8, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1076, line: 93, baseType: !415)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2566, file: !2567, line: 9, baseType: !415, size: 64, offset: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2562, file: !59, line: 43, baseType: !2573, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2575, line: 7, size: 64, elements: !2576)
!2575 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2576 = !{!2577, !2580}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2574, file: !2575, line: 8, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2575, line: 5, baseType: !2579)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !368, line: 20, baseType: !977)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2574, file: !2575, line: 9, baseType: !2579, size: 32, offset: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2557, file: !59, line: 45, baseType: !367, size: 64, offset: 128)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2544, file: !59, line: 54, baseType: !2583, size: 256)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2544, file: !59, line: 48, size: 256, elements: !2584)
!2584 = !{!2585, !2588, !2589, !2590, !2591}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2583, file: !59, line: 49, baseType: !2586, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !59, line: 14, flags: DIFlagFwdDecl)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2583, file: !59, line: 50, baseType: !7, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2583, file: !59, line: 51, baseType: !7, size: 32, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2583, file: !59, line: 52, baseType: !348, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2583, file: !59, line: 53, baseType: !348, size: 64, offset: 192)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2361, file: !2362, line: 835, baseType: !2593, size: 32, offset: 5120)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !313, line: 22, baseType: !2594)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1076, line: 28, baseType: !7)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2361, file: !2362, line: 836, baseType: !2593, size: 32, offset: 5152)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2361, file: !2362, line: 840, baseType: !348, size: 64, offset: 5184)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2361, file: !2362, line: 849, baseType: !2360, size: 64, offset: 5248)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2361, file: !2362, line: 852, baseType: !2360, size: 64, offset: 5312)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2361, file: !2362, line: 857, baseType: !320, size: 128, offset: 5376)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2361, file: !2362, line: 858, baseType: !320, size: 128, offset: 5504)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2361, file: !2362, line: 859, baseType: !2360, size: 64, offset: 5632)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2361, file: !2362, line: 867, baseType: !320, size: 128, offset: 5696)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2361, file: !2362, line: 868, baseType: !320, size: 128, offset: 5824)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2361, file: !2362, line: 871, baseType: !2605, size: 64, offset: 5952)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !87, line: 59, size: 768, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611, !2613, !2614, !2615, !2616}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2606, file: !87, line: 61, baseType: !603, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2606, file: !87, line: 62, baseType: !13, size: 32, offset: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2606, file: !87, line: 63, baseType: !1704, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2606, file: !87, line: 65, baseType: !2612, size: 256, offset: 64)
!2612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 256, elements: !2306)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2606, file: !87, line: 66, baseType: !1615, size: 64, offset: 320)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2606, file: !87, line: 68, baseType: !1923, size: 128, offset: 384)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2606, file: !87, line: 69, baseType: !335, size: 128, align: 64, offset: 512)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2606, file: !87, line: 70, baseType: !2617, size: 128, offset: 640)
!2617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2618, size: 128, elements: !2506)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !87, line: 54, size: 128, elements: !2619)
!2619 = !{!2620, !2621}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2618, file: !87, line: 55, baseType: !7, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2618, file: !87, line: 56, baseType: !2622, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !87, line: 56, flags: DIFlagFwdDecl)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2361, file: !2362, line: 872, baseType: !2625, size: 512, offset: 6016)
!2625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 512, elements: !2306)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2361, file: !2362, line: 873, baseType: !320, size: 128, offset: 6528)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2361, file: !2362, line: 874, baseType: !320, size: 128, offset: 6656)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2361, file: !2362, line: 876, baseType: !2629, size: 64, offset: 6784)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2631, line: 26, size: 192, elements: !2632)
!2631 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2632 = !{!2633, !2634}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2630, file: !2631, line: 27, baseType: !13, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2630, file: !2631, line: 28, baseType: !2635, size: 128, offset: 64)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2636, line: 43, size: 128, elements: !2637)
!2636 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2635, file: !2636, line: 44, baseType: !1795)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2635, file: !2636, line: 45, baseType: !320, size: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2361, file: !2362, line: 879, baseType: !1036, size: 64, offset: 6848)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2361, file: !2362, line: 882, baseType: !1036, size: 64, offset: 6912)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2361, file: !2362, line: 884, baseType: !367, size: 64, offset: 6976)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2361, file: !2362, line: 885, baseType: !367, size: 64, offset: 7040)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2361, file: !2362, line: 890, baseType: !367, size: 64, offset: 7104)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2361, file: !2362, line: 891, baseType: !2646, size: 128, offset: 7168)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2362, line: 242, size: 128, elements: !2647)
!2647 = !{!2648, !2649, !2650}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2646, file: !2362, line: 244, baseType: !367, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2646, file: !2362, line: 245, baseType: !367, size: 64, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2646, file: !2362, line: 246, baseType: !1795, offset: 128)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2361, file: !2362, line: 900, baseType: !348, size: 64, offset: 7296)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2361, file: !2362, line: 901, baseType: !348, size: 64, offset: 7360)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2361, file: !2362, line: 904, baseType: !367, size: 64, offset: 7424)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2361, file: !2362, line: 907, baseType: !367, size: 64, offset: 7488)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2361, file: !2362, line: 910, baseType: !348, size: 64, offset: 7552)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2361, file: !2362, line: 911, baseType: !348, size: 64, offset: 7616)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2361, file: !2362, line: 914, baseType: !2658, size: 640, offset: 7680)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2659, line: 123, size: 640, elements: !2660)
!2659 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2660 = !{!2661, !2667, !2668}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2658, file: !2659, line: 124, baseType: !2662, size: 576)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2663, size: 576, elements: !1626)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2659, line: 108, size: 192, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2663, file: !2659, line: 109, baseType: !367, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2663, file: !2659, line: 110, baseType: !2480, size: 128, offset: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2658, file: !2659, line: 125, baseType: !13, size: 32, offset: 576)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2658, file: !2659, line: 126, baseType: !13, size: 32, offset: 608)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2361, file: !2362, line: 917, baseType: !2670, size: 192, offset: 8320)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2659, line: 134, size: 192, elements: !2671)
!2671 = !{!2672, !2673}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2670, file: !2659, line: 135, baseType: !335, size: 128, align: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2670, file: !2659, line: 136, baseType: !13, size: 32, offset: 128)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2361, file: !2362, line: 923, baseType: !2675, size: 64, offset: 8512)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2678, line: 111, size: 1280, elements: !2679)
!2678 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2699, !2700, !2701, !2702, !2703, !2704, !2809, !2810, !2811, !2812, !2813, !2969, !2977}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2677, file: !2678, line: 112, baseType: !419, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2677, file: !2678, line: 120, baseType: !1416, size: 32, offset: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2677, file: !2678, line: 121, baseType: !1424, size: 32, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2677, file: !2678, line: 122, baseType: !1416, size: 32, offset: 96)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2677, file: !2678, line: 123, baseType: !1424, size: 32, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2677, file: !2678, line: 124, baseType: !1416, size: 32, offset: 160)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2677, file: !2678, line: 125, baseType: !1424, size: 32, offset: 192)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2677, file: !2678, line: 126, baseType: !1416, size: 32, offset: 224)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2677, file: !2678, line: 127, baseType: !1424, size: 32, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2677, file: !2678, line: 128, baseType: !13, size: 32, offset: 288)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2677, file: !2678, line: 129, baseType: !2691, size: 64, offset: 320)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2692, line: 26, baseType: !2693)
!2692 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2692, line: 24, size: 64, elements: !2694)
!2694 = !{!2695}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2693, file: !2692, line: 25, baseType: !2696, size: 64)
!2696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 64, elements: !2697)
!2697 = !{!2698}
!2698 = !DISubrange(count: 2)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2677, file: !2678, line: 130, baseType: !2691, size: 64, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2677, file: !2678, line: 131, baseType: !2691, size: 64, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2677, file: !2678, line: 132, baseType: !2691, size: 64, offset: 512)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2677, file: !2678, line: 133, baseType: !2691, size: 64, offset: 576)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2677, file: !2678, line: 135, baseType: !517, size: 8, offset: 640)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2677, file: !2678, line: 137, baseType: !2705, size: 64, offset: 704)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2707, line: 189, size: 1664, elements: !2708)
!2707 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2708 = !{!2709, !2710, !2713, !2718, !2719, !2722, !2723, !2728, !2729, !2730, !2731, !2733, !2734, !2735, !2736, !2737, !2773, !2794}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2706, file: !2707, line: 190, baseType: !603, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2706, file: !2707, line: 191, baseType: !2711, size: 32, offset: 32)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2707, line: 28, baseType: !2712)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !313, line: 98, baseType: !2579)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 192, baseType: !2714, size: 192, offset: 64)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 192, size: 192, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2714, file: !2707, line: 193, baseType: !320, size: 128)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2714, file: !2707, line: 194, baseType: !469, size: 192, align: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2706, file: !2707, line: 199, baseType: !1789, size: 256, offset: 256)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2706, file: !2707, line: 200, baseType: !2720, size: 64, offset: 512)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2707, line: 200, flags: DIFlagFwdDecl)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2706, file: !2707, line: 201, baseType: !626, size: 64, offset: 576)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 202, baseType: !2724, size: 64, offset: 640)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 202, size: 64, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2724, file: !2707, line: 203, baseType: !1517, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2724, file: !2707, line: 204, baseType: !1517, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2706, file: !2707, line: 206, baseType: !1517, size: 64, offset: 704)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2706, file: !2707, line: 207, baseType: !1416, size: 32, offset: 768)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2706, file: !2707, line: 208, baseType: !1424, size: 32, offset: 800)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2706, file: !2707, line: 209, baseType: !2732, size: 32, offset: 832)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2707, line: 31, baseType: !1536)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2706, file: !2707, line: 210, baseType: !511, size: 16, offset: 864)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2706, file: !2707, line: 211, baseType: !511, size: 16, offset: 880)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2706, file: !2707, line: 215, baseType: !660, size: 16, offset: 896)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2706, file: !2707, line: 222, baseType: !348, size: 64, offset: 960)
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 239, baseType: !2738, size: 320, offset: 1024)
!2738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 239, size: 320, elements: !2739)
!2739 = !{!2740, !2765}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2738, file: !2707, line: 240, baseType: !2741, size: 320)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2707, line: 108, size: 320, elements: !2742)
!2742 = !{!2743, !2744, !2754, !2757, !2764}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2741, file: !2707, line: 110, baseType: !348, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2707, line: 111, baseType: !2745, size: 64, offset: 64)
!2745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2707, line: 111, size: 64, elements: !2746)
!2746 = !{!2747, !2753}
!2747 = !DIDerivedType(tag: DW_TAG_member, scope: !2745, file: !2707, line: 112, baseType: !2748, size: 64)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2745, file: !2707, line: 112, size: 64, elements: !2749)
!2749 = !{!2750, !2751}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2748, file: !2707, line: 114, baseType: !616, size: 16)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2748, file: !2707, line: 115, baseType: !2752, size: 48, offset: 16)
!2752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 48, elements: !1034)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2745, file: !2707, line: 121, baseType: !348, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2741, file: !2707, line: 123, baseType: !2755, size: 64, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2707, line: 96, flags: DIFlagFwdDecl)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2741, file: !2707, line: 124, baseType: !2758, size: 64, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2707, line: 102, size: 192, elements: !2760)
!2760 = !{!2761, !2762, !2763}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2759, file: !2707, line: 103, baseType: !335, size: 128, align: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2759, file: !2707, line: 104, baseType: !603, size: 32, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2759, file: !2707, line: 105, baseType: !806, size: 8, offset: 160)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2741, file: !2707, line: 125, baseType: !328, size: 64, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, scope: !2738, file: !2707, line: 241, baseType: !2766, size: 320)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2738, file: !2707, line: 241, size: 320, elements: !2767)
!2767 = !{!2768, !2769, !2770, !2771, !2772}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2766, file: !2707, line: 242, baseType: !348, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2766, file: !2707, line: 243, baseType: !348, size: 64, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2766, file: !2707, line: 244, baseType: !2755, size: 64, offset: 128)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2766, file: !2707, line: 245, baseType: !2758, size: 64, offset: 192)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2766, file: !2707, line: 246, baseType: !1073, size: 64, offset: 256)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 254, baseType: !2774, size: 256, offset: 1344)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 254, size: 256, elements: !2775)
!2775 = !{!2776, !2782}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2774, file: !2707, line: 255, baseType: !2777, size: 256)
!2777 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2707, line: 128, size: 256, elements: !2778)
!2778 = !{!2779, !2780}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2777, file: !2707, line: 129, baseType: !626, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2777, file: !2707, line: 130, baseType: !2781, size: 256)
!2781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 256, elements: !2306)
!2782 = !DIDerivedType(tag: DW_TAG_member, scope: !2774, file: !2707, line: 256, baseType: !2783, size: 256)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2774, file: !2707, line: 256, size: 256, elements: !2784)
!2784 = !{!2785, !2786}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2783, file: !2707, line: 258, baseType: !320, size: 128)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2783, file: !2707, line: 259, baseType: !2787, size: 128, offset: 128)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2788, line: 22, size: 128, elements: !2789)
!2788 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2789 = !{!2790, !2793}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2787, file: !2788, line: 23, baseType: !2791, size: 64)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64)
!2792 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2788, line: 23, flags: DIFlagFwdDecl)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2787, file: !2788, line: 24, baseType: !348, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2706, file: !2707, line: 274, baseType: !2795, size: 64, offset: 1600)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2707, line: 170, size: 192, elements: !2797)
!2797 = !{!2798, !2807, !2808}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2796, file: !2707, line: 171, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2707, line: 165, baseType: !2800)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!7, !2705, !2803, !2805, !2705}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2756)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2777)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2796, file: !2707, line: 172, baseType: !2705, size: 64, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2796, file: !2707, line: 173, baseType: !2755, size: 64, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2677, file: !2678, line: 138, baseType: !2705, size: 64, offset: 768)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2677, file: !2678, line: 139, baseType: !2705, size: 64, offset: 832)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2677, file: !2678, line: 140, baseType: !2705, size: 64, offset: 896)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2677, file: !2678, line: 145, baseType: !1987, size: 64, offset: 960)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2677, file: !2678, line: 146, baseType: !2814, size: 64, offset: 1024)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2816, line: 56, size: 4160, elements: !2817)
!2816 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2857, !2858, !2859, !2860, !2861, !2873, !2954, !2955, !2967}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2815, file: !2816, line: 57, baseType: !2819, size: 576)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2816, line: 23, size: 576, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2819, file: !2816, line: 24, baseType: !1022, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, scope: !2819, file: !2816, line: 25, baseType: !2823, size: 512, offset: 64)
!2823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2819, file: !2816, line: 25, size: 512, elements: !2824)
!2824 = !{!2825, !2834}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2823, file: !2816, line: 26, baseType: !2826, size: 480)
!2826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2827, size: 480, elements: !2832)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2816, line: 17, size: 96, elements: !2828)
!2828 = !{!2829, !2830, !2831}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2827, file: !2816, line: 18, baseType: !1022, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2827, file: !2816, line: 19, baseType: !1022, size: 32, offset: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2827, file: !2816, line: 20, baseType: !1022, size: 32, offset: 64)
!2832 = !{!2833}
!2833 = !DISubrange(count: 5)
!2834 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2816, line: 27, baseType: !2835, size: 128)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2823, file: !2816, line: 27, size: 128, elements: !2836)
!2836 = !{!2837, !2839}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2835, file: !2816, line: 28, baseType: !2838, size: 64)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2835, file: !2816, line: 29, baseType: !2838, size: 64, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2815, file: !2816, line: 58, baseType: !2819, size: 576, offset: 576)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2815, file: !2816, line: 59, baseType: !2819, size: 576, offset: 1152)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2815, file: !2816, line: 60, baseType: !419, size: 32, offset: 1728)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2815, file: !2816, line: 61, baseType: !2814, size: 64, offset: 1792)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2815, file: !2816, line: 62, baseType: !7, size: 32, offset: 1856)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2815, file: !2816, line: 63, baseType: !1416, size: 32, offset: 1888)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2815, file: !2816, line: 64, baseType: !1424, size: 32, offset: 1920)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2815, file: !2816, line: 65, baseType: !2848, size: 192, offset: 1984)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2849, line: 7, size: 192, elements: !2850)
!2849 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2850 = !{!2851, !2852, !2856}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2848, file: !2849, line: 8, baseType: !407, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2848, file: !2849, line: 9, baseType: !2853, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2855)
!2855 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2849, line: 5, flags: DIFlagFwdDecl)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2848, file: !2849, line: 10, baseType: !13, size: 32, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2815, file: !2816, line: 66, baseType: !348, size: 64, offset: 2176)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2815, file: !2816, line: 74, baseType: !320, size: 128, offset: 2240)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2815, file: !2816, line: 75, baseType: !2705, size: 64, offset: 2368)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2815, file: !2816, line: 76, baseType: !1789, size: 256, offset: 2432)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2815, file: !2816, line: 83, baseType: !2862, size: 256, offset: 2688)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2863, line: 102, size: 256, elements: !2864)
!2863 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2864 = !{!2865, !2866, !2867}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2862, file: !2863, line: 103, baseType: !407, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2862, file: !2863, line: 104, baseType: !320, size: 128, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2862, file: !2863, line: 105, baseType: !2868, size: 64, offset: 192)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2863, line: 21, baseType: !2869)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{null, !2872}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2815, file: !2816, line: 85, baseType: !2874, size: 768, offset: 2944)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2875, line: 156, size: 768, elements: !2876)
!2875 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2876 = !{!2877, !2882}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2874, file: !2875, line: 157, baseType: !2878, size: 64)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!7, !2881}
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2874, file: !2875, line: 158, baseType: !2883, size: 704, offset: 64)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2875, line: 150, size: 704, elements: !2884)
!2884 = !{!2885, !2953}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2883, file: !2875, line: 152, baseType: !2886, size: 640)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2875, line: 131, size: 640, elements: !2887)
!2887 = !{!2888, !2921, !2922, !2923, !2943, !2944, !2946, !2952}
!2888 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2875, line: 132, baseType: !2889, size: 192)
!2889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2875, line: 132, size: 192, elements: !2890)
!2890 = !{!2891, !2920}
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2889, file: !2875, line: 133, baseType: !2892, size: 192)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2889, file: !2875, line: 133, size: 192, elements: !2893)
!2893 = !{!2894, !2917, !2918, !2919}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2892, file: !2875, line: 134, baseType: !2895, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2875, line: 112, size: 512, elements: !2897)
!2897 = !{!2898, !2899, !2900, !2901, !2902, !2903, !2909, !2915, !2916}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2896, file: !2875, line: 113, baseType: !328, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2896, file: !2875, line: 114, baseType: !626, size: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2896, file: !2875, line: 115, baseType: !7, size: 32, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2896, file: !2875, line: 116, baseType: !1413, size: 16, offset: 160)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2896, file: !2875, line: 117, baseType: !2895, size: 64, offset: 192)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2896, file: !2875, line: 118, baseType: !2904, size: 64, offset: 256)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2875, line: 47, baseType: !2906)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!7, !2895, !7, !626, !2908, !1728}
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2896, file: !2875, line: 119, baseType: !2910, size: 64, offset: 320)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2875, line: 94, size: 192, elements: !2912)
!2912 = !{!2913, !2914}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2911, file: !2875, line: 95, baseType: !419, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2911, file: !2875, line: 96, baseType: !1923, size: 128, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2896, file: !2875, line: 120, baseType: !626, size: 64, offset: 384)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2896, file: !2875, line: 121, baseType: !626, size: 64, offset: 448)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2892, file: !2875, line: 135, baseType: !7, size: 32, offset: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2892, file: !2875, line: 136, baseType: !7, size: 32, offset: 96)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2892, file: !2875, line: 137, baseType: !7, size: 32, offset: 128)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2889, file: !2875, line: 139, baseType: !335, size: 128, align: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2886, file: !2875, line: 141, baseType: !2629, size: 64, offset: 192)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2886, file: !2875, line: 142, baseType: !2895, size: 64, offset: 256)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2886, file: !2875, line: 143, baseType: !2924, size: 64, offset: 320)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2875, line: 161, size: 960, elements: !2926)
!2926 = !{!2927, !2928, !2932, !2939}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2925, file: !2875, line: 162, baseType: !2874, size: 768)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2925, file: !2875, line: 163, baseType: !2929, size: 64, offset: 768)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!2881, !2924}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2925, file: !2875, line: 164, baseType: !2933, size: 64, offset: 832)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{null, !2936, !2895, !2937, !2938}
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2925, file: !2875, line: 167, baseType: !2940, size: 64, offset: 896)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!7, !2936, !2895}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2886, file: !2875, line: 144, baseType: !2881, size: 64, offset: 384)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2886, file: !2875, line: 145, baseType: !2945, size: 64, offset: 448)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2886, file: !2875, line: 146, baseType: !2947, size: 64, offset: 512)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2875, line: 124, size: 256, elements: !2949)
!2949 = !{!2950, !2951}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2948, file: !2875, line: 125, baseType: !469, size: 192, align: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2948, file: !2875, line: 126, baseType: !2936, size: 64, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2886, file: !2875, line: 147, baseType: !1615, size: 64, offset: 576)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2883, file: !2875, line: 153, baseType: !1784, size: 64, offset: 640)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2815, file: !2816, line: 86, baseType: !2936, size: 64, offset: 3712)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2815, file: !2816, line: 88, baseType: !2956, size: 64, offset: 3776)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2816, line: 92, size: 576, elements: !2958)
!2958 = !{!2959, !2960, !2961, !2962, !2963}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2957, file: !2816, line: 93, baseType: !312, size: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2957, file: !2816, line: 94, baseType: !2814, size: 64, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2957, file: !2816, line: 95, baseType: !1416, size: 32, offset: 192)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2957, file: !2816, line: 96, baseType: !7, size: 32, offset: 224)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2957, file: !2816, line: 97, baseType: !2964, size: 320, offset: 256)
!2964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 320, elements: !2965)
!2965 = !{!2966}
!2966 = !DISubrange(count: 10)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2815, file: !2816, line: 89, baseType: !2968, size: 320, offset: 3840)
!2968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !2965)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2677, file: !2678, line: 147, baseType: !2970, size: 64, offset: 1088)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2678, line: 25, size: 64, elements: !2972)
!2972 = !{!2973, !2974, !2975}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2971, file: !2678, line: 26, baseType: !419, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2971, file: !2678, line: 27, baseType: !7, size: 32, offset: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2971, file: !2678, line: 28, baseType: !2976, offset: 64)
!2976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1424, elements: !518)
!2977 = !DIDerivedType(tag: DW_TAG_member, scope: !2677, file: !2678, line: 149, baseType: !2978, size: 128, offset: 1152)
!2978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2677, file: !2678, line: 149, size: 128, elements: !2979)
!2979 = !{!2980, !2981}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2978, file: !2678, line: 150, baseType: !7, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2978, file: !2678, line: 151, baseType: !335, size: 128, align: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2361, file: !2362, line: 926, baseType: !2675, size: 64, offset: 8576)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2361, file: !2362, line: 929, baseType: !2675, size: 64, offset: 8640)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2361, file: !2362, line: 933, baseType: !2705, size: 64, offset: 8704)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2361, file: !2362, line: 943, baseType: !303, size: 128, offset: 8768)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2361, file: !2362, line: 945, baseType: !2987, size: 64, offset: 8896)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2362, line: 49, flags: DIFlagFwdDecl)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2361, file: !2362, line: 956, baseType: !2990, size: 64, offset: 8960)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2362, line: 45, flags: DIFlagFwdDecl)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2361, file: !2362, line: 959, baseType: !2993, size: 64, offset: 9024)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2362, line: 959, flags: DIFlagFwdDecl)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2361, file: !2362, line: 962, baseType: !2996, size: 64, offset: 9088)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2362, line: 66, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2361, file: !2362, line: 966, baseType: !2999, size: 64, offset: 9152)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !3001, line: 31, size: 576, elements: !3002)
!3001 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!3002 = !{!3003, !3004, !3007, !3010, !3013, !3014, !3703, !3706, !3707}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3000, file: !3001, line: 32, baseType: !419, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !3000, file: !3001, line: 33, baseType: !3005, size: 64, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !3001, line: 9, flags: DIFlagFwdDecl)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !3000, file: !3001, line: 34, baseType: !3008, size: 64, offset: 128)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !3001, line: 10, flags: DIFlagFwdDecl)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !3000, file: !3001, line: 35, baseType: !3011, size: 64, offset: 192)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !3001, line: 8, flags: DIFlagFwdDecl)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !3000, file: !3001, line: 36, baseType: !2622, size: 64, offset: 256)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !3000, file: !3001, line: 37, baseType: !3015, size: 64, offset: 320)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3017, line: 56, size: 16896, elements: !3018)
!3017 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3018 = !{!3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3040, !3041, !3042, !3046, !3047, !3048, !3049, !3050, !3053, !3055, !3056, !3071, !3072, !3073, !3074, !3084, !3154, !3160, !3166, !3179, !3488, !3642, !3649, !3652, !3675, !3676, !3702}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !3016, file: !3017, line: 60, baseType: !603, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3016, file: !3017, line: 63, baseType: !603, size: 32, offset: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !3016, file: !3017, line: 66, baseType: !1704, offset: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !3016, file: !3017, line: 68, baseType: !13, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !3016, file: !3017, line: 70, baseType: !13, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !3016, file: !3017, line: 71, baseType: !7, size: 32, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !3016, file: !3017, line: 73, baseType: !1704, offset: 160)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3016, file: !3017, line: 74, baseType: !419, size: 32, offset: 160)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3016, file: !3017, line: 76, baseType: !320, size: 128, offset: 192)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !3016, file: !3017, line: 77, baseType: !320, size: 128, offset: 320)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !3016, file: !3017, line: 83, baseType: !1357, size: 64, offset: 448)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !3016, file: !3017, line: 86, baseType: !2758, size: 64, offset: 512)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3016, file: !3017, line: 88, baseType: !2814, size: 64, offset: 576)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3016, file: !3017, line: 89, baseType: !2956, size: 64, offset: 640)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !3016, file: !3017, line: 90, baseType: !3034, size: 192, offset: 704)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3035, line: 19, size: 192, elements: !3036)
!3035 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3036 = !{!3037, !3038, !3039}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3034, file: !3035, line: 20, baseType: !1771, size: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3034, file: !3035, line: 21, baseType: !13, size: 32, offset: 128)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3034, file: !3035, line: 22, baseType: !13, size: 32, offset: 160)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3016, file: !3017, line: 92, baseType: !2848, size: 192, offset: 896)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !3016, file: !3017, line: 94, baseType: !320, size: 128, offset: 1088)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !3016, file: !3017, line: 95, baseType: !3043, size: 64, offset: 1216)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3045, line: 123, flags: DIFlagFwdDecl)
!3045 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !3016, file: !3017, line: 96, baseType: !3043, size: 64, offset: 1280)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3016, file: !3017, line: 99, baseType: !2874, size: 768, offset: 1344)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !3016, file: !3017, line: 102, baseType: !481, size: 64, offset: 2112)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !3016, file: !3017, line: 103, baseType: !481, size: 64, offset: 2176)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !3016, file: !3017, line: 105, baseType: !3051, size: 64, offset: 2240)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !3017, line: 48, flags: DIFlagFwdDecl)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !3016, file: !3017, line: 107, baseType: !3054, size: 64, offset: 2304)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !3016, file: !3017, line: 108, baseType: !3054, size: 64, offset: 2368)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !3016, file: !3017, line: 109, baseType: !3057, size: 64, offset: 2432)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3058, line: 70, size: 64, elements: !3059)
!3058 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3059 = !{!3060}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3057, file: !3058, line: 71, baseType: !3061, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3058, line: 54, size: 192, elements: !3063)
!3063 = !{!3064, !3069, !3070}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3062, file: !3058, line: 55, baseType: !3065, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3058, line: 51, baseType: !3066)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!7, !3061, !348, !626}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3062, file: !3058, line: 56, baseType: !3061, size: 64, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3062, file: !3058, line: 57, baseType: !7, size: 32, offset: 128)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !3016, file: !3017, line: 114, baseType: !1022, size: 32, offset: 2496)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !3016, file: !3017, line: 116, baseType: !326, size: 64, offset: 2560)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !3016, file: !3017, line: 119, baseType: !320, size: 128, offset: 2624)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3016, file: !3017, line: 121, baseType: !3075, size: 256, offset: 2752)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3076, line: 8, size: 256, elements: !3077)
!3076 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3077 = !{!3078, !3079, !3080, !3081}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3075, file: !3076, line: 10, baseType: !2936, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3075, file: !3076, line: 12, baseType: !7, size: 32, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3075, file: !3076, line: 15, baseType: !1036, size: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3075, file: !3076, line: 16, baseType: !3082, size: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3076, line: 6, flags: DIFlagFwdDecl)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !3016, file: !3017, line: 122, baseType: !3085, size: 832, offset: 3008)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3086, line: 7, size: 832, elements: !3087)
!3086 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088, !3095, !3106, !3114, !3122, !3123, !3131, !3139, !3140, !3141, !3142, !3143, !3149}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3085, file: !3086, line: 8, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3091, line: 92, size: 1024, elements: !3092)
!3091 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3092 = !{!3093}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3090, file: !3091, line: 93, baseType: !3094, size: 1024)
!3094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 1024, elements: !305)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3085, file: !3086, line: 9, baseType: !3096, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3091, line: 51, size: 2368, elements: !3098)
!3098 = !{!3099, !3103}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3097, file: !3091, line: 53, baseType: !3100, size: 2368)
!3100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 2368, elements: !3101)
!3101 = !{!3102}
!3102 = !DISubrange(count: 37)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3097, file: !3091, line: 54, baseType: !3104, offset: 2368)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3105, line: 68, elements: !1621)
!3105 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3085, file: !3086, line: 10, baseType: !3107, size: 64, offset: 128)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3091, line: 104, size: 7936, elements: !3109)
!3109 = !{!3110}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3108, file: !3091, line: 105, baseType: !3111, size: 7936)
!3111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 7936, elements: !3112)
!3112 = !{!3113}
!3113 = !DISubrange(count: 124)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3085, file: !3086, line: 11, baseType: !3115, size: 64, offset: 192)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3091, line: 98, size: 576, elements: !3117)
!3117 = !{!3118}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3116, file: !3091, line: 99, baseType: !3119, size: 576)
!3119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 576, elements: !3120)
!3120 = !{!3121}
!3121 = !DISubrange(count: 9)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3085, file: !3086, line: 12, baseType: !3115, size: 64, offset: 256)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3085, file: !3086, line: 13, baseType: !3124, size: 64, offset: 320)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3091, line: 59, size: 1792, elements: !3126)
!3126 = !{!3127}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3125, file: !3091, line: 60, baseType: !3128, size: 1792)
!3128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 1792, elements: !3129)
!3129 = !{!3130}
!3130 = !DISubrange(count: 28)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3085, file: !3086, line: 14, baseType: !3132, size: 64, offset: 384)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3091, line: 64, size: 32768, elements: !3134)
!3134 = !{!3135}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3133, file: !3091, line: 65, baseType: !3136, size: 32768)
!3136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 32768, elements: !3137)
!3137 = !{!3138}
!3138 = !DISubrange(count: 512)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3085, file: !3086, line: 17, baseType: !3043, size: 64, offset: 448)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3085, file: !3086, line: 18, baseType: !3115, size: 64, offset: 512)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3085, file: !3086, line: 19, baseType: !3115, size: 64, offset: 576)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3085, file: !3086, line: 20, baseType: !3096, size: 64, offset: 640)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3085, file: !3086, line: 21, baseType: !3144, size: 64, offset: 704)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3091, line: 71, size: 384, elements: !3146)
!3146 = !{!3147}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3145, file: !3091, line: 72, baseType: !3148, size: 384)
!3148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 384, elements: !1034)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3085, file: !3086, line: 22, baseType: !3150, size: 64, offset: 768)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3091, line: 81, size: 32768, elements: !3152)
!3152 = !{!3153}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3151, file: !3091, line: 82, baseType: !3136, size: 32768)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3016, file: !3017, line: 123, baseType: !3155, size: 256, offset: 3840)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3156, line: 11, size: 256, elements: !3157)
!3156 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3157 = !{!3158, !3159}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3155, file: !3156, line: 12, baseType: !1699, size: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3155, file: !3156, line: 13, baseType: !1615, size: 64, offset: 192)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !3016, file: !3017, line: 124, baseType: !3161, size: 128, offset: 4096)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3162, line: 9, size: 128, elements: !3163)
!3162 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3163 = !{!3164, !3165}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3161, file: !3162, line: 10, baseType: !7, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3161, file: !3162, line: 11, baseType: !2936, size: 64, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !3016, file: !3017, line: 125, baseType: !3167, size: 512, offset: 4224)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3168, line: 11, size: 512, elements: !3169)
!3168 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3169 = !{!3170, !3171, !3172, !3173, !3174}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3167, file: !3168, line: 12, baseType: !1784, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3167, file: !3168, line: 13, baseType: !3054, size: 64, offset: 64)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3167, file: !3168, line: 15, baseType: !13, size: 32, offset: 128)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3167, file: !3168, line: 16, baseType: !1022, size: 32, offset: 160)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3167, file: !3168, line: 17, baseType: !3175, size: 320, offset: 192)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3058, line: 65, size: 320, elements: !3176)
!3176 = !{!3177, !3178}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3175, file: !3058, line: 66, baseType: !1789, size: 256)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3175, file: !3058, line: 67, baseType: !3061, size: 64, offset: 256)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !3016, file: !3017, line: 126, baseType: !3180, size: 5440, offset: 4736)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3181, line: 43, size: 5440, elements: !3182)
!3181 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3182 = !{!3183, !3184, !3185, !3186, !3187, !3188, !3191, !3192, !3195, !3196, !3197, !3198, !3199, !3200, !3202, !3203, !3206, !3207, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3432, !3433, !3434, !3435, !3436, !3444, !3445, !3446, !3450, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3470, !3471, !3473, !3474, !3477, !3478, !3479, !3480, !3481}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3180, file: !3181, line: 45, baseType: !2936, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3180, file: !3181, line: 46, baseType: !2936, size: 64, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3180, file: !3181, line: 47, baseType: !2936, size: 64, offset: 128)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3180, file: !3181, line: 48, baseType: !2936, size: 64, offset: 192)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3180, file: !3181, line: 49, baseType: !2936, size: 64, offset: 256)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3180, file: !3181, line: 51, baseType: !3189, size: 64, offset: 320)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3181, line: 16, flags: DIFlagFwdDecl)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3180, file: !3181, line: 52, baseType: !3189, size: 64, offset: 384)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3180, file: !3181, line: 53, baseType: !3193, size: 64, offset: 448)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3181, line: 53, flags: DIFlagFwdDecl)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3180, file: !3181, line: 54, baseType: !1699, size: 192, offset: 512)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3180, file: !3181, line: 62, baseType: !806, size: 8, offset: 704)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3180, file: !3181, line: 66, baseType: !3054, size: 64, offset: 768)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3180, file: !3181, line: 67, baseType: !806, size: 8, offset: 832)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3180, file: !3181, line: 68, baseType: !481, size: 64, offset: 896)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3180, file: !3181, line: 70, baseType: !3201, size: 64, offset: 960)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3180, file: !3181, line: 71, baseType: !481, size: 64, offset: 1024)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3180, file: !3181, line: 73, baseType: !3204, size: 64, offset: 1088)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3205 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3181, line: 73, flags: DIFlagFwdDecl)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3180, file: !3181, line: 74, baseType: !3201, size: 64, offset: 1152)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3180, file: !3181, line: 75, baseType: !3208, size: 64, offset: 1216)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3210, line: 9, size: 1728, elements: !3211)
!3210 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3343, !3344, !3345, !3346, !3347}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3209, file: !3210, line: 11, baseType: !1033, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3209, file: !3210, line: 12, baseType: !1033, size: 64, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3209, file: !3210, line: 13, baseType: !7, size: 32, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3209, file: !3210, line: 14, baseType: !7, size: 32, offset: 160)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3209, file: !3210, line: 15, baseType: !3217, size: 64, offset: 192)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3210, line: 98, size: 960, elements: !3219)
!3219 = !{!3220, !3221, !3293, !3297, !3298, !3299, !3300, !3341, !3342}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3218, file: !3210, line: 99, baseType: !13, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3218, file: !3210, line: 101, baseType: !3222, size: 64, offset: 64)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{null, !3225, !3291}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3210, line: 77, size: 1408, elements: !3227)
!3227 = !{!3228, !3234, !3267, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3226, file: !3210, line: 78, baseType: !3229, size: 64)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3230, line: 17, size: 64, elements: !3231)
!3230 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3231 = !{!3232}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3229, file: !3230, line: 18, baseType: !3233, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3226, file: !3210, line: 82, baseType: !3235, size: 352, offset: 64)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !3210, line: 79, size: 352, elements: !3236)
!3236 = !{!3237, !3247}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3235, file: !3210, line: 80, baseType: !3238, size: 160)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3210, line: 41, size: 160, elements: !3239)
!3239 = !{!3240, !3242, !3243, !3244, !3245, !3246}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3238, file: !3210, line: 42, baseType: !3241, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !560, line: 32, baseType: !528)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3238, file: !3210, line: 43, baseType: !3241, size: 32, offset: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3238, file: !3210, line: 44, baseType: !1022, size: 32, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3238, file: !3210, line: 45, baseType: !1022, size: 32, offset: 96)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3238, file: !3210, line: 46, baseType: !570, size: 16, offset: 128)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3238, file: !3210, line: 47, baseType: !616, size: 16, offset: 144)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3235, file: !3210, line: 81, baseType: !3248, size: 352)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3210, line: 50, size: 352, elements: !3249)
!3249 = !{!3250, !3263, !3264, !3265, !3266}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3248, file: !3210, line: 51, baseType: !3251, size: 128)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3252, line: 33, size: 128, elements: !3253)
!3252 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3253 = !{!3254}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3251, file: !3252, line: 40, baseType: !3255, size: 128)
!3255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3251, file: !3252, line: 34, size: 128, elements: !3256)
!3256 = !{!3257, !3259, !3261}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3255, file: !3252, line: 35, baseType: !3258, size: 128)
!3258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 128, elements: !305)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3255, file: !3252, line: 37, baseType: !3260, size: 128)
!3260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 128, elements: !2467)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3255, file: !3252, line: 38, baseType: !3262, size: 128)
!3262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3241, size: 128, elements: !2306)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3248, file: !3210, line: 52, baseType: !3251, size: 128, offset: 128)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3248, file: !3210, line: 53, baseType: !1022, size: 32, offset: 256)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3248, file: !3210, line: 54, baseType: !3241, size: 32, offset: 288)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3248, file: !3210, line: 55, baseType: !1022, size: 32, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3226, file: !3210, line: 83, baseType: !3268, size: 320, offset: 448)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3269, line: 11, size: 320, elements: !3270)
!3269 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3270 = !{!3271, !3272, !3273, !3278}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3268, file: !3269, line: 16, baseType: !312, size: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3268, file: !3269, line: 17, baseType: !348, size: 64, offset: 128)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3268, file: !3269, line: 18, baseType: !3274, size: 64, offset: 192)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{null, !3277}
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3268, file: !3269, line: 19, baseType: !1022, size: 32, offset: 256)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3226, file: !3210, line: 84, baseType: !1704, offset: 768)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3226, file: !3210, line: 85, baseType: !603, size: 32, offset: 768)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3226, file: !3210, line: 86, baseType: !1784, size: 64, offset: 832)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3226, file: !3210, line: 87, baseType: !451, size: 64, offset: 896)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3226, file: !3210, line: 88, baseType: !451, size: 64, offset: 960)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3226, file: !3210, line: 89, baseType: !488, size: 64, offset: 1024)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3226, file: !3210, line: 90, baseType: !7, size: 32, offset: 1088)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3226, file: !3210, line: 91, baseType: !7, size: 32, offset: 1120)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3226, file: !3210, line: 92, baseType: !516, size: 8, offset: 1152)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3226, file: !3210, line: 93, baseType: !616, size: 16, offset: 1168)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3226, file: !3210, line: 94, baseType: !3208, size: 64, offset: 1216)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3226, file: !3210, line: 95, baseType: !335, size: 128, align: 64, offset: 1280)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3218, file: !3210, line: 103, baseType: !3294, size: 64, offset: 128)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{null, !3225}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3218, file: !3210, line: 104, baseType: !3274, size: 64, offset: 192)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3218, file: !3210, line: 105, baseType: !2085, size: 64, offset: 256)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3218, file: !3210, line: 106, baseType: !328, size: 64, offset: 320)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3218, file: !3210, line: 107, baseType: !3301, size: 320, offset: 384)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3230, line: 56, size: 320, elements: !3302)
!3302 = !{!3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3315, !3317}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3301, file: !3230, line: 57, baseType: !616, size: 16)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3301, file: !3230, line: 58, baseType: !616, size: 16, offset: 16)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3301, file: !3230, line: 59, baseType: !616, size: 16, offset: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3301, file: !3230, line: 60, baseType: !616, size: 16, offset: 48)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3301, file: !3230, line: 61, baseType: !13, size: 32, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3301, file: !3230, line: 62, baseType: !616, size: 16, offset: 96)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3301, file: !3230, line: 63, baseType: !806, size: 8, offset: 112)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3301, file: !3230, line: 64, baseType: !3311, size: 64, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3230, line: 38, baseType: !3312)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!1022, !3291, !1022, !1022}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3301, file: !3230, line: 65, baseType: !3316, size: 64, offset: 192)
!3316 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3230, line: 39, baseType: !3312)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3301, file: !3230, line: 66, baseType: !3318, size: 64, offset: 256)
!3318 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3230, line: 40, baseType: !3319)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!7, !3322, !3291}
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3230, line: 33, size: 128, elements: !3324)
!3324 = !{!3325, !3340}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3323, file: !3230, line: 34, baseType: !3326, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3230, line: 81, size: 1024, elements: !3328)
!3328 = !{!3329, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3327, file: !3230, line: 82, baseType: !3330, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3230, line: 26, flags: DIFlagFwdDecl)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3327, file: !3230, line: 83, baseType: !13, size: 32, offset: 64)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3327, file: !3230, line: 84, baseType: !13, size: 32, offset: 96)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3327, file: !3230, line: 85, baseType: !3301, size: 320, offset: 128)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3327, file: !3230, line: 86, baseType: !806, size: 8, offset: 448)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3327, file: !3230, line: 87, baseType: !2862, size: 256, offset: 512)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3327, file: !3230, line: 88, baseType: !1699, size: 192, offset: 768)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3327, file: !3230, line: 89, baseType: !1704, offset: 960)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3327, file: !3230, line: 90, baseType: !419, size: 32, offset: 960)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3323, file: !3230, line: 35, baseType: !3291, size: 64, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3218, file: !3210, line: 108, baseType: !603, size: 32, offset: 704)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3218, file: !3210, line: 109, baseType: !2630, size: 192, offset: 768)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3209, file: !3210, line: 16, baseType: !3015, size: 64, offset: 256)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3209, file: !3210, line: 17, baseType: !806, size: 8, offset: 320)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3209, file: !3210, line: 19, baseType: !3327, size: 1024, offset: 384)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3209, file: !3210, line: 22, baseType: !407, size: 64, offset: 1408)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3209, file: !3210, line: 23, baseType: !2862, size: 256, offset: 1472)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3180, file: !3181, line: 87, baseType: !7, size: 32, offset: 1280)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3180, file: !3181, line: 88, baseType: !7, size: 32, offset: 1312)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3180, file: !3181, line: 89, baseType: !7, size: 32, offset: 1344)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3180, file: !3181, line: 90, baseType: !7, size: 32, offset: 1376)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3180, file: !3181, line: 91, baseType: !7, size: 32, offset: 1408)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3180, file: !3181, line: 92, baseType: !7, size: 32, offset: 1440)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3180, file: !3181, line: 94, baseType: !3355, size: 128, offset: 1472)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3181, line: 21, size: 128, elements: !3356)
!3356 = !{!3357, !3363, !3365}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3355, file: !3181, line: 22, baseType: !3358, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1378, line: 805, baseType: !3359)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 798, size: 32, elements: !3360)
!3360 = !{!3361, !3362}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3359, file: !1378, line: 803, baseType: !1377, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3359, file: !1378, line: 804, baseType: !1704, offset: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3355, file: !3181, line: 23, baseType: !3364, size: 64, offset: 32)
!3364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2697)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3355, file: !3181, line: 24, baseType: !806, size: 8, offset: 96)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3180, file: !3181, line: 96, baseType: !7, size: 32, offset: 1600)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3180, file: !3181, line: 97, baseType: !7, size: 32, offset: 1632)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3180, file: !3181, line: 99, baseType: !7, size: 32, offset: 1664)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3180, file: !3181, line: 100, baseType: !7, size: 32, offset: 1696)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3180, file: !3181, line: 101, baseType: !7, size: 32, offset: 1728)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3180, file: !3181, line: 102, baseType: !7, size: 32, offset: 1760)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3180, file: !3181, line: 103, baseType: !7, size: 32, offset: 1792)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3180, file: !3181, line: 104, baseType: !7, size: 32, offset: 1824)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3180, file: !3181, line: 106, baseType: !7, size: 32, offset: 1856)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3180, file: !3181, line: 107, baseType: !7, size: 32, offset: 1888)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3180, file: !3181, line: 111, baseType: !7, size: 32, offset: 1920)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3180, file: !3181, line: 112, baseType: !7, size: 32, offset: 1952)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3180, file: !3181, line: 114, baseType: !7, size: 32, offset: 1984)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3180, file: !3181, line: 116, baseType: !7, size: 32, offset: 2016)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3180, file: !3181, line: 117, baseType: !7, size: 32, offset: 2048)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3180, file: !3181, line: 121, baseType: !7, size: 32, offset: 2080)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3180, file: !3181, line: 122, baseType: !7, size: 32, offset: 2112)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3180, file: !3181, line: 123, baseType: !7, size: 32, offset: 2144)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3180, file: !3181, line: 124, baseType: !7, size: 32, offset: 2176)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3180, file: !3181, line: 125, baseType: !7, size: 32, offset: 2208)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3180, file: !3181, line: 126, baseType: !1022, size: 32, offset: 2240)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3180, file: !3181, line: 128, baseType: !7, size: 32, offset: 2272)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3180, file: !3181, line: 129, baseType: !7, size: 32, offset: 2304)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3180, file: !3181, line: 130, baseType: !7, size: 32, offset: 2336)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3180, file: !3181, line: 132, baseType: !7, size: 32, offset: 2368)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3180, file: !3181, line: 133, baseType: !7, size: 32, offset: 2400)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3180, file: !3181, line: 134, baseType: !7, size: 32, offset: 2432)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3180, file: !3181, line: 135, baseType: !7, size: 32, offset: 2464)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3180, file: !3181, line: 136, baseType: !7, size: 32, offset: 2496)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3180, file: !3181, line: 137, baseType: !7, size: 32, offset: 2528)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3180, file: !3181, line: 138, baseType: !7, size: 32, offset: 2560)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3180, file: !3181, line: 139, baseType: !7, size: 32, offset: 2592)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3180, file: !3181, line: 140, baseType: !13, size: 32, offset: 2624)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3180, file: !3181, line: 141, baseType: !7, size: 32, offset: 2656)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3180, file: !3181, line: 142, baseType: !7, size: 32, offset: 2688)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3180, file: !3181, line: 143, baseType: !7, size: 32, offset: 2720)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3180, file: !3181, line: 144, baseType: !7, size: 32, offset: 2752)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3180, file: !3181, line: 145, baseType: !7, size: 32, offset: 2784)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3180, file: !3181, line: 146, baseType: !7, size: 32, offset: 2816)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3180, file: !3181, line: 147, baseType: !7, size: 32, offset: 2848)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3180, file: !3181, line: 148, baseType: !7, size: 32, offset: 2880)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3180, file: !3181, line: 149, baseType: !7, size: 32, offset: 2912)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3180, file: !3181, line: 150, baseType: !7, size: 32, offset: 2944)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3180, file: !3181, line: 151, baseType: !7, size: 32, offset: 2976)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3180, file: !3181, line: 152, baseType: !7, size: 32, offset: 3008)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3180, file: !3181, line: 153, baseType: !7, size: 32, offset: 3040)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3180, file: !3181, line: 154, baseType: !7, size: 32, offset: 3072)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3180, file: !3181, line: 155, baseType: !7, size: 32, offset: 3104)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3180, file: !3181, line: 156, baseType: !7, size: 32, offset: 3136)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3180, file: !3181, line: 157, baseType: !7, size: 32, offset: 3168)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3180, file: !3181, line: 158, baseType: !7, size: 32, offset: 3200)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3180, file: !3181, line: 159, baseType: !7, size: 32, offset: 3232)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3180, file: !3181, line: 160, baseType: !7, size: 32, offset: 3264)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3180, file: !3181, line: 161, baseType: !7, size: 32, offset: 3296)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3180, file: !3181, line: 162, baseType: !7, size: 32, offset: 3328)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3180, file: !3181, line: 163, baseType: !7, size: 32, offset: 3360)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3180, file: !3181, line: 164, baseType: !7, size: 32, offset: 3392)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3180, file: !3181, line: 165, baseType: !7, size: 32, offset: 3424)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3180, file: !3181, line: 166, baseType: !7, size: 32, offset: 3456)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3180, file: !3181, line: 167, baseType: !7, size: 32, offset: 3488)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3180, file: !3181, line: 168, baseType: !7, size: 32, offset: 3520)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3180, file: !3181, line: 169, baseType: !7, size: 32, offset: 3552)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3180, file: !3181, line: 170, baseType: !7, size: 32, offset: 3584)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3180, file: !3181, line: 171, baseType: !7, size: 32, offset: 3616)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3180, file: !3181, line: 172, baseType: !3431, size: 96, offset: 3648)
!3431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1626)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3180, file: !3181, line: 173, baseType: !3431, size: 96, offset: 3744)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3180, file: !3181, line: 174, baseType: !7, size: 32, offset: 3840)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3180, file: !3181, line: 175, baseType: !348, size: 64, offset: 3904)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3180, file: !3181, line: 176, baseType: !348, size: 64, offset: 3968)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3180, file: !3181, line: 177, baseType: !3437, size: 192, offset: 4032)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3181, line: 34, size: 192, elements: !3438)
!3438 = !{!3439, !3440, !3443}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3437, file: !3181, line: 35, baseType: !419, size: 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3437, file: !3181, line: 37, baseType: !3441, size: 64, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3181, line: 32, flags: DIFlagFwdDecl)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3437, file: !3181, line: 38, baseType: !7, size: 32, offset: 128)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3180, file: !3181, line: 178, baseType: !7, size: 32, offset: 4224)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3180, file: !3181, line: 179, baseType: !7, size: 32, offset: 4256)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3180, file: !3181, line: 180, baseType: !3447, size: 64, offset: 4288)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3449)
!3449 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3181, line: 180, flags: DIFlagFwdDecl)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3180, file: !3181, line: 181, baseType: !3451, size: 64, offset: 4352)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3181, line: 41, flags: DIFlagFwdDecl)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3180, file: !3181, line: 182, baseType: !1704, offset: 4416)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3180, file: !3181, line: 183, baseType: !13, size: 32, offset: 4416)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3180, file: !3181, line: 184, baseType: !419, size: 32, offset: 4448)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3180, file: !3181, line: 185, baseType: !348, size: 64, offset: 4480)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3180, file: !3181, line: 186, baseType: !7, size: 32, offset: 4544)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3180, file: !3181, line: 188, baseType: !7, size: 32, offset: 4576)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3180, file: !3181, line: 189, baseType: !7, size: 32, offset: 4608)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3180, file: !3181, line: 195, baseType: !7, size: 32, offset: 4640)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3180, file: !3181, line: 196, baseType: !7, size: 32, offset: 4672)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3180, file: !3181, line: 197, baseType: !7, size: 32, offset: 4704)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3180, file: !3181, line: 198, baseType: !7, size: 32, offset: 4736)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3180, file: !3181, line: 200, baseType: !3465, size: 96, offset: 4768)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3181, line: 27, size: 96, elements: !3466)
!3466 = !{!3467, !3468}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3465, file: !3181, line: 28, baseType: !3358, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3465, file: !3181, line: 29, baseType: !3469, size: 64, offset: 32)
!3469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1424, size: 64, elements: !2697)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3180, file: !3181, line: 202, baseType: !419, size: 32, offset: 4864)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3180, file: !3181, line: 205, baseType: !3472, size: 64, offset: 4928)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3180, file: !3181, line: 206, baseType: !7, size: 32, offset: 4992)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3180, file: !3181, line: 222, baseType: !3475, size: 64, offset: 5056)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3181, line: 222, flags: DIFlagFwdDecl)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3180, file: !3181, line: 223, baseType: !13, size: 32, offset: 5120)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3180, file: !3181, line: 225, baseType: !3475, size: 64, offset: 5184)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3180, file: !3181, line: 226, baseType: !13, size: 32, offset: 5248)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3180, file: !3181, line: 228, baseType: !419, size: 32, offset: 5280)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3180, file: !3181, line: 229, baseType: !3482, size: 128, offset: 5312)
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3483, line: 22, baseType: !3484)
!3483 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3483, line: 20, size: 128, elements: !3485)
!3485 = !{!3486}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3484, file: !3483, line: 21, baseType: !3487, size: 128)
!3487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 128, elements: !2697)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3016, file: !3017, line: 128, baseType: !3489, size: 4608, offset: 10176)
!3489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3490, line: 56, size: 4608, elements: !3491)
!3490 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3491 = !{!3492, !3532, !3535, !3536, !3537, !3538, !3541, !3544, !3547, !3548, !3549, !3552, !3553, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3633, !3634, !3635, !3636}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3489, file: !3490, line: 57, baseType: !3493, size: 1600)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3490, line: 15, size: 1600, elements: !3494)
!3494 = !{!3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3493, file: !3490, line: 17, baseType: !2936, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3493, file: !3490, line: 18, baseType: !2936, size: 64, offset: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3493, file: !3490, line: 19, baseType: !2936, size: 64, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3493, file: !3490, line: 20, baseType: !2936, size: 64, offset: 192)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3493, file: !3490, line: 21, baseType: !2936, size: 64, offset: 256)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3493, file: !3490, line: 23, baseType: !7, size: 32, offset: 320)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3493, file: !3490, line: 24, baseType: !7, size: 32, offset: 352)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3493, file: !3490, line: 25, baseType: !7, size: 32, offset: 384)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3493, file: !3490, line: 26, baseType: !7, size: 32, offset: 416)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3493, file: !3490, line: 27, baseType: !7, size: 32, offset: 448)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3493, file: !3490, line: 28, baseType: !7, size: 32, offset: 480)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3493, file: !3490, line: 29, baseType: !7, size: 32, offset: 512)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3493, file: !3490, line: 30, baseType: !7, size: 32, offset: 544)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3493, file: !3490, line: 31, baseType: !7, size: 32, offset: 576)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3493, file: !3490, line: 32, baseType: !7, size: 32, offset: 608)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3493, file: !3490, line: 33, baseType: !7, size: 32, offset: 640)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3493, file: !3490, line: 34, baseType: !7, size: 32, offset: 672)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3493, file: !3490, line: 35, baseType: !7, size: 32, offset: 704)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3493, file: !3490, line: 36, baseType: !7, size: 32, offset: 736)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3493, file: !3490, line: 37, baseType: !7, size: 32, offset: 768)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3493, file: !3490, line: 38, baseType: !7, size: 32, offset: 800)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3493, file: !3490, line: 39, baseType: !3517, size: 256, offset: 832)
!3517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 256, elements: !2306)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3493, file: !3490, line: 40, baseType: !3472, size: 64, offset: 1088)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3493, file: !3490, line: 41, baseType: !7, size: 32, offset: 1152)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3493, file: !3490, line: 42, baseType: !7, size: 32, offset: 1184)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3493, file: !3490, line: 43, baseType: !7, size: 32, offset: 1216)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3493, file: !3490, line: 44, baseType: !7, size: 32, offset: 1248)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3493, file: !3490, line: 45, baseType: !7, size: 32, offset: 1280)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3493, file: !3490, line: 46, baseType: !7, size: 32, offset: 1312)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3493, file: !3490, line: 47, baseType: !7, size: 32, offset: 1344)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3493, file: !3490, line: 48, baseType: !7, size: 32, offset: 1376)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3493, file: !3490, line: 49, baseType: !7, size: 32, offset: 1408)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3493, file: !3490, line: 50, baseType: !7, size: 32, offset: 1440)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3493, file: !3490, line: 51, baseType: !7, size: 32, offset: 1472)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3493, file: !3490, line: 52, baseType: !7, size: 32, offset: 1504)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3493, file: !3490, line: 53, baseType: !806, size: 8, offset: 1536)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3489, file: !3490, line: 58, baseType: !3533, size: 64, offset: 1600)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3490, line: 58, flags: DIFlagFwdDecl)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3489, file: !3490, line: 59, baseType: !3533, size: 64, offset: 1664)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3489, file: !3490, line: 60, baseType: !3204, size: 64, offset: 1728)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3489, file: !3490, line: 61, baseType: !3208, size: 64, offset: 1792)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3489, file: !3490, line: 71, baseType: !3539, size: 64, offset: 1856)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3490, line: 71, flags: DIFlagFwdDecl)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3489, file: !3490, line: 72, baseType: !3542, size: 64, offset: 1920)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3490, line: 72, flags: DIFlagFwdDecl)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3489, file: !3490, line: 73, baseType: !3545, size: 64, offset: 1984)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3490, line: 73, flags: DIFlagFwdDecl)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3489, file: !3490, line: 74, baseType: !3268, size: 320, offset: 2048)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3489, file: !3490, line: 75, baseType: !3054, size: 64, offset: 2368)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3489, file: !3490, line: 76, baseType: !3550, size: 64, offset: 2432)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3490, line: 76, flags: DIFlagFwdDecl)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3489, file: !3490, line: 77, baseType: !320, size: 128, offset: 2496)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3489, file: !3490, line: 78, baseType: !3554, size: 1088, offset: 2624)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !960, line: 15, size: 1088, elements: !3555)
!3555 = !{!3556, !3557, !3558, !3563, !3569, !3575, !3576, !3580, !3584, !3588, !3592, !3593, !3597, !3601, !3605, !3609, !3613, !3614}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3554, file: !960, line: 16, baseType: !511, size: 16)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3554, file: !960, line: 17, baseType: !13, size: 32, offset: 32)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3554, file: !960, line: 19, baseType: !3559, size: 64, offset: 64)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!7, !3562}
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3554, file: !960, line: 20, baseType: !3564, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{!3567, !3567, !528}
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !453, line: 956, flags: DIFlagFwdDecl)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3554, file: !960, line: 21, baseType: !3570, size: 64, offset: 192)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!13, !3573}
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3568)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3554, file: !960, line: 22, baseType: !3570, size: 64, offset: 256)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3554, file: !960, line: 23, baseType: !3577, size: 64, offset: 320)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!2550, !3567, !348}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3554, file: !960, line: 24, baseType: !3581, size: 64, offset: 384)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{null, !3567}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3554, file: !960, line: 25, baseType: !3585, size: 64, offset: 448)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !3567, !326, !7}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3554, file: !960, line: 27, baseType: !3589, size: 64, offset: 512)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!3567, !3567}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3554, file: !960, line: 28, baseType: !503, size: 64, offset: 576)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3554, file: !960, line: 29, baseType: !3594, size: 64, offset: 640)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{null, !3567, !481, !451, !1022, !806}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3554, file: !960, line: 32, baseType: !3598, size: 64, offset: 704)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{null, !3567, !481, !451}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3554, file: !960, line: 34, baseType: !3602, size: 64, offset: 768)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!7, !3015, !481, !451}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3554, file: !960, line: 35, baseType: !3606, size: 64, offset: 832)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{!958, !3573, !451, !3291}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3554, file: !960, line: 38, baseType: !3610, size: 64, offset: 896)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !3573, !3291}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3554, file: !960, line: 41, baseType: !2085, size: 64, offset: 960)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3554, file: !960, line: 43, baseType: !3615, size: 64, offset: 1024)
!3615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3616, line: 97, size: 64, elements: !3617)
!3616 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3617 = !{!3618}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3615, file: !3616, line: 98, baseType: !413, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3489, file: !3490, line: 79, baseType: !1946, offset: 3712)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3489, file: !3490, line: 80, baseType: !1704, offset: 3712)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3489, file: !3490, line: 81, baseType: !13, size: 32, offset: 3712)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3489, file: !3490, line: 82, baseType: !348, size: 64, offset: 3776)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3489, file: !3490, line: 94, baseType: !3201, size: 64, offset: 3840)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3489, file: !3490, line: 95, baseType: !481, size: 64, offset: 3904)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3489, file: !3490, line: 96, baseType: !481, size: 64, offset: 3968)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3489, file: !3490, line: 97, baseType: !481, size: 64, offset: 4032)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3489, file: !3490, line: 98, baseType: !481, size: 64, offset: 4096)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3489, file: !3490, line: 107, baseType: !419, size: 32, offset: 4160)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3489, file: !3490, line: 108, baseType: !419, size: 32, offset: 4192)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3489, file: !3490, line: 109, baseType: !3631, size: 64, offset: 4224)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3490, line: 109, flags: DIFlagFwdDecl)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3489, file: !3490, line: 110, baseType: !3475, size: 64, offset: 4288)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3489, file: !3490, line: 111, baseType: !3475, size: 64, offset: 4352)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3489, file: !3490, line: 112, baseType: !13, size: 32, offset: 4416)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3489, file: !3490, line: 117, baseType: !3637, size: 128, offset: 4480)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3489, file: !3490, line: 113, size: 128, elements: !3638)
!3638 = !{!3639, !3640, !3641}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3637, file: !3490, line: 114, baseType: !1615, size: 64)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3637, file: !3490, line: 115, baseType: !1704, offset: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3637, file: !3490, line: 116, baseType: !1022, size: 32, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !3016, file: !3017, line: 162, baseType: !3643, size: 192, offset: 14784)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !453, line: 291, size: 192, elements: !3644)
!3644 = !{!3645, !3646, !3647, !3648}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3643, file: !453, line: 293, baseType: !451, size: 64)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3643, file: !453, line: 294, baseType: !451, size: 64, offset: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3643, file: !453, line: 296, baseType: !528, size: 32, offset: 128)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3643, file: !453, line: 297, baseType: !1704, offset: 160)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !3016, file: !3017, line: 164, baseType: !3650, size: 64, offset: 14976)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3017, line: 47, flags: DIFlagFwdDecl)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !3016, file: !3017, line: 167, baseType: !3653, size: 512, offset: 15040)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3654, line: 14, size: 512, elements: !3655)
!3654 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3655 = !{!3656, !3671, !3673}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3653, file: !3654, line: 16, baseType: !3657, size: 128)
!3657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3658, size: 128, elements: !2697)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !95, line: 1037, size: 128, elements: !3660)
!3660 = !{!3661, !3662}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3659, file: !95, line: 1038, baseType: !335, size: 128, align: 64)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3659, file: !95, line: 1039, baseType: !3663, offset: 128)
!3663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3664, elements: !345)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !95, line: 1032, size: 192, elements: !3665)
!3665 = !{!3666, !3667}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3664, file: !95, line: 1033, baseType: !1123, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3664, file: !95, line: 1034, baseType: !3668, size: 128, offset: 64)
!3668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3669, size: 128, elements: !2697)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !95, line: 1034, flags: DIFlagFwdDecl)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3653, file: !3654, line: 17, baseType: !3672, size: 128, offset: 128)
!3672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1123, size: 128, elements: !2697)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3653, file: !3654, line: 18, baseType: !3674, size: 256, offset: 256)
!3674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 256, elements: !2697)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !3016, file: !3017, line: 174, baseType: !409, size: 64, offset: 15552)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !3016, file: !3017, line: 183, baseType: !3677, size: 1216, offset: 15616)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3678, line: 15, size: 1216, elements: !3679)
!3678 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3679 = !{!3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3693, !3694, !3695, !3698, !3701}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3677, file: !3678, line: 17, baseType: !3043, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3677, file: !3678, line: 18, baseType: !3043, size: 64, offset: 64)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3677, file: !3678, line: 19, baseType: !3043, size: 64, offset: 128)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3677, file: !3678, line: 20, baseType: !3043, size: 64, offset: 192)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3677, file: !3678, line: 21, baseType: !3043, size: 64, offset: 256)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3677, file: !3678, line: 22, baseType: !3043, size: 64, offset: 320)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3677, file: !3678, line: 23, baseType: !3043, size: 64, offset: 384)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3677, file: !3678, line: 24, baseType: !3043, size: 64, offset: 448)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3677, file: !3678, line: 25, baseType: !3043, size: 64, offset: 512)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3677, file: !3678, line: 26, baseType: !3043, size: 64, offset: 576)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3677, file: !3678, line: 30, baseType: !3691, size: 64, offset: 640)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3678, line: 11, flags: DIFlagFwdDecl)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3677, file: !3678, line: 31, baseType: !1704, offset: 704)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3677, file: !3678, line: 32, baseType: !3268, size: 320, offset: 704)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3677, file: !3678, line: 33, baseType: !3696, size: 64, offset: 1024)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3678, line: 12, flags: DIFlagFwdDecl)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3677, file: !3678, line: 34, baseType: !3699, size: 64, offset: 1088)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3678, line: 13, flags: DIFlagFwdDecl)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3677, file: !3678, line: 37, baseType: !1615, size: 64, offset: 1152)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !3016, file: !3017, line: 191, baseType: !481, size: 64, offset: 16832)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !3000, file: !3001, line: 38, baseType: !3704, size: 64, offset: 384)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !3001, line: 38, flags: DIFlagFwdDecl)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !3000, file: !3001, line: 39, baseType: !3704, size: 64, offset: 448)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !3000, file: !3001, line: 40, baseType: !3708, size: 64, offset: 512)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3710, line: 856, size: 448, elements: !3711)
!3710 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3711 = !{!3712, !3713, !3714, !3715, !3716}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3709, file: !3710, line: 857, baseType: !603, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3709, file: !3710, line: 858, baseType: !2848, size: 192, offset: 64)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3709, file: !3710, line: 859, baseType: !2814, size: 64, offset: 256)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3709, file: !3710, line: 860, baseType: !2956, size: 64, offset: 320)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3709, file: !3710, line: 861, baseType: !3717, size: 64, offset: 384)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3719, line: 16, flags: DIFlagFwdDecl)
!3719 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2361, file: !2362, line: 969, baseType: !3721, size: 64, offset: 9216)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3723, line: 82, size: 7296, elements: !3724)
!3723 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3724 = !{!3725, !3726, !3727, !3728, !3729, !3730, !3731, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3760, !3769, !3770, !3772, !3773, !3774, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3802, !3803, !3810, !3811, !3812, !3813, !3814, !3815}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3722, file: !3723, line: 83, baseType: !603, size: 32)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3722, file: !3723, line: 84, baseType: !419, size: 32, offset: 32)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3722, file: !3723, line: 85, baseType: !7, size: 32, offset: 64)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3722, file: !3723, line: 86, baseType: !320, size: 128, offset: 128)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3722, file: !3723, line: 88, baseType: !1923, size: 128, offset: 256)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3722, file: !3723, line: 91, baseType: !2360, size: 64, offset: 384)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3722, file: !3723, line: 94, baseType: !3732, size: 192, offset: 448)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3733, line: 30, size: 192, elements: !3734)
!3733 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3734 = !{!3735, !3736}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3732, file: !3733, line: 31, baseType: !320, size: 128)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3732, file: !3733, line: 32, baseType: !3737, size: 64, offset: 128)
!3737 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3738, line: 25, baseType: !3739)
!3738 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3738, line: 23, size: 64, elements: !3740)
!3740 = !{!3741}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3739, file: !3738, line: 24, baseType: !2505, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3722, file: !3723, line: 97, baseType: !1615, size: 64, offset: 640)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3722, file: !3723, line: 100, baseType: !7, size: 32, offset: 704)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3722, file: !3723, line: 106, baseType: !7, size: 32, offset: 736)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3722, file: !3723, line: 107, baseType: !2360, size: 64, offset: 768)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3722, file: !3723, line: 110, baseType: !7, size: 32, offset: 832)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3722, file: !3723, line: 111, baseType: !13, size: 32, offset: 864)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3722, file: !3723, line: 122, baseType: !13, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3722, file: !3723, line: 123, baseType: !13, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3722, file: !3723, line: 128, baseType: !7, size: 32, offset: 928)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3722, file: !3723, line: 129, baseType: !320, size: 128, offset: 960)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3722, file: !3723, line: 132, baseType: !2431, size: 512, offset: 1088)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3722, file: !3723, line: 133, baseType: !488, size: 64, offset: 1600)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3722, file: !3723, line: 140, baseType: !3755, size: 256, offset: 1664)
!3755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3756, size: 256, elements: !2697)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3723, line: 38, size: 128, elements: !3757)
!3757 = !{!3758, !3759}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3756, file: !3723, line: 39, baseType: !367, size: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3756, file: !3723, line: 40, baseType: !367, size: 64, offset: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3722, file: !3723, line: 146, baseType: !3761, size: 192, offset: 1920)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3723, line: 66, size: 192, elements: !3762)
!3762 = !{!3763}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3761, file: !3723, line: 67, baseType: !3764, size: 192)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3723, line: 47, size: 192, elements: !3765)
!3765 = !{!3766, !3767, !3768}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3764, file: !3723, line: 48, baseType: !409, size: 64)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3764, file: !3723, line: 49, baseType: !409, size: 64, offset: 64)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3764, file: !3723, line: 50, baseType: !409, size: 64, offset: 128)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3722, file: !3723, line: 150, baseType: !2658, size: 640, offset: 2112)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3722, file: !3723, line: 153, baseType: !3771, size: 256, offset: 2752)
!3771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2605, size: 256, elements: !2306)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3722, file: !3723, line: 159, baseType: !2605, size: 64, offset: 3008)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3722, file: !3723, line: 162, baseType: !7, size: 32, offset: 3072)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3722, file: !3723, line: 164, baseType: !3775, size: 64, offset: 3136)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3723, line: 164, flags: DIFlagFwdDecl)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3722, file: !3723, line: 175, baseType: !3358, size: 32, offset: 3200)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3722, file: !3723, line: 176, baseType: !367, size: 64, offset: 3264)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3722, file: !3723, line: 176, baseType: !367, size: 64, offset: 3328)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3722, file: !3723, line: 176, baseType: !367, size: 64, offset: 3392)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3722, file: !3723, line: 176, baseType: !367, size: 64, offset: 3456)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3722, file: !3723, line: 177, baseType: !367, size: 64, offset: 3520)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3722, file: !3723, line: 178, baseType: !367, size: 64, offset: 3584)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3722, file: !3723, line: 179, baseType: !2646, size: 128, offset: 3648)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3722, file: !3723, line: 180, baseType: !348, size: 64, offset: 3776)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3722, file: !3723, line: 180, baseType: !348, size: 64, offset: 3840)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3722, file: !3723, line: 180, baseType: !348, size: 64, offset: 3904)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3722, file: !3723, line: 180, baseType: !348, size: 64, offset: 3968)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3722, file: !3723, line: 181, baseType: !348, size: 64, offset: 4032)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3722, file: !3723, line: 181, baseType: !348, size: 64, offset: 4096)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3722, file: !3723, line: 181, baseType: !348, size: 64, offset: 4160)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3722, file: !3723, line: 181, baseType: !348, size: 64, offset: 4224)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3722, file: !3723, line: 182, baseType: !348, size: 64, offset: 4288)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3722, file: !3723, line: 182, baseType: !348, size: 64, offset: 4352)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3722, file: !3723, line: 182, baseType: !348, size: 64, offset: 4416)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3722, file: !3723, line: 182, baseType: !348, size: 64, offset: 4480)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3722, file: !3723, line: 183, baseType: !348, size: 64, offset: 4544)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3722, file: !3723, line: 183, baseType: !348, size: 64, offset: 4608)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3722, file: !3723, line: 184, baseType: !3800, offset: 4672)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3801, line: 12, elements: !1621)
!3801 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3722, file: !3723, line: 192, baseType: !371, size: 64, offset: 4672)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3722, file: !3723, line: 203, baseType: !3804, size: 2048, offset: 4736)
!3804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3805, size: 2048, elements: !305)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3806, line: 43, size: 128, elements: !3807)
!3806 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3807 = !{!3808, !3809}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3805, file: !3806, line: 44, baseType: !1077, size: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3805, file: !3806, line: 45, baseType: !1077, size: 64, offset: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3722, file: !3723, line: 220, baseType: !806, size: 8, offset: 6784)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3722, file: !3723, line: 221, baseType: !660, size: 16, offset: 6800)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3722, file: !3723, line: 222, baseType: !660, size: 16, offset: 6816)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3722, file: !3723, line: 224, baseType: !2125, size: 64, offset: 6848)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3722, file: !3723, line: 227, baseType: !1699, size: 192, offset: 6912)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3722, file: !3723, line: 233, baseType: !1699, size: 192, offset: 7104)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2361, file: !2362, line: 970, baseType: !3817, size: 64, offset: 9280)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3723, line: 20, size: 16576, elements: !3819)
!3819 = !{!3820, !3821, !3822, !3823}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3818, file: !3723, line: 21, baseType: !1704)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3818, file: !3723, line: 22, baseType: !603, size: 32)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3818, file: !3723, line: 23, baseType: !1923, size: 128, offset: 64)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3818, file: !3723, line: 24, baseType: !3824, size: 16384, offset: 192)
!3824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3825, size: 16384, elements: !3845)
!3825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3733, line: 49, size: 256, elements: !3826)
!3826 = !{!3827}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3825, file: !3733, line: 50, baseType: !3828, size: 256)
!3828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3733, line: 35, size: 256, elements: !3829)
!3829 = !{!3830, !3837, !3838, !3844}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3828, file: !3733, line: 37, baseType: !3831, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3832, line: 19, baseType: !3833)
!3832 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3832, line: 18, baseType: !3835)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{null, !7}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3828, file: !3733, line: 38, baseType: !348, size: 64, offset: 64)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3828, file: !3733, line: 44, baseType: !3839, size: 64, offset: 128)
!3839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3832, line: 22, baseType: !3840)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3832, line: 21, baseType: !3842)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3828, file: !3733, line: 46, baseType: !3737, size: 64, offset: 192)
!3845 = !{!3846}
!3846 = !DISubrange(count: 64)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2361, file: !2362, line: 971, baseType: !3737, size: 64, offset: 9344)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2361, file: !2362, line: 972, baseType: !3737, size: 64, offset: 9408)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2361, file: !2362, line: 974, baseType: !3737, size: 64, offset: 9472)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2361, file: !2362, line: 975, baseType: !3732, size: 192, offset: 9536)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2361, file: !2362, line: 976, baseType: !348, size: 64, offset: 9728)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2361, file: !2362, line: 977, baseType: !1074, size: 64, offset: 9792)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2361, file: !2362, line: 978, baseType: !13, size: 32, offset: 9856)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2361, file: !2362, line: 980, baseType: !338, size: 64, offset: 9920)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2361, file: !2362, line: 989, baseType: !3856, size: 128, offset: 9984)
!3856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3857, line: 35, size: 128, elements: !3858)
!3857 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3858 = !{!3859, !3860, !3861}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3856, file: !3857, line: 36, baseType: !7, size: 32)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3856, file: !3857, line: 37, baseType: !419, size: 32, offset: 32)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3856, file: !3857, line: 38, baseType: !3862, size: 64, offset: 64)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3857, line: 23, flags: DIFlagFwdDecl)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2361, file: !2362, line: 992, baseType: !367, size: 64, offset: 10112)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2361, file: !2362, line: 993, baseType: !367, size: 64, offset: 10176)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2361, file: !2362, line: 996, baseType: !1704, offset: 10240)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2361, file: !2362, line: 999, baseType: !1795, offset: 10240)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2361, file: !2362, line: 1001, baseType: !3869, size: 64, offset: 10240)
!3869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2362, line: 636, size: 64, elements: !3870)
!3870 = !{!3871}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3869, file: !2362, line: 637, baseType: !3872, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2361, file: !2362, line: 1005, baseType: !1781, size: 128, offset: 10304)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2361, file: !2362, line: 1007, baseType: !2360, size: 64, offset: 10432)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2361, file: !2362, line: 1009, baseType: !3876, size: 64, offset: 10496)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2362, line: 1009, flags: DIFlagFwdDecl)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2361, file: !2362, line: 1043, baseType: !626, size: 64, offset: 10560)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2361, file: !2362, line: 1046, baseType: !3880, size: 64, offset: 10624)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2362, line: 41, flags: DIFlagFwdDecl)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2361, file: !2362, line: 1050, baseType: !3883, size: 64, offset: 10688)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3884 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2362, line: 42, flags: DIFlagFwdDecl)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2361, file: !2362, line: 1054, baseType: !3886, size: 64, offset: 10752)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2362, line: 55, flags: DIFlagFwdDecl)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2361, file: !2362, line: 1056, baseType: !3889, size: 64, offset: 10816)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2362, line: 40, flags: DIFlagFwdDecl)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2361, file: !2362, line: 1058, baseType: !3892, size: 64, offset: 10880)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3894, line: 99, size: 704, elements: !3895)
!3894 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3895 = !{!3896, !3897, !3898, !3899, !3900, !3901, !3902, !3921, !3922}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3893, file: !3894, line: 100, baseType: !407, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3893, file: !3894, line: 101, baseType: !419, size: 32, offset: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3893, file: !3894, line: 102, baseType: !419, size: 32, offset: 96)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3893, file: !3894, line: 105, baseType: !1704, offset: 128)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3893, file: !3894, line: 107, baseType: !511, size: 16, offset: 128)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3893, file: !3894, line: 109, baseType: !1771, size: 128, offset: 192)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3893, file: !3894, line: 110, baseType: !3903, size: 64, offset: 320)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3894, line: 73, size: 448, elements: !3905)
!3905 = !{!3906, !3909, !3910, !3915, !3920}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3904, file: !3894, line: 74, baseType: !3907, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3894, line: 74, flags: DIFlagFwdDecl)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3904, file: !3894, line: 75, baseType: !3892, size: 64, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, scope: !3904, file: !3894, line: 83, baseType: !3911, size: 128, offset: 128)
!3911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3904, file: !3894, line: 83, size: 128, elements: !3912)
!3912 = !{!3913, !3914}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3911, file: !3894, line: 84, baseType: !320, size: 128)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3911, file: !3894, line: 85, baseType: !2085, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, scope: !3904, file: !3894, line: 87, baseType: !3916, size: 128, offset: 256)
!3916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3904, file: !3894, line: 87, size: 128, elements: !3917)
!3917 = !{!3918, !3919}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3916, file: !3894, line: 88, baseType: !312, size: 128)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3916, file: !3894, line: 89, baseType: !335, size: 128, align: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3904, file: !3894, line: 92, baseType: !13, size: 32, offset: 384)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3893, file: !3894, line: 111, baseType: !1615, size: 64, offset: 384)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3893, file: !3894, line: 113, baseType: !2862, size: 256, offset: 448)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2361, file: !2362, line: 1061, baseType: !3924, size: 64, offset: 10944)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2362, line: 43, flags: DIFlagFwdDecl)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2361, file: !2362, line: 1064, baseType: !348, size: 64, offset: 11008)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2361, file: !2362, line: 1065, baseType: !3928, size: 64, offset: 11072)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3733, line: 14, baseType: !3930)
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3733, line: 12, size: 384, elements: !3931)
!3931 = !{!3932}
!3932 = !DIDerivedType(tag: DW_TAG_member, scope: !3930, file: !3733, line: 13, baseType: !3933, size: 384)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3930, file: !3733, line: 13, size: 384, elements: !3934)
!3934 = !{!3935, !3936, !3937, !3938}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3933, file: !3733, line: 13, baseType: !7, size: 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3933, file: !3733, line: 13, baseType: !7, size: 32, offset: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3933, file: !3733, line: 13, baseType: !7, size: 32, offset: 64)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3933, file: !3733, line: 13, baseType: !3939, size: 256, offset: 128)
!3939 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3940, line: 32, size: 256, elements: !3941)
!3940 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3941 = !{!3942, !3947, !3960, !3966, !3975, !3995, !4000}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3939, file: !3940, line: 37, baseType: !3943, size: 64)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3939, file: !3940, line: 34, size: 64, elements: !3944)
!3944 = !{!3945, !3946}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3943, file: !3940, line: 35, baseType: !2594, size: 32)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3943, file: !3940, line: 36, baseType: !1422, size: 32, offset: 32)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3939, file: !3940, line: 45, baseType: !3948, size: 192)
!3948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3939, file: !3940, line: 40, size: 192, elements: !3949)
!3949 = !{!3950, !3952, !3953, !3959}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3948, file: !3940, line: 41, baseType: !3951, size: 32)
!3951 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1076, line: 95, baseType: !7)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3948, file: !3940, line: 42, baseType: !7, size: 32, offset: 32)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3948, file: !3940, line: 43, baseType: !3954, size: 64, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3940, line: 11, baseType: !3955)
!3955 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3940, line: 8, size: 64, elements: !3956)
!3956 = !{!3957, !3958}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3955, file: !3940, line: 9, baseType: !7, size: 32)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3955, file: !3940, line: 10, baseType: !626, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3948, file: !3940, line: 44, baseType: !7, size: 32, offset: 128)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3939, file: !3940, line: 52, baseType: !3961, size: 128)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3939, file: !3940, line: 48, size: 128, elements: !3962)
!3962 = !{!3963, !3964, !3965}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3961, file: !3940, line: 49, baseType: !2594, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3961, file: !3940, line: 50, baseType: !1422, size: 32, offset: 32)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3961, file: !3940, line: 51, baseType: !3954, size: 64, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3939, file: !3940, line: 61, baseType: !3967, size: 256)
!3967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3939, file: !3940, line: 55, size: 256, elements: !3968)
!3968 = !{!3969, !3970, !3971, !3972, !3974}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3967, file: !3940, line: 56, baseType: !2594, size: 32)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3967, file: !3940, line: 57, baseType: !1422, size: 32, offset: 32)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3967, file: !3940, line: 58, baseType: !7, size: 32, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3967, file: !3940, line: 59, baseType: !3973, size: 64, offset: 128)
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1076, line: 94, baseType: !1557)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3967, file: !3940, line: 60, baseType: !3973, size: 64, offset: 192)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3939, file: !3940, line: 95, baseType: !3976, size: 256)
!3976 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3939, file: !3940, line: 64, size: 256, elements: !3977)
!3977 = !{!3978, !3979}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3976, file: !3940, line: 65, baseType: !626, size: 64)
!3979 = !DIDerivedType(tag: DW_TAG_member, scope: !3976, file: !3940, line: 77, baseType: !3980, size: 192, offset: 64)
!3980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3976, file: !3940, line: 77, size: 192, elements: !3981)
!3981 = !{!3982, !3983, !3990}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3980, file: !3940, line: 82, baseType: !660, size: 16)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3980, file: !3940, line: 88, baseType: !3984, size: 192)
!3984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3980, file: !3940, line: 84, size: 192, elements: !3985)
!3985 = !{!3986, !3988, !3989}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3984, file: !3940, line: 85, baseType: !3987, size: 64)
!3987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 64, elements: !2467)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3984, file: !3940, line: 86, baseType: !626, size: 64, offset: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3984, file: !3940, line: 87, baseType: !626, size: 64, offset: 128)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3980, file: !3940, line: 93, baseType: !3991, size: 96)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3980, file: !3940, line: 90, size: 96, elements: !3992)
!3992 = !{!3993, !3994}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3991, file: !3940, line: 91, baseType: !3987, size: 64)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3991, file: !3940, line: 92, baseType: !528, size: 32, offset: 64)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3939, file: !3940, line: 101, baseType: !3996, size: 128)
!3996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3939, file: !3940, line: 98, size: 128, elements: !3997)
!3997 = !{!3998, !3999}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3996, file: !3940, line: 99, baseType: !1033, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3996, file: !3940, line: 100, baseType: !7, size: 32, offset: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3939, file: !3940, line: 108, baseType: !4001, size: 128)
!4001 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3939, file: !3940, line: 104, size: 128, elements: !4002)
!4002 = !{!4003, !4004, !4005}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4001, file: !3940, line: 105, baseType: !626, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4001, file: !3940, line: 106, baseType: !7, size: 32, offset: 64)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4001, file: !3940, line: 107, baseType: !13, size: 32, offset: 96)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2361, file: !2362, line: 1067, baseType: !3800, offset: 11136)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2361, file: !2362, line: 1099, baseType: !4008, size: 64, offset: 11136)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2362, line: 56, flags: DIFlagFwdDecl)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2361, file: !2362, line: 1103, baseType: !320, size: 128, offset: 11200)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2361, file: !2362, line: 1104, baseType: !4012, size: 64, offset: 11328)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2362, line: 46, flags: DIFlagFwdDecl)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2361, file: !2362, line: 1105, baseType: !1699, size: 192, offset: 11392)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2361, file: !2362, line: 1106, baseType: !13, size: 32, offset: 11584)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2361, file: !2362, line: 1109, baseType: !4017, size: 128, offset: 11648)
!4017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4018, size: 128, elements: !2697)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2362, line: 51, flags: DIFlagFwdDecl)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2361, file: !2362, line: 1110, baseType: !1699, size: 192, offset: 11776)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2361, file: !2362, line: 1111, baseType: !320, size: 128, offset: 11968)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2361, file: !2362, line: 1173, baseType: !4023, size: 64, offset: 12096)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4025, line: 62, size: 256, align: 256, elements: !4026)
!4025 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4026 = !{!4027, !4028, !4029, !4034}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4024, file: !4025, line: 75, baseType: !528, size: 32)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4024, file: !4025, line: 90, baseType: !528, size: 32, offset: 32)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4024, file: !4025, line: 124, baseType: !4030, size: 64, offset: 64)
!4030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4024, file: !4025, line: 109, size: 64, elements: !4031)
!4031 = !{!4032, !4033}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4030, file: !4025, line: 110, baseType: !369, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4030, file: !4025, line: 112, baseType: !369, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4024, file: !4025, line: 144, baseType: !528, size: 32, offset: 128)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2361, file: !2362, line: 1174, baseType: !1022, size: 32, offset: 12160)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2361, file: !2362, line: 1179, baseType: !348, size: 64, offset: 12224)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2361, file: !2362, line: 1182, baseType: !4038, size: 128, offset: 12288)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2302, line: 76, size: 128, elements: !4039)
!4039 = !{!4040, !4045, !4046}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4038, file: !2302, line: 85, baseType: !4041, size: 64)
!4041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4042, line: 7, size: 64, elements: !4043)
!4042 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4043 = !{!4044}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4041, file: !4042, line: 12, baseType: !2502, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4038, file: !2302, line: 88, baseType: !806, size: 8, offset: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4038, file: !2302, line: 95, baseType: !806, size: 8, offset: 72)
!4047 = !DIDerivedType(tag: DW_TAG_member, scope: !2361, file: !2362, line: 1184, baseType: !4048, size: 128, offset: 12416)
!4048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2361, file: !2362, line: 1184, size: 128, elements: !4049)
!4049 = !{!4050, !4051}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4048, file: !2362, line: 1185, baseType: !603, size: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4048, file: !2362, line: 1186, baseType: !335, size: 128, align: 64)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2361, file: !2362, line: 1190, baseType: !1917, size: 64, offset: 12544)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2361, file: !2362, line: 1192, baseType: !4054, size: 128, offset: 12608)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2302, line: 64, size: 128, elements: !4055)
!4055 = !{!4056, !4057, !4058}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4054, file: !2302, line: 65, baseType: !1753, size: 64)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4054, file: !2302, line: 67, baseType: !528, size: 32, offset: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4054, file: !2302, line: 68, baseType: !528, size: 32, offset: 96)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2361, file: !2362, line: 1206, baseType: !7, size: 32, offset: 12736)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2361, file: !2362, line: 1207, baseType: !7, size: 32, offset: 12768)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2361, file: !2362, line: 1209, baseType: !348, size: 64, offset: 12800)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2361, file: !2362, line: 1219, baseType: !367, size: 64, offset: 12864)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2361, file: !2362, line: 1220, baseType: !367, size: 64, offset: 12928)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2361, file: !2362, line: 1317, baseType: !7, size: 32, offset: 12992)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2361, file: !2362, line: 1319, baseType: !2360, size: 64, offset: 13056)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2361, file: !2362, line: 1322, baseType: !4067, size: 64, offset: 13120)
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4068, size: 64)
!4068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4069, line: 56, size: 512, elements: !4070)
!4069 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4070 = !{!4071, !4072, !4073, !4074, !4075, !4076, !4077, !4079}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4068, file: !4069, line: 57, baseType: !4067, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4068, file: !4069, line: 58, baseType: !626, size: 64, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4068, file: !4069, line: 59, baseType: !348, size: 64, offset: 128)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4068, file: !4069, line: 60, baseType: !348, size: 64, offset: 192)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4068, file: !4069, line: 61, baseType: !1835, size: 64, offset: 256)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4068, file: !4069, line: 62, baseType: !13, size: 32, offset: 320)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4068, file: !4069, line: 63, baseType: !4078, size: 64, offset: 384)
!4078 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !313, line: 153, baseType: !367)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4068, file: !4069, line: 64, baseType: !3291, size: 64, offset: 448)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2361, file: !2362, line: 1326, baseType: !603, size: 32, offset: 13184)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2361, file: !2362, line: 1342, baseType: !626, size: 64, offset: 13248)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2361, file: !2362, line: 1343, baseType: !369, size: 64, offset: 13312)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2361, file: !2362, line: 1344, baseType: !367, size: 64, offset: 13376)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2361, file: !2362, line: 1345, baseType: !369, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2361, file: !2362, line: 1346, baseType: !369, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2361, file: !2362, line: 1347, baseType: !369, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2361, file: !2362, line: 1348, baseType: !335, size: 128, align: 64, offset: 13504)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2361, file: !2362, line: 1358, baseType: !4089, size: 34816, offset: 13824)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4090, line: 485, size: 34816, elements: !4091)
!4090 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4091 = !{!4092, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4121, !4122, !4123, !4124, !4125, !4126, !4129, !4130, !4131}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4089, file: !4090, line: 487, baseType: !4093, size: 192)
!4093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4094, size: 192, elements: !1626)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4095, line: 16, size: 64, elements: !4096)
!4095 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4096 = !{!4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4094, file: !4095, line: 17, baseType: !616, size: 16)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4094, file: !4095, line: 18, baseType: !616, size: 16, offset: 16)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4094, file: !4095, line: 19, baseType: !616, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4094, file: !4095, line: 19, baseType: !616, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4094, file: !4095, line: 19, baseType: !616, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4094, file: !4095, line: 19, baseType: !616, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4094, file: !4095, line: 19, baseType: !616, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4094, file: !4095, line: 20, baseType: !616, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4094, file: !4095, line: 20, baseType: !616, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4094, file: !4095, line: 20, baseType: !616, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4094, file: !4095, line: 20, baseType: !616, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4094, file: !4095, line: 20, baseType: !616, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4094, file: !4095, line: 20, baseType: !616, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4089, file: !4090, line: 491, baseType: !348, size: 64, offset: 192)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4089, file: !4090, line: 495, baseType: !511, size: 16, offset: 256)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4089, file: !4090, line: 496, baseType: !511, size: 16, offset: 272)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4089, file: !4090, line: 497, baseType: !511, size: 16, offset: 288)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4089, file: !4090, line: 498, baseType: !511, size: 16, offset: 304)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4089, file: !4090, line: 502, baseType: !348, size: 64, offset: 320)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4089, file: !4090, line: 503, baseType: !348, size: 64, offset: 384)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4089, file: !4090, line: 514, baseType: !4118, size: 256, offset: 448)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4119, size: 256, elements: !2306)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4090, line: 483, flags: DIFlagFwdDecl)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4089, file: !4090, line: 516, baseType: !348, size: 64, offset: 704)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4089, file: !4090, line: 518, baseType: !348, size: 64, offset: 768)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4089, file: !4090, line: 520, baseType: !348, size: 64, offset: 832)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4089, file: !4090, line: 521, baseType: !348, size: 64, offset: 896)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4089, file: !4090, line: 522, baseType: !348, size: 64, offset: 960)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4089, file: !4090, line: 528, baseType: !4127, size: 64, offset: 1024)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4090, line: 10, flags: DIFlagFwdDecl)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4089, file: !4090, line: 535, baseType: !348, size: 64, offset: 1088)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4089, file: !4090, line: 537, baseType: !13, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4089, file: !4090, line: 540, baseType: !4132, size: 33280, offset: 1536)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4133, line: 317, size: 33280, elements: !4134)
!4133 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4134 = !{!4135, !4136, !4137}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4132, file: !4133, line: 330, baseType: !13, size: 32)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4132, file: !4133, line: 337, baseType: !348, size: 64, offset: 64)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4132, file: !4133, line: 348, baseType: !4138, size: 32768, offset: 512)
!4138 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4133, line: 304, size: 32768, elements: !4139)
!4139 = !{!4140, !4153, !4190, !4240, !4253}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4138, file: !4133, line: 305, baseType: !4141, size: 896)
!4141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4133, line: 12, size: 896, elements: !4142)
!4142 = !{!4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4152}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4141, file: !4133, line: 13, baseType: !1022, size: 32)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4141, file: !4133, line: 14, baseType: !1022, size: 32, offset: 32)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4141, file: !4133, line: 15, baseType: !1022, size: 32, offset: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4141, file: !4133, line: 16, baseType: !1022, size: 32, offset: 96)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4141, file: !4133, line: 17, baseType: !1022, size: 32, offset: 128)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4141, file: !4133, line: 18, baseType: !1022, size: 32, offset: 160)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4141, file: !4133, line: 19, baseType: !1022, size: 32, offset: 192)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4141, file: !4133, line: 22, baseType: !4151, size: 640, offset: 224)
!4151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 640, elements: !935)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4141, file: !4133, line: 25, baseType: !1022, size: 32, offset: 864)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4138, file: !4133, line: 306, baseType: !4154, size: 4096, align: 128)
!4154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4133, line: 34, size: 4096, align: 128, elements: !4155)
!4155 = !{!4156, !4157, !4158, !4159, !4160, !4175, !4176, !4177, !4179, !4181, !4185}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4154, file: !4133, line: 35, baseType: !616, size: 16)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4154, file: !4133, line: 36, baseType: !616, size: 16, offset: 16)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4154, file: !4133, line: 37, baseType: !616, size: 16, offset: 32)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4154, file: !4133, line: 38, baseType: !616, size: 16, offset: 48)
!4160 = !DIDerivedType(tag: DW_TAG_member, scope: !4154, file: !4133, line: 39, baseType: !4161, size: 128, offset: 64)
!4161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4154, file: !4133, line: 39, size: 128, elements: !4162)
!4162 = !{!4163, !4168}
!4163 = !DIDerivedType(tag: DW_TAG_member, scope: !4161, file: !4133, line: 40, baseType: !4164, size: 128)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4161, file: !4133, line: 40, size: 128, elements: !4165)
!4165 = !{!4166, !4167}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4164, file: !4133, line: 41, baseType: !367, size: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4164, file: !4133, line: 42, baseType: !367, size: 64, offset: 64)
!4168 = !DIDerivedType(tag: DW_TAG_member, scope: !4161, file: !4133, line: 44, baseType: !4169, size: 128)
!4169 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4161, file: !4133, line: 44, size: 128, elements: !4170)
!4170 = !{!4171, !4172, !4173, !4174}
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4169, file: !4133, line: 45, baseType: !1022, size: 32)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4169, file: !4133, line: 46, baseType: !1022, size: 32, offset: 32)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4169, file: !4133, line: 47, baseType: !1022, size: 32, offset: 64)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4169, file: !4133, line: 48, baseType: !1022, size: 32, offset: 96)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4154, file: !4133, line: 51, baseType: !1022, size: 32, offset: 192)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4154, file: !4133, line: 52, baseType: !1022, size: 32, offset: 224)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4154, file: !4133, line: 55, baseType: !4178, size: 1024, offset: 256)
!4178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 1024, elements: !854)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4154, file: !4133, line: 58, baseType: !4180, size: 2048, offset: 1280)
!4180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 2048, elements: !3845)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4154, file: !4133, line: 60, baseType: !4182, size: 384, offset: 3328)
!4182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 384, elements: !4183)
!4183 = !{!4184}
!4184 = !DISubrange(count: 12)
!4185 = !DIDerivedType(tag: DW_TAG_member, scope: !4154, file: !4133, line: 62, baseType: !4186, size: 384, offset: 3712)
!4186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4154, file: !4133, line: 62, size: 384, elements: !4187)
!4187 = !{!4188, !4189}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4186, file: !4133, line: 63, baseType: !4182, size: 384)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4186, file: !4133, line: 64, baseType: !4182, size: 384)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4138, file: !4133, line: 307, baseType: !4191, size: 1088)
!4191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4133, line: 79, size: 1088, elements: !4192)
!4192 = !{!4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4239}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4191, file: !4133, line: 80, baseType: !1022, size: 32)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4191, file: !4133, line: 81, baseType: !1022, size: 32, offset: 32)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4191, file: !4133, line: 82, baseType: !1022, size: 32, offset: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4191, file: !4133, line: 83, baseType: !1022, size: 32, offset: 96)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4191, file: !4133, line: 84, baseType: !1022, size: 32, offset: 128)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4191, file: !4133, line: 85, baseType: !1022, size: 32, offset: 160)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4191, file: !4133, line: 86, baseType: !1022, size: 32, offset: 192)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4191, file: !4133, line: 88, baseType: !4151, size: 640, offset: 224)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4191, file: !4133, line: 89, baseType: !829, size: 8, offset: 864)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4191, file: !4133, line: 90, baseType: !829, size: 8, offset: 872)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4191, file: !4133, line: 91, baseType: !829, size: 8, offset: 880)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4191, file: !4133, line: 92, baseType: !829, size: 8, offset: 888)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4191, file: !4133, line: 93, baseType: !829, size: 8, offset: 896)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4191, file: !4133, line: 94, baseType: !829, size: 8, offset: 904)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4191, file: !4133, line: 95, baseType: !4208, size: 64, offset: 960)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4210, line: 11, size: 128, elements: !4211)
!4210 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4211 = !{!4212, !4213}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4209, file: !4210, line: 12, baseType: !1033, size: 64)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4209, file: !4210, line: 13, baseType: !4214, size: 64, offset: 64)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4216, line: 56, size: 1344, elements: !4217)
!4216 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4217 = !{!4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4215, file: !4216, line: 61, baseType: !348, size: 64)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4215, file: !4216, line: 62, baseType: !348, size: 64, offset: 64)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4215, file: !4216, line: 63, baseType: !348, size: 64, offset: 128)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4215, file: !4216, line: 64, baseType: !348, size: 64, offset: 192)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4215, file: !4216, line: 65, baseType: !348, size: 64, offset: 256)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4215, file: !4216, line: 66, baseType: !348, size: 64, offset: 320)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4215, file: !4216, line: 68, baseType: !348, size: 64, offset: 384)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4215, file: !4216, line: 69, baseType: !348, size: 64, offset: 448)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4215, file: !4216, line: 70, baseType: !348, size: 64, offset: 512)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4215, file: !4216, line: 71, baseType: !348, size: 64, offset: 576)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4215, file: !4216, line: 72, baseType: !348, size: 64, offset: 640)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4215, file: !4216, line: 73, baseType: !348, size: 64, offset: 704)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4215, file: !4216, line: 74, baseType: !348, size: 64, offset: 768)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4215, file: !4216, line: 75, baseType: !348, size: 64, offset: 832)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4215, file: !4216, line: 76, baseType: !348, size: 64, offset: 896)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4215, file: !4216, line: 81, baseType: !348, size: 64, offset: 960)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4215, file: !4216, line: 83, baseType: !348, size: 64, offset: 1024)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4215, file: !4216, line: 84, baseType: !348, size: 64, offset: 1088)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4215, file: !4216, line: 85, baseType: !348, size: 64, offset: 1152)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4215, file: !4216, line: 86, baseType: !348, size: 64, offset: 1216)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4215, file: !4216, line: 87, baseType: !348, size: 64, offset: 1280)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4191, file: !4133, line: 96, baseType: !1022, size: 32, offset: 1024)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4138, file: !4133, line: 308, baseType: !4241, size: 4608, align: 512)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4133, line: 289, size: 4608, align: 512, elements: !4242)
!4242 = !{!4243, !4244, !4251}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4241, file: !4133, line: 290, baseType: !4154, size: 4096, align: 128)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4241, file: !4133, line: 291, baseType: !4245, size: 512, offset: 4096)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4133, line: 268, size: 512, elements: !4246)
!4246 = !{!4247, !4248, !4249}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4245, file: !4133, line: 269, baseType: !367, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4245, file: !4133, line: 270, baseType: !367, size: 64, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4245, file: !4133, line: 271, baseType: !4250, size: 384, offset: 128)
!4250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 384, elements: !1034)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4241, file: !4133, line: 292, baseType: !4252, offset: 4608)
!4252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, elements: !518)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4138, file: !4133, line: 309, baseType: !4254, size: 32768)
!4254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 32768, elements: !4255)
!4255 = !{!4256}
!4256 = !DISubrange(count: 4096)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2357, file: !1755, line: 378, baseType: !4258, size: 64, offset: 64)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2353, file: !1755, line: 384, baseType: !2630, size: 192, offset: 192)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2129, file: !1755, line: 500, baseType: !1704, offset: 6656)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2129, file: !1755, line: 501, baseType: !4262, size: 64, offset: 6656)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1755, line: 387, flags: DIFlagFwdDecl)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2129, file: !1755, line: 516, baseType: !2814, size: 64, offset: 6720)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2129, file: !1755, line: 519, baseType: !1350, size: 64, offset: 6784)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2129, file: !1755, line: 521, baseType: !4267, size: 64, offset: 6848)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1755, line: 521, flags: DIFlagFwdDecl)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2129, file: !1755, line: 545, baseType: !419, size: 32, offset: 6912)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2129, file: !1755, line: 548, baseType: !806, size: 8, offset: 6944)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2129, file: !1755, line: 550, baseType: !4272, offset: 6952)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4273, line: 142, elements: !1621)
!4273 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2129, file: !1755, line: 554, baseType: !2862, size: 256, offset: 6976)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2129, file: !1755, line: 557, baseType: !1022, size: 32, offset: 7232)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2126, file: !1755, line: 565, baseType: !4277, offset: 7296)
!4277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, elements: !345)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2122, file: !1755, line: 151, baseType: !419, size: 32)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2114, file: !1755, line: 156, baseType: !1704, offset: 256)
!4280 = !DIDerivedType(tag: DW_TAG_member, scope: !1759, file: !1755, line: 159, baseType: !4281, size: 128)
!4281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1759, file: !1755, line: 159, size: 128, elements: !4282)
!4282 = !{!4283, !4347}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4281, file: !1755, line: 161, baseType: !4284, size: 64)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !65, line: 110, size: 1152, elements: !4286)
!4286 = !{!4287, !4297, !4318, !4319, !4320, !4321, !4322, !4334, !4335, !4336}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4285, file: !65, line: 111, baseType: !4288, size: 384)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !65, line: 19, size: 384, elements: !4289)
!4289 = !{!4290, !4292, !4293, !4294, !4295, !4296}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4288, file: !65, line: 20, baseType: !4291, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4288, file: !65, line: 21, baseType: !4291, size: 64, offset: 64)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4288, file: !65, line: 22, baseType: !4291, size: 64, offset: 128)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4288, file: !65, line: 23, baseType: !348, size: 64, offset: 192)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4288, file: !65, line: 24, baseType: !348, size: 64, offset: 256)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4288, file: !65, line: 25, baseType: !348, size: 64, offset: 320)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4285, file: !65, line: 112, baseType: !4298, size: 64, offset: 384)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4300, line: 105, size: 128, elements: !4301)
!4300 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4301 = !{!4302, !4303}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4299, file: !4300, line: 110, baseType: !348, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4299, file: !4300, line: 118, baseType: !4304, size: 64, offset: 64)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 64)
!4305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4300, line: 95, size: 448, elements: !4306)
!4306 = !{!4307, !4308, !4313, !4314, !4315, !4316, !4317}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4305, file: !4300, line: 96, baseType: !407, size: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4305, file: !4300, line: 97, baseType: !4309, size: 64, offset: 64)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4300, line: 60, baseType: !4311)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{null, !4298}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4305, file: !4300, line: 98, baseType: !4309, size: 64, offset: 128)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4305, file: !4300, line: 99, baseType: !806, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4305, file: !4300, line: 100, baseType: !806, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4305, file: !4300, line: 101, baseType: !335, size: 128, align: 64, offset: 256)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4305, file: !4300, line: 102, baseType: !4298, size: 64, offset: 384)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4285, file: !65, line: 113, baseType: !4299, size: 128, offset: 448)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4285, file: !65, line: 114, baseType: !2630, size: 192, offset: 576)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4285, file: !65, line: 115, baseType: !64, size: 32, offset: 768)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4285, file: !65, line: 116, baseType: !13, size: 32, offset: 800)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4285, file: !65, line: 117, baseType: !4323, size: 64, offset: 832)
!4323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4324, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4325)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !65, line: 67, size: 256, elements: !4326)
!4326 = !{!4327, !4328, !4332, !4333}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4325, file: !65, line: 73, baseType: !1855, size: 64)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4325, file: !65, line: 78, baseType: !4329, size: 64, offset: 64)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{null, !4284}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4325, file: !65, line: 83, baseType: !4329, size: 64, offset: 128)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4325, file: !65, line: 89, baseType: !2178, size: 64, offset: 192)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4285, file: !65, line: 118, baseType: !626, size: 64, offset: 896)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4285, file: !65, line: 119, baseType: !7, size: 32, offset: 960)
!4336 = !DIDerivedType(tag: DW_TAG_member, scope: !4285, file: !65, line: 120, baseType: !4337, size: 128, offset: 1024)
!4337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4285, file: !65, line: 120, size: 128, elements: !4338)
!4338 = !{!4339, !4345}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4337, file: !65, line: 121, baseType: !4340, size: 128)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4341, line: 6, size: 128, elements: !4342)
!4341 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4342 = !{!4343, !4344}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4340, file: !4341, line: 7, baseType: !367, size: 64)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4340, file: !4341, line: 8, baseType: !367, size: 64, offset: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4337, file: !65, line: 122, baseType: !4346)
!4346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4340, elements: !518)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4281, file: !1755, line: 162, baseType: !626, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1759, file: !1755, line: 176, baseType: !335, size: 128, align: 64)
!4349 = !DIDerivedType(tag: DW_TAG_member, scope: !1754, file: !1755, line: 179, baseType: !4350, size: 32, offset: 384)
!4350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1754, file: !1755, line: 179, size: 32, elements: !4351)
!4351 = !{!4352, !4353, !4354, !4355}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4350, file: !1755, line: 184, baseType: !419, size: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4350, file: !1755, line: 192, baseType: !13, size: 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4350, file: !1755, line: 194, baseType: !13, size: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4350, file: !1755, line: 195, baseType: !7, size: 32)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1754, file: !1755, line: 199, baseType: !419, size: 32, offset: 416)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1634, file: !78, line: 1964, baseType: !4358, size: 64, offset: 1344)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!1033, !1579, !4361}
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4363, line: 12, size: 256, elements: !4364)
!4363 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4364 = !{!4365, !4366, !4367, !4368, !4369}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4362, file: !4363, line: 13, baseType: !1776, size: 32)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4362, file: !4363, line: 16, baseType: !7, size: 32, offset: 32)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4362, file: !4363, line: 23, baseType: !348, size: 64, offset: 64)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4362, file: !4363, line: 30, baseType: !348, size: 64, offset: 128)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4362, file: !4363, line: 33, baseType: !4370, size: 64, offset: 192)
!4370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4371, size: 64)
!4371 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1755, line: 27, flags: DIFlagFwdDecl)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1634, file: !78, line: 1966, baseType: !4358, size: 64, offset: 1408)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1580, file: !78, line: 1424, baseType: !4374, size: 64, offset: 448)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64)
!4375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4376)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !72, line: 322, size: 704, elements: !4377)
!4377 = !{!4378, !4424, !4428, !4432, !4433, !4434, !4435, !4436, !4441, !4446, !4450}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4376, file: !72, line: 323, baseType: !4379, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!7, !4382}
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !72, line: 294, size: 1600, elements: !4384)
!4384 = !{!4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4409, !4410, !4411}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4383, file: !72, line: 295, baseType: !312, size: 128)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4383, file: !72, line: 296, baseType: !320, size: 128, offset: 128)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4383, file: !72, line: 297, baseType: !320, size: 128, offset: 256)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4383, file: !72, line: 298, baseType: !320, size: 128, offset: 384)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4383, file: !72, line: 299, baseType: !1699, size: 192, offset: 512)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4383, file: !72, line: 300, baseType: !1704, offset: 704)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4383, file: !72, line: 301, baseType: !419, size: 32, offset: 704)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4383, file: !72, line: 302, baseType: !1579, size: 64, offset: 768)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4383, file: !72, line: 303, baseType: !4394, size: 64, offset: 832)
!4394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !72, line: 68, size: 64, elements: !4395)
!4395 = !{!4396, !4408}
!4396 = !DIDerivedType(tag: DW_TAG_member, scope: !4394, file: !72, line: 69, baseType: !4397, size: 32)
!4397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4394, file: !72, line: 69, size: 32, elements: !4398)
!4398 = !{!4399, !4400, !4401}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4397, file: !72, line: 70, baseType: !1416, size: 32)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4397, file: !72, line: 71, baseType: !1424, size: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4397, file: !72, line: 72, baseType: !4402, size: 32)
!4402 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4403, line: 24, baseType: !4404)
!4403 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4403, line: 22, size: 32, elements: !4405)
!4405 = !{!4406}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4404, file: !4403, line: 23, baseType: !4407, size: 32)
!4407 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4403, line: 20, baseType: !1422)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4394, file: !72, line: 74, baseType: !71, size: 32, offset: 32)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4383, file: !72, line: 304, baseType: !1510, size: 64, offset: 896)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4383, file: !72, line: 305, baseType: !348, size: 64, offset: 960)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4383, file: !72, line: 306, baseType: !4412, size: 576, offset: 1024)
!4412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !72, line: 205, size: 576, elements: !4413)
!4413 = !{!4414, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4412, file: !72, line: 206, baseType: !4415, size: 64)
!4415 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !72, line: 66, baseType: !415)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4412, file: !72, line: 207, baseType: !4415, size: 64, offset: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4412, file: !72, line: 208, baseType: !4415, size: 64, offset: 128)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4412, file: !72, line: 209, baseType: !4415, size: 64, offset: 192)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4412, file: !72, line: 210, baseType: !4415, size: 64, offset: 256)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4412, file: !72, line: 211, baseType: !4415, size: 64, offset: 320)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4412, file: !72, line: 212, baseType: !4415, size: 64, offset: 384)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4412, file: !72, line: 213, baseType: !1517, size: 64, offset: 448)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4412, file: !72, line: 214, baseType: !1517, size: 64, offset: 512)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4376, file: !72, line: 324, baseType: !4425, size: 64, offset: 64)
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!4382, !1579, !7}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4376, file: !72, line: 325, baseType: !4429, size: 64, offset: 128)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{null, !4382}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4376, file: !72, line: 326, baseType: !4379, size: 64, offset: 192)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4376, file: !72, line: 327, baseType: !4379, size: 64, offset: 256)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4376, file: !72, line: 328, baseType: !4379, size: 64, offset: 320)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4376, file: !72, line: 329, baseType: !1662, size: 64, offset: 384)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4376, file: !72, line: 332, baseType: !4437, size: 64, offset: 448)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!4440, !1409}
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4376, file: !72, line: 333, baseType: !4442, size: 64, offset: 512)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{!7, !1409, !4445}
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4376, file: !72, line: 335, baseType: !4447, size: 64, offset: 576)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!7, !1409, !4440}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4376, file: !72, line: 337, baseType: !4451, size: 64, offset: 640)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!7, !1579, !4454}
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1580, file: !78, line: 1425, baseType: !4456, size: 64, offset: 512)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4458)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !72, line: 428, size: 704, elements: !4459)
!4459 = !{!4460, !4464, !4465, !4469, !4470, !4471, !4486, !4509, !4513, !4514, !4537}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4458, file: !72, line: 429, baseType: !4461, size: 64)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!7, !1579, !7, !7, !1526}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4458, file: !72, line: 430, baseType: !1662, size: 64, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4458, file: !72, line: 431, baseType: !4466, size: 64, offset: 128)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{!7, !1579, !13}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4458, file: !72, line: 432, baseType: !4466, size: 64, offset: 192)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4458, file: !72, line: 433, baseType: !1662, size: 64, offset: 256)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4458, file: !72, line: 434, baseType: !4472, size: 64, offset: 320)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!7, !1579, !7, !4475}
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !72, line: 415, size: 256, elements: !4477)
!4477 = !{!4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4476, file: !72, line: 416, baseType: !7, size: 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4476, file: !72, line: 417, baseType: !13, size: 32, offset: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4476, file: !72, line: 418, baseType: !13, size: 32, offset: 64)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4476, file: !72, line: 420, baseType: !13, size: 32, offset: 96)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4476, file: !72, line: 421, baseType: !13, size: 32, offset: 128)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4476, file: !72, line: 422, baseType: !13, size: 32, offset: 160)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4476, file: !72, line: 423, baseType: !13, size: 32, offset: 192)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4476, file: !72, line: 424, baseType: !13, size: 32, offset: 224)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4458, file: !72, line: 435, baseType: !4487, size: 64, offset: 384)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = !DISubroutineType(types: !4489)
!4489 = !{!7, !1579, !4394, !4490}
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !72, line: 343, size: 960, elements: !4492)
!4492 = !{!4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4491, file: !72, line: 344, baseType: !7, size: 32)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4491, file: !72, line: 345, baseType: !367, size: 64, offset: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4491, file: !72, line: 346, baseType: !367, size: 64, offset: 128)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4491, file: !72, line: 347, baseType: !367, size: 64, offset: 192)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4491, file: !72, line: 348, baseType: !367, size: 64, offset: 256)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4491, file: !72, line: 349, baseType: !367, size: 64, offset: 320)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4491, file: !72, line: 350, baseType: !367, size: 64, offset: 384)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4491, file: !72, line: 351, baseType: !413, size: 64, offset: 448)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4491, file: !72, line: 353, baseType: !413, size: 64, offset: 512)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4491, file: !72, line: 354, baseType: !7, size: 32, offset: 576)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4491, file: !72, line: 355, baseType: !7, size: 32, offset: 608)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4491, file: !72, line: 356, baseType: !367, size: 64, offset: 640)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4491, file: !72, line: 357, baseType: !367, size: 64, offset: 704)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4491, file: !72, line: 358, baseType: !367, size: 64, offset: 768)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4491, file: !72, line: 359, baseType: !413, size: 64, offset: 832)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4491, file: !72, line: 360, baseType: !7, size: 32, offset: 896)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4458, file: !72, line: 436, baseType: !4510, size: 64, offset: 448)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 64)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!7, !1579, !4454, !4490}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4458, file: !72, line: 438, baseType: !4487, size: 64, offset: 512)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4458, file: !72, line: 439, baseType: !4515, size: 64, offset: 576)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{!7, !1579, !4518}
!4518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4519, size: 64)
!4519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !72, line: 409, size: 1408, elements: !4520)
!4520 = !{!4521, !4522}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4519, file: !72, line: 410, baseType: !13, size: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4519, file: !72, line: 411, baseType: !4523, size: 1344, offset: 64)
!4523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4524, size: 1344, elements: !1626)
!4524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !72, line: 395, size: 448, elements: !4525)
!4525 = !{!4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4536}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4524, file: !72, line: 396, baseType: !13, size: 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4524, file: !72, line: 397, baseType: !13, size: 32, offset: 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4524, file: !72, line: 399, baseType: !13, size: 32, offset: 64)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4524, file: !72, line: 400, baseType: !13, size: 32, offset: 96)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4524, file: !72, line: 401, baseType: !13, size: 32, offset: 128)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4524, file: !72, line: 402, baseType: !13, size: 32, offset: 160)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4524, file: !72, line: 403, baseType: !13, size: 32, offset: 192)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4524, file: !72, line: 404, baseType: !371, size: 64, offset: 256)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4524, file: !72, line: 405, baseType: !4535, size: 64, offset: 320)
!4535 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !313, line: 126, baseType: !367)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4524, file: !72, line: 406, baseType: !4535, size: 64, offset: 384)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4458, file: !72, line: 440, baseType: !4466, size: 64, offset: 640)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1580, file: !78, line: 1426, baseType: !4539, size: 64, offset: 576)
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4541)
!4541 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !78, line: 49, flags: DIFlagFwdDecl)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1580, file: !78, line: 1427, baseType: !348, size: 64, offset: 640)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1580, file: !78, line: 1428, baseType: !348, size: 64, offset: 704)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1580, file: !78, line: 1429, baseType: !348, size: 64, offset: 768)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1580, file: !78, line: 1430, baseType: !1372, size: 64, offset: 832)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1580, file: !78, line: 1431, baseType: !1789, size: 256, offset: 896)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1580, file: !78, line: 1432, baseType: !7, size: 32, offset: 1152)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1580, file: !78, line: 1433, baseType: !419, size: 32, offset: 1184)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1580, file: !78, line: 1437, baseType: !4550, size: 64, offset: 1216)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4553)
!4553 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !78, line: 1437, flags: DIFlagFwdDecl)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1580, file: !78, line: 1449, baseType: !4555, size: 64, offset: 1280)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1388, line: 34, size: 64, elements: !4556)
!4556 = !{!4557}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4555, file: !1388, line: 35, baseType: !1391, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1580, file: !78, line: 1450, baseType: !320, size: 128, offset: 1344)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1580, file: !78, line: 1451, baseType: !4560, size: 64, offset: 1472)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !78, line: 699, flags: DIFlagFwdDecl)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1580, file: !78, line: 1452, baseType: !3889, size: 64, offset: 1536)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1580, file: !78, line: 1453, baseType: !4564, size: 64, offset: 1600)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !78, line: 1453, flags: DIFlagFwdDecl)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1580, file: !78, line: 1454, baseType: !312, size: 128, offset: 1664)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1580, file: !78, line: 1455, baseType: !13, size: 32, offset: 1792)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1580, file: !78, line: 1456, baseType: !4569, size: 2432, offset: 1856)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !72, line: 518, size: 2432, elements: !4570)
!4570 = !{!4571, !4572, !4573, !4575, !4607}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4569, file: !72, line: 519, baseType: !13, size: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4569, file: !72, line: 520, baseType: !1789, size: 256, offset: 64)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4569, file: !72, line: 521, baseType: !4574, size: 192, offset: 320)
!4574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1409, size: 192, elements: !1626)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4569, file: !72, line: 522, baseType: !4576, size: 1728, offset: 512)
!4576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4577, size: 1728, elements: !1626)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !72, line: 222, size: 576, elements: !4578)
!4578 = !{!4579, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4577, file: !72, line: 223, baseType: !4580, size: 64)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 64)
!4581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !72, line: 443, size: 256, elements: !4582)
!4582 = !{!4583, !4584, !4597, !4598}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4581, file: !72, line: 444, baseType: !7, size: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4581, file: !72, line: 445, baseType: !4585, size: 64, offset: 64)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4587)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !72, line: 310, size: 512, elements: !4588)
!4588 = !{!4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4587, file: !72, line: 311, baseType: !1662, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4587, file: !72, line: 312, baseType: !1662, size: 64, offset: 64)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4587, file: !72, line: 313, baseType: !1662, size: 64, offset: 128)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4587, file: !72, line: 314, baseType: !1662, size: 64, offset: 192)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4587, file: !72, line: 315, baseType: !4379, size: 64, offset: 256)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4587, file: !72, line: 316, baseType: !4379, size: 64, offset: 320)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4587, file: !72, line: 317, baseType: !4379, size: 64, offset: 384)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4587, file: !72, line: 318, baseType: !4451, size: 64, offset: 448)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4581, file: !72, line: 446, baseType: !1015, size: 64, offset: 128)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4581, file: !72, line: 447, baseType: !4580, size: 64, offset: 192)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4577, file: !72, line: 224, baseType: !7, size: 32, offset: 64)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4577, file: !72, line: 226, baseType: !320, size: 128, offset: 128)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4577, file: !72, line: 227, baseType: !348, size: 64, offset: 256)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4577, file: !72, line: 228, baseType: !13, size: 32, offset: 320)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4577, file: !72, line: 229, baseType: !13, size: 32, offset: 352)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4577, file: !72, line: 230, baseType: !4415, size: 64, offset: 384)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4577, file: !72, line: 231, baseType: !4415, size: 64, offset: 448)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4577, file: !72, line: 232, baseType: !626, size: 64, offset: 512)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4569, file: !72, line: 523, baseType: !4608, size: 192, offset: 2240)
!4608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4585, size: 192, elements: !1626)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1580, file: !78, line: 1458, baseType: !4610, size: 2112, offset: 4288)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !78, line: 1410, size: 2112, elements: !4611)
!4611 = !{!4612, !4613, !4614}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4610, file: !78, line: 1411, baseType: !7, size: 32)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4610, file: !78, line: 1412, baseType: !1923, size: 128, offset: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4610, file: !78, line: 1413, baseType: !4615, size: 1920, offset: 192)
!4615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4616, size: 1920, elements: !1626)
!4616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4617, line: 12, size: 640, elements: !4618)
!4617 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4618 = !{!4619, !4627, !4629, !4634, !4635}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4616, file: !4617, line: 13, baseType: !4620, size: 320)
!4620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4621, line: 17, size: 320, elements: !4622)
!4621 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4622 = !{!4623, !4624, !4625, !4626}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4620, file: !4621, line: 18, baseType: !7, size: 32)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4620, file: !4621, line: 19, baseType: !7, size: 32, offset: 32)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4620, file: !4621, line: 20, baseType: !1923, size: 128, offset: 64)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4620, file: !4621, line: 22, baseType: !335, size: 128, align: 64, offset: 192)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4616, file: !4617, line: 14, baseType: !4628, size: 64, offset: 320)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4616, file: !4617, line: 15, baseType: !4630, size: 64, offset: 384)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4631, line: 16, size: 64, elements: !4632)
!4631 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4632 = !{!4633}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4630, file: !4631, line: 17, baseType: !2360, size: 64)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4616, file: !4617, line: 16, baseType: !1923, size: 128, offset: 448)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4616, file: !4617, line: 17, baseType: !419, size: 32, offset: 576)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1580, file: !78, line: 1465, baseType: !626, size: 64, offset: 6400)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1580, file: !78, line: 1468, baseType: !1022, size: 32, offset: 6464)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1580, file: !78, line: 1470, baseType: !1517, size: 64, offset: 6528)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1580, file: !78, line: 1471, baseType: !1517, size: 64, offset: 6592)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1580, file: !78, line: 1473, baseType: !528, size: 32, offset: 6656)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1580, file: !78, line: 1474, baseType: !4642, size: 64, offset: 6720)
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 64)
!4643 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !78, line: 603, flags: DIFlagFwdDecl)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1580, file: !78, line: 1477, baseType: !4645, size: 256, offset: 6784)
!4645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 256, elements: !854)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1580, file: !78, line: 1478, baseType: !4647, size: 128, offset: 7040)
!4647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4648, line: 18, baseType: !4649)
!4648 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4648, line: 16, size: 128, elements: !4650)
!4650 = !{!4651}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4649, file: !4648, line: 17, baseType: !3258, size: 128)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1580, file: !78, line: 1480, baseType: !13, size: 32, offset: 7168)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1580, file: !78, line: 1481, baseType: !4654, size: 32, offset: 7200)
!4654 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !313, line: 150, baseType: !13)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1580, file: !78, line: 1487, baseType: !1699, size: 192, offset: 7232)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1580, file: !78, line: 1493, baseType: !328, size: 64, offset: 7424)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1580, file: !78, line: 1495, baseType: !4658, size: 64, offset: 7488)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4660)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1370, line: 135, size: 1024, align: 512, elements: !4661)
!4661 = !{!4662, !4666, !4667, !4674, !4680, !4684, !4688, !4692, !4693, !4697, !4701, !4706, !4710}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4660, file: !1370, line: 136, baseType: !4663, size: 64)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = !DISubroutineType(types: !4665)
!4665 = !{!7, !1372, !13}
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4660, file: !1370, line: 137, baseType: !4663, size: 64, offset: 64)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4660, file: !1370, line: 138, baseType: !4668, size: 64, offset: 128)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!7, !4671, !4673}
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4660, file: !1370, line: 139, baseType: !4675, size: 64, offset: 192)
!4675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4676, size: 64)
!4676 = !DISubroutineType(types: !4677)
!4677 = !{!7, !4671, !13, !328, !4678}
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4660, file: !1370, line: 141, baseType: !4681, size: 64, offset: 256)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!7, !4671}
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4660, file: !1370, line: 142, baseType: !4685, size: 64, offset: 320)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!7, !1372}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4660, file: !1370, line: 143, baseType: !4689, size: 64, offset: 384)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{null, !1372}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4660, file: !1370, line: 144, baseType: !4689, size: 64, offset: 448)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4660, file: !1370, line: 145, baseType: !4694, size: 64, offset: 512)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{null, !1372, !1409}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4660, file: !1370, line: 146, baseType: !4698, size: 64, offset: 576)
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 64)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!1073, !1372, !1073, !7}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4660, file: !1370, line: 147, baseType: !4702, size: 64, offset: 640)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = !DISubroutineType(types: !4704)
!4704 = !{!1368, !4705}
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4660, file: !1370, line: 148, baseType: !4707, size: 64, offset: 704)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!7, !1526, !806}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4660, file: !1370, line: 149, baseType: !4711, size: 64, offset: 768)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DISubroutineType(types: !4713)
!4713 = !{!1372, !1372, !4714}
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1580, file: !78, line: 1500, baseType: !7, size: 32, offset: 7552)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1580, file: !78, line: 1502, baseType: !4718, size: 448, offset: 7616)
!4718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4363, line: 60, size: 448, elements: !4719)
!4719 = !{!4720, !4725, !4726, !4727, !4728, !4729, !4730}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4718, file: !4363, line: 61, baseType: !4721, size: 64)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!348, !4724, !4361}
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4718, file: !4363, line: 63, baseType: !4721, size: 64, offset: 64)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4718, file: !4363, line: 66, baseType: !1033, size: 64, offset: 128)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4718, file: !4363, line: 67, baseType: !7, size: 32, offset: 192)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4718, file: !4363, line: 68, baseType: !13, size: 32, offset: 224)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4718, file: !4363, line: 71, baseType: !320, size: 128, offset: 256)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4718, file: !4363, line: 77, baseType: !4731, size: 64, offset: 384)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1580, file: !78, line: 1505, baseType: !407, size: 64, offset: 8064)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1580, file: !78, line: 1508, baseType: !407, size: 64, offset: 8128)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1580, file: !78, line: 1511, baseType: !7, size: 32, offset: 8192)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1580, file: !78, line: 1514, baseType: !2059, size: 32, offset: 8224)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1580, file: !78, line: 1517, baseType: !4737, size: 64, offset: 8256)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2863, line: 18, flags: DIFlagFwdDecl)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1580, file: !78, line: 1518, baseType: !1615, size: 64, offset: 8320)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1580, file: !78, line: 1525, baseType: !2814, size: 64, offset: 8384)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1580, file: !78, line: 1532, baseType: !4742, size: 64, offset: 8448)
!4742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4743, line: 52, size: 64, elements: !4744)
!4743 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4744 = !{!4745}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4742, file: !4743, line: 53, baseType: !4746, size: 64)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4743, line: 40, size: 256, elements: !4748)
!4748 = !{!4749, !4750, !4755}
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4747, file: !4743, line: 42, baseType: !1704)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4747, file: !4743, line: 44, baseType: !4751, size: 192)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4743, line: 28, size: 192, elements: !4752)
!4752 = !{!4753, !4754}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4751, file: !4743, line: 29, baseType: !320, size: 128)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4751, file: !4743, line: 31, baseType: !1033, size: 64, offset: 128)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4747, file: !4743, line: 49, baseType: !1033, size: 64, offset: 192)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1580, file: !78, line: 1533, baseType: !4742, size: 64, offset: 8512)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1580, file: !78, line: 1534, baseType: !335, size: 128, align: 64, offset: 8576)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1580, file: !78, line: 1535, baseType: !2862, size: 256, offset: 8704)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1580, file: !78, line: 1537, baseType: !1699, size: 192, offset: 8960)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1580, file: !78, line: 1542, baseType: !7, size: 32, offset: 9152)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1580, file: !78, line: 1545, baseType: !1704, offset: 9184)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1580, file: !78, line: 1546, baseType: !320, size: 128, offset: 9216)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1580, file: !78, line: 1548, baseType: !1704, offset: 9344)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1580, file: !78, line: 1549, baseType: !320, size: 128, offset: 9344)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1410, file: !78, line: 624, baseType: !1766, size: 64, offset: 256)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1410, file: !78, line: 631, baseType: !348, size: 64, offset: 320)
!4767 = !DIDerivedType(tag: DW_TAG_member, scope: !1410, file: !78, line: 639, baseType: !4768, size: 32, offset: 384)
!4768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !78, line: 639, size: 32, elements: !4769)
!4769 = !{!4770, !4772}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4768, file: !78, line: 640, baseType: !4771, size: 32)
!4771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4768, file: !78, line: 641, baseType: !13, size: 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1410, file: !78, line: 643, baseType: !1492, size: 32, offset: 416)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1410, file: !78, line: 644, baseType: !1510, size: 64, offset: 448)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1410, file: !78, line: 645, baseType: !1513, size: 128, offset: 512)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1410, file: !78, line: 646, baseType: !1513, size: 128, offset: 640)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1410, file: !78, line: 647, baseType: !1513, size: 128, offset: 768)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1410, file: !78, line: 648, baseType: !1704, offset: 896)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1410, file: !78, line: 649, baseType: !511, size: 16, offset: 896)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1410, file: !78, line: 650, baseType: !829, size: 8, offset: 912)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1410, file: !78, line: 651, baseType: !829, size: 8, offset: 920)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1410, file: !78, line: 652, baseType: !4535, size: 64, offset: 960)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1410, file: !78, line: 659, baseType: !348, size: 64, offset: 1024)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1410, file: !78, line: 660, baseType: !1789, size: 256, offset: 1088)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1410, file: !78, line: 662, baseType: !348, size: 64, offset: 1344)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1410, file: !78, line: 663, baseType: !348, size: 64, offset: 1408)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1410, file: !78, line: 665, baseType: !312, size: 128, offset: 1472)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1410, file: !78, line: 666, baseType: !320, size: 128, offset: 1600)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1410, file: !78, line: 675, baseType: !320, size: 128, offset: 1728)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1410, file: !78, line: 676, baseType: !320, size: 128, offset: 1856)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1410, file: !78, line: 677, baseType: !320, size: 128, offset: 1984)
!4792 = !DIDerivedType(tag: DW_TAG_member, scope: !1410, file: !78, line: 678, baseType: !4793, size: 128, offset: 2112)
!4793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !78, line: 678, size: 128, elements: !4794)
!4794 = !{!4795, !4796}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4793, file: !78, line: 679, baseType: !1615, size: 64)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4793, file: !78, line: 680, baseType: !335, size: 128, align: 64)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1410, file: !78, line: 682, baseType: !409, size: 64, offset: 2240)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1410, file: !78, line: 683, baseType: !409, size: 64, offset: 2304)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1410, file: !78, line: 684, baseType: !419, size: 32, offset: 2368)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1410, file: !78, line: 685, baseType: !419, size: 32, offset: 2400)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1410, file: !78, line: 686, baseType: !419, size: 32, offset: 2432)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1410, file: !78, line: 688, baseType: !419, size: 32, offset: 2464)
!4803 = !DIDerivedType(tag: DW_TAG_member, scope: !1410, file: !78, line: 690, baseType: !4804, size: 64, offset: 2496)
!4804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !78, line: 690, size: 64, elements: !4805)
!4805 = !{!4806, !5011}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4804, file: !78, line: 691, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4809)
!4809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !78, line: 1822, size: 2048, elements: !4810)
!4810 = !{!4811, !4812, !4816, !4820, !4824, !4825, !4826, !4830, !4843, !4844, !4851, !4855, !4856, !4860, !4861, !4865, !4870, !4871, !4875, !4879, !4971, !4975, !4976, !4980, !4981, !4985, !4989, !4994, !4998, !5002, !5006, !5010}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4809, file: !78, line: 1823, baseType: !1015, size: 64)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4809, file: !78, line: 1824, baseType: !4813, size: 64, offset: 64)
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 64)
!4814 = !DISubroutineType(types: !4815)
!4815 = !{!1510, !1350, !1510, !7}
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4809, file: !78, line: 1825, baseType: !4817, size: 64, offset: 128)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!1555, !1350, !1073, !1074, !1728}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4809, file: !78, line: 1826, baseType: !4821, size: 64, offset: 192)
!4821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4822, size: 64)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{!1555, !1350, !328, !1074, !1728}
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4809, file: !78, line: 1827, baseType: !1859, size: 64, offset: 256)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4809, file: !78, line: 1828, baseType: !1859, size: 64, offset: 320)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4809, file: !78, line: 1829, baseType: !4827, size: 64, offset: 384)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!7, !1862, !806}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4809, file: !78, line: 1830, baseType: !4831, size: 64, offset: 448)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!7, !1350, !4834}
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !78, line: 1776, size: 128, elements: !4836)
!4836 = !{!4837, !4842}
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4835, file: !78, line: 1777, baseType: !4838, size: 64)
!4838 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !78, line: 1773, baseType: !4839)
!4839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4840, size: 64)
!4840 = !DISubroutineType(types: !4841)
!4841 = !{!7, !4834, !328, !7, !1510, !367, !13}
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4835, file: !78, line: 1778, baseType: !1510, size: 64, offset: 64)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4809, file: !78, line: 1831, baseType: !4831, size: 64, offset: 512)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4809, file: !78, line: 1832, baseType: !4845, size: 64, offset: 576)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!4848, !1350, !4849}
!4848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !560, line: 52, baseType: !13)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1599, line: 27, flags: DIFlagFwdDecl)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4809, file: !78, line: 1833, baseType: !4852, size: 64, offset: 640)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!1033, !1350, !13, !348}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4809, file: !78, line: 1834, baseType: !4852, size: 64, offset: 704)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4809, file: !78, line: 1835, baseType: !4857, size: 64, offset: 768)
!4857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4858, size: 64)
!4858 = !DISubroutineType(types: !4859)
!4859 = !{!7, !1350, !2132}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4809, file: !78, line: 1836, baseType: !348, size: 64, offset: 832)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4809, file: !78, line: 1837, baseType: !4862, size: 64, offset: 896)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!7, !1409, !1350}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4809, file: !78, line: 1838, baseType: !4866, size: 64, offset: 960)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!7, !1350, !4869}
!4869 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !78, line: 1007, baseType: !626)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4809, file: !78, line: 1839, baseType: !4862, size: 64, offset: 1024)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4809, file: !78, line: 1840, baseType: !4872, size: 64, offset: 1088)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!7, !1350, !1510, !1510, !7}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4809, file: !78, line: 1841, baseType: !4876, size: 64, offset: 1152)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 64)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{!7, !7, !1350, !7}
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4809, file: !78, line: 1842, baseType: !4880, size: 64, offset: 1216)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!7, !1350, !7, !4883}
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 64)
!4884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !78, line: 1062, size: 1664, elements: !4885)
!4885 = !{!4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4916, !4947}
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4884, file: !78, line: 1063, baseType: !4883, size: 64)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4884, file: !78, line: 1064, baseType: !320, size: 128, offset: 64)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4884, file: !78, line: 1065, baseType: !312, size: 128, offset: 192)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4884, file: !78, line: 1066, baseType: !320, size: 128, offset: 320)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4884, file: !78, line: 1069, baseType: !320, size: 128, offset: 448)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4884, file: !78, line: 1072, baseType: !4869, size: 64, offset: 576)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4884, file: !78, line: 1073, baseType: !13, size: 32, offset: 640)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4884, file: !78, line: 1074, baseType: !517, size: 8, offset: 672)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4884, file: !78, line: 1075, baseType: !13, size: 32, offset: 704)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4884, file: !78, line: 1076, baseType: !7, size: 32, offset: 736)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4884, file: !78, line: 1077, baseType: !1923, size: 128, offset: 768)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4884, file: !78, line: 1078, baseType: !1350, size: 64, offset: 896)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4884, file: !78, line: 1079, baseType: !1510, size: 64, offset: 960)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4884, file: !78, line: 1080, baseType: !1510, size: 64, offset: 1024)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4884, file: !78, line: 1082, baseType: !1942, size: 64, offset: 1088)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4884, file: !78, line: 1084, baseType: !348, size: 64, offset: 1152)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4884, file: !78, line: 1085, baseType: !348, size: 64, offset: 1216)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4884, file: !78, line: 1087, baseType: !4904, size: 64, offset: 1280)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4906)
!4906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !78, line: 1011, size: 128, elements: !4907)
!4907 = !{!4908, !4912}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4906, file: !78, line: 1012, baseType: !4909, size: 64)
!4909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4910, size: 64)
!4910 = !DISubroutineType(types: !4911)
!4911 = !{null, !4883, !4883}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4906, file: !78, line: 1013, baseType: !4913, size: 64, offset: 64)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{null, !4883}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4884, file: !78, line: 1088, baseType: !4917, size: 64, offset: 1344)
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4919)
!4919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !78, line: 1016, size: 512, elements: !4920)
!4920 = !{!4921, !4925, !4929, !4930, !4934, !4938, !4942, !4946}
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4919, file: !78, line: 1017, baseType: !4922, size: 64)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!4869, !4869}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4919, file: !78, line: 1018, baseType: !4926, size: 64, offset: 64)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !4869}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4919, file: !78, line: 1019, baseType: !4913, size: 64, offset: 128)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4919, file: !78, line: 1020, baseType: !4931, size: 64, offset: 192)
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 64)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!7, !4883, !7}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4919, file: !78, line: 1021, baseType: !4935, size: 64, offset: 256)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!806, !4883}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4919, file: !78, line: 1022, baseType: !4939, size: 64, offset: 320)
!4939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4940, size: 64)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{!7, !4883, !7, !323}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4919, file: !78, line: 1023, baseType: !4943, size: 64, offset: 384)
!4943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4944, size: 64)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{null, !4883, !1836}
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4919, file: !78, line: 1024, baseType: !4935, size: 64, offset: 448)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4884, file: !78, line: 1097, baseType: !4948, size: 256, offset: 1408)
!4948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4884, file: !78, line: 1089, size: 256, elements: !4949)
!4949 = !{!4950, !4959, !4965}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4948, file: !78, line: 1090, baseType: !4951, size: 256)
!4951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4952, line: 10, size: 256, elements: !4953)
!4952 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4953 = !{!4954, !4955, !4958}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4951, file: !4952, line: 11, baseType: !1022, size: 32)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4951, file: !4952, line: 12, baseType: !4956, size: 64, offset: 64)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4952, line: 5, flags: DIFlagFwdDecl)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4951, file: !4952, line: 13, baseType: !320, size: 128, offset: 128)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4948, file: !78, line: 1091, baseType: !4960, size: 64)
!4960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4952, line: 17, size: 64, elements: !4961)
!4961 = !{!4962}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4960, file: !4952, line: 18, baseType: !4963, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4952, line: 16, flags: DIFlagFwdDecl)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4948, file: !78, line: 1096, baseType: !4966, size: 192)
!4966 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4948, file: !78, line: 1092, size: 192, elements: !4967)
!4967 = !{!4968, !4969, !4970}
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4966, file: !78, line: 1093, baseType: !320, size: 128)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4966, file: !78, line: 1094, baseType: !7, size: 32, offset: 128)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4966, file: !78, line: 1095, baseType: !13, size: 32, offset: 160)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4809, file: !78, line: 1843, baseType: !4972, size: 64, offset: 1280)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!1555, !1350, !1753, !7, !1074, !1728, !7}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4809, file: !78, line: 1844, baseType: !2252, size: 64, offset: 1344)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4809, file: !78, line: 1845, baseType: !4977, size: 64, offset: 1408)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!7, !7}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4809, file: !78, line: 1846, baseType: !4880, size: 64, offset: 1472)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4809, file: !78, line: 1847, baseType: !4982, size: 64, offset: 1536)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{!1555, !1917, !1350, !1728, !1074, !13}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4809, file: !78, line: 1848, baseType: !4986, size: 64, offset: 1600)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!1555, !1350, !1728, !1917, !1074, !13}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4809, file: !78, line: 1849, baseType: !4990, size: 64, offset: 1664)
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!7, !1350, !1033, !4993, !1836}
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4809, file: !78, line: 1850, baseType: !4995, size: 64, offset: 1728)
!4995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4996, size: 64)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{!1033, !1350, !7, !1510, !1510}
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4809, file: !78, line: 1852, baseType: !4999, size: 64, offset: 1792)
!4999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5000, size: 64)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{null, !1687, !1350}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4809, file: !78, line: 1856, baseType: !5003, size: 64, offset: 1856)
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!1555, !1350, !1510, !1350, !1510, !1074, !13}
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4809, file: !78, line: 1858, baseType: !5007, size: 64, offset: 1920)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{!1510, !1350, !1510, !1350, !1510, !1510, !13}
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4809, file: !78, line: 1861, baseType: !4872, size: 64, offset: 1984)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4804, file: !78, line: 692, baseType: !1641, size: 64)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1410, file: !78, line: 694, baseType: !5013, size: 64, offset: 2560)
!5013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5014, size: 64)
!5014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !78, line: 1100, size: 384, elements: !5015)
!5015 = !{!5016, !5017, !5018, !5019}
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5014, file: !78, line: 1101, baseType: !1704)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5014, file: !78, line: 1102, baseType: !320, size: 128)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5014, file: !78, line: 1103, baseType: !320, size: 128, offset: 128)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5014, file: !78, line: 1104, baseType: !320, size: 128, offset: 256)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1410, file: !78, line: 695, baseType: !1767, size: 1216, align: 64, offset: 2624)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1410, file: !78, line: 696, baseType: !320, size: 128, offset: 3840)
!5022 = !DIDerivedType(tag: DW_TAG_member, scope: !1410, file: !78, line: 697, baseType: !5023, size: 64, offset: 3968)
!5023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !78, line: 697, size: 64, elements: !5024)
!5024 = !{!5025, !5026, !5027, !5030, !5031}
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5023, file: !78, line: 698, baseType: !1917, size: 64)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5023, file: !78, line: 699, baseType: !4560, size: 64)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5023, file: !78, line: 700, baseType: !5028, size: 64)
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5029, size: 64)
!5029 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !78, line: 700, flags: DIFlagFwdDecl)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5023, file: !78, line: 701, baseType: !1073, size: 64)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5023, file: !78, line: 702, baseType: !13, size: 32)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1410, file: !78, line: 705, baseType: !528, size: 32, offset: 4032)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1410, file: !78, line: 708, baseType: !528, size: 32, offset: 4064)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1410, file: !78, line: 709, baseType: !4642, size: 64, offset: 4096)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1410, file: !78, line: 720, baseType: !626, size: 64, offset: 4160)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1373, file: !1370, line: 98, baseType: !1066, size: 256, offset: 448)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1373, file: !1370, line: 101, baseType: !5038, size: 32, offset: 704)
!5038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5039, line: 25, size: 32, elements: !5040)
!5039 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5040 = !{!5041}
!5041 = !DIDerivedType(tag: DW_TAG_member, scope: !5038, file: !5039, line: 26, baseType: !5042, size: 32)
!5042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5038, file: !5039, line: 26, size: 32, elements: !5043)
!5043 = !{!5044}
!5044 = !DIDerivedType(tag: DW_TAG_member, scope: !5042, file: !5039, line: 30, baseType: !5045, size: 32)
!5045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5042, file: !5039, line: 30, size: 32, elements: !5046)
!5046 = !{!5047, !5048}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5045, file: !5039, line: 31, baseType: !1704)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5045, file: !5039, line: 32, baseType: !7, size: 32)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1373, file: !1370, line: 102, baseType: !4658, size: 64, offset: 768)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1373, file: !1370, line: 103, baseType: !1579, size: 64, offset: 832)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1373, file: !1370, line: 104, baseType: !348, size: 64, offset: 896)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1373, file: !1370, line: 105, baseType: !626, size: 64, offset: 960)
!5053 = !DIDerivedType(tag: DW_TAG_member, scope: !1373, file: !1370, line: 107, baseType: !5054, size: 128, offset: 1024)
!5054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1373, file: !1370, line: 107, size: 128, elements: !5055)
!5055 = !{!5056, !5057}
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5054, file: !1370, line: 108, baseType: !320, size: 128)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5054, file: !1370, line: 109, baseType: !5058, size: 64)
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1373, file: !1370, line: 111, baseType: !320, size: 128, offset: 1152)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1373, file: !1370, line: 112, baseType: !320, size: 128, offset: 1280)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1373, file: !1370, line: 120, baseType: !5062, size: 128, offset: 1408)
!5062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1373, file: !1370, line: 116, size: 128, elements: !5063)
!5063 = !{!5064, !5065, !5066}
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5062, file: !1370, line: 117, baseType: !312, size: 128)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5062, file: !1370, line: 118, baseType: !1387, size: 128)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5062, file: !1370, line: 119, baseType: !335, size: 128, align: 64)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1351, file: !78, line: 922, baseType: !1409, size: 64, offset: 256)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1351, file: !78, line: 923, baseType: !4807, size: 64, offset: 320)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1351, file: !78, line: 929, baseType: !1704, offset: 384)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1351, file: !78, line: 930, baseType: !77, size: 32, offset: 384)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1351, file: !78, line: 931, baseType: !407, size: 64, offset: 448)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1351, file: !78, line: 932, baseType: !13, size: 32, offset: 512)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1351, file: !78, line: 933, baseType: !4654, size: 32, offset: 544)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1351, file: !78, line: 934, baseType: !1699, size: 192, offset: 576)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1351, file: !78, line: 935, baseType: !1510, size: 64, offset: 768)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1351, file: !78, line: 936, baseType: !5077, size: 192, offset: 832)
!5077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !78, line: 885, size: 192, elements: !5078)
!5078 = !{!5079, !5080, !5081, !5082, !5083, !5084}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5077, file: !78, line: 886, baseType: !1946)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5077, file: !78, line: 887, baseType: !2605, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5077, file: !78, line: 888, baseType: !86, size: 32, offset: 64)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5077, file: !78, line: 889, baseType: !1416, size: 32, offset: 96)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5077, file: !78, line: 889, baseType: !1416, size: 32, offset: 128)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5077, file: !78, line: 890, baseType: !7, size: 32, offset: 160)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1351, file: !78, line: 937, baseType: !2675, size: 64, offset: 1024)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1351, file: !78, line: 938, baseType: !5087, size: 256, offset: 1088)
!5087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !78, line: 896, size: 256, elements: !5088)
!5088 = !{!5089, !5090, !5091, !5092, !5093, !5094}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5087, file: !78, line: 897, baseType: !348, size: 64)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5087, file: !78, line: 898, baseType: !13, size: 32, offset: 64)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5087, file: !78, line: 899, baseType: !13, size: 32, offset: 96)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5087, file: !78, line: 902, baseType: !13, size: 32, offset: 128)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5087, file: !78, line: 903, baseType: !13, size: 32, offset: 160)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5087, file: !78, line: 904, baseType: !1510, size: 64, offset: 192)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1351, file: !78, line: 940, baseType: !367, size: 64, offset: 1344)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1351, file: !78, line: 945, baseType: !626, size: 64, offset: 1408)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1351, file: !78, line: 949, baseType: !320, size: 128, offset: 1472)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1351, file: !78, line: 950, baseType: !320, size: 128, offset: 1600)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1351, file: !78, line: 952, baseType: !1766, size: 64, offset: 1728)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1351, file: !78, line: 953, baseType: !2059, size: 32, offset: 1792)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1351, file: !78, line: 954, baseType: !2059, size: 32, offset: 1824)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1140, file: !95, line: 59, baseType: !5103, size: 64, offset: 192)
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{null, !1345}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1140, file: !95, line: 60, baseType: !5107, size: 64, offset: 256)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!7, !1345, !626, !626}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1140, file: !95, line: 61, baseType: !5103, size: 64, offset: 320)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1140, file: !95, line: 62, baseType: !5112, size: 64, offset: 384)
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5113, size: 64)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!626, !1345, !626}
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1140, file: !95, line: 63, baseType: !5116, size: 64, offset: 448)
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!7, !1345, !5119, !1146}
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1140, file: !95, line: 65, baseType: !5116, size: 64, offset: 512)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1140, file: !95, line: 68, baseType: !5116, size: 64, offset: 576)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1140, file: !95, line: 70, baseType: !5116, size: 64, offset: 640)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1140, file: !95, line: 74, baseType: !5112, size: 64, offset: 704)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1140, file: !95, line: 75, baseType: !5126, size: 64, offset: 768)
!5126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 64)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!7, !1345, !626, !626, !367}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1140, file: !95, line: 76, baseType: !5130, size: 64, offset: 832)
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{!7, !1345, !626}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1140, file: !95, line: 77, baseType: !5134, size: 64, offset: 896)
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!7, !1345, !626, !367}
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1140, file: !95, line: 78, baseType: !5130, size: 64, offset: 960)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1140, file: !95, line: 79, baseType: !5130, size: 64, offset: 1024)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1140, file: !95, line: 82, baseType: !5140, size: 64, offset: 1088)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!626, !1345, !1350, !7}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1140, file: !95, line: 84, baseType: !1449, size: 64, offset: 1152)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1140, file: !95, line: 85, baseType: !5145, size: 64, offset: 1216)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 64)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{!7, !1345, !5148}
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !126, line: 65, size: 64, elements: !5150)
!5150 = !{!5151, !5152, !5153, !5154, !5155}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5149, file: !126, line: 66, baseType: !516, size: 8)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5149, file: !126, line: 67, baseType: !516, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5149, file: !126, line: 68, baseType: !516, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5149, file: !126, line: 69, baseType: !2349, size: 16, offset: 16)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5149, file: !126, line: 70, baseType: !977, size: 32, offset: 32)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1140, file: !95, line: 86, baseType: !5157, size: 64, offset: 1280)
!5157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5158, size: 64)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{!1022, !626}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1140, file: !95, line: 87, baseType: !5161, size: 64, offset: 1344)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{null, !1345, !626, !1687}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1140, file: !95, line: 89, baseType: !5165, size: 64, offset: 1408)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{!7, !5168, !5170, !5173, !5173}
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5172)
!5172 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !95, line: 32, flags: DIFlagFwdDecl)
!5173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5174, size: 64)
!5174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5175)
!5175 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !95, line: 33, flags: DIFlagFwdDecl)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1140, file: !95, line: 95, baseType: !5177, size: 64, offset: 1472)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!7, !1345, !5180}
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !95, line: 757, size: 4928, elements: !5182)
!5182 = !{!5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5204, !5205, !5206, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5263, !5264, !5283, !5284, !5285, !5294, !5296, !5297, !5298, !5299, !5300, !5302, !5303, !5318, !5320, !5326, !5332, !5340, !5341, !5342, !5343, !5344, !5345, !5353, !5360}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5181, file: !95, line: 758, baseType: !409, size: 64)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5181, file: !95, line: 759, baseType: !1022, size: 32, offset: 64)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5181, file: !95, line: 760, baseType: !1022, size: 32, offset: 96)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5181, file: !95, line: 761, baseType: !1022, size: 32, offset: 128)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5181, file: !95, line: 762, baseType: !1022, size: 32, offset: 160)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5181, file: !95, line: 763, baseType: !1022, size: 32, offset: 192)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5181, file: !95, line: 764, baseType: !1022, size: 32, offset: 224)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5181, file: !95, line: 765, baseType: !1022, size: 32, offset: 256)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5181, file: !95, line: 766, baseType: !1022, size: 32, offset: 288)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5181, file: !95, line: 767, baseType: !1022, size: 32, offset: 320)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5181, file: !95, line: 768, baseType: !1022, size: 32, offset: 352)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5181, file: !95, line: 769, baseType: !1022, size: 32, offset: 384)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5181, file: !95, line: 770, baseType: !1022, size: 32, offset: 416)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5181, file: !95, line: 771, baseType: !5197, size: 64, offset: 448)
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 64)
!5198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5199)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !95, line: 751, size: 96, elements: !5200)
!5200 = !{!5201, !5202, !5203}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5199, file: !95, line: 752, baseType: !1022, size: 32)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5199, file: !95, line: 753, baseType: !94, size: 32, offset: 32)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5199, file: !95, line: 754, baseType: !1022, size: 32, offset: 64)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5181, file: !95, line: 772, baseType: !1699, size: 192, offset: 512)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5181, file: !95, line: 773, baseType: !1123, size: 64, offset: 704)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5181, file: !95, line: 774, baseType: !5207, size: 64, offset: 768)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !95, line: 586, size: 2944, elements: !5209)
!5209 = !{!5210, !5211, !5212, !5213, !5214, !5226, !5227, !5229, !5230, !5231, !5232}
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5208, file: !95, line: 588, baseType: !312, size: 128)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5208, file: !95, line: 590, baseType: !1699, size: 192, offset: 128)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5208, file: !95, line: 591, baseType: !603, size: 32, offset: 320)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5208, file: !95, line: 592, baseType: !367, size: 64, offset: 384)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5208, file: !95, line: 597, baseType: !5215, size: 256, offset: 448)
!5215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5208, file: !95, line: 593, size: 256, elements: !5216)
!5216 = !{!5217, !5224, !5225}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5215, file: !95, line: 594, baseType: !5218, size: 112)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !95, line: 509, size: 112, elements: !5219)
!5219 = !{!5220, !5221, !5222}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5218, file: !95, line: 510, baseType: !829, size: 8)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5218, file: !95, line: 511, baseType: !829, size: 8, offset: 8)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5218, file: !95, line: 512, baseType: !5223, size: 96, offset: 16)
!5223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 96, elements: !4183)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5215, file: !95, line: 595, baseType: !626, size: 64, offset: 128)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5215, file: !95, line: 596, baseType: !806, size: 8, offset: 192)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5208, file: !95, line: 602, baseType: !1123, size: 64, offset: 704)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5208, file: !95, line: 604, baseType: !5228, size: 192, offset: 768)
!5228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 192, elements: !1626)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5208, file: !95, line: 606, baseType: !3431, size: 96, offset: 960)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5208, file: !95, line: 608, baseType: !626, size: 64, offset: 1088)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5208, file: !95, line: 609, baseType: !367, size: 64, offset: 1152)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5208, file: !95, line: 610, baseType: !5233, size: 1728, offset: 1216)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !95, line: 569, size: 1728, elements: !5234)
!5234 = !{!5235, !5236, !5237, !5241, !5242, !5248}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5233, file: !95, line: 570, baseType: !348, size: 64)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5233, file: !95, line: 571, baseType: !348, size: 64, offset: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5233, file: !95, line: 572, baseType: !5238, size: 1024, offset: 128)
!5238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 1024, elements: !5239)
!5239 = !{!5240}
!5240 = !DISubrange(count: 128)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5233, file: !95, line: 573, baseType: !320, size: 128, offset: 1152)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5233, file: !95, line: 574, baseType: !5243, size: 384, offset: 1280)
!5243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5244, line: 40, size: 384, elements: !5245)
!5244 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5245 = !{!5246}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5243, file: !5244, line: 41, baseType: !5247, size: 384)
!5247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 384, elements: !2697)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5233, file: !95, line: 575, baseType: !806, size: 8, offset: 1664)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5181, file: !95, line: 775, baseType: !125, size: 32, offset: 832)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5181, file: !95, line: 776, baseType: !159, size: 32, offset: 864)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5181, file: !95, line: 777, baseType: !806, size: 8, offset: 896)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5181, file: !95, line: 778, baseType: !806, size: 8, offset: 904)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5181, file: !95, line: 779, baseType: !806, size: 8, offset: 912)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5181, file: !95, line: 780, baseType: !806, size: 8, offset: 920)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5181, file: !95, line: 781, baseType: !806, size: 8, offset: 928)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5181, file: !95, line: 782, baseType: !806, size: 8, offset: 936)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5181, file: !95, line: 783, baseType: !200, size: 32, offset: 960)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5181, file: !95, line: 784, baseType: !312, size: 128, offset: 1024)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5181, file: !95, line: 786, baseType: !5173, size: 64, offset: 1152)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5181, file: !95, line: 788, baseType: !328, size: 64, offset: 1216)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5181, file: !95, line: 789, baseType: !5262, size: 64, offset: 1280)
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5181, file: !95, line: 790, baseType: !626, size: 64, offset: 1344)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5181, file: !95, line: 791, baseType: !5265, size: 64, offset: 1408)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !95, line: 734, size: 384, elements: !5267)
!5267 = !{!5268, !5269, !5270, !5271, !5279, !5280, !5281, !5282}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5266, file: !95, line: 735, baseType: !626, size: 64)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5266, file: !95, line: 736, baseType: !626, size: 64, offset: 64)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5266, file: !95, line: 737, baseType: !626, size: 64, offset: 128)
!5271 = !DIDerivedType(tag: DW_TAG_member, scope: !5266, file: !95, line: 738, baseType: !5272, size: 128, offset: 192)
!5272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5266, file: !95, line: 738, size: 128, elements: !5273)
!5273 = !{!5274}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5272, file: !95, line: 742, baseType: !5275, size: 128)
!5275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5272, file: !95, line: 739, size: 128, elements: !5276)
!5276 = !{!5277, !5278}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5275, file: !95, line: 740, baseType: !1345, size: 64)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5275, file: !95, line: 741, baseType: !1022, size: 32, offset: 64)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5266, file: !95, line: 744, baseType: !806, size: 8, offset: 320)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5266, file: !95, line: 745, baseType: !829, size: 8, offset: 328)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5266, file: !95, line: 746, baseType: !616, size: 16, offset: 336)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5266, file: !95, line: 747, baseType: !1022, size: 32, offset: 352)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5181, file: !95, line: 792, baseType: !1022, size: 32, offset: 1472)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5181, file: !95, line: 793, baseType: !5233, size: 1728, offset: 1536)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5181, file: !95, line: 794, baseType: !5286, size: 64, offset: 3264)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5288)
!5288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !95, line: 432, size: 64, elements: !5289)
!5289 = !{!5290}
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5288, file: !95, line: 433, baseType: !5291, size: 64)
!5291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5292, size: 64)
!5292 = !DISubroutineType(types: !5293)
!5293 = !{!7, !1123, !5119, !1146}
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5181, file: !95, line: 795, baseType: !5295, size: 64, offset: 3328)
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5181, file: !95, line: 796, baseType: !1699, size: 192, offset: 3392)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5181, file: !95, line: 797, baseType: !1123, size: 64, offset: 3584)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5181, file: !95, line: 798, baseType: !1987, size: 64, offset: 3648)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5181, file: !95, line: 799, baseType: !367, size: 64, offset: 3712)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5181, file: !95, line: 800, baseType: !5301, size: 128, offset: 3776)
!5301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1345, size: 128, elements: !2697)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5181, file: !95, line: 801, baseType: !303, size: 128, offset: 3904)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5181, file: !95, line: 805, baseType: !5304, size: 64, offset: 4032)
!5304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5305, size: 64)
!5305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !95, line: 478, size: 576, elements: !5306)
!5306 = !{!5307, !5308, !5309, !5312, !5313, !5314, !5315, !5316, !5317}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5305, file: !95, line: 479, baseType: !1123, size: 64)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5305, file: !95, line: 480, baseType: !326, size: 64, offset: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5305, file: !95, line: 481, baseType: !5310, size: 64, offset: 128)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !95, line: 209, flags: DIFlagFwdDecl)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5305, file: !95, line: 482, baseType: !626, size: 64, offset: 192)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5305, file: !95, line: 483, baseType: !320, size: 128, offset: 256)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5305, file: !95, line: 484, baseType: !806, size: 8, offset: 384)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5305, file: !95, line: 485, baseType: !806, size: 8, offset: 392)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5305, file: !95, line: 486, baseType: !626, size: 64, offset: 448)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5305, file: !95, line: 487, baseType: !1022, size: 32, offset: 512)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5181, file: !95, line: 806, baseType: !5319, size: 64, offset: 4096)
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5181, file: !95, line: 807, baseType: !5321, size: 64, offset: 4160)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !126, line: 4963, size: 64, elements: !5323)
!5323 = !{!5324, !5325}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5322, file: !126, line: 4964, baseType: !528, size: 32)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5322, file: !126, line: 4965, baseType: !528, size: 32, offset: 32)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5181, file: !95, line: 808, baseType: !5327, size: 64, offset: 4224)
!5327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!5328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !95, line: 724, size: 32, elements: !5329)
!5329 = !{!5330, !5331}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5328, file: !95, line: 725, baseType: !616, size: 16)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5328, file: !95, line: 726, baseType: !806, size: 8, offset: 16)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5181, file: !95, line: 815, baseType: !5333, size: 64, offset: 4288)
!5333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5334, size: 64)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !126, line: 4971, size: 128, elements: !5335)
!5335 = !{!5336, !5337, !5338, !5339}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5334, file: !126, line: 4972, baseType: !528, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5334, file: !126, line: 4973, baseType: !528, size: 32, offset: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5334, file: !126, line: 4974, baseType: !528, size: 32, offset: 64)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5334, file: !126, line: 4975, baseType: !528, size: 32, offset: 96)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5181, file: !95, line: 823, baseType: !1836, size: 64, offset: 4352)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5181, file: !95, line: 824, baseType: !1022, size: 32, offset: 4416)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5181, file: !95, line: 825, baseType: !1022, size: 32, offset: 4448)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5181, file: !95, line: 830, baseType: !1022, size: 32, offset: 4480)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5181, file: !95, line: 831, baseType: !1022, size: 32, offset: 4512)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5181, file: !95, line: 832, baseType: !5346, size: 64, offset: 4544)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 64)
!5347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5348, line: 17, size: 96, elements: !5349)
!5348 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5349 = !{!5350, !5351, !5352}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5347, file: !5348, line: 18, baseType: !7, size: 32)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5347, file: !5348, line: 18, baseType: !7, size: 32, offset: 32)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5347, file: !5348, line: 18, baseType: !7, size: 32, offset: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5181, file: !95, line: 833, baseType: !5354, size: 64, offset: 4608)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !95, line: 503, size: 128, align: 128, elements: !5356)
!5356 = !{!5357, !5358, !5359}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5355, file: !95, line: 504, baseType: !367, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5355, file: !95, line: 505, baseType: !367, size: 64, offset: 64)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5355, file: !95, line: 506, baseType: !3104, offset: 128)
!5360 = !DIDerivedType(tag: DW_TAG_member, scope: !5181, file: !95, line: 834, baseType: !5361, size: 256, offset: 4672)
!5361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5181, file: !95, line: 834, size: 256, elements: !5362)
!5362 = !{!5363, !5364}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5361, file: !95, line: 835, baseType: !2862, size: 256)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5361, file: !95, line: 836, baseType: !335, size: 128, align: 64)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1140, file: !95, line: 96, baseType: !5366, size: 64, offset: 1536)
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5367, size: 64)
!5367 = !DISubroutineType(types: !5368)
!5368 = !{null, !1345, !5180}
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1140, file: !95, line: 97, baseType: !5370, size: 64, offset: 1600)
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{null, !1345, !1022, !1123, !1123}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1140, file: !95, line: 101, baseType: !5374, size: 64, offset: 1664)
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!7, !5168, !5377, !1022}
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1140, file: !95, line: 103, baseType: !5379, size: 64, offset: 1728)
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 64)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{!7, !5168, !367, !2550}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1140, file: !95, line: 105, baseType: !5383, size: 64, offset: 1792)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5384, size: 64)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{!7, !1345, !2132}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1140, file: !95, line: 106, baseType: !5387, size: 64, offset: 1856)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{!4848, !1345, !1350, !4849}
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1140, file: !95, line: 110, baseType: !5391, size: 64, offset: 1920)
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 64)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!7, !5394, !626, !1022}
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !95, line: 38, flags: DIFlagFwdDecl)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1140, file: !95, line: 112, baseType: !5397, size: 64, offset: 1984)
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5398 = !DISubroutineType(types: !5399)
!5399 = !{null, !5394, !626, !1022}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1140, file: !95, line: 114, baseType: !5401, size: 64, offset: 2048)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = !DISubroutineType(types: !5403)
!5403 = !{!5404, !626}
!5404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5405, size: 64)
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5406, size: 64)
!5406 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !95, line: 37, flags: DIFlagFwdDecl)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1140, file: !95, line: 125, baseType: !5408, size: 64, offset: 2112)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = !DISubroutineType(types: !5410)
!5410 = !{!806, !5168, !5168}
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1140, file: !95, line: 129, baseType: !5412, size: 64, offset: 2176)
!5412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !328)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1140, file: !95, line: 130, baseType: !1036, size: 64, offset: 2240)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1140, file: !95, line: 133, baseType: !5415, size: 64, offset: 2304)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5417)
!5417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !95, line: 46, size: 256, elements: !5418)
!5418 = !{!5419, !5420, !5427, !5429}
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5417, file: !95, line: 47, baseType: !1720, size: 64)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5417, file: !95, line: 48, baseType: !5421, size: 64, offset: 64)
!5421 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !95, line: 43, baseType: !5422)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{!7, !626, !5425}
!5425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5426, size: 64)
!5426 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !95, line: 36, flags: DIFlagFwdDecl)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5417, file: !95, line: 49, baseType: !5428, size: 64, offset: 128)
!5428 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !95, line: 45, baseType: !1449)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5417, file: !95, line: 50, baseType: !1022, size: 32, offset: 192)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1135, file: !95, line: 146, baseType: !1345, size: 64, offset: 64)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1135, file: !95, line: 150, baseType: !207, size: 32, offset: 128)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1135, file: !95, line: 151, baseType: !1022, size: 32, offset: 160)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1135, file: !95, line: 152, baseType: !1022, size: 32, offset: 192)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1135, file: !95, line: 153, baseType: !1022, size: 32, offset: 224)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1135, file: !95, line: 154, baseType: !1022, size: 32, offset: 256)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1135, file: !95, line: 155, baseType: !7, size: 32, offset: 288)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1135, file: !95, line: 156, baseType: !1022, size: 32, offset: 320)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1135, file: !95, line: 157, baseType: !7, size: 32, offset: 352)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1135, file: !95, line: 158, baseType: !1022, size: 32, offset: 384)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1135, file: !95, line: 159, baseType: !1022, size: 32, offset: 416)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1135, file: !95, line: 160, baseType: !5319, size: 64, offset: 448)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1135, file: !95, line: 161, baseType: !5443, size: 128, offset: 512)
!5443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !95, line: 136, size: 128, elements: !5444)
!5444 = !{!5445, !5446}
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5443, file: !95, line: 137, baseType: !1022, size: 32)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5443, file: !95, line: 138, baseType: !1987, size: 64, offset: 64)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1135, file: !95, line: 162, baseType: !303, size: 128, offset: 640)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1135, file: !95, line: 163, baseType: !1022, size: 32, offset: 768)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1135, file: !95, line: 164, baseType: !806, size: 8, offset: 800)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1135, file: !95, line: 165, baseType: !806, size: 8, offset: 808)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1135, file: !95, line: 171, baseType: !409, size: 64, align: 512, offset: 1024)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1135, file: !95, line: 172, baseType: !409, size: 64, offset: 1088)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1135, file: !95, line: 173, baseType: !2862, size: 256, offset: 1152)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1135, file: !95, line: 174, baseType: !1699, size: 192, offset: 1408)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1135, file: !95, line: 175, baseType: !367, size: 64, offset: 1600)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1132, file: !95, line: 224, baseType: !326, size: 64, offset: 2048)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1132, file: !95, line: 225, baseType: !5458, size: 64, offset: 2112)
!5458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5459, size: 64)
!5459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5460)
!5460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !95, line: 212, size: 256, elements: !5461)
!5461 = !{!5462, !5466, !5467, !5471}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5460, file: !95, line: 213, baseType: !5463, size: 64)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 64)
!5464 = !DISubroutineType(types: !5465)
!5465 = !{!7, !1131, !626, !626}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5460, file: !95, line: 215, baseType: !5463, size: 64, offset: 64)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5460, file: !95, line: 217, baseType: !5468, size: 64, offset: 128)
!5468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5469, size: 64)
!5469 = !DISubroutineType(types: !5470)
!5470 = !{!7, !1131, !626, !626, !367}
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5460, file: !95, line: 219, baseType: !5472, size: 64, offset: 192)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{!7, !1131, !626}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1132, file: !95, line: 226, baseType: !626, size: 64, offset: 2176)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1132, file: !95, line: 227, baseType: !320, size: 128, offset: 2240)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1116, file: !6, line: 911, baseType: !5478, size: 128)
!5478 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1116, file: !6, line: 908, size: 128, elements: !5479)
!5479 = !{!5480, !5483}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5478, file: !6, line: 909, baseType: !5481, size: 64)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !6, line: 909, flags: DIFlagFwdDecl)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5478, file: !6, line: 910, baseType: !616, size: 16, offset: 64)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !434, file: !6, line: 1481, baseType: !5485, size: 64, offset: 4096)
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{!7, !326, !7, !5488, !1022}
!5488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5489, size: 64)
!5489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!5490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5491, line: 94, size: 256, elements: !5492)
!5491 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5492 = !{!5493, !5494, !5495, !5496, !5497, !5498, !5503}
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5490, file: !5491, line: 95, baseType: !626, size: 64)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5490, file: !5491, line: 96, baseType: !616, size: 16, offset: 64)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5490, file: !5491, line: 97, baseType: !616, size: 16, offset: 80)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5490, file: !5491, line: 98, baseType: !1022, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5490, file: !5491, line: 99, baseType: !1022, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5490, file: !5491, line: 103, baseType: !5499, size: 64, offset: 128)
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5491, line: 50, size: 64, elements: !5500)
!5500 = !{!5501, !5502}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5499, file: !5491, line: 51, baseType: !1022, size: 32)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5499, file: !5491, line: 52, baseType: !1022, size: 32, offset: 32)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5490, file: !5491, line: 104, baseType: !326, size: 64, offset: 192)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !434, file: !6, line: 1484, baseType: !5505, size: 64, offset: 4160)
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5506, size: 64)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!7, !326, !1022, !1022}
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !434, file: !6, line: 1486, baseType: !5509, size: 64, offset: 4224)
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 64)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{!5512, !326}
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !6, line: 1486, flags: DIFlagFwdDecl)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !434, file: !6, line: 1487, baseType: !5515, size: 64, offset: 4288)
!5515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5516, size: 64)
!5516 = !DISubroutineType(types: !5517)
!5517 = !{!7, !326, !5518, !7}
!5518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5519 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !6, line: 56, flags: DIFlagFwdDecl)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !434, file: !6, line: 1489, baseType: !5521, size: 64, offset: 4352)
!5521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5522, size: 64)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{!326, !326}
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !300, file: !6, line: 1917, baseType: !5525, size: 64, offset: 4032)
!5525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5526, size: 64)
!5526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5527)
!5527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !281, line: 421, size: 3904, elements: !5528)
!5528 = !{!5529, !5530, !5550, !5551, !5562, !5574, !5578, !5582, !5586, !5587, !5588, !5605, !5606, !5618, !5619, !5649, !5650, !5666, !5670, !5679, !5690, !5694, !5707, !5711, !5715, !5725, !5726, !5727, !5728, !5732, !5733, !5835, !5839, !5849, !5853, !5854, !5855, !5859, !5867, !5871, !5875, !5891, !5895, !5907, !5911, !5912, !5927, !5939, !5940, !5956, !5957, !5971, !5975, !5979, !5980, !6019, !6025, !6036, !6037, !6038, !6039}
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5527, file: !281, line: 422, baseType: !1022, size: 32)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5527, file: !281, line: 423, baseType: !5531, size: 64, offset: 64)
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5532, size: 64)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{null, !326, !5534}
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5535, size: 64)
!5535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !239, line: 177, size: 1568, elements: !5536)
!5536 = !{!5537, !5538, !5539, !5540, !5541, !5542, !5543, !5545, !5546, !5547, !5548, !5549}
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5535, file: !239, line: 178, baseType: !528, size: 32)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5535, file: !239, line: 179, baseType: !4645, size: 256, offset: 32)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5535, file: !239, line: 180, baseType: !4645, size: 256, offset: 288)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5535, file: !239, line: 181, baseType: !4645, size: 256, offset: 544)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5535, file: !239, line: 182, baseType: !4645, size: 256, offset: 800)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5535, file: !239, line: 183, baseType: !4645, size: 256, offset: 1056)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5535, file: !239, line: 184, baseType: !5544, size: 96, offset: 1312)
!5544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 96, elements: !4183)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5535, file: !239, line: 185, baseType: !528, size: 32, offset: 1408)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5535, file: !239, line: 186, baseType: !528, size: 32, offset: 1440)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5535, file: !239, line: 187, baseType: !528, size: 32, offset: 1472)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5535, file: !239, line: 188, baseType: !528, size: 32, offset: 1504)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5535, file: !239, line: 189, baseType: !528, size: 32, offset: 1536)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5527, file: !281, line: 424, baseType: !437, size: 64, offset: 128)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5527, file: !281, line: 425, baseType: !5552, size: 64, offset: 192)
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!5553 = !DISubroutineType(types: !5554)
!5554 = !{null, !326, !5555, !626}
!5555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5556, size: 64)
!5556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !239, line: 310, size: 96, elements: !5557)
!5557 = !{!5558, !5559, !5560, !5561}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5556, file: !239, line: 311, baseType: !528, size: 32)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5556, file: !239, line: 312, baseType: !528, size: 32, offset: 32)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5556, file: !239, line: 313, baseType: !528, size: 32, offset: 64)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5556, file: !239, line: 314, baseType: !515, offset: 96)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5527, file: !281, line: 426, baseType: !5563, size: 64, offset: 256)
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = !DISubroutineType(types: !5565)
!5565 = !{null, !326, !5566}
!5566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 64)
!5567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !239, line: 203, size: 160, elements: !5568)
!5568 = !{!5569, !5570, !5571, !5572}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5567, file: !239, line: 204, baseType: !528, size: 32)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5567, file: !239, line: 205, baseType: !528, size: 32, offset: 32)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5567, file: !239, line: 206, baseType: !528, size: 32, offset: 64)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5567, file: !239, line: 207, baseType: !5573, size: 48, offset: 96)
!5573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 48, elements: !1034)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5527, file: !281, line: 427, baseType: !5575, size: 64, offset: 320)
!5575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 64)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!7, !326, !5566}
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5527, file: !281, line: 428, baseType: !5579, size: 64, offset: 384)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!1022, !326}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5527, file: !281, line: 429, baseType: !5583, size: 64, offset: 448)
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{null, !326, !1022}
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5527, file: !281, line: 430, baseType: !437, size: 64, offset: 512)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5527, file: !281, line: 431, baseType: !5579, size: 64, offset: 576)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5527, file: !281, line: 432, baseType: !5589, size: 64, offset: 640)
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 64)
!5590 = !DISubroutineType(types: !5591)
!5591 = !{!7, !326, !5592}
!5592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5593, size: 64)
!5593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !281, line: 93, size: 64, elements: !5594)
!5594 = !{!5595, !5596}
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5593, file: !281, line: 94, baseType: !238, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, scope: !5593, file: !281, line: 95, baseType: !5597, size: 32, offset: 32)
!5597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5593, file: !281, line: 95, size: 32, elements: !5598)
!5598 = !{!5599, !5600, !5601, !5602, !5603, !5604}
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5597, file: !281, line: 96, baseType: !251, size: 32)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5597, file: !281, line: 97, baseType: !259, size: 32)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5597, file: !281, line: 98, baseType: !265, size: 32)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5597, file: !281, line: 99, baseType: !272, size: 32)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5597, file: !281, line: 100, baseType: !276, size: 32)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5597, file: !281, line: 101, baseType: !829, size: 8)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5527, file: !281, line: 434, baseType: !437, size: 64, offset: 704)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5527, file: !281, line: 435, baseType: !5607, size: 64, offset: 768)
!5607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5608, size: 64)
!5608 = !DISubroutineType(types: !5609)
!5609 = !{!7, !326, !5610, !828}
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !239, line: 335, size: 128, elements: !5612)
!5612 = !{!5613, !5614, !5615, !5616, !5617}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5611, file: !239, line: 336, baseType: !528, size: 32)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5611, file: !239, line: 337, baseType: !528, size: 32, offset: 32)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5611, file: !239, line: 338, baseType: !528, size: 32, offset: 64)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5611, file: !239, line: 339, baseType: !528, size: 32, offset: 96)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5611, file: !239, line: 340, baseType: !515, offset: 128)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5527, file: !281, line: 437, baseType: !5607, size: 64, offset: 832)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5527, file: !281, line: 439, baseType: !5620, size: 64, offset: 896)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!7, !326, !5623}
!5623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5624, size: 64)
!5624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !239, line: 462, size: 736, elements: !5625)
!5625 = !{!5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643, !5644, !5645, !5646, !5647, !5648}
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5624, file: !239, line: 463, baseType: !528, size: 32)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5624, file: !239, line: 464, baseType: !528, size: 32, offset: 32)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5624, file: !239, line: 465, baseType: !528, size: 32, offset: 64)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5624, file: !239, line: 466, baseType: !528, size: 32, offset: 96)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5624, file: !239, line: 467, baseType: !528, size: 32, offset: 128)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5624, file: !239, line: 468, baseType: !528, size: 32, offset: 160)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5624, file: !239, line: 469, baseType: !528, size: 32, offset: 192)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5624, file: !239, line: 470, baseType: !528, size: 32, offset: 224)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5624, file: !239, line: 471, baseType: !528, size: 32, offset: 256)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5624, file: !239, line: 472, baseType: !528, size: 32, offset: 288)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5624, file: !239, line: 473, baseType: !528, size: 32, offset: 320)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5624, file: !239, line: 474, baseType: !528, size: 32, offset: 352)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5624, file: !239, line: 475, baseType: !528, size: 32, offset: 384)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5624, file: !239, line: 476, baseType: !528, size: 32, offset: 416)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5624, file: !239, line: 477, baseType: !528, size: 32, offset: 448)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5624, file: !239, line: 478, baseType: !528, size: 32, offset: 480)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5624, file: !239, line: 479, baseType: !528, size: 32, offset: 512)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5624, file: !239, line: 480, baseType: !528, size: 32, offset: 544)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5624, file: !239, line: 481, baseType: !528, size: 32, offset: 576)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5624, file: !239, line: 482, baseType: !528, size: 32, offset: 608)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5624, file: !239, line: 483, baseType: !528, size: 32, offset: 640)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5624, file: !239, line: 484, baseType: !528, size: 32, offset: 672)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5624, file: !239, line: 485, baseType: !528, size: 32, offset: 704)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5527, file: !281, line: 440, baseType: !5620, size: 64, offset: 960)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5527, file: !281, line: 441, baseType: !5651, size: 64, offset: 1024)
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 64)
!5652 = !DISubroutineType(types: !5653)
!5653 = !{null, !326, !5654}
!5654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5655, size: 64)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !239, line: 513, size: 288, elements: !5656)
!5656 = !{!5657, !5658, !5659, !5660, !5661, !5662, !5663, !5664, !5665}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5655, file: !239, line: 514, baseType: !528, size: 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5655, file: !239, line: 515, baseType: !528, size: 32, offset: 32)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5655, file: !239, line: 516, baseType: !528, size: 32, offset: 64)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5655, file: !239, line: 517, baseType: !528, size: 32, offset: 96)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5655, file: !239, line: 518, baseType: !528, size: 32, offset: 128)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5655, file: !239, line: 519, baseType: !528, size: 32, offset: 160)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5655, file: !239, line: 520, baseType: !528, size: 32, offset: 192)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5655, file: !239, line: 521, baseType: !528, size: 32, offset: 224)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5655, file: !239, line: 522, baseType: !528, size: 32, offset: 256)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5527, file: !281, line: 443, baseType: !5667, size: 64, offset: 1088)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{!7, !326, !5654}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5527, file: !281, line: 445, baseType: !5671, size: 64, offset: 1152)
!5671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5672, size: 64)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{null, !326, !5674}
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 64)
!5675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !281, line: 260, size: 128, elements: !5676)
!5676 = !{!5677, !5678}
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5675, file: !281, line: 261, baseType: !367, size: 64)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5675, file: !281, line: 262, baseType: !367, size: 64, offset: 64)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5527, file: !281, line: 447, baseType: !5680, size: 64, offset: 1216)
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{null, !326, !5683}
!5683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5684, size: 64)
!5684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !239, line: 575, size: 128, elements: !5685)
!5685 = !{!5686, !5687, !5688, !5689}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5684, file: !239, line: 576, baseType: !528, size: 32)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5684, file: !239, line: 577, baseType: !528, size: 32, offset: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5684, file: !239, line: 578, baseType: !528, size: 32, offset: 64)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5684, file: !239, line: 579, baseType: !528, size: 32, offset: 96)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5527, file: !281, line: 449, baseType: !5691, size: 64, offset: 1280)
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5692, size: 64)
!5692 = !DISubroutineType(types: !5693)
!5693 = !{!7, !326, !5683}
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5527, file: !281, line: 451, baseType: !5695, size: 64, offset: 1344)
!5695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5696, size: 64)
!5696 = !DISubroutineType(types: !5697)
!5697 = !{null, !326, !5698, !5377}
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !239, line: 770, size: 128, elements: !5700)
!5700 = !{!5701, !5702, !5703, !5704, !5705}
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5699, file: !239, line: 771, baseType: !528, size: 32)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5699, file: !239, line: 772, baseType: !528, size: 32, offset: 32)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5699, file: !239, line: 773, baseType: !528, size: 32, offset: 64)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5699, file: !239, line: 774, baseType: !528, size: 32, offset: 96)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5699, file: !239, line: 775, baseType: !5706, offset: 128)
!5706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !369, elements: !518)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5527, file: !281, line: 452, baseType: !5708, size: 64, offset: 1408)
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 64)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{null, !326, !1022, !828}
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5527, file: !281, line: 453, baseType: !5712, size: 64, offset: 1472)
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 64)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!7, !326, !280}
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5527, file: !281, line: 454, baseType: !5716, size: 64, offset: 1536)
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64)
!5717 = !DISubroutineType(types: !5718)
!5718 = !{null, !326, !5719, !5377}
!5719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5720, size: 64)
!5720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !239, line: 789, size: 64, elements: !5721)
!5721 = !{!5722, !5723, !5724}
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5720, file: !239, line: 790, baseType: !528, size: 32)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5720, file: !239, line: 791, baseType: !528, size: 32, offset: 32)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5720, file: !239, line: 792, baseType: !5706, offset: 64)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5527, file: !281, line: 456, baseType: !437, size: 64, offset: 1600)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5527, file: !281, line: 457, baseType: !441, size: 64, offset: 1664)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5527, file: !281, line: 458, baseType: !5579, size: 64, offset: 1728)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5527, file: !281, line: 459, baseType: !5729, size: 64, offset: 1792)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!7, !326, !1022}
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5527, file: !281, line: 460, baseType: !757, size: 64, offset: 1856)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5527, file: !281, line: 461, baseType: !5734, size: 64, offset: 1920)
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{!7, !326, !5737, !2550}
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !239, line: 1088, size: 1536, elements: !5739)
!5739 = !{!5740, !5741, !5742, !5743, !5829, !5834}
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5738, file: !239, line: 1089, baseType: !528, size: 32)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5738, file: !239, line: 1090, baseType: !528, size: 32, offset: 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5738, file: !239, line: 1091, baseType: !369, size: 64, offset: 64)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !5738, file: !239, line: 1092, baseType: !5744, size: 1344, offset: 128)
!5744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !239, line: 992, size: 1344, elements: !5745)
!5745 = !{!5746, !5747, !5815, !5825, !5826, !5827, !5828}
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5744, file: !239, line: 993, baseType: !528, size: 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !5744, file: !239, line: 994, baseType: !5748, size: 416, offset: 32)
!5748 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !239, line: 939, size: 416, elements: !5749)
!5749 = !{!5750, !5758, !5759, !5760, !5767, !5768, !5777, !5785, !5786, !5787, !5794, !5795, !5803, !5811}
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !5748, file: !239, line: 940, baseType: !5751, size: 128)
!5751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !239, line: 845, size: 128, elements: !5752)
!5752 = !{!5753, !5754, !5755, !5756, !5757}
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5751, file: !239, line: 846, baseType: !3241, size: 32)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5751, file: !239, line: 847, baseType: !3241, size: 32, offset: 32)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5751, file: !239, line: 848, baseType: !570, size: 16, offset: 64)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5751, file: !239, line: 849, baseType: !570, size: 16, offset: 80)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5751, file: !239, line: 850, baseType: !516, size: 8, offset: 96)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !5748, file: !239, line: 941, baseType: !5751, size: 128)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !5748, file: !239, line: 942, baseType: !5751, size: 128)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !5748, file: !239, line: 943, baseType: !5761, size: 128)
!5761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !239, line: 862, size: 128, elements: !5762)
!5762 = !{!5763, !5764, !5765, !5766}
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5761, file: !239, line: 863, baseType: !3241, size: 32)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5761, file: !239, line: 864, baseType: !3241, size: 32, offset: 32)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5761, file: !239, line: 865, baseType: !3241, size: 32, offset: 64)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5761, file: !239, line: 866, baseType: !516, size: 8, offset: 96)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !5748, file: !239, line: 944, baseType: !5761, size: 128)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !5748, file: !239, line: 945, baseType: !5769, size: 128)
!5769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !239, line: 880, size: 128, elements: !5770)
!5770 = !{!5771, !5772, !5773, !5774, !5775, !5776}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5769, file: !239, line: 881, baseType: !3241, size: 32)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5769, file: !239, line: 882, baseType: !3241, size: 32, offset: 32)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5769, file: !239, line: 883, baseType: !3241, size: 32, offset: 64)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5769, file: !239, line: 884, baseType: !516, size: 8, offset: 96)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !5769, file: !239, line: 885, baseType: !516, size: 8, offset: 104)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !5769, file: !239, line: 886, baseType: !516, size: 8, offset: 112)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !5748, file: !239, line: 946, baseType: !5778, size: 320)
!5778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !239, line: 899, size: 320, elements: !5779)
!5779 = !{!5780, !5781, !5782, !5783, !5784}
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5778, file: !239, line: 900, baseType: !3262, size: 128)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5778, file: !239, line: 901, baseType: !3262, size: 128, offset: 128)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5778, file: !239, line: 902, baseType: !570, size: 16, offset: 256)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5778, file: !239, line: 903, baseType: !570, size: 16, offset: 272)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5778, file: !239, line: 904, baseType: !516, size: 8, offset: 288)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !5748, file: !239, line: 947, baseType: !5778, size: 320)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !5748, file: !239, line: 948, baseType: !5778, size: 320)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !5748, file: !239, line: 949, baseType: !5788, size: 320)
!5788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !239, line: 916, size: 320, elements: !5789)
!5789 = !{!5790, !5791, !5792, !5793}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5788, file: !239, line: 917, baseType: !3262, size: 128)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5788, file: !239, line: 918, baseType: !3262, size: 128, offset: 128)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5788, file: !239, line: 919, baseType: !3241, size: 32, offset: 256)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5788, file: !239, line: 920, baseType: !516, size: 8, offset: 288)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !5748, file: !239, line: 950, baseType: !5788, size: 320)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !5748, file: !239, line: 951, baseType: !5796, size: 320)
!5796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !239, line: 931, size: 320, elements: !5797)
!5797 = !{!5798, !5799, !5800, !5801, !5802}
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5796, file: !239, line: 932, baseType: !3262, size: 128)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5796, file: !239, line: 933, baseType: !3262, size: 128, offset: 128)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5796, file: !239, line: 934, baseType: !3241, size: 32, offset: 256)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5796, file: !239, line: 935, baseType: !516, size: 8, offset: 288)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !5796, file: !239, line: 936, baseType: !516, size: 8, offset: 296)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !5748, file: !239, line: 952, baseType: !5804, size: 112)
!5804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !5805, line: 164, size: 112, elements: !5806)
!5805 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!5806 = !{!5807, !5809, !5810}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5804, file: !5805, line: 165, baseType: !5808, size: 48)
!5808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 48, elements: !1034)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !5804, file: !5805, line: 166, baseType: !5808, size: 48, offset: 48)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !5804, file: !5805, line: 167, baseType: !570, size: 16, offset: 96)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !5748, file: !239, line: 953, baseType: !5812, size: 416)
!5812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 416, elements: !5813)
!5813 = !{!5814}
!5814 = !DISubrange(count: 52)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !5744, file: !239, line: 995, baseType: !5816, size: 160, offset: 448)
!5816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !239, line: 967, size: 160, elements: !5817)
!5817 = !{!5818, !5820, !5821, !5822, !5823}
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5816, file: !239, line: 968, baseType: !5819, size: 16)
!5819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 16, elements: !2697)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5816, file: !239, line: 969, baseType: !5808, size: 48, offset: 16)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !5816, file: !239, line: 970, baseType: !570, size: 16, offset: 64)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !5816, file: !239, line: 971, baseType: !570, size: 16, offset: 80)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5816, file: !239, line: 972, baseType: !5824, size: 64, offset: 96)
!5824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3241, size: 64, elements: !2697)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !5744, file: !239, line: 996, baseType: !5748, size: 416, offset: 608)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !5744, file: !239, line: 997, baseType: !5816, size: 160, offset: 1024)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !5744, file: !239, line: 998, baseType: !369, size: 64, offset: 1216)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !5744, file: !239, line: 999, baseType: !528, size: 32, offset: 1280)
!5829 = !DIDerivedType(tag: DW_TAG_member, scope: !5738, file: !239, line: 1093, baseType: !5830, size: 32, offset: 1472)
!5830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5738, file: !239, line: 1093, size: 32, elements: !5831)
!5831 = !{!5832, !5833}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !5830, file: !239, line: 1094, baseType: !528, size: 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !5830, file: !239, line: 1095, baseType: !528, size: 32)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !5738, file: !239, line: 1097, baseType: !527, offset: 1504)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5527, file: !281, line: 463, baseType: !5836, size: 64, offset: 1984)
!5836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5837, size: 64)
!5837 = !DISubroutineType(types: !5838)
!5838 = !{!7, !326, !5737}
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5527, file: !281, line: 464, baseType: !5840, size: 64, offset: 2048)
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5841, size: 64)
!5841 = !DISubroutineType(types: !5842)
!5842 = !{!7, !326, !5843}
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5844, size: 64)
!5844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !239, line: 1217, size: 1088, elements: !5845)
!5845 = !{!5846, !5847, !5848}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5844, file: !239, line: 1218, baseType: !528, size: 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !5844, file: !239, line: 1219, baseType: !528, size: 32, offset: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5844, file: !239, line: 1220, baseType: !5238, size: 1024, offset: 64)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5527, file: !281, line: 465, baseType: !5850, size: 64, offset: 2112)
!5850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5851, size: 64)
!5851 = !DISubroutineType(types: !5852)
!5852 = !{!7, !326, !2550}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5527, file: !281, line: 466, baseType: !5579, size: 64, offset: 2176)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5527, file: !281, line: 467, baseType: !5579, size: 64, offset: 2240)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5527, file: !281, line: 468, baseType: !5856, size: 64, offset: 2304)
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 64)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!7, !326, !2550, !828, !828}
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5527, file: !281, line: 470, baseType: !5860, size: 64, offset: 2368)
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5861, size: 64)
!5861 = !DISubroutineType(types: !5862)
!5862 = !{!7, !326, !5863, !5865, !5866}
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5864, size: 64)
!5864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5527, file: !281, line: 472, baseType: !5868, size: 64, offset: 2432)
!5868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5869, size: 64)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!7, !326, !2550, !828, !828, !1022}
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5527, file: !281, line: 474, baseType: !5872, size: 64, offset: 2496)
!5872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 64)
!5873 = !DISubroutineType(types: !5874)
!5874 = !{!7, !326, !5863, !5865, !5866, !2550, !806}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5527, file: !281, line: 477, baseType: !5876, size: 64, offset: 2560)
!5876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5877, size: 64)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{null, !326, !5879}
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5880, size: 64)
!5880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !239, line: 541, size: 288, elements: !5881)
!5881 = !{!5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890}
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5880, file: !239, line: 542, baseType: !528, size: 32)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !5880, file: !239, line: 543, baseType: !528, size: 32, offset: 32)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !5880, file: !239, line: 544, baseType: !528, size: 32, offset: 64)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !5880, file: !239, line: 545, baseType: !528, size: 32, offset: 96)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !5880, file: !239, line: 546, baseType: !528, size: 32, offset: 128)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !5880, file: !239, line: 547, baseType: !528, size: 32, offset: 160)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !5880, file: !239, line: 548, baseType: !528, size: 32, offset: 192)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !5880, file: !239, line: 549, baseType: !528, size: 32, offset: 224)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !5880, file: !239, line: 550, baseType: !528, size: 32, offset: 256)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5527, file: !281, line: 478, baseType: !5892, size: 64, offset: 2624)
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 64)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!7, !326, !5879}
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5527, file: !281, line: 479, baseType: !5896, size: 64, offset: 2688)
!5896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5897, size: 64)
!5897 = !DISubroutineType(types: !5898)
!5898 = !{!7, !326, !5899}
!5899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5900, size: 64)
!5900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !239, line: 1237, size: 128, elements: !5901)
!5901 = !{!5902, !5903, !5904, !5905, !5906}
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5900, file: !239, line: 1238, baseType: !528, size: 32)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5900, file: !239, line: 1239, baseType: !528, size: 32, offset: 32)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5900, file: !239, line: 1240, baseType: !528, size: 32, offset: 64)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5900, file: !239, line: 1241, baseType: !528, size: 32, offset: 96)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5900, file: !239, line: 1242, baseType: !515, offset: 128)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5527, file: !281, line: 480, baseType: !5908, size: 64, offset: 2752)
!5908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5909, size: 64)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!7, !326, !5899, !626}
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5527, file: !281, line: 482, baseType: !5896, size: 64, offset: 2816)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5527, file: !281, line: 483, baseType: !5913, size: 64, offset: 2880)
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 64)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!7, !326, !5916}
!5916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5917, size: 64)
!5917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !239, line: 1317, size: 352, elements: !5918)
!5918 = !{!5919, !5920, !5921, !5922, !5923, !5925, !5926}
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5917, file: !239, line: 1318, baseType: !528, size: 32)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !5917, file: !239, line: 1319, baseType: !528, size: 32, offset: 32)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !5917, file: !239, line: 1320, baseType: !977, size: 32, offset: 64)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !5917, file: !239, line: 1321, baseType: !528, size: 32, offset: 96)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !5917, file: !239, line: 1322, baseType: !5924, size: 96, offset: 128)
!5924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 96, elements: !1626)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !5917, file: !239, line: 1323, baseType: !528, size: 32, offset: 224)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !5917, file: !239, line: 1324, baseType: !5924, size: 96, offset: 256)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5527, file: !281, line: 484, baseType: !5928, size: 64, offset: 2944)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 64)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!7, !326, !5931}
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5932, size: 64)
!5932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !239, line: 382, size: 352, elements: !5933)
!5933 = !{!5934, !5935, !5936, !5937}
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5932, file: !239, line: 383, baseType: !528, size: 32)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5932, file: !239, line: 384, baseType: !528, size: 32, offset: 32)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !5932, file: !239, line: 385, baseType: !528, size: 32, offset: 64)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5932, file: !239, line: 386, baseType: !5938, size: 256, offset: 96)
!5938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 256, elements: !2467)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5527, file: !281, line: 486, baseType: !5607, size: 64, offset: 3008)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5527, file: !281, line: 488, baseType: !5941, size: 64, offset: 3072)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!7, !326, !5944}
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5945, size: 64)
!5945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !239, line: 360, size: 320, elements: !5946)
!5946 = !{!5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5955}
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5945, file: !239, line: 361, baseType: !528, size: 32)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5945, file: !239, line: 362, baseType: !528, size: 32, offset: 32)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !5945, file: !239, line: 363, baseType: !528, size: 32, offset: 64)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !5945, file: !239, line: 364, baseType: !528, size: 32, offset: 96)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !5945, file: !239, line: 365, baseType: !528, size: 32, offset: 128)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !5945, file: !239, line: 366, baseType: !528, size: 32, offset: 160)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !5945, file: !239, line: 367, baseType: !528, size: 32, offset: 192)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !5945, file: !239, line: 368, baseType: !528, size: 32, offset: 224)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5945, file: !239, line: 369, baseType: !2696, size: 64, offset: 256)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5527, file: !281, line: 489, baseType: !5941, size: 64, offset: 3136)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5527, file: !281, line: 490, baseType: !5958, size: 64, offset: 3200)
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5959, size: 64)
!5959 = !DISubroutineType(types: !5960)
!5960 = !{!7, !326, !5961, !626}
!5961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5962, size: 64)
!5962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5963)
!5963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !239, line: 244, size: 128, elements: !5964)
!5964 = !{!5965, !5966, !5967, !5968, !5969}
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5963, file: !239, line: 245, baseType: !528, size: 32)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5963, file: !239, line: 246, baseType: !528, size: 32, offset: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5963, file: !239, line: 247, baseType: !528, size: 32, offset: 64)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5963, file: !239, line: 248, baseType: !528, size: 32, offset: 96)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5963, file: !239, line: 249, baseType: !5970, offset: 128)
!5970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, elements: !518)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5527, file: !281, line: 492, baseType: !5972, size: 64, offset: 3264)
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 64)
!5973 = !DISubroutineType(types: !5974)
!5974 = !{!7, !326, !5961, !3291}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5527, file: !281, line: 494, baseType: !5976, size: 64, offset: 3328)
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{!7, !326, !1022, !5623}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5527, file: !281, line: 496, baseType: !5976, size: 64, offset: 3392)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5527, file: !281, line: 498, baseType: !5981, size: 64, offset: 3456)
!5981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5982, size: 64)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!7, !326, !5984}
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !281, line: 124, size: 768, elements: !5986)
!5986 = !{!5987, !6012}
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5985, file: !281, line: 125, baseType: !5988, size: 384)
!5988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !239, line: 1996, size: 384, elements: !5989)
!5989 = !{!5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998, !5999, !6002, !6003, !6004, !6005, !6007, !6011}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5988, file: !239, line: 1997, baseType: !528, size: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5988, file: !239, line: 1998, baseType: !528, size: 32, offset: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !5988, file: !239, line: 1999, baseType: !516, size: 8, offset: 64)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5988, file: !239, line: 2000, baseType: !516, size: 8, offset: 72)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !5988, file: !239, line: 2001, baseType: !516, size: 8, offset: 80)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5988, file: !239, line: 2002, baseType: !516, size: 8, offset: 88)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !5988, file: !239, line: 2003, baseType: !516, size: 8, offset: 96)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !5988, file: !239, line: 2004, baseType: !516, size: 8, offset: 104)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !5988, file: !239, line: 2005, baseType: !516, size: 8, offset: 112)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !5988, file: !239, line: 2006, baseType: !6000, size: 8, offset: 120)
!6000 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !370, line: 20, baseType: !6001)
!6001 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !5988, file: !239, line: 2007, baseType: !516, size: 8, offset: 128)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !5988, file: !239, line: 2008, baseType: !516, size: 8, offset: 136)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !5988, file: !239, line: 2009, baseType: !516, size: 8, offset: 144)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5988, file: !239, line: 2010, baseType: !6006, size: 8, offset: 152)
!6006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 8, elements: !2506)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5988, file: !239, line: 2011, baseType: !6008, size: 224, offset: 160)
!6008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 224, elements: !6009)
!6009 = !{!6010}
!6010 = !DISubrange(count: 7)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !5988, file: !239, line: 2012, baseType: !527, offset: 384)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !5985, file: !281, line: 130, baseType: !6013, size: 384, offset: 384)
!6013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5985, file: !281, line: 126, size: 384, elements: !6014)
!6014 = !{!6015, !6017, !6018}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6013, file: !281, line: 127, baseType: !6016, size: 128)
!6016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 128, elements: !2697)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6013, file: !281, line: 128, baseType: !6016, size: 128, offset: 128)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6013, file: !281, line: 129, baseType: !6016, size: 128, offset: 256)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5527, file: !281, line: 500, baseType: !6020, size: 64, offset: 3520)
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{!7, !326, !6023}
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 64)
!6024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5985)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5527, file: !281, line: 502, baseType: !6026, size: 64, offset: 3584)
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = !DISubroutineType(types: !6028)
!6028 = !{!7, !326, !6029}
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!6030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !239, line: 1389, size: 128, elements: !6031)
!6031 = !{!6032, !6033, !6034, !6035}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6030, file: !239, line: 1390, baseType: !528, size: 32)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6030, file: !239, line: 1392, baseType: !528, size: 32, offset: 32)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6030, file: !239, line: 1393, baseType: !528, size: 32, offset: 64)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6030, file: !239, line: 1394, baseType: !528, size: 32, offset: 96)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5527, file: !281, line: 504, baseType: !6026, size: 64, offset: 3648)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5527, file: !281, line: 506, baseType: !5716, size: 64, offset: 3712)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5527, file: !281, line: 508, baseType: !5958, size: 64, offset: 3776)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5527, file: !281, line: 510, baseType: !5972, size: 64, offset: 3840)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !300, file: !6, line: 1922, baseType: !6041, size: 64, offset: 4096)
!6041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6042, size: 64)
!6042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6043)
!6043 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !6, line: 1922, flags: DIFlagFwdDecl)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !300, file: !6, line: 1933, baseType: !6045, size: 64, offset: 4160)
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6046, size: 64)
!6046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6047)
!6047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !6, line: 270, size: 384, elements: !6048)
!6048 = !{!6049, !6053, !6059, !6072, !6076, !6080}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6047, file: !6, line: 271, baseType: !6050, size: 64)
!6050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 64)
!6051 = !DISubroutineType(types: !6052)
!6052 = !{!7, !451, !326, !511, !3291, !3291, !13}
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6047, file: !6, line: 274, baseType: !6054, size: 64, offset: 64)
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!7, !6057, !599}
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6047, file: !6, line: 275, baseType: !6060, size: 64, offset: 128)
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!7, !6063, !6065, !570}
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 64)
!6064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !6, line: 244, size: 832, elements: !6067)
!6067 = !{!6068, !6069, !6070}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6066, file: !6, line: 245, baseType: !13, size: 32)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6066, file: !6, line: 246, baseType: !3358, size: 32, offset: 32)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6066, file: !6, line: 254, baseType: !6071, size: 768, offset: 64)
!6071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 768, elements: !4183)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6047, file: !6, line: 276, baseType: !6073, size: 64, offset: 192)
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 64)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{null, !6065, !808, !981}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6047, file: !6, line: 279, baseType: !6077, size: 64, offset: 256)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6078, size: 64)
!6078 = !DISubroutineType(types: !6079)
!6079 = !{!806, !328, !13}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6047, file: !6, line: 280, baseType: !6081, size: 64, offset: 320)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6082, size: 64)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{!570, !6057}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !300, file: !6, line: 1935, baseType: !13, size: 32, offset: 4224)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !300, file: !6, line: 1936, baseType: !13, size: 32, offset: 4256)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !300, file: !6, line: 1938, baseType: !511, size: 16, offset: 4288)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !300, file: !6, line: 1939, baseType: !511, size: 16, offset: 4304)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !300, file: !6, line: 1941, baseType: !517, size: 8, offset: 4320)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !300, file: !6, line: 1942, baseType: !517, size: 8, offset: 4328)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !300, file: !6, line: 1944, baseType: !517, size: 8, offset: 4336)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !300, file: !6, line: 1945, baseType: !517, size: 8, offset: 4344)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !300, file: !6, line: 1952, baseType: !13, size: 32, offset: 4352)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !300, file: !6, line: 1953, baseType: !13, size: 32, offset: 4384)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !300, file: !6, line: 1954, baseType: !13, size: 32, offset: 4416)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !300, file: !6, line: 1955, baseType: !511, size: 16, offset: 4448)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !300, file: !6, line: 1956, baseType: !511, size: 16, offset: 4464)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !300, file: !6, line: 1957, baseType: !517, size: 8, offset: 4480)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !300, file: !6, line: 1958, baseType: !517, size: 8, offset: 4488)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !300, file: !6, line: 1960, baseType: !511, size: 16, offset: 4496)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !300, file: !6, line: 1961, baseType: !511, size: 16, offset: 4512)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !300, file: !6, line: 1964, baseType: !1066, size: 256, offset: 4528)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !300, file: !6, line: 1965, baseType: !517, size: 8, offset: 4784)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !300, file: !6, line: 1966, baseType: !517, size: 8, offset: 4792)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !300, file: !6, line: 1967, baseType: !517, size: 8, offset: 4800)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !300, file: !6, line: 1968, baseType: !517, size: 8, offset: 4808)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !300, file: !6, line: 1970, baseType: !511, size: 16, offset: 4816)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !300, file: !6, line: 1971, baseType: !511, size: 16, offset: 4832)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !300, file: !6, line: 1972, baseType: !511, size: 16, offset: 4848)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !300, file: !6, line: 1973, baseType: !1704, offset: 4864)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !300, file: !6, line: 1975, baseType: !6111, size: 192, offset: 4864)
!6111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !6, line: 224, size: 192, elements: !6112)
!6112 = !{!6113, !6114}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6111, file: !6, line: 225, baseType: !320, size: 128)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6111, file: !6, line: 226, baseType: !7, size: 32, offset: 128)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !300, file: !6, line: 1976, baseType: !6111, size: 192, offset: 5056)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !300, file: !6, line: 1977, baseType: !6111, size: 192, offset: 5248)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !300, file: !6, line: 1980, baseType: !6118, size: 64, offset: 5440)
!6118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6119, size: 64)
!6119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6120, line: 192, size: 704, elements: !6121)
!6120 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6121 = !{!6122, !6123, !6124, !6359}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6119, file: !6120, line: 193, baseType: !320, size: 128)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6119, file: !6120, line: 194, baseType: !1704, offset: 128)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6119, file: !6120, line: 195, baseType: !6125, size: 512, offset: 128)
!6125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6120, line: 64, size: 512, elements: !6126)
!6126 = !{!6127, !6128, !6129, !6131, !6132, !6228, !6349, !6354, !6355, !6356, !6357, !6358}
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6125, file: !6120, line: 65, baseType: !328, size: 64)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6125, file: !6120, line: 66, baseType: !320, size: 128, offset: 64)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6125, file: !6120, line: 67, baseType: !6130, size: 64, offset: 192)
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6125, size: 64)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6125, file: !6120, line: 68, baseType: !6118, size: 64, offset: 256)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6125, file: !6120, line: 69, baseType: !6133, size: 64, offset: 320)
!6133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6134, size: 64)
!6134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6120, line: 138, size: 448, elements: !6135)
!6135 = !{!6136, !6140, !6159, !6161, !6194, !6220, !6224}
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6134, file: !6120, line: 139, baseType: !6137, size: 64)
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6138, size: 64)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{null, !6130}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6134, file: !6120, line: 140, baseType: !6141, size: 64, offset: 64)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 64)
!6142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6143)
!6143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6144, line: 230, size: 128, elements: !6145)
!6144 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6145 = !{!6146, !6155}
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6143, file: !6144, line: 231, baseType: !6147, size: 64)
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 64)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{!1555, !6130, !6150, !1073}
!6150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6151, size: 64)
!6151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6144, line: 30, size: 128, elements: !6152)
!6152 = !{!6153, !6154}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6151, file: !6144, line: 31, baseType: !328, size: 64)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6151, file: !6144, line: 32, baseType: !1413, size: 16, offset: 64)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6143, file: !6144, line: 232, baseType: !6156, size: 64, offset: 64)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6157, size: 64)
!6157 = !DISubroutineType(types: !6158)
!6158 = !{!1555, !6130, !6150, !328, !1074}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6134, file: !6120, line: 141, baseType: !6160, size: 64, offset: 128)
!6160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6150, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6134, file: !6120, line: 142, baseType: !6162, size: 64, offset: 192)
!6162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6163, size: 64)
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6164, size: 64)
!6164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6165)
!6165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6144, line: 84, size: 320, elements: !6166)
!6166 = !{!6167, !6168, !6172, !6191, !6192}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6165, file: !6144, line: 85, baseType: !328, size: 64)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6165, file: !6144, line: 86, baseType: !6169, size: 64, offset: 64)
!6169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6170, size: 64)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{!1413, !6130, !6150, !7}
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6165, file: !6144, line: 88, baseType: !6173, size: 64, offset: 128)
!6173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6174, size: 64)
!6174 = !DISubroutineType(types: !6175)
!6175 = !{!1413, !6130, !6176, !7}
!6176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6177, size: 64)
!6177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6144, line: 168, size: 448, elements: !6178)
!6178 = !{!6179, !6180, !6181, !6182, !6186, !6187}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6177, file: !6144, line: 169, baseType: !6151, size: 128)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6177, file: !6144, line: 170, baseType: !1074, size: 64, offset: 128)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6177, file: !6144, line: 171, baseType: !626, size: 64, offset: 192)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6177, file: !6144, line: 172, baseType: !6183, size: 64, offset: 256)
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 64)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!1555, !1350, !6130, !6176, !1073, !1510, !1074}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6177, file: !6144, line: 174, baseType: !6183, size: 64, offset: 320)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6177, file: !6144, line: 176, baseType: !6188, size: 64, offset: 384)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6189, size: 64)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{!7, !1350, !6130, !6176, !2132}
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6165, file: !6144, line: 90, baseType: !6160, size: 64, offset: 192)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6165, file: !6144, line: 91, baseType: !6193, size: 64, offset: 256)
!6193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6176, size: 64)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6134, file: !6120, line: 143, baseType: !6195, size: 64, offset: 256)
!6195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 64)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!6198, !6130}
!6198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6199, size: 64)
!6199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6200)
!6200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !288, line: 39, size: 384, elements: !6201)
!6201 = !{!6202, !6203, !6207, !6211, !6215, !6219}
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6200, file: !288, line: 40, baseType: !287, size: 32)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6200, file: !288, line: 41, baseType: !6204, size: 64, offset: 64)
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 64)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!806}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6200, file: !288, line: 42, baseType: !6208, size: 64, offset: 128)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 64)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{!626}
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6200, file: !288, line: 43, baseType: !6212, size: 64, offset: 192)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 64)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!3291, !481}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6200, file: !288, line: 44, baseType: !6216, size: 64, offset: 256)
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 64)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!3291}
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6200, file: !288, line: 45, baseType: !1449, size: 64, offset: 320)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6134, file: !6120, line: 144, baseType: !6221, size: 64, offset: 320)
!6221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6222, size: 64)
!6222 = !DISubroutineType(types: !6223)
!6223 = !{!3291, !6130}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6134, file: !6120, line: 145, baseType: !6225, size: 64, offset: 384)
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 64)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{null, !6130, !2937, !2938}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6125, file: !6120, line: 70, baseType: !6229, size: 64, offset: 384)
!6229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6230, size: 64)
!6230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1599, line: 123, size: 1024, elements: !6231)
!6231 = !{!6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6342, !6343, !6344, !6345, !6346}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6230, file: !1599, line: 124, baseType: !419, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6230, file: !1599, line: 125, baseType: !419, size: 32, offset: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6230, file: !1599, line: 135, baseType: !6229, size: 64, offset: 64)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6230, file: !1599, line: 136, baseType: !328, size: 64, offset: 128)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6230, file: !1599, line: 138, baseType: !469, size: 192, align: 64, offset: 192)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6230, file: !1599, line: 140, baseType: !3291, size: 64, offset: 384)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6230, file: !1599, line: 141, baseType: !13, size: 32, offset: 448)
!6239 = !DIDerivedType(tag: DW_TAG_member, scope: !6230, file: !1599, line: 142, baseType: !6240, size: 256, offset: 512)
!6240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6230, file: !1599, line: 142, size: 256, elements: !6241)
!6241 = !{!6242, !6282, !6286}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6240, file: !1599, line: 143, baseType: !6243, size: 192)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1599, line: 91, size: 192, elements: !6244)
!6244 = !{!6245, !6246, !6247}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6243, file: !1599, line: 92, baseType: !348, size: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6243, file: !1599, line: 94, baseType: !1784, size: 64, offset: 64)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6243, file: !1599, line: 100, baseType: !6248, size: 64, offset: 128)
!6248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6249, size: 64)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1599, line: 180, size: 704, elements: !6250)
!6250 = !{!6251, !6252, !6253, !6254, !6255, !6256, !6280, !6281}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6249, file: !1599, line: 182, baseType: !6229, size: 64)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6249, file: !1599, line: 183, baseType: !13, size: 32, offset: 64)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6249, file: !1599, line: 186, baseType: !3034, size: 192, offset: 128)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6249, file: !1599, line: 187, baseType: !1022, size: 32, offset: 320)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6249, file: !1599, line: 188, baseType: !1022, size: 32, offset: 352)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6249, file: !1599, line: 189, baseType: !6257, size: 64, offset: 384)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1599, line: 168, size: 320, elements: !6259)
!6259 = !{!6260, !6264, !6268, !6272, !6276}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6258, file: !1599, line: 169, baseType: !6261, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 64)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!7, !1687, !6248}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6258, file: !1599, line: 171, baseType: !6265, size: 64, offset: 64)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!7, !6229, !328, !1413}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6258, file: !1599, line: 173, baseType: !6269, size: 64, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6270, size: 64)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!7, !6229}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6258, file: !1599, line: 174, baseType: !6273, size: 64, offset: 192)
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6274, size: 64)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{!7, !6229, !6229, !328}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6258, file: !1599, line: 176, baseType: !6277, size: 64, offset: 256)
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 64)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{!7, !1687, !6229, !6248}
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6249, file: !1599, line: 192, baseType: !320, size: 128, offset: 448)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6249, file: !1599, line: 194, baseType: !1923, size: 128, offset: 576)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6240, file: !1599, line: 144, baseType: !6283, size: 64)
!6283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1599, line: 103, size: 64, elements: !6284)
!6284 = !{!6285}
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6283, file: !1599, line: 104, baseType: !6229, size: 64)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6240, file: !1599, line: 145, baseType: !6287, size: 256)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1599, line: 107, size: 256, elements: !6288)
!6288 = !{!6289, !6337, !6340, !6341}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6287, file: !1599, line: 108, baseType: !6290, size: 64)
!6290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6291, size: 64)
!6291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6292)
!6292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1599, line: 217, size: 768, elements: !6293)
!6293 = !{!6294, !6314, !6318, !6319, !6320, !6321, !6322, !6326, !6327, !6328, !6329, !6333}
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6292, file: !1599, line: 222, baseType: !6295, size: 64)
!6295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6296, size: 64)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!7, !6298}
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 64)
!6299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1599, line: 197, size: 1088, elements: !6300)
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313}
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6299, file: !1599, line: 199, baseType: !6229, size: 64)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6299, file: !1599, line: 200, baseType: !1350, size: 64, offset: 64)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6299, file: !1599, line: 201, baseType: !1687, size: 64, offset: 128)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6299, file: !1599, line: 202, baseType: !626, size: 64, offset: 192)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6299, file: !1599, line: 205, baseType: !1699, size: 192, offset: 256)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6299, file: !1599, line: 206, baseType: !1699, size: 192, offset: 448)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6299, file: !1599, line: 207, baseType: !7, size: 32, offset: 640)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6299, file: !1599, line: 208, baseType: !320, size: 128, offset: 704)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6299, file: !1599, line: 209, baseType: !1073, size: 64, offset: 832)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6299, file: !1599, line: 211, baseType: !1074, size: 64, offset: 896)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6299, file: !1599, line: 212, baseType: !806, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6299, file: !1599, line: 213, baseType: !806, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6299, file: !1599, line: 214, baseType: !2160, size: 64, offset: 1024)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6292, file: !1599, line: 223, baseType: !6315, size: 64, offset: 64)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 64)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !6298}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6292, file: !1599, line: 236, baseType: !1738, size: 64, offset: 128)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6292, file: !1599, line: 238, baseType: !1725, size: 64, offset: 192)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6292, file: !1599, line: 239, baseType: !1734, size: 64, offset: 256)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6292, file: !1599, line: 240, baseType: !1730, size: 64, offset: 320)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6292, file: !1599, line: 242, baseType: !6323, size: 64, offset: 384)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!1555, !6298, !1073, !1074, !1510}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6292, file: !1599, line: 252, baseType: !1074, size: 64, offset: 448)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6292, file: !1599, line: 259, baseType: !806, size: 8, offset: 512)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6292, file: !1599, line: 260, baseType: !6323, size: 64, offset: 576)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6292, file: !1599, line: 263, baseType: !6330, size: 64, offset: 640)
!6330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6331, size: 64)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!4848, !6298, !4849}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6292, file: !1599, line: 266, baseType: !6334, size: 64, offset: 704)
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6335, size: 64)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!7, !6298, !2132}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6287, file: !1599, line: 109, baseType: !6338, size: 64, offset: 64)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 64)
!6339 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1599, line: 31, flags: DIFlagFwdDecl)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6287, file: !1599, line: 110, baseType: !1510, size: 64, offset: 128)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6287, file: !1599, line: 111, baseType: !6229, size: 64, offset: 192)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6230, file: !1599, line: 148, baseType: !626, size: 64, offset: 768)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6230, file: !1599, line: 154, baseType: !367, size: 64, offset: 832)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6230, file: !1599, line: 156, baseType: !511, size: 16, offset: 896)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6230, file: !1599, line: 157, baseType: !1413, size: 16, offset: 912)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6230, file: !1599, line: 158, baseType: !6347, size: 64, offset: 960)
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 64)
!6348 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1599, line: 32, flags: DIFlagFwdDecl)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6125, file: !6120, line: 71, baseType: !6350, size: 32, offset: 448)
!6350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6351, line: 19, size: 32, elements: !6352)
!6351 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6352 = !{!6353}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6350, file: !6351, line: 20, baseType: !603, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6125, file: !6120, line: 75, baseType: !13, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6125, file: !6120, line: 76, baseType: !13, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6125, file: !6120, line: 77, baseType: !13, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6125, file: !6120, line: 78, baseType: !13, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6125, file: !6120, line: 79, baseType: !13, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6119, file: !6120, line: 196, baseType: !6360, size: 64, offset: 640)
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6362)
!6362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6120, line: 156, size: 192, elements: !6363)
!6363 = !{!6364, !6369, !6374}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6362, file: !6120, line: 157, baseType: !6365, size: 64)
!6365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6366)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!7, !6118, !6130}
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6362, file: !6120, line: 158, baseType: !6370, size: 64, offset: 64)
!6370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6371)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!328, !6118, !6130}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6362, file: !6120, line: 159, baseType: !6375, size: 64, offset: 128)
!6375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6376)
!6376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 64)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!7, !6118, !6130, !6379}
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 64)
!6380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6120, line: 148, size: 20736, elements: !6381)
!6381 = !{!6382, !6384, !6386, !6387, !6391}
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6380, file: !6120, line: 149, baseType: !6383, size: 192)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1073, size: 192, elements: !1626)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6380, file: !6120, line: 150, baseType: !6385, size: 4096, offset: 192)
!6385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1073, size: 4096, elements: !3845)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6380, file: !6120, line: 151, baseType: !7, size: 32, offset: 4288)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6380, file: !6120, line: 152, baseType: !6388, size: 16384, offset: 4320)
!6388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 16384, elements: !6389)
!6389 = !{!6390}
!6390 = !DISubrange(count: 2048)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6380, file: !6120, line: 153, baseType: !7, size: 32, offset: 20704)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !300, file: !6, line: 1985, baseType: !13, size: 32, offset: 5504)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !300, file: !6, line: 1986, baseType: !13, size: 32, offset: 5536)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !300, file: !6, line: 1987, baseType: !806, size: 8, offset: 5568)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !300, file: !6, line: 1996, baseType: !6396, size: 64, offset: 5632)
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6397, size: 64)
!6397 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !6, line: 1996, flags: DIFlagFwdDecl)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !300, file: !6, line: 2007, baseType: !6399, size: 64, offset: 5696)
!6399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6400, size: 64)
!6400 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !6, line: 2007, flags: DIFlagFwdDecl)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !300, file: !6, line: 2011, baseType: !6402, size: 64, offset: 5760)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !6, line: 2011, flags: DIFlagFwdDecl)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !300, file: !6, line: 2015, baseType: !6405, size: 64, offset: 5824)
!6405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6406, size: 64)
!6406 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !6, line: 62, flags: DIFlagFwdDecl)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !300, file: !6, line: 2016, baseType: !6408, size: 64, offset: 5888)
!6408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!6409 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !6, line: 64, flags: DIFlagFwdDecl)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !300, file: !6, line: 2025, baseType: !599, size: 64, offset: 5952)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !300, file: !6, line: 2027, baseType: !6412, size: 64, offset: 6016)
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !6, line: 736, size: 1536, elements: !6414)
!6414 = !{!6415, !6416, !6417}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6413, file: !6, line: 741, baseType: !6125, size: 512)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6413, file: !6, line: 742, baseType: !326, size: 64, offset: 512)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !6413, file: !6, line: 743, baseType: !6418, size: 512, align: 512, offset: 1024)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5491, line: 57, size: 512, align: 512, elements: !6419)
!6419 = !{!6420, !6421, !6422, !6423}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6418, file: !5491, line: 58, baseType: !326, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !6418, file: !5491, line: 59, baseType: !1022, size: 32, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !6418, file: !5491, line: 60, baseType: !1022, size: 32, offset: 96)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6418, file: !5491, line: 61, baseType: !5499, size: 64, offset: 128)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !300, file: !6, line: 2028, baseType: !13, size: 32, offset: 6080)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !300, file: !6, line: 2029, baseType: !13, size: 32, offset: 6112)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !300, file: !6, line: 2031, baseType: !1123, size: 64, offset: 6144)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !300, file: !6, line: 2032, baseType: !348, size: 64, offset: 6208)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !300, file: !6, line: 2033, baseType: !7, size: 32, offset: 6272)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !300, file: !6, line: 2034, baseType: !6430, size: 64, offset: 6336)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !6, line: 430, baseType: !6432)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{!6434, !6435}
!6434 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !6, line: 429, baseType: !293)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !300, file: !6, line: 2035, baseType: !626, size: 64, offset: 6400)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !300, file: !6, line: 2040, baseType: !6438, size: 64, offset: 6464)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !6, line: 584, size: 1600, elements: !6440)
!6440 = !{!6441, !6442, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453, !6454}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6439, file: !6, line: 588, baseType: !326, size: 64)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !6439, file: !6, line: 589, baseType: !6443, size: 64, offset: 64)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6444 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !6, line: 589, flags: DIFlagFwdDecl)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !6439, file: !6, line: 590, baseType: !6443, size: 64, offset: 128)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6439, file: !6, line: 592, baseType: !6125, size: 512, offset: 192)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !6439, file: !6, line: 597, baseType: !348, size: 64, offset: 704)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !6439, file: !6, line: 602, baseType: !348, size: 64, offset: 768)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !6439, file: !6, line: 605, baseType: !326, size: 64, offset: 832)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !6439, file: !6, line: 612, baseType: !1704, offset: 896)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !6439, file: !6, line: 613, baseType: !7, size: 32, offset: 896)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !6439, file: !6, line: 617, baseType: !348, size: 64, offset: 960)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6439, file: !6, line: 619, baseType: !348, size: 64, offset: 1024)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !6439, file: !6, line: 622, baseType: !6455, size: 512, offset: 1088)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !6456, line: 43, size: 512, elements: !6457)
!6456 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!6457 = !{!6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470}
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !6455, file: !6456, line: 45, baseType: !13, size: 32)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !6455, file: !6456, line: 46, baseType: !13, size: 32, offset: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !6455, file: !6456, line: 47, baseType: !13, size: 32, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6455, file: !6456, line: 51, baseType: !13, size: 32, offset: 96)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !6455, file: !6456, line: 52, baseType: !13, size: 32, offset: 128)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !6455, file: !6456, line: 54, baseType: !13, size: 32, offset: 160)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !6455, file: !6456, line: 55, baseType: !13, size: 32, offset: 192)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !6455, file: !6456, line: 56, baseType: !13, size: 32, offset: 224)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !6455, file: !6456, line: 58, baseType: !13, size: 32, offset: 256)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !6455, file: !6456, line: 59, baseType: !348, size: 64, offset: 320)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !6455, file: !6456, line: 62, baseType: !13, size: 32, offset: 384)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !6455, file: !6456, line: 63, baseType: !13, size: 32, offset: 416)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !6455, file: !6456, line: 64, baseType: !13, size: 32, offset: 448)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !300, file: !6, line: 2045, baseType: !1066, size: 256, offset: 6528)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !300, file: !6, line: 2049, baseType: !312, size: 128, offset: 6784)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !300, file: !6, line: 2054, baseType: !6438, size: 64, offset: 6912)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !300, file: !6, line: 2055, baseType: !13, size: 32, offset: 6976)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !300, file: !6, line: 2056, baseType: !13, size: 32, offset: 7008)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !300, file: !6, line: 2057, baseType: !6443, size: 64, offset: 7040)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !300, file: !6, line: 2058, baseType: !13, size: 32, offset: 7104)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !300, file: !6, line: 2059, baseType: !1704, offset: 7136)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !300, file: !6, line: 2061, baseType: !6480, size: 64, offset: 7168)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !6, line: 879, flags: DIFlagFwdDecl)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !300, file: !6, line: 2075, baseType: !3268, size: 320, offset: 7232)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !300, file: !6, line: 2076, baseType: !7, size: 32, offset: 7552)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !300, file: !6, line: 2078, baseType: !1022, size: 32, offset: 7584)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !300, file: !6, line: 2080, baseType: !320, size: 128, offset: 7616)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !300, file: !6, line: 2081, baseType: !1036, size: 64, offset: 7744)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !300, file: !6, line: 2083, baseType: !320, size: 128, offset: 7808)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !300, file: !6, line: 2091, baseType: !299, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !300, file: !6, line: 2093, baseType: !806, size: 8, offset: 7944)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !300, file: !6, line: 2098, baseType: !6491, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!6491 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !300, file: !6, line: 2095, baseType: !13, size: 32, elements: !6492)
!6492 = !{!6493, !6494}
!6493 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!6494 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !300, file: !6, line: 2100, baseType: !806, size: 8, offset: 7968)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !300, file: !6, line: 2101, baseType: !441, size: 64, offset: 8000)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !300, file: !6, line: 2107, baseType: !6498, size: 64, offset: 8064)
!6498 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !3017, line: 318, baseType: !6499)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3017, line: 314, size: 64, elements: !6500)
!6500 = !{!6501}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6499, file: !3017, line: 316, baseType: !3015, size: 64)
!6502 = !DIDerivedType(tag: DW_TAG_member, scope: !300, file: !6, line: 2110, baseType: !6503, size: 64, offset: 8128)
!6503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !300, file: !6, line: 2110, size: 64, elements: !6504)
!6504 = !{!6505, !6506, !6527, !6536}
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !6503, file: !6, line: 2111, baseType: !626, size: 64)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !6503, file: !6, line: 2112, baseType: !6507, size: 64)
!6507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6508, size: 64)
!6508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !6, line: 2542, size: 128, align: 128, elements: !6509)
!6509 = !{!6510, !6525, !6526}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !6508, file: !6, line: 2543, baseType: !6511, size: 64)
!6511 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3105, line: 79, baseType: !6512)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3105, line: 77, size: 64, elements: !6513)
!6513 = !{!6514}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6512, file: !3105, line: 78, baseType: !6515, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !6516, line: 26, baseType: !6517)
!6516 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6516, line: 24, size: 64, elements: !6518)
!6518 = !{!6519}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6517, file: !6516, line: 25, baseType: !6520, size: 64)
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !6521, line: 12, baseType: !6522)
!6521 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!6522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6521, line: 10, size: 64, elements: !6523)
!6523 = !{!6524}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6522, file: !6521, line: 11, baseType: !407, size: 64)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6508, file: !6, line: 2544, baseType: !6511, size: 64, offset: 64)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6508, file: !6, line: 2545, baseType: !3104, offset: 128)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !6503, file: !6, line: 2113, baseType: !6528, size: 64)
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 64)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !6, line: 2534, size: 256, align: 256, elements: !6530)
!6530 = !{!6531, !6532, !6533, !6534, !6535}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6529, file: !6, line: 2535, baseType: !367, size: 64)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6529, file: !6, line: 2536, baseType: !367, size: 64, offset: 64)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6529, file: !6, line: 2537, baseType: !367, size: 64, offset: 128)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6529, file: !6, line: 2538, baseType: !367, size: 64, offset: 192)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6529, file: !6, line: 2539, baseType: !3104, offset: 256)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !6503, file: !6, line: 2114, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 64)
!6538 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !6, line: 2114, flags: DIFlagFwdDecl)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !300, file: !6, line: 2124, baseType: !6540, size: 5568, offset: 8192)
!6540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !6541, line: 461, size: 5568, elements: !6542)
!6541 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!6542 = !{!6543, !6544, !6546, !6549, !6550, !6602, !6694, !6695, !6696, !6697, !6698, !6713, !6820, !6833, !6836, !6837, !6841, !6842, !6843, !6844, !6848, !6854, !6855, !6858, !6862, !6952, !6953, !6954, !6955, !6956, !6988, !6989, !6990, !6993, !6996, !6997, !6998, !6999}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6540, file: !6541, line: 462, baseType: !6125, size: 512)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6540, file: !6541, line: 463, baseType: !6545, size: 64, offset: 512)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6540, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6540, file: !6541, line: 465, baseType: !6547, size: 64, offset: 576)
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 64)
!6548 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !6541, line: 36, flags: DIFlagFwdDecl)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !6540, file: !6541, line: 467, baseType: !328, size: 64, offset: 640)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6540, file: !6541, line: 468, baseType: !6551, size: 64, offset: 704)
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6553)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !6541, line: 87, size: 384, elements: !6554)
!6554 = !{!6555, !6556, !6557, !6561, !6566, !6570}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6553, file: !6541, line: 88, baseType: !328, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6553, file: !6541, line: 89, baseType: !6162, size: 64, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6553, file: !6541, line: 90, baseType: !6558, size: 64, offset: 128)
!6558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6559, size: 64)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{!7, !6545, !6379}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6553, file: !6541, line: 91, baseType: !6562, size: 64, offset: 192)
!6562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6563, size: 64)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{!1073, !6545, !6565, !2937, !2938}
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6553, file: !6541, line: 93, baseType: !6567, size: 64, offset: 256)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 64)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !6545}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6553, file: !6541, line: 95, baseType: !6571, size: 64, offset: 320)
!6571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6572, size: 64)
!6572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6573)
!6573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6574, line: 278, size: 1472, elements: !6575)
!6574 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6575 = !{!6576, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6573, file: !6574, line: 279, baseType: !6577, size: 64)
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6578, size: 64)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!7, !6545}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6573, file: !6574, line: 280, baseType: !6567, size: 64, offset: 64)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6573, file: !6574, line: 281, baseType: !6577, size: 64, offset: 128)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6573, file: !6574, line: 282, baseType: !6577, size: 64, offset: 192)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6573, file: !6574, line: 283, baseType: !6577, size: 64, offset: 256)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6573, file: !6574, line: 284, baseType: !6577, size: 64, offset: 320)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6573, file: !6574, line: 285, baseType: !6577, size: 64, offset: 384)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6573, file: !6574, line: 286, baseType: !6577, size: 64, offset: 448)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6573, file: !6574, line: 287, baseType: !6577, size: 64, offset: 512)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6573, file: !6574, line: 288, baseType: !6577, size: 64, offset: 576)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6573, file: !6574, line: 289, baseType: !6577, size: 64, offset: 640)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6573, file: !6574, line: 290, baseType: !6577, size: 64, offset: 704)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6573, file: !6574, line: 291, baseType: !6577, size: 64, offset: 768)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6573, file: !6574, line: 292, baseType: !6577, size: 64, offset: 832)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6573, file: !6574, line: 293, baseType: !6577, size: 64, offset: 896)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6573, file: !6574, line: 294, baseType: !6577, size: 64, offset: 960)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6573, file: !6574, line: 295, baseType: !6577, size: 64, offset: 1024)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6573, file: !6574, line: 296, baseType: !6577, size: 64, offset: 1088)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6573, file: !6574, line: 297, baseType: !6577, size: 64, offset: 1152)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6573, file: !6574, line: 298, baseType: !6577, size: 64, offset: 1216)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6573, file: !6574, line: 299, baseType: !6577, size: 64, offset: 1280)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6573, file: !6574, line: 300, baseType: !6577, size: 64, offset: 1344)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6573, file: !6574, line: 301, baseType: !6577, size: 64, offset: 1408)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6540, file: !6541, line: 470, baseType: !6603, size: 64, offset: 768)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6605, line: 82, size: 1408, elements: !6606)
!6605 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612, !6613, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6689, !6692, !6693}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6604, file: !6605, line: 83, baseType: !328, size: 64)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6604, file: !6605, line: 84, baseType: !328, size: 64, offset: 64)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6604, file: !6605, line: 85, baseType: !6545, size: 64, offset: 128)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6604, file: !6605, line: 86, baseType: !6162, size: 64, offset: 192)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6604, file: !6605, line: 87, baseType: !6162, size: 64, offset: 256)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6604, file: !6605, line: 88, baseType: !6162, size: 64, offset: 320)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6604, file: !6605, line: 90, baseType: !6614, size: 64, offset: 384)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{!7, !6545, !6617}
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6619, line: 95, size: 1152, elements: !6620)
!6619 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6620 = !{!6621, !6622, !6623, !6624, !6625, !6626, !6632, !6642, !6653, !6654, !6655, !6656, !6657, !6665, !6666, !6667, !6668, !6669, !6670}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6618, file: !6619, line: 96, baseType: !328, size: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6618, file: !6619, line: 97, baseType: !6603, size: 64, offset: 64)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6618, file: !6619, line: 99, baseType: !1015, size: 64, offset: 128)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6618, file: !6619, line: 100, baseType: !328, size: 64, offset: 192)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6618, file: !6619, line: 102, baseType: !806, size: 8, offset: 256)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6618, file: !6619, line: 103, baseType: !6627, size: 32, offset: 288)
!6627 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6619, line: 44, baseType: !13, size: 32, elements: !6628)
!6628 = !{!6629, !6630, !6631}
!6629 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6630 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6631 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6618, file: !6619, line: 105, baseType: !6633, size: 64, offset: 320)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6635)
!6635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6636, line: 262, size: 1600, elements: !6637)
!6636 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6637 = !{!6638, !6639, !6640, !6641}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6635, file: !6636, line: 263, baseType: !4645, size: 256)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6635, file: !6636, line: 264, baseType: !4645, size: 256, offset: 256)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6635, file: !6636, line: 265, baseType: !5238, size: 1024, offset: 512)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6635, file: !6636, line: 266, baseType: !3291, size: 64, offset: 1536)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6618, file: !6619, line: 106, baseType: !6643, size: 64, offset: 384)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6645)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6636, line: 210, size: 256, elements: !6646)
!6646 = !{!6647, !6649, !6651, !6652}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6645, file: !6636, line: 211, baseType: !6648, size: 72)
!6648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 72, elements: !3120)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6645, file: !6636, line: 212, baseType: !6650, size: 64, offset: 128)
!6650 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6636, line: 14, baseType: !348)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6645, file: !6636, line: 213, baseType: !528, size: 32, offset: 192)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6645, file: !6636, line: 214, baseType: !528, size: 32, offset: 224)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6618, file: !6619, line: 108, baseType: !6577, size: 64, offset: 448)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6618, file: !6619, line: 109, baseType: !6567, size: 64, offset: 512)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6618, file: !6619, line: 110, baseType: !6577, size: 64, offset: 576)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6618, file: !6619, line: 111, baseType: !6567, size: 64, offset: 640)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6618, file: !6619, line: 112, baseType: !6658, size: 64, offset: 704)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 64)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!7, !6545, !6661}
!6661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6574, line: 52, baseType: !6662)
!6662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6574, line: 50, size: 32, elements: !6663)
!6663 = !{!6664}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6662, file: !6574, line: 51, baseType: !7, size: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6618, file: !6619, line: 113, baseType: !6577, size: 64, offset: 768)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6618, file: !6619, line: 114, baseType: !6162, size: 64, offset: 832)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6618, file: !6619, line: 115, baseType: !6162, size: 64, offset: 896)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6618, file: !6619, line: 117, baseType: !6571, size: 64, offset: 960)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6618, file: !6619, line: 118, baseType: !6567, size: 64, offset: 1024)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6618, file: !6619, line: 120, baseType: !6671, size: 64, offset: 1088)
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6619, line: 120, flags: DIFlagFwdDecl)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6604, file: !6605, line: 91, baseType: !6558, size: 64, offset: 448)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6604, file: !6605, line: 92, baseType: !6577, size: 64, offset: 512)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6604, file: !6605, line: 93, baseType: !6567, size: 64, offset: 576)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6604, file: !6605, line: 94, baseType: !6577, size: 64, offset: 640)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6604, file: !6605, line: 95, baseType: !6567, size: 64, offset: 704)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6604, file: !6605, line: 97, baseType: !6577, size: 64, offset: 768)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6604, file: !6605, line: 98, baseType: !6577, size: 64, offset: 832)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6604, file: !6605, line: 100, baseType: !6658, size: 64, offset: 896)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6604, file: !6605, line: 101, baseType: !6577, size: 64, offset: 960)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6604, file: !6605, line: 103, baseType: !6577, size: 64, offset: 1024)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6604, file: !6605, line: 105, baseType: !6577, size: 64, offset: 1088)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6604, file: !6605, line: 107, baseType: !6571, size: 64, offset: 1152)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6604, file: !6605, line: 109, baseType: !6686, size: 64, offset: 1216)
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 64)
!6687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6688)
!6688 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6605, line: 109, flags: DIFlagFwdDecl)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6604, file: !6605, line: 111, baseType: !6690, size: 64, offset: 1280)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 64)
!6691 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6605, line: 111, flags: DIFlagFwdDecl)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6604, file: !6605, line: 112, baseType: !1619, offset: 1344)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6604, file: !6605, line: 114, baseType: !806, size: 8, offset: 1344)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6540, file: !6541, line: 471, baseType: !6617, size: 64, offset: 832)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !6540, file: !6541, line: 473, baseType: !626, size: 64, offset: 896)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6540, file: !6541, line: 475, baseType: !626, size: 64, offset: 960)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6540, file: !6541, line: 480, baseType: !1699, size: 192, offset: 1024)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !6540, file: !6541, line: 484, baseType: !6699, size: 576, offset: 1216)
!6699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !6541, line: 361, size: 576, elements: !6700)
!6700 = !{!6701, !6702, !6703, !6704, !6705, !6706}
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6699, file: !6541, line: 362, baseType: !320, size: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6699, file: !6541, line: 363, baseType: !320, size: 128, offset: 128)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6699, file: !6541, line: 364, baseType: !320, size: 128, offset: 256)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6699, file: !6541, line: 365, baseType: !320, size: 128, offset: 384)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6699, file: !6541, line: 366, baseType: !806, size: 8, offset: 512)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6699, file: !6541, line: 367, baseType: !6707, size: 32, offset: 544)
!6707 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !6541, line: 343, baseType: !13, size: 32, elements: !6708)
!6708 = !{!6709, !6710, !6711, !6712}
!6709 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6710 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6711 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6712 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !6540, file: !6541, line: 485, baseType: !6714, size: 2304, offset: 1792)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6574, line: 565, size: 2304, elements: !6715)
!6715 = !{!6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781, !6782, !6790, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6813, !6817}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6714, file: !6574, line: 566, baseType: !6661, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6714, file: !6574, line: 567, baseType: !13, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6714, file: !6574, line: 568, baseType: !13, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6714, file: !6574, line: 569, baseType: !806, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6714, file: !6574, line: 570, baseType: !806, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6714, file: !6574, line: 571, baseType: !806, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6714, file: !6574, line: 572, baseType: !806, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6714, file: !6574, line: 573, baseType: !806, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6714, file: !6574, line: 574, baseType: !806, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6714, file: !6574, line: 575, baseType: !806, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6714, file: !6574, line: 576, baseType: !806, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6714, file: !6574, line: 577, baseType: !1022, size: 32, offset: 64)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6714, file: !6574, line: 578, baseType: !1704, offset: 96)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6714, file: !6574, line: 580, baseType: !320, size: 128, offset: 128)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6714, file: !6574, line: 581, baseType: !2630, size: 192, offset: 256)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6714, file: !6574, line: 582, baseType: !6732, size: 64, offset: 448)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6734, line: 43, size: 1472, elements: !6735)
!6734 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6735 = !{!6736, !6737, !6738, !6739, !6740, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6733, file: !6734, line: 44, baseType: !328, size: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6733, file: !6734, line: 45, baseType: !7, size: 32, offset: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6733, file: !6734, line: 46, baseType: !320, size: 128, offset: 128)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6733, file: !6734, line: 47, baseType: !1704, offset: 256)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6733, file: !6734, line: 48, baseType: !6741, size: 64, offset: 256)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6742 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6574, line: 533, flags: DIFlagFwdDecl)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6733, file: !6734, line: 49, baseType: !3268, size: 320, offset: 320)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6733, file: !6734, line: 50, baseType: !348, size: 64, offset: 640)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6733, file: !6734, line: 51, baseType: !488, size: 64, offset: 704)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6733, file: !6734, line: 52, baseType: !488, size: 64, offset: 768)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6733, file: !6734, line: 53, baseType: !488, size: 64, offset: 832)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6733, file: !6734, line: 54, baseType: !488, size: 64, offset: 896)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6733, file: !6734, line: 55, baseType: !488, size: 64, offset: 960)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6733, file: !6734, line: 56, baseType: !348, size: 64, offset: 1024)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6733, file: !6734, line: 57, baseType: !348, size: 64, offset: 1088)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6733, file: !6734, line: 58, baseType: !348, size: 64, offset: 1152)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6733, file: !6734, line: 59, baseType: !348, size: 64, offset: 1216)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6733, file: !6734, line: 60, baseType: !348, size: 64, offset: 1280)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6733, file: !6734, line: 61, baseType: !6545, size: 64, offset: 1344)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6733, file: !6734, line: 62, baseType: !806, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6733, file: !6734, line: 63, baseType: !806, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6714, file: !6574, line: 583, baseType: !806, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6714, file: !6574, line: 584, baseType: !806, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6714, file: !6574, line: 585, baseType: !806, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6714, file: !6574, line: 586, baseType: !13, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6714, file: !6574, line: 587, baseType: !13, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6714, file: !6574, line: 592, baseType: !2431, size: 512, offset: 576)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6714, file: !6574, line: 593, baseType: !367, size: 64, offset: 1088)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6714, file: !6574, line: 594, baseType: !2862, size: 256, offset: 1152)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6714, file: !6574, line: 595, baseType: !1923, size: 128, offset: 1408)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6714, file: !6574, line: 596, baseType: !6741, size: 64, offset: 1536)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6714, file: !6574, line: 597, baseType: !419, size: 32, offset: 1600)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6714, file: !6574, line: 598, baseType: !419, size: 32, offset: 1632)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6714, file: !6574, line: 599, baseType: !13, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6714, file: !6574, line: 600, baseType: !13, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6714, file: !6574, line: 601, baseType: !13, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6714, file: !6574, line: 602, baseType: !13, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6714, file: !6574, line: 603, baseType: !13, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6714, file: !6574, line: 604, baseType: !806, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6714, file: !6574, line: 605, baseType: !13, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6714, file: !6574, line: 606, baseType: !13, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6714, file: !6574, line: 607, baseType: !13, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6714, file: !6574, line: 608, baseType: !13, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6714, file: !6574, line: 609, baseType: !13, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6714, file: !6574, line: 610, baseType: !13, size: 32, offset: 1696)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6714, file: !6574, line: 611, baseType: !6783, size: 32, offset: 1728)
!6783 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6574, line: 524, baseType: !13, size: 32, elements: !6784)
!6784 = !{!6785, !6786, !6787, !6788, !6789}
!6785 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6786 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6787 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6788 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6789 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6714, file: !6574, line: 612, baseType: !6791, size: 32, offset: 1760)
!6791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6574, line: 502, baseType: !13, size: 32, elements: !6792)
!6792 = !{!6793, !6794, !6795, !6796}
!6793 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6794 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6795 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6796 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6714, file: !6574, line: 613, baseType: !7, size: 32, offset: 1792)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6714, file: !6574, line: 614, baseType: !7, size: 32, offset: 1824)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6714, file: !6574, line: 615, baseType: !367, size: 64, offset: 1856)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6714, file: !6574, line: 616, baseType: !367, size: 64, offset: 1920)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6714, file: !6574, line: 617, baseType: !367, size: 64, offset: 1984)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6714, file: !6574, line: 618, baseType: !367, size: 64, offset: 2048)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6714, file: !6574, line: 620, baseType: !6804, size: 64, offset: 2112)
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6805, size: 64)
!6805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6574, line: 536, size: 256, elements: !6806)
!6806 = !{!6807, !6808, !6809, !6810}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6805, file: !6574, line: 537, baseType: !1704)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6805, file: !6574, line: 538, baseType: !13, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6805, file: !6574, line: 540, baseType: !320, size: 128, offset: 64)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6805, file: !6574, line: 543, baseType: !6811, size: 64, offset: 192)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6574, line: 534, flags: DIFlagFwdDecl)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6714, file: !6574, line: 621, baseType: !6814, size: 64, offset: 2176)
!6814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 64)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{null, !6545, !2579}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6714, file: !6574, line: 622, baseType: !6818, size: 64, offset: 2240)
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6574, line: 622, flags: DIFlagFwdDecl)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !6540, file: !6541, line: 486, baseType: !6821, size: 64, offset: 4096)
!6821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6822, size: 64)
!6822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6574, line: 642, size: 1792, elements: !6823)
!6823 = !{!6824, !6825, !6826, !6830, !6831, !6832}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6822, file: !6574, line: 643, baseType: !6573, size: 1472)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6822, file: !6574, line: 644, baseType: !6577, size: 64, offset: 1472)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6822, file: !6574, line: 645, baseType: !6827, size: 64, offset: 1536)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{null, !6545, !806}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6822, file: !6574, line: 646, baseType: !6577, size: 64, offset: 1600)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6822, file: !6574, line: 647, baseType: !6567, size: 64, offset: 1664)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6822, file: !6574, line: 648, baseType: !6567, size: 64, offset: 1728)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !6540, file: !6541, line: 493, baseType: !6834, size: 64, offset: 4160)
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !6541, line: 493, flags: DIFlagFwdDecl)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !6540, file: !6541, line: 499, baseType: !320, size: 128, offset: 4224)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6540, file: !6541, line: 502, baseType: !6838, size: 64, offset: 4352)
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6839, size: 64)
!6839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6840)
!6840 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !6541, line: 502, flags: DIFlagFwdDecl)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6540, file: !6541, line: 504, baseType: !5377, size: 64, offset: 4416)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !6540, file: !6541, line: 505, baseType: !367, size: 64, offset: 4480)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !6540, file: !6541, line: 510, baseType: !367, size: 64, offset: 4544)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !6540, file: !6541, line: 511, baseType: !6845, size: 64, offset: 4608)
!6845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6846, size: 64)
!6846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6847)
!6847 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !6541, line: 511, flags: DIFlagFwdDecl)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6540, file: !6541, line: 513, baseType: !6849, size: 64, offset: 4672)
!6849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6850, size: 64)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !6541, line: 288, size: 128, elements: !6851)
!6851 = !{!6852, !6853}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6850, file: !6541, line: 293, baseType: !13, size: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6850, file: !6541, line: 294, baseType: !348, size: 64, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !6540, file: !6541, line: 515, baseType: !320, size: 128, offset: 4736)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6540, file: !6541, line: 526, baseType: !6856, offset: 4864)
!6856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6857, line: 5, elements: !1621)
!6857 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6540, file: !6541, line: 528, baseType: !6859, size: 64, offset: 4864)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6861, line: 14, flags: DIFlagFwdDecl)
!6861 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6540, file: !6541, line: 529, baseType: !6863, size: 64, offset: 4928)
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 64)
!6864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6865, line: 17, size: 192, elements: !6866)
!6865 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6866 = !{!6867, !6868, !6951}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6864, file: !6865, line: 18, baseType: !6863, size: 64)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6864, file: !6865, line: 19, baseType: !6869, size: 64, offset: 64)
!6869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6870, size: 64)
!6870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6871)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6865, line: 110, size: 1152, elements: !6872)
!6872 = !{!6873, !6877, !6881, !6887, !6893, !6897, !6901, !6906, !6910, !6911, !6915, !6919, !6923, !6934, !6935, !6936, !6937, !6947}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6871, file: !6865, line: 111, baseType: !6874, size: 64)
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 64)
!6875 = !DISubroutineType(types: !6876)
!6876 = !{!6863, !6863}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6871, file: !6865, line: 112, baseType: !6878, size: 64, offset: 64)
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6879, size: 64)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{null, !6863}
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6871, file: !6865, line: 113, baseType: !6882, size: 64, offset: 128)
!6882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6883, size: 64)
!6883 = !DISubroutineType(types: !6884)
!6884 = !{!806, !6885}
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6864)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6871, file: !6865, line: 114, baseType: !6888, size: 64, offset: 192)
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6889, size: 64)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{!3291, !6885, !6891}
!6891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6892, size: 64)
!6892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6540)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6871, file: !6865, line: 116, baseType: !6894, size: 64, offset: 256)
!6894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6895, size: 64)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!806, !6885, !328}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6871, file: !6865, line: 118, baseType: !6898, size: 64, offset: 320)
!6898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6899, size: 64)
!6899 = !DISubroutineType(types: !6900)
!6900 = !{!7, !6885, !328, !13, !626, !1074}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6871, file: !6865, line: 123, baseType: !6902, size: 64, offset: 384)
!6902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6903, size: 64)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!7, !6885, !328, !6905, !1074}
!6905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6871, file: !6865, line: 126, baseType: !6907, size: 64, offset: 448)
!6907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6908, size: 64)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!328, !6885}
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6871, file: !6865, line: 127, baseType: !6907, size: 64, offset: 512)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6871, file: !6865, line: 128, baseType: !6912, size: 64, offset: 576)
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 64)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{!6863, !6885}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6871, file: !6865, line: 130, baseType: !6916, size: 64, offset: 640)
!6916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6917, size: 64)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{!6863, !6885, !6863}
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6871, file: !6865, line: 133, baseType: !6920, size: 64, offset: 704)
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6921, size: 64)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{!6863, !6885, !328}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6871, file: !6865, line: 135, baseType: !6924, size: 64, offset: 768)
!6924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6925, size: 64)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{!7, !6885, !328, !328, !13, !13, !6927}
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 64)
!6928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6865, line: 43, size: 640, elements: !6929)
!6929 = !{!6930, !6931, !6932}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6928, file: !6865, line: 44, baseType: !6863, size: 64)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6928, file: !6865, line: 45, baseType: !13, size: 32, offset: 64)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6928, file: !6865, line: 46, baseType: !6933, size: 512, offset: 128)
!6933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 512, elements: !2467)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6871, file: !6865, line: 140, baseType: !6916, size: 64, offset: 832)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6871, file: !6865, line: 143, baseType: !6912, size: 64, offset: 896)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6871, file: !6865, line: 145, baseType: !6874, size: 64, offset: 960)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6871, file: !6865, line: 146, baseType: !6938, size: 64, offset: 1024)
!6938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6939, size: 64)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{!7, !6885, !6941}
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6865, line: 29, size: 128, elements: !6943)
!6943 = !{!6944, !6945, !6946}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6942, file: !6865, line: 30, baseType: !13, size: 32)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6942, file: !6865, line: 31, baseType: !13, size: 32, offset: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6942, file: !6865, line: 32, baseType: !6885, size: 64, offset: 64)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6871, file: !6865, line: 148, baseType: !6948, size: 64, offset: 1088)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6949, size: 64)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{!7, !6885, !6545}
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6864, file: !6865, line: 20, baseType: !6545, size: 64, offset: 128)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !6540, file: !6541, line: 534, baseType: !1492, size: 32, offset: 4992)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6540, file: !6541, line: 535, baseType: !1022, size: 32, offset: 5024)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !6540, file: !6541, line: 537, baseType: !1704, offset: 5056)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !6540, file: !6541, line: 538, baseType: !320, size: 128, offset: 5056)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6540, file: !6541, line: 540, baseType: !6957, size: 64, offset: 5184)
!6957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6958, size: 64)
!6958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6959, line: 54, size: 960, elements: !6960)
!6959 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6960 = !{!6961, !6962, !6963, !6964, !6965, !6966, !6967, !6971, !6975, !6976, !6977, !6978, !6982, !6986, !6987}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6958, file: !6959, line: 55, baseType: !328, size: 64)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6958, file: !6959, line: 56, baseType: !1015, size: 64, offset: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6958, file: !6959, line: 58, baseType: !6162, size: 64, offset: 128)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6958, file: !6959, line: 59, baseType: !6162, size: 64, offset: 192)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6958, file: !6959, line: 60, baseType: !6130, size: 64, offset: 256)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6958, file: !6959, line: 62, baseType: !6558, size: 64, offset: 320)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6958, file: !6959, line: 63, baseType: !6968, size: 64, offset: 384)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6969, size: 64)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!1073, !6545, !6565}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6958, file: !6959, line: 65, baseType: !6972, size: 64, offset: 448)
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6973, size: 64)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{null, !6957}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6958, file: !6959, line: 66, baseType: !6567, size: 64, offset: 512)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6958, file: !6959, line: 68, baseType: !6577, size: 64, offset: 576)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6958, file: !6959, line: 70, baseType: !6198, size: 64, offset: 640)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6958, file: !6959, line: 71, baseType: !6979, size: 64, offset: 704)
!6979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6980, size: 64)
!6980 = !DISubroutineType(types: !6981)
!6981 = !{!3291, !6545}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6958, file: !6959, line: 73, baseType: !6983, size: 64, offset: 768)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 64)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{null, !6545, !2937, !2938}
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6958, file: !6959, line: 75, baseType: !6571, size: 64, offset: 832)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6958, file: !6959, line: 77, baseType: !6690, size: 64, offset: 896)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6540, file: !6541, line: 541, baseType: !6162, size: 64, offset: 5248)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6540, file: !6541, line: 543, baseType: !6567, size: 64, offset: 5312)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !6540, file: !6541, line: 544, baseType: !6991, size: 64, offset: 5376)
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 64)
!6992 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !6541, line: 45, flags: DIFlagFwdDecl)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !6540, file: !6541, line: 545, baseType: !6994, size: 64, offset: 5440)
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6541, line: 47, flags: DIFlagFwdDecl)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !6540, file: !6541, line: 547, baseType: !806, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6540, file: !6541, line: 548, baseType: !806, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !6540, file: !6541, line: 549, baseType: !806, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !6540, file: !6541, line: 550, baseType: !806, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !300, file: !6, line: 2125, baseType: !7001, size: 256, offset: 13760)
!7001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6163, size: 256, elements: !2306)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !300, file: !6, line: 2126, baseType: !6163, size: 64, offset: 14016)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !300, file: !6, line: 2128, baseType: !7004, size: 64, offset: 14080)
!7004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7005, size: 64)
!7005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7006)
!7006 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !6, line: 2128, flags: DIFlagFwdDecl)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !300, file: !6, line: 2132, baseType: !13, size: 32, offset: 14144)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !300, file: !6, line: 2134, baseType: !616, size: 16, offset: 14176)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !300, file: !6, line: 2139, baseType: !2348, size: 16, offset: 14192)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !300, file: !6, line: 2140, baseType: !7011, size: 512, offset: 14208)
!7011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7012, size: 512, elements: !305)
!7012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !6, line: 793, size: 32, elements: !7013)
!7013 = !{!7014, !7015}
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7012, file: !6, line: 794, baseType: !616, size: 16)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7012, file: !6, line: 795, baseType: !616, size: 16, offset: 16)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !300, file: !6, line: 2141, baseType: !7017, size: 128, offset: 14720)
!7017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 128, elements: !305)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !300, file: !6, line: 2149, baseType: !7019, size: 64, offset: 14848)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !281, line: 536, flags: DIFlagFwdDecl)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !300, file: !6, line: 2150, baseType: !7022, size: 64, offset: 14912)
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 64)
!7023 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !6, line: 60, flags: DIFlagFwdDecl)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !300, file: !6, line: 2151, baseType: !7025, size: 64, offset: 14976)
!7025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !300, file: !6, line: 2152, baseType: !7025, size: 64, offset: 15040)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !300, file: !6, line: 2153, baseType: !806, size: 8, offset: 15104)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !300, file: !6, line: 2154, baseType: !13, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !300, file: !6, line: 2156, baseType: !320, size: 128, offset: 15168)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !300, file: !6, line: 2162, baseType: !7031, size: 64, offset: 15296)
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7033)
!7033 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !6, line: 68, flags: DIFlagFwdDecl)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !300, file: !6, line: 2163, baseType: !7035, size: 64, offset: 15360)
!7035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7036, size: 64)
!7036 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !6, line: 69, flags: DIFlagFwdDecl)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !300, file: !6, line: 2166, baseType: !7038, size: 384, offset: 15424)
!7038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7039, size: 384, elements: !1626)
!7039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !6, line: 889, size: 128, elements: !7040)
!7040 = !{!7041, !7042}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7039, file: !6, line: 890, baseType: !1123, size: 64)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7039, file: !6, line: 891, baseType: !7043, size: 64, offset: 64)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !6, line: 880, flags: DIFlagFwdDecl)
!7045 = !{!7046, !7047, !7048, !7049, !7050, !7051}
!7046 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7047 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7048 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7049 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7050 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7051 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7052 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 4102, baseType: !13, size: 32, elements: !7053)
!7053 = !{!7054, !7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069}
!7054 = !DIEnumerator(name: "NETIF_MSG_DRV_BIT", value: 0, isUnsigned: true)
!7055 = !DIEnumerator(name: "NETIF_MSG_PROBE_BIT", value: 1, isUnsigned: true)
!7056 = !DIEnumerator(name: "NETIF_MSG_LINK_BIT", value: 2, isUnsigned: true)
!7057 = !DIEnumerator(name: "NETIF_MSG_TIMER_BIT", value: 3, isUnsigned: true)
!7058 = !DIEnumerator(name: "NETIF_MSG_IFDOWN_BIT", value: 4, isUnsigned: true)
!7059 = !DIEnumerator(name: "NETIF_MSG_IFUP_BIT", value: 5, isUnsigned: true)
!7060 = !DIEnumerator(name: "NETIF_MSG_RX_ERR_BIT", value: 6, isUnsigned: true)
!7061 = !DIEnumerator(name: "NETIF_MSG_TX_ERR_BIT", value: 7, isUnsigned: true)
!7062 = !DIEnumerator(name: "NETIF_MSG_TX_QUEUED_BIT", value: 8, isUnsigned: true)
!7063 = !DIEnumerator(name: "NETIF_MSG_INTR_BIT", value: 9, isUnsigned: true)
!7064 = !DIEnumerator(name: "NETIF_MSG_TX_DONE_BIT", value: 10, isUnsigned: true)
!7065 = !DIEnumerator(name: "NETIF_MSG_RX_STATUS_BIT", value: 11, isUnsigned: true)
!7066 = !DIEnumerator(name: "NETIF_MSG_PKTDATA_BIT", value: 12, isUnsigned: true)
!7067 = !DIEnumerator(name: "NETIF_MSG_HW_BIT", value: 13, isUnsigned: true)
!7068 = !DIEnumerator(name: "NETIF_MSG_WOL_BIT", value: 14, isUnsigned: true)
!7069 = !DIEnumerator(name: "NETIF_MSG_CLASS_COUNT", value: 15, isUnsigned: true)
!7070 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !7071, line: 5, baseType: !13, size: 32, elements: !7072)
!7071 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!7072 = !{!7073, !7074, !7075, !7076}
!7073 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!7074 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!7075 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!7076 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!7077 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7078, line: 10, baseType: !13, size: 32, elements: !7079)
!7078 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7079 = !{!7080, !7081}
!7080 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7081 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7082 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !6, line: 3780, baseType: !13, size: 32, elements: !7083)
!7083 = !{!7084, !7085}
!7084 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!7085 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!7086 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !6, line: 558, baseType: !13, size: 32, elements: !7087)
!7087 = !{!7088, !7089, !7090}
!7088 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7089 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7090 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7091 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7092, line: 305, baseType: !13, size: 32, elements: !7093)
!7092 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7093 = !{!7094, !7095, !7096, !7097}
!7094 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7095 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7096 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7097 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7098 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !6, line: 288, baseType: !13, size: 32, elements: !7099)
!7099 = !{!7100, !7101, !7102, !7103, !7104, !7105}
!7100 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!7101 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!7102 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!7103 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!7104 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!7105 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!7106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7107, line: 11, baseType: !13, size: 32, elements: !7108)
!7107 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7108 = !{!7109, !7110, !7111}
!7109 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7110 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7111 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7112 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !634, line: 82, baseType: !13, size: 32, elements: !7113)
!7113 = !{!7114, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129, !7130, !7131, !7132}
!7114 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!7115 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!7116 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!7117 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!7118 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!7119 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!7120 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!7121 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!7122 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!7123 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!7124 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!7125 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!7126 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!7127 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!7128 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!7129 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!7130 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!7131 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!7132 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!7133 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 352, baseType: !13, size: 32, elements: !7134)
!7134 = !{!7135, !7136, !7137, !7138, !7139, !7140, !7141}
!7135 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!7136 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!7137 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!7138 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!7139 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!7140 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!7141 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!7142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_test_flags", file: !239, line: 749, baseType: !13, size: 32, elements: !7143)
!7143 = !{!7144, !7145, !7146, !7147}
!7144 = !DIEnumerator(name: "ETH_TEST_FL_OFFLINE", value: 1, isUnsigned: true)
!7145 = !DIEnumerator(name: "ETH_TEST_FL_FAILED", value: 2, isUnsigned: true)
!7146 = !DIEnumerator(name: "ETH_TEST_FL_EXTERNAL_LB", value: 4, isUnsigned: true)
!7147 = !DIEnumerator(name: "ETH_TEST_FL_EXTERNAL_LB_DONE", value: 8, isUnsigned: true)
!7148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !239, line: 1521, baseType: !13, size: 32, elements: !7149)
!7149 = !{!7150, !7151, !7152, !7153, !7154, !7155, !7156, !7157, !7158, !7159, !7160, !7161, !7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7198, !7199, !7200, !7201, !7202, !7203, !7204, !7205, !7206, !7207, !7208, !7209, !7210, !7211, !7212, !7213, !7214, !7215, !7216, !7217, !7218, !7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7239, !7240, !7241, !7242}
!7150 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!7151 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!7152 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!7153 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!7154 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!7155 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!7156 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!7157 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!7158 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!7159 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!7160 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!7161 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!7162 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!7163 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!7164 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!7165 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!7166 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!7167 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!7168 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!7169 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!7170 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!7171 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!7172 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!7173 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!7174 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!7175 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!7176 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!7177 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!7178 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!7179 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!7180 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!7181 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!7182 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!7183 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!7184 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!7185 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!7186 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!7187 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!7188 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!7189 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!7190 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!7191 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!7192 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!7193 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!7194 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!7195 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!7196 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!7197 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!7198 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!7199 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!7200 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!7201 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!7202 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!7203 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!7204 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!7205 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!7206 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!7207 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!7208 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!7209 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!7210 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!7211 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!7212 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!7213 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!7214 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!7215 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!7216 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!7217 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!7218 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!7219 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!7220 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!7221 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!7222 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!7223 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!7224 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!7225 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!7226 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!7227 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!7228 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!7229 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!7230 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!7231 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!7232 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!7233 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!7234 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!7235 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!7236 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!7237 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!7238 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!7239 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!7240 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!7241 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!7242 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!7243 = !{!1073, !348, !1022, !1776, !7244, !510, !7245, !528, !5863, !7246, !626, !7248, !660, !599, !2070, !1753, !3472, !7663, !7664, !7675, !7677, !7678, !13, !7, !1015}
!7244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !560, line: 29, baseType: !510)
!7245 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !560, line: 31, baseType: !528)
!7246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7247, size: 64)
!7247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !616)
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7249, size: 64)
!7249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcnet32_private", file: !3, line: 255, size: 5376, elements: !7250)
!7250 = !{!7251, !7264, !7273, !7282, !7283, !7556, !7557, !7558, !7559, !7561, !7562, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7657, !7658, !7659, !7660, !7661}
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "init_block", scope: !7249, file: !3, line: 256, baseType: !7252, size: 64)
!7252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7253, size: 64)
!7253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcnet32_init_block", file: !3, line: 229, size: 224, elements: !7254)
!7254 = !{!7255, !7256, !7257, !7259, !7260, !7262, !7263}
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7253, file: !3, line: 230, baseType: !7244, size: 16)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "tlen_rlen", scope: !7253, file: !3, line: 231, baseType: !7244, size: 16, offset: 16)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !7253, file: !3, line: 232, baseType: !7258, size: 48, offset: 32)
!7258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 48, elements: !1034)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7253, file: !3, line: 233, baseType: !7244, size: 16, offset: 80)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !7253, file: !3, line: 234, baseType: !7261, size: 64, offset: 96)
!7261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7245, size: 64, elements: !2697)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring", scope: !7253, file: !3, line: 236, baseType: !7245, size: 32, offset: 160)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring", scope: !7253, file: !3, line: 237, baseType: !7245, size: 32, offset: 192)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring", scope: !7249, file: !3, line: 258, baseType: !7265, size: 64, offset: 64)
!7265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7266, size: 64)
!7266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcnet32_rx_head", file: !3, line: 212, size: 128, elements: !7267)
!7267 = !{!7268, !7269, !7270, !7271, !7272}
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7266, file: !3, line: 213, baseType: !7245, size: 32)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "buf_length", scope: !7266, file: !3, line: 214, baseType: !7244, size: 16, offset: 32)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7266, file: !3, line: 215, baseType: !7244, size: 16, offset: 48)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "msg_length", scope: !7266, file: !3, line: 216, baseType: !7245, size: 32, offset: 64)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7266, file: !3, line: 217, baseType: !7245, size: 32, offset: 96)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring", scope: !7249, file: !3, line: 259, baseType: !7274, size: 64, offset: 128)
!7274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7275, size: 64)
!7275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcnet32_tx_head", file: !3, line: 220, size: 128, elements: !7276)
!7276 = !{!7277, !7278, !7279, !7280, !7281}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7275, file: !3, line: 221, baseType: !7245, size: 32)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7275, file: !3, line: 222, baseType: !7244, size: 16, offset: 32)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7275, file: !3, line: 223, baseType: !7244, size: 16, offset: 48)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !7275, file: !3, line: 224, baseType: !7245, size: 32, offset: 64)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7275, file: !3, line: 225, baseType: !7245, size: 32, offset: 96)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "init_dma_addr", scope: !7249, file: !3, line: 260, baseType: !2070, size: 64, offset: 192)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "pci_dev", scope: !7249, file: !3, line: 262, baseType: !7284, size: 64, offset: 256)
!7284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7285, size: 64)
!7285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !7286, line: 309, size: 19264, elements: !7287)
!7286 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7287 = !{!7288, !7289, !7358, !7359, !7360, !7361, !7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7453, !7454, !7455, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7529, !7530, !7532, !7533, !7534, !7535, !7537, !7538, !7539, !7542, !7549, !7550, !7551, !7552, !7553, !7554, !7555}
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !7285, file: !7286, line: 310, baseType: !320, size: 128)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7285, file: !7286, line: 311, baseType: !7290, size: 64, offset: 128)
!7290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7291, size: 64)
!7291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !7286, line: 605, size: 8064, elements: !7292)
!7292 = !{!7293, !7294, !7295, !7296, !7297, !7298, !7299, !7314, !7315, !7316, !7340, !7343, !7344, !7345, !7346, !7347, !7348, !7349, !7350, !7351, !7353, !7354, !7355, !7356, !7357}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7291, file: !7286, line: 606, baseType: !320, size: 128)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7291, file: !7286, line: 607, baseType: !7290, size: 64, offset: 128)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7291, file: !7286, line: 608, baseType: !320, size: 128, offset: 192)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !7291, file: !7286, line: 609, baseType: !320, size: 128, offset: 320)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7291, file: !7286, line: 610, baseType: !7284, size: 64, offset: 448)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7291, file: !7286, line: 611, baseType: !320, size: 128, offset: 512)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7291, file: !7286, line: 613, baseType: !7300, size: 256, offset: 640)
!7300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7301, size: 256, elements: !2306)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 64)
!7302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !7303, line: 20, size: 512, elements: !7304)
!7303 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!7304 = !{!7305, !7307, !7308, !7309, !7310, !7311, !7312, !7313}
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7302, file: !7303, line: 21, baseType: !7306, size: 64)
!7306 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !313, line: 158, baseType: !4078)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7302, file: !7303, line: 22, baseType: !7306, size: 64, offset: 64)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7302, file: !7303, line: 23, baseType: !328, size: 64, offset: 128)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7302, file: !7303, line: 24, baseType: !348, size: 64, offset: 192)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7302, file: !7303, line: 25, baseType: !348, size: 64, offset: 256)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7302, file: !7303, line: 26, baseType: !7301, size: 64, offset: 320)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !7302, file: !7303, line: 26, baseType: !7301, size: 64, offset: 384)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7302, file: !7303, line: 26, baseType: !7301, size: 64, offset: 448)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7291, file: !7286, line: 614, baseType: !320, size: 128, offset: 896)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !7291, file: !7286, line: 615, baseType: !7302, size: 512, offset: 1024)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7291, file: !7286, line: 617, baseType: !7317, size: 64, offset: 1536)
!7317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7318, size: 64)
!7318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !7286, line: 731, size: 320, elements: !7319)
!7319 = !{!7320, !7324, !7328, !7332, !7336}
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !7318, file: !7286, line: 732, baseType: !7321, size: 64)
!7321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7322, size: 64)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{!7, !7290}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !7318, file: !7286, line: 733, baseType: !7325, size: 64, offset: 64)
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{null, !7290}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !7318, file: !7286, line: 734, baseType: !7329, size: 64, offset: 128)
!7329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7330, size: 64)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{!626, !7290, !13, !7}
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7318, file: !7286, line: 735, baseType: !7333, size: 64, offset: 192)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 64)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{!7, !7290, !13, !7, !7, !2550}
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7318, file: !7286, line: 736, baseType: !7337, size: 64, offset: 256)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 64)
!7338 = !DISubroutineType(types: !7339)
!7339 = !{!7, !7290, !13, !7, !7, !1022}
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !7291, file: !7286, line: 618, baseType: !7341, size: 64, offset: 1600)
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7342, size: 64)
!7342 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !7286, line: 537, flags: DIFlagFwdDecl)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7291, file: !7286, line: 619, baseType: !626, size: 64, offset: 1664)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !7291, file: !7286, line: 620, baseType: !3043, size: 64, offset: 1728)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7291, file: !7286, line: 622, baseType: !517, size: 8, offset: 1792)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7291, file: !7286, line: 623, baseType: !517, size: 8, offset: 1800)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !7291, file: !7286, line: 624, baseType: !517, size: 8, offset: 1808)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !7291, file: !7286, line: 625, baseType: !517, size: 8, offset: 1816)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7291, file: !7286, line: 630, baseType: !492, size: 384, offset: 1824)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !7291, file: !7286, line: 632, baseType: !511, size: 16, offset: 2208)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !7291, file: !7286, line: 633, baseType: !7352, size: 16, offset: 2224)
!7352 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !7286, line: 237, baseType: !511)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !7291, file: !7286, line: 634, baseType: !6545, size: 64, offset: 2240)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7291, file: !7286, line: 635, baseType: !6540, size: 5568, offset: 2304)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !7291, file: !7286, line: 636, baseType: !6176, size: 64, offset: 7872)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !7291, file: !7286, line: 637, baseType: !6176, size: 64, offset: 7936)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !7291, file: !7286, line: 638, baseType: !13, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !7285, file: !7286, line: 312, baseType: !7290, size: 64, offset: 192)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7285, file: !7286, line: 314, baseType: !626, size: 64, offset: 256)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !7285, file: !7286, line: 315, baseType: !3043, size: 64, offset: 320)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7285, file: !7286, line: 316, baseType: !7362, size: 64, offset: 384)
!7362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7363, size: 64)
!7363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !7286, line: 69, size: 832, elements: !7364)
!7364 = !{!7365, !7366, !7367, !7370, !7371}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7363, file: !7286, line: 70, baseType: !7290, size: 64)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7363, file: !7286, line: 71, baseType: !320, size: 128, offset: 64)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7363, file: !7286, line: 72, baseType: !7368, size: 64, offset: 192)
!7368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7369, size: 64)
!7369 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !7286, line: 72, flags: DIFlagFwdDecl)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7363, file: !7286, line: 73, baseType: !517, size: 8, offset: 256)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7363, file: !7286, line: 74, baseType: !6125, size: 512, offset: 320)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !7285, file: !7286, line: 318, baseType: !13, size: 32, offset: 448)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7285, file: !7286, line: 319, baseType: !511, size: 16, offset: 480)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7285, file: !7286, line: 320, baseType: !511, size: 16, offset: 496)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !7285, file: !7286, line: 321, baseType: !511, size: 16, offset: 512)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !7285, file: !7286, line: 322, baseType: !511, size: 16, offset: 528)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7285, file: !7286, line: 323, baseType: !13, size: 32, offset: 544)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !7285, file: !7286, line: 324, baseType: !829, size: 8, offset: 576)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !7285, file: !7286, line: 325, baseType: !829, size: 8, offset: 584)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !7285, file: !7286, line: 330, baseType: !829, size: 8, offset: 592)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !7285, file: !7286, line: 331, baseType: !829, size: 8, offset: 600)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !7285, file: !7286, line: 332, baseType: !829, size: 8, offset: 608)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !7285, file: !7286, line: 333, baseType: !829, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !7285, file: !7286, line: 334, baseType: !829, size: 8, offset: 624)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7285, file: !7286, line: 335, baseType: !829, size: 8, offset: 632)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !7285, file: !7286, line: 336, baseType: !616, size: 16, offset: 640)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !7285, file: !7286, line: 337, baseType: !3472, size: 64, offset: 704)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7285, file: !7286, line: 339, baseType: !7389, size: 64, offset: 768)
!7389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7390, size: 64)
!7390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !7286, line: 858, size: 2048, elements: !7391)
!7391 = !{!7392, !7393, !7394, !7406, !7410, !7414, !7418, !7422, !7423, !7427, !7446, !7447, !7448}
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7390, file: !7286, line: 859, baseType: !320, size: 128)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7390, file: !7286, line: 860, baseType: !328, size: 64, offset: 128)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7390, file: !7286, line: 861, baseType: !7395, size: 64, offset: 192)
!7395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7396, size: 64)
!7396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7397)
!7397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !6636, line: 38, size: 256, elements: !7398)
!7398 = !{!7399, !7400, !7401, !7402, !7403, !7404, !7405}
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7397, file: !6636, line: 39, baseType: !528, size: 32)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7397, file: !6636, line: 39, baseType: !528, size: 32, offset: 32)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !7397, file: !6636, line: 40, baseType: !528, size: 32, offset: 64)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !7397, file: !6636, line: 40, baseType: !528, size: 32, offset: 96)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7397, file: !6636, line: 41, baseType: !528, size: 32, offset: 128)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !7397, file: !6636, line: 41, baseType: !528, size: 32, offset: 160)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7397, file: !6636, line: 42, baseType: !6650, size: 64, offset: 192)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7390, file: !7286, line: 862, baseType: !7407, size: 64, offset: 256)
!7407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 64)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!7, !7284, !7395}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7390, file: !7286, line: 863, baseType: !7411, size: 64, offset: 320)
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 64)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{null, !7284}
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7390, file: !7286, line: 864, baseType: !7415, size: 64, offset: 384)
!7415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7416, size: 64)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!7, !7284, !6661}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7390, file: !7286, line: 865, baseType: !7419, size: 64, offset: 448)
!7419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7420, size: 64)
!7420 = !DISubroutineType(types: !7421)
!7421 = !{!7, !7284}
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7390, file: !7286, line: 866, baseType: !7411, size: 64, offset: 512)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !7390, file: !7286, line: 867, baseType: !7424, size: 64, offset: 576)
!7424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7425, size: 64)
!7425 = !DISubroutineType(types: !7426)
!7426 = !{!7, !7284, !7}
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !7390, file: !7286, line: 868, baseType: !7428, size: 64, offset: 640)
!7428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7429, size: 64)
!7429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7430)
!7430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !7286, line: 795, size: 384, elements: !7431)
!7431 = !{!7432, !7438, !7442, !7443, !7444, !7445}
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !7430, file: !7286, line: 797, baseType: !7433, size: 64)
!7433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7434, size: 64)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!7436, !7284, !7437}
!7436 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !7286, line: 772, baseType: !13)
!7437 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !7286, line: 180, baseType: !13)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !7430, file: !7286, line: 801, baseType: !7439, size: 64, offset: 64)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 64)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!7436, !7284}
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !7430, file: !7286, line: 804, baseType: !7439, size: 64, offset: 128)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !7430, file: !7286, line: 807, baseType: !7411, size: 64, offset: 192)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !7430, file: !7286, line: 808, baseType: !7411, size: 64, offset: 256)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7430, file: !7286, line: 811, baseType: !7411, size: 64, offset: 320)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7390, file: !7286, line: 869, baseType: !6162, size: 64, offset: 704)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7390, file: !7286, line: 870, baseType: !6618, size: 1152, offset: 768)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !7390, file: !7286, line: 871, baseType: !7449, size: 128, offset: 1920)
!7449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !7286, line: 759, size: 128, elements: !7450)
!7450 = !{!7451, !7452}
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7449, file: !7286, line: 760, baseType: !1704)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7449, file: !7286, line: 761, baseType: !320, size: 128)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7285, file: !7286, line: 340, baseType: !367, size: 64, offset: 832)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7285, file: !7286, line: 346, baseType: !6850, size: 128, offset: 896)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !7285, file: !7286, line: 348, baseType: !7456, size: 32, offset: 1024)
!7456 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !7286, line: 155, baseType: !7)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !7285, file: !7286, line: 351, baseType: !13, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !7285, file: !7286, line: 352, baseType: !829, size: 8, offset: 1064)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !7285, file: !7286, line: 353, baseType: !13, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !7285, file: !7286, line: 355, baseType: !13, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !7285, file: !7286, line: 356, baseType: !13, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !7285, file: !7286, line: 357, baseType: !13, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !7285, file: !7286, line: 358, baseType: !13, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !7285, file: !7286, line: 359, baseType: !13, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !7285, file: !7286, line: 360, baseType: !13, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !7285, file: !7286, line: 361, baseType: !13, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !7285, file: !7286, line: 362, baseType: !13, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !7285, file: !7286, line: 364, baseType: !13, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !7285, file: !7286, line: 365, baseType: !13, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !7285, file: !7286, line: 369, baseType: !13, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !7285, file: !7286, line: 370, baseType: !13, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !7285, file: !7286, line: 371, baseType: !13, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !7285, file: !7286, line: 374, baseType: !13, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !7285, file: !7286, line: 376, baseType: !13, size: 32, offset: 1120)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !7285, file: !7286, line: 377, baseType: !13, size: 32, offset: 1152)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7285, file: !7286, line: 380, baseType: !7477, size: 64, offset: 1216)
!7477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7478, size: 64)
!7478 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !7286, line: 303, flags: DIFlagFwdDecl)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !7285, file: !7286, line: 381, baseType: !13, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !7285, file: !7286, line: 383, baseType: !7, size: 32, offset: 1312)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !7285, file: !7286, line: 385, baseType: !13, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !7285, file: !7286, line: 387, baseType: !7437, size: 32, offset: 1376)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7285, file: !7286, line: 388, baseType: !6540, size: 5568, offset: 1408)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !7285, file: !7286, line: 390, baseType: !7, size: 32, offset: 6976)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7285, file: !7286, line: 396, baseType: !13, size: 32, offset: 7008)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7285, file: !7286, line: 397, baseType: !7487, size: 8704, offset: 7040)
!7487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7302, size: 8704, elements: !7488)
!7488 = !{!7489}
!7489 = !DISubrange(count: 17)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7285, file: !7286, line: 399, baseType: !806, size: 8, offset: 15744)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !7285, file: !7286, line: 401, baseType: !13, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !7285, file: !7286, line: 402, baseType: !13, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !7285, file: !7286, line: 403, baseType: !13, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !7285, file: !7286, line: 404, baseType: !13, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !7285, file: !7286, line: 405, baseType: !13, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !7285, file: !7286, line: 407, baseType: !13, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !7285, file: !7286, line: 408, baseType: !13, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !7285, file: !7286, line: 409, baseType: !13, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !7285, file: !7286, line: 410, baseType: !13, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !7285, file: !7286, line: 411, baseType: !13, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !7285, file: !7286, line: 412, baseType: !13, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !7285, file: !7286, line: 413, baseType: !13, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !7285, file: !7286, line: 414, baseType: !13, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !7285, file: !7286, line: 415, baseType: !13, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !7285, file: !7286, line: 416, baseType: !13, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !7285, file: !7286, line: 417, baseType: !13, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !7285, file: !7286, line: 418, baseType: !13, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !7285, file: !7286, line: 419, baseType: !13, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !7285, file: !7286, line: 420, baseType: !13, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7285, file: !7286, line: 421, baseType: !13, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !7285, file: !7286, line: 422, baseType: !13, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !7285, file: !7286, line: 423, baseType: !13, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !7285, file: !7286, line: 424, baseType: !13, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !7285, file: !7286, line: 425, baseType: !13, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !7285, file: !7286, line: 426, baseType: !13, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !7285, file: !7286, line: 427, baseType: !13, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !7285, file: !7286, line: 435, baseType: !13, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !7285, file: !7286, line: 441, baseType: !13, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !7285, file: !7286, line: 442, baseType: !13, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !7285, file: !7286, line: 443, baseType: !13, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !7285, file: !7286, line: 444, baseType: !13, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !7285, file: !7286, line: 445, baseType: !13, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !7285, file: !7286, line: 446, baseType: !13, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !7285, file: !7286, line: 447, baseType: !13, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !7285, file: !7286, line: 448, baseType: !13, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !7285, file: !7286, line: 449, baseType: !13, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7285, file: !7286, line: 450, baseType: !7528, size: 16, offset: 15792)
!7528 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !7286, line: 206, baseType: !511)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !7285, file: !7286, line: 451, baseType: !419, size: 32, offset: 15808)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7285, file: !7286, line: 453, baseType: !7531, size: 512, offset: 15840)
!7531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 512, elements: !305)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !7285, file: !7286, line: 454, baseType: !1615, size: 64, offset: 16384)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !7285, file: !7286, line: 455, baseType: !6176, size: 64, offset: 16448)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !7285, file: !7286, line: 456, baseType: !7, size: 32, offset: 16512)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !7285, file: !7286, line: 457, baseType: !7536, size: 1088, offset: 16576)
!7536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6176, size: 1088, elements: !7488)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !7285, file: !7286, line: 458, baseType: !7536, size: 1088, offset: 17664)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !7285, file: !7286, line: 469, baseType: !6162, size: 64, offset: 18752)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !7285, file: !7286, line: 471, baseType: !7540, size: 64, offset: 18816)
!7540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7541, size: 64)
!7541 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !7286, line: 304, flags: DIFlagFwdDecl)
!7542 = !DIDerivedType(tag: DW_TAG_member, scope: !7285, file: !7286, line: 478, baseType: !7543, size: 64, offset: 18880)
!7543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7285, file: !7286, line: 478, size: 64, elements: !7544)
!7544 = !{!7545, !7548}
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !7543, file: !7286, line: 479, baseType: !7546, size: 64)
!7546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7547, size: 64)
!7547 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !7286, line: 305, flags: DIFlagFwdDecl)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !7543, file: !7286, line: 480, baseType: !7284, size: 64)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !7285, file: !7286, line: 482, baseType: !616, size: 16, offset: 18944)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !7285, file: !7286, line: 483, baseType: !829, size: 8, offset: 18960)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !7285, file: !7286, line: 497, baseType: !616, size: 16, offset: 18976)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !7285, file: !7286, line: 498, baseType: !4078, size: 64, offset: 19008)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !7285, file: !7286, line: 499, baseType: !1074, size: 64, offset: 19072)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7285, file: !7286, line: 500, baseType: !1073, size: 64, offset: 19136)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !7285, file: !7286, line: 502, baseType: !348, size: 64, offset: 19200)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7249, file: !3, line: 263, baseType: !328, size: 64, offset: 320)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skbuff", scope: !7249, file: !3, line: 265, baseType: !6435, size: 64, offset: 384)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "rx_skbuff", scope: !7249, file: !3, line: 266, baseType: !6435, size: 64, offset: 448)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dma_addr", scope: !7249, file: !3, line: 267, baseType: !7560, size: 64, offset: 512)
!7560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dma_addr", scope: !7249, file: !3, line: 268, baseType: !7560, size: 64, offset: 576)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7249, file: !3, line: 269, baseType: !7563, size: 64, offset: 640)
!7563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7564, size: 64)
!7564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7565)
!7565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcnet32_access", file: !3, line: 241, size: 448, elements: !7566)
!7566 = !{!7567, !7571, !7575, !7576, !7577, !7581, !7585}
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "read_csr", scope: !7565, file: !3, line: 242, baseType: !7568, size: 64)
!7568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7569, size: 64)
!7569 = !DISubroutineType(types: !7570)
!7570 = !{!616, !348, !7}
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "write_csr", scope: !7565, file: !3, line: 243, baseType: !7572, size: 64, offset: 64)
!7572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7573, size: 64)
!7573 = !DISubroutineType(types: !7574)
!7574 = !{null, !348, !7, !616}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "read_bcr", scope: !7565, file: !3, line: 244, baseType: !7568, size: 64, offset: 128)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "write_bcr", scope: !7565, file: !3, line: 245, baseType: !7572, size: 64, offset: 192)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "read_rap", scope: !7565, file: !3, line: 246, baseType: !7578, size: 64, offset: 256)
!7578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7579, size: 64)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!616, !348}
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "write_rap", scope: !7565, file: !3, line: 247, baseType: !7582, size: 64, offset: 320)
!7582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7583, size: 64)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{null, !348, !616}
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !7565, file: !3, line: 248, baseType: !7586, size: 64, offset: 384)
!7586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7587, size: 64)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{null, !348}
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7249, file: !3, line: 270, baseType: !1704, offset: 704)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "cur_rx", scope: !7249, file: !3, line: 271, baseType: !13, size: 32, offset: 704)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "cur_tx", scope: !7249, file: !3, line: 271, baseType: !13, size: 32, offset: 736)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring_size", scope: !7249, file: !3, line: 272, baseType: !13, size: 32, offset: 768)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_size", scope: !7249, file: !3, line: 273, baseType: !13, size: 32, offset: 800)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mod_mask", scope: !7249, file: !3, line: 274, baseType: !13, size: 32, offset: 832)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "tx_mod_mask", scope: !7249, file: !3, line: 275, baseType: !13, size: 32, offset: 864)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "rx_len_bits", scope: !7249, file: !3, line: 276, baseType: !511, size: 16, offset: 896)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "tx_len_bits", scope: !7249, file: !3, line: 277, baseType: !511, size: 16, offset: 912)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring_dma_addr", scope: !7249, file: !3, line: 278, baseType: !2070, size: 64, offset: 960)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_dma_addr", scope: !7249, file: !3, line: 279, baseType: !2070, size: 64, offset: 1024)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_rx", scope: !7249, file: !3, line: 280, baseType: !13, size: 32, offset: 1088)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_tx", scope: !7249, file: !3, line: 281, baseType: !13, size: 32, offset: 1120)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7249, file: !3, line: 283, baseType: !326, size: 64, offset: 1152)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !7249, file: !3, line: 284, baseType: !7604, size: 3072, offset: 1216)
!7604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !6, line: 324, size: 3072, elements: !7605)
!7605 = !{!7606, !7607, !7608, !7609, !7610, !7611, !7616, !7617, !7623, !7624, !7625, !7626, !7627, !7628, !7629}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !7604, file: !6, line: 331, baseType: !320, size: 128)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7604, file: !6, line: 333, baseType: !348, size: 64, offset: 128)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !7604, file: !6, line: 334, baseType: !7, size: 32, offset: 192)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !7604, file: !6, line: 335, baseType: !7, size: 32, offset: 224)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !7604, file: !6, line: 336, baseType: !348, size: 64, offset: 256)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7604, file: !6, line: 337, baseType: !7612, size: 64, offset: 320)
!7612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7613, size: 64)
!7613 = !DISubroutineType(types: !7614)
!7614 = !{!7, !7615, !7}
!7615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7604, size: 64)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7604, file: !6, line: 341, baseType: !326, size: 64, offset: 384)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !7604, file: !6, line: 342, baseType: !7618, size: 1536, offset: 448)
!7618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7619, size: 1536, elements: !2467)
!7619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !6, line: 310, size: 192, elements: !7620)
!7620 = !{!7621, !7622}
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7619, file: !6, line: 311, baseType: !320, size: 128)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7619, file: !6, line: 312, baseType: !7, size: 32, offset: 128)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7604, file: !6, line: 343, baseType: !451, size: 64, offset: 1984)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !7604, file: !6, line: 344, baseType: !320, size: 128, offset: 2048)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !7604, file: !6, line: 345, baseType: !7, size: 32, offset: 2176)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7604, file: !6, line: 346, baseType: !2431, size: 512, offset: 2240)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !7604, file: !6, line: 347, baseType: !320, size: 128, offset: 2752)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !7604, file: !6, line: 348, baseType: !312, size: 128, offset: 2880)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7604, file: !6, line: 349, baseType: !13, size: 32, offset: 3008)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "tx_full", scope: !7249, file: !3, line: 285, baseType: !304, size: 8, offset: 4288)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "phycount", scope: !7249, file: !3, line: 286, baseType: !304, size: 8, offset: 4296)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !7249, file: !3, line: 287, baseType: !7, size: 32, offset: 4320)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "shared_irq", scope: !7249, file: !3, line: 288, baseType: !13, size: 1, offset: 4352, flags: DIFlagBitField, extraData: i64 4352)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "dxsuflo", scope: !7249, file: !3, line: 289, baseType: !13, size: 1, offset: 4353, flags: DIFlagBitField, extraData: i64 4352)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "mii", scope: !7249, file: !3, line: 290, baseType: !13, size: 1, offset: 4354, flags: DIFlagBitField, extraData: i64 4352)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7249, file: !3, line: 291, baseType: !13, size: 1, offset: 4355, flags: DIFlagBitField, extraData: i64 4352)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "port_tp", scope: !7249, file: !3, line: 292, baseType: !13, size: 1, offset: 4356, flags: DIFlagBitField, extraData: i64 4352)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "fdx", scope: !7249, file: !3, line: 293, baseType: !13, size: 1, offset: 4357, flags: DIFlagBitField, extraData: i64 4352)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7249, file: !3, line: 294, baseType: !326, size: 64, offset: 4416)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "mii_if", scope: !7249, file: !3, line: 295, baseType: !7641, size: 384, offset: 4480)
!7641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_if_info", file: !7642, line: 18, size: 384, elements: !7643)
!7642 = !DIFile(filename: "./include/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!7643 = !{!7644, !7645, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7653}
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !7641, file: !7642, line: 19, baseType: !7, size: 32)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7641, file: !7642, line: 20, baseType: !7, size: 32, offset: 32)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id_mask", scope: !7641, file: !7642, line: 21, baseType: !7, size: 32, offset: 64)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num_mask", scope: !7641, file: !7642, line: 22, baseType: !7, size: 32, offset: 96)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "full_duplex", scope: !7641, file: !7642, line: 24, baseType: !13, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "force_media", scope: !7641, file: !7642, line: 25, baseType: !13, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "supports_gmii", scope: !7641, file: !7642, line: 26, baseType: !13, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7641, file: !7642, line: 28, baseType: !326, size: 64, offset: 192)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_read", scope: !7641, file: !7642, line: 29, baseType: !866, size: 64, offset: 256)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_write", scope: !7641, file: !7642, line: 30, baseType: !7654, size: 64, offset: 320)
!7654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7655, size: 64)
!7655 = !DISubroutineType(types: !7656)
!7656 = !{null, !326, !7, !7, !7}
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !7249, file: !3, line: 296, baseType: !3268, size: 320, offset: 4864)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !7249, file: !3, line: 297, baseType: !1022, size: 32, offset: 5184)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "phymask", scope: !7249, file: !3, line: 300, baseType: !1022, size: 32, offset: 5216)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "chip_version", scope: !7249, file: !3, line: 301, baseType: !511, size: 16, offset: 5248)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "save_regs", scope: !7249, file: !3, line: 304, baseType: !7662, size: 64, offset: 5264)
!7662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !616, size: 64, elements: !2306)
!7663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7244, size: 64)
!7664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7665, size: 64)
!7665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !6, line: 209, size: 640, elements: !7666)
!7666 = !{!7667, !7668, !7669, !7670, !7671, !7672, !7673, !7674}
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7665, file: !6, line: 210, baseType: !320, size: 128)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7665, file: !6, line: 211, baseType: !1066, size: 256, offset: 128)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7665, file: !6, line: 212, baseType: !517, size: 8, offset: 384)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !7665, file: !6, line: 217, baseType: !806, size: 8, offset: 392)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !7665, file: !6, line: 218, baseType: !7, size: 32, offset: 416)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !7665, file: !6, line: 219, baseType: !7, size: 32, offset: 448)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !7665, file: !6, line: 220, baseType: !7, size: 32, offset: 480)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7665, file: !6, line: 221, baseType: !335, size: 128, align: 64, offset: 512)
!7675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7676, size: 64)
!7676 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !304)
!7677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!7678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7679, size: 64)
!7679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_ioctl_data", file: !7680, line: 178, size: 64, elements: !7681)
!7680 = !DIFile(filename: "./include/uapi/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!7681 = !{!7682, !7683, !7684, !7685}
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !7679, file: !7680, line: 179, baseType: !510, size: 16)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num", scope: !7679, file: !7680, line: 180, baseType: !510, size: 16, offset: 16)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "val_in", scope: !7679, file: !7680, line: 181, baseType: !510, size: 16, offset: 32)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "val_out", scope: !7679, file: !7680, line: 182, baseType: !510, size: 16, offset: 48)
!7686 = !{!7687, !7736, !7741, !7746, !7748, !7753, !7758, !7760, !7765, !7770, !7772, !7777, !7782, !7784, !7787, !7792, !7794, !7799, !7804, !7806, !7811, !7813, !7815, !7817, !7822, !7827, !7832, !7837, !7840, !7842, !7847, !7849, !7851, !0, !7853, !7855, !7857, !7859, !7864, !7866, !7868, !7870, !7875, !7878, !7880, !7883, !7885, !7887, !7889, !7891, !7893, !7895, !7897, !7900, !7902, !7904, !7906, !7908, !7911, !7917, !7919, !7921, !7929, !7933, !7935, !7937}
!7687 = !DIGlobalVariableExpression(var: !7688, expr: !DIExpression())
!7688 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 2961, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7690)
!7690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !7691, line: 69, size: 320, elements: !7692)
!7691 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!7692 = !{!7693, !7694, !7695, !7711, !7712, !7714, !7715}
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7690, file: !7691, line: 70, baseType: !328, size: 64)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !7690, file: !7691, line: 71, baseType: !1015, size: 64, offset: 64)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7690, file: !7691, line: 72, baseType: !7696, size: 64, offset: 128)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 64)
!7697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7698)
!7698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !7691, line: 47, size: 256, elements: !7699)
!7699 = !{!7700, !7701, !7706, !7710}
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7698, file: !7691, line: 49, baseType: !13, size: 32)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !7698, file: !7691, line: 51, baseType: !7702, size: 64, offset: 64)
!7702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7703, size: 64)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!7, !328, !7705}
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7689, size: 64)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !7698, file: !7691, line: 53, baseType: !7707, size: 64, offset: 128)
!7707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7708, size: 64)
!7708 = !DISubroutineType(types: !7709)
!7709 = !{!7, !1073, !7705}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7698, file: !7691, line: 55, baseType: !1449, size: 64, offset: 192)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !7690, file: !7691, line: 73, baseType: !7247, size: 16, offset: 192)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !7690, file: !7691, line: 74, baseType: !7713, size: 8, offset: 208)
!7713 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !368, line: 16, baseType: !6000)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7690, file: !7691, line: 75, baseType: !829, size: 8, offset: 216)
!7715 = !DIDerivedType(tag: DW_TAG_member, scope: !7690, file: !7691, line: 76, baseType: !7716, size: 64, offset: 256)
!7716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7690, file: !7691, line: 76, size: 64, elements: !7717)
!7717 = !{!7718, !7719, !7726}
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7716, file: !7691, line: 77, baseType: !626, size: 64)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !7716, file: !7691, line: 78, baseType: !7720, size: 64)
!7720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7721, size: 64)
!7721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7722)
!7722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !7691, line: 86, size: 128, elements: !7723)
!7723 = !{!7724, !7725}
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !7722, file: !7691, line: 87, baseType: !13, size: 32)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !7722, file: !7691, line: 88, baseType: !1073, size: 64, offset: 64)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !7716, file: !7691, line: 79, baseType: !7727, size: 64)
!7727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7728, size: 64)
!7728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7729)
!7729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !7691, line: 92, size: 256, elements: !7730)
!7730 = !{!7731, !7732, !7733, !7734, !7735}
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !7729, file: !7691, line: 94, baseType: !13, size: 32)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !7729, file: !7691, line: 95, baseType: !13, size: 32, offset: 32)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !7729, file: !7691, line: 96, baseType: !4628, size: 64, offset: 64)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7729, file: !7691, line: 97, baseType: !7696, size: 64, offset: 128)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !7729, file: !7691, line: 98, baseType: !626, size: 64, offset: 192)
!7736 = !DIGlobalVariableExpression(var: !7737, expr: !DIExpression())
!7737 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype333", scope: !2, file: !3, line: 2961, type: !7738, isLocal: true, isDefinition: true, align: 8)
!7738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 216, elements: !7739)
!7739 = !{!7740}
!7740 = !DISubrange(count: 27)
!7741 = !DIGlobalVariableExpression(var: !7742, expr: !DIExpression())
!7742 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug334", scope: !2, file: !3, line: 2962, type: !7743, isLocal: true, isDefinition: true, align: 8)
!7743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 312, elements: !7744)
!7744 = !{!7745}
!7745 = !DISubrange(count: 39)
!7746 = !DIGlobalVariableExpression(var: !7747, expr: !DIExpression())
!7747 = distinct !DIGlobalVariable(name: "__param_max_interrupt_work", scope: !2, file: !3, line: 2963, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7748 = !DIGlobalVariableExpression(var: !7749, expr: !DIExpression())
!7749 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_interrupt_worktype335", scope: !2, file: !3, line: 2963, type: !7750, isLocal: true, isDefinition: true, align: 8)
!7750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 320, elements: !7751)
!7751 = !{!7752}
!7752 = !DISubrange(count: 40)
!7753 = !DIGlobalVariableExpression(var: !7754, expr: !DIExpression())
!7754 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_interrupt_work336", scope: !2, file: !3, line: 2964, type: !7755, isLocal: true, isDefinition: true, align: 8)
!7755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 616, elements: !7756)
!7756 = !{!7757}
!7757 = !DISubrange(count: 77)
!7758 = !DIGlobalVariableExpression(var: !7759, expr: !DIExpression())
!7759 = distinct !DIGlobalVariable(name: "__param_rx_copybreak", scope: !2, file: !3, line: 2966, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7760 = !DIGlobalVariableExpression(var: !7761, expr: !DIExpression())
!7761 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_rx_copybreaktype337", scope: !2, file: !3, line: 2966, type: !7762, isLocal: true, isDefinition: true, align: 8)
!7762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 272, elements: !7763)
!7763 = !{!7764}
!7764 = !DISubrange(count: 34)
!7765 = !DIGlobalVariableExpression(var: !7766, expr: !DIExpression())
!7766 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_rx_copybreak338", scope: !2, file: !3, line: 2967, type: !7767, isLocal: true, isDefinition: true, align: 8)
!7767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 608, elements: !7768)
!7768 = !{!7769}
!7769 = !DISubrange(count: 76)
!7770 = !DIGlobalVariableExpression(var: !7771, expr: !DIExpression())
!7771 = distinct !DIGlobalVariable(name: "__param_tx_start_pt", scope: !2, file: !3, line: 2969, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7772 = !DIGlobalVariableExpression(var: !7773, expr: !DIExpression())
!7773 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_tx_start_pttype339", scope: !2, file: !3, line: 2969, type: !7774, isLocal: true, isDefinition: true, align: 8)
!7774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 264, elements: !7775)
!7775 = !{!7776}
!7776 = !DISubrange(count: 33)
!7777 = !DIGlobalVariableExpression(var: !7778, expr: !DIExpression())
!7778 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_tx_start_pt340", scope: !2, file: !3, line: 2970, type: !7779, isLocal: true, isDefinition: true, align: 8)
!7779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 480, elements: !7780)
!7780 = !{!7781}
!7781 = !DISubrange(count: 60)
!7782 = !DIGlobalVariableExpression(var: !7783, expr: !DIExpression())
!7783 = distinct !DIGlobalVariable(name: "__param_pcnet32vlb", scope: !2, file: !3, line: 2971, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7784 = !DIGlobalVariableExpression(var: !7785, expr: !DIExpression())
!7785 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_pcnet32vlbtype341", scope: !2, file: !3, line: 2971, type: !7786, isLocal: true, isDefinition: true, align: 8)
!7786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 256, elements: !854)
!7787 = !DIGlobalVariableExpression(var: !7788, expr: !DIExpression())
!7788 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_pcnet32vlb342", scope: !2, file: !3, line: 2972, type: !7789, isLocal: true, isDefinition: true, align: 8)
!7789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 536, elements: !7790)
!7790 = !{!7791}
!7791 = !DISubrange(count: 67)
!7792 = !DIGlobalVariableExpression(var: !7793, expr: !DIExpression())
!7793 = distinct !DIGlobalVariable(name: "__param_options", scope: !2, file: !3, line: 2973, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7794 = !DIGlobalVariableExpression(var: !7795, expr: !DIExpression())
!7795 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_optionstype343", scope: !2, file: !3, line: 2973, type: !7796, isLocal: true, isDefinition: true, align: 8)
!7796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 304, elements: !7797)
!7797 = !{!7798}
!7798 = !DISubrange(count: 38)
!7799 = !DIGlobalVariableExpression(var: !7800, expr: !DIExpression())
!7800 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_options344", scope: !2, file: !3, line: 2974, type: !7801, isLocal: true, isDefinition: true, align: 8)
!7801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 496, elements: !7802)
!7802 = !{!7803}
!7803 = !DISubrange(count: 62)
!7804 = !DIGlobalVariableExpression(var: !7805, expr: !DIExpression())
!7805 = distinct !DIGlobalVariable(name: "__param_full_duplex", scope: !2, file: !3, line: 2975, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7806 = !DIGlobalVariableExpression(var: !7807, expr: !DIExpression())
!7807 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_full_duplextype345", scope: !2, file: !3, line: 2975, type: !7808, isLocal: true, isDefinition: true, align: 8)
!7808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 336, elements: !7809)
!7809 = !{!7810}
!7810 = !DISubrange(count: 42)
!7811 = !DIGlobalVariableExpression(var: !7812, expr: !DIExpression())
!7812 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_full_duplex346", scope: !2, file: !3, line: 2976, type: !7779, isLocal: true, isDefinition: true, align: 8)
!7813 = !DIGlobalVariableExpression(var: !7814, expr: !DIExpression())
!7814 = distinct !DIGlobalVariable(name: "__param_homepna", scope: !2, file: !3, line: 2978, type: !7689, isLocal: true, isDefinition: true, align: 64)
!7815 = !DIGlobalVariableExpression(var: !7816, expr: !DIExpression())
!7816 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_homepnatype347", scope: !2, file: !3, line: 2978, type: !7796, isLocal: true, isDefinition: true, align: 8)
!7817 = !DIGlobalVariableExpression(var: !7818, expr: !DIExpression())
!7818 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_homepna348", scope: !2, file: !3, line: 2979, type: !7819, isLocal: true, isDefinition: true, align: 8)
!7819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 800, elements: !7820)
!7820 = !{!7821}
!7821 = !DISubrange(count: 100)
!7822 = !DIGlobalVariableExpression(var: !7823, expr: !DIExpression())
!7823 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author349", scope: !2, file: !3, line: 2983, type: !7824, isLocal: true, isDefinition: true, align: 8)
!7824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 280, elements: !7825)
!7825 = !{!7826}
!7826 = !DISubrange(count: 35)
!7827 = !DIGlobalVariableExpression(var: !7828, expr: !DIExpression())
!7828 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description350", scope: !2, file: !3, line: 2984, type: !7829, isLocal: true, isDefinition: true, align: 8)
!7829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 552, elements: !7830)
!7830 = !{!7831}
!7831 = !DISubrange(count: 69)
!7832 = !DIGlobalVariableExpression(var: !7833, expr: !DIExpression())
!7833 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file351", scope: !2, file: !3, line: 2985, type: !7834, isLocal: true, isDefinition: true, align: 8)
!7834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 368, elements: !7835)
!7835 = !{!7836}
!7836 = !DISubrange(count: 46)
!7837 = !DIGlobalVariableExpression(var: !7838, expr: !DIExpression())
!7838 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license352", scope: !2, file: !3, line: 2985, type: !7839, isLocal: true, isDefinition: true, align: 8)
!7839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 160, elements: !935)
!7840 = !DIGlobalVariableExpression(var: !7841, expr: !DIExpression())
!7841 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pcnet32_init_module353", scope: !2, file: !3, line: 3030, type: !626, isLocal: true, isDefinition: true)
!7842 = !DIGlobalVariableExpression(var: !7843, expr: !DIExpression())
!7843 = distinct !DIGlobalVariable(name: "__exitcall_pcnet32_cleanup_module", scope: !2, file: !3, line: 3031, type: !7844, isLocal: true, isDefinition: true)
!7844 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !7845, line: 117, baseType: !7846)
!7845 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!7846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!7847 = !DIGlobalVariableExpression(var: !7848, expr: !DIExpression())
!7848 = distinct !DIGlobalVariable(name: "pcnet32vlb", scope: !2, file: !3, line: 86, type: !7, isLocal: true, isDefinition: true)
!7849 = !DIGlobalVariableExpression(var: !7850, expr: !DIExpression())
!7850 = distinct !DIGlobalVariable(name: "pcnet32_dev", scope: !2, file: !3, line: 88, type: !326, isLocal: true, isDefinition: true)
!7851 = !DIGlobalVariableExpression(var: !7852, expr: !DIExpression())
!7852 = distinct !DIGlobalVariable(name: "pcnet32_have_pci", scope: !2, file: !3, line: 2959, type: !7, isLocal: true, isDefinition: true)
!7853 = !DIGlobalVariableExpression(var: !7854, expr: !DIExpression())
!7854 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 2957, type: !7, isLocal: true, isDefinition: true)
!7855 = !DIGlobalVariableExpression(var: !7856, expr: !DIExpression())
!7856 = distinct !DIGlobalVariable(name: "__param_str_max_interrupt_work", scope: !2, file: !3, line: 2963, type: !7738, isLocal: true, isDefinition: true)
!7857 = !DIGlobalVariableExpression(var: !7858, expr: !DIExpression())
!7858 = distinct !DIGlobalVariable(name: "max_interrupt_work", scope: !2, file: !3, line: 90, type: !7, isLocal: true, isDefinition: true)
!7859 = !DIGlobalVariableExpression(var: !7860, expr: !DIExpression())
!7860 = distinct !DIGlobalVariable(name: "__param_str_rx_copybreak", scope: !2, file: !3, line: 2966, type: !7861, isLocal: true, isDefinition: true)
!7861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 168, elements: !7862)
!7862 = !{!7863}
!7863 = !DISubrange(count: 21)
!7864 = !DIGlobalVariableExpression(var: !7865, expr: !DIExpression())
!7865 = distinct !DIGlobalVariable(name: "rx_copybreak", scope: !2, file: !3, line: 91, type: !7, isLocal: true, isDefinition: true)
!7866 = !DIGlobalVariableExpression(var: !7867, expr: !DIExpression())
!7867 = distinct !DIGlobalVariable(name: "__param_str_tx_start_pt", scope: !2, file: !3, line: 2969, type: !7839, isLocal: true, isDefinition: true)
!7868 = !DIGlobalVariableExpression(var: !7869, expr: !DIExpression())
!7869 = distinct !DIGlobalVariable(name: "tx_start_pt", scope: !2, file: !3, line: 2958, type: !7, isLocal: true, isDefinition: true)
!7870 = !DIGlobalVariableExpression(var: !7871, expr: !DIExpression())
!7871 = distinct !DIGlobalVariable(name: "__param_str_pcnet32vlb", scope: !2, file: !3, line: 2971, type: !7872, isLocal: true, isDefinition: true)
!7872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 152, elements: !7873)
!7873 = !{!7874}
!7874 = !DISubrange(count: 19)
!7875 = !DIGlobalVariableExpression(var: !7876, expr: !DIExpression())
!7876 = distinct !DIGlobalVariable(name: "__param_str_options", scope: !2, file: !3, line: 2973, type: !7877, isLocal: true, isDefinition: true)
!7877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 128, elements: !305)
!7878 = !DIGlobalVariableExpression(var: !7879, expr: !DIExpression())
!7879 = distinct !DIGlobalVariable(name: "__param_arr_options", scope: !2, file: !3, line: 2973, type: !7728, isLocal: true, isDefinition: true)
!7880 = !DIGlobalVariableExpression(var: !7881, expr: !DIExpression())
!7881 = distinct !DIGlobalVariable(name: "options", scope: !2, file: !3, line: 141, type: !7882, isLocal: true, isDefinition: true)
!7882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !2467)
!7883 = !DIGlobalVariableExpression(var: !7884, expr: !DIExpression())
!7884 = distinct !DIGlobalVariable(name: "__param_str_full_duplex", scope: !2, file: !3, line: 2975, type: !7839, isLocal: true, isDefinition: true)
!7885 = !DIGlobalVariableExpression(var: !7886, expr: !DIExpression())
!7886 = distinct !DIGlobalVariable(name: "__param_arr_full_duplex", scope: !2, file: !3, line: 2975, type: !7728, isLocal: true, isDefinition: true)
!7887 = !DIGlobalVariableExpression(var: !7888, expr: !DIExpression())
!7888 = distinct !DIGlobalVariable(name: "full_duplex", scope: !2, file: !3, line: 142, type: !7882, isLocal: true, isDefinition: true)
!7889 = !DIGlobalVariableExpression(var: !7890, expr: !DIExpression())
!7890 = distinct !DIGlobalVariable(name: "__param_str_homepna", scope: !2, file: !3, line: 2978, type: !7877, isLocal: true, isDefinition: true)
!7891 = !DIGlobalVariableExpression(var: !7892, expr: !DIExpression())
!7892 = distinct !DIGlobalVariable(name: "__param_arr_homepna", scope: !2, file: !3, line: 2978, type: !7728, isLocal: true, isDefinition: true)
!7893 = !DIGlobalVariableExpression(var: !7894, expr: !DIExpression())
!7894 = distinct !DIGlobalVariable(name: "homepna", scope: !2, file: !3, line: 143, type: !7882, isLocal: true, isDefinition: true)
!7895 = !DIGlobalVariableExpression(var: !7896, expr: !DIExpression())
!7896 = distinct !DIGlobalVariable(name: "pcnet32_driver", scope: !2, file: !3, line: 2946, type: !7390, isLocal: true, isDefinition: true)
!7897 = !DIGlobalVariableExpression(var: !7898, expr: !DIExpression())
!7898 = distinct !DIGlobalVariable(name: "pcnet32_pci_tbl", scope: !2, file: !3, line: 60, type: !7899, isLocal: true, isDefinition: true)
!7899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7396, size: 1024, elements: !2306)
!7900 = !DIGlobalVariableExpression(var: !7901, expr: !DIExpression())
!7901 = distinct !DIGlobalVariable(name: "pcnet32_debug", scope: !2, file: !3, line: 84, type: !7, isLocal: true, isDefinition: true)
!7902 = !DIGlobalVariableExpression(var: !7903, expr: !DIExpression())
!7903 = distinct !DIGlobalVariable(name: "pcnet32_wio", scope: !2, file: !3, line: 381, type: !7564, isLocal: true, isDefinition: true)
!7904 = !DIGlobalVariableExpression(var: !7905, expr: !DIExpression())
!7905 = distinct !DIGlobalVariable(name: "pcnet32_dwio", scope: !2, file: !3, line: 436, type: !7564, isLocal: true, isDefinition: true)
!7906 = !DIGlobalVariableExpression(var: !7907, expr: !DIExpression())
!7907 = distinct !DIGlobalVariable(name: "cards_found", scope: !2, file: !3, line: 76, type: !7, isLocal: true, isDefinition: true)
!7908 = !DIGlobalVariableExpression(var: !7909, expr: !DIExpression())
!7909 = distinct !DIGlobalVariable(name: "options_mapping", scope: !2, file: !3, line: 112, type: !7910, isLocal: true, isDefinition: true)
!7910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 128, elements: !305)
!7911 = !DIGlobalVariableExpression(var: !7912, expr: !DIExpression())
!7912 = distinct !DIGlobalVariable(name: "__warned", scope: !7913, file: !7914, line: 275, type: !806, isLocal: true, isDefinition: true)
!7913 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !7914, file: !7914, line: 271, type: !7915, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!7914 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!2070, !6545, !626, !1074, !7070, !348}
!7917 = !DIGlobalVariableExpression(var: !7918, expr: !DIExpression())
!7918 = distinct !DIGlobalVariable(name: "pcnet32_netdev_ops", scope: !2, file: !3, line: 1567, type: !433, isLocal: true, isDefinition: true)
!7919 = !DIGlobalVariableExpression(var: !7920, expr: !DIExpression())
!7920 = distinct !DIGlobalVariable(name: "pcnet32_ethtool_ops", scope: !2, file: !3, line: 1483, type: !5526, isLocal: true, isDefinition: true)
!7921 = !DIGlobalVariableExpression(var: !7922, expr: !DIExpression())
!7922 = distinct !DIGlobalVariable(name: "data_len", scope: !7923, file: !3, line: 975, type: !7928, isLocal: true, isDefinition: true)
!7923 = distinct !DISubprogram(name: "pcnet32_loopback_test", scope: !3, file: !3, line: 962, type: !7924, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{!7, !326, !7926}
!7926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7927, size: 64)
!7927 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !313, line: 107, baseType: !367)
!7928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!7929 = !DIGlobalVariableExpression(var: !7930, expr: !DIExpression())
!7930 = distinct !DIGlobalVariable(name: "pcnet32_gstrings_test", scope: !2, file: !3, line: 132, type: !7931, isLocal: true, isDefinition: true)
!7931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 256, elements: !7932)
!7932 = !{!2507, !855}
!7933 = !DIGlobalVariableExpression(var: !7934, expr: !DIExpression())
!7934 = distinct !DIGlobalVariable(name: "pcnet32_pm_ops", scope: !2, file: !3, line: 2944, type: !6572, isLocal: true, isDefinition: true)
!7935 = !DIGlobalVariableExpression(var: !7936, expr: !DIExpression())
!7936 = distinct !DIGlobalVariable(name: "tx_start", scope: !2, file: !3, line: 85, type: !7, isLocal: true, isDefinition: true)
!7937 = !DIGlobalVariableExpression(var: !7938, expr: !DIExpression())
!7938 = distinct !DIGlobalVariable(name: "pcnet32_portlist", scope: !2, file: !3, line: 81, type: !7939, isLocal: true, isDefinition: true)
!7939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 160, elements: !2832)
!7940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 112, elements: !653)
!7941 = !{!"rsp"}
!7942 = !{i32 7, !"Dwarf Version", i32 4}
!7943 = !{i32 2, !"Debug Info Version", i32 3}
!7944 = !{i32 1, !"wchar_size", i32 2}
!7945 = !{i32 1, !"Code Model", i32 2}
!7946 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7947 = distinct !DISubprogram(name: "pcnet32_cleanup_module", scope: !3, file: !3, line: 3010, type: !3842, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!7948 = !DILocalVariable(name: "next_dev", scope: !7947, file: !3, line: 3012, type: !326)
!7949 = !DILocation(line: 3012, column: 21, scope: !7947)
!7950 = !DILocation(line: 3014, column: 2, scope: !7947)
!7951 = !DILocation(line: 3014, column: 9, scope: !7947)
!7952 = !DILocalVariable(name: "lp", scope: !7953, file: !3, line: 3015, type: !7248)
!7953 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 3014, column: 22)
!7954 = !DILocation(line: 3015, column: 27, scope: !7953)
!7955 = !DILocation(line: 3015, column: 44, scope: !7953)
!7956 = !DILocation(line: 3015, column: 32, scope: !7953)
!7957 = !DILocation(line: 3016, column: 14, scope: !7953)
!7958 = !DILocation(line: 3016, column: 18, scope: !7953)
!7959 = !DILocation(line: 3016, column: 12, scope: !7953)
!7960 = !DILocation(line: 3017, column: 21, scope: !7953)
!7961 = !DILocation(line: 3017, column: 3, scope: !7953)
!7962 = !DILocation(line: 3018, column: 21, scope: !7953)
!7963 = !DILocation(line: 3018, column: 3, scope: !7953)
!7964 = !DILocation(line: 3019, column: 3, scope: !7953)
!7965 = !DILocation(line: 3020, column: 22, scope: !7953)
!7966 = !DILocation(line: 3020, column: 26, scope: !7953)
!7967 = !DILocation(line: 3020, column: 35, scope: !7953)
!7968 = !DILocation(line: 3021, column: 7, scope: !7953)
!7969 = !DILocation(line: 3021, column: 11, scope: !7953)
!7970 = !DILocation(line: 3021, column: 23, scope: !7953)
!7971 = !DILocation(line: 3021, column: 27, scope: !7953)
!7972 = !DILocation(line: 3020, column: 3, scope: !7953)
!7973 = !DILocation(line: 3022, column: 15, scope: !7953)
!7974 = !DILocation(line: 3022, column: 3, scope: !7953)
!7975 = !DILocation(line: 3023, column: 17, scope: !7953)
!7976 = !DILocation(line: 3023, column: 15, scope: !7953)
!7977 = distinct !{!7977, !7950, !7978}
!7978 = !DILocation(line: 3024, column: 2, scope: !7947)
!7979 = !DILocation(line: 3026, column: 6, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 3026, column: 6)
!7981 = !DILocation(line: 3026, column: 6, scope: !7947)
!7982 = !DILocation(line: 3027, column: 3, scope: !7980)
!7983 = !DILocation(line: 3028, column: 1, scope: !7947)
!7984 = distinct !DISubprogram(name: "netdev_priv", scope: !6, file: !6, line: 2322, type: !7985, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{!626, !808}
!7987 = !DILocalVariable(name: "dev", arg: 1, scope: !7984, file: !6, line: 2322, type: !808)
!7988 = !DILocation(line: 2322, column: 58, scope: !7984)
!7989 = !DILocation(line: 2324, column: 17, scope: !7984)
!7990 = !DILocation(line: 2324, column: 9, scope: !7984)
!7991 = !DILocation(line: 2324, column: 21, scope: !7984)
!7992 = !DILocation(line: 2324, column: 2, scope: !7984)
!7993 = distinct !DISubprogram(name: "pcnet32_free_ring", scope: !3, file: !3, line: 2046, type: !442, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!7994 = !DILocalVariable(name: "dev", arg: 1, scope: !7993, file: !3, line: 2046, type: !326)
!7995 = !DILocation(line: 2046, column: 50, scope: !7993)
!7996 = !DILocalVariable(name: "lp", scope: !7993, file: !3, line: 2048, type: !7248)
!7997 = !DILocation(line: 2048, column: 26, scope: !7993)
!7998 = !DILocation(line: 2048, column: 43, scope: !7993)
!7999 = !DILocation(line: 2048, column: 31, scope: !7993)
!8000 = !DILocation(line: 2050, column: 8, scope: !7993)
!8001 = !DILocation(line: 2050, column: 12, scope: !7993)
!8002 = !DILocation(line: 2050, column: 2, scope: !7993)
!8003 = !DILocation(line: 2051, column: 2, scope: !7993)
!8004 = !DILocation(line: 2051, column: 6, scope: !7993)
!8005 = !DILocation(line: 2051, column: 16, scope: !7993)
!8006 = !DILocation(line: 2053, column: 8, scope: !7993)
!8007 = !DILocation(line: 2053, column: 12, scope: !7993)
!8008 = !DILocation(line: 2053, column: 2, scope: !7993)
!8009 = !DILocation(line: 2054, column: 2, scope: !7993)
!8010 = !DILocation(line: 2054, column: 6, scope: !7993)
!8011 = !DILocation(line: 2054, column: 16, scope: !7993)
!8012 = !DILocation(line: 2056, column: 8, scope: !7993)
!8013 = !DILocation(line: 2056, column: 12, scope: !7993)
!8014 = !DILocation(line: 2056, column: 2, scope: !7993)
!8015 = !DILocation(line: 2057, column: 2, scope: !7993)
!8016 = !DILocation(line: 2057, column: 6, scope: !7993)
!8017 = !DILocation(line: 2057, column: 18, scope: !7993)
!8018 = !DILocation(line: 2059, column: 8, scope: !7993)
!8019 = !DILocation(line: 2059, column: 12, scope: !7993)
!8020 = !DILocation(line: 2059, column: 2, scope: !7993)
!8021 = !DILocation(line: 2060, column: 2, scope: !7993)
!8022 = !DILocation(line: 2060, column: 6, scope: !7993)
!8023 = !DILocation(line: 2060, column: 18, scope: !7993)
!8024 = !DILocation(line: 2062, column: 6, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 2062, column: 6)
!8026 = !DILocation(line: 2062, column: 10, scope: !8025)
!8027 = !DILocation(line: 2062, column: 6, scope: !7993)
!8028 = !DILocation(line: 2063, column: 22, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2062, column: 19)
!8030 = !DILocation(line: 2063, column: 26, scope: !8029)
!8031 = !DILocation(line: 2063, column: 35, scope: !8029)
!8032 = !DILocation(line: 2064, column: 40, scope: !8029)
!8033 = !DILocation(line: 2064, column: 44, scope: !8029)
!8034 = !DILocation(line: 2064, column: 38, scope: !8029)
!8035 = !DILocation(line: 2065, column: 7, scope: !8029)
!8036 = !DILocation(line: 2065, column: 11, scope: !8029)
!8037 = !DILocation(line: 2065, column: 20, scope: !8029)
!8038 = !DILocation(line: 2065, column: 24, scope: !8029)
!8039 = !DILocation(line: 2063, column: 3, scope: !8029)
!8040 = !DILocation(line: 2066, column: 3, scope: !8029)
!8041 = !DILocation(line: 2066, column: 7, scope: !8029)
!8042 = !DILocation(line: 2066, column: 15, scope: !8029)
!8043 = !DILocation(line: 2067, column: 2, scope: !8029)
!8044 = !DILocation(line: 2069, column: 6, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 2069, column: 6)
!8046 = !DILocation(line: 2069, column: 10, scope: !8045)
!8047 = !DILocation(line: 2069, column: 6, scope: !7993)
!8048 = !DILocation(line: 2070, column: 22, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 2069, column: 19)
!8050 = !DILocation(line: 2070, column: 26, scope: !8049)
!8051 = !DILocation(line: 2070, column: 35, scope: !8049)
!8052 = !DILocation(line: 2071, column: 40, scope: !8049)
!8053 = !DILocation(line: 2071, column: 44, scope: !8049)
!8054 = !DILocation(line: 2071, column: 38, scope: !8049)
!8055 = !DILocation(line: 2072, column: 7, scope: !8049)
!8056 = !DILocation(line: 2072, column: 11, scope: !8049)
!8057 = !DILocation(line: 2072, column: 20, scope: !8049)
!8058 = !DILocation(line: 2072, column: 24, scope: !8049)
!8059 = !DILocation(line: 2070, column: 3, scope: !8049)
!8060 = !DILocation(line: 2073, column: 3, scope: !8049)
!8061 = !DILocation(line: 2073, column: 7, scope: !8049)
!8062 = !DILocation(line: 2073, column: 15, scope: !8049)
!8063 = !DILocation(line: 2074, column: 2, scope: !8049)
!8064 = !DILocation(line: 2075, column: 1, scope: !7993)
!8065 = distinct !DISubprogram(name: "dma_free_coherent", scope: !7914, file: !7914, line: 400, type: !8066, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{null, !6545, !1074, !626, !2070}
!8068 = !DILocalVariable(name: "dev", arg: 1, scope: !8065, file: !7914, line: 400, type: !6545)
!8069 = !DILocation(line: 400, column: 53, scope: !8065)
!8070 = !DILocalVariable(name: "size", arg: 2, scope: !8065, file: !7914, line: 400, type: !1074)
!8071 = !DILocation(line: 400, column: 65, scope: !8065)
!8072 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !8065, file: !7914, line: 401, type: !626)
!8073 = !DILocation(line: 401, column: 9, scope: !8065)
!8074 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !8065, file: !7914, line: 401, type: !2070)
!8075 = !DILocation(line: 401, column: 30, scope: !8065)
!8076 = !DILocation(line: 403, column: 24, scope: !8065)
!8077 = !DILocation(line: 403, column: 29, scope: !8065)
!8078 = !DILocation(line: 403, column: 35, scope: !8065)
!8079 = !DILocation(line: 403, column: 45, scope: !8065)
!8080 = !DILocation(line: 403, column: 9, scope: !8065)
!8081 = !DILocation(line: 403, column: 2, scope: !8065)
!8082 = distinct !DISubprogram(name: "pcnet32_init_module", scope: !3, file: !3, line: 2989, type: !8083, scopeLine: 2990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!7}
!8085 = !DILocation(line: 2991, column: 33, scope: !8082)
!8086 = !DILocation(line: 2991, column: 18, scope: !8082)
!8087 = !DILocation(line: 2991, column: 16, scope: !8082)
!8088 = !DILocation(line: 2993, column: 7, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2993, column: 6)
!8090 = !DILocation(line: 2993, column: 19, scope: !8089)
!8091 = !DILocation(line: 2993, column: 25, scope: !8089)
!8092 = !DILocation(line: 2993, column: 29, scope: !8089)
!8093 = !DILocation(line: 2993, column: 41, scope: !8089)
!8094 = !DILocation(line: 2993, column: 6, scope: !8082)
!8095 = !DILocation(line: 2994, column: 14, scope: !8089)
!8096 = !DILocation(line: 2994, column: 12, scope: !8089)
!8097 = !DILocation(line: 2994, column: 3, scope: !8089)
!8098 = !DILocation(line: 2997, column: 7, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2997, column: 6)
!8100 = !DILocation(line: 2997, column: 6, scope: !8082)
!8101 = !DILocation(line: 2998, column: 20, scope: !8099)
!8102 = !DILocation(line: 2998, column: 3, scope: !8099)
!8103 = !DILocation(line: 3001, column: 6, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3001, column: 6)
!8105 = !DILocation(line: 3001, column: 6, scope: !8082)
!8106 = !DILocation(line: 3002, column: 3, scope: !8104)
!8107 = !DILocation(line: 3004, column: 6, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3004, column: 6)
!8109 = !DILocation(line: 3004, column: 18, scope: !8108)
!8110 = !DILocation(line: 3004, column: 22, scope: !8108)
!8111 = !DILocation(line: 3004, column: 36, scope: !8108)
!8112 = !DILocation(line: 3004, column: 6, scope: !8082)
!8113 = !DILocation(line: 3005, column: 3, scope: !8108)
!8114 = !DILocation(line: 3007, column: 10, scope: !8082)
!8115 = !DILocation(line: 3007, column: 29, scope: !8082)
!8116 = !DILocation(line: 3007, column: 27, scope: !8082)
!8117 = !DILocation(line: 3007, column: 9, scope: !8082)
!8118 = !DILocation(line: 3007, column: 2, scope: !8082)
!8119 = distinct !DISubprogram(name: "pcnet32_probe_pci", scope: !3, file: !3, line: 1524, type: !7408, scopeLine: 1525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!8120 = !DILocalVariable(name: "pdev", arg: 1, scope: !8119, file: !3, line: 1524, type: !7284)
!8121 = !DILocation(line: 1524, column: 35, scope: !8119)
!8122 = !DILocalVariable(name: "ent", arg: 2, scope: !8119, file: !3, line: 1524, type: !7395)
!8123 = !DILocation(line: 1524, column: 69, scope: !8119)
!8124 = !DILocalVariable(name: "ioaddr", scope: !8119, file: !3, line: 1526, type: !348)
!8125 = !DILocation(line: 1526, column: 16, scope: !8119)
!8126 = !DILocalVariable(name: "err", scope: !8119, file: !3, line: 1527, type: !7)
!8127 = !DILocation(line: 1527, column: 6, scope: !8119)
!8128 = !DILocation(line: 1529, column: 26, scope: !8119)
!8129 = !DILocation(line: 1529, column: 8, scope: !8119)
!8130 = !DILocation(line: 1529, column: 6, scope: !8119)
!8131 = !DILocation(line: 1530, column: 6, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 1530, column: 6)
!8133 = !DILocation(line: 1530, column: 10, scope: !8132)
!8134 = !DILocation(line: 1530, column: 6, scope: !8119)
!8135 = !DILocation(line: 1531, column: 7, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1531, column: 7)
!8137 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1530, column: 15)
!8138 = !DILocation(line: 1531, column: 21, scope: !8136)
!8139 = !DILocation(line: 1531, column: 7, scope: !8137)
!8140 = !DILocation(line: 1532, column: 4, scope: !8136)
!8141 = !DILocation(line: 1533, column: 10, scope: !8137)
!8142 = !DILocation(line: 1533, column: 3, scope: !8137)
!8143 = !DILocation(line: 1535, column: 17, scope: !8119)
!8144 = !DILocation(line: 1535, column: 2, scope: !8119)
!8145 = !DILocation(line: 1537, column: 11, scope: !8119)
!8146 = !DILocation(line: 1537, column: 9, scope: !8119)
!8147 = !DILocation(line: 1538, column: 7, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 1538, column: 6)
!8149 = !DILocation(line: 1538, column: 6, scope: !8119)
!8150 = !DILocation(line: 1539, column: 7, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 1539, column: 7)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 1538, column: 15)
!8153 = !DILocation(line: 1539, column: 21, scope: !8151)
!8154 = !DILocation(line: 1539, column: 7, scope: !8152)
!8155 = !DILocation(line: 1540, column: 4, scope: !8151)
!8156 = !DILocation(line: 1541, column: 7, scope: !8152)
!8157 = !DILocation(line: 1542, column: 3, scope: !8152)
!8158 = !DILocation(line: 1545, column: 22, scope: !8119)
!8159 = !DILocation(line: 1545, column: 28, scope: !8119)
!8160 = !DILocation(line: 1545, column: 8, scope: !8119)
!8161 = !DILocation(line: 1545, column: 6, scope: !8119)
!8162 = !DILocation(line: 1546, column: 6, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 1546, column: 6)
!8164 = !DILocation(line: 1546, column: 6, scope: !8119)
!8165 = !DILocation(line: 1547, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 1547, column: 7)
!8167 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 1546, column: 11)
!8168 = !DILocation(line: 1547, column: 21, scope: !8166)
!8169 = !DILocation(line: 1547, column: 7, scope: !8167)
!8170 = !DILocation(line: 1548, column: 4, scope: !8166)
!8171 = !DILocation(line: 1549, column: 3, scope: !8167)
!8172 = !DILocation(line: 1551, column: 7, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 1551, column: 6)
!8174 = !DILocation(line: 1551, column: 6, scope: !8119)
!8175 = !DILocation(line: 1552, column: 7, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 1552, column: 7)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 1551, column: 72)
!8178 = !DILocation(line: 1552, column: 21, scope: !8176)
!8179 = !DILocation(line: 1552, column: 7, scope: !8177)
!8180 = !DILocation(line: 1553, column: 4, scope: !8176)
!8181 = !DILocation(line: 1554, column: 7, scope: !8177)
!8182 = !DILocation(line: 1555, column: 3, scope: !8177)
!8183 = !DILocation(line: 1558, column: 23, scope: !8119)
!8184 = !DILocation(line: 1558, column: 34, scope: !8119)
!8185 = !DILocation(line: 1558, column: 8, scope: !8119)
!8186 = !DILocation(line: 1558, column: 6, scope: !8119)
!8187 = !DILocation(line: 1558, column: 2, scope: !8119)
!8188 = !DILabel(scope: !8119, name: "err_disable_dev", file: !3, line: 1560)
!8189 = !DILocation(line: 1560, column: 1, scope: !8119)
!8190 = !DILocation(line: 1561, column: 6, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 1561, column: 6)
!8192 = !DILocation(line: 1561, column: 10, scope: !8191)
!8193 = !DILocation(line: 1561, column: 6, scope: !8119)
!8194 = !DILocation(line: 1562, column: 22, scope: !8191)
!8195 = !DILocation(line: 1562, column: 3, scope: !8191)
!8196 = !DILocation(line: 1564, column: 9, scope: !8119)
!8197 = !DILocation(line: 1564, column: 2, scope: !8119)
!8198 = !DILocation(line: 1565, column: 1, scope: !8119)
!8199 = distinct !DISubprogram(name: "pcnet32_remove_one", scope: !3, file: !3, line: 2927, type: !7412, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!8200 = !DILocalVariable(name: "pdev", arg: 1, scope: !8199, file: !3, line: 2927, type: !7284)
!8201 = !DILocation(line: 2927, column: 48, scope: !8199)
!8202 = !DILocalVariable(name: "dev", scope: !8199, file: !3, line: 2929, type: !326)
!8203 = !DILocation(line: 2929, column: 21, scope: !8199)
!8204 = !DILocation(line: 2929, column: 43, scope: !8199)
!8205 = !DILocation(line: 2929, column: 27, scope: !8199)
!8206 = !DILocation(line: 2931, column: 6, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 2931, column: 6)
!8208 = !DILocation(line: 2931, column: 6, scope: !8199)
!8209 = !DILocalVariable(name: "lp", scope: !8210, file: !3, line: 2932, type: !7248)
!8210 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 2931, column: 11)
!8211 = !DILocation(line: 2932, column: 27, scope: !8210)
!8212 = !DILocation(line: 2932, column: 44, scope: !8210)
!8213 = !DILocation(line: 2932, column: 32, scope: !8210)
!8214 = !DILocation(line: 2934, column: 21, scope: !8210)
!8215 = !DILocation(line: 2934, column: 3, scope: !8210)
!8216 = !DILocation(line: 2935, column: 21, scope: !8210)
!8217 = !DILocation(line: 2935, column: 3, scope: !8210)
!8218 = !DILocation(line: 2936, column: 3, scope: !8210)
!8219 = !DILocation(line: 2937, column: 22, scope: !8210)
!8220 = !DILocation(line: 2937, column: 26, scope: !8210)
!8221 = !DILocation(line: 2937, column: 35, scope: !8210)
!8222 = !DILocation(line: 2938, column: 7, scope: !8210)
!8223 = !DILocation(line: 2938, column: 11, scope: !8210)
!8224 = !DILocation(line: 2938, column: 23, scope: !8210)
!8225 = !DILocation(line: 2938, column: 27, scope: !8210)
!8226 = !DILocation(line: 2937, column: 3, scope: !8210)
!8227 = !DILocation(line: 2939, column: 15, scope: !8210)
!8228 = !DILocation(line: 2939, column: 3, scope: !8210)
!8229 = !DILocation(line: 2940, column: 22, scope: !8210)
!8230 = !DILocation(line: 2940, column: 3, scope: !8210)
!8231 = !DILocation(line: 2941, column: 2, scope: !8210)
!8232 = !DILocation(line: 2942, column: 1, scope: !8199)
!8233 = distinct !DISubprogram(name: "pcnet32_probe1", scope: !3, file: !3, line: 1587, type: !8234, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!8234 = !DISubroutineType(types: !8235)
!8235 = !{!7, !348, !7, !7284}
!8236 = !DILocalVariable(name: "lock", arg: 1, scope: !8237, file: !8238, line: 327, type: !2215)
!8237 = distinct !DISubprogram(name: "spinlock_check", scope: !8238, file: !8238, line: 327, type: !8239, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!8238 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8239 = !DISubroutineType(types: !8240)
!8240 = !{!8241, !2215}
!8241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!8242 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !8243)
!8243 = distinct !DILocation(line: 1842, column: 2, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1842, column: 2)
!8245 = !DILocalVariable(name: "ioaddr", arg: 1, scope: !8233, file: !3, line: 1587, type: !348)
!8246 = !DILocation(line: 1587, column: 30, scope: !8233)
!8247 = !DILocalVariable(name: "shared", arg: 2, scope: !8233, file: !3, line: 1587, type: !7)
!8248 = !DILocation(line: 1587, column: 42, scope: !8233)
!8249 = !DILocalVariable(name: "pdev", arg: 3, scope: !8233, file: !3, line: 1587, type: !7284)
!8250 = !DILocation(line: 1587, column: 66, scope: !8233)
!8251 = !DILocalVariable(name: "lp", scope: !8233, file: !3, line: 1589, type: !7248)
!8252 = !DILocation(line: 1589, column: 26, scope: !8233)
!8253 = !DILocalVariable(name: "i", scope: !8233, file: !3, line: 1590, type: !7)
!8254 = !DILocation(line: 1590, column: 6, scope: !8233)
!8255 = !DILocalVariable(name: "media", scope: !8233, file: !3, line: 1590, type: !7)
!8256 = !DILocation(line: 1590, column: 9, scope: !8233)
!8257 = !DILocalVariable(name: "fdx", scope: !8233, file: !3, line: 1591, type: !7)
!8258 = !DILocation(line: 1591, column: 6, scope: !8233)
!8259 = !DILocalVariable(name: "mii", scope: !8233, file: !3, line: 1591, type: !7)
!8260 = !DILocation(line: 1591, column: 11, scope: !8233)
!8261 = !DILocalVariable(name: "fset", scope: !8233, file: !3, line: 1591, type: !7)
!8262 = !DILocation(line: 1591, column: 16, scope: !8233)
!8263 = !DILocalVariable(name: "dxsuflo", scope: !8233, file: !3, line: 1591, type: !7)
!8264 = !DILocation(line: 1591, column: 22, scope: !8233)
!8265 = !DILocalVariable(name: "sram", scope: !8233, file: !3, line: 1591, type: !7)
!8266 = !DILocation(line: 1591, column: 31, scope: !8233)
!8267 = !DILocalVariable(name: "chip_version", scope: !8233, file: !3, line: 1592, type: !7)
!8268 = !DILocation(line: 1592, column: 6, scope: !8233)
!8269 = !DILocalVariable(name: "chipname", scope: !8233, file: !3, line: 1593, type: !1073)
!8270 = !DILocation(line: 1593, column: 8, scope: !8233)
!8271 = !DILocalVariable(name: "dev", scope: !8233, file: !3, line: 1594, type: !326)
!8272 = !DILocation(line: 1594, column: 21, scope: !8233)
!8273 = !DILocalVariable(name: "a", scope: !8233, file: !3, line: 1595, type: !7563)
!8274 = !DILocation(line: 1595, column: 31, scope: !8233)
!8275 = !DILocalVariable(name: "promaddr", scope: !8233, file: !3, line: 1596, type: !7258)
!8276 = !DILocation(line: 1596, column: 5, scope: !8233)
!8277 = !DILocalVariable(name: "ret", scope: !8233, file: !3, line: 1597, type: !7)
!8278 = !DILocation(line: 1597, column: 6, scope: !8233)
!8279 = !DILocation(line: 1600, column: 20, scope: !8233)
!8280 = !DILocation(line: 1600, column: 2, scope: !8233)
!8281 = !DILocation(line: 1603, column: 27, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1603, column: 6)
!8283 = !DILocation(line: 1603, column: 6, scope: !8282)
!8284 = !DILocation(line: 1603, column: 38, scope: !8282)
!8285 = !DILocation(line: 1603, column: 43, scope: !8282)
!8286 = !DILocation(line: 1603, column: 64, scope: !8282)
!8287 = !DILocation(line: 1603, column: 46, scope: !8282)
!8288 = !DILocation(line: 1603, column: 6, scope: !8233)
!8289 = !DILocation(line: 1604, column: 5, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 1603, column: 73)
!8291 = !DILocation(line: 1605, column: 2, scope: !8290)
!8292 = !DILocation(line: 1606, column: 22, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 1605, column: 9)
!8294 = !DILocation(line: 1606, column: 3, scope: !8293)
!8295 = !DILocation(line: 1607, column: 29, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 1607, column: 7)
!8297 = !DILocation(line: 1607, column: 7, scope: !8296)
!8298 = !DILocation(line: 1607, column: 40, scope: !8296)
!8299 = !DILocation(line: 1607, column: 45, scope: !8296)
!8300 = !DILocation(line: 1608, column: 26, scope: !8296)
!8301 = !DILocation(line: 1608, column: 7, scope: !8296)
!8302 = !DILocation(line: 1607, column: 7, scope: !8293)
!8303 = !DILocation(line: 1609, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 1608, column: 35)
!8305 = !DILocation(line: 1610, column: 3, scope: !8304)
!8306 = !DILocation(line: 1611, column: 8, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1611, column: 8)
!8308 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 1610, column: 10)
!8309 = !DILocation(line: 1611, column: 22, scope: !8307)
!8310 = !DILocation(line: 1611, column: 8, scope: !8308)
!8311 = !DILocation(line: 1612, column: 5, scope: !8307)
!8312 = !DILocation(line: 1613, column: 4, scope: !8308)
!8313 = !DILocation(line: 1618, column: 6, scope: !8233)
!8314 = !DILocation(line: 1618, column: 9, scope: !8233)
!8315 = !DILocation(line: 1618, column: 18, scope: !8233)
!8316 = !DILocation(line: 1618, column: 33, scope: !8233)
!8317 = !DILocation(line: 1618, column: 36, scope: !8233)
!8318 = !DILocation(line: 1618, column: 45, scope: !8233)
!8319 = !DILocation(line: 1618, column: 57, scope: !8233)
!8320 = !DILocation(line: 1618, column: 30, scope: !8233)
!8321 = !DILocation(line: 1617, column: 15, scope: !8233)
!8322 = !DILocation(line: 1619, column: 7, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1619, column: 6)
!8324 = !DILocation(line: 1619, column: 21, scope: !8323)
!8325 = !DILocation(line: 1619, column: 40, scope: !8323)
!8326 = !DILocation(line: 1619, column: 44, scope: !8323)
!8327 = !DILocation(line: 1619, column: 58, scope: !8323)
!8328 = !DILocation(line: 1619, column: 6, scope: !8233)
!8329 = !DILocation(line: 1620, column: 3, scope: !8323)
!8330 = !DILocation(line: 1621, column: 7, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1621, column: 6)
!8332 = !DILocation(line: 1621, column: 20, scope: !8331)
!8333 = !DILocation(line: 1621, column: 29, scope: !8331)
!8334 = !DILocation(line: 1621, column: 6, scope: !8233)
!8335 = !DILocation(line: 1622, column: 7, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 1622, column: 7)
!8337 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 1621, column: 39)
!8338 = !DILocation(line: 1622, column: 21, scope: !8336)
!8339 = !DILocation(line: 1622, column: 7, scope: !8337)
!8340 = !DILocation(line: 1623, column: 4, scope: !8336)
!8341 = !DILocation(line: 1624, column: 3, scope: !8337)
!8342 = !DILocation(line: 1628, column: 36, scope: !8233)
!8343 = !DILocation(line: 1628, column: 29, scope: !8233)
!8344 = !DILocation(line: 1628, column: 19, scope: !8233)
!8345 = !DILocation(line: 1628, column: 12, scope: !8233)
!8346 = !DILocation(line: 1628, column: 6, scope: !8233)
!8347 = !DILocation(line: 1629, column: 18, scope: !8233)
!8348 = !DILocation(line: 1629, column: 31, scope: !8233)
!8349 = !DILocation(line: 1629, column: 38, scope: !8233)
!8350 = !DILocation(line: 1629, column: 15, scope: !8233)
!8351 = !DILocation(line: 1631, column: 10, scope: !8233)
!8352 = !DILocation(line: 1631, column: 2, scope: !8233)
!8353 = !DILocation(line: 1633, column: 12, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1631, column: 24)
!8355 = !DILocation(line: 1634, column: 3, scope: !8354)
!8356 = !DILocation(line: 1636, column: 7, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1636, column: 7)
!8358 = !DILocation(line: 1636, column: 7, scope: !8354)
!8359 = !DILocation(line: 1637, column: 13, scope: !8357)
!8360 = !DILocation(line: 1637, column: 4, scope: !8357)
!8361 = !DILocation(line: 1639, column: 13, scope: !8357)
!8362 = !DILocation(line: 1640, column: 3, scope: !8354)
!8363 = !DILocation(line: 1642, column: 12, scope: !8354)
!8364 = !DILocation(line: 1643, column: 7, scope: !8354)
!8365 = !DILocation(line: 1644, column: 3, scope: !8354)
!8366 = !DILocation(line: 1646, column: 12, scope: !8354)
!8367 = !DILocation(line: 1647, column: 7, scope: !8354)
!8368 = !DILocation(line: 1648, column: 7, scope: !8354)
!8369 = !DILocation(line: 1649, column: 8, scope: !8354)
!8370 = !DILocation(line: 1650, column: 3, scope: !8354)
!8371 = !DILocation(line: 1652, column: 12, scope: !8354)
!8372 = !DILocation(line: 1653, column: 7, scope: !8354)
!8373 = !DILocation(line: 1654, column: 7, scope: !8354)
!8374 = !DILocation(line: 1655, column: 8, scope: !8354)
!8375 = !DILocation(line: 1656, column: 3, scope: !8354)
!8376 = !DILocation(line: 1658, column: 12, scope: !8354)
!8377 = !DILocation(line: 1659, column: 7, scope: !8354)
!8378 = !DILocation(line: 1660, column: 7, scope: !8354)
!8379 = !DILocation(line: 1661, column: 8, scope: !8354)
!8380 = !DILocation(line: 1662, column: 3, scope: !8354)
!8381 = !DILocation(line: 1664, column: 12, scope: !8354)
!8382 = !DILocation(line: 1665, column: 7, scope: !8354)
!8383 = !DILocation(line: 1672, column: 11, scope: !8354)
!8384 = !DILocation(line: 1672, column: 14, scope: !8354)
!8385 = !DILocation(line: 1672, column: 23, scope: !8354)
!8386 = !DILocation(line: 1672, column: 9, scope: !8354)
!8387 = !DILocation(line: 1673, column: 9, scope: !8354)
!8388 = !DILocation(line: 1674, column: 7, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1674, column: 7)
!8390 = !DILocation(line: 1674, column: 19, scope: !8389)
!8391 = !DILocation(line: 1674, column: 31, scope: !8389)
!8392 = !DILocation(line: 1674, column: 42, scope: !8389)
!8393 = !DILocation(line: 1674, column: 34, scope: !8389)
!8394 = !DILocation(line: 1674, column: 7, scope: !8354)
!8395 = !DILocation(line: 1675, column: 10, scope: !8389)
!8396 = !DILocation(line: 1675, column: 4, scope: !8389)
!8397 = !DILocation(line: 1676, column: 7, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1676, column: 7)
!8399 = !DILocation(line: 1676, column: 21, scope: !8398)
!8400 = !DILocation(line: 1676, column: 7, scope: !8354)
!8401 = !DILocation(line: 1678, column: 12, scope: !8398)
!8402 = !DILocation(line: 1678, column: 18, scope: !8398)
!8403 = !DILocation(line: 1678, column: 11, scope: !8398)
!8404 = !DILocation(line: 1677, column: 4, scope: !8398)
!8405 = !DILocation(line: 1679, column: 3, scope: !8354)
!8406 = !DILocation(line: 1679, column: 6, scope: !8354)
!8407 = !DILocation(line: 1679, column: 16, scope: !8354)
!8408 = !DILocation(line: 1679, column: 28, scope: !8354)
!8409 = !DILocation(line: 1680, column: 3, scope: !8354)
!8410 = !DILocation(line: 1682, column: 12, scope: !8354)
!8411 = !DILocation(line: 1683, column: 7, scope: !8354)
!8412 = !DILocation(line: 1684, column: 7, scope: !8354)
!8413 = !DILocation(line: 1685, column: 8, scope: !8354)
!8414 = !DILocation(line: 1686, column: 3, scope: !8354)
!8415 = !DILocation(line: 1688, column: 12, scope: !8354)
!8416 = !DILocation(line: 1689, column: 7, scope: !8354)
!8417 = !DILocation(line: 1690, column: 7, scope: !8354)
!8418 = !DILocation(line: 1691, column: 3, scope: !8354)
!8419 = !DILocation(line: 1693, column: 7, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1693, column: 7)
!8421 = !DILocation(line: 1693, column: 21, scope: !8420)
!8422 = !DILocation(line: 1693, column: 7, scope: !8354)
!8423 = !DILocation(line: 1694, column: 4, scope: !8420)
!8424 = !DILocation(line: 1696, column: 3, scope: !8354)
!8425 = !DILocation(line: 1707, column: 6, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1707, column: 6)
!8427 = !DILocation(line: 1707, column: 6, scope: !8233)
!8428 = !DILocation(line: 1708, column: 3, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 1707, column: 12)
!8430 = !DILocation(line: 1708, column: 6, scope: !8429)
!8431 = !DILocation(line: 1708, column: 16, scope: !8429)
!8432 = !DILocation(line: 1708, column: 29, scope: !8429)
!8433 = !DILocation(line: 1708, column: 32, scope: !8429)
!8434 = !DILocation(line: 1708, column: 41, scope: !8429)
!8435 = !DILocation(line: 1708, column: 53, scope: !8429)
!8436 = !DILocation(line: 1708, column: 28, scope: !8429)
!8437 = !DILocation(line: 1709, column: 3, scope: !8429)
!8438 = !DILocation(line: 1709, column: 6, scope: !8429)
!8439 = !DILocation(line: 1709, column: 16, scope: !8429)
!8440 = !DILocation(line: 1710, column: 10, scope: !8429)
!8441 = !DILocation(line: 1710, column: 13, scope: !8429)
!8442 = !DILocation(line: 1710, column: 22, scope: !8429)
!8443 = !DILocation(line: 1710, column: 34, scope: !8429)
!8444 = !DILocation(line: 1710, column: 44, scope: !8429)
!8445 = !DILocation(line: 1710, column: 9, scope: !8429)
!8446 = !DILocation(line: 1711, column: 11, scope: !8429)
!8447 = !DILocation(line: 1712, column: 2, scope: !8429)
!8448 = !DILocation(line: 1720, column: 6, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1720, column: 6)
!8450 = !DILocation(line: 1720, column: 6, scope: !8233)
!8451 = !DILocation(line: 1733, column: 3, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 1720, column: 12)
!8453 = !DILocation(line: 1733, column: 6, scope: !8452)
!8454 = !DILocation(line: 1733, column: 16, scope: !8452)
!8455 = !DILocation(line: 1734, column: 3, scope: !8452)
!8456 = !DILocation(line: 1734, column: 6, scope: !8452)
!8457 = !DILocation(line: 1734, column: 16, scope: !8452)
!8458 = !DILocation(line: 1736, column: 3, scope: !8452)
!8459 = !DILocation(line: 1736, column: 6, scope: !8452)
!8460 = !DILocation(line: 1736, column: 16, scope: !8452)
!8461 = !DILocation(line: 1736, column: 28, scope: !8452)
!8462 = !DILocation(line: 1736, column: 31, scope: !8452)
!8463 = !DILocation(line: 1736, column: 40, scope: !8452)
!8464 = !DILocation(line: 1736, column: 52, scope: !8452)
!8465 = !DILocation(line: 1737, column: 2, scope: !8452)
!8466 = !DILocation(line: 1739, column: 8, scope: !8233)
!8467 = !DILocation(line: 1739, column: 6, scope: !8233)
!8468 = !DILocation(line: 1740, column: 7, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1740, column: 6)
!8470 = !DILocation(line: 1740, column: 6, scope: !8233)
!8471 = !DILocation(line: 1741, column: 7, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 1740, column: 12)
!8473 = !DILocation(line: 1742, column: 3, scope: !8472)
!8474 = !DILocation(line: 1745, column: 6, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1745, column: 6)
!8476 = !DILocation(line: 1745, column: 6, scope: !8233)
!8477 = !DILocation(line: 1746, column: 3, scope: !8475)
!8478 = !DILocation(line: 1748, column: 6, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1748, column: 6)
!8480 = !DILocation(line: 1748, column: 20, scope: !8479)
!8481 = !DILocation(line: 1748, column: 6, scope: !8233)
!8482 = !DILocation(line: 1749, column: 3, scope: !8479)
!8483 = !DILocation(line: 1758, column: 9, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1758, column: 2)
!8485 = !DILocation(line: 1758, column: 7, scope: !8484)
!8486 = !DILocation(line: 1758, column: 14, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1758, column: 2)
!8488 = !DILocation(line: 1758, column: 16, scope: !8487)
!8489 = !DILocation(line: 1758, column: 2, scope: !8484)
!8490 = !DILocalVariable(name: "val", scope: !8491, file: !3, line: 1759, type: !13)
!8491 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1758, column: 26)
!8492 = !DILocation(line: 1759, column: 16, scope: !8491)
!8493 = !DILocation(line: 1760, column: 9, scope: !8491)
!8494 = !DILocation(line: 1760, column: 12, scope: !8491)
!8495 = !DILocation(line: 1760, column: 21, scope: !8491)
!8496 = !DILocation(line: 1760, column: 29, scope: !8491)
!8497 = !DILocation(line: 1760, column: 31, scope: !8491)
!8498 = !DILocation(line: 1760, column: 37, scope: !8491)
!8499 = !DILocation(line: 1760, column: 7, scope: !8491)
!8500 = !DILocation(line: 1762, column: 26, scope: !8491)
!8501 = !DILocation(line: 1762, column: 30, scope: !8491)
!8502 = !DILocation(line: 1762, column: 3, scope: !8491)
!8503 = !DILocation(line: 1762, column: 8, scope: !8491)
!8504 = !DILocation(line: 1762, column: 21, scope: !8491)
!8505 = !DILocation(line: 1762, column: 19, scope: !8491)
!8506 = !DILocation(line: 1762, column: 24, scope: !8491)
!8507 = !DILocation(line: 1763, column: 31, scope: !8491)
!8508 = !DILocation(line: 1763, column: 35, scope: !8491)
!8509 = !DILocation(line: 1763, column: 41, scope: !8491)
!8510 = !DILocation(line: 1763, column: 30, scope: !8491)
!8511 = !DILocation(line: 1763, column: 3, scope: !8491)
!8512 = !DILocation(line: 1763, column: 8, scope: !8491)
!8513 = !DILocation(line: 1763, column: 21, scope: !8491)
!8514 = !DILocation(line: 1763, column: 19, scope: !8491)
!8515 = !DILocation(line: 1763, column: 23, scope: !8491)
!8516 = !DILocation(line: 1763, column: 28, scope: !8491)
!8517 = !DILocation(line: 1764, column: 2, scope: !8491)
!8518 = !DILocation(line: 1758, column: 22, scope: !8487)
!8519 = !DILocation(line: 1758, column: 2, scope: !8487)
!8520 = distinct !{!8520, !8489, !8521}
!8521 = !DILocation(line: 1764, column: 2, scope: !8484)
!8522 = !DILocation(line: 1767, column: 9, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1767, column: 2)
!8524 = !DILocation(line: 1767, column: 7, scope: !8523)
!8525 = !DILocation(line: 1767, column: 14, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 1767, column: 2)
!8527 = !DILocation(line: 1767, column: 16, scope: !8526)
!8528 = !DILocation(line: 1767, column: 2, scope: !8523)
!8529 = !DILocation(line: 1768, column: 21, scope: !8526)
!8530 = !DILocation(line: 1768, column: 30, scope: !8526)
!8531 = !DILocation(line: 1768, column: 28, scope: !8526)
!8532 = !DILocation(line: 1768, column: 17, scope: !8526)
!8533 = !DILocation(line: 1768, column: 12, scope: !8526)
!8534 = !DILocation(line: 1768, column: 3, scope: !8526)
!8535 = !DILocation(line: 1768, column: 15, scope: !8526)
!8536 = !DILocation(line: 1767, column: 29, scope: !8526)
!8537 = !DILocation(line: 1767, column: 2, scope: !8526)
!8538 = distinct !{!8538, !8528, !8539}
!8539 = !DILocation(line: 1768, column: 31, scope: !8523)
!8540 = !DILocation(line: 1770, column: 24, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1770, column: 6)
!8542 = !DILocation(line: 1770, column: 34, scope: !8541)
!8543 = !DILocation(line: 1770, column: 39, scope: !8541)
!8544 = !DILocation(line: 1770, column: 7, scope: !8541)
!8545 = !DILocation(line: 1770, column: 49, scope: !8541)
!8546 = !DILocation(line: 1771, column: 27, scope: !8541)
!8547 = !DILocation(line: 1771, column: 32, scope: !8541)
!8548 = !DILocation(line: 1771, column: 7, scope: !8541)
!8549 = !DILocation(line: 1770, column: 6, scope: !8233)
!8550 = !DILocation(line: 1772, column: 27, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1772, column: 7)
!8552 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 1771, column: 43)
!8553 = !DILocation(line: 1772, column: 7, scope: !8551)
!8554 = !DILocation(line: 1772, column: 7, scope: !8552)
!8555 = !DILocation(line: 1773, column: 8, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 1773, column: 8)
!8557 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1772, column: 38)
!8558 = !DILocation(line: 1773, column: 22, scope: !8556)
!8559 = !DILocation(line: 1773, column: 8, scope: !8557)
!8560 = !DILocation(line: 1774, column: 5, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1773, column: 41)
!8562 = !DILocation(line: 1775, column: 5, scope: !8561)
!8563 = !DILocation(line: 1776, column: 4, scope: !8561)
!8564 = !DILocation(line: 1777, column: 11, scope: !8557)
!8565 = !DILocation(line: 1777, column: 16, scope: !8557)
!8566 = !DILocation(line: 1777, column: 4, scope: !8557)
!8567 = !DILocation(line: 1778, column: 3, scope: !8557)
!8568 = !DILocation(line: 1779, column: 2, scope: !8552)
!8569 = !DILocation(line: 1782, column: 27, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1782, column: 6)
!8571 = !DILocation(line: 1782, column: 32, scope: !8570)
!8572 = !DILocation(line: 1782, column: 7, scope: !8570)
!8573 = !DILocation(line: 1782, column: 6, scope: !8233)
!8574 = !DILocation(line: 1783, column: 17, scope: !8570)
!8575 = !DILocation(line: 1783, column: 22, scope: !8570)
!8576 = !DILocation(line: 1783, column: 3, scope: !8570)
!8577 = !DILocation(line: 1785, column: 6, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1785, column: 6)
!8579 = !DILocation(line: 1785, column: 20, scope: !8578)
!8580 = !DILocation(line: 1785, column: 6, scope: !8233)
!8581 = !DILocation(line: 1786, column: 3, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1785, column: 39)
!8583 = !DILocation(line: 1789, column: 9, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1789, column: 7)
!8585 = !DILocation(line: 1789, column: 22, scope: !8584)
!8586 = !DILocation(line: 1789, column: 27, scope: !8584)
!8587 = !DILocation(line: 1789, column: 37, scope: !8584)
!8588 = !DILocation(line: 1789, column: 7, scope: !8582)
!8589 = !DILocation(line: 1790, column: 8, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 1789, column: 48)
!8591 = !DILocation(line: 1790, column: 11, scope: !8590)
!8592 = !DILocation(line: 1790, column: 20, scope: !8590)
!8593 = !DILocation(line: 1790, column: 32, scope: !8590)
!8594 = !DILocation(line: 1790, column: 6, scope: !8590)
!8595 = !DILocation(line: 1791, column: 4, scope: !8590)
!8596 = !DILocation(line: 1792, column: 12, scope: !8590)
!8597 = !DILocation(line: 1792, column: 14, scope: !8590)
!8598 = !DILocation(line: 1792, column: 4, scope: !8590)
!8599 = !DILocation(line: 1794, column: 5, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1792, column: 21)
!8601 = !DILocation(line: 1795, column: 5, scope: !8600)
!8602 = !DILocation(line: 1797, column: 5, scope: !8600)
!8603 = !DILocation(line: 1798, column: 5, scope: !8600)
!8604 = !DILocation(line: 1800, column: 5, scope: !8600)
!8605 = !DILocation(line: 1801, column: 5, scope: !8600)
!8606 = !DILocation(line: 1803, column: 5, scope: !8600)
!8607 = !DILocation(line: 1804, column: 5, scope: !8600)
!8608 = !DILocation(line: 1806, column: 8, scope: !8590)
!8609 = !DILocation(line: 1806, column: 11, scope: !8590)
!8610 = !DILocation(line: 1806, column: 20, scope: !8590)
!8611 = !DILocation(line: 1806, column: 6, scope: !8590)
!8612 = !DILocation(line: 1807, column: 4, scope: !8590)
!8613 = !DILocation(line: 1808, column: 8, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1808, column: 8)
!8615 = !DILocation(line: 1808, column: 10, scope: !8614)
!8616 = !DILocation(line: 1808, column: 8, scope: !8590)
!8617 = !DILocation(line: 1809, column: 5, scope: !8614)
!8618 = !DILocation(line: 1810, column: 8, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1810, column: 8)
!8620 = !DILocation(line: 1810, column: 10, scope: !8619)
!8621 = !DILocation(line: 1810, column: 8, scope: !8590)
!8622 = !DILocation(line: 1811, column: 5, scope: !8619)
!8623 = !DILocation(line: 1812, column: 8, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1812, column: 8)
!8625 = !DILocation(line: 1812, column: 10, scope: !8624)
!8626 = !DILocation(line: 1812, column: 8, scope: !8590)
!8627 = !DILocation(line: 1813, column: 5, scope: !8624)
!8628 = !DILocation(line: 1814, column: 8, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1814, column: 8)
!8630 = !DILocation(line: 1814, column: 10, scope: !8629)
!8631 = !DILocation(line: 1814, column: 8, scope: !8590)
!8632 = !DILocation(line: 1815, column: 5, scope: !8629)
!8633 = !DILocation(line: 1816, column: 8, scope: !8590)
!8634 = !DILocation(line: 1816, column: 11, scope: !8590)
!8635 = !DILocation(line: 1816, column: 20, scope: !8590)
!8636 = !DILocation(line: 1816, column: 6, scope: !8590)
!8637 = !DILocation(line: 1817, column: 4, scope: !8590)
!8638 = !DILocation(line: 1818, column: 8, scope: !8590)
!8639 = !DILocation(line: 1818, column: 11, scope: !8590)
!8640 = !DILocation(line: 1818, column: 20, scope: !8590)
!8641 = !DILocation(line: 1818, column: 6, scope: !8590)
!8642 = !DILocation(line: 1819, column: 4, scope: !8590)
!8643 = !DILocation(line: 1820, column: 8, scope: !8590)
!8644 = !DILocation(line: 1820, column: 11, scope: !8590)
!8645 = !DILocation(line: 1820, column: 20, scope: !8590)
!8646 = !DILocation(line: 1820, column: 6, scope: !8590)
!8647 = !DILocation(line: 1821, column: 8, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1821, column: 8)
!8649 = !DILocation(line: 1821, column: 10, scope: !8648)
!8650 = !DILocation(line: 1821, column: 8, scope: !8590)
!8651 = !DILocation(line: 1822, column: 5, scope: !8648)
!8652 = !DILocation(line: 1823, column: 3, scope: !8590)
!8653 = !DILocation(line: 1824, column: 2, scope: !8582)
!8654 = !DILocation(line: 1826, column: 19, scope: !8233)
!8655 = !DILocation(line: 1826, column: 2, scope: !8233)
!8656 = !DILocation(line: 1826, column: 7, scope: !8233)
!8657 = !DILocation(line: 1826, column: 17, scope: !8233)
!8658 = !DILocation(line: 1827, column: 19, scope: !8233)
!8659 = !DILocation(line: 1827, column: 7, scope: !8233)
!8660 = !DILocation(line: 1827, column: 5, scope: !8233)
!8661 = !DILocation(line: 1829, column: 39, scope: !8233)
!8662 = !DILocation(line: 1829, column: 45, scope: !8233)
!8663 = !DILocation(line: 1831, column: 11, scope: !8233)
!8664 = !DILocation(line: 1831, column: 15, scope: !8233)
!8665 = !DILocation(line: 1829, column: 19, scope: !8233)
!8666 = !DILocation(line: 1829, column: 2, scope: !8233)
!8667 = !DILocation(line: 1829, column: 6, scope: !8233)
!8668 = !DILocation(line: 1829, column: 17, scope: !8233)
!8669 = !DILocation(line: 1832, column: 7, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1832, column: 6)
!8671 = !DILocation(line: 1832, column: 11, scope: !8670)
!8672 = !DILocation(line: 1832, column: 6, scope: !8233)
!8673 = !DILocation(line: 1833, column: 7, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 1833, column: 7)
!8675 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 1832, column: 23)
!8676 = !DILocation(line: 1833, column: 21, scope: !8674)
!8677 = !DILocation(line: 1833, column: 7, scope: !8675)
!8678 = !DILocation(line: 1834, column: 4, scope: !8674)
!8679 = !DILocation(line: 1835, column: 7, scope: !8675)
!8680 = !DILocation(line: 1836, column: 3, scope: !8675)
!8681 = !DILocation(line: 1838, column: 16, scope: !8233)
!8682 = !DILocation(line: 1838, column: 2, scope: !8233)
!8683 = !DILocation(line: 1838, column: 6, scope: !8233)
!8684 = !DILocation(line: 1838, column: 14, scope: !8233)
!8685 = !DILocation(line: 1840, column: 12, scope: !8233)
!8686 = !DILocation(line: 1840, column: 2, scope: !8233)
!8687 = !DILocation(line: 1840, column: 6, scope: !8233)
!8688 = !DILocation(line: 1840, column: 10, scope: !8233)
!8689 = !DILocation(line: 1842, column: 2, scope: !8233)
!8690 = !DILocation(line: 1842, column: 2, scope: !8244)
!8691 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !8243)
!8692 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !8243)
!8693 = !DILocation(line: 1844, column: 13, scope: !8233)
!8694 = !DILocation(line: 1844, column: 2, scope: !8233)
!8695 = !DILocation(line: 1844, column: 6, scope: !8233)
!8696 = !DILocation(line: 1844, column: 11, scope: !8233)
!8697 = !DILocation(line: 1845, column: 19, scope: !8233)
!8698 = !DILocation(line: 1845, column: 2, scope: !8233)
!8699 = !DILocation(line: 1845, column: 6, scope: !8233)
!8700 = !DILocation(line: 1845, column: 17, scope: !8233)
!8701 = !DILocation(line: 1846, column: 2, scope: !8233)
!8702 = !DILocation(line: 1846, column: 6, scope: !8233)
!8703 = !DILocation(line: 1846, column: 19, scope: !8233)
!8704 = !DILocation(line: 1847, column: 2, scope: !8233)
!8705 = !DILocation(line: 1847, column: 6, scope: !8233)
!8706 = !DILocation(line: 1847, column: 19, scope: !8233)
!8707 = !DILocation(line: 1848, column: 20, scope: !8233)
!8708 = !DILocation(line: 1848, column: 24, scope: !8233)
!8709 = !DILocation(line: 1848, column: 37, scope: !8233)
!8710 = !DILocation(line: 1848, column: 2, scope: !8233)
!8711 = !DILocation(line: 1848, column: 6, scope: !8233)
!8712 = !DILocation(line: 1848, column: 18, scope: !8233)
!8713 = !DILocation(line: 1849, column: 20, scope: !8233)
!8714 = !DILocation(line: 1849, column: 24, scope: !8233)
!8715 = !DILocation(line: 1849, column: 37, scope: !8233)
!8716 = !DILocation(line: 1849, column: 2, scope: !8233)
!8717 = !DILocation(line: 1849, column: 6, scope: !8233)
!8718 = !DILocation(line: 1849, column: 18, scope: !8233)
!8719 = !DILocation(line: 1850, column: 2, scope: !8233)
!8720 = !DILocation(line: 1850, column: 6, scope: !8233)
!8721 = !DILocation(line: 1850, column: 18, scope: !8233)
!8722 = !DILocation(line: 1851, column: 2, scope: !8233)
!8723 = !DILocation(line: 1851, column: 6, scope: !8233)
!8724 = !DILocation(line: 1851, column: 18, scope: !8233)
!8725 = !DILocation(line: 1852, column: 27, scope: !8233)
!8726 = !DILocation(line: 1852, column: 2, scope: !8233)
!8727 = !DILocation(line: 1852, column: 6, scope: !8233)
!8728 = !DILocation(line: 1852, column: 13, scope: !8233)
!8729 = !DILocation(line: 1852, column: 25, scope: !8233)
!8730 = !DILocation(line: 1853, column: 2, scope: !8233)
!8731 = !DILocation(line: 1853, column: 6, scope: !8233)
!8732 = !DILocation(line: 1853, column: 13, scope: !8233)
!8733 = !DILocation(line: 1853, column: 25, scope: !8233)
!8734 = !DILocation(line: 1854, column: 2, scope: !8233)
!8735 = !DILocation(line: 1854, column: 6, scope: !8233)
!8736 = !DILocation(line: 1854, column: 13, scope: !8233)
!8737 = !DILocation(line: 1854, column: 26, scope: !8233)
!8738 = !DILocation(line: 1855, column: 16, scope: !8233)
!8739 = !DILocation(line: 1855, column: 2, scope: !8233)
!8740 = !DILocation(line: 1855, column: 6, scope: !8233)
!8741 = !DILocation(line: 1855, column: 14, scope: !8233)
!8742 = !DILocation(line: 1856, column: 12, scope: !8233)
!8743 = !DILocation(line: 1856, column: 2, scope: !8233)
!8744 = !DILocation(line: 1856, column: 6, scope: !8233)
!8745 = !DILocation(line: 1856, column: 10, scope: !8233)
!8746 = !DILocation(line: 1857, column: 21, scope: !8233)
!8747 = !DILocation(line: 1857, column: 2, scope: !8233)
!8748 = !DILocation(line: 1857, column: 6, scope: !8233)
!8749 = !DILocation(line: 1857, column: 19, scope: !8233)
!8750 = !DILocation(line: 1858, column: 19, scope: !8233)
!8751 = !DILocation(line: 1858, column: 2, scope: !8233)
!8752 = !DILocation(line: 1858, column: 6, scope: !8233)
!8753 = !DILocation(line: 1858, column: 17, scope: !8233)
!8754 = !DILocation(line: 1859, column: 7, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1859, column: 6)
!8756 = !DILocation(line: 1859, column: 19, scope: !8755)
!8757 = !DILocation(line: 1859, column: 33, scope: !8755)
!8758 = !DILocation(line: 1860, column: 15, scope: !8755)
!8759 = !DILocation(line: 1860, column: 7, scope: !8755)
!8760 = !DILocation(line: 1860, column: 28, scope: !8755)
!8761 = !DILocation(line: 1859, column: 6, scope: !8233)
!8762 = !DILocation(line: 1861, column: 3, scope: !8755)
!8763 = !DILocation(line: 1861, column: 7, scope: !8755)
!8764 = !DILocation(line: 1861, column: 15, scope: !8755)
!8765 = !DILocation(line: 1863, column: 41, scope: !8755)
!8766 = !DILocation(line: 1863, column: 33, scope: !8755)
!8767 = !DILocation(line: 1863, column: 17, scope: !8755)
!8768 = !DILocation(line: 1863, column: 3, scope: !8755)
!8769 = !DILocation(line: 1863, column: 7, scope: !8755)
!8770 = !DILocation(line: 1863, column: 15, scope: !8755)
!8771 = !DILocation(line: 1865, column: 6, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1865, column: 6)
!8773 = !DILocation(line: 1865, column: 10, scope: !8772)
!8774 = !DILocation(line: 1865, column: 23, scope: !8772)
!8775 = !DILocation(line: 1865, column: 6, scope: !8233)
!8776 = !DILocation(line: 1866, column: 3, scope: !8772)
!8777 = !DILocation(line: 1866, column: 7, scope: !8772)
!8778 = !DILocation(line: 1866, column: 15, scope: !8772)
!8779 = !DILocation(line: 1867, column: 19, scope: !8233)
!8780 = !DILocation(line: 1867, column: 2, scope: !8233)
!8781 = !DILocation(line: 1867, column: 6, scope: !8233)
!8782 = !DILocation(line: 1867, column: 13, scope: !8233)
!8783 = !DILocation(line: 1867, column: 17, scope: !8233)
!8784 = !DILocation(line: 1868, column: 2, scope: !8233)
!8785 = !DILocation(line: 1868, column: 6, scope: !8233)
!8786 = !DILocation(line: 1868, column: 13, scope: !8233)
!8787 = !DILocation(line: 1868, column: 23, scope: !8233)
!8788 = !DILocation(line: 1869, column: 2, scope: !8233)
!8789 = !DILocation(line: 1869, column: 6, scope: !8233)
!8790 = !DILocation(line: 1869, column: 13, scope: !8233)
!8791 = !DILocation(line: 1869, column: 24, scope: !8233)
!8792 = !DILocation(line: 1872, column: 20, scope: !8233)
!8793 = !DILocation(line: 1872, column: 24, scope: !8233)
!8794 = !DILocation(line: 1872, column: 37, scope: !8233)
!8795 = !DILocation(line: 1872, column: 2, scope: !8233)
!8796 = !DILocation(line: 1872, column: 6, scope: !8233)
!8797 = !DILocation(line: 1872, column: 11, scope: !8233)
!8798 = !DILocation(line: 1872, column: 18, scope: !8233)
!8799 = !DILocation(line: 1874, column: 17, scope: !8233)
!8800 = !DILocation(line: 1874, column: 23, scope: !8233)
!8801 = !DILocation(line: 1874, column: 27, scope: !8233)
!8802 = !DILocation(line: 1874, column: 47, scope: !8233)
!8803 = !DILocation(line: 1874, column: 51, scope: !8233)
!8804 = !DILocation(line: 1874, column: 64, scope: !8233)
!8805 = !DILocation(line: 1874, column: 2, scope: !8233)
!8806 = !DILocation(line: 1876, column: 6, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1876, column: 6)
!8808 = !DILocation(line: 1876, column: 10, scope: !8807)
!8809 = !DILocation(line: 1876, column: 15, scope: !8807)
!8810 = !DILocation(line: 1876, column: 19, scope: !8807)
!8811 = !DILocation(line: 1876, column: 27, scope: !8807)
!8812 = !DILocation(line: 1876, column: 48, scope: !8807)
!8813 = !DILocation(line: 1877, column: 8, scope: !8807)
!8814 = !DILocation(line: 1877, column: 20, scope: !8807)
!8815 = !DILocation(line: 1877, column: 34, scope: !8807)
!8816 = !DILocation(line: 1877, column: 49, scope: !8807)
!8817 = !DILocation(line: 1877, column: 37, scope: !8807)
!8818 = !DILocation(line: 1876, column: 6, scope: !8233)
!8819 = !DILocation(line: 1878, column: 3, scope: !8807)
!8820 = !DILocation(line: 1878, column: 7, scope: !8807)
!8821 = !DILocation(line: 1878, column: 15, scope: !8807)
!8822 = !DILocation(line: 1880, column: 10, scope: !8233)
!8823 = !DILocation(line: 1880, column: 2, scope: !8233)
!8824 = !DILocation(line: 1880, column: 6, scope: !8233)
!8825 = !DILocation(line: 1880, column: 8, scope: !8233)
!8826 = !DILocation(line: 1883, column: 25, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1883, column: 6)
!8828 = !DILocation(line: 1883, column: 39, scope: !8827)
!8829 = !DILocation(line: 1883, column: 43, scope: !8827)
!8830 = !DILocation(line: 1883, column: 30, scope: !8827)
!8831 = !DILocation(line: 1883, column: 6, scope: !8827)
!8832 = !DILocation(line: 1883, column: 6, scope: !8233)
!8833 = !DILocation(line: 1884, column: 7, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 1883, column: 54)
!8835 = !DILocation(line: 1885, column: 3, scope: !8834)
!8836 = !DILocation(line: 1888, column: 6, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1888, column: 6)
!8838 = !DILocation(line: 1888, column: 11, scope: !8837)
!8839 = !DILocation(line: 1888, column: 23, scope: !8837)
!8840 = !DILocation(line: 1888, column: 31, scope: !8837)
!8841 = !DILocation(line: 1888, column: 34, scope: !8837)
!8842 = !DILocation(line: 1888, column: 39, scope: !8837)
!8843 = !DILocation(line: 1888, column: 51, scope: !8837)
!8844 = !DILocation(line: 1888, column: 59, scope: !8837)
!8845 = !DILocation(line: 1889, column: 6, scope: !8837)
!8846 = !DILocation(line: 1889, column: 11, scope: !8837)
!8847 = !DILocation(line: 1889, column: 23, scope: !8837)
!8848 = !DILocation(line: 1888, column: 6, scope: !8233)
!8849 = !DILocation(line: 1890, column: 3, scope: !8837)
!8850 = !DILocation(line: 1890, column: 7, scope: !8837)
!8851 = !DILocation(line: 1890, column: 15, scope: !8837)
!8852 = !DILocation(line: 1892, column: 2, scope: !8233)
!8853 = !DILocation(line: 1892, column: 6, scope: !8233)
!8854 = !DILocation(line: 1892, column: 18, scope: !8233)
!8855 = !DILocation(line: 1892, column: 23, scope: !8233)
!8856 = !DILocation(line: 1894, column: 6, scope: !8233)
!8857 = !DILocation(line: 1893, column: 2, scope: !8233)
!8858 = !DILocation(line: 1893, column: 6, scope: !8233)
!8859 = !DILocation(line: 1893, column: 18, scope: !8233)
!8860 = !DILocation(line: 1893, column: 28, scope: !8233)
!8861 = !DILocation(line: 1895, column: 9, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1895, column: 2)
!8863 = !DILocation(line: 1895, column: 7, scope: !8862)
!8864 = !DILocation(line: 1895, column: 14, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 1895, column: 2)
!8866 = !DILocation(line: 1895, column: 16, scope: !8865)
!8867 = !DILocation(line: 1895, column: 2, scope: !8862)
!8868 = !DILocation(line: 1896, column: 34, scope: !8865)
!8869 = !DILocation(line: 1896, column: 39, scope: !8865)
!8870 = !DILocation(line: 1896, column: 48, scope: !8865)
!8871 = !DILocation(line: 1896, column: 3, scope: !8865)
!8872 = !DILocation(line: 1896, column: 7, scope: !8865)
!8873 = !DILocation(line: 1896, column: 19, scope: !8865)
!8874 = !DILocation(line: 1896, column: 29, scope: !8865)
!8875 = !DILocation(line: 1896, column: 32, scope: !8865)
!8876 = !DILocation(line: 1895, column: 22, scope: !8865)
!8877 = !DILocation(line: 1895, column: 2, scope: !8865)
!8878 = distinct !{!8878, !8867, !8879}
!8879 = !DILocation(line: 1896, column: 49, scope: !8862)
!8880 = !DILocation(line: 1897, column: 2, scope: !8233)
!8881 = !DILocation(line: 1897, column: 6, scope: !8233)
!8882 = !DILocation(line: 1897, column: 18, scope: !8233)
!8883 = !DILocation(line: 1897, column: 28, scope: !8233)
!8884 = !DILocation(line: 1898, column: 2, scope: !8233)
!8885 = !DILocation(line: 1898, column: 6, scope: !8233)
!8886 = !DILocation(line: 1898, column: 18, scope: !8233)
!8887 = !DILocation(line: 1898, column: 28, scope: !8233)
!8888 = !DILocation(line: 1899, column: 28, scope: !8233)
!8889 = !DILocation(line: 1899, column: 2, scope: !8233)
!8890 = !DILocation(line: 1899, column: 6, scope: !8233)
!8891 = !DILocation(line: 1899, column: 18, scope: !8233)
!8892 = !DILocation(line: 1899, column: 26, scope: !8233)
!8893 = !DILocation(line: 1900, column: 28, scope: !8233)
!8894 = !DILocation(line: 1900, column: 2, scope: !8233)
!8895 = !DILocation(line: 1900, column: 6, scope: !8233)
!8896 = !DILocation(line: 1900, column: 18, scope: !8233)
!8897 = !DILocation(line: 1900, column: 26, scope: !8233)
!8898 = !DILocation(line: 1903, column: 2, scope: !8233)
!8899 = !DILocation(line: 1903, column: 5, scope: !8233)
!8900 = !DILocation(line: 1903, column: 15, scope: !8233)
!8901 = !DILocation(line: 1905, column: 2, scope: !8233)
!8902 = !DILocation(line: 1905, column: 5, scope: !8233)
!8903 = !DILocation(line: 1905, column: 15, scope: !8233)
!8904 = !DILocation(line: 1905, column: 27, scope: !8233)
!8905 = !DILocation(line: 1905, column: 31, scope: !8233)
!8906 = !DILocation(line: 1905, column: 45, scope: !8233)
!8907 = !DILocation(line: 1905, column: 26, scope: !8233)
!8908 = !DILocation(line: 1906, column: 2, scope: !8233)
!8909 = !DILocation(line: 1906, column: 5, scope: !8233)
!8910 = !DILocation(line: 1906, column: 15, scope: !8233)
!8911 = !DILocation(line: 1906, column: 27, scope: !8233)
!8912 = !DILocation(line: 1906, column: 31, scope: !8233)
!8913 = !DILocation(line: 1906, column: 45, scope: !8233)
!8914 = !DILocation(line: 1906, column: 26, scope: !8233)
!8915 = !DILocation(line: 1908, column: 6, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1908, column: 6)
!8917 = !DILocation(line: 1908, column: 6, scope: !8233)
!8918 = !DILocation(line: 1909, column: 14, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 1908, column: 12)
!8920 = !DILocation(line: 1909, column: 20, scope: !8919)
!8921 = !DILocation(line: 1909, column: 3, scope: !8919)
!8922 = !DILocation(line: 1909, column: 8, scope: !8919)
!8923 = !DILocation(line: 1909, column: 12, scope: !8919)
!8924 = !DILocation(line: 1910, column: 7, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 1910, column: 7)
!8926 = !DILocation(line: 1910, column: 21, scope: !8925)
!8927 = !DILocation(line: 1910, column: 7, scope: !8919)
!8928 = !DILocation(line: 1911, column: 4, scope: !8925)
!8929 = !DILocation(line: 1912, column: 2, scope: !8919)
!8930 = !DILocalVariable(name: "irq_mask", scope: !8931, file: !3, line: 1913, type: !348)
!8931 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 1912, column: 9)
!8932 = !DILocation(line: 1913, column: 17, scope: !8931)
!8933 = !DILocation(line: 1913, column: 28, scope: !8931)
!8934 = !DILocation(line: 1921, column: 3, scope: !8931)
!8935 = !DILocation(line: 1921, column: 6, scope: !8931)
!8936 = !DILocation(line: 1921, column: 16, scope: !8931)
!8937 = !DILocation(line: 1922, column: 3, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 1922, column: 3)
!8939 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 1922, column: 3)
!8940 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 1922, column: 3)
!8941 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 1922, column: 3)
!8942 = !DILocation(line: 1924, column: 28, scope: !8931)
!8943 = !DILocation(line: 1924, column: 14, scope: !8931)
!8944 = !DILocation(line: 1924, column: 3, scope: !8931)
!8945 = !DILocation(line: 1924, column: 8, scope: !8931)
!8946 = !DILocation(line: 1924, column: 12, scope: !8931)
!8947 = !DILocation(line: 1925, column: 8, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 1925, column: 7)
!8949 = !DILocation(line: 1925, column: 13, scope: !8948)
!8950 = !DILocation(line: 1925, column: 7, scope: !8931)
!8951 = !DILocation(line: 1926, column: 8, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 1926, column: 8)
!8953 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 1925, column: 18)
!8954 = !DILocation(line: 1926, column: 22, scope: !8952)
!8955 = !DILocation(line: 1926, column: 8, scope: !8953)
!8956 = !DILocation(line: 1927, column: 5, scope: !8952)
!8957 = !DILocation(line: 1928, column: 8, scope: !8953)
!8958 = !DILocation(line: 1929, column: 4, scope: !8953)
!8959 = !DILocation(line: 1931, column: 7, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 1931, column: 7)
!8961 = !DILocation(line: 1931, column: 21, scope: !8960)
!8962 = !DILocation(line: 1931, column: 7, scope: !8931)
!8963 = !DILocation(line: 1932, column: 4, scope: !8960)
!8964 = !DILocation(line: 1936, column: 6, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1936, column: 6)
!8966 = !DILocation(line: 1936, column: 10, scope: !8965)
!8967 = !DILocation(line: 1936, column: 6, scope: !8233)
!8968 = !DILocation(line: 1939, column: 25, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 1936, column: 15)
!8970 = !DILocation(line: 1939, column: 29, scope: !8969)
!8971 = !DILocation(line: 1939, column: 32, scope: !8969)
!8972 = !DILocation(line: 1939, column: 41, scope: !8969)
!8973 = !DILocation(line: 1939, column: 24, scope: !8969)
!8974 = !DILocation(line: 1939, column: 54, scope: !8969)
!8975 = !DILocation(line: 1939, column: 60, scope: !8969)
!8976 = !DILocation(line: 1939, column: 3, scope: !8969)
!8977 = !DILocation(line: 1939, column: 7, scope: !8969)
!8978 = !DILocation(line: 1939, column: 14, scope: !8969)
!8979 = !DILocation(line: 1939, column: 21, scope: !8969)
!8980 = !DILocation(line: 1941, column: 10, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 1941, column: 3)
!8982 = !DILocation(line: 1941, column: 8, scope: !8981)
!8983 = !DILocation(line: 1941, column: 15, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 1941, column: 3)
!8985 = !DILocation(line: 1941, column: 17, scope: !8984)
!8986 = !DILocation(line: 1941, column: 3, scope: !8981)
!8987 = !DILocalVariable(name: "id1", scope: !8988, file: !3, line: 1942, type: !511)
!8988 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 1941, column: 42)
!8989 = !DILocation(line: 1942, column: 19, scope: !8988)
!8990 = !DILocalVariable(name: "id2", scope: !8988, file: !3, line: 1942, type: !511)
!8991 = !DILocation(line: 1942, column: 24, scope: !8988)
!8992 = !DILocation(line: 1944, column: 20, scope: !8988)
!8993 = !DILocation(line: 1944, column: 25, scope: !8988)
!8994 = !DILocation(line: 1944, column: 10, scope: !8988)
!8995 = !DILocation(line: 1944, column: 8, scope: !8988)
!8996 = !DILocation(line: 1945, column: 8, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1945, column: 8)
!8998 = !DILocation(line: 1945, column: 12, scope: !8997)
!8999 = !DILocation(line: 1945, column: 8, scope: !8988)
!9000 = !DILocation(line: 1946, column: 5, scope: !8997)
!9001 = !DILocation(line: 1947, column: 20, scope: !8988)
!9002 = !DILocation(line: 1947, column: 25, scope: !8988)
!9003 = !DILocation(line: 1947, column: 10, scope: !8988)
!9004 = !DILocation(line: 1947, column: 8, scope: !8988)
!9005 = !DILocation(line: 1948, column: 8, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1948, column: 8)
!9007 = !DILocation(line: 1948, column: 12, scope: !9006)
!9008 = !DILocation(line: 1948, column: 8, scope: !8988)
!9009 = !DILocation(line: 1949, column: 5, scope: !9006)
!9010 = !DILocation(line: 1950, column: 8, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1950, column: 8)
!9012 = !DILocation(line: 1950, column: 10, scope: !9011)
!9013 = !DILocation(line: 1950, column: 16, scope: !9011)
!9014 = !DILocation(line: 1950, column: 21, scope: !9011)
!9015 = !DILocation(line: 1950, column: 34, scope: !9011)
!9016 = !DILocation(line: 1950, column: 39, scope: !9011)
!9017 = !DILocation(line: 1950, column: 49, scope: !9011)
!9018 = !DILocation(line: 1950, column: 8, scope: !8988)
!9019 = !DILocation(line: 1951, column: 5, scope: !9011)
!9020 = !DILocation(line: 1952, column: 4, scope: !8988)
!9021 = !DILocation(line: 1952, column: 8, scope: !8988)
!9022 = !DILocation(line: 1952, column: 16, scope: !8988)
!9023 = !DILocation(line: 1953, column: 25, scope: !8988)
!9024 = !DILocation(line: 1953, column: 22, scope: !8988)
!9025 = !DILocation(line: 1953, column: 4, scope: !8988)
!9026 = !DILocation(line: 1953, column: 8, scope: !8988)
!9027 = !DILocation(line: 1953, column: 16, scope: !8988)
!9028 = !DILocation(line: 1954, column: 24, scope: !8988)
!9029 = !DILocation(line: 1954, column: 4, scope: !8988)
!9030 = !DILocation(line: 1954, column: 8, scope: !8988)
!9031 = !DILocation(line: 1954, column: 15, scope: !8988)
!9032 = !DILocation(line: 1954, column: 22, scope: !8988)
!9033 = !DILocation(line: 1955, column: 8, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1955, column: 8)
!9035 = !DILocation(line: 1955, column: 22, scope: !9034)
!9036 = !DILocation(line: 1955, column: 8, scope: !8988)
!9037 = !DILocation(line: 1956, column: 5, scope: !9034)
!9038 = !DILocation(line: 1958, column: 3, scope: !8988)
!9039 = !DILocation(line: 1941, column: 38, scope: !8984)
!9040 = !DILocation(line: 1941, column: 3, scope: !8984)
!9041 = distinct !{!9041, !8986, !9042}
!9042 = !DILocation(line: 1958, column: 3, scope: !8981)
!9043 = !DILocation(line: 1959, column: 3, scope: !8969)
!9044 = !DILocation(line: 1959, column: 7, scope: !8969)
!9045 = !DILocation(line: 1959, column: 10, scope: !8969)
!9046 = !DILocation(line: 1959, column: 20, scope: !8969)
!9047 = !DILocation(line: 1959, column: 33, scope: !8969)
!9048 = !DILocation(line: 1959, column: 37, scope: !8969)
!9049 = !DILocation(line: 1959, column: 44, scope: !8969)
!9050 = !DILocation(line: 1959, column: 52, scope: !8969)
!9051 = !DILocation(line: 1959, column: 32, scope: !8969)
!9052 = !DILocation(line: 1960, column: 7, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 1960, column: 7)
!9054 = !DILocation(line: 1960, column: 11, scope: !9053)
!9055 = !DILocation(line: 1960, column: 20, scope: !9053)
!9056 = !DILocation(line: 1960, column: 7, scope: !8969)
!9057 = !DILocation(line: 1961, column: 4, scope: !9053)
!9058 = !DILocation(line: 1961, column: 8, scope: !9053)
!9059 = !DILocation(line: 1961, column: 16, scope: !9053)
!9060 = !DILocation(line: 1962, column: 2, scope: !8969)
!9061 = !DILocation(line: 1964, column: 2, scope: !8233)
!9062 = !DILocation(line: 1967, column: 2, scope: !8233)
!9063 = !DILocation(line: 1967, column: 7, scope: !8233)
!9064 = !DILocation(line: 1967, column: 18, scope: !8233)
!9065 = !DILocation(line: 1968, column: 2, scope: !8233)
!9066 = !DILocation(line: 1968, column: 7, scope: !8233)
!9067 = !DILocation(line: 1968, column: 19, scope: !8233)
!9068 = !DILocation(line: 1969, column: 2, scope: !8233)
!9069 = !DILocation(line: 1969, column: 7, scope: !8233)
!9070 = !DILocation(line: 1969, column: 22, scope: !8233)
!9071 = !DILocation(line: 1972, column: 22, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1972, column: 6)
!9073 = !DILocation(line: 1972, column: 6, scope: !9072)
!9074 = !DILocation(line: 1972, column: 6, scope: !8233)
!9075 = !DILocation(line: 1973, column: 3, scope: !9072)
!9076 = !DILocation(line: 1975, column: 6, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1975, column: 6)
!9078 = !DILocation(line: 1975, column: 6, scope: !8233)
!9079 = !DILocation(line: 1976, column: 19, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1975, column: 12)
!9081 = !DILocation(line: 1976, column: 25, scope: !9080)
!9082 = !DILocation(line: 1976, column: 3, scope: !9080)
!9083 = !DILocation(line: 1977, column: 2, scope: !9080)
!9084 = !DILocation(line: 1978, column: 14, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1977, column: 9)
!9086 = !DILocation(line: 1978, column: 3, scope: !9085)
!9087 = !DILocation(line: 1978, column: 7, scope: !9085)
!9088 = !DILocation(line: 1978, column: 12, scope: !9085)
!9089 = !DILocation(line: 1979, column: 17, scope: !9085)
!9090 = !DILocation(line: 1979, column: 15, scope: !9085)
!9091 = !DILocation(line: 1982, column: 6, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1982, column: 6)
!9093 = !DILocation(line: 1982, column: 20, scope: !9092)
!9094 = !DILocation(line: 1982, column: 6, scope: !8233)
!9095 = !DILocation(line: 1983, column: 3, scope: !9092)
!9096 = !DILocation(line: 1984, column: 13, scope: !8233)
!9097 = !DILocation(line: 1987, column: 2, scope: !8233)
!9098 = !DILocation(line: 1987, column: 5, scope: !8233)
!9099 = !DILocation(line: 1987, column: 15, scope: !8233)
!9100 = !DILocation(line: 1987, column: 26, scope: !8233)
!9101 = !DILocation(line: 1987, column: 29, scope: !8233)
!9102 = !DILocation(line: 1987, column: 38, scope: !8233)
!9103 = !DILocation(line: 1987, column: 49, scope: !8233)
!9104 = !DILocation(line: 1989, column: 2, scope: !8233)
!9105 = !DILabel(scope: !8233, name: "err_free_ring", file: !3, line: 1991)
!9106 = !DILocation(line: 1991, column: 1, scope: !8233)
!9107 = !DILocation(line: 1992, column: 20, scope: !8233)
!9108 = !DILocation(line: 1992, column: 2, scope: !8233)
!9109 = !DILocation(line: 1993, column: 21, scope: !8233)
!9110 = !DILocation(line: 1993, column: 25, scope: !8233)
!9111 = !DILocation(line: 1993, column: 34, scope: !8233)
!9112 = !DILocation(line: 1994, column: 6, scope: !8233)
!9113 = !DILocation(line: 1994, column: 10, scope: !8233)
!9114 = !DILocation(line: 1994, column: 22, scope: !8233)
!9115 = !DILocation(line: 1994, column: 26, scope: !8233)
!9116 = !DILocation(line: 1993, column: 2, scope: !8233)
!9117 = !DILabel(scope: !8233, name: "err_free_netdev", file: !3, line: 1995)
!9118 = !DILocation(line: 1995, column: 1, scope: !8233)
!9119 = !DILocation(line: 1996, column: 14, scope: !8233)
!9120 = !DILocation(line: 1996, column: 2, scope: !8233)
!9121 = !DILabel(scope: !8233, name: "err_release_region", file: !3, line: 1997)
!9122 = !DILocation(line: 1997, column: 1, scope: !8233)
!9123 = !DILocation(line: 1998, column: 2, scope: !8233)
!9124 = !DILocation(line: 1999, column: 9, scope: !8233)
!9125 = !DILocation(line: 1999, column: 2, scope: !8233)
!9126 = !DILocation(line: 2000, column: 1, scope: !8233)
!9127 = distinct !DISubprogram(name: "pcnet32_wio_reset", scope: !3, file: !3, line: 370, type: !7587, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9128 = !DILocalVariable(name: "addr", arg: 1, scope: !9127, file: !3, line: 370, type: !348)
!9129 = !DILocation(line: 370, column: 45, scope: !9127)
!9130 = !DILocation(line: 372, column: 6, scope: !9127)
!9131 = !DILocation(line: 372, column: 11, scope: !9127)
!9132 = !DILocation(line: 372, column: 2, scope: !9127)
!9133 = !DILocation(line: 373, column: 1, scope: !9127)
!9134 = distinct !DISubprogram(name: "pcnet32_wio_read_csr", scope: !3, file: !3, line: 336, type: !7569, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9135 = !DILocalVariable(name: "addr", arg: 1, scope: !9134, file: !3, line: 336, type: !348)
!9136 = !DILocation(line: 336, column: 47, scope: !9134)
!9137 = !DILocalVariable(name: "index", arg: 2, scope: !9134, file: !3, line: 336, type: !7)
!9138 = !DILocation(line: 336, column: 57, scope: !9134)
!9139 = !DILocation(line: 338, column: 7, scope: !9134)
!9140 = !DILocation(line: 338, column: 14, scope: !9134)
!9141 = !DILocation(line: 338, column: 19, scope: !9134)
!9142 = !DILocation(line: 338, column: 2, scope: !9134)
!9143 = !DILocation(line: 339, column: 13, scope: !9134)
!9144 = !DILocation(line: 339, column: 18, scope: !9134)
!9145 = !DILocation(line: 339, column: 9, scope: !9134)
!9146 = !DILocation(line: 339, column: 2, scope: !9134)
!9147 = distinct !DISubprogram(name: "pcnet32_wio_check", scope: !3, file: !3, line: 375, type: !9148, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9148 = !DISubroutineType(types: !9149)
!9149 = !{!7, !348}
!9150 = !DILocalVariable(name: "addr", arg: 1, scope: !9147, file: !3, line: 375, type: !348)
!9151 = !DILocation(line: 375, column: 44, scope: !9147)
!9152 = !DILocation(line: 377, column: 11, scope: !9147)
!9153 = !DILocation(line: 377, column: 16, scope: !9147)
!9154 = !DILocation(line: 377, column: 2, scope: !9147)
!9155 = !DILocation(line: 378, column: 13, scope: !9147)
!9156 = !DILocation(line: 378, column: 18, scope: !9147)
!9157 = !DILocation(line: 378, column: 9, scope: !9147)
!9158 = !DILocation(line: 378, column: 37, scope: !9147)
!9159 = !DILocation(line: 378, column: 2, scope: !9147)
!9160 = distinct !DISubprogram(name: "pcnet32_dwio_reset", scope: !3, file: !3, line: 425, type: !7587, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9161 = !DILocalVariable(name: "addr", arg: 1, scope: !9160, file: !3, line: 425, type: !348)
!9162 = !DILocation(line: 425, column: 46, scope: !9160)
!9163 = !DILocation(line: 427, column: 6, scope: !9160)
!9164 = !DILocation(line: 427, column: 11, scope: !9160)
!9165 = !DILocation(line: 427, column: 2, scope: !9160)
!9166 = !DILocation(line: 428, column: 1, scope: !9160)
!9167 = distinct !DISubprogram(name: "pcnet32_dwio_read_csr", scope: !3, file: !3, line: 391, type: !7569, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9168 = !DILocalVariable(name: "addr", arg: 1, scope: !9167, file: !3, line: 391, type: !348)
!9169 = !DILocation(line: 391, column: 48, scope: !9167)
!9170 = !DILocalVariable(name: "index", arg: 2, scope: !9167, file: !3, line: 391, type: !7)
!9171 = !DILocation(line: 391, column: 58, scope: !9167)
!9172 = !DILocation(line: 393, column: 7, scope: !9167)
!9173 = !DILocation(line: 393, column: 14, scope: !9167)
!9174 = !DILocation(line: 393, column: 19, scope: !9167)
!9175 = !DILocation(line: 393, column: 2, scope: !9167)
!9176 = !DILocation(line: 394, column: 13, scope: !9167)
!9177 = !DILocation(line: 394, column: 18, scope: !9167)
!9178 = !DILocation(line: 394, column: 9, scope: !9167)
!9179 = !DILocation(line: 394, column: 38, scope: !9167)
!9180 = !DILocation(line: 394, column: 2, scope: !9167)
!9181 = distinct !DISubprogram(name: "pcnet32_dwio_check", scope: !3, file: !3, line: 430, type: !9148, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9182 = !DILocalVariable(name: "addr", arg: 1, scope: !9181, file: !3, line: 430, type: !348)
!9183 = !DILocation(line: 430, column: 45, scope: !9181)
!9184 = !DILocation(line: 432, column: 11, scope: !9181)
!9185 = !DILocation(line: 432, column: 16, scope: !9181)
!9186 = !DILocation(line: 432, column: 2, scope: !9181)
!9187 = !DILocation(line: 433, column: 14, scope: !9181)
!9188 = !DILocation(line: 433, column: 19, scope: !9181)
!9189 = !DILocation(line: 433, column: 10, scope: !9181)
!9190 = !DILocation(line: 433, column: 39, scope: !9181)
!9191 = !DILocation(line: 433, column: 49, scope: !9181)
!9192 = !DILocation(line: 433, column: 2, scope: !9181)
!9193 = distinct !DISubprogram(name: "inb", scope: !9194, file: !9194, line: 334, type: !9195, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9194 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!9195 = !DISubroutineType(types: !9196)
!9196 = !{!517, !7}
!9197 = !DILocalVariable(name: "port", arg: 1, scope: !9193, file: !9194, line: 334, type: !7)
!9198 = !DILocation(line: 334, column: 1, scope: !9193)
!9199 = !DILocalVariable(name: "value", scope: !9193, file: !9194, line: 334, type: !517)
!9200 = !{i32 -2143248755}
!9201 = distinct !DISubprogram(name: "ether_addr_equal", scope: !9202, file: !9202, line: 326, type: !9203, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9202 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!9203 = !DISubroutineType(types: !9204)
!9204 = !{!806, !5865, !5865}
!9205 = !DILocalVariable(name: "addr1", arg: 1, scope: !9201, file: !9202, line: 326, type: !5865)
!9206 = !DILocation(line: 326, column: 47, scope: !9201)
!9207 = !DILocalVariable(name: "addr2", arg: 2, scope: !9201, file: !9202, line: 326, type: !5865)
!9208 = !DILocation(line: 326, column: 64, scope: !9201)
!9209 = !DILocalVariable(name: "fold", scope: !9201, file: !9202, line: 329, type: !1022)
!9210 = !DILocation(line: 329, column: 6, scope: !9201)
!9211 = !DILocation(line: 329, column: 29, scope: !9201)
!9212 = !DILocation(line: 329, column: 15, scope: !9201)
!9213 = !DILocation(line: 329, column: 53, scope: !9201)
!9214 = !DILocation(line: 329, column: 39, scope: !9201)
!9215 = !DILocation(line: 329, column: 36, scope: !9201)
!9216 = !DILocation(line: 330, column: 23, scope: !9201)
!9217 = !DILocation(line: 330, column: 29, scope: !9201)
!9218 = !DILocation(line: 330, column: 8, scope: !9201)
!9219 = !DILocation(line: 330, column: 7, scope: !9201)
!9220 = !DILocation(line: 330, column: 53, scope: !9201)
!9221 = !DILocation(line: 330, column: 59, scope: !9201)
!9222 = !DILocation(line: 330, column: 38, scope: !9201)
!9223 = !DILocation(line: 330, column: 37, scope: !9201)
!9224 = !DILocation(line: 330, column: 35, scope: !9201)
!9225 = !DILocation(line: 329, column: 61, scope: !9201)
!9226 = !DILocation(line: 332, column: 9, scope: !9201)
!9227 = !DILocation(line: 332, column: 14, scope: !9201)
!9228 = !DILocation(line: 332, column: 2, scope: !9201)
!9229 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !9202, file: !9202, line: 191, type: !9230, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{!806, !5865}
!9232 = !DILocalVariable(name: "addr", arg: 1, scope: !9229, file: !9202, line: 191, type: !5865)
!9233 = !DILocation(line: 191, column: 50, scope: !9229)
!9234 = !DILocation(line: 195, column: 34, scope: !9229)
!9235 = !DILocation(line: 195, column: 10, scope: !9229)
!9236 = !DILocation(line: 195, column: 40, scope: !9229)
!9237 = !DILocation(line: 195, column: 63, scope: !9229)
!9238 = !DILocation(line: 195, column: 44, scope: !9229)
!9239 = !DILocation(line: 195, column: 43, scope: !9229)
!9240 = !DILocation(line: 0, scope: !9229)
!9241 = !DILocation(line: 195, column: 2, scope: !9229)
!9242 = distinct !DISubprogram(name: "eth_zero_addr", scope: !9202, file: !9202, line: 249, type: !9243, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9243 = !DISubroutineType(types: !9244)
!9244 = !{null, !828}
!9245 = !DILocalVariable(name: "addr", arg: 1, scope: !9242, file: !9202, line: 249, type: !828)
!9246 = !DILocation(line: 249, column: 38, scope: !9242)
!9247 = !DILocation(line: 251, column: 9, scope: !9242)
!9248 = !DILocation(line: 251, column: 2, scope: !9242)
!9249 = !DILocation(line: 252, column: 1, scope: !9242)
!9250 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !7914, file: !7914, line: 392, type: !9251, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{!626, !6545, !1074, !7560, !1776}
!9253 = !DILocalVariable(name: "dev", arg: 1, scope: !9250, file: !7914, line: 392, type: !6545)
!9254 = !DILocation(line: 392, column: 55, scope: !9250)
!9255 = !DILocalVariable(name: "size", arg: 2, scope: !9250, file: !7914, line: 392, type: !1074)
!9256 = !DILocation(line: 392, column: 67, scope: !9250)
!9257 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !9250, file: !7914, line: 393, type: !7560)
!9258 = !DILocation(line: 393, column: 15, scope: !9250)
!9259 = !DILocalVariable(name: "gfp", arg: 4, scope: !9250, file: !7914, line: 393, type: !1776)
!9260 = !DILocation(line: 393, column: 33, scope: !9250)
!9261 = !DILocation(line: 396, column: 25, scope: !9250)
!9262 = !DILocation(line: 396, column: 30, scope: !9250)
!9263 = !DILocation(line: 396, column: 36, scope: !9250)
!9264 = !DILocation(line: 396, column: 48, scope: !9250)
!9265 = !DILocation(line: 397, column: 5, scope: !9250)
!9266 = !DILocation(line: 397, column: 9, scope: !9250)
!9267 = !DILocation(line: 397, column: 4, scope: !9250)
!9268 = !DILocation(line: 396, column: 9, scope: !9250)
!9269 = !DILocation(line: 396, column: 2, scope: !9250)
!9270 = distinct !DISubprogram(name: "mdio_read", scope: !3, file: !3, line: 2738, type: !867, scopeLine: 2739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9271 = !DILocalVariable(name: "dev", arg: 1, scope: !9270, file: !3, line: 2738, type: !326)
!9272 = !DILocation(line: 2738, column: 41, scope: !9270)
!9273 = !DILocalVariable(name: "phy_id", arg: 2, scope: !9270, file: !3, line: 2738, type: !7)
!9274 = !DILocation(line: 2738, column: 50, scope: !9270)
!9275 = !DILocalVariable(name: "reg_num", arg: 3, scope: !9270, file: !3, line: 2738, type: !7)
!9276 = !DILocation(line: 2738, column: 62, scope: !9270)
!9277 = !DILocalVariable(name: "lp", scope: !9270, file: !3, line: 2740, type: !7248)
!9278 = !DILocation(line: 2740, column: 26, scope: !9270)
!9279 = !DILocation(line: 2740, column: 43, scope: !9270)
!9280 = !DILocation(line: 2740, column: 31, scope: !9270)
!9281 = !DILocalVariable(name: "ioaddr", scope: !9270, file: !3, line: 2741, type: !348)
!9282 = !DILocation(line: 2741, column: 16, scope: !9270)
!9283 = !DILocation(line: 2741, column: 25, scope: !9270)
!9284 = !DILocation(line: 2741, column: 30, scope: !9270)
!9285 = !DILocalVariable(name: "val_out", scope: !9270, file: !3, line: 2742, type: !616)
!9286 = !DILocation(line: 2742, column: 6, scope: !9270)
!9287 = !DILocation(line: 2744, column: 7, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2744, column: 6)
!9289 = !DILocation(line: 2744, column: 11, scope: !9288)
!9290 = !DILocation(line: 2744, column: 6, scope: !9270)
!9291 = !DILocation(line: 2745, column: 3, scope: !9288)
!9292 = !DILocation(line: 2747, column: 2, scope: !9270)
!9293 = !DILocation(line: 2747, column: 6, scope: !9270)
!9294 = !DILocation(line: 2747, column: 9, scope: !9270)
!9295 = !DILocation(line: 2747, column: 19, scope: !9270)
!9296 = !DILocation(line: 2747, column: 33, scope: !9270)
!9297 = !DILocation(line: 2747, column: 40, scope: !9270)
!9298 = !DILocation(line: 2747, column: 48, scope: !9270)
!9299 = !DILocation(line: 2747, column: 57, scope: !9270)
!9300 = !DILocation(line: 2747, column: 65, scope: !9270)
!9301 = !DILocation(line: 2747, column: 54, scope: !9270)
!9302 = !DILocation(line: 2747, column: 31, scope: !9270)
!9303 = !DILocation(line: 2748, column: 12, scope: !9270)
!9304 = !DILocation(line: 2748, column: 16, scope: !9270)
!9305 = !DILocation(line: 2748, column: 19, scope: !9270)
!9306 = !DILocation(line: 2748, column: 28, scope: !9270)
!9307 = !DILocation(line: 2748, column: 10, scope: !9270)
!9308 = !DILocation(line: 2750, column: 9, scope: !9270)
!9309 = !DILocation(line: 2750, column: 2, scope: !9270)
!9310 = !DILocation(line: 2751, column: 1, scope: !9270)
!9311 = distinct !DISubprogram(name: "mdio_write", scope: !3, file: !3, line: 2754, type: !7655, scopeLine: 2755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9312 = !DILocalVariable(name: "dev", arg: 1, scope: !9311, file: !3, line: 2754, type: !326)
!9313 = !DILocation(line: 2754, column: 43, scope: !9311)
!9314 = !DILocalVariable(name: "phy_id", arg: 2, scope: !9311, file: !3, line: 2754, type: !7)
!9315 = !DILocation(line: 2754, column: 52, scope: !9311)
!9316 = !DILocalVariable(name: "reg_num", arg: 3, scope: !9311, file: !3, line: 2754, type: !7)
!9317 = !DILocation(line: 2754, column: 64, scope: !9311)
!9318 = !DILocalVariable(name: "val", arg: 4, scope: !9311, file: !3, line: 2754, type: !7)
!9319 = !DILocation(line: 2754, column: 77, scope: !9311)
!9320 = !DILocalVariable(name: "lp", scope: !9311, file: !3, line: 2756, type: !7248)
!9321 = !DILocation(line: 2756, column: 26, scope: !9311)
!9322 = !DILocation(line: 2756, column: 43, scope: !9311)
!9323 = !DILocation(line: 2756, column: 31, scope: !9311)
!9324 = !DILocalVariable(name: "ioaddr", scope: !9311, file: !3, line: 2757, type: !348)
!9325 = !DILocation(line: 2757, column: 16, scope: !9311)
!9326 = !DILocation(line: 2757, column: 25, scope: !9311)
!9327 = !DILocation(line: 2757, column: 30, scope: !9311)
!9328 = !DILocation(line: 2759, column: 7, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 2759, column: 6)
!9330 = !DILocation(line: 2759, column: 11, scope: !9329)
!9331 = !DILocation(line: 2759, column: 6, scope: !9311)
!9332 = !DILocation(line: 2760, column: 3, scope: !9329)
!9333 = !DILocation(line: 2762, column: 2, scope: !9311)
!9334 = !DILocation(line: 2762, column: 6, scope: !9311)
!9335 = !DILocation(line: 2762, column: 9, scope: !9311)
!9336 = !DILocation(line: 2762, column: 19, scope: !9311)
!9337 = !DILocation(line: 2762, column: 33, scope: !9311)
!9338 = !DILocation(line: 2762, column: 40, scope: !9311)
!9339 = !DILocation(line: 2762, column: 48, scope: !9311)
!9340 = !DILocation(line: 2762, column: 57, scope: !9311)
!9341 = !DILocation(line: 2762, column: 65, scope: !9311)
!9342 = !DILocation(line: 2762, column: 54, scope: !9311)
!9343 = !DILocation(line: 2762, column: 31, scope: !9311)
!9344 = !DILocation(line: 2763, column: 2, scope: !9311)
!9345 = !DILocation(line: 2763, column: 6, scope: !9311)
!9346 = !DILocation(line: 2763, column: 9, scope: !9311)
!9347 = !DILocation(line: 2763, column: 19, scope: !9311)
!9348 = !DILocation(line: 2763, column: 31, scope: !9311)
!9349 = !DILocation(line: 2764, column: 1, scope: !9311)
!9350 = distinct !DISubprogram(name: "pcnet32_poll", scope: !3, file: !3, line: 1383, type: !7613, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9351 = !DILocalVariable(name: "lock", arg: 1, scope: !9352, file: !8238, line: 407, type: !2215)
!9352 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !8238, file: !8238, line: 407, type: !9353, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{null, !2215, !348}
!9355 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !9356)
!9356 = distinct !DILocation(line: 1413, column: 2, scope: !9350)
!9357 = !DILocalVariable(name: "flags", arg: 2, scope: !9352, file: !8238, line: 407, type: !348)
!9358 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !9356)
!9359 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !9360)
!9360 = distinct !DILocation(line: 1394, column: 2, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1394, column: 2)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1394, column: 2)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 1394, column: 2)
!9364 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1394, column: 2)
!9365 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1394, column: 2)
!9366 = !DILocalVariable(name: "napi", arg: 1, scope: !9350, file: !3, line: 1383, type: !7615)
!9367 = !DILocation(line: 1383, column: 45, scope: !9350)
!9368 = !DILocalVariable(name: "budget", arg: 2, scope: !9350, file: !3, line: 1383, type: !7)
!9369 = !DILocation(line: 1383, column: 55, scope: !9350)
!9370 = !DILocalVariable(name: "lp", scope: !9350, file: !3, line: 1385, type: !7248)
!9371 = !DILocation(line: 1385, column: 26, scope: !9350)
!9372 = !DILocalVariable(name: "__mptr", scope: !9373, file: !3, line: 1385, type: !626)
!9373 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1385, column: 31)
!9374 = !DILocation(line: 1385, column: 31, scope: !9373)
!9375 = !DILocation(line: 1385, column: 31, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 1385, column: 31)
!9377 = !DILocalVariable(name: "dev", scope: !9350, file: !3, line: 1386, type: !326)
!9378 = !DILocation(line: 1386, column: 21, scope: !9350)
!9379 = !DILocation(line: 1386, column: 27, scope: !9350)
!9380 = !DILocation(line: 1386, column: 31, scope: !9350)
!9381 = !DILocalVariable(name: "ioaddr", scope: !9350, file: !3, line: 1387, type: !348)
!9382 = !DILocation(line: 1387, column: 16, scope: !9350)
!9383 = !DILocation(line: 1387, column: 25, scope: !9350)
!9384 = !DILocation(line: 1387, column: 30, scope: !9350)
!9385 = !DILocalVariable(name: "flags", scope: !9350, file: !3, line: 1388, type: !348)
!9386 = !DILocation(line: 1388, column: 16, scope: !9350)
!9387 = !DILocalVariable(name: "work_done", scope: !9350, file: !3, line: 1389, type: !7)
!9388 = !DILocation(line: 1389, column: 6, scope: !9350)
!9389 = !DILocalVariable(name: "val", scope: !9350, file: !3, line: 1390, type: !616)
!9390 = !DILocation(line: 1390, column: 6, scope: !9350)
!9391 = !DILocation(line: 1392, column: 25, scope: !9350)
!9392 = !DILocation(line: 1392, column: 30, scope: !9350)
!9393 = !DILocation(line: 1392, column: 14, scope: !9350)
!9394 = !DILocation(line: 1392, column: 12, scope: !9350)
!9395 = !DILocation(line: 1394, column: 2, scope: !9350)
!9396 = !DILocation(line: 1394, column: 2, scope: !9365)
!9397 = !DILocalVariable(name: "__dummy", scope: !9398, file: !3, line: 1394, type: !348)
!9398 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 1394, column: 2)
!9399 = !DILocation(line: 1394, column: 2, scope: !9398)
!9400 = !DILocalVariable(name: "__dummy2", scope: !9398, file: !3, line: 1394, type: !348)
!9401 = !DILocation(line: 1394, column: 2, scope: !9364)
!9402 = !DILocation(line: 1394, column: 2, scope: !9363)
!9403 = !DILocation(line: 1394, column: 2, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1394, column: 2)
!9405 = !DILocalVariable(name: "__dummy", scope: !9406, file: !3, line: 1394, type: !348)
!9406 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 1394, column: 2)
!9407 = distinct !DILexicalBlock(scope: !9404, file: !3, line: 1394, column: 2)
!9408 = !DILocation(line: 1394, column: 2, scope: !9406)
!9409 = !DILocalVariable(name: "__dummy2", scope: !9406, file: !3, line: 1394, type: !348)
!9410 = !DILocation(line: 1394, column: 2, scope: !9407)
!9411 = !DILocation(line: 1394, column: 2, scope: !9362)
!9412 = !{i32 -2139649927}
!9413 = !DILocation(line: 1394, column: 2, scope: !9361)
!9414 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !9360)
!9415 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !9360)
!9416 = !DILocation(line: 1395, column: 17, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1395, column: 6)
!9418 = !DILocation(line: 1395, column: 6, scope: !9417)
!9419 = !DILocation(line: 1395, column: 6, scope: !9350)
!9420 = !DILocation(line: 1397, column: 3, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9417, file: !3, line: 1395, column: 23)
!9422 = !DILocation(line: 1397, column: 7, scope: !9421)
!9423 = !DILocation(line: 1397, column: 10, scope: !9421)
!9424 = !DILocation(line: 1397, column: 16, scope: !9421)
!9425 = !DILocation(line: 1398, column: 3, scope: !9421)
!9426 = !DILocation(line: 1398, column: 7, scope: !9421)
!9427 = !DILocation(line: 1398, column: 10, scope: !9421)
!9428 = !DILocation(line: 1398, column: 20, scope: !9421)
!9429 = !DILocation(line: 1399, column: 19, scope: !9421)
!9430 = !DILocation(line: 1399, column: 3, scope: !9421)
!9431 = !DILocation(line: 1400, column: 20, scope: !9421)
!9432 = !DILocation(line: 1400, column: 3, scope: !9421)
!9433 = !DILocation(line: 1401, column: 2, scope: !9421)
!9434 = !DILocation(line: 1403, column: 6, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1403, column: 6)
!9436 = !DILocation(line: 1403, column: 18, scope: !9435)
!9437 = !DILocation(line: 1403, column: 16, scope: !9435)
!9438 = !DILocation(line: 1403, column: 25, scope: !9435)
!9439 = !DILocation(line: 1403, column: 47, scope: !9435)
!9440 = !DILocation(line: 1403, column: 53, scope: !9435)
!9441 = !DILocation(line: 1403, column: 28, scope: !9435)
!9442 = !DILocation(line: 1403, column: 6, scope: !9350)
!9443 = !DILocation(line: 1405, column: 9, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 1403, column: 65)
!9445 = !DILocation(line: 1405, column: 13, scope: !9444)
!9446 = !DILocation(line: 1405, column: 16, scope: !9444)
!9447 = !DILocation(line: 1405, column: 25, scope: !9444)
!9448 = !DILocation(line: 1405, column: 7, scope: !9444)
!9449 = !DILocation(line: 1406, column: 7, scope: !9444)
!9450 = !DILocation(line: 1407, column: 3, scope: !9444)
!9451 = !DILocation(line: 1407, column: 7, scope: !9444)
!9452 = !DILocation(line: 1407, column: 10, scope: !9444)
!9453 = !DILocation(line: 1407, column: 20, scope: !9444)
!9454 = !DILocation(line: 1407, column: 34, scope: !9444)
!9455 = !DILocation(line: 1410, column: 3, scope: !9444)
!9456 = !DILocation(line: 1410, column: 7, scope: !9444)
!9457 = !DILocation(line: 1410, column: 10, scope: !9444)
!9458 = !DILocation(line: 1410, column: 20, scope: !9444)
!9459 = !DILocation(line: 1411, column: 2, scope: !9444)
!9460 = !DILocation(line: 1413, column: 26, scope: !9350)
!9461 = !DILocation(line: 1413, column: 30, scope: !9350)
!9462 = !DILocation(line: 1413, column: 36, scope: !9350)
!9463 = !DILocalVariable(name: "__dummy", scope: !9464, file: !8238, line: 409, type: !348)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !8238, line: 409, column: 2)
!9465 = distinct !DILexicalBlock(scope: !9352, file: !8238, line: 409, column: 2)
!9466 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !9356)
!9467 = !DILocalVariable(name: "__dummy2", scope: !9464, file: !8238, line: 409, type: !348)
!9468 = !DILocalVariable(name: "__dummy", scope: !9469, file: !8238, line: 409, type: !348)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !8238, line: 409, column: 2)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !8238, line: 409, column: 2)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !8238, line: 409, column: 2)
!9472 = distinct !DILexicalBlock(scope: !9465, file: !8238, line: 409, column: 2)
!9473 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !9356)
!9474 = !DILocalVariable(name: "__dummy2", scope: !9469, file: !8238, line: 409, type: !348)
!9475 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !9356)
!9476 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !9356)
!9477 = distinct !DILexicalBlock(scope: !9472, file: !8238, line: 409, column: 2)
!9478 = !{i32 -2145391364}
!9479 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !9356)
!9480 = distinct !DILexicalBlock(scope: !9477, file: !8238, line: 409, column: 2)
!9481 = !DILocation(line: 1414, column: 9, scope: !9350)
!9482 = !DILocation(line: 1414, column: 2, scope: !9350)
!9483 = distinct !DISubprogram(name: "pcnet32_alloc_ring", scope: !3, file: !3, line: 2003, type: !9484, scopeLine: 2004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9484 = !DISubroutineType(types: !9485)
!9485 = !{!7, !326, !328}
!9486 = !DILocalVariable(name: "dev", arg: 1, scope: !9483, file: !3, line: 2003, type: !326)
!9487 = !DILocation(line: 2003, column: 50, scope: !9483)
!9488 = !DILocalVariable(name: "name", arg: 2, scope: !9483, file: !3, line: 2003, type: !328)
!9489 = !DILocation(line: 2003, column: 67, scope: !9483)
!9490 = !DILocalVariable(name: "lp", scope: !9483, file: !3, line: 2005, type: !7248)
!9491 = !DILocation(line: 2005, column: 26, scope: !9483)
!9492 = !DILocation(line: 2005, column: 43, scope: !9483)
!9493 = !DILocation(line: 2005, column: 31, scope: !9483)
!9494 = !DILocation(line: 2007, column: 36, scope: !9483)
!9495 = !DILocation(line: 2007, column: 40, scope: !9483)
!9496 = !DILocation(line: 2007, column: 49, scope: !9483)
!9497 = !DILocation(line: 2008, column: 40, scope: !9483)
!9498 = !DILocation(line: 2008, column: 44, scope: !9483)
!9499 = !DILocation(line: 2008, column: 38, scope: !9483)
!9500 = !DILocation(line: 2009, column: 8, scope: !9483)
!9501 = !DILocation(line: 2009, column: 12, scope: !9483)
!9502 = !DILocation(line: 2007, column: 16, scope: !9483)
!9503 = !DILocation(line: 2007, column: 2, scope: !9483)
!9504 = !DILocation(line: 2007, column: 6, scope: !9483)
!9505 = !DILocation(line: 2007, column: 14, scope: !9483)
!9506 = !DILocation(line: 2010, column: 6, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 2010, column: 6)
!9508 = !DILocation(line: 2010, column: 10, scope: !9507)
!9509 = !DILocation(line: 2010, column: 18, scope: !9507)
!9510 = !DILocation(line: 2010, column: 6, scope: !9483)
!9511 = !DILocation(line: 2011, column: 3, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 2010, column: 27)
!9513 = !DILocation(line: 2011, column: 3, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 2011, column: 3)
!9515 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 2011, column: 3)
!9516 = !DILocation(line: 2011, column: 3, scope: !9515)
!9517 = !DILocation(line: 2012, column: 3, scope: !9512)
!9518 = !DILocation(line: 2015, column: 36, scope: !9483)
!9519 = !DILocation(line: 2015, column: 40, scope: !9483)
!9520 = !DILocation(line: 2015, column: 49, scope: !9483)
!9521 = !DILocation(line: 2016, column: 40, scope: !9483)
!9522 = !DILocation(line: 2016, column: 44, scope: !9483)
!9523 = !DILocation(line: 2016, column: 38, scope: !9483)
!9524 = !DILocation(line: 2017, column: 8, scope: !9483)
!9525 = !DILocation(line: 2017, column: 12, scope: !9483)
!9526 = !DILocation(line: 2015, column: 16, scope: !9483)
!9527 = !DILocation(line: 2015, column: 2, scope: !9483)
!9528 = !DILocation(line: 2015, column: 6, scope: !9483)
!9529 = !DILocation(line: 2015, column: 14, scope: !9483)
!9530 = !DILocation(line: 2018, column: 6, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 2018, column: 6)
!9532 = !DILocation(line: 2018, column: 10, scope: !9531)
!9533 = !DILocation(line: 2018, column: 18, scope: !9531)
!9534 = !DILocation(line: 2018, column: 6, scope: !9483)
!9535 = !DILocation(line: 2019, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2018, column: 27)
!9537 = !DILocation(line: 2019, column: 3, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 2019, column: 3)
!9539 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2019, column: 3)
!9540 = !DILocation(line: 2019, column: 3, scope: !9539)
!9541 = !DILocation(line: 2020, column: 3, scope: !9536)
!9542 = !DILocation(line: 2023, column: 28, scope: !9483)
!9543 = !DILocation(line: 2023, column: 32, scope: !9483)
!9544 = !DILocation(line: 2023, column: 20, scope: !9483)
!9545 = !DILocation(line: 2023, column: 2, scope: !9483)
!9546 = !DILocation(line: 2023, column: 6, scope: !9483)
!9547 = !DILocation(line: 2023, column: 18, scope: !9483)
!9548 = !DILocation(line: 2025, column: 7, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 2025, column: 6)
!9550 = !DILocation(line: 2025, column: 11, scope: !9549)
!9551 = !DILocation(line: 2025, column: 6, scope: !9483)
!9552 = !DILocation(line: 2026, column: 3, scope: !9549)
!9553 = !DILocation(line: 2028, column: 28, scope: !9483)
!9554 = !DILocation(line: 2028, column: 32, scope: !9483)
!9555 = !DILocation(line: 2028, column: 20, scope: !9483)
!9556 = !DILocation(line: 2028, column: 2, scope: !9483)
!9557 = !DILocation(line: 2028, column: 6, scope: !9483)
!9558 = !DILocation(line: 2028, column: 18, scope: !9483)
!9559 = !DILocation(line: 2030, column: 7, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 2030, column: 6)
!9561 = !DILocation(line: 2030, column: 11, scope: !9560)
!9562 = !DILocation(line: 2030, column: 6, scope: !9483)
!9563 = !DILocation(line: 2031, column: 3, scope: !9560)
!9564 = !DILocation(line: 2033, column: 26, scope: !9483)
!9565 = !DILocation(line: 2033, column: 30, scope: !9483)
!9566 = !DILocation(line: 2033, column: 18, scope: !9483)
!9567 = !DILocation(line: 2033, column: 2, scope: !9483)
!9568 = !DILocation(line: 2033, column: 6, scope: !9483)
!9569 = !DILocation(line: 2033, column: 16, scope: !9483)
!9570 = !DILocation(line: 2035, column: 7, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 2035, column: 6)
!9572 = !DILocation(line: 2035, column: 11, scope: !9571)
!9573 = !DILocation(line: 2035, column: 6, scope: !9483)
!9574 = !DILocation(line: 2036, column: 3, scope: !9571)
!9575 = !DILocation(line: 2038, column: 26, scope: !9483)
!9576 = !DILocation(line: 2038, column: 30, scope: !9483)
!9577 = !DILocation(line: 2038, column: 18, scope: !9483)
!9578 = !DILocation(line: 2038, column: 2, scope: !9483)
!9579 = !DILocation(line: 2038, column: 6, scope: !9483)
!9580 = !DILocation(line: 2038, column: 16, scope: !9483)
!9581 = !DILocation(line: 2040, column: 7, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 2040, column: 6)
!9583 = !DILocation(line: 2040, column: 11, scope: !9582)
!9584 = !DILocation(line: 2040, column: 6, scope: !9483)
!9585 = !DILocation(line: 2041, column: 3, scope: !9582)
!9586 = !DILocation(line: 2043, column: 2, scope: !9483)
!9587 = !DILocation(line: 2044, column: 1, scope: !9483)
!9588 = distinct !DISubprogram(name: "pci_name", scope: !7286, file: !7286, line: 1875, type: !9589, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{!328, !9591}
!9591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9592, size: 64)
!9592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7285)
!9593 = !DILocalVariable(name: "pdev", arg: 1, scope: !9588, file: !7286, line: 1875, type: !9591)
!9594 = !DILocation(line: 1875, column: 58, scope: !9588)
!9595 = !DILocation(line: 1877, column: 19, scope: !9588)
!9596 = !DILocation(line: 1877, column: 25, scope: !9588)
!9597 = !DILocation(line: 1877, column: 9, scope: !9588)
!9598 = !DILocation(line: 1877, column: 2, scope: !9588)
!9599 = distinct !DISubprogram(name: "pcnet32_watchdog", scope: !3, file: !3, line: 2889, type: !3275, scopeLine: 2890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9600 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !9601)
!9601 = distinct !DILocation(line: 2898, column: 2, scope: !9599)
!9602 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !9601)
!9603 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !9604)
!9604 = distinct !DILocation(line: 2896, column: 2, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 2896, column: 2)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 2896, column: 2)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 2896, column: 2)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 2896, column: 2)
!9609 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 2896, column: 2)
!9610 = !DILocalVariable(name: "t", arg: 1, scope: !9599, file: !3, line: 2889, type: !3277)
!9611 = !DILocation(line: 2889, column: 49, scope: !9599)
!9612 = !DILocalVariable(name: "lp", scope: !9599, file: !3, line: 2891, type: !7248)
!9613 = !DILocation(line: 2891, column: 26, scope: !9599)
!9614 = !DILocalVariable(name: "__mptr", scope: !9615, file: !3, line: 2891, type: !626)
!9615 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 2891, column: 31)
!9616 = !DILocation(line: 2891, column: 31, scope: !9615)
!9617 = !DILocation(line: 2891, column: 31, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 2891, column: 31)
!9619 = !DILocalVariable(name: "dev", scope: !9599, file: !3, line: 2892, type: !326)
!9620 = !DILocation(line: 2892, column: 21, scope: !9599)
!9621 = !DILocation(line: 2892, column: 27, scope: !9599)
!9622 = !DILocation(line: 2892, column: 31, scope: !9599)
!9623 = !DILocalVariable(name: "flags", scope: !9599, file: !3, line: 2893, type: !348)
!9624 = !DILocation(line: 2893, column: 16, scope: !9599)
!9625 = !DILocation(line: 2896, column: 2, scope: !9599)
!9626 = !DILocation(line: 2896, column: 2, scope: !9609)
!9627 = !DILocalVariable(name: "__dummy", scope: !9628, file: !3, line: 2896, type: !348)
!9628 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 2896, column: 2)
!9629 = !DILocation(line: 2896, column: 2, scope: !9628)
!9630 = !DILocalVariable(name: "__dummy2", scope: !9628, file: !3, line: 2896, type: !348)
!9631 = !DILocation(line: 2896, column: 2, scope: !9608)
!9632 = !DILocation(line: 2896, column: 2, scope: !9607)
!9633 = !DILocation(line: 2896, column: 2, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 2896, column: 2)
!9635 = !DILocalVariable(name: "__dummy", scope: !9636, file: !3, line: 2896, type: !348)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 2896, column: 2)
!9637 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2896, column: 2)
!9638 = !DILocation(line: 2896, column: 2, scope: !9636)
!9639 = !DILocalVariable(name: "__dummy2", scope: !9636, file: !3, line: 2896, type: !348)
!9640 = !DILocation(line: 2896, column: 2, scope: !9637)
!9641 = !DILocation(line: 2896, column: 2, scope: !9606)
!9642 = !{i32 -2139613260}
!9643 = !DILocation(line: 2896, column: 2, scope: !9605)
!9644 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !9604)
!9645 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !9604)
!9646 = !DILocation(line: 2897, column: 22, scope: !9599)
!9647 = !DILocation(line: 2897, column: 2, scope: !9599)
!9648 = !DILocation(line: 2898, column: 26, scope: !9599)
!9649 = !DILocation(line: 2898, column: 30, scope: !9599)
!9650 = !DILocation(line: 2898, column: 36, scope: !9599)
!9651 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !9601)
!9652 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !9601)
!9653 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !9601)
!9654 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !9601)
!9655 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !9601)
!9656 = !DILocation(line: 2900, column: 13, scope: !9599)
!9657 = !DILocation(line: 2900, column: 17, scope: !9599)
!9658 = !DILocation(line: 2900, column: 47, scope: !9599)
!9659 = !DILocation(line: 2900, column: 33, scope: !9599)
!9660 = !DILocation(line: 2900, column: 2, scope: !9599)
!9661 = !DILocation(line: 2901, column: 1, scope: !9599)
!9662 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !7286, file: !7286, line: 1870, type: !9663, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9663 = !DISubroutineType(types: !9664)
!9664 = !{null, !7284, !626}
!9665 = !DILocalVariable(name: "pdev", arg: 1, scope: !9662, file: !7286, line: 1870, type: !7284)
!9666 = !DILocation(line: 1870, column: 52, scope: !9662)
!9667 = !DILocalVariable(name: "data", arg: 2, scope: !9662, file: !7286, line: 1870, type: !626)
!9668 = !DILocation(line: 1870, column: 64, scope: !9662)
!9669 = !DILocation(line: 1872, column: 19, scope: !9662)
!9670 = !DILocation(line: 1872, column: 25, scope: !9662)
!9671 = !DILocation(line: 1872, column: 30, scope: !9662)
!9672 = !DILocation(line: 1872, column: 2, scope: !9662)
!9673 = !DILocation(line: 1873, column: 1, scope: !9662)
!9674 = distinct !DISubprogram(name: "inw", scope: !9194, file: !9194, line: 335, type: !9675, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!511, !7}
!9677 = !DILocalVariable(name: "port", arg: 1, scope: !9674, file: !9194, line: 335, type: !7)
!9678 = !DILocation(line: 335, column: 1, scope: !9674)
!9679 = !DILocalVariable(name: "value", scope: !9674, file: !9194, line: 335, type: !511)
!9680 = !{i32 -2143246012}
!9681 = distinct !DISubprogram(name: "outw", scope: !9194, file: !9194, line: 335, type: !9682, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9682 = !DISubroutineType(types: !9683)
!9683 = !{null, !511, !7}
!9684 = !DILocalVariable(name: "value", arg: 1, scope: !9681, file: !9194, line: 335, type: !511)
!9685 = !DILocation(line: 335, column: 1, scope: !9681)
!9686 = !DILocalVariable(name: "port", arg: 2, scope: !9681, file: !9194, line: 335, type: !7)
!9687 = !{i32 -2143246214}
!9688 = distinct !DISubprogram(name: "pcnet32_wio_write_csr", scope: !3, file: !3, line: 342, type: !7573, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9689 = !DILocalVariable(name: "addr", arg: 1, scope: !9688, file: !3, line: 342, type: !348)
!9690 = !DILocation(line: 342, column: 49, scope: !9688)
!9691 = !DILocalVariable(name: "index", arg: 2, scope: !9688, file: !3, line: 342, type: !7)
!9692 = !DILocation(line: 342, column: 59, scope: !9688)
!9693 = !DILocalVariable(name: "val", arg: 3, scope: !9688, file: !3, line: 342, type: !616)
!9694 = !DILocation(line: 342, column: 70, scope: !9688)
!9695 = !DILocation(line: 344, column: 7, scope: !9688)
!9696 = !DILocation(line: 344, column: 14, scope: !9688)
!9697 = !DILocation(line: 344, column: 19, scope: !9688)
!9698 = !DILocation(line: 344, column: 2, scope: !9688)
!9699 = !DILocation(line: 345, column: 7, scope: !9688)
!9700 = !DILocation(line: 345, column: 12, scope: !9688)
!9701 = !DILocation(line: 345, column: 17, scope: !9688)
!9702 = !DILocation(line: 345, column: 2, scope: !9688)
!9703 = !DILocation(line: 346, column: 1, scope: !9688)
!9704 = distinct !DISubprogram(name: "pcnet32_wio_read_bcr", scope: !3, file: !3, line: 348, type: !7569, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9705 = !DILocalVariable(name: "addr", arg: 1, scope: !9704, file: !3, line: 348, type: !348)
!9706 = !DILocation(line: 348, column: 47, scope: !9704)
!9707 = !DILocalVariable(name: "index", arg: 2, scope: !9704, file: !3, line: 348, type: !7)
!9708 = !DILocation(line: 348, column: 57, scope: !9704)
!9709 = !DILocation(line: 350, column: 7, scope: !9704)
!9710 = !DILocation(line: 350, column: 14, scope: !9704)
!9711 = !DILocation(line: 350, column: 19, scope: !9704)
!9712 = !DILocation(line: 350, column: 2, scope: !9704)
!9713 = !DILocation(line: 351, column: 13, scope: !9704)
!9714 = !DILocation(line: 351, column: 18, scope: !9704)
!9715 = !DILocation(line: 351, column: 9, scope: !9704)
!9716 = !DILocation(line: 351, column: 2, scope: !9704)
!9717 = distinct !DISubprogram(name: "pcnet32_wio_write_bcr", scope: !3, file: !3, line: 354, type: !7573, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9718 = !DILocalVariable(name: "addr", arg: 1, scope: !9717, file: !3, line: 354, type: !348)
!9719 = !DILocation(line: 354, column: 49, scope: !9717)
!9720 = !DILocalVariable(name: "index", arg: 2, scope: !9717, file: !3, line: 354, type: !7)
!9721 = !DILocation(line: 354, column: 59, scope: !9717)
!9722 = !DILocalVariable(name: "val", arg: 3, scope: !9717, file: !3, line: 354, type: !616)
!9723 = !DILocation(line: 354, column: 70, scope: !9717)
!9724 = !DILocation(line: 356, column: 7, scope: !9717)
!9725 = !DILocation(line: 356, column: 14, scope: !9717)
!9726 = !DILocation(line: 356, column: 19, scope: !9717)
!9727 = !DILocation(line: 356, column: 2, scope: !9717)
!9728 = !DILocation(line: 357, column: 7, scope: !9717)
!9729 = !DILocation(line: 357, column: 12, scope: !9717)
!9730 = !DILocation(line: 357, column: 17, scope: !9717)
!9731 = !DILocation(line: 357, column: 2, scope: !9717)
!9732 = !DILocation(line: 358, column: 1, scope: !9717)
!9733 = distinct !DISubprogram(name: "pcnet32_wio_read_rap", scope: !3, file: !3, line: 360, type: !7579, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9734 = !DILocalVariable(name: "addr", arg: 1, scope: !9733, file: !3, line: 360, type: !348)
!9735 = !DILocation(line: 360, column: 47, scope: !9733)
!9736 = !DILocation(line: 362, column: 13, scope: !9733)
!9737 = !DILocation(line: 362, column: 18, scope: !9733)
!9738 = !DILocation(line: 362, column: 9, scope: !9733)
!9739 = !DILocation(line: 362, column: 2, scope: !9733)
!9740 = distinct !DISubprogram(name: "pcnet32_wio_write_rap", scope: !3, file: !3, line: 365, type: !7583, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9741 = !DILocalVariable(name: "addr", arg: 1, scope: !9740, file: !3, line: 365, type: !348)
!9742 = !DILocation(line: 365, column: 49, scope: !9740)
!9743 = !DILocalVariable(name: "val", arg: 2, scope: !9740, file: !3, line: 365, type: !616)
!9744 = !DILocation(line: 365, column: 59, scope: !9740)
!9745 = !DILocation(line: 367, column: 7, scope: !9740)
!9746 = !DILocation(line: 367, column: 12, scope: !9740)
!9747 = !DILocation(line: 367, column: 17, scope: !9740)
!9748 = !DILocation(line: 367, column: 2, scope: !9740)
!9749 = !DILocation(line: 368, column: 1, scope: !9740)
!9750 = distinct !DISubprogram(name: "inl", scope: !9194, file: !9194, line: 336, type: !9751, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9751 = !DISubroutineType(types: !9752)
!9752 = !{!13, !7}
!9753 = !DILocalVariable(name: "port", arg: 1, scope: !9750, file: !9194, line: 336, type: !7)
!9754 = !DILocation(line: 336, column: 1, scope: !9750)
!9755 = !DILocalVariable(name: "value", scope: !9750, file: !9194, line: 336, type: !13)
!9756 = !{i32 -2143243259}
!9757 = distinct !DISubprogram(name: "outl", scope: !9194, file: !9194, line: 336, type: !9758, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{null, !13, !7}
!9760 = !DILocalVariable(name: "value", arg: 1, scope: !9757, file: !9194, line: 336, type: !13)
!9761 = !DILocation(line: 336, column: 1, scope: !9757)
!9762 = !DILocalVariable(name: "port", arg: 2, scope: !9757, file: !9194, line: 336, type: !7)
!9763 = !{i32 -2143243461}
!9764 = distinct !DISubprogram(name: "pcnet32_dwio_write_csr", scope: !3, file: !3, line: 397, type: !7573, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9765 = !DILocalVariable(name: "addr", arg: 1, scope: !9764, file: !3, line: 397, type: !348)
!9766 = !DILocation(line: 397, column: 50, scope: !9764)
!9767 = !DILocalVariable(name: "index", arg: 2, scope: !9764, file: !3, line: 397, type: !7)
!9768 = !DILocation(line: 397, column: 60, scope: !9764)
!9769 = !DILocalVariable(name: "val", arg: 3, scope: !9764, file: !3, line: 397, type: !616)
!9770 = !DILocation(line: 397, column: 71, scope: !9764)
!9771 = !DILocation(line: 399, column: 7, scope: !9764)
!9772 = !DILocation(line: 399, column: 14, scope: !9764)
!9773 = !DILocation(line: 399, column: 19, scope: !9764)
!9774 = !DILocation(line: 399, column: 2, scope: !9764)
!9775 = !DILocation(line: 400, column: 7, scope: !9764)
!9776 = !DILocation(line: 400, column: 12, scope: !9764)
!9777 = !DILocation(line: 400, column: 17, scope: !9764)
!9778 = !DILocation(line: 400, column: 2, scope: !9764)
!9779 = !DILocation(line: 401, column: 1, scope: !9764)
!9780 = distinct !DISubprogram(name: "pcnet32_dwio_read_bcr", scope: !3, file: !3, line: 403, type: !7569, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9781 = !DILocalVariable(name: "addr", arg: 1, scope: !9780, file: !3, line: 403, type: !348)
!9782 = !DILocation(line: 403, column: 48, scope: !9780)
!9783 = !DILocalVariable(name: "index", arg: 2, scope: !9780, file: !3, line: 403, type: !7)
!9784 = !DILocation(line: 403, column: 58, scope: !9780)
!9785 = !DILocation(line: 405, column: 7, scope: !9780)
!9786 = !DILocation(line: 405, column: 14, scope: !9780)
!9787 = !DILocation(line: 405, column: 19, scope: !9780)
!9788 = !DILocation(line: 405, column: 2, scope: !9780)
!9789 = !DILocation(line: 406, column: 13, scope: !9780)
!9790 = !DILocation(line: 406, column: 18, scope: !9780)
!9791 = !DILocation(line: 406, column: 9, scope: !9780)
!9792 = !DILocation(line: 406, column: 38, scope: !9780)
!9793 = !DILocation(line: 406, column: 2, scope: !9780)
!9794 = distinct !DISubprogram(name: "pcnet32_dwio_write_bcr", scope: !3, file: !3, line: 409, type: !7573, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9795 = !DILocalVariable(name: "addr", arg: 1, scope: !9794, file: !3, line: 409, type: !348)
!9796 = !DILocation(line: 409, column: 50, scope: !9794)
!9797 = !DILocalVariable(name: "index", arg: 2, scope: !9794, file: !3, line: 409, type: !7)
!9798 = !DILocation(line: 409, column: 60, scope: !9794)
!9799 = !DILocalVariable(name: "val", arg: 3, scope: !9794, file: !3, line: 409, type: !616)
!9800 = !DILocation(line: 409, column: 71, scope: !9794)
!9801 = !DILocation(line: 411, column: 7, scope: !9794)
!9802 = !DILocation(line: 411, column: 14, scope: !9794)
!9803 = !DILocation(line: 411, column: 19, scope: !9794)
!9804 = !DILocation(line: 411, column: 2, scope: !9794)
!9805 = !DILocation(line: 412, column: 7, scope: !9794)
!9806 = !DILocation(line: 412, column: 12, scope: !9794)
!9807 = !DILocation(line: 412, column: 17, scope: !9794)
!9808 = !DILocation(line: 412, column: 2, scope: !9794)
!9809 = !DILocation(line: 413, column: 1, scope: !9794)
!9810 = distinct !DISubprogram(name: "pcnet32_dwio_read_rap", scope: !3, file: !3, line: 415, type: !7579, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9811 = !DILocalVariable(name: "addr", arg: 1, scope: !9810, file: !3, line: 415, type: !348)
!9812 = !DILocation(line: 415, column: 48, scope: !9810)
!9813 = !DILocation(line: 417, column: 13, scope: !9810)
!9814 = !DILocation(line: 417, column: 18, scope: !9810)
!9815 = !DILocation(line: 417, column: 9, scope: !9810)
!9816 = !DILocation(line: 417, column: 38, scope: !9810)
!9817 = !DILocation(line: 417, column: 2, scope: !9810)
!9818 = distinct !DISubprogram(name: "pcnet32_dwio_write_rap", scope: !3, file: !3, line: 420, type: !7583, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9819 = !DILocalVariable(name: "addr", arg: 1, scope: !9818, file: !3, line: 420, type: !348)
!9820 = !DILocation(line: 420, column: 50, scope: !9818)
!9821 = !DILocalVariable(name: "val", arg: 2, scope: !9818, file: !3, line: 420, type: !616)
!9822 = !DILocation(line: 420, column: 60, scope: !9818)
!9823 = !DILocation(line: 422, column: 7, scope: !9818)
!9824 = !DILocation(line: 422, column: 12, scope: !9818)
!9825 = !DILocation(line: 422, column: 17, scope: !9818)
!9826 = !DILocation(line: 422, column: 2, scope: !9818)
!9827 = !DILocation(line: 423, column: 1, scope: !9818)
!9828 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !9202, file: !9202, line: 116, type: !9230, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9829 = !DILocalVariable(name: "addr", arg: 1, scope: !9828, file: !9202, line: 116, type: !5865)
!9830 = !DILocation(line: 116, column: 54, scope: !9828)
!9831 = !DILocalVariable(name: "a", scope: !9828, file: !9202, line: 119, type: !1022)
!9832 = !DILocation(line: 119, column: 6, scope: !9828)
!9833 = !DILocation(line: 119, column: 24, scope: !9828)
!9834 = !DILocation(line: 119, column: 10, scope: !9828)
!9835 = !DILocation(line: 126, column: 16, scope: !9828)
!9836 = !DILocation(line: 126, column: 14, scope: !9828)
!9837 = !DILocation(line: 126, column: 9, scope: !9828)
!9838 = !DILocation(line: 126, column: 2, scope: !9828)
!9839 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !9202, file: !9202, line: 98, type: !9230, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9840 = !DILocalVariable(name: "addr", arg: 1, scope: !9839, file: !9202, line: 98, type: !5865)
!9841 = !DILocation(line: 98, column: 49, scope: !9839)
!9842 = !DILocation(line: 101, column: 25, scope: !9839)
!9843 = !DILocation(line: 101, column: 11, scope: !9839)
!9844 = !DILocation(line: 101, column: 49, scope: !9839)
!9845 = !DILocation(line: 101, column: 54, scope: !9839)
!9846 = !DILocation(line: 101, column: 34, scope: !9839)
!9847 = !DILocation(line: 101, column: 33, scope: !9839)
!9848 = !DILocation(line: 101, column: 31, scope: !9839)
!9849 = !DILocation(line: 101, column: 61, scope: !9839)
!9850 = !DILocation(line: 101, column: 2, scope: !9839)
!9851 = distinct !DISubprogram(name: "pcnet32_rx", scope: !3, file: !3, line: 1271, type: !758, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9851, file: !3, line: 1271, type: !326)
!9853 = !DILocation(line: 1271, column: 42, scope: !9851)
!9854 = !DILocalVariable(name: "budget", arg: 2, scope: !9851, file: !3, line: 1271, type: !7)
!9855 = !DILocation(line: 1271, column: 51, scope: !9851)
!9856 = !DILocalVariable(name: "lp", scope: !9851, file: !3, line: 1273, type: !7248)
!9857 = !DILocation(line: 1273, column: 26, scope: !9851)
!9858 = !DILocation(line: 1273, column: 43, scope: !9851)
!9859 = !DILocation(line: 1273, column: 31, scope: !9851)
!9860 = !DILocalVariable(name: "entry", scope: !9851, file: !3, line: 1274, type: !7)
!9861 = !DILocation(line: 1274, column: 6, scope: !9851)
!9862 = !DILocation(line: 1274, column: 14, scope: !9851)
!9863 = !DILocation(line: 1274, column: 18, scope: !9851)
!9864 = !DILocation(line: 1274, column: 27, scope: !9851)
!9865 = !DILocation(line: 1274, column: 31, scope: !9851)
!9866 = !DILocation(line: 1274, column: 25, scope: !9851)
!9867 = !DILocalVariable(name: "rxp", scope: !9851, file: !3, line: 1275, type: !7265)
!9868 = !DILocation(line: 1275, column: 26, scope: !9851)
!9869 = !DILocation(line: 1275, column: 33, scope: !9851)
!9870 = !DILocation(line: 1275, column: 37, scope: !9851)
!9871 = !DILocation(line: 1275, column: 45, scope: !9851)
!9872 = !DILocalVariable(name: "npackets", scope: !9851, file: !3, line: 1276, type: !7)
!9873 = !DILocation(line: 1276, column: 6, scope: !9851)
!9874 = !DILocation(line: 1279, column: 2, scope: !9851)
!9875 = !DILocation(line: 1279, column: 9, scope: !9851)
!9876 = !DILocation(line: 1279, column: 20, scope: !9851)
!9877 = !DILocation(line: 1279, column: 18, scope: !9851)
!9878 = !DILocation(line: 1279, column: 27, scope: !9851)
!9879 = !DILocation(line: 1279, column: 37, scope: !9851)
!9880 = !DILocation(line: 1279, column: 30, scope: !9851)
!9881 = !DILocation(line: 1279, column: 62, scope: !9851)
!9882 = !DILocation(line: 0, scope: !9851)
!9883 = !DILocation(line: 1280, column: 20, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9851, file: !3, line: 1279, column: 68)
!9885 = !DILocation(line: 1280, column: 25, scope: !9884)
!9886 = !DILocation(line: 1280, column: 29, scope: !9884)
!9887 = !DILocation(line: 1280, column: 34, scope: !9884)
!9888 = !DILocation(line: 1280, column: 3, scope: !9884)
!9889 = !DILocation(line: 1281, column: 12, scope: !9884)
!9890 = !DILocation(line: 1286, column: 3, scope: !9884)
!9891 = !DILocation(line: 1286, column: 8, scope: !9884)
!9892 = !DILocation(line: 1286, column: 19, scope: !9884)
!9893 = !DILocation(line: 1287, column: 3, scope: !9884)
!9894 = !{i32 -2139654076}
!9895 = !DILocation(line: 1288, column: 3, scope: !9884)
!9896 = !DILocation(line: 1288, column: 8, scope: !9884)
!9897 = !DILocation(line: 1288, column: 15, scope: !9884)
!9898 = !DILocation(line: 1289, column: 14, scope: !9884)
!9899 = !DILocation(line: 1289, column: 18, scope: !9884)
!9900 = !DILocation(line: 1289, column: 12, scope: !9884)
!9901 = !DILocation(line: 1289, column: 28, scope: !9884)
!9902 = !DILocation(line: 1289, column: 32, scope: !9884)
!9903 = !DILocation(line: 1289, column: 26, scope: !9884)
!9904 = !DILocation(line: 1289, column: 9, scope: !9884)
!9905 = !DILocation(line: 1290, column: 10, scope: !9884)
!9906 = !DILocation(line: 1290, column: 14, scope: !9884)
!9907 = !DILocation(line: 1290, column: 22, scope: !9884)
!9908 = !DILocation(line: 1290, column: 7, scope: !9884)
!9909 = distinct !{!9909, !9874, !9910}
!9910 = !DILocation(line: 1291, column: 2, scope: !9851)
!9911 = !DILocation(line: 1293, column: 9, scope: !9851)
!9912 = !DILocation(line: 1293, column: 2, scope: !9851)
!9913 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !9914, file: !9914, line: 666, type: !9915, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9914 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!9915 = !DISubroutineType(types: !9916)
!9916 = !{!348}
!9917 = !DILocalVariable(name: "f", scope: !9913, file: !9914, line: 668, type: !348)
!9918 = !DILocation(line: 668, column: 16, scope: !9913)
!9919 = !DILocation(line: 670, column: 6, scope: !9913)
!9920 = !DILocation(line: 670, column: 4, scope: !9913)
!9921 = !DILocation(line: 671, column: 2, scope: !9913)
!9922 = !DILocation(line: 672, column: 9, scope: !9913)
!9923 = !DILocation(line: 672, column: 2, scope: !9913)
!9924 = distinct !DISubprogram(name: "pcnet32_tx", scope: !3, file: !3, line: 1296, type: !438, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!9925 = !DILocalVariable(name: "dev", arg: 1, scope: !9924, file: !3, line: 1296, type: !326)
!9926 = !DILocation(line: 1296, column: 42, scope: !9924)
!9927 = !DILocalVariable(name: "lp", scope: !9924, file: !3, line: 1298, type: !7248)
!9928 = !DILocation(line: 1298, column: 26, scope: !9924)
!9929 = !DILocation(line: 1298, column: 43, scope: !9924)
!9930 = !DILocation(line: 1298, column: 31, scope: !9924)
!9931 = !DILocalVariable(name: "dirty_tx", scope: !9924, file: !3, line: 1299, type: !13)
!9932 = !DILocation(line: 1299, column: 15, scope: !9924)
!9933 = !DILocation(line: 1299, column: 26, scope: !9924)
!9934 = !DILocation(line: 1299, column: 30, scope: !9924)
!9935 = !DILocalVariable(name: "delta", scope: !9924, file: !3, line: 1300, type: !7)
!9936 = !DILocation(line: 1300, column: 6, scope: !9924)
!9937 = !DILocalVariable(name: "must_restart", scope: !9924, file: !3, line: 1301, type: !7)
!9938 = !DILocation(line: 1301, column: 6, scope: !9924)
!9939 = !DILocation(line: 1303, column: 2, scope: !9924)
!9940 = !DILocation(line: 1303, column: 9, scope: !9924)
!9941 = !DILocation(line: 1303, column: 21, scope: !9924)
!9942 = !DILocation(line: 1303, column: 25, scope: !9924)
!9943 = !DILocation(line: 1303, column: 18, scope: !9924)
!9944 = !DILocalVariable(name: "entry", scope: !9945, file: !3, line: 1304, type: !7)
!9945 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 1303, column: 33)
!9946 = !DILocation(line: 1304, column: 7, scope: !9945)
!9947 = !DILocation(line: 1304, column: 15, scope: !9945)
!9948 = !DILocation(line: 1304, column: 26, scope: !9945)
!9949 = !DILocation(line: 1304, column: 30, scope: !9945)
!9950 = !DILocation(line: 1304, column: 24, scope: !9945)
!9951 = !DILocalVariable(name: "status", scope: !9945, file: !3, line: 1305, type: !7)
!9952 = !DILocation(line: 1305, column: 7, scope: !9945)
!9953 = !DILocation(line: 1305, column: 23, scope: !9945)
!9954 = !DILocation(line: 1305, column: 16, scope: !9945)
!9955 = !DILocation(line: 1307, column: 7, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 1307, column: 7)
!9957 = !DILocation(line: 1307, column: 14, scope: !9956)
!9958 = !DILocation(line: 1307, column: 7, scope: !9945)
!9959 = !DILocation(line: 1308, column: 4, scope: !9956)
!9960 = !DILocation(line: 1310, column: 3, scope: !9945)
!9961 = !DILocation(line: 1310, column: 7, scope: !9945)
!9962 = !DILocation(line: 1310, column: 15, scope: !9945)
!9963 = !DILocation(line: 1310, column: 22, scope: !9945)
!9964 = !DILocation(line: 1310, column: 27, scope: !9945)
!9965 = !DILocation(line: 1312, column: 7, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 1312, column: 7)
!9967 = !DILocation(line: 1312, column: 14, scope: !9966)
!9968 = !DILocation(line: 1312, column: 7, scope: !9945)
!9969 = !DILocalVariable(name: "err_status", scope: !9970, file: !3, line: 1314, type: !7)
!9970 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1312, column: 24)
!9971 = !DILocation(line: 1314, column: 8, scope: !9970)
!9972 = !DILocation(line: 1314, column: 21, scope: !9970)
!9973 = !DILocation(line: 1315, column: 4, scope: !9970)
!9974 = !DILocation(line: 1315, column: 9, scope: !9970)
!9975 = !DILocation(line: 1315, column: 15, scope: !9970)
!9976 = !DILocation(line: 1315, column: 24, scope: !9970)
!9977 = !DILocation(line: 1316, column: 4, scope: !9970)
!9978 = !DILocation(line: 1316, column: 4, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 1316, column: 4)
!9980 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1316, column: 4)
!9981 = !DILocation(line: 1316, column: 4, scope: !9980)
!9982 = !DILocation(line: 1319, column: 8, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1319, column: 8)
!9984 = !DILocation(line: 1319, column: 19, scope: !9983)
!9985 = !DILocation(line: 1319, column: 8, scope: !9970)
!9986 = !DILocation(line: 1320, column: 5, scope: !9983)
!9987 = !DILocation(line: 1320, column: 10, scope: !9983)
!9988 = !DILocation(line: 1320, column: 16, scope: !9983)
!9989 = !DILocation(line: 1320, column: 33, scope: !9983)
!9990 = !DILocation(line: 1321, column: 8, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1321, column: 8)
!9992 = !DILocation(line: 1321, column: 19, scope: !9991)
!9993 = !DILocation(line: 1321, column: 8, scope: !9970)
!9994 = !DILocation(line: 1322, column: 5, scope: !9991)
!9995 = !DILocation(line: 1322, column: 10, scope: !9991)
!9996 = !DILocation(line: 1322, column: 16, scope: !9991)
!9997 = !DILocation(line: 1322, column: 33, scope: !9991)
!9998 = !DILocation(line: 1323, column: 8, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1323, column: 8)
!10000 = !DILocation(line: 1323, column: 19, scope: !9999)
!10001 = !DILocation(line: 1323, column: 8, scope: !9970)
!10002 = !DILocation(line: 1324, column: 5, scope: !9999)
!10003 = !DILocation(line: 1324, column: 10, scope: !9999)
!10004 = !DILocation(line: 1324, column: 16, scope: !9999)
!10005 = !DILocation(line: 1324, column: 32, scope: !9999)
!10006 = !DILocation(line: 1326, column: 8, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1326, column: 8)
!10008 = !DILocation(line: 1326, column: 19, scope: !10007)
!10009 = !DILocation(line: 1326, column: 8, scope: !9970)
!10010 = !DILocation(line: 1327, column: 5, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 1326, column: 33)
!10012 = !DILocation(line: 1327, column: 10, scope: !10011)
!10013 = !DILocation(line: 1327, column: 16, scope: !10011)
!10014 = !DILocation(line: 1327, column: 30, scope: !10011)
!10015 = !DILocation(line: 1330, column: 5, scope: !10011)
!10016 = !DILocation(line: 1330, column: 5, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 1330, column: 5)
!10018 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 1330, column: 5)
!10019 = !DILocation(line: 1330, column: 5, scope: !10018)
!10020 = !DILocation(line: 1331, column: 18, scope: !10011)
!10021 = !DILocation(line: 1332, column: 4, scope: !10011)
!10022 = !DILocation(line: 1344, column: 3, scope: !9970)
!10023 = !DILocation(line: 1345, column: 8, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 1345, column: 8)
!10025 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1344, column: 10)
!10026 = !DILocation(line: 1345, column: 15, scope: !10024)
!10027 = !DILocation(line: 1345, column: 8, scope: !10025)
!10028 = !DILocation(line: 1346, column: 5, scope: !10024)
!10029 = !DILocation(line: 1346, column: 10, scope: !10024)
!10030 = !DILocation(line: 1346, column: 16, scope: !10024)
!10031 = !DILocation(line: 1346, column: 26, scope: !10024)
!10032 = !DILocation(line: 1347, column: 4, scope: !10025)
!10033 = !DILocation(line: 1347, column: 9, scope: !10025)
!10034 = !DILocation(line: 1347, column: 15, scope: !10025)
!10035 = !DILocation(line: 1347, column: 25, scope: !10025)
!10036 = !DILocation(line: 1351, column: 7, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 1351, column: 7)
!10038 = !DILocation(line: 1351, column: 11, scope: !10037)
!10039 = !DILocation(line: 1351, column: 21, scope: !10037)
!10040 = !DILocation(line: 1351, column: 7, scope: !9945)
!10041 = !DILocation(line: 1352, column: 4, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 1351, column: 29)
!10043 = !DILocation(line: 1356, column: 22, scope: !10042)
!10044 = !DILocation(line: 1356, column: 26, scope: !10042)
!10045 = !DILocation(line: 1356, column: 36, scope: !10042)
!10046 = !DILocation(line: 1356, column: 4, scope: !10042)
!10047 = !DILocation(line: 1357, column: 4, scope: !10042)
!10048 = !DILocation(line: 1357, column: 8, scope: !10042)
!10049 = !DILocation(line: 1357, column: 18, scope: !10042)
!10050 = !DILocation(line: 1357, column: 25, scope: !10042)
!10051 = !DILocation(line: 1358, column: 4, scope: !10042)
!10052 = !DILocation(line: 1358, column: 8, scope: !10042)
!10053 = !DILocation(line: 1358, column: 20, scope: !10042)
!10054 = !DILocation(line: 1358, column: 27, scope: !10042)
!10055 = !DILocation(line: 1359, column: 3, scope: !10042)
!10056 = !DILocation(line: 1360, column: 11, scope: !9945)
!10057 = distinct !{!10057, !9939, !10058}
!10058 = !DILocation(line: 1361, column: 2, scope: !9924)
!10059 = !DILocation(line: 1363, column: 11, scope: !9924)
!10060 = !DILocation(line: 1363, column: 15, scope: !9924)
!10061 = !DILocation(line: 1363, column: 24, scope: !9924)
!10062 = !DILocation(line: 1363, column: 22, scope: !9924)
!10063 = !DILocation(line: 1363, column: 37, scope: !9924)
!10064 = !DILocation(line: 1363, column: 41, scope: !9924)
!10065 = !DILocation(line: 1363, column: 55, scope: !9924)
!10066 = !DILocation(line: 1363, column: 59, scope: !9924)
!10067 = !DILocation(line: 1363, column: 53, scope: !9924)
!10068 = !DILocation(line: 1363, column: 34, scope: !9924)
!10069 = !DILocation(line: 1363, column: 8, scope: !9924)
!10070 = !DILocation(line: 1364, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 1364, column: 6)
!10072 = !DILocation(line: 1364, column: 14, scope: !10071)
!10073 = !DILocation(line: 1364, column: 18, scope: !10071)
!10074 = !DILocation(line: 1364, column: 12, scope: !10071)
!10075 = !DILocation(line: 1364, column: 6, scope: !9924)
!10076 = !DILocation(line: 1365, column: 3, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 1364, column: 32)
!10078 = !DILocation(line: 1365, column: 3, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 1365, column: 3)
!10080 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 1365, column: 3)
!10081 = !DILocation(line: 1365, column: 3, scope: !10080)
!10082 = !DILocation(line: 1367, column: 15, scope: !10077)
!10083 = !DILocation(line: 1367, column: 19, scope: !10077)
!10084 = !DILocation(line: 1367, column: 12, scope: !10077)
!10085 = !DILocation(line: 1368, column: 12, scope: !10077)
!10086 = !DILocation(line: 1368, column: 16, scope: !10077)
!10087 = !DILocation(line: 1368, column: 9, scope: !10077)
!10088 = !DILocation(line: 1369, column: 2, scope: !10077)
!10089 = !DILocation(line: 1371, column: 6, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 1371, column: 6)
!10091 = !DILocation(line: 1371, column: 10, scope: !10090)
!10092 = !DILocation(line: 1371, column: 18, scope: !10090)
!10093 = !DILocation(line: 1372, column: 26, scope: !10090)
!10094 = !DILocation(line: 1372, column: 6, scope: !10090)
!10095 = !DILocation(line: 1372, column: 31, scope: !10090)
!10096 = !DILocation(line: 1373, column: 6, scope: !10090)
!10097 = !DILocation(line: 1373, column: 14, scope: !10090)
!10098 = !DILocation(line: 1373, column: 18, scope: !10090)
!10099 = !DILocation(line: 1373, column: 31, scope: !10090)
!10100 = !DILocation(line: 1373, column: 12, scope: !10090)
!10101 = !DILocation(line: 1371, column: 6, scope: !9924)
!10102 = !DILocation(line: 1375, column: 3, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 1373, column: 36)
!10104 = !DILocation(line: 1375, column: 7, scope: !10103)
!10105 = !DILocation(line: 1375, column: 15, scope: !10103)
!10106 = !DILocation(line: 1376, column: 20, scope: !10103)
!10107 = !DILocation(line: 1376, column: 3, scope: !10103)
!10108 = !DILocation(line: 1377, column: 2, scope: !10103)
!10109 = !DILocation(line: 1378, column: 17, scope: !9924)
!10110 = !DILocation(line: 1378, column: 2, scope: !9924)
!10111 = !DILocation(line: 1378, column: 6, scope: !9924)
!10112 = !DILocation(line: 1378, column: 15, scope: !9924)
!10113 = !DILocation(line: 1380, column: 9, scope: !9924)
!10114 = !DILocation(line: 1380, column: 2, scope: !9924)
!10115 = distinct !DISubprogram(name: "pcnet32_restart", scope: !3, file: !3, line: 2410, type: !768, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10116 = !DILocalVariable(name: "dev", arg: 1, scope: !10115, file: !3, line: 2410, type: !326)
!10117 = !DILocation(line: 2410, column: 48, scope: !10115)
!10118 = !DILocalVariable(name: "csr0_bits", arg: 2, scope: !10115, file: !3, line: 2410, type: !13)
!10119 = !DILocation(line: 2410, column: 66, scope: !10115)
!10120 = !DILocalVariable(name: "lp", scope: !10115, file: !3, line: 2412, type: !7248)
!10121 = !DILocation(line: 2412, column: 26, scope: !10115)
!10122 = !DILocation(line: 2412, column: 43, scope: !10115)
!10123 = !DILocation(line: 2412, column: 31, scope: !10115)
!10124 = !DILocalVariable(name: "ioaddr", scope: !10115, file: !3, line: 2413, type: !348)
!10125 = !DILocation(line: 2413, column: 16, scope: !10115)
!10126 = !DILocation(line: 2413, column: 25, scope: !10115)
!10127 = !DILocation(line: 2413, column: 30, scope: !10115)
!10128 = !DILocalVariable(name: "i", scope: !10115, file: !3, line: 2414, type: !7)
!10129 = !DILocation(line: 2414, column: 6, scope: !10115)
!10130 = !DILocation(line: 2417, column: 9, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2417, column: 2)
!10132 = !DILocation(line: 2417, column: 7, scope: !10131)
!10133 = !DILocation(line: 2417, column: 14, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 2417, column: 2)
!10135 = !DILocation(line: 2417, column: 16, scope: !10134)
!10136 = !DILocation(line: 2417, column: 2, scope: !10131)
!10137 = !DILocation(line: 2418, column: 7, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 2418, column: 7)
!10139 = !DILocation(line: 2418, column: 11, scope: !10138)
!10140 = !DILocation(line: 2418, column: 14, scope: !10138)
!10141 = !DILocation(line: 2418, column: 23, scope: !10138)
!10142 = !DILocation(line: 2418, column: 37, scope: !10138)
!10143 = !DILocation(line: 2418, column: 7, scope: !10134)
!10144 = !DILocation(line: 2419, column: 4, scope: !10138)
!10145 = !DILocation(line: 2418, column: 39, scope: !10138)
!10146 = !DILocation(line: 2417, column: 24, scope: !10134)
!10147 = !DILocation(line: 2417, column: 2, scope: !10134)
!10148 = distinct !{!10148, !10136, !10149}
!10149 = !DILocation(line: 2419, column: 4, scope: !10131)
!10150 = !DILocation(line: 2421, column: 6, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2421, column: 6)
!10152 = !DILocation(line: 2421, column: 8, scope: !10151)
!10153 = !DILocation(line: 2421, column: 6, scope: !10115)
!10154 = !DILocation(line: 2422, column: 3, scope: !10151)
!10155 = !DILocation(line: 2422, column: 3, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 2422, column: 3)
!10157 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 2422, column: 3)
!10158 = !DILocation(line: 2422, column: 3, scope: !10157)
!10159 = !DILocation(line: 2425, column: 24, scope: !10115)
!10160 = !DILocation(line: 2425, column: 2, scope: !10115)
!10161 = !DILocation(line: 2426, column: 24, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2426, column: 6)
!10163 = !DILocation(line: 2426, column: 6, scope: !10162)
!10164 = !DILocation(line: 2426, column: 6, scope: !10115)
!10165 = !DILocation(line: 2427, column: 3, scope: !10162)
!10166 = !DILocation(line: 2430, column: 2, scope: !10115)
!10167 = !DILocation(line: 2430, column: 6, scope: !10115)
!10168 = !DILocation(line: 2430, column: 9, scope: !10115)
!10169 = !DILocation(line: 2430, column: 19, scope: !10115)
!10170 = !DILocation(line: 2431, column: 4, scope: !10115)
!10171 = !DILocation(line: 2432, column: 2, scope: !10115)
!10172 = !DILocation(line: 2432, column: 10, scope: !10115)
!10173 = !DILocation(line: 2432, column: 13, scope: !10115)
!10174 = !DILocation(line: 2433, column: 7, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2433, column: 7)
!10176 = !DILocation(line: 2433, column: 11, scope: !10175)
!10177 = !DILocation(line: 2433, column: 14, scope: !10175)
!10178 = !DILocation(line: 2433, column: 23, scope: !10175)
!10179 = !DILocation(line: 2433, column: 37, scope: !10175)
!10180 = !DILocation(line: 2433, column: 7, scope: !10115)
!10181 = !DILocation(line: 2434, column: 4, scope: !10175)
!10182 = distinct !{!10182, !10171, !10183}
!10183 = !DILocation(line: 2434, column: 4, scope: !10115)
!10184 = !DILocation(line: 2436, column: 2, scope: !10115)
!10185 = !DILocation(line: 2436, column: 6, scope: !10115)
!10186 = !DILocation(line: 2436, column: 9, scope: !10115)
!10187 = !DILocation(line: 2436, column: 19, scope: !10115)
!10188 = !DILocation(line: 2436, column: 33, scope: !10115)
!10189 = !DILocation(line: 2437, column: 1, scope: !10115)
!10190 = distinct !DISubprogram(name: "netif_wake_queue", scope: !6, file: !6, line: 3309, type: !442, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10191 = !DILocalVariable(name: "dev", arg: 1, scope: !10190, file: !6, line: 3309, type: !326)
!10192 = !DILocation(line: 3309, column: 56, scope: !10190)
!10193 = !DILocation(line: 3311, column: 42, scope: !10190)
!10194 = !DILocation(line: 3311, column: 22, scope: !10190)
!10195 = !DILocation(line: 3311, column: 2, scope: !10190)
!10196 = !DILocation(line: 3312, column: 1, scope: !10190)
!10197 = distinct !DISubprogram(name: "pcnet32_rx_entry", scope: !3, file: !3, line: 1166, type: !10198, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10198 = !DISubroutineType(types: !10199)
!10199 = !{null, !326, !7248, !7265, !7}
!10200 = !DILocalVariable(name: "dev", arg: 1, scope: !10197, file: !3, line: 1166, type: !326)
!10201 = !DILocation(line: 1166, column: 49, scope: !10197)
!10202 = !DILocalVariable(name: "lp", arg: 2, scope: !10197, file: !3, line: 1167, type: !7248)
!10203 = !DILocation(line: 1167, column: 33, scope: !10197)
!10204 = !DILocalVariable(name: "rxp", arg: 3, scope: !10197, file: !3, line: 1168, type: !7265)
!10205 = !DILocation(line: 1168, column: 33, scope: !10197)
!10206 = !DILocalVariable(name: "entry", arg: 4, scope: !10197, file: !3, line: 1169, type: !7)
!10207 = !DILocation(line: 1169, column: 13, scope: !10197)
!10208 = !DILocalVariable(name: "status", scope: !10197, file: !3, line: 1171, type: !7)
!10209 = !DILocation(line: 1171, column: 6, scope: !10197)
!10210 = !DILocation(line: 1171, column: 22, scope: !10197)
!10211 = !DILocation(line: 1171, column: 15, scope: !10197)
!10212 = !DILocation(line: 1171, column: 47, scope: !10197)
!10213 = !DILocalVariable(name: "rx_in_place", scope: !10197, file: !3, line: 1172, type: !7)
!10214 = !DILocation(line: 1172, column: 6, scope: !10197)
!10215 = !DILocalVariable(name: "skb", scope: !10197, file: !3, line: 1173, type: !451)
!10216 = !DILocation(line: 1173, column: 18, scope: !10197)
!10217 = !DILocalVariable(name: "pkt_len", scope: !10197, file: !3, line: 1174, type: !660)
!10218 = !DILocation(line: 1174, column: 8, scope: !10197)
!10219 = !DILocation(line: 1176, column: 6, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1176, column: 6)
!10221 = !DILocation(line: 1176, column: 13, scope: !10220)
!10222 = !DILocation(line: 1176, column: 6, scope: !10197)
!10223 = !DILocation(line: 1183, column: 7, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 1183, column: 7)
!10225 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 1176, column: 22)
!10226 = !DILocation(line: 1183, column: 14, scope: !10224)
!10227 = !DILocation(line: 1183, column: 7, scope: !10225)
!10228 = !DILocation(line: 1184, column: 4, scope: !10224)
!10229 = !DILocation(line: 1184, column: 9, scope: !10224)
!10230 = !DILocation(line: 1184, column: 15, scope: !10224)
!10231 = !DILocation(line: 1184, column: 24, scope: !10224)
!10232 = !DILocation(line: 1185, column: 7, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 1185, column: 7)
!10234 = !DILocation(line: 1185, column: 14, scope: !10233)
!10235 = !DILocation(line: 1185, column: 7, scope: !10225)
!10236 = !DILocation(line: 1186, column: 4, scope: !10233)
!10237 = !DILocation(line: 1186, column: 9, scope: !10233)
!10238 = !DILocation(line: 1186, column: 15, scope: !10233)
!10239 = !DILocation(line: 1186, column: 30, scope: !10233)
!10240 = !DILocation(line: 1187, column: 7, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 1187, column: 7)
!10242 = !DILocation(line: 1187, column: 14, scope: !10241)
!10243 = !DILocation(line: 1187, column: 7, scope: !10225)
!10244 = !DILocation(line: 1188, column: 4, scope: !10241)
!10245 = !DILocation(line: 1188, column: 9, scope: !10241)
!10246 = !DILocation(line: 1188, column: 15, scope: !10241)
!10247 = !DILocation(line: 1188, column: 29, scope: !10241)
!10248 = !DILocation(line: 1189, column: 7, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 1189, column: 7)
!10250 = !DILocation(line: 1189, column: 14, scope: !10249)
!10251 = !DILocation(line: 1189, column: 7, scope: !10225)
!10252 = !DILocation(line: 1190, column: 4, scope: !10249)
!10253 = !DILocation(line: 1190, column: 9, scope: !10249)
!10254 = !DILocation(line: 1190, column: 15, scope: !10249)
!10255 = !DILocation(line: 1190, column: 28, scope: !10249)
!10256 = !DILocation(line: 1191, column: 7, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 1191, column: 7)
!10258 = !DILocation(line: 1191, column: 14, scope: !10257)
!10259 = !DILocation(line: 1191, column: 7, scope: !10225)
!10260 = !DILocation(line: 1192, column: 4, scope: !10257)
!10261 = !DILocation(line: 1192, column: 9, scope: !10257)
!10262 = !DILocation(line: 1192, column: 15, scope: !10257)
!10263 = !DILocation(line: 1192, column: 29, scope: !10257)
!10264 = !DILocation(line: 1193, column: 3, scope: !10225)
!10265 = !DILocation(line: 1196, column: 13, scope: !10197)
!10266 = !DILocation(line: 1196, column: 42, scope: !10197)
!10267 = !DILocation(line: 1196, column: 51, scope: !10197)
!10268 = !DILocation(line: 1196, column: 12, scope: !10197)
!10269 = !DILocation(line: 1196, column: 10, scope: !10197)
!10270 = !DILocation(line: 1199, column: 6, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1199, column: 6)
!10272 = !DILocation(line: 1199, column: 6, scope: !10197)
!10273 = !DILocation(line: 1200, column: 3, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1199, column: 40)
!10275 = !DILocation(line: 1200, column: 3, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1200, column: 3)
!10277 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 1200, column: 3)
!10278 = !DILocation(line: 1200, column: 3, scope: !10277)
!10279 = !DILocation(line: 1202, column: 3, scope: !10274)
!10280 = !DILocation(line: 1202, column: 8, scope: !10274)
!10281 = !DILocation(line: 1202, column: 14, scope: !10274)
!10282 = !DILocation(line: 1202, column: 23, scope: !10274)
!10283 = !DILocation(line: 1203, column: 3, scope: !10274)
!10284 = !DILocation(line: 1205, column: 6, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1205, column: 6)
!10286 = !DILocation(line: 1205, column: 14, scope: !10285)
!10287 = !DILocation(line: 1205, column: 6, scope: !10197)
!10288 = !DILocation(line: 1206, column: 3, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 1205, column: 20)
!10290 = !DILocation(line: 1206, column: 3, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 1206, column: 3)
!10292 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1206, column: 3)
!10293 = !DILocation(line: 1206, column: 3, scope: !10292)
!10294 = !DILocation(line: 1207, column: 3, scope: !10289)
!10295 = !DILocation(line: 1207, column: 8, scope: !10289)
!10296 = !DILocation(line: 1207, column: 14, scope: !10289)
!10297 = !DILocation(line: 1207, column: 23, scope: !10289)
!10298 = !DILocation(line: 1208, column: 3, scope: !10289)
!10299 = !DILocation(line: 1211, column: 6, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1211, column: 6)
!10301 = !DILocation(line: 1211, column: 16, scope: !10300)
!10302 = !DILocation(line: 1211, column: 14, scope: !10300)
!10303 = !DILocation(line: 1211, column: 6, scope: !10197)
!10304 = !DILocalVariable(name: "newskb", scope: !10305, file: !3, line: 1212, type: !451)
!10305 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 1211, column: 30)
!10306 = !DILocation(line: 1212, column: 19, scope: !10305)
!10307 = !DILocalVariable(name: "new_dma_addr", scope: !10305, file: !3, line: 1213, type: !2070)
!10308 = !DILocation(line: 1213, column: 14, scope: !10305)
!10309 = !DILocation(line: 1215, column: 29, scope: !10305)
!10310 = !DILocation(line: 1215, column: 12, scope: !10305)
!10311 = !DILocation(line: 1215, column: 10, scope: !10305)
!10312 = !DILocation(line: 1220, column: 7, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 1220, column: 7)
!10314 = !DILocation(line: 1220, column: 7, scope: !10305)
!10315 = !DILocation(line: 1221, column: 16, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 1220, column: 15)
!10317 = !DILocation(line: 1221, column: 4, scope: !10316)
!10318 = !DILocation(line: 1222, column: 19, scope: !10316)
!10319 = !DILocation(line: 1222, column: 17, scope: !10316)
!10320 = !DILocation(line: 1226, column: 27, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1226, column: 8)
!10322 = !DILocation(line: 1226, column: 31, scope: !10321)
!10323 = !DILocation(line: 1226, column: 40, scope: !10321)
!10324 = !DILocation(line: 1226, column: 45, scope: !10321)
!10325 = !DILocation(line: 1226, column: 8, scope: !10321)
!10326 = !DILocation(line: 1226, column: 8, scope: !10316)
!10327 = !DILocation(line: 1227, column: 5, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 1226, column: 60)
!10329 = !DILocation(line: 1227, column: 5, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10331, file: !3, line: 1227, column: 5)
!10331 = distinct !DILexicalBlock(scope: !10328, file: !3, line: 1227, column: 5)
!10332 = !DILocation(line: 1227, column: 5, scope: !10331)
!10333 = !DILocation(line: 1229, column: 5, scope: !10328)
!10334 = !DILocation(line: 1230, column: 9, scope: !10328)
!10335 = !DILocation(line: 1231, column: 4, scope: !10328)
!10336 = !DILocation(line: 1232, column: 11, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 1231, column: 11)
!10338 = !DILocation(line: 1232, column: 15, scope: !10337)
!10339 = !DILocation(line: 1232, column: 25, scope: !10337)
!10340 = !DILocation(line: 1232, column: 9, scope: !10337)
!10341 = !DILocation(line: 1233, column: 5, scope: !10337)
!10342 = !DILocation(line: 1237, column: 13, scope: !10337)
!10343 = !DILocation(line: 1237, column: 18, scope: !10337)
!10344 = !DILocation(line: 1237, column: 5, scope: !10337)
!10345 = !DILocation(line: 1238, column: 28, scope: !10337)
!10346 = !DILocation(line: 1238, column: 5, scope: !10337)
!10347 = !DILocation(line: 1238, column: 9, scope: !10337)
!10348 = !DILocation(line: 1238, column: 19, scope: !10337)
!10349 = !DILocation(line: 1238, column: 26, scope: !10337)
!10350 = !DILocation(line: 1239, column: 30, scope: !10337)
!10351 = !DILocation(line: 1239, column: 5, scope: !10337)
!10352 = !DILocation(line: 1239, column: 9, scope: !10337)
!10353 = !DILocation(line: 1239, column: 21, scope: !10337)
!10354 = !DILocation(line: 1239, column: 28, scope: !10337)
!10355 = !DILocation(line: 1240, column: 17, scope: !10337)
!10356 = !DILocation(line: 1240, column: 5, scope: !10337)
!10357 = !DILocation(line: 1240, column: 10, scope: !10337)
!10358 = !DILocation(line: 1240, column: 15, scope: !10337)
!10359 = !DILocation(line: 1241, column: 17, scope: !10337)
!10360 = !DILocation(line: 1243, column: 3, scope: !10316)
!10361 = !DILocation(line: 1244, column: 8, scope: !10313)
!10362 = !DILocation(line: 1245, column: 2, scope: !10305)
!10363 = !DILocation(line: 1246, column: 26, scope: !10300)
!10364 = !DILocation(line: 1246, column: 31, scope: !10300)
!10365 = !DILocation(line: 1246, column: 39, scope: !10300)
!10366 = !DILocation(line: 1246, column: 9, scope: !10300)
!10367 = !DILocation(line: 1246, column: 7, scope: !10300)
!10368 = !DILocation(line: 1248, column: 6, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1248, column: 6)
!10370 = !DILocation(line: 1248, column: 10, scope: !10369)
!10371 = !DILocation(line: 1248, column: 6, scope: !10197)
!10372 = !DILocation(line: 1249, column: 3, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 1248, column: 19)
!10374 = !DILocation(line: 1249, column: 8, scope: !10373)
!10375 = !DILocation(line: 1249, column: 14, scope: !10373)
!10376 = !DILocation(line: 1249, column: 24, scope: !10373)
!10377 = !DILocation(line: 1250, column: 3, scope: !10373)
!10378 = !DILocation(line: 1252, column: 7, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1252, column: 6)
!10380 = !DILocation(line: 1252, column: 6, scope: !10197)
!10381 = !DILocation(line: 1253, column: 15, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1252, column: 20)
!10383 = !DILocation(line: 1253, column: 3, scope: !10382)
!10384 = !DILocation(line: 1254, column: 11, scope: !10382)
!10385 = !DILocation(line: 1254, column: 16, scope: !10382)
!10386 = !DILocation(line: 1254, column: 3, scope: !10382)
!10387 = !DILocation(line: 1255, column: 28, scope: !10382)
!10388 = !DILocation(line: 1255, column: 32, scope: !10382)
!10389 = !DILocation(line: 1255, column: 41, scope: !10382)
!10390 = !DILocation(line: 1256, column: 6, scope: !10382)
!10391 = !DILocation(line: 1256, column: 10, scope: !10382)
!10392 = !DILocation(line: 1256, column: 22, scope: !10382)
!10393 = !DILocation(line: 1256, column: 30, scope: !10382)
!10394 = !DILocation(line: 1255, column: 3, scope: !10382)
!10395 = !DILocation(line: 1258, column: 27, scope: !10382)
!10396 = !DILocation(line: 1259, column: 24, scope: !10382)
!10397 = !DILocation(line: 1259, column: 28, scope: !10382)
!10398 = !DILocation(line: 1259, column: 38, scope: !10382)
!10399 = !DILocation(line: 1259, column: 46, scope: !10382)
!10400 = !DILocation(line: 1260, column: 6, scope: !10382)
!10401 = !DILocation(line: 1258, column: 3, scope: !10382)
!10402 = !DILocation(line: 1261, column: 31, scope: !10382)
!10403 = !DILocation(line: 1261, column: 35, scope: !10382)
!10404 = !DILocation(line: 1261, column: 44, scope: !10382)
!10405 = !DILocation(line: 1262, column: 9, scope: !10382)
!10406 = !DILocation(line: 1262, column: 13, scope: !10382)
!10407 = !DILocation(line: 1262, column: 25, scope: !10382)
!10408 = !DILocation(line: 1262, column: 33, scope: !10382)
!10409 = !DILocation(line: 1261, column: 3, scope: !10382)
!10410 = !DILocation(line: 1264, column: 2, scope: !10382)
!10411 = !DILocation(line: 1265, column: 25, scope: !10197)
!10412 = !DILocation(line: 1265, column: 30, scope: !10197)
!10413 = !DILocation(line: 1265, column: 2, scope: !10197)
!10414 = !DILocation(line: 1265, column: 7, scope: !10197)
!10415 = !DILocation(line: 1265, column: 13, scope: !10197)
!10416 = !DILocation(line: 1265, column: 22, scope: !10197)
!10417 = !DILocation(line: 1266, column: 33, scope: !10197)
!10418 = !DILocation(line: 1266, column: 38, scope: !10197)
!10419 = !DILocation(line: 1266, column: 18, scope: !10197)
!10420 = !DILocation(line: 1266, column: 2, scope: !10197)
!10421 = !DILocation(line: 1266, column: 7, scope: !10197)
!10422 = !DILocation(line: 1266, column: 16, scope: !10197)
!10423 = !DILocation(line: 1267, column: 20, scope: !10197)
!10424 = !DILocation(line: 1267, column: 2, scope: !10197)
!10425 = !DILocation(line: 1268, column: 2, scope: !10197)
!10426 = !DILocation(line: 1268, column: 7, scope: !10197)
!10427 = !DILocation(line: 1268, column: 13, scope: !10197)
!10428 = !DILocation(line: 1268, column: 23, scope: !10197)
!10429 = !DILocation(line: 1269, column: 1, scope: !10197)
!10430 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !453, file: !453, line: 2823, type: !10431, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{!451, !326, !13}
!10433 = !DILocalVariable(name: "dev", arg: 1, scope: !10430, file: !453, line: 2823, type: !326)
!10434 = !DILocation(line: 2823, column: 67, scope: !10430)
!10435 = !DILocalVariable(name: "length", arg: 2, scope: !10430, file: !453, line: 2824, type: !13)
!10436 = !DILocation(line: 2824, column: 26, scope: !10430)
!10437 = !DILocation(line: 2826, column: 28, scope: !10430)
!10438 = !DILocation(line: 2826, column: 33, scope: !10430)
!10439 = !DILocation(line: 2826, column: 9, scope: !10430)
!10440 = !DILocation(line: 2826, column: 2, scope: !10430)
!10441 = distinct !DISubprogram(name: "skb_reserve", scope: !453, file: !453, line: 2378, type: !10442, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10442 = !DISubroutineType(types: !10443)
!10443 = !{null, !451, !7}
!10444 = !DILocalVariable(name: "skb", arg: 1, scope: !10441, file: !453, line: 2378, type: !451)
!10445 = !DILocation(line: 2378, column: 48, scope: !10441)
!10446 = !DILocalVariable(name: "len", arg: 2, scope: !10441, file: !453, line: 2378, type: !7)
!10447 = !DILocation(line: 2378, column: 57, scope: !10441)
!10448 = !DILocation(line: 2380, column: 15, scope: !10441)
!10449 = !DILocation(line: 2380, column: 2, scope: !10441)
!10450 = !DILocation(line: 2380, column: 7, scope: !10441)
!10451 = !DILocation(line: 2380, column: 12, scope: !10441)
!10452 = !DILocation(line: 2381, column: 15, scope: !10441)
!10453 = !DILocation(line: 2381, column: 2, scope: !10441)
!10454 = !DILocation(line: 2381, column: 7, scope: !10441)
!10455 = !DILocation(line: 2381, column: 12, scope: !10441)
!10456 = !DILocation(line: 2382, column: 1, scope: !10441)
!10457 = !DILocalVariable(name: "dev", arg: 1, scope: !7913, file: !7914, line: 271, type: !6545)
!10458 = !DILocation(line: 271, column: 62, scope: !7913)
!10459 = !DILocalVariable(name: "ptr", arg: 2, scope: !7913, file: !7914, line: 271, type: !626)
!10460 = !DILocation(line: 271, column: 73, scope: !7913)
!10461 = !DILocalVariable(name: "size", arg: 3, scope: !7913, file: !7914, line: 272, type: !1074)
!10462 = !DILocation(line: 272, column: 10, scope: !7913)
!10463 = !DILocalVariable(name: "dir", arg: 4, scope: !7913, file: !7914, line: 272, type: !7070)
!10464 = !DILocation(line: 272, column: 40, scope: !7913)
!10465 = !DILocalVariable(name: "attrs", arg: 5, scope: !7913, file: !7914, line: 272, type: !348)
!10466 = !DILocation(line: 272, column: 59, scope: !7913)
!10467 = !DILocalVariable(name: "__ret_warn_once", scope: !10468, file: !7914, line: 275, type: !7)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !7914, line: 275, column: 6)
!10469 = distinct !DILexicalBlock(scope: !7913, file: !7914, line: 275, column: 6)
!10470 = !DILocation(line: 275, column: 6, scope: !10468)
!10471 = !DILocation(line: 275, column: 6, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10468, file: !7914, line: 275, column: 6)
!10473 = !DILocation(line: 0, scope: !10472)
!10474 = !DILocation(line: 275, column: 6, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10472, file: !7914, line: 275, column: 6)
!10476 = !DILocalVariable(name: "__ret_warn_on", scope: !10477, file: !7914, line: 275, type: !7)
!10477 = distinct !DILexicalBlock(scope: !10475, file: !7914, line: 275, column: 6)
!10478 = !DILocation(line: 275, column: 6, scope: !10477)
!10479 = !DILocation(line: 275, column: 6, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10477, file: !7914, line: 275, column: 6)
!10481 = !DILocation(line: 275, column: 6, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10480, file: !7914, line: 275, column: 6)
!10483 = !DILocation(line: 275, column: 6, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10482, file: !7914, line: 275, column: 6)
!10485 = !DILocation(line: 275, column: 6, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10482, file: !7914, line: 275, column: 6)
!10487 = !DILocation(line: 275, column: 6, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10486, file: !7914, line: 275, column: 6)
!10489 = !DILocation(line: 275, column: 6, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !7914, line: 275, column: 6)
!10491 = !{i32 -2141681794, i32 -2141681765, i32 -2141681719, i32 -2141681661, i32 -2141681607, i32 -2141681553, i32 -2141681498, i32 -2141681467}
!10492 = !DILocation(line: 275, column: 6, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10486, file: !7914, line: 275, column: 6)
!10494 = !{i32 -2141681047, i32 -2141681040, i32 -2141680988, i32 -2141680957, i32 -2141680927}
!10495 = !DILocation(line: 275, column: 6, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10486, file: !7914, line: 275, column: 6)
!10497 = !DILocation(line: 275, column: 6, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10482, file: !7914, line: 275, column: 6)
!10499 = !DILocation(line: 275, column: 6, scope: !10469)
!10500 = !DILocation(line: 275, column: 6, scope: !7913)
!10501 = !DILocation(line: 277, column: 3, scope: !10469)
!10502 = !DILocation(line: 278, column: 23, scope: !7913)
!10503 = !DILocation(line: 278, column: 28, scope: !7913)
!10504 = !DILocation(line: 278, column: 33, scope: !7913)
!10505 = !DILocation(line: 278, column: 2, scope: !7913)
!10506 = !DILocation(line: 279, column: 28, scope: !7913)
!10507 = !DILocation(line: 279, column: 33, scope: !7913)
!10508 = !DILocation(line: 279, column: 52, scope: !7913)
!10509 = !DILocation(line: 280, column: 4, scope: !7913)
!10510 = !DILocation(line: 280, column: 10, scope: !7913)
!10511 = !DILocation(line: 280, column: 15, scope: !7913)
!10512 = !DILocation(line: 279, column: 9, scope: !7913)
!10513 = !DILocation(line: 279, column: 2, scope: !7913)
!10514 = !DILocation(line: 281, column: 1, scope: !7913)
!10515 = distinct !DISubprogram(name: "dma_mapping_error", scope: !7914, file: !7914, line: 94, type: !10516, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10516 = !DISubroutineType(types: !10517)
!10517 = !{!7, !6545, !2070}
!10518 = !DILocalVariable(name: "dev", arg: 1, scope: !10515, file: !7914, line: 94, type: !6545)
!10519 = !DILocation(line: 94, column: 52, scope: !10515)
!10520 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !10515, file: !7914, line: 94, type: !2070)
!10521 = !DILocation(line: 94, column: 68, scope: !10515)
!10522 = !DILocation(line: 96, column: 26, scope: !10515)
!10523 = !DILocation(line: 96, column: 31, scope: !10515)
!10524 = !DILocation(line: 96, column: 2, scope: !10515)
!10525 = !DILocation(line: 98, column: 6, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10515, file: !7914, line: 98, column: 6)
!10527 = !DILocation(line: 98, column: 15, scope: !10526)
!10528 = !DILocation(line: 98, column: 6, scope: !10515)
!10529 = !DILocation(line: 99, column: 3, scope: !10526)
!10530 = !DILocation(line: 100, column: 2, scope: !10515)
!10531 = !DILocation(line: 101, column: 1, scope: !10515)
!10532 = distinct !DISubprogram(name: "consume_skb", scope: !453, file: !453, line: 1063, type: !504, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10533 = !DILocalVariable(name: "skb", arg: 1, scope: !10532, file: !453, line: 1063, type: !451)
!10534 = !DILocation(line: 1063, column: 48, scope: !10532)
!10535 = !DILocation(line: 1065, column: 19, scope: !10532)
!10536 = !DILocation(line: 1065, column: 9, scope: !10532)
!10537 = !DILocation(line: 1065, column: 2, scope: !10532)
!10538 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !7914, file: !7914, line: 283, type: !10539, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10539 = !DISubroutineType(types: !10540)
!10540 = !{null, !6545, !2070, !1074, !7070, !348}
!10541 = !DILocalVariable(name: "dev", arg: 1, scope: !10538, file: !7914, line: 283, type: !6545)
!10542 = !DILocation(line: 283, column: 58, scope: !10538)
!10543 = !DILocalVariable(name: "addr", arg: 2, scope: !10538, file: !7914, line: 283, type: !2070)
!10544 = !DILocation(line: 283, column: 74, scope: !10538)
!10545 = !DILocalVariable(name: "size", arg: 3, scope: !10538, file: !7914, line: 284, type: !1074)
!10546 = !DILocation(line: 284, column: 10, scope: !10538)
!10547 = !DILocalVariable(name: "dir", arg: 4, scope: !10538, file: !7914, line: 284, type: !7070)
!10548 = !DILocation(line: 284, column: 40, scope: !10538)
!10549 = !DILocalVariable(name: "attrs", arg: 5, scope: !10538, file: !7914, line: 284, type: !348)
!10550 = !DILocation(line: 284, column: 59, scope: !10538)
!10551 = !DILocation(line: 286, column: 30, scope: !10538)
!10552 = !DILocation(line: 286, column: 35, scope: !10538)
!10553 = !DILocation(line: 286, column: 41, scope: !10538)
!10554 = !DILocation(line: 286, column: 47, scope: !10538)
!10555 = !DILocation(line: 286, column: 52, scope: !10538)
!10556 = !DILocation(line: 286, column: 9, scope: !10538)
!10557 = !DILocation(line: 286, column: 2, scope: !10538)
!10558 = distinct !DISubprogram(name: "skb_copy_to_linear_data", scope: !453, file: !453, line: 3663, type: !10559, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10559 = !DISubroutineType(types: !10560)
!10560 = !{null, !451, !3291, !4771}
!10561 = !DILocalVariable(name: "skb", arg: 1, scope: !10558, file: !453, line: 3663, type: !451)
!10562 = !DILocation(line: 3663, column: 60, scope: !10558)
!10563 = !DILocalVariable(name: "from", arg: 2, scope: !10558, file: !453, line: 3664, type: !3291)
!10564 = !DILocation(line: 3664, column: 21, scope: !10558)
!10565 = !DILocalVariable(name: "len", arg: 3, scope: !10558, file: !453, line: 3665, type: !4771)
!10566 = !DILocation(line: 3665, column: 28, scope: !10558)
!10567 = !DILocation(line: 3667, column: 9, scope: !10558)
!10568 = !DILocation(line: 3667, column: 14, scope: !10558)
!10569 = !DILocation(line: 3667, column: 20, scope: !10558)
!10570 = !DILocation(line: 3667, column: 26, scope: !10558)
!10571 = !DILocation(line: 3667, column: 2, scope: !10558)
!10572 = !DILocation(line: 3668, column: 1, scope: !10558)
!10573 = distinct !DISubprogram(name: "dev_name", scope: !6541, file: !6541, line: 609, type: !10574, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10574 = !DISubroutineType(types: !10575)
!10575 = !{!328, !6891}
!10576 = !DILocalVariable(name: "dev", arg: 1, scope: !10573, file: !6541, line: 609, type: !6891)
!10577 = !DILocation(line: 609, column: 57, scope: !10573)
!10578 = !DILocation(line: 612, column: 6, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10573, file: !6541, line: 612, column: 6)
!10580 = !DILocation(line: 612, column: 11, scope: !10579)
!10581 = !DILocation(line: 612, column: 6, scope: !10573)
!10582 = !DILocation(line: 613, column: 10, scope: !10579)
!10583 = !DILocation(line: 613, column: 15, scope: !10579)
!10584 = !DILocation(line: 613, column: 3, scope: !10579)
!10585 = !DILocation(line: 615, column: 23, scope: !10573)
!10586 = !DILocation(line: 615, column: 28, scope: !10573)
!10587 = !DILocation(line: 615, column: 9, scope: !10573)
!10588 = !DILocation(line: 615, column: 2, scope: !10573)
!10589 = !DILocation(line: 616, column: 1, scope: !10573)
!10590 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !7914, file: !7914, line: 87, type: !10591, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{null, !6545, !3291, !348}
!10593 = !DILocalVariable(name: "dev", arg: 1, scope: !10590, file: !7914, line: 87, type: !6545)
!10594 = !DILocation(line: 87, column: 56, scope: !10590)
!10595 = !DILocalVariable(name: "addr", arg: 2, scope: !10590, file: !7914, line: 87, type: !3291)
!10596 = !DILocation(line: 87, column: 73, scope: !10590)
!10597 = !DILocalVariable(name: "len", arg: 3, scope: !10590, file: !7914, line: 88, type: !348)
!10598 = !DILocation(line: 88, column: 17, scope: !10590)
!10599 = !DILocation(line: 90, column: 1, scope: !10590)
!10600 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !10601, file: !10601, line: 18, type: !10602, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10601 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!10602 = !DISubroutineType(types: !10603)
!10603 = !{!348, !348}
!10604 = !DILocalVariable(name: "x", arg: 1, scope: !10600, file: !10601, line: 18, type: !348)
!10605 = !DILocation(line: 18, column: 63, scope: !10600)
!10606 = !DILocalVariable(name: "y", scope: !10600, file: !10601, line: 20, type: !348)
!10607 = !DILocation(line: 20, column: 16, scope: !10600)
!10608 = !DILocation(line: 20, column: 20, scope: !10600)
!10609 = !DILocation(line: 20, column: 22, scope: !10600)
!10610 = !DILocation(line: 23, column: 6, scope: !10600)
!10611 = !DILocation(line: 23, column: 12, scope: !10600)
!10612 = !DILocation(line: 23, column: 16, scope: !10600)
!10613 = !DILocation(line: 23, column: 14, scope: !10600)
!10614 = !DILocation(line: 23, column: 11, scope: !10600)
!10615 = !DILocation(line: 23, column: 21, scope: !10600)
!10616 = !DILocation(line: 23, column: 55, scope: !10600)
!10617 = !DILocation(line: 23, column: 53, scope: !10600)
!10618 = !DILocation(line: 23, column: 8, scope: !10600)
!10619 = !DILocation(line: 23, column: 4, scope: !10600)
!10620 = !DILocation(line: 25, column: 9, scope: !10600)
!10621 = !DILocation(line: 25, column: 2, scope: !10600)
!10622 = distinct !DISubprogram(name: "kobject_name", scope: !6120, file: !6120, line: 88, type: !10623, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10623 = !DISubroutineType(types: !10624)
!10624 = !{!328, !10625}
!10625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10626, size: 64)
!10626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6125)
!10627 = !DILocalVariable(name: "kobj", arg: 1, scope: !10622, file: !6120, line: 88, type: !10625)
!10628 = !DILocation(line: 88, column: 62, scope: !10622)
!10629 = !DILocation(line: 90, column: 9, scope: !10622)
!10630 = !DILocation(line: 90, column: 15, scope: !10622)
!10631 = !DILocation(line: 90, column: 2, scope: !10622)
!10632 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !7914, file: !7914, line: 83, type: !10633, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10633 = !DISubroutineType(types: !10634)
!10634 = !{null, !6545, !2070}
!10635 = !DILocalVariable(name: "dev", arg: 1, scope: !10632, file: !7914, line: 83, type: !6545)
!10636 = !DILocation(line: 83, column: 59, scope: !10632)
!10637 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !10632, file: !7914, line: 84, type: !2070)
!10638 = !DILocation(line: 84, column: 14, scope: !10632)
!10639 = !DILocation(line: 86, column: 1, scope: !10632)
!10640 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !9914, file: !9914, line: 646, type: !9915, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10641 = !DILocalVariable(name: "__ret", scope: !10642, file: !9914, line: 648, type: !348)
!10642 = distinct !DILexicalBlock(scope: !10640, file: !9914, line: 648, column: 9)
!10643 = !DILocation(line: 648, column: 9, scope: !10642)
!10644 = !DILocalVariable(name: "__edi", scope: !10642, file: !9914, line: 648, type: !348)
!10645 = !DILocalVariable(name: "__esi", scope: !10642, file: !9914, line: 648, type: !348)
!10646 = !DILocalVariable(name: "__edx", scope: !10642, file: !9914, line: 648, type: !348)
!10647 = !DILocalVariable(name: "__ecx", scope: !10642, file: !9914, line: 648, type: !348)
!10648 = !DILocalVariable(name: "__eax", scope: !10642, file: !9914, line: 648, type: !348)
!10649 = !DILocation(line: 648, column: 9, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !9914, line: 648, column: 9)
!10651 = distinct !DILexicalBlock(scope: !10642, file: !9914, line: 648, column: 9)
!10652 = !{i32 -2145704933, i32 -2145702618, i32 -2145702384, i32 -2145702333, i32 -2145702305, i32 -2145702280, i32 -2145702596, i32 -2145702583, i32 -2145702145, i32 -2145702026, i32 -2145702491, i32 -2145702464, i32 -2145702436, i32 -2145702406}
!10653 = !DILocalVariable(name: "__mask", scope: !10654, file: !9914, line: 648, type: !348)
!10654 = distinct !DILexicalBlock(scope: !10650, file: !9914, line: 648, column: 9)
!10655 = !DILocation(line: 648, column: 9, scope: !10654)
!10656 = !DILocation(line: 648, column: 9, scope: !10651)
!10657 = !DILocation(line: 648, column: 2, scope: !10640)
!10658 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !9914, file: !9914, line: 656, type: !3842, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10659 = !DILocalVariable(name: "__edi", scope: !10660, file: !9914, line: 658, type: !348)
!10660 = distinct !DILexicalBlock(scope: !10658, file: !9914, line: 658, column: 2)
!10661 = !DILocation(line: 658, column: 2, scope: !10660)
!10662 = !DILocalVariable(name: "__esi", scope: !10660, file: !9914, line: 658, type: !348)
!10663 = !DILocalVariable(name: "__edx", scope: !10660, file: !9914, line: 658, type: !348)
!10664 = !DILocalVariable(name: "__ecx", scope: !10660, file: !9914, line: 658, type: !348)
!10665 = !DILocalVariable(name: "__eax", scope: !10660, file: !9914, line: 658, type: !348)
!10666 = !{i32 -2145697839, i32 -2145697107, i32 -2145696873, i32 -2145696822, i32 -2145696794, i32 -2145696769, i32 -2145697085, i32 -2145697072, i32 -2145696634, i32 -2145696515, i32 -2145696980, i32 -2145696953, i32 -2145696925, i32 -2145696895}
!10667 = !DILocation(line: 659, column: 1, scope: !10658)
!10668 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !6, file: !6, line: 3817, type: !504, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10669 = !DILocalVariable(name: "skb", arg: 1, scope: !10668, file: !6, line: 3817, type: !451)
!10670 = !DILocation(line: 3817, column: 54, scope: !10668)
!10671 = !DILocation(line: 3819, column: 22, scope: !10668)
!10672 = !DILocation(line: 3819, column: 2, scope: !10668)
!10673 = !DILocation(line: 3820, column: 1, scope: !10668)
!10674 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !6, file: !6, line: 3354, type: !10675, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10675 = !DISubroutineType(types: !10676)
!10676 = !{!806, !808}
!10677 = !DILocalVariable(name: "dev", arg: 1, scope: !10674, file: !6, line: 3354, type: !808)
!10678 = !DILocation(line: 3354, column: 65, scope: !10674)
!10679 = !DILocation(line: 3356, column: 52, scope: !10674)
!10680 = !DILocation(line: 3356, column: 32, scope: !10674)
!10681 = !DILocation(line: 3356, column: 9, scope: !10674)
!10682 = !DILocation(line: 3356, column: 2, scope: !10674)
!10683 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !6, file: !6, line: 3343, type: !10684, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10684 = !DISubroutineType(types: !10685)
!10685 = !{!806, !10686}
!10686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10687, size: 64)
!10687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6439)
!10688 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !10683, file: !6, line: 3343, type: !10686)
!10689 = !DILocation(line: 3343, column: 70, scope: !10683)
!10690 = !DILocation(line: 3345, column: 43, scope: !10683)
!10691 = !DILocation(line: 3345, column: 54, scope: !10683)
!10692 = !DILocation(line: 3345, column: 9, scope: !10683)
!10693 = !DILocation(line: 3345, column: 2, scope: !10683)
!10694 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !6, file: !6, line: 2234, type: !10695, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{!6438, !808, !13}
!10697 = !DILocalVariable(name: "dev", arg: 1, scope: !10694, file: !6, line: 2234, type: !808)
!10698 = !DILocation(line: 2234, column: 67, scope: !10694)
!10699 = !DILocalVariable(name: "index", arg: 2, scope: !10694, file: !6, line: 2235, type: !13)
!10700 = !DILocation(line: 2235, column: 20, scope: !10694)
!10701 = !DILocation(line: 2237, column: 10, scope: !10694)
!10702 = !DILocation(line: 2237, column: 15, scope: !10694)
!10703 = !DILocation(line: 2237, column: 19, scope: !10694)
!10704 = !DILocation(line: 2237, column: 2, scope: !10694)
!10705 = distinct !DISubprogram(name: "test_bit", scope: !10706, file: !10706, line: 132, type: !10707, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10706 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!10707 = !DISubroutineType(types: !10708)
!10708 = !{!806, !1033, !10709}
!10709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10710, size: 64)
!10710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10711)
!10711 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !348)
!10712 = !DILocalVariable(name: "nr", arg: 1, scope: !10713, file: !10714, line: 210, type: !1033)
!10713 = distinct !DISubprogram(name: "variable_test_bit", scope: !10714, file: !10714, line: 210, type: !10707, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10714 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10715 = !DILocation(line: 210, column: 52, scope: !10713, inlinedAt: !10716)
!10716 = distinct !DILocation(line: 135, column: 9, scope: !10705)
!10717 = !DILocalVariable(name: "addr", arg: 2, scope: !10713, file: !10714, line: 210, type: !10709)
!10718 = !DILocation(line: 210, column: 86, scope: !10713, inlinedAt: !10716)
!10719 = !DILocalVariable(name: "oldbit", scope: !10713, file: !10714, line: 212, type: !806)
!10720 = !DILocation(line: 212, column: 7, scope: !10713, inlinedAt: !10716)
!10721 = !DILocalVariable(name: "nr", arg: 1, scope: !10722, file: !10714, line: 204, type: !1033)
!10722 = distinct !DISubprogram(name: "constant_test_bit", scope: !10714, file: !10714, line: 204, type: !10707, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10723 = !DILocation(line: 204, column: 52, scope: !10722, inlinedAt: !10724)
!10724 = distinct !DILocation(line: 135, column: 9, scope: !10705)
!10725 = !DILocalVariable(name: "addr", arg: 2, scope: !10722, file: !10714, line: 204, type: !10709)
!10726 = !DILocation(line: 204, column: 86, scope: !10722, inlinedAt: !10724)
!10727 = !DILocalVariable(name: "v", arg: 1, scope: !10728, file: !10729, line: 69, type: !10732)
!10728 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !10729, file: !10729, line: 69, type: !10730, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10729 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10730 = !DISubroutineType(types: !10731)
!10731 = !{null, !10732, !1074}
!10732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10733, size: 64)
!10733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10734)
!10734 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10735 = !DILocation(line: 69, column: 73, scope: !10728, inlinedAt: !10736)
!10736 = distinct !DILocation(line: 134, column: 2, scope: !10705)
!10737 = !DILocalVariable(name: "size", arg: 2, scope: !10728, file: !10729, line: 69, type: !1074)
!10738 = !DILocation(line: 69, column: 83, scope: !10728, inlinedAt: !10736)
!10739 = !DILocalVariable(name: "nr", arg: 1, scope: !10705, file: !10706, line: 132, type: !1033)
!10740 = !DILocation(line: 132, column: 34, scope: !10705)
!10741 = !DILocalVariable(name: "addr", arg: 2, scope: !10705, file: !10706, line: 132, type: !10709)
!10742 = !DILocation(line: 132, column: 68, scope: !10705)
!10743 = !DILocation(line: 134, column: 25, scope: !10705)
!10744 = !DILocation(line: 134, column: 32, scope: !10705)
!10745 = !DILocation(line: 134, column: 30, scope: !10705)
!10746 = !DILocation(line: 71, column: 19, scope: !10728, inlinedAt: !10736)
!10747 = !DILocation(line: 71, column: 22, scope: !10728, inlinedAt: !10736)
!10748 = !DILocation(line: 71, column: 2, scope: !10728, inlinedAt: !10736)
!10749 = !DILocation(line: 72, column: 2, scope: !10728, inlinedAt: !10736)
!10750 = !DILocation(line: 135, column: 9, scope: !10705)
!10751 = !DILocation(line: 206, column: 19, scope: !10722, inlinedAt: !10724)
!10752 = !DILocation(line: 206, column: 22, scope: !10722, inlinedAt: !10724)
!10753 = !DILocation(line: 206, column: 15, scope: !10722, inlinedAt: !10724)
!10754 = !DILocation(line: 207, column: 4, scope: !10722, inlinedAt: !10724)
!10755 = !DILocation(line: 207, column: 9, scope: !10722, inlinedAt: !10724)
!10756 = !DILocation(line: 207, column: 12, scope: !10722, inlinedAt: !10724)
!10757 = !DILocation(line: 206, column: 44, scope: !10722, inlinedAt: !10724)
!10758 = !DILocation(line: 207, column: 37, scope: !10722, inlinedAt: !10724)
!10759 = !DILocation(line: 217, column: 33, scope: !10713, inlinedAt: !10716)
!10760 = !DILocation(line: 217, column: 46, scope: !10713, inlinedAt: !10716)
!10761 = !DILocation(line: 214, column: 2, scope: !10713, inlinedAt: !10716)
!10762 = !{i32 -2147059947, i32 -2147059887}
!10763 = !DILocation(line: 219, column: 9, scope: !10713, inlinedAt: !10716)
!10764 = !DILocation(line: 135, column: 2, scope: !10705)
!10765 = distinct !DISubprogram(name: "kasan_check_read", scope: !10766, file: !10766, line: 34, type: !10767, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10766 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10767 = !DISubroutineType(types: !10768)
!10768 = !{!806, !10732, !13}
!10769 = !DILocalVariable(name: "p", arg: 1, scope: !10765, file: !10766, line: 34, type: !10732)
!10770 = !DILocation(line: 34, column: 58, scope: !10765)
!10771 = !DILocalVariable(name: "size", arg: 2, scope: !10765, file: !10766, line: 34, type: !13)
!10772 = !DILocation(line: 34, column: 74, scope: !10765)
!10773 = !DILocation(line: 36, column: 2, scope: !10765)
!10774 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10775, file: !10775, line: 178, type: !10776, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10775 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10776 = !DISubroutineType(types: !10777)
!10777 = !{null, !10732, !1074, !7}
!10778 = !DILocalVariable(name: "ptr", arg: 1, scope: !10774, file: !10775, line: 178, type: !10732)
!10779 = !DILocation(line: 178, column: 60, scope: !10774)
!10780 = !DILocalVariable(name: "size", arg: 2, scope: !10774, file: !10775, line: 178, type: !1074)
!10781 = !DILocation(line: 178, column: 72, scope: !10774)
!10782 = !DILocalVariable(name: "type", arg: 3, scope: !10774, file: !10775, line: 179, type: !7)
!10783 = !DILocation(line: 179, column: 15, scope: !10774)
!10784 = !DILocation(line: 179, column: 23, scope: !10774)
!10785 = distinct !DISubprogram(name: "pcnet32_purge_tx_ring", scope: !3, file: !3, line: 2324, type: !442, scopeLine: 2325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10786 = !DILocalVariable(name: "dev", arg: 1, scope: !10785, file: !3, line: 2324, type: !326)
!10787 = !DILocation(line: 2324, column: 54, scope: !10785)
!10788 = !DILocalVariable(name: "lp", scope: !10785, file: !3, line: 2326, type: !7248)
!10789 = !DILocation(line: 2326, column: 26, scope: !10785)
!10790 = !DILocation(line: 2326, column: 43, scope: !10785)
!10791 = !DILocation(line: 2326, column: 31, scope: !10785)
!10792 = !DILocalVariable(name: "i", scope: !10785, file: !3, line: 2327, type: !7)
!10793 = !DILocation(line: 2327, column: 6, scope: !10785)
!10794 = !DILocation(line: 2329, column: 9, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 2329, column: 2)
!10796 = !DILocation(line: 2329, column: 7, scope: !10795)
!10797 = !DILocation(line: 2329, column: 14, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 2329, column: 2)
!10799 = !DILocation(line: 2329, column: 18, scope: !10798)
!10800 = !DILocation(line: 2329, column: 22, scope: !10798)
!10801 = !DILocation(line: 2329, column: 16, scope: !10798)
!10802 = !DILocation(line: 2329, column: 2, scope: !10795)
!10803 = !DILocation(line: 2330, column: 3, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 2329, column: 41)
!10805 = !DILocation(line: 2330, column: 7, scope: !10804)
!10806 = !DILocation(line: 2330, column: 15, scope: !10804)
!10807 = !DILocation(line: 2330, column: 18, scope: !10804)
!10808 = !DILocation(line: 2330, column: 25, scope: !10804)
!10809 = !DILocation(line: 2331, column: 3, scope: !10804)
!10810 = !{i32 -2139634863}
!10811 = !DILocation(line: 2332, column: 7, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 2332, column: 7)
!10813 = !DILocation(line: 2332, column: 11, scope: !10812)
!10814 = !DILocation(line: 2332, column: 21, scope: !10812)
!10815 = !DILocation(line: 2332, column: 7, scope: !10804)
!10816 = !DILocation(line: 2333, column: 28, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2333, column: 8)
!10818 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 2332, column: 25)
!10819 = !DILocation(line: 2333, column: 32, scope: !10817)
!10820 = !DILocation(line: 2333, column: 41, scope: !10817)
!10821 = !DILocation(line: 2333, column: 46, scope: !10817)
!10822 = !DILocation(line: 2333, column: 50, scope: !10817)
!10823 = !DILocation(line: 2333, column: 62, scope: !10817)
!10824 = !DILocation(line: 2333, column: 9, scope: !10817)
!10825 = !DILocation(line: 2333, column: 8, scope: !10818)
!10826 = !DILocation(line: 2334, column: 5, scope: !10817)
!10827 = !DILocation(line: 2338, column: 22, scope: !10818)
!10828 = !DILocation(line: 2338, column: 26, scope: !10818)
!10829 = !DILocation(line: 2338, column: 36, scope: !10818)
!10830 = !DILocation(line: 2338, column: 4, scope: !10818)
!10831 = !DILocation(line: 2339, column: 3, scope: !10818)
!10832 = !DILocation(line: 2340, column: 3, scope: !10804)
!10833 = !DILocation(line: 2340, column: 7, scope: !10804)
!10834 = !DILocation(line: 2340, column: 17, scope: !10804)
!10835 = !DILocation(line: 2340, column: 20, scope: !10804)
!10836 = !DILocation(line: 2341, column: 3, scope: !10804)
!10837 = !DILocation(line: 2341, column: 7, scope: !10804)
!10838 = !DILocation(line: 2341, column: 19, scope: !10804)
!10839 = !DILocation(line: 2341, column: 22, scope: !10804)
!10840 = !DILocation(line: 2342, column: 2, scope: !10804)
!10841 = !DILocation(line: 2329, column: 37, scope: !10798)
!10842 = !DILocation(line: 2329, column: 2, scope: !10798)
!10843 = distinct !{!10843, !10802, !10844}
!10844 = !DILocation(line: 2342, column: 2, scope: !10795)
!10845 = !DILocation(line: 2343, column: 1, scope: !10785)
!10846 = distinct !DISubprogram(name: "pcnet32_init_ring", scope: !3, file: !3, line: 2346, type: !438, scopeLine: 2347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!10847 = !DILocalVariable(name: "dev", arg: 1, scope: !10846, file: !3, line: 2346, type: !326)
!10848 = !DILocation(line: 2346, column: 49, scope: !10846)
!10849 = !DILocalVariable(name: "lp", scope: !10846, file: !3, line: 2348, type: !7248)
!10850 = !DILocation(line: 2348, column: 26, scope: !10846)
!10851 = !DILocation(line: 2348, column: 43, scope: !10846)
!10852 = !DILocation(line: 2348, column: 31, scope: !10846)
!10853 = !DILocalVariable(name: "i", scope: !10846, file: !3, line: 2349, type: !7)
!10854 = !DILocation(line: 2349, column: 6, scope: !10846)
!10855 = !DILocation(line: 2351, column: 2, scope: !10846)
!10856 = !DILocation(line: 2351, column: 6, scope: !10846)
!10857 = !DILocation(line: 2351, column: 14, scope: !10846)
!10858 = !DILocation(line: 2352, column: 15, scope: !10846)
!10859 = !DILocation(line: 2352, column: 19, scope: !10846)
!10860 = !DILocation(line: 2352, column: 26, scope: !10846)
!10861 = !DILocation(line: 2352, column: 2, scope: !10846)
!10862 = !DILocation(line: 2352, column: 6, scope: !10846)
!10863 = !DILocation(line: 2352, column: 13, scope: !10846)
!10864 = !DILocation(line: 2353, column: 17, scope: !10846)
!10865 = !DILocation(line: 2353, column: 21, scope: !10846)
!10866 = !DILocation(line: 2353, column: 30, scope: !10846)
!10867 = !DILocation(line: 2353, column: 2, scope: !10846)
!10868 = !DILocation(line: 2353, column: 6, scope: !10846)
!10869 = !DILocation(line: 2353, column: 15, scope: !10846)
!10870 = !DILocation(line: 2355, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10846, file: !3, line: 2355, column: 2)
!10872 = !DILocation(line: 2355, column: 7, scope: !10871)
!10873 = !DILocation(line: 2355, column: 14, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 2355, column: 2)
!10875 = !DILocation(line: 2355, column: 18, scope: !10874)
!10876 = !DILocation(line: 2355, column: 22, scope: !10874)
!10877 = !DILocation(line: 2355, column: 16, scope: !10874)
!10878 = !DILocation(line: 2355, column: 2, scope: !10871)
!10879 = !DILocalVariable(name: "rx_skbuff", scope: !10880, file: !3, line: 2356, type: !451)
!10880 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 2355, column: 41)
!10881 = !DILocation(line: 2356, column: 19, scope: !10880)
!10882 = !DILocation(line: 2356, column: 31, scope: !10880)
!10883 = !DILocation(line: 2356, column: 35, scope: !10880)
!10884 = !DILocation(line: 2356, column: 45, scope: !10880)
!10885 = !DILocation(line: 2357, column: 7, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 2357, column: 7)
!10887 = !DILocation(line: 2357, column: 17, scope: !10886)
!10888 = !DILocation(line: 2357, column: 7, scope: !10880)
!10889 = !DILocation(line: 2358, column: 40, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 2357, column: 26)
!10891 = !DILocation(line: 2358, column: 23, scope: !10890)
!10892 = !DILocation(line: 2358, column: 4, scope: !10890)
!10893 = !DILocation(line: 2358, column: 8, scope: !10890)
!10894 = !DILocation(line: 2358, column: 18, scope: !10890)
!10895 = !DILocation(line: 2358, column: 21, scope: !10890)
!10896 = !DILocation(line: 2359, column: 16, scope: !10890)
!10897 = !DILocation(line: 2359, column: 20, scope: !10890)
!10898 = !DILocation(line: 2359, column: 30, scope: !10890)
!10899 = !DILocation(line: 2359, column: 14, scope: !10890)
!10900 = !DILocation(line: 2360, column: 9, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 2360, column: 8)
!10902 = !DILocation(line: 2360, column: 8, scope: !10890)
!10903 = !DILocation(line: 2362, column: 5, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 2360, column: 20)
!10905 = !DILocation(line: 2362, column: 5, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 2362, column: 5)
!10907 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 2362, column: 5)
!10908 = !DILocation(line: 2362, column: 5, scope: !10907)
!10909 = !DILocation(line: 2364, column: 5, scope: !10904)
!10910 = !DILocation(line: 2366, column: 16, scope: !10890)
!10911 = !DILocation(line: 2366, column: 4, scope: !10890)
!10912 = !DILocation(line: 2367, column: 3, scope: !10890)
!10913 = !DILocation(line: 2369, column: 3, scope: !10880)
!10914 = !{i32 -2139634250}
!10915 = !DILocation(line: 2370, column: 7, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 2370, column: 7)
!10917 = !DILocation(line: 2370, column: 11, scope: !10916)
!10918 = !DILocation(line: 2370, column: 23, scope: !10916)
!10919 = !DILocation(line: 2370, column: 26, scope: !10916)
!10920 = !DILocation(line: 2370, column: 7, scope: !10880)
!10921 = !DILocation(line: 2372, column: 8, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10916, file: !3, line: 2370, column: 32)
!10923 = !DILocation(line: 2371, column: 4, scope: !10922)
!10924 = !DILocation(line: 2371, column: 8, scope: !10922)
!10925 = !DILocation(line: 2371, column: 20, scope: !10922)
!10926 = !DILocation(line: 2371, column: 23, scope: !10922)
!10927 = !DILocation(line: 2374, column: 27, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10922, file: !3, line: 2374, column: 8)
!10929 = !DILocation(line: 2374, column: 31, scope: !10928)
!10930 = !DILocation(line: 2374, column: 40, scope: !10928)
!10931 = !DILocation(line: 2374, column: 45, scope: !10928)
!10932 = !DILocation(line: 2374, column: 49, scope: !10928)
!10933 = !DILocation(line: 2374, column: 61, scope: !10928)
!10934 = !DILocation(line: 2374, column: 8, scope: !10928)
!10935 = !DILocation(line: 2374, column: 8, scope: !10922)
!10936 = !DILocation(line: 2376, column: 5, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 2374, column: 66)
!10938 = !DILocation(line: 2376, column: 5, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 2376, column: 5)
!10940 = distinct !DILexicalBlock(scope: !10937, file: !3, line: 2376, column: 5)
!10941 = !DILocation(line: 2376, column: 5, scope: !10940)
!10942 = !DILocation(line: 2379, column: 5, scope: !10937)
!10943 = !DILocation(line: 2381, column: 3, scope: !10922)
!10944 = !DILocation(line: 2382, column: 25, scope: !10880)
!10945 = !DILocation(line: 2382, column: 3, scope: !10880)
!10946 = !DILocation(line: 2382, column: 7, scope: !10880)
!10947 = !DILocation(line: 2382, column: 15, scope: !10880)
!10948 = !DILocation(line: 2382, column: 18, scope: !10880)
!10949 = !DILocation(line: 2382, column: 23, scope: !10880)
!10950 = !DILocation(line: 2383, column: 3, scope: !10880)
!10951 = !DILocation(line: 2383, column: 7, scope: !10880)
!10952 = !DILocation(line: 2383, column: 15, scope: !10880)
!10953 = !DILocation(line: 2383, column: 18, scope: !10880)
!10954 = !DILocation(line: 2383, column: 29, scope: !10880)
!10955 = !DILocation(line: 2384, column: 3, scope: !10880)
!10956 = !{i32 -2139633496}
!10957 = !DILocation(line: 2385, column: 3, scope: !10880)
!10958 = !DILocation(line: 2385, column: 7, scope: !10880)
!10959 = !DILocation(line: 2385, column: 15, scope: !10880)
!10960 = !DILocation(line: 2385, column: 18, scope: !10880)
!10961 = !DILocation(line: 2385, column: 25, scope: !10880)
!10962 = !DILocation(line: 2386, column: 2, scope: !10880)
!10963 = !DILocation(line: 2355, column: 37, scope: !10874)
!10964 = !DILocation(line: 2355, column: 2, scope: !10874)
!10965 = distinct !{!10965, !10878, !10966}
!10966 = !DILocation(line: 2386, column: 2, scope: !10871)
!10967 = !DILocation(line: 2389, column: 9, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10846, file: !3, line: 2389, column: 2)
!10969 = !DILocation(line: 2389, column: 7, scope: !10968)
!10970 = !DILocation(line: 2389, column: 14, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 2389, column: 2)
!10972 = !DILocation(line: 2389, column: 18, scope: !10971)
!10973 = !DILocation(line: 2389, column: 22, scope: !10971)
!10974 = !DILocation(line: 2389, column: 16, scope: !10971)
!10975 = !DILocation(line: 2389, column: 2, scope: !10968)
!10976 = !DILocation(line: 2390, column: 3, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 2389, column: 41)
!10978 = !DILocation(line: 2390, column: 7, scope: !10977)
!10979 = !DILocation(line: 2390, column: 15, scope: !10977)
!10980 = !DILocation(line: 2390, column: 18, scope: !10977)
!10981 = !DILocation(line: 2390, column: 25, scope: !10977)
!10982 = !DILocation(line: 2391, column: 3, scope: !10977)
!10983 = !{i32 -2139633410}
!10984 = !DILocation(line: 2392, column: 3, scope: !10977)
!10985 = !DILocation(line: 2392, column: 7, scope: !10977)
!10986 = !DILocation(line: 2392, column: 15, scope: !10977)
!10987 = !DILocation(line: 2392, column: 18, scope: !10977)
!10988 = !DILocation(line: 2392, column: 23, scope: !10977)
!10989 = !DILocation(line: 2393, column: 3, scope: !10977)
!10990 = !DILocation(line: 2393, column: 7, scope: !10977)
!10991 = !DILocation(line: 2393, column: 19, scope: !10977)
!10992 = !DILocation(line: 2393, column: 22, scope: !10977)
!10993 = !DILocation(line: 2394, column: 2, scope: !10977)
!10994 = !DILocation(line: 2389, column: 37, scope: !10971)
!10995 = !DILocation(line: 2389, column: 2, scope: !10971)
!10996 = distinct !{!10996, !10975, !10997}
!10997 = !DILocation(line: 2394, column: 2, scope: !10968)
!10998 = !DILocation(line: 2397, column: 6, scope: !10846)
!10999 = !DILocation(line: 2396, column: 2, scope: !10846)
!11000 = !DILocation(line: 2396, column: 6, scope: !10846)
!11001 = !DILocation(line: 2396, column: 18, scope: !10846)
!11002 = !DILocation(line: 2396, column: 28, scope: !10846)
!11003 = !DILocation(line: 2398, column: 9, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10846, file: !3, line: 2398, column: 2)
!11005 = !DILocation(line: 2398, column: 7, scope: !11004)
!11006 = !DILocation(line: 2398, column: 14, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11004, file: !3, line: 2398, column: 2)
!11008 = !DILocation(line: 2398, column: 16, scope: !11007)
!11009 = !DILocation(line: 2398, column: 2, scope: !11004)
!11010 = !DILocation(line: 2399, column: 34, scope: !11007)
!11011 = !DILocation(line: 2399, column: 39, scope: !11007)
!11012 = !DILocation(line: 2399, column: 48, scope: !11007)
!11013 = !DILocation(line: 2399, column: 3, scope: !11007)
!11014 = !DILocation(line: 2399, column: 7, scope: !11007)
!11015 = !DILocation(line: 2399, column: 19, scope: !11007)
!11016 = !DILocation(line: 2399, column: 29, scope: !11007)
!11017 = !DILocation(line: 2399, column: 32, scope: !11007)
!11018 = !DILocation(line: 2398, column: 22, scope: !11007)
!11019 = !DILocation(line: 2398, column: 2, scope: !11007)
!11020 = distinct !{!11020, !11009, !11021}
!11021 = !DILocation(line: 2399, column: 49, scope: !11004)
!11022 = !DILocation(line: 2400, column: 28, scope: !10846)
!11023 = !DILocation(line: 2400, column: 2, scope: !10846)
!11024 = !DILocation(line: 2400, column: 6, scope: !10846)
!11025 = !DILocation(line: 2400, column: 18, scope: !10846)
!11026 = !DILocation(line: 2400, column: 26, scope: !10846)
!11027 = !DILocation(line: 2401, column: 28, scope: !10846)
!11028 = !DILocation(line: 2401, column: 2, scope: !10846)
!11029 = !DILocation(line: 2401, column: 6, scope: !10846)
!11030 = !DILocation(line: 2401, column: 18, scope: !10846)
!11031 = !DILocation(line: 2401, column: 26, scope: !10846)
!11032 = !DILocation(line: 2402, column: 2, scope: !10846)
!11033 = !{i32 -2139633169}
!11034 = !DILocation(line: 2403, column: 2, scope: !10846)
!11035 = !DILocation(line: 2404, column: 1, scope: !10846)
!11036 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !9914, file: !9914, line: 651, type: !7587, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11037 = !DILocalVariable(name: "f", arg: 1, scope: !11036, file: !9914, line: 651, type: !348)
!11038 = !DILocation(line: 651, column: 65, scope: !11036)
!11039 = !DILocalVariable(name: "__edi", scope: !11040, file: !9914, line: 653, type: !348)
!11040 = distinct !DILexicalBlock(scope: !11036, file: !9914, line: 653, column: 2)
!11041 = !DILocation(line: 653, column: 2, scope: !11040)
!11042 = !DILocalVariable(name: "__esi", scope: !11040, file: !9914, line: 653, type: !348)
!11043 = !DILocalVariable(name: "__edx", scope: !11040, file: !9914, line: 653, type: !348)
!11044 = !DILocalVariable(name: "__ecx", scope: !11040, file: !9914, line: 653, type: !348)
!11045 = !DILocalVariable(name: "__eax", scope: !11040, file: !9914, line: 653, type: !348)
!11046 = !{i32 -2145700466, i32 -2145699716, i32 -2145699482, i32 -2145699431, i32 -2145699403, i32 -2145699378, i32 -2145699694, i32 -2145699681, i32 -2145699243, i32 -2145699124, i32 -2145699589, i32 -2145699562, i32 -2145699534, i32 -2145699504}
!11047 = !DILocation(line: 654, column: 1, scope: !11036)
!11048 = distinct !DISubprogram(name: "kcalloc", scope: !7092, file: !7092, line: 601, type: !11049, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11049 = !DISubroutineType(types: !11050)
!11050 = !{!626, !1074, !1074, !1776}
!11051 = !DILocalVariable(name: "n", arg: 1, scope: !11048, file: !7092, line: 601, type: !1074)
!11052 = !DILocation(line: 601, column: 36, scope: !11048)
!11053 = !DILocalVariable(name: "size", arg: 2, scope: !11048, file: !7092, line: 601, type: !1074)
!11054 = !DILocation(line: 601, column: 46, scope: !11048)
!11055 = !DILocalVariable(name: "flags", arg: 3, scope: !11048, file: !7092, line: 601, type: !1776)
!11056 = !DILocation(line: 601, column: 58, scope: !11048)
!11057 = !DILocation(line: 603, column: 23, scope: !11048)
!11058 = !DILocation(line: 603, column: 26, scope: !11048)
!11059 = !DILocation(line: 603, column: 32, scope: !11048)
!11060 = !DILocation(line: 603, column: 38, scope: !11048)
!11061 = !DILocation(line: 603, column: 9, scope: !11048)
!11062 = !DILocation(line: 603, column: 2, scope: !11048)
!11063 = distinct !DISubprogram(name: "kmalloc_array", scope: !7092, file: !7092, line: 584, type: !11049, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11064 = !DILocalVariable(name: "s", arg: 1, scope: !11065, file: !7092, line: 445, type: !2085)
!11065 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7092, file: !7092, line: 445, type: !11066, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{!626, !2085, !1776, !1074}
!11068 = !DILocation(line: 445, column: 72, scope: !11065, inlinedAt: !11069)
!11069 = distinct !DILocation(line: 552, column: 10, scope: !11070, inlinedAt: !11075)
!11070 = distinct !DILexicalBlock(scope: !11071, file: !7092, line: 540, column: 34)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !7092, line: 540, column: 6)
!11072 = distinct !DISubprogram(name: "kmalloc", scope: !7092, file: !7092, line: 538, type: !11073, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11073 = !DISubroutineType(types: !11074)
!11074 = !{!626, !1074, !1776}
!11075 = distinct !DILocation(line: 591, column: 10, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11063, file: !7092, line: 590, column: 6)
!11077 = !DILocalVariable(name: "flags", arg: 2, scope: !11065, file: !7092, line: 446, type: !1776)
!11078 = !DILocation(line: 446, column: 9, scope: !11065, inlinedAt: !11069)
!11079 = !DILocalVariable(name: "size", arg: 3, scope: !11065, file: !7092, line: 446, type: !1074)
!11080 = !DILocation(line: 446, column: 23, scope: !11065, inlinedAt: !11069)
!11081 = !DILocalVariable(name: "ret", scope: !11065, file: !7092, line: 448, type: !626)
!11082 = !DILocation(line: 448, column: 8, scope: !11065, inlinedAt: !11069)
!11083 = !DILocalVariable(name: "flags", arg: 1, scope: !11084, file: !7092, line: 318, type: !1776)
!11084 = distinct !DISubprogram(name: "kmalloc_type", scope: !7092, file: !7092, line: 318, type: !11085, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11085 = !DISubroutineType(types: !11086)
!11086 = !{!7091, !1776}
!11087 = !DILocation(line: 318, column: 67, scope: !11084, inlinedAt: !11088)
!11088 = distinct !DILocation(line: 553, column: 20, scope: !11070, inlinedAt: !11075)
!11089 = !DILocalVariable(name: "size", arg: 1, scope: !11090, file: !7092, line: 346, type: !1074)
!11090 = distinct !DISubprogram(name: "kmalloc_index", scope: !7092, file: !7092, line: 346, type: !11091, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11091 = !DISubroutineType(types: !11092)
!11092 = !{!13, !1074}
!11093 = !DILocation(line: 346, column: 58, scope: !11090, inlinedAt: !11094)
!11094 = distinct !DILocation(line: 547, column: 11, scope: !11070, inlinedAt: !11075)
!11095 = !DILocalVariable(name: "size", arg: 1, scope: !11096, file: !7092, line: 472, type: !1074)
!11096 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7092, file: !7092, line: 472, type: !11097, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11097 = !DISubroutineType(types: !11098)
!11098 = !{!626, !1074, !1776, !13}
!11099 = !DILocation(line: 472, column: 28, scope: !11096, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 481, column: 9, scope: !11101, inlinedAt: !11102)
!11101 = distinct !DISubprogram(name: "kmalloc_large", scope: !7092, file: !7092, line: 478, type: !11073, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11102 = distinct !DILocation(line: 545, column: 11, scope: !11103, inlinedAt: !11075)
!11103 = distinct !DILexicalBlock(scope: !11070, file: !7092, line: 544, column: 7)
!11104 = !DILocalVariable(name: "flags", arg: 2, scope: !11096, file: !7092, line: 472, type: !1776)
!11105 = !DILocation(line: 472, column: 40, scope: !11096, inlinedAt: !11100)
!11106 = !DILocalVariable(name: "order", arg: 3, scope: !11096, file: !7092, line: 472, type: !13)
!11107 = !DILocation(line: 472, column: 60, scope: !11096, inlinedAt: !11100)
!11108 = !DILocalVariable(name: "size", arg: 1, scope: !11101, file: !7092, line: 478, type: !1074)
!11109 = !DILocation(line: 478, column: 51, scope: !11101, inlinedAt: !11102)
!11110 = !DILocalVariable(name: "flags", arg: 2, scope: !11101, file: !7092, line: 478, type: !1776)
!11111 = !DILocation(line: 478, column: 63, scope: !11101, inlinedAt: !11102)
!11112 = !DILocalVariable(name: "order", scope: !11101, file: !7092, line: 480, type: !13)
!11113 = !DILocation(line: 480, column: 15, scope: !11101, inlinedAt: !11102)
!11114 = !DILocalVariable(name: "size", arg: 1, scope: !11072, file: !7092, line: 538, type: !1074)
!11115 = !DILocation(line: 538, column: 45, scope: !11072, inlinedAt: !11075)
!11116 = !DILocalVariable(name: "flags", arg: 2, scope: !11072, file: !7092, line: 538, type: !1776)
!11117 = !DILocation(line: 538, column: 57, scope: !11072, inlinedAt: !11075)
!11118 = !DILocalVariable(name: "index", scope: !11070, file: !7092, line: 542, type: !13)
!11119 = !DILocation(line: 542, column: 16, scope: !11070, inlinedAt: !11075)
!11120 = !DILocalVariable(name: "n", arg: 1, scope: !11063, file: !7092, line: 584, type: !1074)
!11121 = !DILocation(line: 584, column: 42, scope: !11063)
!11122 = !DILocalVariable(name: "size", arg: 2, scope: !11063, file: !7092, line: 584, type: !1074)
!11123 = !DILocation(line: 584, column: 52, scope: !11063)
!11124 = !DILocalVariable(name: "flags", arg: 3, scope: !11063, file: !7092, line: 584, type: !1776)
!11125 = !DILocation(line: 584, column: 64, scope: !11063)
!11126 = !DILocalVariable(name: "bytes", scope: !11063, file: !7092, line: 586, type: !1074)
!11127 = !DILocation(line: 586, column: 9, scope: !11063)
!11128 = !DILocalVariable(name: "__a", scope: !11129, file: !7092, line: 588, type: !1074)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !7092, line: 588, column: 6)
!11130 = distinct !DILexicalBlock(scope: !11063, file: !7092, line: 588, column: 6)
!11131 = !DILocation(line: 588, column: 6, scope: !11129)
!11132 = !DILocalVariable(name: "__b", scope: !11129, file: !7092, line: 588, type: !1074)
!11133 = !DILocalVariable(name: "__d", scope: !11129, file: !7092, line: 588, type: !2908)
!11134 = !DILocation(line: 588, column: 6, scope: !11130)
!11135 = !DILocation(line: 588, column: 6, scope: !11063)
!11136 = !DILocation(line: 589, column: 3, scope: !11130)
!11137 = !DILocation(line: 590, column: 27, scope: !11076)
!11138 = !DILocation(line: 590, column: 6, scope: !11076)
!11139 = !DILocation(line: 590, column: 30, scope: !11076)
!11140 = !DILocation(line: 590, column: 54, scope: !11076)
!11141 = !DILocation(line: 590, column: 33, scope: !11076)
!11142 = !DILocation(line: 590, column: 6, scope: !11063)
!11143 = !DILocation(line: 591, column: 18, scope: !11076)
!11144 = !DILocation(line: 591, column: 25, scope: !11076)
!11145 = !DILocation(line: 540, column: 27, scope: !11071, inlinedAt: !11075)
!11146 = !DILocation(line: 540, column: 6, scope: !11071, inlinedAt: !11075)
!11147 = !DILocation(line: 540, column: 6, scope: !11072, inlinedAt: !11075)
!11148 = !DILocation(line: 544, column: 7, scope: !11103, inlinedAt: !11075)
!11149 = !DILocation(line: 544, column: 12, scope: !11103, inlinedAt: !11075)
!11150 = !DILocation(line: 544, column: 7, scope: !11070, inlinedAt: !11075)
!11151 = !DILocation(line: 545, column: 25, scope: !11103, inlinedAt: !11075)
!11152 = !DILocation(line: 545, column: 31, scope: !11103, inlinedAt: !11075)
!11153 = !DILocation(line: 480, column: 33, scope: !11101, inlinedAt: !11102)
!11154 = !DILocation(line: 480, column: 23, scope: !11101, inlinedAt: !11102)
!11155 = !DILocation(line: 481, column: 29, scope: !11101, inlinedAt: !11102)
!11156 = !DILocation(line: 481, column: 35, scope: !11101, inlinedAt: !11102)
!11157 = !DILocation(line: 481, column: 42, scope: !11101, inlinedAt: !11102)
!11158 = !DILocation(line: 474, column: 23, scope: !11096, inlinedAt: !11100)
!11159 = !DILocation(line: 474, column: 29, scope: !11096, inlinedAt: !11100)
!11160 = !DILocation(line: 474, column: 36, scope: !11096, inlinedAt: !11100)
!11161 = !DILocation(line: 474, column: 9, scope: !11096, inlinedAt: !11100)
!11162 = !DILocation(line: 545, column: 4, scope: !11103, inlinedAt: !11075)
!11163 = !DILocation(line: 547, column: 25, scope: !11070, inlinedAt: !11075)
!11164 = !DILocation(line: 348, column: 7, scope: !11165, inlinedAt: !11094)
!11165 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 348, column: 6)
!11166 = !DILocation(line: 348, column: 6, scope: !11090, inlinedAt: !11094)
!11167 = !DILocation(line: 349, column: 3, scope: !11165, inlinedAt: !11094)
!11168 = !DILocation(line: 351, column: 6, scope: !11169, inlinedAt: !11094)
!11169 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 351, column: 6)
!11170 = !DILocation(line: 351, column: 11, scope: !11169, inlinedAt: !11094)
!11171 = !DILocation(line: 351, column: 6, scope: !11090, inlinedAt: !11094)
!11172 = !DILocation(line: 352, column: 3, scope: !11169, inlinedAt: !11094)
!11173 = !DILocation(line: 354, column: 32, scope: !11174, inlinedAt: !11094)
!11174 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 354, column: 6)
!11175 = !DILocation(line: 354, column: 37, scope: !11174, inlinedAt: !11094)
!11176 = !DILocation(line: 354, column: 42, scope: !11174, inlinedAt: !11094)
!11177 = !DILocation(line: 354, column: 45, scope: !11174, inlinedAt: !11094)
!11178 = !DILocation(line: 354, column: 50, scope: !11174, inlinedAt: !11094)
!11179 = !DILocation(line: 354, column: 6, scope: !11090, inlinedAt: !11094)
!11180 = !DILocation(line: 355, column: 3, scope: !11174, inlinedAt: !11094)
!11181 = !DILocation(line: 356, column: 32, scope: !11182, inlinedAt: !11094)
!11182 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 356, column: 6)
!11183 = !DILocation(line: 356, column: 37, scope: !11182, inlinedAt: !11094)
!11184 = !DILocation(line: 356, column: 43, scope: !11182, inlinedAt: !11094)
!11185 = !DILocation(line: 356, column: 46, scope: !11182, inlinedAt: !11094)
!11186 = !DILocation(line: 356, column: 51, scope: !11182, inlinedAt: !11094)
!11187 = !DILocation(line: 356, column: 6, scope: !11090, inlinedAt: !11094)
!11188 = !DILocation(line: 357, column: 3, scope: !11182, inlinedAt: !11094)
!11189 = !DILocation(line: 358, column: 6, scope: !11190, inlinedAt: !11094)
!11190 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 358, column: 6)
!11191 = !DILocation(line: 358, column: 11, scope: !11190, inlinedAt: !11094)
!11192 = !DILocation(line: 358, column: 6, scope: !11090, inlinedAt: !11094)
!11193 = !DILocation(line: 358, column: 26, scope: !11190, inlinedAt: !11094)
!11194 = !DILocation(line: 359, column: 6, scope: !11195, inlinedAt: !11094)
!11195 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 359, column: 6)
!11196 = !DILocation(line: 359, column: 11, scope: !11195, inlinedAt: !11094)
!11197 = !DILocation(line: 359, column: 6, scope: !11090, inlinedAt: !11094)
!11198 = !DILocation(line: 359, column: 26, scope: !11195, inlinedAt: !11094)
!11199 = !DILocation(line: 360, column: 6, scope: !11200, inlinedAt: !11094)
!11200 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 360, column: 6)
!11201 = !DILocation(line: 360, column: 11, scope: !11200, inlinedAt: !11094)
!11202 = !DILocation(line: 360, column: 6, scope: !11090, inlinedAt: !11094)
!11203 = !DILocation(line: 360, column: 26, scope: !11200, inlinedAt: !11094)
!11204 = !DILocation(line: 361, column: 6, scope: !11205, inlinedAt: !11094)
!11205 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 361, column: 6)
!11206 = !DILocation(line: 361, column: 11, scope: !11205, inlinedAt: !11094)
!11207 = !DILocation(line: 361, column: 6, scope: !11090, inlinedAt: !11094)
!11208 = !DILocation(line: 361, column: 26, scope: !11205, inlinedAt: !11094)
!11209 = !DILocation(line: 362, column: 6, scope: !11210, inlinedAt: !11094)
!11210 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 362, column: 6)
!11211 = !DILocation(line: 362, column: 11, scope: !11210, inlinedAt: !11094)
!11212 = !DILocation(line: 362, column: 6, scope: !11090, inlinedAt: !11094)
!11213 = !DILocation(line: 362, column: 26, scope: !11210, inlinedAt: !11094)
!11214 = !DILocation(line: 363, column: 6, scope: !11215, inlinedAt: !11094)
!11215 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 363, column: 6)
!11216 = !DILocation(line: 363, column: 11, scope: !11215, inlinedAt: !11094)
!11217 = !DILocation(line: 363, column: 6, scope: !11090, inlinedAt: !11094)
!11218 = !DILocation(line: 363, column: 26, scope: !11215, inlinedAt: !11094)
!11219 = !DILocation(line: 364, column: 6, scope: !11220, inlinedAt: !11094)
!11220 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 364, column: 6)
!11221 = !DILocation(line: 364, column: 11, scope: !11220, inlinedAt: !11094)
!11222 = !DILocation(line: 364, column: 6, scope: !11090, inlinedAt: !11094)
!11223 = !DILocation(line: 364, column: 26, scope: !11220, inlinedAt: !11094)
!11224 = !DILocation(line: 365, column: 6, scope: !11225, inlinedAt: !11094)
!11225 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 365, column: 6)
!11226 = !DILocation(line: 365, column: 11, scope: !11225, inlinedAt: !11094)
!11227 = !DILocation(line: 365, column: 6, scope: !11090, inlinedAt: !11094)
!11228 = !DILocation(line: 365, column: 26, scope: !11225, inlinedAt: !11094)
!11229 = !DILocation(line: 366, column: 6, scope: !11230, inlinedAt: !11094)
!11230 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 366, column: 6)
!11231 = !DILocation(line: 366, column: 11, scope: !11230, inlinedAt: !11094)
!11232 = !DILocation(line: 366, column: 6, scope: !11090, inlinedAt: !11094)
!11233 = !DILocation(line: 366, column: 26, scope: !11230, inlinedAt: !11094)
!11234 = !DILocation(line: 367, column: 6, scope: !11235, inlinedAt: !11094)
!11235 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 367, column: 6)
!11236 = !DILocation(line: 367, column: 11, scope: !11235, inlinedAt: !11094)
!11237 = !DILocation(line: 367, column: 6, scope: !11090, inlinedAt: !11094)
!11238 = !DILocation(line: 367, column: 26, scope: !11235, inlinedAt: !11094)
!11239 = !DILocation(line: 368, column: 6, scope: !11240, inlinedAt: !11094)
!11240 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 368, column: 6)
!11241 = !DILocation(line: 368, column: 11, scope: !11240, inlinedAt: !11094)
!11242 = !DILocation(line: 368, column: 6, scope: !11090, inlinedAt: !11094)
!11243 = !DILocation(line: 368, column: 26, scope: !11240, inlinedAt: !11094)
!11244 = !DILocation(line: 369, column: 6, scope: !11245, inlinedAt: !11094)
!11245 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 369, column: 6)
!11246 = !DILocation(line: 369, column: 11, scope: !11245, inlinedAt: !11094)
!11247 = !DILocation(line: 369, column: 6, scope: !11090, inlinedAt: !11094)
!11248 = !DILocation(line: 369, column: 26, scope: !11245, inlinedAt: !11094)
!11249 = !DILocation(line: 370, column: 6, scope: !11250, inlinedAt: !11094)
!11250 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 370, column: 6)
!11251 = !DILocation(line: 370, column: 11, scope: !11250, inlinedAt: !11094)
!11252 = !DILocation(line: 370, column: 6, scope: !11090, inlinedAt: !11094)
!11253 = !DILocation(line: 370, column: 26, scope: !11250, inlinedAt: !11094)
!11254 = !DILocation(line: 371, column: 6, scope: !11255, inlinedAt: !11094)
!11255 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 371, column: 6)
!11256 = !DILocation(line: 371, column: 11, scope: !11255, inlinedAt: !11094)
!11257 = !DILocation(line: 371, column: 6, scope: !11090, inlinedAt: !11094)
!11258 = !DILocation(line: 371, column: 26, scope: !11255, inlinedAt: !11094)
!11259 = !DILocation(line: 372, column: 6, scope: !11260, inlinedAt: !11094)
!11260 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 372, column: 6)
!11261 = !DILocation(line: 372, column: 11, scope: !11260, inlinedAt: !11094)
!11262 = !DILocation(line: 372, column: 6, scope: !11090, inlinedAt: !11094)
!11263 = !DILocation(line: 372, column: 26, scope: !11260, inlinedAt: !11094)
!11264 = !DILocation(line: 373, column: 6, scope: !11265, inlinedAt: !11094)
!11265 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 373, column: 6)
!11266 = !DILocation(line: 373, column: 11, scope: !11265, inlinedAt: !11094)
!11267 = !DILocation(line: 373, column: 6, scope: !11090, inlinedAt: !11094)
!11268 = !DILocation(line: 373, column: 26, scope: !11265, inlinedAt: !11094)
!11269 = !DILocation(line: 374, column: 6, scope: !11270, inlinedAt: !11094)
!11270 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 374, column: 6)
!11271 = !DILocation(line: 374, column: 11, scope: !11270, inlinedAt: !11094)
!11272 = !DILocation(line: 374, column: 6, scope: !11090, inlinedAt: !11094)
!11273 = !DILocation(line: 374, column: 26, scope: !11270, inlinedAt: !11094)
!11274 = !DILocation(line: 375, column: 6, scope: !11275, inlinedAt: !11094)
!11275 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 375, column: 6)
!11276 = !DILocation(line: 375, column: 11, scope: !11275, inlinedAt: !11094)
!11277 = !DILocation(line: 375, column: 6, scope: !11090, inlinedAt: !11094)
!11278 = !DILocation(line: 375, column: 27, scope: !11275, inlinedAt: !11094)
!11279 = !DILocation(line: 376, column: 6, scope: !11280, inlinedAt: !11094)
!11280 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 376, column: 6)
!11281 = !DILocation(line: 376, column: 11, scope: !11280, inlinedAt: !11094)
!11282 = !DILocation(line: 376, column: 6, scope: !11090, inlinedAt: !11094)
!11283 = !DILocation(line: 376, column: 32, scope: !11280, inlinedAt: !11094)
!11284 = !DILocation(line: 377, column: 6, scope: !11285, inlinedAt: !11094)
!11285 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 377, column: 6)
!11286 = !DILocation(line: 377, column: 11, scope: !11285, inlinedAt: !11094)
!11287 = !DILocation(line: 377, column: 6, scope: !11090, inlinedAt: !11094)
!11288 = !DILocation(line: 377, column: 32, scope: !11285, inlinedAt: !11094)
!11289 = !DILocation(line: 378, column: 6, scope: !11290, inlinedAt: !11094)
!11290 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 378, column: 6)
!11291 = !DILocation(line: 378, column: 11, scope: !11290, inlinedAt: !11094)
!11292 = !DILocation(line: 378, column: 6, scope: !11090, inlinedAt: !11094)
!11293 = !DILocation(line: 378, column: 32, scope: !11290, inlinedAt: !11094)
!11294 = !DILocation(line: 379, column: 6, scope: !11295, inlinedAt: !11094)
!11295 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 379, column: 6)
!11296 = !DILocation(line: 379, column: 11, scope: !11295, inlinedAt: !11094)
!11297 = !DILocation(line: 379, column: 6, scope: !11090, inlinedAt: !11094)
!11298 = !DILocation(line: 379, column: 33, scope: !11295, inlinedAt: !11094)
!11299 = !DILocation(line: 380, column: 6, scope: !11300, inlinedAt: !11094)
!11300 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 380, column: 6)
!11301 = !DILocation(line: 380, column: 11, scope: !11300, inlinedAt: !11094)
!11302 = !DILocation(line: 380, column: 6, scope: !11090, inlinedAt: !11094)
!11303 = !DILocation(line: 380, column: 33, scope: !11300, inlinedAt: !11094)
!11304 = !DILocation(line: 381, column: 6, scope: !11305, inlinedAt: !11094)
!11305 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 381, column: 6)
!11306 = !DILocation(line: 381, column: 11, scope: !11305, inlinedAt: !11094)
!11307 = !DILocation(line: 381, column: 6, scope: !11090, inlinedAt: !11094)
!11308 = !DILocation(line: 381, column: 33, scope: !11305, inlinedAt: !11094)
!11309 = !DILocation(line: 382, column: 2, scope: !11310, inlinedAt: !11094)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !7092, line: 382, column: 2)
!11311 = distinct !DILexicalBlock(scope: !11090, file: !7092, line: 382, column: 2)
!11312 = !{i32 -2143667275, i32 -2143667246, i32 -2143667200, i32 -2143667142, i32 -2143667088, i32 -2143667034, i32 -2143666979, i32 -2143666948}
!11313 = !DILocation(line: 382, column: 2, scope: !11314, inlinedAt: !11094)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !7092, line: 382, column: 2)
!11315 = distinct !DILexicalBlock(scope: !11311, file: !7092, line: 382, column: 2)
!11316 = !{i32 -2143666505, i32 -2143666498, i32 -2143666444, i32 -2143666413, i32 -2143666383}
!11317 = !DILocation(line: 382, column: 2, scope: !11315, inlinedAt: !11094)
!11318 = !DILocation(line: 386, column: 1, scope: !11090, inlinedAt: !11094)
!11319 = !DILocation(line: 547, column: 9, scope: !11070, inlinedAt: !11075)
!11320 = !DILocation(line: 549, column: 8, scope: !11321, inlinedAt: !11075)
!11321 = distinct !DILexicalBlock(scope: !11070, file: !7092, line: 549, column: 7)
!11322 = !DILocation(line: 549, column: 7, scope: !11070, inlinedAt: !11075)
!11323 = !DILocation(line: 550, column: 4, scope: !11321, inlinedAt: !11075)
!11324 = !DILocation(line: 553, column: 33, scope: !11070, inlinedAt: !11075)
!11325 = !DILocation(line: 325, column: 6, scope: !11326, inlinedAt: !11088)
!11326 = distinct !DILexicalBlock(scope: !11084, file: !7092, line: 325, column: 6)
!11327 = !DILocation(line: 325, column: 6, scope: !11084, inlinedAt: !11088)
!11328 = !DILocation(line: 326, column: 3, scope: !11326, inlinedAt: !11088)
!11329 = !DILocation(line: 332, column: 9, scope: !11084, inlinedAt: !11088)
!11330 = !DILocation(line: 332, column: 15, scope: !11084, inlinedAt: !11088)
!11331 = !DILocation(line: 332, column: 2, scope: !11084, inlinedAt: !11088)
!11332 = !DILocation(line: 336, column: 1, scope: !11084, inlinedAt: !11088)
!11333 = !DILocation(line: 553, column: 5, scope: !11070, inlinedAt: !11075)
!11334 = !DILocation(line: 553, column: 41, scope: !11070, inlinedAt: !11075)
!11335 = !DILocation(line: 554, column: 5, scope: !11070, inlinedAt: !11075)
!11336 = !DILocation(line: 554, column: 12, scope: !11070, inlinedAt: !11075)
!11337 = !DILocation(line: 448, column: 31, scope: !11065, inlinedAt: !11069)
!11338 = !DILocation(line: 448, column: 34, scope: !11065, inlinedAt: !11069)
!11339 = !DILocation(line: 448, column: 14, scope: !11065, inlinedAt: !11069)
!11340 = !DILocation(line: 450, column: 22, scope: !11065, inlinedAt: !11069)
!11341 = !DILocation(line: 450, column: 25, scope: !11065, inlinedAt: !11069)
!11342 = !DILocation(line: 450, column: 30, scope: !11065, inlinedAt: !11069)
!11343 = !DILocation(line: 450, column: 36, scope: !11065, inlinedAt: !11069)
!11344 = !DILocation(line: 450, column: 8, scope: !11065, inlinedAt: !11069)
!11345 = !DILocation(line: 450, column: 6, scope: !11065, inlinedAt: !11069)
!11346 = !DILocation(line: 451, column: 9, scope: !11065, inlinedAt: !11069)
!11347 = !DILocation(line: 552, column: 3, scope: !11070, inlinedAt: !11075)
!11348 = !DILocation(line: 557, column: 19, scope: !11072, inlinedAt: !11075)
!11349 = !DILocation(line: 557, column: 25, scope: !11072, inlinedAt: !11075)
!11350 = !DILocation(line: 557, column: 9, scope: !11072, inlinedAt: !11075)
!11351 = !DILocation(line: 557, column: 2, scope: !11072, inlinedAt: !11075)
!11352 = !DILocation(line: 558, column: 1, scope: !11072, inlinedAt: !11075)
!11353 = !DILocation(line: 591, column: 3, scope: !11076)
!11354 = !DILocation(line: 592, column: 19, scope: !11063)
!11355 = !DILocation(line: 592, column: 26, scope: !11063)
!11356 = !DILocation(line: 592, column: 9, scope: !11063)
!11357 = !DILocation(line: 592, column: 2, scope: !11063)
!11358 = !DILocation(line: 593, column: 1, scope: !11063)
!11359 = distinct !DISubprogram(name: "__must_check_overflow", scope: !11360, file: !11360, line: 52, type: !11361, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11360 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!11361 = !DISubroutineType(types: !11362)
!11362 = !{!806, !806}
!11363 = !DILocalVariable(name: "overflow", arg: 1, scope: !11359, file: !11360, line: 52, type: !806)
!11364 = !DILocation(line: 52, column: 60, scope: !11359)
!11365 = !DILocation(line: 54, column: 9, scope: !11359)
!11366 = !DILocation(line: 54, column: 2, scope: !11359)
!11367 = distinct !DISubprogram(name: "get_order", scope: !11368, file: !11368, line: 29, type: !9148, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11368 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11369 = !DILocalVariable(name: "x", arg: 1, scope: !11370, file: !10714, line: 366, type: !369)
!11370 = distinct !DISubprogram(name: "fls64", scope: !10714, file: !10714, line: 366, type: !11371, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11371 = !DISubroutineType(types: !11372)
!11372 = !{!7, !369}
!11373 = !DILocation(line: 366, column: 40, scope: !11370, inlinedAt: !11374)
!11374 = distinct !DILocation(line: 46, column: 9, scope: !11367)
!11375 = !DILocalVariable(name: "bitpos", scope: !11370, file: !10714, line: 368, type: !7)
!11376 = !DILocation(line: 368, column: 6, scope: !11370, inlinedAt: !11374)
!11377 = !DILocalVariable(name: "size", arg: 1, scope: !11367, file: !11368, line: 29, type: !348)
!11378 = !DILocation(line: 29, column: 63, scope: !11367)
!11379 = !DILocation(line: 31, column: 27, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11367, file: !11368, line: 31, column: 6)
!11381 = !DILocation(line: 31, column: 6, scope: !11380)
!11382 = !DILocation(line: 31, column: 6, scope: !11367)
!11383 = !DILocation(line: 32, column: 8, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !11368, line: 32, column: 7)
!11385 = distinct !DILexicalBlock(scope: !11380, file: !11368, line: 31, column: 34)
!11386 = !DILocation(line: 32, column: 7, scope: !11385)
!11387 = !DILocation(line: 33, column: 4, scope: !11384)
!11388 = !DILocation(line: 35, column: 7, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11385, file: !11368, line: 35, column: 7)
!11390 = !DILocation(line: 35, column: 12, scope: !11389)
!11391 = !DILocation(line: 35, column: 7, scope: !11385)
!11392 = !DILocation(line: 36, column: 4, scope: !11389)
!11393 = !DILocation(line: 38, column: 10, scope: !11385)
!11394 = !DILocation(line: 38, column: 28, scope: !11385)
!11395 = !DILocation(line: 38, column: 41, scope: !11385)
!11396 = !DILocation(line: 38, column: 3, scope: !11385)
!11397 = !DILocation(line: 41, column: 6, scope: !11367)
!11398 = !DILocation(line: 42, column: 7, scope: !11367)
!11399 = !DILocation(line: 46, column: 15, scope: !11367)
!11400 = !DILocation(line: 374, column: 2, scope: !11370, inlinedAt: !11374)
!11401 = !DILocation(line: 376, column: 14, scope: !11370, inlinedAt: !11374)
!11402 = !{i32 383026}
!11403 = !DILocation(line: 377, column: 9, scope: !11370, inlinedAt: !11374)
!11404 = !DILocation(line: 377, column: 16, scope: !11370, inlinedAt: !11374)
!11405 = !DILocation(line: 46, column: 2, scope: !11367)
!11406 = !DILocation(line: 48, column: 1, scope: !11367)
!11407 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11408, file: !11408, line: 30, type: !11409, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11408 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11409 = !DISubroutineType(types: !11410)
!11410 = !{!7, !367}
!11411 = !DILocation(line: 366, column: 40, scope: !11370, inlinedAt: !11412)
!11412 = distinct !DILocation(line: 32, column: 9, scope: !11407)
!11413 = !DILocation(line: 368, column: 6, scope: !11370, inlinedAt: !11412)
!11414 = !DILocalVariable(name: "n", arg: 1, scope: !11407, file: !11408, line: 30, type: !367)
!11415 = !DILocation(line: 30, column: 21, scope: !11407)
!11416 = !DILocation(line: 32, column: 15, scope: !11407)
!11417 = !DILocation(line: 374, column: 2, scope: !11370, inlinedAt: !11412)
!11418 = !DILocation(line: 376, column: 14, scope: !11370, inlinedAt: !11412)
!11419 = !DILocation(line: 377, column: 9, scope: !11370, inlinedAt: !11412)
!11420 = !DILocation(line: 377, column: 16, scope: !11370, inlinedAt: !11412)
!11421 = !DILocation(line: 32, column: 18, scope: !11407)
!11422 = !DILocation(line: 32, column: 2, scope: !11407)
!11423 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11424, file: !11424, line: 137, type: !11425, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11424 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11425 = !DISubroutineType(types: !11426)
!11426 = !{!626, !2085, !3291, !1074, !1776}
!11427 = !DILocalVariable(name: "s", arg: 1, scope: !11423, file: !11424, line: 137, type: !2085)
!11428 = !DILocation(line: 137, column: 54, scope: !11423)
!11429 = !DILocalVariable(name: "object", arg: 2, scope: !11423, file: !11424, line: 137, type: !3291)
!11430 = !DILocation(line: 137, column: 69, scope: !11423)
!11431 = !DILocalVariable(name: "size", arg: 3, scope: !11423, file: !11424, line: 138, type: !1074)
!11432 = !DILocation(line: 138, column: 12, scope: !11423)
!11433 = !DILocalVariable(name: "flags", arg: 4, scope: !11423, file: !11424, line: 138, type: !1776)
!11434 = !DILocation(line: 138, column: 24, scope: !11423)
!11435 = !DILocation(line: 140, column: 17, scope: !11423)
!11436 = !DILocation(line: 140, column: 2, scope: !11423)
!11437 = distinct !DISubprogram(name: "pcnet32_check_media", scope: !3, file: !3, line: 2829, type: !619, scopeLine: 2830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11438 = !DILocalVariable(name: "dev", arg: 1, scope: !11437, file: !3, line: 2829, type: !326)
!11439 = !DILocation(line: 2829, column: 52, scope: !11437)
!11440 = !DILocalVariable(name: "verbose", arg: 2, scope: !11437, file: !3, line: 2829, type: !7)
!11441 = !DILocation(line: 2829, column: 61, scope: !11437)
!11442 = !DILocalVariable(name: "lp", scope: !11437, file: !3, line: 2831, type: !7248)
!11443 = !DILocation(line: 2831, column: 26, scope: !11437)
!11444 = !DILocation(line: 2831, column: 43, scope: !11437)
!11445 = !DILocation(line: 2831, column: 31, scope: !11437)
!11446 = !DILocalVariable(name: "curr_link", scope: !11437, file: !3, line: 2832, type: !7)
!11447 = !DILocation(line: 2832, column: 6, scope: !11437)
!11448 = !DILocalVariable(name: "prev_link", scope: !11437, file: !3, line: 2833, type: !7)
!11449 = !DILocation(line: 2833, column: 6, scope: !11437)
!11450 = !DILocation(line: 2833, column: 35, scope: !11437)
!11451 = !DILocation(line: 2833, column: 18, scope: !11437)
!11452 = !DILocalVariable(name: "bcr9", scope: !11437, file: !3, line: 2834, type: !1022)
!11453 = !DILocation(line: 2834, column: 6, scope: !11437)
!11454 = !DILocation(line: 2836, column: 6, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 2836, column: 6)
!11456 = !DILocation(line: 2836, column: 10, scope: !11455)
!11457 = !DILocation(line: 2836, column: 6, scope: !11437)
!11458 = !DILocation(line: 2837, column: 28, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 2836, column: 15)
!11460 = !DILocation(line: 2837, column: 32, scope: !11459)
!11461 = !DILocation(line: 2837, column: 15, scope: !11459)
!11462 = !DILocation(line: 2837, column: 13, scope: !11459)
!11463 = !DILocation(line: 2838, column: 2, scope: !11459)
!11464 = !DILocation(line: 2838, column: 13, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 2838, column: 13)
!11466 = !DILocation(line: 2838, column: 17, scope: !11465)
!11467 = !DILocation(line: 2838, column: 30, scope: !11465)
!11468 = !DILocation(line: 2838, column: 13, scope: !11455)
!11469 = !DILocalVariable(name: "ioaddr", scope: !11470, file: !3, line: 2839, type: !11471)
!11470 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 2838, column: 50)
!11471 = !DIDerivedType(tag: DW_TAG_typedef, name: "ulong", file: !313, line: 88, baseType: !348)
!11472 = !DILocation(line: 2839, column: 9, scope: !11470)
!11473 = !DILocation(line: 2839, column: 18, scope: !11470)
!11474 = !DILocation(line: 2839, column: 23, scope: !11470)
!11475 = !DILocation(line: 2841, column: 8, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 2841, column: 7)
!11477 = !DILocation(line: 2841, column: 12, scope: !11476)
!11478 = !DILocation(line: 2841, column: 20, scope: !11476)
!11479 = !DILocation(line: 2841, column: 23, scope: !11476)
!11480 = !DILocation(line: 2841, column: 27, scope: !11476)
!11481 = !DILocation(line: 2841, column: 7, scope: !11470)
!11482 = !DILocation(line: 2842, column: 17, scope: !11476)
!11483 = !DILocation(line: 2842, column: 21, scope: !11476)
!11484 = !DILocation(line: 2842, column: 24, scope: !11476)
!11485 = !DILocation(line: 2842, column: 33, scope: !11476)
!11486 = !DILocation(line: 2842, column: 44, scope: !11476)
!11487 = !DILocation(line: 2842, column: 14, scope: !11476)
!11488 = !DILocation(line: 2842, column: 4, scope: !11476)
!11489 = !DILocation(line: 2844, column: 14, scope: !11476)
!11490 = !DILocation(line: 2845, column: 2, scope: !11470)
!11491 = !DILocalVariable(name: "ioaddr", scope: !11492, file: !3, line: 2846, type: !11471)
!11492 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 2845, column: 9)
!11493 = !DILocation(line: 2846, column: 9, scope: !11492)
!11494 = !DILocation(line: 2846, column: 18, scope: !11492)
!11495 = !DILocation(line: 2846, column: 23, scope: !11492)
!11496 = !DILocation(line: 2847, column: 16, scope: !11492)
!11497 = !DILocation(line: 2847, column: 20, scope: !11492)
!11498 = !DILocation(line: 2847, column: 23, scope: !11492)
!11499 = !DILocation(line: 2847, column: 32, scope: !11492)
!11500 = !DILocation(line: 2847, column: 43, scope: !11492)
!11501 = !DILocation(line: 2847, column: 13, scope: !11492)
!11502 = !DILocation(line: 2849, column: 7, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 2849, column: 6)
!11504 = !DILocation(line: 2849, column: 6, scope: !11437)
!11505 = !DILocation(line: 2850, column: 7, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 2850, column: 7)
!11507 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 2849, column: 18)
!11508 = !DILocation(line: 2850, column: 17, scope: !11506)
!11509 = !DILocation(line: 2850, column: 20, scope: !11506)
!11510 = !DILocation(line: 2850, column: 7, scope: !11507)
!11511 = !DILocation(line: 2851, column: 22, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11506, file: !3, line: 2850, column: 29)
!11513 = !DILocation(line: 2851, column: 4, scope: !11512)
!11514 = !DILocation(line: 2852, column: 4, scope: !11512)
!11515 = !DILocation(line: 2852, column: 4, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 2852, column: 4)
!11517 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 2852, column: 4)
!11518 = !DILocation(line: 2852, column: 4, scope: !11517)
!11519 = !DILocation(line: 2853, column: 3, scope: !11512)
!11520 = !DILocation(line: 2854, column: 7, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 2854, column: 7)
!11522 = !DILocation(line: 2854, column: 11, scope: !11521)
!11523 = !DILocation(line: 2854, column: 20, scope: !11521)
!11524 = !DILocation(line: 2854, column: 7, scope: !11507)
!11525 = !DILocation(line: 2855, column: 39, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 2854, column: 25)
!11527 = !DILocation(line: 2855, column: 16, scope: !11526)
!11528 = !DILocation(line: 2855, column: 14, scope: !11526)
!11529 = !DILocation(line: 2856, column: 14, scope: !11526)
!11530 = !DILocation(line: 2857, column: 3, scope: !11526)
!11531 = !DILocation(line: 2858, column: 2, scope: !11507)
!11532 = !DILocation(line: 2858, column: 13, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 2858, column: 13)
!11534 = !DILocation(line: 2858, column: 21, scope: !11533)
!11535 = !DILocation(line: 2858, column: 25, scope: !11533)
!11536 = !DILocation(line: 2858, column: 13, scope: !11503)
!11537 = !DILocation(line: 2859, column: 20, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 2858, column: 36)
!11539 = !DILocation(line: 2859, column: 3, scope: !11538)
!11540 = !DILocation(line: 2860, column: 7, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 2860, column: 7)
!11542 = !DILocation(line: 2860, column: 11, scope: !11541)
!11543 = !DILocation(line: 2860, column: 7, scope: !11538)
!11544 = !DILocation(line: 2861, column: 8, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11546, file: !3, line: 2861, column: 8)
!11546 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 2860, column: 16)
!11547 = !DILocation(line: 2861, column: 8, scope: !11546)
!11548 = !DILocalVariable(name: "ecmd", scope: !11549, file: !3, line: 2862, type: !11550)
!11549 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2861, column: 28)
!11550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_cmd", file: !239, line: 96, size: 352, elements: !11551)
!11551 = !{!11552, !11553, !11554, !11555, !11556, !11557, !11558, !11559, !11560, !11561, !11562, !11563, !11564, !11565, !11566, !11567, !11568}
!11552 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !11550, file: !239, line: 97, baseType: !528, size: 32)
!11553 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !11550, file: !239, line: 98, baseType: !528, size: 32, offset: 32)
!11554 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !11550, file: !239, line: 99, baseType: !528, size: 32, offset: 64)
!11555 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !11550, file: !239, line: 100, baseType: !510, size: 16, offset: 96)
!11556 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !11550, file: !239, line: 101, baseType: !516, size: 8, offset: 112)
!11557 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !11550, file: !239, line: 102, baseType: !516, size: 8, offset: 120)
!11558 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !11550, file: !239, line: 103, baseType: !516, size: 8, offset: 128)
!11559 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !11550, file: !239, line: 104, baseType: !516, size: 8, offset: 136)
!11560 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !11550, file: !239, line: 105, baseType: !516, size: 8, offset: 144)
!11561 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !11550, file: !239, line: 106, baseType: !516, size: 8, offset: 152)
!11562 = !DIDerivedType(tag: DW_TAG_member, name: "maxtxpkt", scope: !11550, file: !239, line: 107, baseType: !528, size: 32, offset: 160)
!11563 = !DIDerivedType(tag: DW_TAG_member, name: "maxrxpkt", scope: !11550, file: !239, line: 108, baseType: !528, size: 32, offset: 192)
!11564 = !DIDerivedType(tag: DW_TAG_member, name: "speed_hi", scope: !11550, file: !239, line: 109, baseType: !510, size: 16, offset: 224)
!11565 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !11550, file: !239, line: 110, baseType: !516, size: 8, offset: 240)
!11566 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !11550, file: !239, line: 111, baseType: !516, size: 8, offset: 248)
!11567 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !11550, file: !239, line: 112, baseType: !528, size: 32, offset: 256)
!11568 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !11550, file: !239, line: 113, baseType: !2696, size: 64, offset: 288)
!11569 = !DILocation(line: 2862, column: 24, scope: !11549)
!11570 = !DILocation(line: 2864, column: 23, scope: !11549)
!11571 = !DILocation(line: 2864, column: 27, scope: !11549)
!11572 = !DILocation(line: 2864, column: 5, scope: !11549)
!11573 = !DILocation(line: 2865, column: 17, scope: !11549)
!11574 = !DILocation(line: 2866, column: 10, scope: !11549)
!11575 = !DILocation(line: 2867, column: 16, scope: !11549)
!11576 = !DILocation(line: 2867, column: 11, scope: !11549)
!11577 = !DILocation(line: 2867, column: 23, scope: !11549)
!11578 = !DILocation(line: 2867, column: 10, scope: !11549)
!11579 = !DILocation(line: 2865, column: 5, scope: !11549)
!11580 = !DILocation(line: 2869, column: 4, scope: !11549)
!11581 = !DILocation(line: 2870, column: 11, scope: !11546)
!11582 = !DILocation(line: 2870, column: 15, scope: !11546)
!11583 = !DILocation(line: 2870, column: 18, scope: !11546)
!11584 = !DILocation(line: 2870, column: 27, scope: !11546)
!11585 = !DILocation(line: 2870, column: 32, scope: !11546)
!11586 = !DILocation(line: 2870, column: 9, scope: !11546)
!11587 = !DILocation(line: 2871, column: 9, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11546, file: !3, line: 2871, column: 8)
!11589 = !DILocation(line: 2871, column: 14, scope: !11588)
!11590 = !DILocation(line: 2871, column: 29, scope: !11588)
!11591 = !DILocation(line: 2871, column: 33, scope: !11588)
!11592 = !DILocation(line: 2871, column: 40, scope: !11588)
!11593 = !DILocation(line: 2871, column: 26, scope: !11588)
!11594 = !DILocation(line: 2871, column: 8, scope: !11546)
!11595 = !DILocation(line: 2872, column: 9, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 2872, column: 9)
!11597 = distinct !DILexicalBlock(scope: !11588, file: !3, line: 2871, column: 53)
!11598 = !DILocation(line: 2872, column: 13, scope: !11596)
!11599 = !DILocation(line: 2872, column: 20, scope: !11596)
!11600 = !DILocation(line: 2872, column: 9, scope: !11597)
!11601 = !DILocation(line: 2873, column: 11, scope: !11596)
!11602 = !DILocation(line: 2873, column: 6, scope: !11596)
!11603 = !DILocation(line: 2875, column: 11, scope: !11596)
!11604 = !DILocation(line: 2876, column: 5, scope: !11597)
!11605 = !DILocation(line: 2876, column: 9, scope: !11597)
!11606 = !DILocation(line: 2876, column: 12, scope: !11597)
!11607 = !DILocation(line: 2876, column: 22, scope: !11597)
!11608 = !DILocation(line: 2876, column: 27, scope: !11597)
!11609 = !DILocation(line: 2876, column: 41, scope: !11597)
!11610 = !DILocation(line: 2877, column: 4, scope: !11597)
!11611 = !DILocation(line: 2878, column: 3, scope: !11546)
!11612 = !DILocation(line: 2879, column: 4, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 2878, column: 10)
!11614 = !DILocation(line: 2879, column: 4, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 2879, column: 4)
!11616 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 2879, column: 4)
!11617 = !DILocation(line: 2879, column: 4, scope: !11616)
!11618 = !DILocation(line: 2881, column: 2, scope: !11538)
!11619 = !DILocation(line: 2882, column: 1, scope: !11437)
!11620 = distinct !DISubprogram(name: "netif_carrier_ok", scope: !6, file: !6, line: 3976, type: !10675, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11621 = !DILocalVariable(name: "dev", arg: 1, scope: !11620, file: !6, line: 3976, type: !808)
!11622 = !DILocation(line: 3976, column: 62, scope: !11620)
!11623 = !DILocation(line: 3978, column: 44, scope: !11620)
!11624 = !DILocation(line: 3978, column: 49, scope: !11620)
!11625 = !DILocation(line: 3978, column: 10, scope: !11620)
!11626 = !DILocation(line: 3978, column: 9, scope: !11620)
!11627 = !DILocation(line: 3978, column: 2, scope: !11620)
!11628 = distinct !DISubprogram(name: "pcnet32_check_otherphy", scope: !3, file: !3, line: 2784, type: !438, scopeLine: 2785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11629 = !DILocalVariable(name: "dev", arg: 1, scope: !11628, file: !3, line: 2784, type: !326)
!11630 = !DILocation(line: 2784, column: 54, scope: !11628)
!11631 = !DILocalVariable(name: "lp", scope: !11628, file: !3, line: 2786, type: !7248)
!11632 = !DILocation(line: 2786, column: 26, scope: !11628)
!11633 = !DILocation(line: 2786, column: 43, scope: !11628)
!11634 = !DILocation(line: 2786, column: 31, scope: !11628)
!11635 = !DILocalVariable(name: "mii", scope: !11628, file: !3, line: 2787, type: !7641)
!11636 = !DILocation(line: 2787, column: 21, scope: !11628)
!11637 = !DILocation(line: 2787, column: 27, scope: !11628)
!11638 = !DILocation(line: 2787, column: 31, scope: !11628)
!11639 = !DILocalVariable(name: "bmcr", scope: !11628, file: !3, line: 2788, type: !616)
!11640 = !DILocation(line: 2788, column: 6, scope: !11628)
!11641 = !DILocalVariable(name: "i", scope: !11628, file: !3, line: 2789, type: !7)
!11642 = !DILocation(line: 2789, column: 6, scope: !11628)
!11643 = !DILocation(line: 2791, column: 9, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 2791, column: 2)
!11645 = !DILocation(line: 2791, column: 7, scope: !11644)
!11646 = !DILocation(line: 2791, column: 14, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11644, file: !3, line: 2791, column: 2)
!11648 = !DILocation(line: 2791, column: 16, scope: !11647)
!11649 = !DILocation(line: 2791, column: 2, scope: !11644)
!11650 = !DILocation(line: 2792, column: 7, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 2792, column: 7)
!11652 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 2791, column: 41)
!11653 = !DILocation(line: 2792, column: 12, scope: !11651)
!11654 = !DILocation(line: 2792, column: 16, scope: !11651)
!11655 = !DILocation(line: 2792, column: 23, scope: !11651)
!11656 = !DILocation(line: 2792, column: 9, scope: !11651)
!11657 = !DILocation(line: 2792, column: 7, scope: !11652)
!11658 = !DILocation(line: 2793, column: 4, scope: !11651)
!11659 = !DILocation(line: 2794, column: 7, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 2794, column: 7)
!11661 = !DILocation(line: 2794, column: 11, scope: !11660)
!11662 = !DILocation(line: 2794, column: 27, scope: !11660)
!11663 = !DILocation(line: 2794, column: 24, scope: !11660)
!11664 = !DILocation(line: 2794, column: 19, scope: !11660)
!11665 = !DILocation(line: 2794, column: 7, scope: !11652)
!11666 = !DILocation(line: 2795, column: 17, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 2794, column: 31)
!11668 = !DILocation(line: 2795, column: 8, scope: !11667)
!11669 = !DILocation(line: 2795, column: 15, scope: !11667)
!11670 = !DILocation(line: 2796, column: 8, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11667, file: !3, line: 2796, column: 8)
!11672 = !DILocation(line: 2796, column: 8, scope: !11667)
!11673 = !DILocation(line: 2798, column: 5, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2796, column: 27)
!11675 = !DILocation(line: 2798, column: 5, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 2798, column: 5)
!11677 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 2798, column: 5)
!11678 = !DILocation(line: 2798, column: 5, scope: !11677)
!11679 = !DILocation(line: 2803, column: 19, scope: !11674)
!11680 = !DILocation(line: 2803, column: 24, scope: !11674)
!11681 = !DILocation(line: 2803, column: 28, scope: !11674)
!11682 = !DILocation(line: 2803, column: 35, scope: !11674)
!11683 = !DILocation(line: 2803, column: 9, scope: !11674)
!11684 = !DILocation(line: 2802, column: 10, scope: !11674)
!11685 = !DILocation(line: 2804, column: 16, scope: !11674)
!11686 = !DILocation(line: 2804, column: 21, scope: !11674)
!11687 = !DILocation(line: 2804, column: 25, scope: !11674)
!11688 = !DILocation(line: 2804, column: 32, scope: !11674)
!11689 = !DILocation(line: 2805, column: 9, scope: !11674)
!11690 = !DILocation(line: 2805, column: 14, scope: !11674)
!11691 = !DILocation(line: 2804, column: 5, scope: !11674)
!11692 = !DILocation(line: 2808, column: 22, scope: !11674)
!11693 = !DILocation(line: 2808, column: 27, scope: !11674)
!11694 = !DILocation(line: 2808, column: 12, scope: !11674)
!11695 = !DILocation(line: 2808, column: 10, scope: !11674)
!11696 = !DILocation(line: 2809, column: 16, scope: !11674)
!11697 = !DILocation(line: 2809, column: 21, scope: !11674)
!11698 = !DILocation(line: 2810, column: 9, scope: !11674)
!11699 = !DILocation(line: 2810, column: 14, scope: !11674)
!11700 = !DILocation(line: 2809, column: 5, scope: !11674)
!11701 = !DILocation(line: 2813, column: 25, scope: !11674)
!11702 = !DILocation(line: 2813, column: 5, scope: !11674)
!11703 = !DILocation(line: 2813, column: 9, scope: !11674)
!11704 = !DILocation(line: 2813, column: 16, scope: !11674)
!11705 = !DILocation(line: 2813, column: 23, scope: !11674)
!11706 = !DILocation(line: 2814, column: 5, scope: !11674)
!11707 = !DILocation(line: 2816, column: 3, scope: !11667)
!11708 = !DILocation(line: 2817, column: 2, scope: !11652)
!11709 = !DILocation(line: 2791, column: 37, scope: !11647)
!11710 = !DILocation(line: 2791, column: 2, scope: !11647)
!11711 = distinct !{!11711, !11649, !11712}
!11712 = !DILocation(line: 2817, column: 2, scope: !11644)
!11713 = !DILocation(line: 2818, column: 2, scope: !11628)
!11714 = !DILocation(line: 2819, column: 1, scope: !11628)
!11715 = distinct !DISubprogram(name: "ethtool_cmd_speed", scope: !239, file: !239, line: 123, type: !11716, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11716 = !DISubroutineType(types: !11717)
!11717 = !{!528, !11718}
!11718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11719, size: 64)
!11719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11550)
!11720 = !DILocalVariable(name: "ep", arg: 1, scope: !11715, file: !239, line: 123, type: !11718)
!11721 = !DILocation(line: 123, column: 65, scope: !11715)
!11722 = !DILocation(line: 125, column: 10, scope: !11715)
!11723 = !DILocation(line: 125, column: 14, scope: !11715)
!11724 = !DILocation(line: 125, column: 23, scope: !11715)
!11725 = !DILocation(line: 125, column: 32, scope: !11715)
!11726 = !DILocation(line: 125, column: 36, scope: !11715)
!11727 = !DILocation(line: 125, column: 30, scope: !11715)
!11728 = !DILocation(line: 125, column: 2, scope: !11715)
!11729 = distinct !DISubprogram(name: "pcnet32_open", scope: !3, file: !3, line: 2077, type: !438, scopeLine: 2078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!11730 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !11731)
!11731 = distinct !DILocation(line: 2291, column: 2, scope: !11729)
!11732 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !11731)
!11733 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !11734)
!11734 = distinct !DILocation(line: 2306, column: 2, scope: !11729)
!11735 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !11734)
!11736 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !11737)
!11737 = distinct !DILocation(line: 2093, column: 2, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !3, line: 2093, column: 2)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 2093, column: 2)
!11740 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 2093, column: 2)
!11741 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 2093, column: 2)
!11742 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2093, column: 2)
!11743 = !DILocalVariable(name: "dev", arg: 1, scope: !11729, file: !3, line: 2077, type: !326)
!11744 = !DILocation(line: 2077, column: 44, scope: !11729)
!11745 = !DILocalVariable(name: "lp", scope: !11729, file: !3, line: 2079, type: !7248)
!11746 = !DILocation(line: 2079, column: 26, scope: !11729)
!11747 = !DILocation(line: 2079, column: 43, scope: !11729)
!11748 = !DILocation(line: 2079, column: 31, scope: !11729)
!11749 = !DILocalVariable(name: "pdev", scope: !11729, file: !3, line: 2080, type: !7284)
!11750 = !DILocation(line: 2080, column: 18, scope: !11729)
!11751 = !DILocation(line: 2080, column: 25, scope: !11729)
!11752 = !DILocation(line: 2080, column: 29, scope: !11729)
!11753 = !DILocalVariable(name: "ioaddr", scope: !11729, file: !3, line: 2081, type: !348)
!11754 = !DILocation(line: 2081, column: 16, scope: !11729)
!11755 = !DILocation(line: 2081, column: 25, scope: !11729)
!11756 = !DILocation(line: 2081, column: 30, scope: !11729)
!11757 = !DILocalVariable(name: "val", scope: !11729, file: !3, line: 2082, type: !616)
!11758 = !DILocation(line: 2082, column: 6, scope: !11729)
!11759 = !DILocalVariable(name: "i", scope: !11729, file: !3, line: 2083, type: !7)
!11760 = !DILocation(line: 2083, column: 6, scope: !11729)
!11761 = !DILocalVariable(name: "rc", scope: !11729, file: !3, line: 2084, type: !7)
!11762 = !DILocation(line: 2084, column: 6, scope: !11729)
!11763 = !DILocalVariable(name: "flags", scope: !11729, file: !3, line: 2085, type: !348)
!11764 = !DILocation(line: 2085, column: 16, scope: !11729)
!11765 = !DILocation(line: 2087, column: 18, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2087, column: 6)
!11767 = !DILocation(line: 2087, column: 23, scope: !11766)
!11768 = !DILocation(line: 2088, column: 4, scope: !11766)
!11769 = !DILocation(line: 2088, column: 8, scope: !11766)
!11770 = !DILocation(line: 2088, column: 38, scope: !11766)
!11771 = !DILocation(line: 2088, column: 43, scope: !11766)
!11772 = !DILocation(line: 2089, column: 12, scope: !11766)
!11773 = !DILocation(line: 2089, column: 4, scope: !11766)
!11774 = !DILocation(line: 2087, column: 6, scope: !11766)
!11775 = !DILocation(line: 2087, column: 6, scope: !11729)
!11776 = !DILocation(line: 2090, column: 3, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 2089, column: 18)
!11778 = !DILocation(line: 2093, column: 2, scope: !11729)
!11779 = !DILocation(line: 2093, column: 2, scope: !11742)
!11780 = !DILocalVariable(name: "__dummy", scope: !11781, file: !3, line: 2093, type: !348)
!11781 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 2093, column: 2)
!11782 = !DILocation(line: 2093, column: 2, scope: !11781)
!11783 = !DILocalVariable(name: "__dummy2", scope: !11781, file: !3, line: 2093, type: !348)
!11784 = !DILocation(line: 2093, column: 2, scope: !11741)
!11785 = !DILocation(line: 2093, column: 2, scope: !11740)
!11786 = !DILocation(line: 2093, column: 2, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 2093, column: 2)
!11788 = !DILocalVariable(name: "__dummy", scope: !11789, file: !3, line: 2093, type: !348)
!11789 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 2093, column: 2)
!11790 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 2093, column: 2)
!11791 = !DILocation(line: 2093, column: 2, scope: !11789)
!11792 = !DILocalVariable(name: "__dummy2", scope: !11789, file: !3, line: 2093, type: !348)
!11793 = !DILocation(line: 2093, column: 2, scope: !11790)
!11794 = !DILocation(line: 2093, column: 2, scope: !11739)
!11795 = !{i32 -2139637139}
!11796 = !DILocation(line: 2093, column: 2, scope: !11738)
!11797 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !11737)
!11798 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !11737)
!11799 = !DILocation(line: 2095, column: 27, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2095, column: 6)
!11801 = !DILocation(line: 2095, column: 32, scope: !11800)
!11802 = !DILocation(line: 2095, column: 7, scope: !11800)
!11803 = !DILocation(line: 2095, column: 6, scope: !11729)
!11804 = !DILocation(line: 2096, column: 6, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 2095, column: 43)
!11806 = !DILocation(line: 2097, column: 3, scope: !11805)
!11807 = !DILocation(line: 2101, column: 2, scope: !11729)
!11808 = !DILocation(line: 2101, column: 6, scope: !11729)
!11809 = !DILocation(line: 2101, column: 9, scope: !11729)
!11810 = !DILocation(line: 2101, column: 15, scope: !11729)
!11811 = !DILocation(line: 2104, column: 2, scope: !11729)
!11812 = !DILocation(line: 2104, column: 6, scope: !11729)
!11813 = !DILocation(line: 2104, column: 9, scope: !11729)
!11814 = !DILocation(line: 2104, column: 19, scope: !11729)
!11815 = !DILocation(line: 2106, column: 2, scope: !11729)
!11816 = !DILocation(line: 2106, column: 2, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 2106, column: 2)
!11818 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2106, column: 2)
!11819 = !DILocation(line: 2106, column: 2, scope: !11818)
!11820 = !DILocation(line: 2112, column: 19, scope: !11729)
!11821 = !DILocation(line: 2112, column: 23, scope: !11729)
!11822 = !DILocation(line: 2112, column: 31, scope: !11729)
!11823 = !DILocation(line: 2112, column: 17, scope: !11729)
!11824 = !DILocation(line: 2112, column: 16, scope: !11729)
!11825 = !DILocation(line: 2112, column: 2, scope: !11729)
!11826 = !DILocation(line: 2112, column: 6, scope: !11729)
!11827 = !DILocation(line: 2112, column: 14, scope: !11729)
!11828 = !DILocation(line: 2113, column: 19, scope: !11729)
!11829 = !DILocation(line: 2113, column: 23, scope: !11729)
!11830 = !DILocation(line: 2113, column: 31, scope: !11729)
!11831 = !DILocation(line: 2113, column: 17, scope: !11729)
!11832 = !DILocation(line: 2113, column: 16, scope: !11729)
!11833 = !DILocation(line: 2113, column: 2, scope: !11729)
!11834 = !DILocation(line: 2113, column: 6, scope: !11729)
!11835 = !DILocation(line: 2113, column: 14, scope: !11729)
!11836 = !DILocation(line: 2114, column: 15, scope: !11729)
!11837 = !DILocation(line: 2114, column: 19, scope: !11729)
!11838 = !DILocation(line: 2114, column: 27, scope: !11729)
!11839 = !DILocation(line: 2114, column: 13, scope: !11729)
!11840 = !DILocation(line: 2114, column: 12, scope: !11729)
!11841 = !DILocation(line: 2114, column: 2, scope: !11729)
!11842 = !DILocation(line: 2114, column: 6, scope: !11729)
!11843 = !DILocation(line: 2114, column: 10, scope: !11729)
!11844 = !DILocation(line: 2117, column: 8, scope: !11729)
!11845 = !DILocation(line: 2117, column: 12, scope: !11729)
!11846 = !DILocation(line: 2117, column: 15, scope: !11729)
!11847 = !DILocation(line: 2117, column: 24, scope: !11729)
!11848 = !DILocation(line: 2117, column: 35, scope: !11729)
!11849 = !DILocation(line: 2117, column: 6, scope: !11729)
!11850 = !DILocation(line: 2118, column: 6, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2118, column: 6)
!11852 = !DILocation(line: 2118, column: 10, scope: !11851)
!11853 = !DILocation(line: 2118, column: 18, scope: !11851)
!11854 = !DILocation(line: 2118, column: 6, scope: !11729)
!11855 = !DILocation(line: 2119, column: 7, scope: !11851)
!11856 = !DILocation(line: 2119, column: 3, scope: !11851)
!11857 = !DILocation(line: 2120, column: 2, scope: !11729)
!11858 = !DILocation(line: 2120, column: 6, scope: !11729)
!11859 = !DILocation(line: 2120, column: 9, scope: !11729)
!11860 = !DILocation(line: 2120, column: 19, scope: !11729)
!11861 = !DILocation(line: 2120, column: 30, scope: !11729)
!11862 = !DILocation(line: 2123, column: 6, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2123, column: 6)
!11864 = !DILocation(line: 2123, column: 10, scope: !11863)
!11865 = !DILocation(line: 2123, column: 17, scope: !11863)
!11866 = !DILocation(line: 2123, column: 6, scope: !11729)
!11867 = !DILocation(line: 2124, column: 9, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 2123, column: 30)
!11869 = !DILocation(line: 2124, column: 13, scope: !11868)
!11870 = !DILocation(line: 2124, column: 16, scope: !11868)
!11871 = !DILocation(line: 2124, column: 25, scope: !11868)
!11872 = !DILocation(line: 2124, column: 36, scope: !11868)
!11873 = !DILocation(line: 2124, column: 7, scope: !11868)
!11874 = !DILocation(line: 2125, column: 7, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2125, column: 7)
!11876 = !DILocation(line: 2125, column: 11, scope: !11875)
!11877 = !DILocation(line: 2125, column: 19, scope: !11875)
!11878 = !DILocation(line: 2125, column: 7, scope: !11868)
!11879 = !DILocation(line: 2126, column: 8, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 2125, column: 38)
!11881 = !DILocation(line: 2127, column: 8, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 2127, column: 8)
!11883 = !DILocation(line: 2127, column: 12, scope: !11882)
!11884 = !DILocation(line: 2127, column: 20, scope: !11882)
!11885 = !DILocation(line: 2127, column: 8, scope: !11880)
!11886 = !DILocation(line: 2128, column: 9, scope: !11882)
!11887 = !DILocation(line: 2128, column: 5, scope: !11882)
!11888 = !DILocation(line: 2129, column: 3, scope: !11880)
!11889 = !DILocation(line: 2129, column: 14, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 2129, column: 14)
!11891 = !DILocation(line: 2129, column: 18, scope: !11890)
!11892 = !DILocation(line: 2129, column: 26, scope: !11890)
!11893 = !DILocation(line: 2129, column: 14, scope: !11875)
!11894 = !DILocation(line: 2131, column: 8, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 2131, column: 8)
!11896 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 2129, column: 47)
!11897 = !DILocation(line: 2131, column: 12, scope: !11895)
!11898 = !DILocation(line: 2131, column: 25, scope: !11895)
!11899 = !DILocation(line: 2131, column: 8, scope: !11896)
!11900 = !DILocation(line: 2132, column: 9, scope: !11895)
!11901 = !DILocation(line: 2132, column: 5, scope: !11895)
!11902 = !DILocation(line: 2133, column: 3, scope: !11896)
!11903 = !DILocation(line: 2134, column: 3, scope: !11868)
!11904 = !DILocation(line: 2134, column: 7, scope: !11868)
!11905 = !DILocation(line: 2134, column: 10, scope: !11868)
!11906 = !DILocation(line: 2134, column: 20, scope: !11868)
!11907 = !DILocation(line: 2134, column: 31, scope: !11868)
!11908 = !DILocation(line: 2135, column: 2, scope: !11868)
!11909 = !DILocation(line: 2138, column: 8, scope: !11729)
!11910 = !DILocation(line: 2138, column: 12, scope: !11729)
!11911 = !DILocation(line: 2138, column: 15, scope: !11729)
!11912 = !DILocation(line: 2138, column: 24, scope: !11729)
!11913 = !DILocation(line: 2138, column: 37, scope: !11729)
!11914 = !DILocation(line: 2138, column: 6, scope: !11729)
!11915 = !DILocation(line: 2139, column: 7, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2139, column: 6)
!11917 = !DILocation(line: 2139, column: 11, scope: !11916)
!11918 = !DILocation(line: 2139, column: 19, scope: !11916)
!11919 = !DILocation(line: 2139, column: 43, scope: !11916)
!11920 = !DILocation(line: 2139, column: 6, scope: !11729)
!11921 = !DILocation(line: 2140, column: 7, scope: !11916)
!11922 = !DILocation(line: 2140, column: 3, scope: !11916)
!11923 = !DILocation(line: 2141, column: 2, scope: !11729)
!11924 = !DILocation(line: 2141, column: 6, scope: !11729)
!11925 = !DILocation(line: 2141, column: 9, scope: !11729)
!11926 = !DILocation(line: 2141, column: 19, scope: !11729)
!11927 = !DILocation(line: 2141, column: 32, scope: !11729)
!11928 = !DILocation(line: 2144, column: 6, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2144, column: 6)
!11930 = !DILocation(line: 2144, column: 11, scope: !11929)
!11931 = !DILocation(line: 2144, column: 14, scope: !11929)
!11932 = !DILocation(line: 2144, column: 20, scope: !11929)
!11933 = !DILocation(line: 2144, column: 37, scope: !11929)
!11934 = !DILocation(line: 2144, column: 57, scope: !11929)
!11935 = !DILocation(line: 2145, column: 7, scope: !11929)
!11936 = !DILocation(line: 2145, column: 13, scope: !11929)
!11937 = !DILocation(line: 2145, column: 30, scope: !11929)
!11938 = !DILocation(line: 2145, column: 60, scope: !11929)
!11939 = !DILocation(line: 2146, column: 7, scope: !11929)
!11940 = !DILocation(line: 2146, column: 13, scope: !11929)
!11941 = !DILocation(line: 2146, column: 30, scope: !11929)
!11942 = !DILocation(line: 2144, column: 6, scope: !11729)
!11943 = !DILocation(line: 2147, column: 7, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !3, line: 2147, column: 7)
!11945 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 2146, column: 62)
!11946 = !DILocation(line: 2147, column: 11, scope: !11944)
!11947 = !DILocation(line: 2147, column: 19, scope: !11944)
!11948 = !DILocation(line: 2147, column: 7, scope: !11945)
!11949 = !DILocation(line: 2148, column: 4, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 2147, column: 40)
!11951 = !DILocation(line: 2148, column: 8, scope: !11950)
!11952 = !DILocation(line: 2148, column: 16, scope: !11950)
!11953 = !DILocation(line: 2149, column: 4, scope: !11950)
!11954 = !DILocation(line: 2149, column: 4, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 2149, column: 4)
!11956 = distinct !DILexicalBlock(scope: !11950, file: !3, line: 2149, column: 4)
!11957 = !DILocation(line: 2149, column: 4, scope: !11956)
!11958 = !DILocation(line: 2151, column: 3, scope: !11950)
!11959 = !DILocation(line: 2152, column: 2, scope: !11945)
!11960 = !DILocation(line: 2153, column: 6, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2153, column: 6)
!11962 = !DILocation(line: 2153, column: 10, scope: !11961)
!11963 = !DILocation(line: 2153, column: 19, scope: !11961)
!11964 = !DILocation(line: 2153, column: 6, scope: !11729)
!11965 = !DILocation(line: 2159, column: 7, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 2159, column: 7)
!11967 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 2153, column: 24)
!11968 = !DILocation(line: 2159, column: 11, scope: !11966)
!11969 = !DILocation(line: 2159, column: 15, scope: !11966)
!11970 = !DILocation(line: 2159, column: 20, scope: !11966)
!11971 = !DILocation(line: 2159, column: 24, scope: !11966)
!11972 = !DILocation(line: 2159, column: 32, scope: !11966)
!11973 = !DILocation(line: 2159, column: 7, scope: !11967)
!11974 = !DILocation(line: 2160, column: 4, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 2159, column: 54)
!11976 = !DILocation(line: 2160, column: 8, scope: !11975)
!11977 = !DILocation(line: 2160, column: 11, scope: !11975)
!11978 = !DILocation(line: 2160, column: 21, scope: !11975)
!11979 = !DILocation(line: 2161, column: 6, scope: !11975)
!11980 = !DILocation(line: 2161, column: 10, scope: !11975)
!11981 = !DILocation(line: 2161, column: 13, scope: !11975)
!11982 = !DILocation(line: 2161, column: 22, scope: !11975)
!11983 = !DILocation(line: 2161, column: 34, scope: !11975)
!11984 = !DILocation(line: 2163, column: 10, scope: !11975)
!11985 = !DILocation(line: 2163, column: 14, scope: !11975)
!11986 = !DILocation(line: 2163, column: 17, scope: !11975)
!11987 = !DILocation(line: 2163, column: 26, scope: !11975)
!11988 = !DILocation(line: 2163, column: 38, scope: !11975)
!11989 = !DILocation(line: 2163, column: 8, scope: !11975)
!11990 = !DILocation(line: 2164, column: 8, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 2164, column: 8)
!11992 = !DILocation(line: 2164, column: 12, scope: !11991)
!11993 = !DILocation(line: 2164, column: 20, scope: !11991)
!11994 = !DILocation(line: 2164, column: 8, scope: !11975)
!11995 = !DILocation(line: 2165, column: 9, scope: !11991)
!11996 = !DILocation(line: 2165, column: 5, scope: !11991)
!11997 = !DILocation(line: 2166, column: 8, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 2166, column: 8)
!11999 = !DILocation(line: 2166, column: 12, scope: !11998)
!12000 = !DILocation(line: 2166, column: 20, scope: !11998)
!12001 = !DILocation(line: 2166, column: 8, scope: !11975)
!12002 = !DILocation(line: 2167, column: 9, scope: !11998)
!12003 = !DILocation(line: 2167, column: 5, scope: !11998)
!12004 = !DILocation(line: 2168, column: 4, scope: !11975)
!12005 = !DILocation(line: 2168, column: 8, scope: !11975)
!12006 = !DILocation(line: 2168, column: 11, scope: !11975)
!12007 = !DILocation(line: 2168, column: 21, scope: !11975)
!12008 = !DILocation(line: 2168, column: 33, scope: !11975)
!12009 = !DILocation(line: 2169, column: 3, scope: !11975)
!12010 = !DILocation(line: 2170, column: 8, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 2170, column: 8)
!12012 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 2169, column: 10)
!12013 = !DILocation(line: 2170, column: 12, scope: !12011)
!12014 = !DILocation(line: 2170, column: 20, scope: !12011)
!12015 = !DILocation(line: 2170, column: 8, scope: !12012)
!12016 = !DILocation(line: 2171, column: 5, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 2170, column: 41)
!12018 = !DILocation(line: 2171, column: 9, scope: !12017)
!12019 = !DILocation(line: 2171, column: 12, scope: !12017)
!12020 = !DILocation(line: 2171, column: 22, scope: !12017)
!12021 = !DILocation(line: 2172, column: 7, scope: !12017)
!12022 = !DILocation(line: 2172, column: 11, scope: !12017)
!12023 = !DILocation(line: 2172, column: 14, scope: !12017)
!12024 = !DILocation(line: 2172, column: 23, scope: !12017)
!12025 = !DILocation(line: 2173, column: 19, scope: !12017)
!12026 = !DILocation(line: 2175, column: 11, scope: !12017)
!12027 = !DILocation(line: 2175, column: 15, scope: !12017)
!12028 = !DILocation(line: 2175, column: 18, scope: !12017)
!12029 = !DILocation(line: 2175, column: 27, scope: !12017)
!12030 = !DILocation(line: 2175, column: 39, scope: !12017)
!12031 = !DILocation(line: 2175, column: 9, scope: !12017)
!12032 = !DILocation(line: 2176, column: 9, scope: !12017)
!12033 = !DILocation(line: 2177, column: 5, scope: !12017)
!12034 = !DILocation(line: 2177, column: 9, scope: !12017)
!12035 = !DILocation(line: 2177, column: 12, scope: !12017)
!12036 = !DILocation(line: 2177, column: 22, scope: !12017)
!12037 = !DILocation(line: 2177, column: 34, scope: !12017)
!12038 = !DILocation(line: 2178, column: 4, scope: !12017)
!12039 = !DILocation(line: 2180, column: 2, scope: !11967)
!12040 = !DILocalVariable(name: "first_phy", scope: !12041, file: !3, line: 2181, type: !7)
!12041 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 2180, column: 9)
!12042 = !DILocation(line: 2181, column: 7, scope: !12041)
!12043 = !DILocalVariable(name: "bmcr", scope: !12041, file: !3, line: 2182, type: !616)
!12044 = !DILocation(line: 2182, column: 7, scope: !12041)
!12045 = !DILocalVariable(name: "bcr9", scope: !12041, file: !3, line: 2183, type: !1022)
!12046 = !DILocation(line: 2183, column: 7, scope: !12041)
!12047 = !DILocalVariable(name: "ecmd", scope: !12041, file: !3, line: 2184, type: !11550)
!12048 = !DILocation(line: 2184, column: 22, scope: !12041)
!12049 = !DILocation(line: 2190, column: 9, scope: !12041)
!12050 = !DILocation(line: 2190, column: 13, scope: !12041)
!12051 = !DILocation(line: 2190, column: 16, scope: !12041)
!12052 = !DILocation(line: 2190, column: 25, scope: !12041)
!12053 = !DILocation(line: 2190, column: 7, scope: !12041)
!12054 = !DILocation(line: 2191, column: 3, scope: !12041)
!12055 = !DILocation(line: 2191, column: 7, scope: !12041)
!12056 = !DILocation(line: 2191, column: 10, scope: !12041)
!12057 = !DILocation(line: 2191, column: 20, scope: !12041)
!12058 = !DILocation(line: 2191, column: 31, scope: !12041)
!12059 = !DILocation(line: 2191, column: 35, scope: !12041)
!12060 = !DILocation(line: 2192, column: 9, scope: !12041)
!12061 = !DILocation(line: 2192, column: 13, scope: !12041)
!12062 = !DILocation(line: 2192, column: 16, scope: !12041)
!12063 = !DILocation(line: 2192, column: 25, scope: !12041)
!12064 = !DILocation(line: 2192, column: 7, scope: !12041)
!12065 = !DILocation(line: 2193, column: 3, scope: !12041)
!12066 = !DILocation(line: 2193, column: 7, scope: !12041)
!12067 = !DILocation(line: 2193, column: 10, scope: !12041)
!12068 = !DILocation(line: 2193, column: 20, scope: !12041)
!12069 = !DILocation(line: 2193, column: 32, scope: !12041)
!12070 = !DILocation(line: 2193, column: 36, scope: !12041)
!12071 = !DILocation(line: 2195, column: 9, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 2195, column: 7)
!12073 = !DILocation(line: 2195, column: 13, scope: !12072)
!12074 = !DILocation(line: 2195, column: 21, scope: !12072)
!12075 = !DILocation(line: 2195, column: 7, scope: !12041)
!12076 = !DILocation(line: 2197, column: 9, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 2195, column: 43)
!12078 = !DILocation(line: 2197, column: 14, scope: !12077)
!12079 = !DILocation(line: 2198, column: 9, scope: !12077)
!12080 = !DILocation(line: 2198, column: 21, scope: !12077)
!12081 = !DILocation(line: 2199, column: 9, scope: !12077)
!12082 = !DILocation(line: 2199, column: 17, scope: !12077)
!12083 = !DILocation(line: 2201, column: 13, scope: !12077)
!12084 = !DILocation(line: 2201, column: 17, scope: !12077)
!12085 = !DILocation(line: 2201, column: 25, scope: !12077)
!12086 = !DILocation(line: 2201, column: 12, scope: !12077)
!12087 = !DILocation(line: 2200, column: 4, scope: !12077)
!12088 = !DILocation(line: 2203, column: 11, scope: !12077)
!12089 = !DILocation(line: 2203, column: 15, scope: !12077)
!12090 = !DILocation(line: 2203, column: 18, scope: !12077)
!12091 = !DILocation(line: 2203, column: 27, scope: !12077)
!12092 = !DILocation(line: 2203, column: 9, scope: !12077)
!12093 = !DILocation(line: 2205, column: 8, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 2205, column: 8)
!12095 = !DILocation(line: 2205, column: 12, scope: !12094)
!12096 = !DILocation(line: 2205, column: 20, scope: !12094)
!12097 = !DILocation(line: 2205, column: 8, scope: !12077)
!12098 = !DILocation(line: 2206, column: 10, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12094, file: !3, line: 2205, column: 39)
!12100 = !DILocation(line: 2206, column: 17, scope: !12099)
!12101 = !DILocation(line: 2207, column: 10, scope: !12099)
!12102 = !DILocation(line: 2208, column: 4, scope: !12099)
!12103 = !DILocation(line: 2209, column: 10, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12094, file: !3, line: 2208, column: 11)
!12105 = !DILocation(line: 2209, column: 17, scope: !12104)
!12106 = !DILocation(line: 2210, column: 10, scope: !12104)
!12107 = !DILocation(line: 2212, column: 4, scope: !12077)
!12108 = !DILocation(line: 2212, column: 8, scope: !12077)
!12109 = !DILocation(line: 2212, column: 11, scope: !12077)
!12110 = !DILocation(line: 2212, column: 21, scope: !12077)
!12111 = !DILocation(line: 2212, column: 32, scope: !12077)
!12112 = !DILocation(line: 2213, column: 3, scope: !12077)
!12113 = !DILocation(line: 2215, column: 10, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 2215, column: 3)
!12115 = !DILocation(line: 2215, column: 8, scope: !12114)
!12116 = !DILocation(line: 2215, column: 15, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 2215, column: 3)
!12118 = !DILocation(line: 2215, column: 17, scope: !12117)
!12119 = !DILocation(line: 2215, column: 3, scope: !12114)
!12120 = !DILocation(line: 2216, column: 8, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !3, line: 2216, column: 8)
!12122 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 2215, column: 42)
!12123 = !DILocation(line: 2216, column: 12, scope: !12121)
!12124 = !DILocation(line: 2216, column: 28, scope: !12121)
!12125 = !DILocation(line: 2216, column: 25, scope: !12121)
!12126 = !DILocation(line: 2216, column: 20, scope: !12121)
!12127 = !DILocation(line: 2216, column: 8, scope: !12122)
!12128 = !DILocation(line: 2218, column: 22, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12121, file: !3, line: 2216, column: 32)
!12130 = !DILocation(line: 2218, column: 27, scope: !12129)
!12131 = !DILocation(line: 2218, column: 12, scope: !12129)
!12132 = !DILocation(line: 2218, column: 10, scope: !12129)
!12133 = !DILocation(line: 2219, column: 9, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2219, column: 9)
!12135 = !DILocation(line: 2219, column: 19, scope: !12134)
!12136 = !DILocation(line: 2219, column: 9, scope: !12129)
!12137 = !DILocation(line: 2220, column: 18, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 2219, column: 26)
!12139 = !DILocation(line: 2220, column: 16, scope: !12138)
!12140 = !DILocation(line: 2221, column: 17, scope: !12138)
!12141 = !DILocation(line: 2221, column: 22, scope: !12138)
!12142 = !DILocation(line: 2222, column: 10, scope: !12138)
!12143 = !DILocation(line: 2222, column: 15, scope: !12138)
!12144 = !DILocation(line: 2221, column: 6, scope: !12138)
!12145 = !DILocation(line: 2223, column: 5, scope: !12138)
!12146 = !DILocation(line: 2224, column: 17, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 2223, column: 12)
!12148 = !DILocation(line: 2224, column: 22, scope: !12147)
!12149 = !DILocation(line: 2225, column: 10, scope: !12147)
!12150 = !DILocation(line: 2225, column: 15, scope: !12147)
!12151 = !DILocation(line: 2224, column: 6, scope: !12147)
!12152 = !DILocation(line: 2228, column: 25, scope: !12129)
!12153 = !DILocation(line: 2228, column: 5, scope: !12129)
!12154 = !DILocation(line: 2228, column: 9, scope: !12129)
!12155 = !DILocation(line: 2228, column: 16, scope: !12129)
!12156 = !DILocation(line: 2228, column: 23, scope: !12129)
!12157 = !DILocation(line: 2229, column: 24, scope: !12129)
!12158 = !DILocation(line: 2229, column: 10, scope: !12129)
!12159 = !DILocation(line: 2229, column: 22, scope: !12129)
!12160 = !DILocation(line: 2230, column: 9, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2230, column: 9)
!12162 = !DILocation(line: 2230, column: 13, scope: !12161)
!12163 = !DILocation(line: 2230, column: 21, scope: !12161)
!12164 = !DILocation(line: 2230, column: 9, scope: !12129)
!12165 = !DILocation(line: 2231, column: 24, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 2230, column: 42)
!12167 = !DILocation(line: 2231, column: 28, scope: !12166)
!12168 = !DILocation(line: 2231, column: 6, scope: !12166)
!12169 = !DILocation(line: 2232, column: 11, scope: !12166)
!12170 = !DILocation(line: 2232, column: 19, scope: !12166)
!12171 = !DILocation(line: 2233, column: 5, scope: !12166)
!12172 = !DILocation(line: 2234, column: 23, scope: !12129)
!12173 = !DILocation(line: 2234, column: 27, scope: !12129)
!12174 = !DILocation(line: 2234, column: 5, scope: !12129)
!12175 = !DILocation(line: 2235, column: 4, scope: !12129)
!12176 = !DILocation(line: 2236, column: 3, scope: !12122)
!12177 = !DILocation(line: 2215, column: 38, scope: !12117)
!12178 = !DILocation(line: 2215, column: 3, scope: !12117)
!12179 = distinct !{!12179, !12119, !12180}
!12180 = !DILocation(line: 2236, column: 3, scope: !12114)
!12181 = !DILocation(line: 2237, column: 23, scope: !12041)
!12182 = !DILocation(line: 2237, column: 3, scope: !12041)
!12183 = !DILocation(line: 2237, column: 7, scope: !12041)
!12184 = !DILocation(line: 2237, column: 14, scope: !12041)
!12185 = !DILocation(line: 2237, column: 21, scope: !12041)
!12186 = !DILocation(line: 2238, column: 3, scope: !12041)
!12187 = !DILocation(line: 2238, column: 3, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2238, column: 3)
!12189 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 2238, column: 3)
!12190 = !DILocation(line: 2238, column: 3, scope: !12189)
!12191 = !DILocation(line: 2250, column: 6, scope: !11729)
!12192 = !DILocation(line: 2249, column: 2, scope: !11729)
!12193 = !DILocation(line: 2249, column: 6, scope: !11729)
!12194 = !DILocation(line: 2249, column: 18, scope: !11729)
!12195 = !DILocation(line: 2249, column: 23, scope: !11729)
!12196 = !DILocation(line: 2251, column: 25, scope: !11729)
!12197 = !DILocation(line: 2251, column: 2, scope: !11729)
!12198 = !DILocation(line: 2253, column: 24, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2253, column: 6)
!12200 = !DILocation(line: 2253, column: 6, scope: !12199)
!12201 = !DILocation(line: 2253, column: 6, scope: !11729)
!12202 = !DILocation(line: 2254, column: 6, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12199, file: !3, line: 2253, column: 30)
!12204 = !DILocation(line: 2255, column: 3, scope: !12203)
!12205 = !DILocation(line: 2258, column: 15, scope: !11729)
!12206 = !DILocation(line: 2258, column: 19, scope: !11729)
!12207 = !DILocation(line: 2258, column: 2, scope: !11729)
!12208 = !DILocation(line: 2261, column: 2, scope: !11729)
!12209 = !DILocation(line: 2261, column: 6, scope: !11729)
!12210 = !DILocation(line: 2261, column: 9, scope: !11729)
!12211 = !DILocation(line: 2261, column: 19, scope: !11729)
!12212 = !DILocation(line: 2261, column: 31, scope: !11729)
!12213 = !DILocation(line: 2261, column: 35, scope: !11729)
!12214 = !DILocation(line: 2261, column: 49, scope: !11729)
!12215 = !DILocation(line: 2261, column: 30, scope: !11729)
!12216 = !DILocation(line: 2262, column: 2, scope: !11729)
!12217 = !DILocation(line: 2262, column: 6, scope: !11729)
!12218 = !DILocation(line: 2262, column: 9, scope: !11729)
!12219 = !DILocation(line: 2262, column: 19, scope: !11729)
!12220 = !DILocation(line: 2262, column: 31, scope: !11729)
!12221 = !DILocation(line: 2262, column: 35, scope: !11729)
!12222 = !DILocation(line: 2262, column: 49, scope: !11729)
!12223 = !DILocation(line: 2262, column: 30, scope: !11729)
!12224 = !DILocation(line: 2264, column: 2, scope: !11729)
!12225 = !DILocation(line: 2264, column: 6, scope: !11729)
!12226 = !DILocation(line: 2264, column: 9, scope: !11729)
!12227 = !DILocation(line: 2264, column: 19, scope: !11729)
!12228 = !DILocation(line: 2265, column: 2, scope: !11729)
!12229 = !DILocation(line: 2265, column: 6, scope: !11729)
!12230 = !DILocation(line: 2265, column: 9, scope: !11729)
!12231 = !DILocation(line: 2265, column: 19, scope: !11729)
!12232 = !DILocation(line: 2267, column: 20, scope: !11729)
!12233 = !DILocation(line: 2267, column: 2, scope: !11729)
!12234 = !DILocation(line: 2269, column: 6, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2269, column: 6)
!12236 = !DILocation(line: 2269, column: 10, scope: !12235)
!12237 = !DILocation(line: 2269, column: 23, scope: !12235)
!12238 = !DILocation(line: 2269, column: 6, scope: !11729)
!12239 = !DILocation(line: 2271, column: 23, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12235, file: !3, line: 2269, column: 43)
!12241 = !DILocation(line: 2271, column: 3, scope: !12240)
!12242 = !DILocation(line: 2272, column: 14, scope: !12240)
!12243 = !DILocation(line: 2272, column: 18, scope: !12240)
!12244 = !DILocation(line: 2272, column: 34, scope: !12240)
!12245 = !DILocation(line: 2272, column: 3, scope: !12240)
!12246 = !DILocation(line: 2273, column: 2, scope: !12240)
!12247 = !DILocation(line: 2275, column: 4, scope: !11729)
!12248 = !DILocation(line: 2276, column: 2, scope: !11729)
!12249 = !DILocation(line: 2276, column: 10, scope: !11729)
!12250 = !DILocation(line: 2276, column: 13, scope: !11729)
!12251 = !DILocation(line: 2277, column: 7, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2277, column: 7)
!12253 = !DILocation(line: 2277, column: 11, scope: !12252)
!12254 = !DILocation(line: 2277, column: 14, scope: !12252)
!12255 = !DILocation(line: 2277, column: 23, scope: !12252)
!12256 = !DILocation(line: 2277, column: 37, scope: !12252)
!12257 = !DILocation(line: 2277, column: 7, scope: !11729)
!12258 = !DILocation(line: 2278, column: 4, scope: !12252)
!12259 = distinct !{!12259, !12248, !12260}
!12260 = !DILocation(line: 2278, column: 4, scope: !11729)
!12261 = !DILocation(line: 2283, column: 2, scope: !11729)
!12262 = !DILocation(line: 2283, column: 6, scope: !11729)
!12263 = !DILocation(line: 2283, column: 9, scope: !11729)
!12264 = !DILocation(line: 2283, column: 19, scope: !11729)
!12265 = !DILocation(line: 2285, column: 2, scope: !11729)
!12266 = !DILocation(line: 2285, column: 2, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !3, line: 2285, column: 2)
!12268 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2285, column: 2)
!12269 = !DILocation(line: 2285, column: 2, scope: !12268)
!12270 = !DILocation(line: 2291, column: 26, scope: !11729)
!12271 = !DILocation(line: 2291, column: 30, scope: !11729)
!12272 = !DILocation(line: 2291, column: 36, scope: !11729)
!12273 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !11731)
!12274 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !11731)
!12275 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !11731)
!12276 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !11731)
!12277 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !11731)
!12278 = !DILocation(line: 2293, column: 2, scope: !11729)
!12279 = !DILabel(scope: !11729, name: "err_free_ring", file: !3, line: 2295)
!12280 = !DILocation(line: 2295, column: 1, scope: !11729)
!12281 = !DILocation(line: 2297, column: 24, scope: !11729)
!12282 = !DILocation(line: 2297, column: 2, scope: !11729)
!12283 = !DILocation(line: 2303, column: 2, scope: !11729)
!12284 = !DILocation(line: 2303, column: 6, scope: !11729)
!12285 = !DILocation(line: 2303, column: 9, scope: !11729)
!12286 = !DILocation(line: 2303, column: 19, scope: !11729)
!12287 = !DILabel(scope: !11729, name: "err_free_irq", file: !3, line: 2305)
!12288 = !DILocation(line: 2305, column: 1, scope: !11729)
!12289 = !DILocation(line: 2306, column: 26, scope: !11729)
!12290 = !DILocation(line: 2306, column: 30, scope: !11729)
!12291 = !DILocation(line: 2306, column: 36, scope: !11729)
!12292 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !11734)
!12293 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !11734)
!12294 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !11734)
!12295 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !11734)
!12296 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !11734)
!12297 = !DILocation(line: 2307, column: 11, scope: !11729)
!12298 = !DILocation(line: 2307, column: 16, scope: !11729)
!12299 = !DILocation(line: 2307, column: 21, scope: !11729)
!12300 = !DILocation(line: 2307, column: 2, scope: !11729)
!12301 = !DILocation(line: 2308, column: 9, scope: !11729)
!12302 = !DILocation(line: 2308, column: 2, scope: !11729)
!12303 = !DILocation(line: 2309, column: 1, scope: !11729)
!12304 = distinct !DISubprogram(name: "pcnet32_close", scope: !3, file: !3, line: 2609, type: !438, scopeLine: 2610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!12305 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !12306)
!12306 = distinct !DILocation(line: 2641, column: 2, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 2641, column: 2)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !3, line: 2641, column: 2)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 2641, column: 2)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !3, line: 2641, column: 2)
!12311 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 2641, column: 2)
!12312 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !12313)
!12313 = distinct !DILocation(line: 2637, column: 2, scope: !12304)
!12314 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !12313)
!12315 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !12316)
!12316 = distinct !DILocation(line: 2646, column: 2, scope: !12304)
!12317 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !12316)
!12318 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !12319)
!12319 = distinct !DILocation(line: 2620, column: 2, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 2620, column: 2)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 2620, column: 2)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 2620, column: 2)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 2620, column: 2)
!12324 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 2620, column: 2)
!12325 = !DILocalVariable(name: "dev", arg: 1, scope: !12304, file: !3, line: 2609, type: !326)
!12326 = !DILocation(line: 2609, column: 45, scope: !12304)
!12327 = !DILocalVariable(name: "ioaddr", scope: !12304, file: !3, line: 2611, type: !348)
!12328 = !DILocation(line: 2611, column: 16, scope: !12304)
!12329 = !DILocation(line: 2611, column: 25, scope: !12304)
!12330 = !DILocation(line: 2611, column: 30, scope: !12304)
!12331 = !DILocalVariable(name: "lp", scope: !12304, file: !3, line: 2612, type: !7248)
!12332 = !DILocation(line: 2612, column: 26, scope: !12304)
!12333 = !DILocation(line: 2612, column: 43, scope: !12304)
!12334 = !DILocation(line: 2612, column: 31, scope: !12304)
!12335 = !DILocalVariable(name: "flags", scope: !12304, file: !3, line: 2613, type: !348)
!12336 = !DILocation(line: 2613, column: 16, scope: !12304)
!12337 = !DILocation(line: 2615, column: 2, scope: !12304)
!12338 = !DILocation(line: 2617, column: 19, scope: !12304)
!12339 = !DILocation(line: 2617, column: 2, scope: !12304)
!12340 = !DILocation(line: 2618, column: 16, scope: !12304)
!12341 = !DILocation(line: 2618, column: 20, scope: !12304)
!12342 = !DILocation(line: 2618, column: 2, scope: !12304)
!12343 = !DILocation(line: 2620, column: 2, scope: !12304)
!12344 = !DILocation(line: 2620, column: 2, scope: !12324)
!12345 = !DILocalVariable(name: "__dummy", scope: !12346, file: !3, line: 2620, type: !348)
!12346 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 2620, column: 2)
!12347 = !DILocation(line: 2620, column: 2, scope: !12346)
!12348 = !DILocalVariable(name: "__dummy2", scope: !12346, file: !3, line: 2620, type: !348)
!12349 = !DILocation(line: 2620, column: 2, scope: !12323)
!12350 = !DILocation(line: 2620, column: 2, scope: !12322)
!12351 = !DILocation(line: 2620, column: 2, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 2620, column: 2)
!12353 = !DILocalVariable(name: "__dummy", scope: !12354, file: !3, line: 2620, type: !348)
!12354 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 2620, column: 2)
!12355 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 2620, column: 2)
!12356 = !DILocation(line: 2620, column: 2, scope: !12354)
!12357 = !DILocalVariable(name: "__dummy2", scope: !12354, file: !3, line: 2620, type: !348)
!12358 = !DILocation(line: 2620, column: 2, scope: !12355)
!12359 = !DILocation(line: 2620, column: 2, scope: !12321)
!12360 = !{i32 -2139626630}
!12361 = !DILocation(line: 2620, column: 2, scope: !12320)
!12362 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !12319)
!12363 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !12319)
!12364 = !DILocation(line: 2622, column: 32, scope: !12304)
!12365 = !DILocation(line: 2622, column: 36, scope: !12304)
!12366 = !DILocation(line: 2622, column: 39, scope: !12304)
!12367 = !DILocation(line: 2622, column: 48, scope: !12304)
!12368 = !DILocation(line: 2622, column: 2, scope: !12304)
!12369 = !DILocation(line: 2622, column: 7, scope: !12304)
!12370 = !DILocation(line: 2622, column: 13, scope: !12304)
!12371 = !DILocation(line: 2622, column: 30, scope: !12304)
!12372 = !DILocation(line: 2624, column: 2, scope: !12304)
!12373 = !DILocation(line: 2624, column: 2, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12375, file: !3, line: 2624, column: 2)
!12375 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 2624, column: 2)
!12376 = !DILocation(line: 2624, column: 2, scope: !12375)
!12377 = !DILocation(line: 2629, column: 2, scope: !12304)
!12378 = !DILocation(line: 2629, column: 6, scope: !12304)
!12379 = !DILocation(line: 2629, column: 9, scope: !12304)
!12380 = !DILocation(line: 2629, column: 19, scope: !12304)
!12381 = !DILocation(line: 2635, column: 2, scope: !12304)
!12382 = !DILocation(line: 2635, column: 6, scope: !12304)
!12383 = !DILocation(line: 2635, column: 9, scope: !12304)
!12384 = !DILocation(line: 2635, column: 19, scope: !12304)
!12385 = !DILocation(line: 2637, column: 26, scope: !12304)
!12386 = !DILocation(line: 2637, column: 30, scope: !12304)
!12387 = !DILocation(line: 2637, column: 36, scope: !12304)
!12388 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !12313)
!12389 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !12313)
!12390 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !12313)
!12391 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !12313)
!12392 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !12313)
!12393 = !DILocation(line: 2639, column: 11, scope: !12304)
!12394 = !DILocation(line: 2639, column: 16, scope: !12304)
!12395 = !DILocation(line: 2639, column: 21, scope: !12304)
!12396 = !DILocation(line: 2639, column: 2, scope: !12304)
!12397 = !DILocation(line: 2641, column: 2, scope: !12304)
!12398 = !DILocation(line: 2641, column: 2, scope: !12311)
!12399 = !DILocalVariable(name: "__dummy", scope: !12400, file: !3, line: 2641, type: !348)
!12400 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 2641, column: 2)
!12401 = !DILocation(line: 2641, column: 2, scope: !12400)
!12402 = !DILocalVariable(name: "__dummy2", scope: !12400, file: !3, line: 2641, type: !348)
!12403 = !DILocation(line: 2641, column: 2, scope: !12310)
!12404 = !DILocation(line: 2641, column: 2, scope: !12309)
!12405 = !DILocation(line: 2641, column: 2, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12309, file: !3, line: 2641, column: 2)
!12407 = !DILocalVariable(name: "__dummy", scope: !12408, file: !3, line: 2641, type: !348)
!12408 = distinct !DILexicalBlock(scope: !12409, file: !3, line: 2641, column: 2)
!12409 = distinct !DILexicalBlock(scope: !12406, file: !3, line: 2641, column: 2)
!12410 = !DILocation(line: 2641, column: 2, scope: !12408)
!12411 = !DILocalVariable(name: "__dummy2", scope: !12408, file: !3, line: 2641, type: !348)
!12412 = !DILocation(line: 2641, column: 2, scope: !12409)
!12413 = !DILocation(line: 2641, column: 2, scope: !12308)
!12414 = !{i32 -2139625198}
!12415 = !DILocation(line: 2641, column: 2, scope: !12307)
!12416 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !12306)
!12417 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !12306)
!12418 = !DILocation(line: 2643, column: 24, scope: !12304)
!12419 = !DILocation(line: 2643, column: 2, scope: !12304)
!12420 = !DILocation(line: 2644, column: 24, scope: !12304)
!12421 = !DILocation(line: 2644, column: 2, scope: !12304)
!12422 = !DILocation(line: 2646, column: 26, scope: !12304)
!12423 = !DILocation(line: 2646, column: 30, scope: !12304)
!12424 = !DILocation(line: 2646, column: 36, scope: !12304)
!12425 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !12316)
!12426 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !12316)
!12427 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !12316)
!12428 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !12316)
!12429 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !12316)
!12430 = !DILocation(line: 2648, column: 2, scope: !12304)
!12431 = distinct !DISubprogram(name: "pcnet32_start_xmit", scope: !3, file: !3, line: 2479, type: !448, scopeLine: 2481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!12432 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !12433)
!12433 = distinct !DILocation(line: 2535, column: 2, scope: !12431)
!12434 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !12433)
!12435 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !12436)
!12436 = distinct !DILocation(line: 2488, column: 2, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 2488, column: 2)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !3, line: 2488, column: 2)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !3, line: 2488, column: 2)
!12440 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 2488, column: 2)
!12441 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 2488, column: 2)
!12442 = !DILocalVariable(name: "skb", arg: 1, scope: !12431, file: !3, line: 2479, type: !451)
!12443 = !DILocation(line: 2479, column: 55, scope: !12431)
!12444 = !DILocalVariable(name: "dev", arg: 2, scope: !12431, file: !3, line: 2480, type: !326)
!12445 = !DILocation(line: 2480, column: 30, scope: !12431)
!12446 = !DILocalVariable(name: "lp", scope: !12431, file: !3, line: 2482, type: !7248)
!12447 = !DILocation(line: 2482, column: 26, scope: !12431)
!12448 = !DILocation(line: 2482, column: 43, scope: !12431)
!12449 = !DILocation(line: 2482, column: 31, scope: !12431)
!12450 = !DILocalVariable(name: "ioaddr", scope: !12431, file: !3, line: 2483, type: !348)
!12451 = !DILocation(line: 2483, column: 16, scope: !12431)
!12452 = !DILocation(line: 2483, column: 25, scope: !12431)
!12453 = !DILocation(line: 2483, column: 30, scope: !12431)
!12454 = !DILocalVariable(name: "status", scope: !12431, file: !3, line: 2484, type: !616)
!12455 = !DILocation(line: 2484, column: 6, scope: !12431)
!12456 = !DILocalVariable(name: "entry", scope: !12431, file: !3, line: 2485, type: !7)
!12457 = !DILocation(line: 2485, column: 6, scope: !12431)
!12458 = !DILocalVariable(name: "flags", scope: !12431, file: !3, line: 2486, type: !348)
!12459 = !DILocation(line: 2486, column: 16, scope: !12431)
!12460 = !DILocation(line: 2488, column: 2, scope: !12431)
!12461 = !DILocation(line: 2488, column: 2, scope: !12441)
!12462 = !DILocalVariable(name: "__dummy", scope: !12463, file: !3, line: 2488, type: !348)
!12463 = distinct !DILexicalBlock(scope: !12440, file: !3, line: 2488, column: 2)
!12464 = !DILocation(line: 2488, column: 2, scope: !12463)
!12465 = !DILocalVariable(name: "__dummy2", scope: !12463, file: !3, line: 2488, type: !348)
!12466 = !DILocation(line: 2488, column: 2, scope: !12440)
!12467 = !DILocation(line: 2488, column: 2, scope: !12439)
!12468 = !DILocation(line: 2488, column: 2, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12439, file: !3, line: 2488, column: 2)
!12470 = !DILocalVariable(name: "__dummy", scope: !12471, file: !3, line: 2488, type: !348)
!12471 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 2488, column: 2)
!12472 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2488, column: 2)
!12473 = !DILocation(line: 2488, column: 2, scope: !12471)
!12474 = !DILocalVariable(name: "__dummy2", scope: !12471, file: !3, line: 2488, type: !348)
!12475 = !DILocation(line: 2488, column: 2, scope: !12472)
!12476 = !DILocation(line: 2488, column: 2, scope: !12438)
!12477 = !{i32 -2139629683}
!12478 = !DILocation(line: 2488, column: 2, scope: !12437)
!12479 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !12436)
!12480 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !12436)
!12481 = !DILocation(line: 2490, column: 2, scope: !12431)
!12482 = !DILocation(line: 2490, column: 2, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !3, line: 2490, column: 2)
!12484 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 2490, column: 2)
!12485 = !DILocation(line: 2490, column: 2, scope: !12484)
!12486 = !DILocation(line: 2497, column: 9, scope: !12431)
!12487 = !DILocation(line: 2502, column: 10, scope: !12431)
!12488 = !DILocation(line: 2502, column: 14, scope: !12431)
!12489 = !DILocation(line: 2502, column: 23, scope: !12431)
!12490 = !DILocation(line: 2502, column: 27, scope: !12431)
!12491 = !DILocation(line: 2502, column: 21, scope: !12431)
!12492 = !DILocation(line: 2502, column: 8, scope: !12431)
!12493 = !DILocation(line: 2507, column: 30, scope: !12431)
!12494 = !DILocation(line: 2507, column: 2, scope: !12431)
!12495 = !DILocation(line: 2507, column: 6, scope: !12431)
!12496 = !DILocation(line: 2507, column: 14, scope: !12431)
!12497 = !DILocation(line: 2507, column: 21, scope: !12431)
!12498 = !DILocation(line: 2507, column: 28, scope: !12431)
!12499 = !DILocation(line: 2509, column: 2, scope: !12431)
!12500 = !DILocation(line: 2509, column: 6, scope: !12431)
!12501 = !DILocation(line: 2509, column: 14, scope: !12431)
!12502 = !DILocation(line: 2509, column: 21, scope: !12431)
!12503 = !DILocation(line: 2509, column: 26, scope: !12431)
!12504 = !DILocation(line: 2512, column: 6, scope: !12431)
!12505 = !DILocation(line: 2511, column: 2, scope: !12431)
!12506 = !DILocation(line: 2511, column: 6, scope: !12431)
!12507 = !DILocation(line: 2511, column: 18, scope: !12431)
!12508 = !DILocation(line: 2511, column: 25, scope: !12431)
!12509 = !DILocation(line: 2514, column: 25, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 2514, column: 6)
!12511 = !DILocation(line: 2514, column: 29, scope: !12510)
!12512 = !DILocation(line: 2514, column: 38, scope: !12510)
!12513 = !DILocation(line: 2514, column: 43, scope: !12510)
!12514 = !DILocation(line: 2514, column: 47, scope: !12510)
!12515 = !DILocation(line: 2514, column: 59, scope: !12510)
!12516 = !DILocation(line: 2514, column: 6, scope: !12510)
!12517 = !DILocation(line: 2514, column: 6, scope: !12431)
!12518 = !DILocation(line: 2515, column: 21, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12510, file: !3, line: 2514, column: 68)
!12520 = !DILocation(line: 2515, column: 3, scope: !12519)
!12521 = !DILocation(line: 2516, column: 3, scope: !12519)
!12522 = !DILocation(line: 2516, column: 8, scope: !12519)
!12523 = !DILocation(line: 2516, column: 14, scope: !12519)
!12524 = !DILocation(line: 2516, column: 24, scope: !12519)
!12525 = !DILocation(line: 2517, column: 3, scope: !12519)
!12526 = !DILocation(line: 2519, column: 25, scope: !12431)
!12527 = !DILocation(line: 2519, column: 2, scope: !12431)
!12528 = !DILocation(line: 2519, column: 6, scope: !12431)
!12529 = !DILocation(line: 2519, column: 16, scope: !12431)
!12530 = !DILocation(line: 2519, column: 23, scope: !12431)
!12531 = !DILocation(line: 2520, column: 28, scope: !12431)
!12532 = !DILocation(line: 2520, column: 2, scope: !12431)
!12533 = !DILocation(line: 2520, column: 6, scope: !12431)
!12534 = !DILocation(line: 2520, column: 14, scope: !12431)
!12535 = !DILocation(line: 2520, column: 21, scope: !12431)
!12536 = !DILocation(line: 2520, column: 26, scope: !12431)
!12537 = !DILocation(line: 2521, column: 2, scope: !12431)
!12538 = !{i32 -2139628901}
!12539 = !DILocation(line: 2522, column: 30, scope: !12431)
!12540 = !DILocation(line: 2522, column: 2, scope: !12431)
!12541 = !DILocation(line: 2522, column: 6, scope: !12431)
!12542 = !DILocation(line: 2522, column: 14, scope: !12431)
!12543 = !DILocation(line: 2522, column: 21, scope: !12431)
!12544 = !DILocation(line: 2522, column: 28, scope: !12431)
!12545 = !DILocation(line: 2524, column: 2, scope: !12431)
!12546 = !DILocation(line: 2524, column: 6, scope: !12431)
!12547 = !DILocation(line: 2524, column: 12, scope: !12431)
!12548 = !DILocation(line: 2525, column: 25, scope: !12431)
!12549 = !DILocation(line: 2525, column: 30, scope: !12431)
!12550 = !DILocation(line: 2525, column: 2, scope: !12431)
!12551 = !DILocation(line: 2525, column: 7, scope: !12431)
!12552 = !DILocation(line: 2525, column: 13, scope: !12431)
!12553 = !DILocation(line: 2525, column: 22, scope: !12431)
!12554 = !DILocation(line: 2528, column: 2, scope: !12431)
!12555 = !DILocation(line: 2528, column: 6, scope: !12431)
!12556 = !DILocation(line: 2528, column: 9, scope: !12431)
!12557 = !DILocation(line: 2528, column: 19, scope: !12431)
!12558 = !DILocation(line: 2530, column: 6, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 2530, column: 6)
!12560 = !DILocation(line: 2530, column: 10, scope: !12559)
!12561 = !DILocation(line: 2530, column: 19, scope: !12559)
!12562 = !DILocation(line: 2530, column: 25, scope: !12559)
!12563 = !DILocation(line: 2530, column: 32, scope: !12559)
!12564 = !DILocation(line: 2530, column: 36, scope: !12559)
!12565 = !DILocation(line: 2530, column: 30, scope: !12559)
!12566 = !DILocation(line: 2530, column: 49, scope: !12559)
!12567 = !DILocation(line: 2530, column: 54, scope: !12559)
!12568 = !DILocation(line: 2530, column: 6, scope: !12431)
!12569 = !DILocation(line: 2531, column: 3, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 2530, column: 60)
!12571 = !DILocation(line: 2531, column: 7, scope: !12570)
!12572 = !DILocation(line: 2531, column: 15, scope: !12570)
!12573 = !DILocation(line: 2532, column: 20, scope: !12570)
!12574 = !DILocation(line: 2532, column: 3, scope: !12570)
!12575 = !DILocation(line: 2533, column: 2, scope: !12570)
!12576 = !DILocation(line: 2530, column: 57, scope: !12559)
!12577 = !DILabel(scope: !12431, name: "drop_packet", file: !3, line: 2534)
!12578 = !DILocation(line: 2534, column: 1, scope: !12431)
!12579 = !DILocation(line: 2535, column: 26, scope: !12431)
!12580 = !DILocation(line: 2535, column: 30, scope: !12431)
!12581 = !DILocation(line: 2535, column: 36, scope: !12431)
!12582 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !12433)
!12583 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !12433)
!12584 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !12433)
!12585 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !12433)
!12586 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !12433)
!12587 = !DILocation(line: 2536, column: 2, scope: !12431)
!12588 = distinct !DISubprogram(name: "pcnet32_set_multicast_list", scope: !3, file: !3, line: 2703, type: !442, scopeLine: 2704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!12589 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !12590)
!12590 = distinct !DILocation(line: 2734, column: 2, scope: !12588)
!12591 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !12590)
!12592 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !12593)
!12593 = distinct !DILocation(line: 2709, column: 2, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12595, file: !3, line: 2709, column: 2)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 2709, column: 2)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 2709, column: 2)
!12597 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 2709, column: 2)
!12598 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 2709, column: 2)
!12599 = !DILocalVariable(name: "dev", arg: 1, scope: !12588, file: !3, line: 2703, type: !326)
!12600 = !DILocation(line: 2703, column: 59, scope: !12588)
!12601 = !DILocalVariable(name: "ioaddr", scope: !12588, file: !3, line: 2705, type: !348)
!12602 = !DILocation(line: 2705, column: 16, scope: !12588)
!12603 = !DILocation(line: 2705, column: 25, scope: !12588)
!12604 = !DILocation(line: 2705, column: 30, scope: !12588)
!12605 = !DILocalVariable(name: "flags", scope: !12588, file: !3, line: 2705, type: !348)
!12606 = !DILocation(line: 2705, column: 41, scope: !12588)
!12607 = !DILocalVariable(name: "lp", scope: !12588, file: !3, line: 2706, type: !7248)
!12608 = !DILocation(line: 2706, column: 26, scope: !12588)
!12609 = !DILocation(line: 2706, column: 43, scope: !12588)
!12610 = !DILocation(line: 2706, column: 31, scope: !12588)
!12611 = !DILocalVariable(name: "csr15", scope: !12588, file: !3, line: 2707, type: !7)
!12612 = !DILocation(line: 2707, column: 6, scope: !12588)
!12613 = !DILocalVariable(name: "suspended", scope: !12588, file: !3, line: 2707, type: !7)
!12614 = !DILocation(line: 2707, column: 13, scope: !12588)
!12615 = !DILocation(line: 2709, column: 2, scope: !12588)
!12616 = !DILocation(line: 2709, column: 2, scope: !12598)
!12617 = !DILocalVariable(name: "__dummy", scope: !12618, file: !3, line: 2709, type: !348)
!12618 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 2709, column: 2)
!12619 = !DILocation(line: 2709, column: 2, scope: !12618)
!12620 = !DILocalVariable(name: "__dummy2", scope: !12618, file: !3, line: 2709, type: !348)
!12621 = !DILocation(line: 2709, column: 2, scope: !12597)
!12622 = !DILocation(line: 2709, column: 2, scope: !12596)
!12623 = !DILocation(line: 2709, column: 2, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 2709, column: 2)
!12625 = !DILocalVariable(name: "__dummy", scope: !12626, file: !3, line: 2709, type: !348)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 2709, column: 2)
!12627 = distinct !DILexicalBlock(scope: !12624, file: !3, line: 2709, column: 2)
!12628 = !DILocation(line: 2709, column: 2, scope: !12626)
!12629 = !DILocalVariable(name: "__dummy2", scope: !12626, file: !3, line: 2709, type: !348)
!12630 = !DILocation(line: 2709, column: 2, scope: !12627)
!12631 = !DILocation(line: 2709, column: 2, scope: !12595)
!12632 = !{i32 -2139618881}
!12633 = !DILocation(line: 2709, column: 2, scope: !12594)
!12634 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !12593)
!12635 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !12593)
!12636 = !DILocation(line: 2710, column: 30, scope: !12588)
!12637 = !DILocation(line: 2710, column: 14, scope: !12588)
!12638 = !DILocation(line: 2710, column: 12, scope: !12588)
!12639 = !DILocation(line: 2711, column: 10, scope: !12588)
!12640 = !DILocation(line: 2711, column: 14, scope: !12588)
!12641 = !DILocation(line: 2711, column: 17, scope: !12588)
!12642 = !DILocation(line: 2711, column: 26, scope: !12588)
!12643 = !DILocation(line: 2711, column: 8, scope: !12588)
!12644 = !DILocation(line: 2712, column: 6, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 2712, column: 6)
!12646 = !DILocation(line: 2712, column: 11, scope: !12645)
!12647 = !DILocation(line: 2712, column: 17, scope: !12645)
!12648 = !DILocation(line: 2712, column: 6, scope: !12588)
!12649 = !DILocation(line: 2714, column: 3, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 2712, column: 32)
!12651 = !DILocation(line: 2714, column: 3, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12653, file: !3, line: 2714, column: 3)
!12653 = distinct !DILexicalBlock(scope: !12650, file: !3, line: 2714, column: 3)
!12654 = !DILocation(line: 2714, column: 3, scope: !12653)
!12655 = !DILocation(line: 2716, column: 7, scope: !12650)
!12656 = !DILocation(line: 2715, column: 3, scope: !12650)
!12657 = !DILocation(line: 2715, column: 7, scope: !12650)
!12658 = !DILocation(line: 2715, column: 19, scope: !12650)
!12659 = !DILocation(line: 2715, column: 24, scope: !12650)
!12660 = !DILocation(line: 2718, column: 3, scope: !12650)
!12661 = !DILocation(line: 2718, column: 7, scope: !12650)
!12662 = !DILocation(line: 2718, column: 10, scope: !12650)
!12663 = !DILocation(line: 2718, column: 20, scope: !12650)
!12664 = !DILocation(line: 2718, column: 35, scope: !12650)
!12665 = !DILocation(line: 2718, column: 41, scope: !12650)
!12666 = !DILocation(line: 2719, column: 2, scope: !12650)
!12667 = !DILocation(line: 2721, column: 7, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 2719, column: 9)
!12669 = !DILocation(line: 2720, column: 3, scope: !12668)
!12670 = !DILocation(line: 2720, column: 7, scope: !12668)
!12671 = !DILocation(line: 2720, column: 19, scope: !12668)
!12672 = !DILocation(line: 2720, column: 24, scope: !12668)
!12673 = !DILocation(line: 2722, column: 3, scope: !12668)
!12674 = !DILocation(line: 2722, column: 7, scope: !12668)
!12675 = !DILocation(line: 2722, column: 10, scope: !12668)
!12676 = !DILocation(line: 2722, column: 20, scope: !12668)
!12677 = !DILocation(line: 2722, column: 35, scope: !12668)
!12678 = !DILocation(line: 2722, column: 41, scope: !12668)
!12679 = !DILocation(line: 2723, column: 26, scope: !12668)
!12680 = !DILocation(line: 2723, column: 3, scope: !12668)
!12681 = !DILocation(line: 2726, column: 6, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 2726, column: 6)
!12683 = !DILocation(line: 2726, column: 6, scope: !12588)
!12684 = !DILocation(line: 2727, column: 23, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12682, file: !3, line: 2726, column: 17)
!12686 = !DILocation(line: 2727, column: 27, scope: !12685)
!12687 = !DILocation(line: 2727, column: 3, scope: !12685)
!12688 = !DILocation(line: 2728, column: 2, scope: !12685)
!12689 = !DILocation(line: 2729, column: 3, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12682, file: !3, line: 2728, column: 9)
!12691 = !DILocation(line: 2729, column: 7, scope: !12690)
!12692 = !DILocation(line: 2729, column: 10, scope: !12690)
!12693 = !DILocation(line: 2729, column: 20, scope: !12690)
!12694 = !DILocation(line: 2730, column: 19, scope: !12690)
!12695 = !DILocation(line: 2730, column: 3, scope: !12690)
!12696 = !DILocation(line: 2731, column: 20, scope: !12690)
!12697 = !DILocation(line: 2731, column: 3, scope: !12690)
!12698 = !DILocation(line: 2734, column: 26, scope: !12588)
!12699 = !DILocation(line: 2734, column: 30, scope: !12588)
!12700 = !DILocation(line: 2734, column: 36, scope: !12588)
!12701 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !12590)
!12702 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !12590)
!12703 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !12590)
!12704 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !12590)
!12705 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !12590)
!12706 = !DILocation(line: 2735, column: 1, scope: !12588)
!12707 = distinct !DISubprogram(name: "pcnet32_ioctl", scope: !3, file: !3, line: 2766, type: !630, scopeLine: 2767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!12708 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !12709)
!12709 = distinct !DILocation(line: 2776, column: 3, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2773, column: 15)
!12711 = distinct !DILexicalBlock(scope: !12707, file: !3, line: 2773, column: 6)
!12712 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !12709)
!12713 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !12714)
!12714 = distinct !DILocation(line: 2774, column: 3, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !3, line: 2774, column: 3)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !3, line: 2774, column: 3)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !3, line: 2774, column: 3)
!12718 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 2774, column: 3)
!12719 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 2774, column: 3)
!12720 = !DILocalVariable(name: "dev", arg: 1, scope: !12707, file: !3, line: 2766, type: !326)
!12721 = !DILocation(line: 2766, column: 45, scope: !12707)
!12722 = !DILocalVariable(name: "rq", arg: 2, scope: !12707, file: !3, line: 2766, type: !632)
!12723 = !DILocation(line: 2766, column: 64, scope: !12707)
!12724 = !DILocalVariable(name: "cmd", arg: 3, scope: !12707, file: !3, line: 2766, type: !7)
!12725 = !DILocation(line: 2766, column: 72, scope: !12707)
!12726 = !DILocalVariable(name: "lp", scope: !12707, file: !3, line: 2768, type: !7248)
!12727 = !DILocation(line: 2768, column: 26, scope: !12707)
!12728 = !DILocation(line: 2768, column: 43, scope: !12707)
!12729 = !DILocation(line: 2768, column: 31, scope: !12707)
!12730 = !DILocalVariable(name: "rc", scope: !12707, file: !3, line: 2769, type: !7)
!12731 = !DILocation(line: 2769, column: 6, scope: !12707)
!12732 = !DILocalVariable(name: "flags", scope: !12707, file: !3, line: 2770, type: !348)
!12733 = !DILocation(line: 2770, column: 16, scope: !12707)
!12734 = !DILocation(line: 2773, column: 6, scope: !12711)
!12735 = !DILocation(line: 2773, column: 10, scope: !12711)
!12736 = !DILocation(line: 2773, column: 6, scope: !12707)
!12737 = !DILocation(line: 2774, column: 3, scope: !12710)
!12738 = !DILocation(line: 2774, column: 3, scope: !12719)
!12739 = !DILocalVariable(name: "__dummy", scope: !12740, file: !3, line: 2774, type: !348)
!12740 = distinct !DILexicalBlock(scope: !12718, file: !3, line: 2774, column: 3)
!12741 = !DILocation(line: 2774, column: 3, scope: !12740)
!12742 = !DILocalVariable(name: "__dummy2", scope: !12740, file: !3, line: 2774, type: !348)
!12743 = !DILocation(line: 2774, column: 3, scope: !12718)
!12744 = !DILocation(line: 2774, column: 3, scope: !12717)
!12745 = !DILocation(line: 2774, column: 3, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12717, file: !3, line: 2774, column: 3)
!12747 = !DILocalVariable(name: "__dummy", scope: !12748, file: !3, line: 2774, type: !348)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 2774, column: 3)
!12749 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 2774, column: 3)
!12750 = !DILocation(line: 2774, column: 3, scope: !12748)
!12751 = !DILocalVariable(name: "__dummy2", scope: !12748, file: !3, line: 2774, type: !348)
!12752 = !DILocation(line: 2774, column: 3, scope: !12749)
!12753 = !DILocation(line: 2774, column: 3, scope: !12716)
!12754 = !{i32 -2139617243}
!12755 = !DILocation(line: 2774, column: 3, scope: !12715)
!12756 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !12714)
!12757 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !12714)
!12758 = !DILocation(line: 2775, column: 27, scope: !12710)
!12759 = !DILocation(line: 2775, column: 31, scope: !12710)
!12760 = !DILocation(line: 2775, column: 46, scope: !12710)
!12761 = !DILocation(line: 2775, column: 39, scope: !12710)
!12762 = !DILocation(line: 2775, column: 51, scope: !12710)
!12763 = !DILocation(line: 2775, column: 8, scope: !12710)
!12764 = !DILocation(line: 2775, column: 6, scope: !12710)
!12765 = !DILocation(line: 2776, column: 27, scope: !12710)
!12766 = !DILocation(line: 2776, column: 31, scope: !12710)
!12767 = !DILocation(line: 2776, column: 37, scope: !12710)
!12768 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !12709)
!12769 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !12709)
!12770 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !12709)
!12771 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !12709)
!12772 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !12709)
!12773 = !DILocation(line: 2777, column: 2, scope: !12710)
!12774 = !DILocation(line: 2778, column: 6, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2777, column: 9)
!12776 = !DILocation(line: 2781, column: 9, scope: !12707)
!12777 = !DILocation(line: 2781, column: 2, scope: !12707)
!12778 = distinct !DISubprogram(name: "pcnet32_tx_timeout", scope: !3, file: !3, line: 2439, type: !768, scopeLine: 2440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!12779 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !12780)
!12780 = distinct !DILocation(line: 2476, column: 2, scope: !12778)
!12781 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !12780)
!12782 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !12783)
!12783 = distinct !DILocation(line: 2444, column: 2, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !3, line: 2444, column: 2)
!12785 = distinct !DILexicalBlock(scope: !12786, file: !3, line: 2444, column: 2)
!12786 = distinct !DILexicalBlock(scope: !12787, file: !3, line: 2444, column: 2)
!12787 = distinct !DILexicalBlock(scope: !12788, file: !3, line: 2444, column: 2)
!12788 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 2444, column: 2)
!12789 = !DILocalVariable(name: "dev", arg: 1, scope: !12778, file: !3, line: 2439, type: !326)
!12790 = !DILocation(line: 2439, column: 51, scope: !12778)
!12791 = !DILocalVariable(name: "txqueue", arg: 2, scope: !12778, file: !3, line: 2439, type: !13)
!12792 = !DILocation(line: 2439, column: 69, scope: !12778)
!12793 = !DILocalVariable(name: "lp", scope: !12778, file: !3, line: 2441, type: !7248)
!12794 = !DILocation(line: 2441, column: 26, scope: !12778)
!12795 = !DILocation(line: 2441, column: 43, scope: !12778)
!12796 = !DILocation(line: 2441, column: 31, scope: !12778)
!12797 = !DILocalVariable(name: "ioaddr", scope: !12778, file: !3, line: 2442, type: !348)
!12798 = !DILocation(line: 2442, column: 16, scope: !12778)
!12799 = !DILocation(line: 2442, column: 25, scope: !12778)
!12800 = !DILocation(line: 2442, column: 30, scope: !12778)
!12801 = !DILocalVariable(name: "flags", scope: !12778, file: !3, line: 2442, type: !348)
!12802 = !DILocation(line: 2442, column: 41, scope: !12778)
!12803 = !DILocation(line: 2444, column: 2, scope: !12778)
!12804 = !DILocation(line: 2444, column: 2, scope: !12788)
!12805 = !DILocalVariable(name: "__dummy", scope: !12806, file: !3, line: 2444, type: !348)
!12806 = distinct !DILexicalBlock(scope: !12787, file: !3, line: 2444, column: 2)
!12807 = !DILocation(line: 2444, column: 2, scope: !12806)
!12808 = !DILocalVariable(name: "__dummy2", scope: !12806, file: !3, line: 2444, type: !348)
!12809 = !DILocation(line: 2444, column: 2, scope: !12787)
!12810 = !DILocation(line: 2444, column: 2, scope: !12786)
!12811 = !DILocation(line: 2444, column: 2, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12786, file: !3, line: 2444, column: 2)
!12813 = !DILocalVariable(name: "__dummy", scope: !12814, file: !3, line: 2444, type: !348)
!12814 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 2444, column: 2)
!12815 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 2444, column: 2)
!12816 = !DILocation(line: 2444, column: 2, scope: !12814)
!12817 = !DILocalVariable(name: "__dummy2", scope: !12814, file: !3, line: 2444, type: !348)
!12818 = !DILocation(line: 2444, column: 2, scope: !12815)
!12819 = !DILocation(line: 2444, column: 2, scope: !12785)
!12820 = !{i32 -2139631806}
!12821 = !DILocation(line: 2444, column: 2, scope: !12784)
!12822 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !12783)
!12823 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !12783)
!12824 = !DILocation(line: 2446, column: 6, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 2446, column: 6)
!12826 = !DILocation(line: 2446, column: 20, scope: !12825)
!12827 = !DILocation(line: 2446, column: 6, scope: !12778)
!12828 = !DILocation(line: 2447, column: 3, scope: !12825)
!12829 = !DILocation(line: 2449, column: 2, scope: !12778)
!12830 = !DILocation(line: 2449, column: 6, scope: !12778)
!12831 = !DILocation(line: 2449, column: 9, scope: !12778)
!12832 = !DILocation(line: 2449, column: 19, scope: !12778)
!12833 = !DILocation(line: 2450, column: 2, scope: !12778)
!12834 = !DILocation(line: 2450, column: 7, scope: !12778)
!12835 = !DILocation(line: 2450, column: 13, scope: !12778)
!12836 = !DILocation(line: 2450, column: 22, scope: !12778)
!12837 = !DILocation(line: 2451, column: 6, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 2451, column: 6)
!12839 = !DILocation(line: 2451, column: 6, scope: !12778)
!12840 = !DILocalVariable(name: "i", scope: !12841, file: !3, line: 2452, type: !7)
!12841 = distinct !DILexicalBlock(scope: !12838, file: !3, line: 2451, column: 28)
!12842 = !DILocation(line: 2452, column: 7, scope: !12841)
!12843 = !DILocation(line: 2455, column: 10, scope: !12841)
!12844 = !DILocation(line: 2455, column: 14, scope: !12841)
!12845 = !DILocation(line: 2455, column: 24, scope: !12841)
!12846 = !DILocation(line: 2455, column: 28, scope: !12841)
!12847 = !DILocation(line: 2455, column: 36, scope: !12841)
!12848 = !DILocation(line: 2455, column: 40, scope: !12841)
!12849 = !DILocation(line: 2456, column: 10, scope: !12841)
!12850 = !DILocation(line: 2456, column: 14, scope: !12841)
!12851 = !DILocation(line: 2453, column: 3, scope: !12841)
!12852 = !DILocation(line: 2457, column: 10, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 2457, column: 3)
!12854 = !DILocation(line: 2457, column: 8, scope: !12853)
!12855 = !DILocation(line: 2457, column: 15, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12853, file: !3, line: 2457, column: 3)
!12857 = !DILocation(line: 2457, column: 19, scope: !12856)
!12858 = !DILocation(line: 2457, column: 23, scope: !12856)
!12859 = !DILocation(line: 2457, column: 17, scope: !12856)
!12860 = !DILocation(line: 2457, column: 3, scope: !12853)
!12861 = !DILocation(line: 2458, column: 37, scope: !12856)
!12862 = !DILocation(line: 2458, column: 39, scope: !12856)
!12863 = !DILocation(line: 2459, column: 11, scope: !12856)
!12864 = !DILocation(line: 2460, column: 13, scope: !12856)
!12865 = !DILocation(line: 2460, column: 12, scope: !12856)
!12866 = !DILocation(line: 2460, column: 53, scope: !12856)
!12867 = !DILocation(line: 2461, column: 19, scope: !12856)
!12868 = !DILocation(line: 2462, column: 11, scope: !12856)
!12869 = !DILocation(line: 2458, column: 4, scope: !12856)
!12870 = !DILocation(line: 2457, column: 38, scope: !12856)
!12871 = !DILocation(line: 2457, column: 3, scope: !12856)
!12872 = distinct !{!12872, !12860, !12873}
!12873 = !DILocation(line: 2462, column: 45, scope: !12853)
!12874 = !DILocation(line: 2463, column: 10, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 2463, column: 3)
!12876 = !DILocation(line: 2463, column: 8, scope: !12875)
!12877 = !DILocation(line: 2463, column: 15, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12875, file: !3, line: 2463, column: 3)
!12879 = !DILocation(line: 2463, column: 19, scope: !12878)
!12880 = !DILocation(line: 2463, column: 23, scope: !12878)
!12881 = !DILocation(line: 2463, column: 17, scope: !12878)
!12882 = !DILocation(line: 2463, column: 3, scope: !12875)
!12883 = !DILocation(line: 2464, column: 37, scope: !12878)
!12884 = !DILocation(line: 2464, column: 39, scope: !12878)
!12885 = !DILocation(line: 2465, column: 11, scope: !12878)
!12886 = !DILocation(line: 2466, column: 13, scope: !12878)
!12887 = !DILocation(line: 2466, column: 12, scope: !12878)
!12888 = !DILocation(line: 2466, column: 49, scope: !12878)
!12889 = !DILocation(line: 2467, column: 11, scope: !12878)
!12890 = !DILocation(line: 2468, column: 11, scope: !12878)
!12891 = !DILocation(line: 2464, column: 4, scope: !12878)
!12892 = !DILocation(line: 2463, column: 38, scope: !12878)
!12893 = !DILocation(line: 2463, column: 3, scope: !12878)
!12894 = distinct !{!12894, !12882, !12895}
!12895 = !DILocation(line: 2468, column: 45, scope: !12875)
!12896 = !DILocation(line: 2469, column: 3, scope: !12841)
!12897 = !DILocation(line: 2470, column: 2, scope: !12841)
!12898 = !DILocation(line: 2471, column: 18, scope: !12778)
!12899 = !DILocation(line: 2471, column: 2, scope: !12778)
!12900 = !DILocation(line: 2473, column: 21, scope: !12778)
!12901 = !DILocation(line: 2473, column: 2, scope: !12778)
!12902 = !DILocation(line: 2474, column: 19, scope: !12778)
!12903 = !DILocation(line: 2474, column: 2, scope: !12778)
!12904 = !DILocation(line: 2476, column: 26, scope: !12778)
!12905 = !DILocation(line: 2476, column: 30, scope: !12778)
!12906 = !DILocation(line: 2476, column: 36, scope: !12778)
!12907 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !12780)
!12908 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !12780)
!12909 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !12780)
!12910 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !12780)
!12911 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !12780)
!12912 = !DILocation(line: 2477, column: 1, scope: !12778)
!12913 = distinct !DISubprogram(name: "pcnet32_get_stats", scope: !3, file: !3, line: 2651, type: !816, scopeLine: 2652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!12914 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !12915)
!12915 = distinct !DILocation(line: 2659, column: 2, scope: !12913)
!12916 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !12915)
!12917 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !12918)
!12918 = distinct !DILocation(line: 2657, column: 2, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12920, file: !3, line: 2657, column: 2)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 2657, column: 2)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 2657, column: 2)
!12922 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 2657, column: 2)
!12923 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2657, column: 2)
!12924 = !DILocalVariable(name: "dev", arg: 1, scope: !12913, file: !3, line: 2651, type: !326)
!12925 = !DILocation(line: 2651, column: 70, scope: !12913)
!12926 = !DILocalVariable(name: "lp", scope: !12913, file: !3, line: 2653, type: !7248)
!12927 = !DILocation(line: 2653, column: 26, scope: !12913)
!12928 = !DILocation(line: 2653, column: 43, scope: !12913)
!12929 = !DILocation(line: 2653, column: 31, scope: !12913)
!12930 = !DILocalVariable(name: "ioaddr", scope: !12913, file: !3, line: 2654, type: !348)
!12931 = !DILocation(line: 2654, column: 16, scope: !12913)
!12932 = !DILocation(line: 2654, column: 25, scope: !12913)
!12933 = !DILocation(line: 2654, column: 30, scope: !12913)
!12934 = !DILocalVariable(name: "flags", scope: !12913, file: !3, line: 2655, type: !348)
!12935 = !DILocation(line: 2655, column: 16, scope: !12913)
!12936 = !DILocation(line: 2657, column: 2, scope: !12913)
!12937 = !DILocation(line: 2657, column: 2, scope: !12923)
!12938 = !DILocalVariable(name: "__dummy", scope: !12939, file: !3, line: 2657, type: !348)
!12939 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 2657, column: 2)
!12940 = !DILocation(line: 2657, column: 2, scope: !12939)
!12941 = !DILocalVariable(name: "__dummy2", scope: !12939, file: !3, line: 2657, type: !348)
!12942 = !DILocation(line: 2657, column: 2, scope: !12922)
!12943 = !DILocation(line: 2657, column: 2, scope: !12921)
!12944 = !DILocation(line: 2657, column: 2, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 2657, column: 2)
!12946 = !DILocalVariable(name: "__dummy", scope: !12947, file: !3, line: 2657, type: !348)
!12947 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 2657, column: 2)
!12948 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 2657, column: 2)
!12949 = !DILocation(line: 2657, column: 2, scope: !12947)
!12950 = !DILocalVariable(name: "__dummy2", scope: !12947, file: !3, line: 2657, type: !348)
!12951 = !DILocation(line: 2657, column: 2, scope: !12948)
!12952 = !DILocation(line: 2657, column: 2, scope: !12920)
!12953 = !{i32 -2139624193}
!12954 = !DILocation(line: 2657, column: 2, scope: !12919)
!12955 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !12918)
!12956 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !12918)
!12957 = !DILocation(line: 2658, column: 32, scope: !12913)
!12958 = !DILocation(line: 2658, column: 36, scope: !12913)
!12959 = !DILocation(line: 2658, column: 39, scope: !12913)
!12960 = !DILocation(line: 2658, column: 48, scope: !12913)
!12961 = !DILocation(line: 2658, column: 2, scope: !12913)
!12962 = !DILocation(line: 2658, column: 7, scope: !12913)
!12963 = !DILocation(line: 2658, column: 13, scope: !12913)
!12964 = !DILocation(line: 2658, column: 30, scope: !12913)
!12965 = !DILocation(line: 2659, column: 26, scope: !12913)
!12966 = !DILocation(line: 2659, column: 30, scope: !12913)
!12967 = !DILocation(line: 2659, column: 36, scope: !12913)
!12968 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !12915)
!12969 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !12915)
!12970 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !12915)
!12971 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !12915)
!12972 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !12915)
!12973 = !DILocation(line: 2661, column: 10, scope: !12913)
!12974 = !DILocation(line: 2661, column: 15, scope: !12913)
!12975 = !DILocation(line: 2661, column: 2, scope: !12913)
!12976 = distinct !DISubprogram(name: "request_irq", scope: !3045, file: !3045, line: 157, type: !12977, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!12977 = !DISubroutineType(types: !12978)
!12978 = !{!7, !13, !12979, !348, !328, !626}
!12979 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3045, line: 92, baseType: !12980)
!12980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12981, size: 64)
!12981 = !DISubroutineType(types: !12982)
!12982 = !{!12983, !7, !626}
!12983 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7107, line: 17, baseType: !7106)
!12984 = !DILocalVariable(name: "irq", arg: 1, scope: !12976, file: !3045, line: 157, type: !13)
!12985 = !DILocation(line: 157, column: 26, scope: !12976)
!12986 = !DILocalVariable(name: "handler", arg: 2, scope: !12976, file: !3045, line: 157, type: !12979)
!12987 = !DILocation(line: 157, column: 45, scope: !12976)
!12988 = !DILocalVariable(name: "flags", arg: 3, scope: !12976, file: !3045, line: 157, type: !348)
!12989 = !DILocation(line: 157, column: 68, scope: !12976)
!12990 = !DILocalVariable(name: "name", arg: 4, scope: !12976, file: !3045, line: 158, type: !328)
!12991 = !DILocation(line: 158, column: 18, scope: !12976)
!12992 = !DILocalVariable(name: "dev", arg: 5, scope: !12976, file: !3045, line: 158, type: !626)
!12993 = !DILocation(line: 158, column: 30, scope: !12976)
!12994 = !DILocation(line: 160, column: 30, scope: !12976)
!12995 = !DILocation(line: 160, column: 35, scope: !12976)
!12996 = !DILocation(line: 160, column: 50, scope: !12976)
!12997 = !DILocation(line: 160, column: 57, scope: !12976)
!12998 = !DILocation(line: 160, column: 63, scope: !12976)
!12999 = !DILocation(line: 160, column: 9, scope: !12976)
!13000 = !DILocation(line: 160, column: 2, scope: !12976)
!13001 = distinct !DISubprogram(name: "pcnet32_interrupt", scope: !3, file: !3, line: 2541, type: !12981, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13002 = !DILocalVariable(name: "lock", arg: 1, scope: !13003, file: !8238, line: 392, type: !2215)
!13003 = distinct !DISubprogram(name: "spin_unlock", scope: !8238, file: !8238, line: 392, type: !13004, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{null, !2215}
!13006 = !DILocation(line: 392, column: 53, scope: !13003, inlinedAt: !13007)
!13007 = distinct !DILocation(line: 2604, column: 2, scope: !13001)
!13008 = !DILocalVariable(name: "lock", arg: 1, scope: !13009, file: !8238, line: 352, type: !2215)
!13009 = distinct !DISubprogram(name: "spin_lock", scope: !8238, file: !8238, line: 352, type: !13004, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13010 = !DILocation(line: 352, column: 51, scope: !13009, inlinedAt: !13011)
!13011 = distinct !DILocation(line: 2552, column: 2, scope: !13001)
!13012 = !DILocalVariable(name: "irq", arg: 1, scope: !13001, file: !3, line: 2541, type: !7)
!13013 = !DILocation(line: 2541, column: 23, scope: !13001)
!13014 = !DILocalVariable(name: "dev_id", arg: 2, scope: !13001, file: !3, line: 2541, type: !626)
!13015 = !DILocation(line: 2541, column: 34, scope: !13001)
!13016 = !DILocalVariable(name: "dev", scope: !13001, file: !3, line: 2543, type: !326)
!13017 = !DILocation(line: 2543, column: 21, scope: !13001)
!13018 = !DILocation(line: 2543, column: 27, scope: !13001)
!13019 = !DILocalVariable(name: "lp", scope: !13001, file: !3, line: 2544, type: !7248)
!13020 = !DILocation(line: 2544, column: 26, scope: !13001)
!13021 = !DILocalVariable(name: "ioaddr", scope: !13001, file: !3, line: 2545, type: !348)
!13022 = !DILocation(line: 2545, column: 16, scope: !13001)
!13023 = !DILocalVariable(name: "csr0", scope: !13001, file: !3, line: 2546, type: !616)
!13024 = !DILocation(line: 2546, column: 6, scope: !13001)
!13025 = !DILocalVariable(name: "boguscnt", scope: !13001, file: !3, line: 2547, type: !7)
!13026 = !DILocation(line: 2547, column: 6, scope: !13001)
!13027 = !DILocation(line: 2547, column: 17, scope: !13001)
!13028 = !DILocation(line: 2549, column: 11, scope: !13001)
!13029 = !DILocation(line: 2549, column: 16, scope: !13001)
!13030 = !DILocation(line: 2549, column: 9, scope: !13001)
!13031 = !DILocation(line: 2550, column: 19, scope: !13001)
!13032 = !DILocation(line: 2550, column: 7, scope: !13001)
!13033 = !DILocation(line: 2550, column: 5, scope: !13001)
!13034 = !DILocation(line: 2552, column: 13, scope: !13001)
!13035 = !DILocation(line: 2552, column: 17, scope: !13001)
!13036 = !DILocation(line: 354, column: 2, scope: !13037, inlinedAt: !13011)
!13037 = distinct !DILexicalBlock(scope: !13009, file: !8238, line: 354, column: 2)
!13038 = !{i32 -2145396051}
!13039 = !DILocation(line: 354, column: 2, scope: !13040, inlinedAt: !13011)
!13040 = distinct !DILexicalBlock(scope: !13037, file: !8238, line: 354, column: 2)
!13041 = !DILocation(line: 2554, column: 9, scope: !13001)
!13042 = !DILocation(line: 2554, column: 13, scope: !13001)
!13043 = !DILocation(line: 2554, column: 16, scope: !13001)
!13044 = !DILocation(line: 2554, column: 25, scope: !13001)
!13045 = !DILocation(line: 2554, column: 7, scope: !13001)
!13046 = !DILocation(line: 2555, column: 2, scope: !13001)
!13047 = !DILocation(line: 2555, column: 10, scope: !13001)
!13048 = !DILocation(line: 2555, column: 15, scope: !13001)
!13049 = !DILocation(line: 2555, column: 25, scope: !13001)
!13050 = !DILocation(line: 2555, column: 28, scope: !13001)
!13051 = !DILocation(line: 2555, column: 39, scope: !13001)
!13052 = !DILocation(line: 0, scope: !13001)
!13053 = !DILocation(line: 2556, column: 7, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2556, column: 7)
!13055 = distinct !DILexicalBlock(scope: !13001, file: !3, line: 2555, column: 45)
!13056 = !DILocation(line: 2556, column: 12, scope: !13054)
!13057 = !DILocation(line: 2556, column: 7, scope: !13055)
!13058 = !DILocation(line: 2557, column: 4, scope: !13054)
!13059 = !DILocation(line: 2559, column: 3, scope: !13055)
!13060 = !DILocation(line: 2559, column: 7, scope: !13055)
!13061 = !DILocation(line: 2559, column: 10, scope: !13055)
!13062 = !DILocation(line: 2559, column: 20, scope: !13055)
!13063 = !DILocation(line: 2559, column: 34, scope: !13055)
!13064 = !DILocation(line: 2559, column: 39, scope: !13055)
!13065 = !DILocation(line: 2561, column: 3, scope: !13055)
!13066 = !DILocation(line: 2561, column: 3, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 2561, column: 3)
!13068 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2561, column: 3)
!13069 = !DILocation(line: 2561, column: 3, scope: !13068)
!13070 = !DILocation(line: 2566, column: 7, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2566, column: 7)
!13072 = !DILocation(line: 2566, column: 12, scope: !13071)
!13073 = !DILocation(line: 2566, column: 7, scope: !13055)
!13074 = !DILocation(line: 2567, column: 4, scope: !13071)
!13075 = !DILocation(line: 2567, column: 9, scope: !13071)
!13076 = !DILocation(line: 2567, column: 15, scope: !13071)
!13077 = !DILocation(line: 2567, column: 24, scope: !13071)
!13078 = !DILocation(line: 2568, column: 7, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2568, column: 7)
!13080 = !DILocation(line: 2568, column: 12, scope: !13079)
!13081 = !DILocation(line: 2568, column: 7, scope: !13055)
!13082 = !DILocation(line: 2580, column: 4, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13079, file: !3, line: 2568, column: 22)
!13084 = !DILocation(line: 2580, column: 9, scope: !13083)
!13085 = !DILocation(line: 2580, column: 15, scope: !13083)
!13086 = !DILocation(line: 2580, column: 24, scope: !13083)
!13087 = !DILocation(line: 2581, column: 3, scope: !13083)
!13088 = !DILocation(line: 2582, column: 7, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2582, column: 7)
!13090 = !DILocation(line: 2582, column: 12, scope: !13089)
!13091 = !DILocation(line: 2582, column: 7, scope: !13055)
!13092 = !DILocation(line: 2583, column: 4, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13089, file: !3, line: 2582, column: 22)
!13094 = !DILocation(line: 2583, column: 4, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 2583, column: 4)
!13096 = distinct !DILexicalBlock(scope: !13093, file: !3, line: 2583, column: 4)
!13097 = !DILocation(line: 2583, column: 4, scope: !13096)
!13098 = !DILocation(line: 2586, column: 3, scope: !13093)
!13099 = !DILocation(line: 2587, column: 27, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2587, column: 7)
!13101 = !DILocation(line: 2587, column: 31, scope: !13100)
!13102 = !DILocation(line: 2587, column: 7, scope: !13100)
!13103 = !DILocation(line: 2587, column: 7, scope: !13055)
!13104 = !DILocalVariable(name: "val", scope: !13105, file: !3, line: 2588, type: !616)
!13105 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 2587, column: 38)
!13106 = !DILocation(line: 2588, column: 8, scope: !13105)
!13107 = !DILocation(line: 2590, column: 10, scope: !13105)
!13108 = !DILocation(line: 2590, column: 14, scope: !13105)
!13109 = !DILocation(line: 2590, column: 17, scope: !13105)
!13110 = !DILocation(line: 2590, column: 26, scope: !13105)
!13111 = !DILocation(line: 2590, column: 8, scope: !13105)
!13112 = !DILocation(line: 2591, column: 8, scope: !13105)
!13113 = !DILocation(line: 2592, column: 4, scope: !13105)
!13114 = !DILocation(line: 2592, column: 8, scope: !13105)
!13115 = !DILocation(line: 2592, column: 11, scope: !13105)
!13116 = !DILocation(line: 2592, column: 21, scope: !13105)
!13117 = !DILocation(line: 2592, column: 35, scope: !13105)
!13118 = !DILocation(line: 2594, column: 21, scope: !13105)
!13119 = !DILocation(line: 2594, column: 25, scope: !13105)
!13120 = !DILocation(line: 2594, column: 4, scope: !13105)
!13121 = !DILocation(line: 2595, column: 4, scope: !13105)
!13122 = !DILocation(line: 2597, column: 10, scope: !13055)
!13123 = !DILocation(line: 2597, column: 14, scope: !13055)
!13124 = !DILocation(line: 2597, column: 17, scope: !13055)
!13125 = !DILocation(line: 2597, column: 26, scope: !13055)
!13126 = !DILocation(line: 2597, column: 8, scope: !13055)
!13127 = distinct !{!13127, !13046, !13128}
!13128 = !DILocation(line: 2598, column: 2, scope: !13001)
!13129 = !DILocation(line: 2600, column: 2, scope: !13001)
!13130 = !DILocation(line: 2600, column: 2, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 2600, column: 2)
!13132 = distinct !DILexicalBlock(scope: !13001, file: !3, line: 2600, column: 2)
!13133 = !DILocation(line: 2600, column: 2, scope: !13132)
!13134 = !DILocation(line: 2604, column: 15, scope: !13001)
!13135 = !DILocation(line: 2604, column: 19, scope: !13001)
!13136 = !DILocation(line: 394, column: 2, scope: !13137, inlinedAt: !13007)
!13137 = distinct !DILexicalBlock(scope: !13003, file: !8238, line: 394, column: 2)
!13138 = !{i32 -2145393690}
!13139 = !DILocation(line: 394, column: 2, scope: !13140, inlinedAt: !13007)
!13140 = distinct !DILexicalBlock(scope: !13137, file: !8238, line: 394, column: 2)
!13141 = !DILocation(line: 2606, column: 2, scope: !13001)
!13142 = distinct !DISubprogram(name: "ethtool_cmd_speed_set", scope: !239, file: !239, line: 116, type: !13143, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13143 = !DISubroutineType(types: !13144)
!13144 = !{null, !13145, !528}
!13145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11550, size: 64)
!13146 = !DILocalVariable(name: "ep", arg: 1, scope: !13142, file: !239, line: 116, type: !13145)
!13147 = !DILocation(line: 116, column: 62, scope: !13142)
!13148 = !DILocalVariable(name: "speed", arg: 2, scope: !13142, file: !239, line: 117, type: !528)
!13149 = !DILocation(line: 117, column: 13, scope: !13142)
!13150 = !DILocation(line: 119, column: 22, scope: !13142)
!13151 = !DILocation(line: 119, column: 28, scope: !13142)
!13152 = !DILocation(line: 119, column: 14, scope: !13142)
!13153 = !DILocation(line: 119, column: 2, scope: !13142)
!13154 = !DILocation(line: 119, column: 6, scope: !13142)
!13155 = !DILocation(line: 119, column: 12, scope: !13142)
!13156 = !DILocation(line: 120, column: 25, scope: !13142)
!13157 = !DILocation(line: 120, column: 31, scope: !13142)
!13158 = !DILocation(line: 120, column: 17, scope: !13142)
!13159 = !DILocation(line: 120, column: 2, scope: !13142)
!13160 = !DILocation(line: 120, column: 6, scope: !13142)
!13161 = !DILocation(line: 120, column: 15, scope: !13142)
!13162 = !DILocation(line: 121, column: 1, scope: !13142)
!13163 = distinct !DISubprogram(name: "pcnet32_load_multicast", scope: !3, file: !3, line: 2665, type: !442, scopeLine: 2666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13164 = !DILocalVariable(name: "dev", arg: 1, scope: !13163, file: !3, line: 2665, type: !326)
!13165 = !DILocation(line: 2665, column: 55, scope: !13163)
!13166 = !DILocalVariable(name: "lp", scope: !13163, file: !3, line: 2667, type: !7248)
!13167 = !DILocation(line: 2667, column: 26, scope: !13163)
!13168 = !DILocation(line: 2667, column: 43, scope: !13163)
!13169 = !DILocation(line: 2667, column: 31, scope: !13163)
!13170 = !DILocalVariable(name: "ib", scope: !13163, file: !3, line: 2668, type: !13171)
!13171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13172, size: 64)
!13172 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7253)
!13173 = !DILocation(line: 2668, column: 38, scope: !13163)
!13174 = !DILocation(line: 2668, column: 43, scope: !13163)
!13175 = !DILocation(line: 2668, column: 47, scope: !13163)
!13176 = !DILocalVariable(name: "mcast_table", scope: !13163, file: !3, line: 2669, type: !13177)
!13177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13178, size: 64)
!13178 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7244)
!13179 = !DILocation(line: 2669, column: 19, scope: !13163)
!13180 = !DILocation(line: 2669, column: 43, scope: !13163)
!13181 = !DILocation(line: 2669, column: 47, scope: !13163)
!13182 = !DILocation(line: 2669, column: 33, scope: !13163)
!13183 = !DILocalVariable(name: "ha", scope: !13163, file: !3, line: 2670, type: !7664)
!13184 = !DILocation(line: 2670, column: 25, scope: !13163)
!13185 = !DILocalVariable(name: "ioaddr", scope: !13163, file: !3, line: 2671, type: !348)
!13186 = !DILocation(line: 2671, column: 16, scope: !13163)
!13187 = !DILocation(line: 2671, column: 25, scope: !13163)
!13188 = !DILocation(line: 2671, column: 30, scope: !13163)
!13189 = !DILocalVariable(name: "i", scope: !13163, file: !3, line: 2672, type: !7)
!13190 = !DILocation(line: 2672, column: 6, scope: !13163)
!13191 = !DILocalVariable(name: "crc", scope: !13163, file: !3, line: 2673, type: !1022)
!13192 = !DILocation(line: 2673, column: 6, scope: !13163)
!13193 = !DILocation(line: 2676, column: 6, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 2676, column: 6)
!13195 = !DILocation(line: 2676, column: 11, scope: !13194)
!13196 = !DILocation(line: 2676, column: 17, scope: !13194)
!13197 = !DILocation(line: 2676, column: 6, scope: !13163)
!13198 = !DILocation(line: 2677, column: 3, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13194, file: !3, line: 2676, column: 33)
!13200 = !DILocation(line: 2677, column: 7, scope: !13199)
!13201 = !DILocation(line: 2677, column: 17, scope: !13199)
!13202 = !DILocation(line: 2678, column: 3, scope: !13199)
!13203 = !DILocation(line: 2678, column: 7, scope: !13199)
!13204 = !DILocation(line: 2678, column: 17, scope: !13199)
!13205 = !DILocation(line: 2679, column: 3, scope: !13199)
!13206 = !DILocation(line: 2679, column: 7, scope: !13199)
!13207 = !DILocation(line: 2679, column: 10, scope: !13199)
!13208 = !DILocation(line: 2679, column: 20, scope: !13199)
!13209 = !DILocation(line: 2680, column: 3, scope: !13199)
!13210 = !DILocation(line: 2680, column: 7, scope: !13199)
!13211 = !DILocation(line: 2680, column: 10, scope: !13199)
!13212 = !DILocation(line: 2680, column: 20, scope: !13199)
!13213 = !DILocation(line: 2681, column: 3, scope: !13199)
!13214 = !DILocation(line: 2681, column: 7, scope: !13199)
!13215 = !DILocation(line: 2681, column: 10, scope: !13199)
!13216 = !DILocation(line: 2681, column: 20, scope: !13199)
!13217 = !DILocation(line: 2682, column: 3, scope: !13199)
!13218 = !DILocation(line: 2682, column: 7, scope: !13199)
!13219 = !DILocation(line: 2682, column: 10, scope: !13199)
!13220 = !DILocation(line: 2682, column: 20, scope: !13199)
!13221 = !DILocation(line: 2683, column: 3, scope: !13199)
!13222 = !DILocation(line: 2686, column: 2, scope: !13163)
!13223 = !DILocation(line: 2686, column: 6, scope: !13163)
!13224 = !DILocation(line: 2686, column: 16, scope: !13163)
!13225 = !DILocation(line: 2687, column: 2, scope: !13163)
!13226 = !DILocation(line: 2687, column: 6, scope: !13163)
!13227 = !DILocation(line: 2687, column: 16, scope: !13163)
!13228 = !DILocalVariable(name: "__mptr", scope: !13229, file: !3, line: 2690, type: !626)
!13229 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 2690, column: 2)
!13230 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 2690, column: 2)
!13231 = !DILocation(line: 2690, column: 2, scope: !13229)
!13232 = !DILocation(line: 2690, column: 2, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13229, file: !3, line: 2690, column: 2)
!13234 = !DILocation(line: 2690, column: 2, scope: !13230)
!13235 = !DILocation(line: 2690, column: 2, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 2690, column: 2)
!13237 = !DILocation(line: 2691, column: 9, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13236, file: !3, line: 2690, column: 35)
!13239 = !DILocation(line: 2691, column: 7, scope: !13238)
!13240 = !DILocation(line: 2692, column: 9, scope: !13238)
!13241 = !DILocation(line: 2692, column: 13, scope: !13238)
!13242 = !DILocation(line: 2692, column: 7, scope: !13238)
!13243 = !DILocation(line: 2693, column: 28, scope: !13238)
!13244 = !DILocation(line: 2693, column: 3, scope: !13238)
!13245 = !DILocation(line: 2693, column: 15, scope: !13238)
!13246 = !DILocation(line: 2693, column: 19, scope: !13238)
!13247 = !DILocation(line: 2693, column: 25, scope: !13238)
!13248 = !DILocation(line: 2694, column: 2, scope: !13238)
!13249 = !DILocalVariable(name: "__mptr", scope: !13250, file: !3, line: 2690, type: !626)
!13250 = distinct !DILexicalBlock(scope: !13236, file: !3, line: 2690, column: 2)
!13251 = !DILocation(line: 2690, column: 2, scope: !13250)
!13252 = !DILocation(line: 2690, column: 2, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13250, file: !3, line: 2690, column: 2)
!13254 = distinct !{!13254, !13234, !13255}
!13255 = !DILocation(line: 2694, column: 2, scope: !13230)
!13256 = !DILocation(line: 2695, column: 9, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 2695, column: 2)
!13258 = !DILocation(line: 2695, column: 7, scope: !13257)
!13259 = !DILocation(line: 2695, column: 14, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13257, file: !3, line: 2695, column: 2)
!13261 = !DILocation(line: 2695, column: 16, scope: !13260)
!13262 = !DILocation(line: 2695, column: 2, scope: !13257)
!13263 = !DILocation(line: 2696, column: 3, scope: !13260)
!13264 = !DILocation(line: 2696, column: 7, scope: !13260)
!13265 = !DILocation(line: 2696, column: 10, scope: !13260)
!13266 = !DILocation(line: 2696, column: 20, scope: !13260)
!13267 = !DILocation(line: 2696, column: 48, scope: !13260)
!13268 = !DILocation(line: 2696, column: 46, scope: !13260)
!13269 = !DILocation(line: 2697, column: 5, scope: !13260)
!13270 = !DILocation(line: 2695, column: 22, scope: !13260)
!13271 = !DILocation(line: 2695, column: 2, scope: !13260)
!13272 = distinct !{!13272, !13262, !13273}
!13273 = !DILocation(line: 2697, column: 32, scope: !13257)
!13274 = !DILocation(line: 2698, column: 1, scope: !13163)
!13275 = distinct !DISubprogram(name: "napi_enable", scope: !6, file: !6, line: 507, type: !13276, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{null, !7615}
!13278 = !DILocalVariable(name: "n", arg: 1, scope: !13275, file: !6, line: 507, type: !7615)
!13279 = !DILocation(line: 507, column: 52, scope: !13275)
!13280 = !DILocation(line: 509, column: 2, scope: !13275)
!13281 = !DILocation(line: 509, column: 2, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13283, file: !6, line: 509, column: 2)
!13283 = distinct !DILexicalBlock(scope: !13275, file: !6, line: 509, column: 2)
!13284 = !DILocation(line: 509, column: 2, scope: !13283)
!13285 = !DILocation(line: 509, column: 2, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13282, file: !6, line: 509, column: 2)
!13287 = !DILocation(line: 509, column: 2, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13286, file: !6, line: 509, column: 2)
!13289 = !DILocation(line: 509, column: 2, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13286, file: !6, line: 509, column: 2)
!13291 = !{i32 -2139928578, i32 -2139928549, i32 -2139928503, i32 -2139928445, i32 -2139928391, i32 -2139928337, i32 -2139928282, i32 -2139928251}
!13292 = !DILocation(line: 509, column: 2, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13294, file: !6, line: 509, column: 2)
!13294 = distinct !DILexicalBlock(scope: !13286, file: !6, line: 509, column: 2)
!13295 = !{i32 -2139927803, i32 -2139927796, i32 -2139927742, i32 -2139927711, i32 -2139927681}
!13296 = !DILocation(line: 509, column: 2, scope: !13294)
!13297 = !DILocation(line: 510, column: 2, scope: !13275)
!13298 = !{i32 -2139927612}
!13299 = !DILocation(line: 511, column: 31, scope: !13275)
!13300 = !DILocation(line: 511, column: 34, scope: !13275)
!13301 = !DILocation(line: 511, column: 2, scope: !13275)
!13302 = !DILocation(line: 512, column: 31, scope: !13275)
!13303 = !DILocation(line: 512, column: 34, scope: !13275)
!13304 = !DILocation(line: 512, column: 2, scope: !13275)
!13305 = !DILocation(line: 513, column: 1, scope: !13275)
!13306 = distinct !DISubprogram(name: "netif_start_queue", scope: !6, file: !6, line: 3285, type: !442, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13307 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13308, file: !6, line: 3274, type: !6438)
!13308 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !6, file: !6, line: 3274, type: !13309, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13309 = !DISubroutineType(types: !13310)
!13310 = !{null, !6438}
!13311 = !DILocation(line: 3274, column: 71, scope: !13308, inlinedAt: !13312)
!13312 = distinct !DILocation(line: 3287, column: 2, scope: !13306)
!13313 = !DILocalVariable(name: "dev", arg: 1, scope: !13306, file: !6, line: 3285, type: !326)
!13314 = !DILocation(line: 3285, column: 57, scope: !13306)
!13315 = !DILocation(line: 3287, column: 43, scope: !13306)
!13316 = !DILocation(line: 3287, column: 23, scope: !13306)
!13317 = !DILocation(line: 3276, column: 37, scope: !13308, inlinedAt: !13312)
!13318 = !DILocation(line: 3276, column: 48, scope: !13308, inlinedAt: !13312)
!13319 = !DILocation(line: 3276, column: 2, scope: !13308, inlinedAt: !13312)
!13320 = !DILocation(line: 3288, column: 1, scope: !13306)
!13321 = distinct !DISubprogram(name: "pcnet32_purge_rx_ring", scope: !3, file: !3, line: 641, type: !442, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13322 = !DILocalVariable(name: "dev", arg: 1, scope: !13321, file: !3, line: 641, type: !326)
!13323 = !DILocation(line: 641, column: 54, scope: !13321)
!13324 = !DILocalVariable(name: "lp", scope: !13321, file: !3, line: 643, type: !7248)
!13325 = !DILocation(line: 643, column: 26, scope: !13321)
!13326 = !DILocation(line: 643, column: 43, scope: !13321)
!13327 = !DILocation(line: 643, column: 31, scope: !13321)
!13328 = !DILocalVariable(name: "i", scope: !13321, file: !3, line: 644, type: !7)
!13329 = !DILocation(line: 644, column: 6, scope: !13321)
!13330 = !DILocation(line: 647, column: 9, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13321, file: !3, line: 647, column: 2)
!13332 = !DILocation(line: 647, column: 7, scope: !13331)
!13333 = !DILocation(line: 647, column: 14, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13331, file: !3, line: 647, column: 2)
!13335 = !DILocation(line: 647, column: 18, scope: !13334)
!13336 = !DILocation(line: 647, column: 22, scope: !13334)
!13337 = !DILocation(line: 647, column: 16, scope: !13334)
!13338 = !DILocation(line: 647, column: 2, scope: !13331)
!13339 = !DILocation(line: 648, column: 3, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13334, file: !3, line: 647, column: 41)
!13341 = !DILocation(line: 648, column: 7, scope: !13340)
!13342 = !DILocation(line: 648, column: 15, scope: !13340)
!13343 = !DILocation(line: 648, column: 18, scope: !13340)
!13344 = !DILocation(line: 648, column: 25, scope: !13340)
!13345 = !DILocation(line: 649, column: 3, scope: !13340)
!13346 = !{i32 -2139688468}
!13347 = !DILocation(line: 650, column: 7, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 650, column: 7)
!13349 = !DILocation(line: 650, column: 11, scope: !13348)
!13350 = !DILocation(line: 650, column: 21, scope: !13348)
!13351 = !DILocation(line: 650, column: 7, scope: !13340)
!13352 = !DILocation(line: 651, column: 28, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13354, file: !3, line: 651, column: 8)
!13354 = distinct !DILexicalBlock(scope: !13348, file: !3, line: 650, column: 25)
!13355 = !DILocation(line: 651, column: 32, scope: !13353)
!13356 = !DILocation(line: 651, column: 41, scope: !13353)
!13357 = !DILocation(line: 651, column: 46, scope: !13353)
!13358 = !DILocation(line: 651, column: 50, scope: !13353)
!13359 = !DILocation(line: 651, column: 62, scope: !13353)
!13360 = !DILocation(line: 651, column: 9, scope: !13353)
!13361 = !DILocation(line: 651, column: 8, scope: !13354)
!13362 = !DILocation(line: 652, column: 5, scope: !13353)
!13363 = !DILocation(line: 656, column: 22, scope: !13354)
!13364 = !DILocation(line: 656, column: 26, scope: !13354)
!13365 = !DILocation(line: 656, column: 36, scope: !13354)
!13366 = !DILocation(line: 656, column: 4, scope: !13354)
!13367 = !DILocation(line: 657, column: 3, scope: !13354)
!13368 = !DILocation(line: 658, column: 3, scope: !13340)
!13369 = !DILocation(line: 658, column: 7, scope: !13340)
!13370 = !DILocation(line: 658, column: 17, scope: !13340)
!13371 = !DILocation(line: 658, column: 20, scope: !13340)
!13372 = !DILocation(line: 659, column: 3, scope: !13340)
!13373 = !DILocation(line: 659, column: 7, scope: !13340)
!13374 = !DILocation(line: 659, column: 19, scope: !13340)
!13375 = !DILocation(line: 659, column: 22, scope: !13340)
!13376 = !DILocation(line: 660, column: 2, scope: !13340)
!13377 = !DILocation(line: 647, column: 37, scope: !13334)
!13378 = !DILocation(line: 647, column: 2, scope: !13334)
!13379 = distinct !{!13379, !13338, !13380}
!13380 = !DILocation(line: 660, column: 2, scope: !13331)
!13381 = !DILocation(line: 661, column: 1, scope: !13321)
!13382 = distinct !DISubprogram(name: "clear_bit", scope: !13383, file: !13383, line: 39, type: !13384, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13383 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13384 = !DISubroutineType(types: !13385)
!13385 = !{null, !1033, !13386}
!13386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10711, size: 64)
!13387 = !DILocalVariable(name: "nr", arg: 1, scope: !13388, file: !10714, line: 72, type: !1033)
!13388 = distinct !DISubprogram(name: "arch_clear_bit", scope: !10714, file: !10714, line: 72, type: !13384, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13389 = !DILocation(line: 72, column: 21, scope: !13388, inlinedAt: !13390)
!13390 = distinct !DILocation(line: 42, column: 2, scope: !13382)
!13391 = !DILocalVariable(name: "addr", arg: 2, scope: !13388, file: !10714, line: 72, type: !13386)
!13392 = !DILocation(line: 72, column: 49, scope: !13388, inlinedAt: !13390)
!13393 = !DILocalVariable(name: "v", arg: 1, scope: !13394, file: !10729, line: 84, type: !10732)
!13394 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !10729, file: !10729, line: 84, type: !10730, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13395 = !DILocation(line: 84, column: 74, scope: !13394, inlinedAt: !13396)
!13396 = distinct !DILocation(line: 41, column: 2, scope: !13382)
!13397 = !DILocalVariable(name: "size", arg: 2, scope: !13394, file: !10729, line: 84, type: !1074)
!13398 = !DILocation(line: 84, column: 84, scope: !13394, inlinedAt: !13396)
!13399 = !DILocalVariable(name: "nr", arg: 1, scope: !13382, file: !13383, line: 39, type: !1033)
!13400 = !DILocation(line: 39, column: 35, scope: !13382)
!13401 = !DILocalVariable(name: "addr", arg: 2, scope: !13382, file: !13383, line: 39, type: !13386)
!13402 = !DILocation(line: 39, column: 63, scope: !13382)
!13403 = !DILocation(line: 41, column: 26, scope: !13382)
!13404 = !DILocation(line: 41, column: 33, scope: !13382)
!13405 = !DILocation(line: 41, column: 31, scope: !13382)
!13406 = !DILocation(line: 86, column: 20, scope: !13394, inlinedAt: !13396)
!13407 = !DILocation(line: 86, column: 23, scope: !13394, inlinedAt: !13396)
!13408 = !DILocation(line: 86, column: 2, scope: !13394, inlinedAt: !13396)
!13409 = !DILocation(line: 87, column: 2, scope: !13394, inlinedAt: !13396)
!13410 = !DILocation(line: 42, column: 17, scope: !13382)
!13411 = !DILocation(line: 42, column: 21, scope: !13382)
!13412 = !DILocation(line: 74, column: 27, scope: !13413, inlinedAt: !13390)
!13413 = distinct !DILexicalBlock(scope: !13388, file: !10714, line: 74, column: 6)
!13414 = !DILocation(line: 74, column: 6, scope: !13413, inlinedAt: !13390)
!13415 = !DILocation(line: 74, column: 6, scope: !13388, inlinedAt: !13390)
!13416 = !DILocation(line: 76, column: 6, scope: !13417, inlinedAt: !13390)
!13417 = distinct !DILexicalBlock(scope: !13413, file: !10714, line: 74, column: 32)
!13418 = !DILocation(line: 77, column: 13, scope: !13417, inlinedAt: !13390)
!13419 = !DILocation(line: 77, column: 12, scope: !13417, inlinedAt: !13390)
!13420 = !DILocation(line: 75, column: 3, scope: !13417, inlinedAt: !13390)
!13421 = !{i32 -2147068241}
!13422 = !DILocation(line: 78, column: 2, scope: !13417, inlinedAt: !13390)
!13423 = !DILocation(line: 80, column: 8, scope: !13424, inlinedAt: !13390)
!13424 = distinct !DILexicalBlock(scope: !13413, file: !10714, line: 78, column: 9)
!13425 = !DILocation(line: 80, column: 32, scope: !13424, inlinedAt: !13390)
!13426 = !DILocation(line: 79, column: 3, scope: !13424, inlinedAt: !13390)
!13427 = !{i32 -2147068109}
!13428 = !DILocation(line: 43, column: 1, scope: !13382)
!13429 = distinct !DISubprogram(name: "kasan_check_write", scope: !10766, file: !10766, line: 38, type: !10767, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13430 = !DILocalVariable(name: "p", arg: 1, scope: !13429, file: !10766, line: 38, type: !10732)
!13431 = !DILocation(line: 38, column: 59, scope: !13429)
!13432 = !DILocalVariable(name: "size", arg: 2, scope: !13429, file: !10766, line: 38, type: !13)
!13433 = !DILocation(line: 38, column: 75, scope: !13429)
!13434 = !DILocation(line: 40, column: 2, scope: !13429)
!13435 = distinct !DISubprogram(name: "netif_stop_queue", scope: !6, file: !6, line: 3336, type: !442, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13436 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13437, file: !6, line: 3324, type: !6438)
!13437 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !6, file: !6, line: 3324, type: !13309, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13438 = !DILocation(line: 3324, column: 70, scope: !13437, inlinedAt: !13439)
!13439 = distinct !DILocation(line: 3338, column: 2, scope: !13435)
!13440 = !DILocalVariable(name: "dev", arg: 1, scope: !13435, file: !6, line: 3336, type: !326)
!13441 = !DILocation(line: 3336, column: 56, scope: !13435)
!13442 = !DILocation(line: 3338, column: 42, scope: !13435)
!13443 = !DILocation(line: 3338, column: 22, scope: !13435)
!13444 = !DILocation(line: 3326, column: 35, scope: !13437, inlinedAt: !13439)
!13445 = !DILocation(line: 3326, column: 46, scope: !13437, inlinedAt: !13439)
!13446 = !DILocation(line: 3326, column: 2, scope: !13437, inlinedAt: !13439)
!13447 = !DILocation(line: 3339, column: 1, scope: !13435)
!13448 = distinct !DISubprogram(name: "set_bit", scope: !13383, file: !13383, line: 26, type: !13384, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13449 = !DILocalVariable(name: "nr", arg: 1, scope: !13450, file: !10714, line: 52, type: !1033)
!13450 = distinct !DISubprogram(name: "arch_set_bit", scope: !10714, file: !10714, line: 52, type: !13384, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13451 = !DILocation(line: 52, column: 19, scope: !13450, inlinedAt: !13452)
!13452 = distinct !DILocation(line: 29, column: 2, scope: !13448)
!13453 = !DILocalVariable(name: "addr", arg: 2, scope: !13450, file: !10714, line: 52, type: !13386)
!13454 = !DILocation(line: 52, column: 47, scope: !13450, inlinedAt: !13452)
!13455 = !DILocation(line: 84, column: 74, scope: !13394, inlinedAt: !13456)
!13456 = distinct !DILocation(line: 28, column: 2, scope: !13448)
!13457 = !DILocation(line: 84, column: 84, scope: !13394, inlinedAt: !13456)
!13458 = !DILocalVariable(name: "nr", arg: 1, scope: !13448, file: !13383, line: 26, type: !1033)
!13459 = !DILocation(line: 26, column: 33, scope: !13448)
!13460 = !DILocalVariable(name: "addr", arg: 2, scope: !13448, file: !13383, line: 26, type: !13386)
!13461 = !DILocation(line: 26, column: 61, scope: !13448)
!13462 = !DILocation(line: 28, column: 26, scope: !13448)
!13463 = !DILocation(line: 28, column: 33, scope: !13448)
!13464 = !DILocation(line: 28, column: 31, scope: !13448)
!13465 = !DILocation(line: 86, column: 20, scope: !13394, inlinedAt: !13456)
!13466 = !DILocation(line: 86, column: 23, scope: !13394, inlinedAt: !13456)
!13467 = !DILocation(line: 86, column: 2, scope: !13394, inlinedAt: !13456)
!13468 = !DILocation(line: 87, column: 2, scope: !13394, inlinedAt: !13456)
!13469 = !DILocation(line: 29, column: 15, scope: !13448)
!13470 = !DILocation(line: 29, column: 19, scope: !13448)
!13471 = !DILocation(line: 54, column: 27, scope: !13472, inlinedAt: !13452)
!13472 = distinct !DILexicalBlock(scope: !13450, file: !10714, line: 54, column: 6)
!13473 = !DILocation(line: 54, column: 6, scope: !13472, inlinedAt: !13452)
!13474 = !DILocation(line: 54, column: 6, scope: !13450, inlinedAt: !13452)
!13475 = !DILocation(line: 56, column: 6, scope: !13476, inlinedAt: !13452)
!13476 = distinct !DILexicalBlock(scope: !13472, file: !10714, line: 54, column: 32)
!13477 = !DILocation(line: 57, column: 12, scope: !13476, inlinedAt: !13452)
!13478 = !DILocation(line: 55, column: 3, scope: !13476, inlinedAt: !13452)
!13479 = !{i32 -2147069195}
!13480 = !DILocation(line: 59, column: 2, scope: !13476, inlinedAt: !13452)
!13481 = !DILocation(line: 61, column: 8, scope: !13482, inlinedAt: !13452)
!13482 = distinct !DILexicalBlock(scope: !13472, file: !10714, line: 59, column: 9)
!13483 = !DILocation(line: 61, column: 32, scope: !13482, inlinedAt: !13452)
!13484 = !DILocation(line: 60, column: 3, scope: !13482, inlinedAt: !13452)
!13485 = !{i32 -2147069063}
!13486 = !DILocation(line: 30, column: 1, scope: !13448)
!13487 = distinct !DISubprogram(name: "pcnet32_suspend", scope: !3, file: !3, line: 675, type: !13488, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13488 = !DISubroutineType(types: !13489)
!13489 = !{!7, !326, !3472, !7}
!13490 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !13491)
!13491 = distinct !DILocation(line: 700, column: 3, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13493, file: !3, line: 700, column: 3)
!13493 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 700, column: 3)
!13494 = distinct !DILexicalBlock(scope: !13495, file: !3, line: 700, column: 3)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !3, line: 700, column: 3)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !3, line: 700, column: 3)
!13497 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 694, column: 54)
!13498 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !13499)
!13499 = distinct !DILocation(line: 695, column: 3, scope: !13497)
!13500 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !13499)
!13501 = !DILocalVariable(name: "dev", arg: 1, scope: !13487, file: !3, line: 675, type: !326)
!13502 = !DILocation(line: 675, column: 47, scope: !13487)
!13503 = !DILocalVariable(name: "flags", arg: 2, scope: !13487, file: !3, line: 675, type: !3472)
!13504 = !DILocation(line: 675, column: 67, scope: !13487)
!13505 = !DILocalVariable(name: "can_sleep", arg: 3, scope: !13487, file: !3, line: 676, type: !7)
!13506 = !DILocation(line: 676, column: 11, scope: !13487)
!13507 = !DILocalVariable(name: "csr5", scope: !13487, file: !3, line: 678, type: !7)
!13508 = !DILocation(line: 678, column: 6, scope: !13487)
!13509 = !DILocalVariable(name: "lp", scope: !13487, file: !3, line: 679, type: !7248)
!13510 = !DILocation(line: 679, column: 26, scope: !13487)
!13511 = !DILocation(line: 679, column: 43, scope: !13487)
!13512 = !DILocation(line: 679, column: 31, scope: !13487)
!13513 = !DILocalVariable(name: "a", scope: !13487, file: !3, line: 680, type: !7563)
!13514 = !DILocation(line: 680, column: 31, scope: !13487)
!13515 = !DILocation(line: 680, column: 35, scope: !13487)
!13516 = !DILocation(line: 680, column: 39, scope: !13487)
!13517 = !DILocalVariable(name: "ioaddr", scope: !13487, file: !3, line: 681, type: !11471)
!13518 = !DILocation(line: 681, column: 8, scope: !13487)
!13519 = !DILocation(line: 681, column: 17, scope: !13487)
!13520 = !DILocation(line: 681, column: 22, scope: !13487)
!13521 = !DILocalVariable(name: "ticks", scope: !13487, file: !3, line: 682, type: !7)
!13522 = !DILocation(line: 682, column: 6, scope: !13487)
!13523 = !DILocation(line: 685, column: 6, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 685, column: 6)
!13525 = !DILocation(line: 685, column: 10, scope: !13524)
!13526 = !DILocation(line: 685, column: 23, scope: !13524)
!13527 = !DILocation(line: 685, column: 6, scope: !13487)
!13528 = !DILocation(line: 686, column: 3, scope: !13524)
!13529 = !DILocation(line: 689, column: 9, scope: !13487)
!13530 = !DILocation(line: 689, column: 12, scope: !13487)
!13531 = !DILocation(line: 689, column: 21, scope: !13487)
!13532 = !DILocation(line: 689, column: 7, scope: !13487)
!13533 = !DILocation(line: 690, column: 2, scope: !13487)
!13534 = !DILocation(line: 690, column: 5, scope: !13487)
!13535 = !DILocation(line: 690, column: 15, scope: !13487)
!13536 = !DILocation(line: 690, column: 29, scope: !13487)
!13537 = !DILocation(line: 690, column: 34, scope: !13487)
!13538 = !DILocation(line: 693, column: 8, scope: !13487)
!13539 = !DILocation(line: 694, column: 2, scope: !13487)
!13540 = !DILocation(line: 694, column: 11, scope: !13487)
!13541 = !DILocation(line: 694, column: 14, scope: !13487)
!13542 = !DILocation(line: 694, column: 23, scope: !13487)
!13543 = !DILocation(line: 694, column: 37, scope: !13487)
!13544 = !DILocation(line: 694, column: 9, scope: !13487)
!13545 = !DILocation(line: 695, column: 27, scope: !13497)
!13546 = !DILocation(line: 695, column: 31, scope: !13497)
!13547 = !DILocation(line: 695, column: 38, scope: !13497)
!13548 = !DILocation(line: 695, column: 37, scope: !13497)
!13549 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !13499)
!13550 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !13499)
!13551 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !13499)
!13552 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !13499)
!13553 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !13499)
!13554 = !DILocation(line: 696, column: 7, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13497, file: !3, line: 696, column: 7)
!13556 = !DILocation(line: 696, column: 7, scope: !13497)
!13557 = !DILocation(line: 697, column: 4, scope: !13555)
!13558 = !DILocation(line: 699, column: 4, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 699, column: 4)
!13560 = distinct !DILexicalBlock(scope: !13561, file: !3, line: 699, column: 4)
!13561 = distinct !DILexicalBlock(scope: !13562, file: !3, line: 699, column: 4)
!13562 = distinct !DILexicalBlock(scope: !13555, file: !3, line: 699, column: 4)
!13563 = !DILocation(line: 700, column: 3, scope: !13497)
!13564 = !DILocation(line: 700, column: 3, scope: !13496)
!13565 = !DILocalVariable(name: "__dummy", scope: !13566, file: !3, line: 700, type: !348)
!13566 = distinct !DILexicalBlock(scope: !13495, file: !3, line: 700, column: 3)
!13567 = !DILocation(line: 700, column: 3, scope: !13566)
!13568 = !DILocalVariable(name: "__dummy2", scope: !13566, file: !3, line: 700, type: !348)
!13569 = !DILocation(line: 700, column: 3, scope: !13495)
!13570 = !DILocation(line: 700, column: 3, scope: !13494)
!13571 = !DILocation(line: 700, column: 3, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 700, column: 3)
!13573 = !DILocalVariable(name: "__dummy", scope: !13574, file: !3, line: 700, type: !348)
!13574 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 700, column: 3)
!13575 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 700, column: 3)
!13576 = !DILocation(line: 700, column: 3, scope: !13574)
!13577 = !DILocalVariable(name: "__dummy2", scope: !13574, file: !3, line: 700, type: !348)
!13578 = !DILocation(line: 700, column: 3, scope: !13575)
!13579 = !DILocation(line: 700, column: 3, scope: !13493)
!13580 = !{i32 -2139686742}
!13581 = !DILocation(line: 700, column: 3, scope: !13492)
!13582 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !13491)
!13583 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !13491)
!13584 = !DILocation(line: 701, column: 8, scope: !13497)
!13585 = !DILocation(line: 702, column: 7, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13497, file: !3, line: 702, column: 7)
!13587 = !DILocation(line: 702, column: 13, scope: !13586)
!13588 = !DILocation(line: 702, column: 7, scope: !13497)
!13589 = !DILocation(line: 703, column: 4, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 702, column: 20)
!13591 = !DILocation(line: 703, column: 4, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13593, file: !3, line: 703, column: 4)
!13593 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 703, column: 4)
!13594 = !DILocation(line: 703, column: 4, scope: !13593)
!13595 = !DILocation(line: 705, column: 4, scope: !13590)
!13596 = distinct !{!13596, !13539, !13597}
!13597 = !DILocation(line: 707, column: 2, scope: !13487)
!13598 = !DILocation(line: 708, column: 2, scope: !13487)
!13599 = !DILocation(line: 709, column: 1, scope: !13487)
!13600 = distinct !DISubprogram(name: "pcnet32_clr_suspend", scope: !3, file: !3, line: 711, type: !13601, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13601 = !DISubroutineType(types: !13602)
!13602 = !{null, !7248, !11471}
!13603 = !DILocalVariable(name: "lp", arg: 1, scope: !13600, file: !3, line: 711, type: !7248)
!13604 = !DILocation(line: 711, column: 57, scope: !13600)
!13605 = !DILocalVariable(name: "ioaddr", arg: 2, scope: !13600, file: !3, line: 711, type: !11471)
!13606 = !DILocation(line: 711, column: 67, scope: !13600)
!13607 = !DILocalVariable(name: "csr5", scope: !13600, file: !3, line: 713, type: !7)
!13608 = !DILocation(line: 713, column: 6, scope: !13600)
!13609 = !DILocation(line: 713, column: 13, scope: !13600)
!13610 = !DILocation(line: 713, column: 17, scope: !13600)
!13611 = !DILocation(line: 713, column: 20, scope: !13600)
!13612 = !DILocation(line: 713, column: 29, scope: !13600)
!13613 = !DILocation(line: 715, column: 2, scope: !13600)
!13614 = !DILocation(line: 715, column: 6, scope: !13600)
!13615 = !DILocation(line: 715, column: 9, scope: !13600)
!13616 = !DILocation(line: 715, column: 19, scope: !13600)
!13617 = !DILocation(line: 715, column: 33, scope: !13600)
!13618 = !DILocation(line: 715, column: 38, scope: !13600)
!13619 = !DILocation(line: 716, column: 1, scope: !13600)
!13620 = distinct !DISubprogram(name: "if_mii", scope: !7642, file: !7642, line: 51, type: !13621, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{!7678, !632}
!13623 = !DILocalVariable(name: "rq", arg: 1, scope: !13620, file: !7642, line: 51, type: !632)
!13624 = !DILocation(line: 51, column: 59, scope: !13620)
!13625 = !DILocation(line: 53, column: 36, scope: !13620)
!13626 = !DILocation(line: 53, column: 40, scope: !13620)
!13627 = !DILocation(line: 53, column: 9, scope: !13620)
!13628 = !DILocation(line: 53, column: 2, scope: !13620)
!13629 = distinct !DISubprogram(name: "netif_trans_update", scope: !6, file: !6, line: 4223, type: !442, scopeLine: 4224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13630 = !DILocalVariable(name: "dev", arg: 1, scope: !13629, file: !6, line: 4223, type: !326)
!13631 = !DILocation(line: 4223, column: 58, scope: !13629)
!13632 = !DILocalVariable(name: "txq", scope: !13629, file: !6, line: 4225, type: !6438)
!13633 = !DILocation(line: 4225, column: 23, scope: !13629)
!13634 = !DILocation(line: 4225, column: 49, scope: !13629)
!13635 = !DILocation(line: 4225, column: 29, scope: !13629)
!13636 = !DILocation(line: 4227, column: 6, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13629, file: !6, line: 4227, column: 6)
!13638 = !DILocation(line: 4227, column: 11, scope: !13637)
!13639 = !DILocation(line: 4227, column: 26, scope: !13637)
!13640 = !DILocation(line: 4227, column: 23, scope: !13637)
!13641 = !DILocation(line: 4227, column: 6, scope: !13629)
!13642 = !DILocation(line: 4228, column: 22, scope: !13637)
!13643 = !DILocation(line: 4228, column: 3, scope: !13637)
!13644 = !DILocation(line: 4228, column: 8, scope: !13637)
!13645 = !DILocation(line: 4228, column: 20, scope: !13637)
!13646 = !DILocation(line: 4229, column: 1, scope: !13629)
!13647 = distinct !DISubprogram(name: "pcnet32_get_drvinfo", scope: !3, file: !3, line: 795, type: !5532, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13648 = !DILocalVariable(name: "dev", arg: 1, scope: !13647, file: !3, line: 795, type: !326)
!13649 = !DILocation(line: 795, column: 52, scope: !13647)
!13650 = !DILocalVariable(name: "info", arg: 2, scope: !13647, file: !3, line: 796, type: !5534)
!13651 = !DILocation(line: 796, column: 29, scope: !13647)
!13652 = !DILocalVariable(name: "lp", scope: !13647, file: !3, line: 798, type: !7248)
!13653 = !DILocation(line: 798, column: 26, scope: !13647)
!13654 = !DILocation(line: 798, column: 43, scope: !13647)
!13655 = !DILocation(line: 798, column: 31, scope: !13647)
!13656 = !DILocation(line: 800, column: 10, scope: !13647)
!13657 = !DILocation(line: 800, column: 16, scope: !13647)
!13658 = !DILocation(line: 800, column: 2, scope: !13647)
!13659 = !DILocation(line: 801, column: 6, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 801, column: 6)
!13661 = !DILocation(line: 801, column: 10, scope: !13660)
!13662 = !DILocation(line: 801, column: 6, scope: !13647)
!13663 = !DILocation(line: 802, column: 11, scope: !13660)
!13664 = !DILocation(line: 802, column: 17, scope: !13660)
!13665 = !DILocation(line: 802, column: 36, scope: !13660)
!13666 = !DILocation(line: 802, column: 40, scope: !13660)
!13667 = !DILocation(line: 802, column: 27, scope: !13660)
!13668 = !DILocation(line: 802, column: 3, scope: !13660)
!13669 = !DILocation(line: 805, column: 12, scope: !13660)
!13670 = !DILocation(line: 805, column: 18, scope: !13660)
!13671 = !DILocation(line: 806, column: 17, scope: !13660)
!13672 = !DILocation(line: 806, column: 22, scope: !13660)
!13673 = !DILocation(line: 805, column: 3, scope: !13660)
!13674 = !DILocation(line: 807, column: 1, scope: !13647)
!13675 = distinct !DISubprogram(name: "pcnet32_get_regs_len", scope: !3, file: !3, line: 1419, type: !438, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13676 = !DILocalVariable(name: "dev", arg: 1, scope: !13675, file: !3, line: 1419, type: !326)
!13677 = !DILocation(line: 1419, column: 52, scope: !13675)
!13678 = !DILocalVariable(name: "lp", scope: !13675, file: !3, line: 1421, type: !7248)
!13679 = !DILocation(line: 1421, column: 26, scope: !13675)
!13680 = !DILocation(line: 1421, column: 43, scope: !13675)
!13681 = !DILocation(line: 1421, column: 31, scope: !13675)
!13682 = !DILocalVariable(name: "j", scope: !13675, file: !3, line: 1422, type: !7)
!13683 = !DILocation(line: 1422, column: 6, scope: !13675)
!13684 = !DILocation(line: 1422, column: 10, scope: !13675)
!13685 = !DILocation(line: 1422, column: 14, scope: !13675)
!13686 = !DILocation(line: 1422, column: 23, scope: !13675)
!13687 = !DILocation(line: 1424, column: 29, scope: !13675)
!13688 = !DILocation(line: 1424, column: 27, scope: !13675)
!13689 = !DILocation(line: 1424, column: 9, scope: !13675)
!13690 = !DILocation(line: 1424, column: 32, scope: !13675)
!13691 = !DILocation(line: 1424, column: 2, scope: !13675)
!13692 = distinct !DISubprogram(name: "pcnet32_get_regs", scope: !3, file: !3, line: 1427, type: !5553, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13693 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !13694)
!13694 = distinct !DILocation(line: 1480, column: 2, scope: !13692)
!13695 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !13694)
!13696 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !13697)
!13697 = distinct !DILocation(line: 1437, column: 2, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13699, file: !3, line: 1437, column: 2)
!13699 = distinct !DILexicalBlock(scope: !13700, file: !3, line: 1437, column: 2)
!13700 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 1437, column: 2)
!13701 = distinct !DILexicalBlock(scope: !13702, file: !3, line: 1437, column: 2)
!13702 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1437, column: 2)
!13703 = !DILocalVariable(name: "dev", arg: 1, scope: !13692, file: !3, line: 1427, type: !326)
!13704 = !DILocation(line: 1427, column: 49, scope: !13692)
!13705 = !DILocalVariable(name: "regs", arg: 2, scope: !13692, file: !3, line: 1427, type: !5555)
!13706 = !DILocation(line: 1427, column: 75, scope: !13692)
!13707 = !DILocalVariable(name: "ptr", arg: 3, scope: !13692, file: !3, line: 1428, type: !626)
!13708 = !DILocation(line: 1428, column: 15, scope: !13692)
!13709 = !DILocalVariable(name: "i", scope: !13692, file: !3, line: 1430, type: !7)
!13710 = !DILocation(line: 1430, column: 6, scope: !13692)
!13711 = !DILocalVariable(name: "csr0", scope: !13692, file: !3, line: 1430, type: !7)
!13712 = !DILocation(line: 1430, column: 9, scope: !13692)
!13713 = !DILocalVariable(name: "buff", scope: !13692, file: !3, line: 1431, type: !13714)
!13714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!13715 = !DILocation(line: 1431, column: 7, scope: !13692)
!13716 = !DILocation(line: 1431, column: 14, scope: !13692)
!13717 = !DILocalVariable(name: "lp", scope: !13692, file: !3, line: 1432, type: !7248)
!13718 = !DILocation(line: 1432, column: 26, scope: !13692)
!13719 = !DILocation(line: 1432, column: 43, scope: !13692)
!13720 = !DILocation(line: 1432, column: 31, scope: !13692)
!13721 = !DILocalVariable(name: "a", scope: !13692, file: !3, line: 1433, type: !7563)
!13722 = !DILocation(line: 1433, column: 31, scope: !13692)
!13723 = !DILocation(line: 1433, column: 35, scope: !13692)
!13724 = !DILocation(line: 1433, column: 39, scope: !13692)
!13725 = !DILocalVariable(name: "ioaddr", scope: !13692, file: !3, line: 1434, type: !11471)
!13726 = !DILocation(line: 1434, column: 8, scope: !13692)
!13727 = !DILocation(line: 1434, column: 17, scope: !13692)
!13728 = !DILocation(line: 1434, column: 22, scope: !13692)
!13729 = !DILocalVariable(name: "flags", scope: !13692, file: !3, line: 1435, type: !348)
!13730 = !DILocation(line: 1435, column: 16, scope: !13692)
!13731 = !DILocation(line: 1437, column: 2, scope: !13692)
!13732 = !DILocation(line: 1437, column: 2, scope: !13702)
!13733 = !DILocalVariable(name: "__dummy", scope: !13734, file: !3, line: 1437, type: !348)
!13734 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 1437, column: 2)
!13735 = !DILocation(line: 1437, column: 2, scope: !13734)
!13736 = !DILocalVariable(name: "__dummy2", scope: !13734, file: !3, line: 1437, type: !348)
!13737 = !DILocation(line: 1437, column: 2, scope: !13701)
!13738 = !DILocation(line: 1437, column: 2, scope: !13700)
!13739 = !DILocation(line: 1437, column: 2, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13700, file: !3, line: 1437, column: 2)
!13741 = !DILocalVariable(name: "__dummy", scope: !13742, file: !3, line: 1437, type: !348)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 1437, column: 2)
!13743 = distinct !DILexicalBlock(scope: !13740, file: !3, line: 1437, column: 2)
!13744 = !DILocation(line: 1437, column: 2, scope: !13742)
!13745 = !DILocalVariable(name: "__dummy2", scope: !13742, file: !3, line: 1437, type: !348)
!13746 = !DILocation(line: 1437, column: 2, scope: !13743)
!13747 = !DILocation(line: 1437, column: 2, scope: !13699)
!13748 = !{i32 -2139648898}
!13749 = !DILocation(line: 1437, column: 2, scope: !13698)
!13750 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !13697)
!13751 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !13697)
!13752 = !DILocation(line: 1439, column: 9, scope: !13692)
!13753 = !DILocation(line: 1439, column: 12, scope: !13692)
!13754 = !DILocation(line: 1439, column: 21, scope: !13692)
!13755 = !DILocation(line: 1439, column: 7, scope: !13692)
!13756 = !DILocation(line: 1440, column: 8, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1440, column: 6)
!13758 = !DILocation(line: 1440, column: 13, scope: !13757)
!13759 = !DILocation(line: 1440, column: 6, scope: !13692)
!13760 = !DILocation(line: 1441, column: 19, scope: !13757)
!13761 = !DILocation(line: 1441, column: 3, scope: !13757)
!13762 = !DILocation(line: 1444, column: 9, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1444, column: 2)
!13764 = !DILocation(line: 1444, column: 7, scope: !13763)
!13765 = !DILocation(line: 1444, column: 14, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13763, file: !3, line: 1444, column: 2)
!13767 = !DILocation(line: 1444, column: 16, scope: !13766)
!13768 = !DILocation(line: 1444, column: 2, scope: !13763)
!13769 = !DILocation(line: 1445, column: 17, scope: !13766)
!13770 = !DILocation(line: 1445, column: 26, scope: !13766)
!13771 = !DILocation(line: 1445, column: 24, scope: !13766)
!13772 = !DILocation(line: 1445, column: 13, scope: !13766)
!13773 = !DILocation(line: 1445, column: 8, scope: !13766)
!13774 = !DILocation(line: 1445, column: 11, scope: !13766)
!13775 = !DILocation(line: 1445, column: 3, scope: !13766)
!13776 = !DILocation(line: 1444, column: 24, scope: !13766)
!13777 = !DILocation(line: 1444, column: 2, scope: !13766)
!13778 = distinct !{!13778, !13768, !13779}
!13779 = !DILocation(line: 1445, column: 27, scope: !13763)
!13780 = !DILocation(line: 1448, column: 9, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1448, column: 2)
!13782 = !DILocation(line: 1448, column: 7, scope: !13781)
!13783 = !DILocation(line: 1448, column: 14, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13781, file: !3, line: 1448, column: 2)
!13785 = !DILocation(line: 1448, column: 16, scope: !13784)
!13786 = !DILocation(line: 1448, column: 2, scope: !13781)
!13787 = !DILocation(line: 1449, column: 13, scope: !13784)
!13788 = !DILocation(line: 1449, column: 16, scope: !13784)
!13789 = !DILocation(line: 1449, column: 25, scope: !13784)
!13790 = !DILocation(line: 1449, column: 33, scope: !13784)
!13791 = !DILocation(line: 1449, column: 8, scope: !13784)
!13792 = !DILocation(line: 1449, column: 11, scope: !13784)
!13793 = !DILocation(line: 1449, column: 3, scope: !13784)
!13794 = !DILocation(line: 1448, column: 23, scope: !13784)
!13795 = !DILocation(line: 1448, column: 2, scope: !13784)
!13796 = distinct !{!13796, !13786, !13797}
!13797 = !DILocation(line: 1449, column: 34, scope: !13781)
!13798 = !DILocation(line: 1451, column: 12, scope: !13692)
!13799 = !DILocation(line: 1451, column: 15, scope: !13692)
!13800 = !DILocation(line: 1451, column: 24, scope: !13692)
!13801 = !DILocation(line: 1451, column: 7, scope: !13692)
!13802 = !DILocation(line: 1451, column: 10, scope: !13692)
!13803 = !DILocation(line: 1452, column: 12, scope: !13692)
!13804 = !DILocation(line: 1452, column: 15, scope: !13692)
!13805 = !DILocation(line: 1452, column: 24, scope: !13692)
!13806 = !DILocation(line: 1452, column: 7, scope: !13692)
!13807 = !DILocation(line: 1452, column: 10, scope: !13692)
!13808 = !DILocation(line: 1455, column: 9, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1455, column: 2)
!13810 = !DILocation(line: 1455, column: 7, scope: !13809)
!13811 = !DILocation(line: 1455, column: 14, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13809, file: !3, line: 1455, column: 2)
!13813 = !DILocation(line: 1455, column: 16, scope: !13812)
!13814 = !DILocation(line: 1455, column: 2, scope: !13809)
!13815 = !DILocation(line: 1456, column: 13, scope: !13812)
!13816 = !DILocation(line: 1456, column: 16, scope: !13812)
!13817 = !DILocation(line: 1456, column: 25, scope: !13812)
!13818 = !DILocation(line: 1456, column: 33, scope: !13812)
!13819 = !DILocation(line: 1456, column: 8, scope: !13812)
!13820 = !DILocation(line: 1456, column: 11, scope: !13812)
!13821 = !DILocation(line: 1456, column: 3, scope: !13812)
!13822 = !DILocation(line: 1455, column: 23, scope: !13812)
!13823 = !DILocation(line: 1455, column: 2, scope: !13812)
!13824 = distinct !{!13824, !13814, !13825}
!13825 = !DILocation(line: 1456, column: 34, scope: !13809)
!13826 = !DILocation(line: 1458, column: 7, scope: !13692)
!13827 = !DILocation(line: 1458, column: 10, scope: !13692)
!13828 = !DILocation(line: 1460, column: 9, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1460, column: 2)
!13830 = !DILocation(line: 1460, column: 7, scope: !13829)
!13831 = !DILocation(line: 1460, column: 15, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13829, file: !3, line: 1460, column: 2)
!13833 = !DILocation(line: 1460, column: 17, scope: !13832)
!13834 = !DILocation(line: 1460, column: 2, scope: !13829)
!13835 = !DILocation(line: 1461, column: 13, scope: !13832)
!13836 = !DILocation(line: 1461, column: 16, scope: !13832)
!13837 = !DILocation(line: 1461, column: 25, scope: !13832)
!13838 = !DILocation(line: 1461, column: 33, scope: !13832)
!13839 = !DILocation(line: 1461, column: 8, scope: !13832)
!13840 = !DILocation(line: 1461, column: 11, scope: !13832)
!13841 = !DILocation(line: 1461, column: 3, scope: !13832)
!13842 = !DILocation(line: 1460, column: 24, scope: !13832)
!13843 = !DILocation(line: 1460, column: 2, scope: !13832)
!13844 = distinct !{!13844, !13834, !13845}
!13845 = !DILocation(line: 1461, column: 34, scope: !13829)
!13846 = !DILocation(line: 1464, column: 6, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1464, column: 6)
!13848 = !DILocation(line: 1464, column: 10, scope: !13847)
!13849 = !DILocation(line: 1464, column: 6, scope: !13692)
!13850 = !DILocalVariable(name: "j", scope: !13851, file: !3, line: 1465, type: !7)
!13851 = distinct !DILexicalBlock(scope: !13847, file: !3, line: 1464, column: 15)
!13852 = !DILocation(line: 1465, column: 7, scope: !13851)
!13853 = !DILocation(line: 1466, column: 10, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13851, file: !3, line: 1466, column: 3)
!13855 = !DILocation(line: 1466, column: 8, scope: !13854)
!13856 = !DILocation(line: 1466, column: 15, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13854, file: !3, line: 1466, column: 3)
!13858 = !DILocation(line: 1466, column: 17, scope: !13857)
!13859 = !DILocation(line: 1466, column: 3, scope: !13854)
!13860 = !DILocation(line: 1467, column: 8, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13862, file: !3, line: 1467, column: 8)
!13862 = distinct !DILexicalBlock(scope: !13857, file: !3, line: 1466, column: 42)
!13863 = !DILocation(line: 1467, column: 12, scope: !13861)
!13864 = !DILocation(line: 1467, column: 28, scope: !13861)
!13865 = !DILocation(line: 1467, column: 25, scope: !13861)
!13866 = !DILocation(line: 1467, column: 20, scope: !13861)
!13867 = !DILocation(line: 1467, column: 8, scope: !13862)
!13868 = !DILocation(line: 1468, column: 12, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 1468, column: 5)
!13870 = distinct !DILexicalBlock(scope: !13861, file: !3, line: 1467, column: 32)
!13871 = !DILocation(line: 1468, column: 10, scope: !13869)
!13872 = !DILocation(line: 1468, column: 17, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13869, file: !3, line: 1468, column: 5)
!13874 = !DILocation(line: 1468, column: 19, scope: !13873)
!13875 = !DILocation(line: 1468, column: 5, scope: !13869)
!13876 = !DILocation(line: 1469, column: 6, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 1468, column: 48)
!13878 = !DILocation(line: 1469, column: 10, scope: !13877)
!13879 = !DILocation(line: 1469, column: 13, scope: !13877)
!13880 = !DILocation(line: 1469, column: 23, scope: !13877)
!13881 = !DILocation(line: 1470, column: 9, scope: !13877)
!13882 = !DILocation(line: 1470, column: 11, scope: !13877)
!13883 = !DILocation(line: 1470, column: 19, scope: !13877)
!13884 = !DILocation(line: 1470, column: 17, scope: !13877)
!13885 = !DILocation(line: 1470, column: 8, scope: !13877)
!13886 = !DILocation(line: 1471, column: 16, scope: !13877)
!13887 = !DILocation(line: 1471, column: 20, scope: !13877)
!13888 = !DILocation(line: 1471, column: 23, scope: !13877)
!13889 = !DILocation(line: 1471, column: 32, scope: !13877)
!13890 = !DILocation(line: 1471, column: 11, scope: !13877)
!13891 = !DILocation(line: 1471, column: 14, scope: !13877)
!13892 = !DILocation(line: 1472, column: 5, scope: !13877)
!13893 = !DILocation(line: 1468, column: 44, scope: !13873)
!13894 = !DILocation(line: 1468, column: 5, scope: !13873)
!13895 = distinct !{!13895, !13875, !13896}
!13896 = !DILocation(line: 1472, column: 5, scope: !13869)
!13897 = !DILocation(line: 1473, column: 4, scope: !13870)
!13898 = !DILocation(line: 1474, column: 3, scope: !13862)
!13899 = !DILocation(line: 1466, column: 38, scope: !13857)
!13900 = !DILocation(line: 1466, column: 3, scope: !13857)
!13901 = distinct !{!13901, !13859, !13902}
!13902 = !DILocation(line: 1474, column: 3, scope: !13854)
!13903 = !DILocation(line: 1475, column: 2, scope: !13851)
!13904 = !DILocation(line: 1477, column: 8, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 1477, column: 6)
!13906 = !DILocation(line: 1477, column: 13, scope: !13905)
!13907 = !DILocation(line: 1477, column: 6, scope: !13692)
!13908 = !DILocation(line: 1478, column: 23, scope: !13905)
!13909 = !DILocation(line: 1478, column: 27, scope: !13905)
!13910 = !DILocation(line: 1478, column: 3, scope: !13905)
!13911 = !DILocation(line: 1480, column: 26, scope: !13692)
!13912 = !DILocation(line: 1480, column: 30, scope: !13692)
!13913 = !DILocation(line: 1480, column: 36, scope: !13692)
!13914 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !13694)
!13915 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !13694)
!13916 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !13694)
!13917 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !13694)
!13918 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !13694)
!13919 = !DILocation(line: 1481, column: 1, scope: !13692)
!13920 = distinct !DISubprogram(name: "pcnet32_get_msglevel", scope: !3, file: !3, line: 836, type: !5580, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13921 = !DILocalVariable(name: "dev", arg: 1, scope: !13920, file: !3, line: 836, type: !326)
!13922 = !DILocation(line: 836, column: 52, scope: !13920)
!13923 = !DILocalVariable(name: "lp", scope: !13920, file: !3, line: 838, type: !7248)
!13924 = !DILocation(line: 838, column: 26, scope: !13920)
!13925 = !DILocation(line: 838, column: 43, scope: !13920)
!13926 = !DILocation(line: 838, column: 31, scope: !13920)
!13927 = !DILocation(line: 839, column: 9, scope: !13920)
!13928 = !DILocation(line: 839, column: 13, scope: !13920)
!13929 = !DILocation(line: 839, column: 2, scope: !13920)
!13930 = distinct !DISubprogram(name: "pcnet32_set_msglevel", scope: !3, file: !3, line: 842, type: !5584, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13931 = !DILocalVariable(name: "dev", arg: 1, scope: !13930, file: !3, line: 842, type: !326)
!13932 = !DILocation(line: 842, column: 53, scope: !13930)
!13933 = !DILocalVariable(name: "value", arg: 2, scope: !13930, file: !3, line: 842, type: !1022)
!13934 = !DILocation(line: 842, column: 62, scope: !13930)
!13935 = !DILocalVariable(name: "lp", scope: !13930, file: !3, line: 844, type: !7248)
!13936 = !DILocation(line: 844, column: 26, scope: !13930)
!13937 = !DILocation(line: 844, column: 43, scope: !13930)
!13938 = !DILocation(line: 844, column: 31, scope: !13930)
!13939 = !DILocation(line: 845, column: 19, scope: !13930)
!13940 = !DILocation(line: 845, column: 2, scope: !13930)
!13941 = !DILocation(line: 845, column: 6, scope: !13930)
!13942 = !DILocation(line: 845, column: 17, scope: !13930)
!13943 = !DILocation(line: 846, column: 1, scope: !13930)
!13944 = distinct !DISubprogram(name: "pcnet32_nway_reset", scope: !3, file: !3, line: 848, type: !438, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!13945 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !13946)
!13946 = distinct !DILocation(line: 857, column: 3, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13948, file: !3, line: 854, column: 15)
!13948 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 854, column: 6)
!13949 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !13946)
!13950 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !13951)
!13951 = distinct !DILocation(line: 855, column: 3, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13953, file: !3, line: 855, column: 3)
!13953 = distinct !DILexicalBlock(scope: !13954, file: !3, line: 855, column: 3)
!13954 = distinct !DILexicalBlock(scope: !13955, file: !3, line: 855, column: 3)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !3, line: 855, column: 3)
!13956 = distinct !DILexicalBlock(scope: !13947, file: !3, line: 855, column: 3)
!13957 = !DILocalVariable(name: "dev", arg: 1, scope: !13944, file: !3, line: 848, type: !326)
!13958 = !DILocation(line: 848, column: 50, scope: !13944)
!13959 = !DILocalVariable(name: "lp", scope: !13944, file: !3, line: 850, type: !7248)
!13960 = !DILocation(line: 850, column: 26, scope: !13944)
!13961 = !DILocation(line: 850, column: 43, scope: !13944)
!13962 = !DILocation(line: 850, column: 31, scope: !13944)
!13963 = !DILocalVariable(name: "flags", scope: !13944, file: !3, line: 851, type: !348)
!13964 = !DILocation(line: 851, column: 16, scope: !13944)
!13965 = !DILocalVariable(name: "r", scope: !13944, file: !3, line: 852, type: !7)
!13966 = !DILocation(line: 852, column: 6, scope: !13944)
!13967 = !DILocation(line: 854, column: 6, scope: !13948)
!13968 = !DILocation(line: 854, column: 10, scope: !13948)
!13969 = !DILocation(line: 854, column: 6, scope: !13944)
!13970 = !DILocation(line: 855, column: 3, scope: !13947)
!13971 = !DILocation(line: 855, column: 3, scope: !13956)
!13972 = !DILocalVariable(name: "__dummy", scope: !13973, file: !3, line: 855, type: !348)
!13973 = distinct !DILexicalBlock(scope: !13955, file: !3, line: 855, column: 3)
!13974 = !DILocation(line: 855, column: 3, scope: !13973)
!13975 = !DILocalVariable(name: "__dummy2", scope: !13973, file: !3, line: 855, type: !348)
!13976 = !DILocation(line: 855, column: 3, scope: !13955)
!13977 = !DILocation(line: 855, column: 3, scope: !13954)
!13978 = !DILocation(line: 855, column: 3, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13954, file: !3, line: 855, column: 3)
!13980 = !DILocalVariable(name: "__dummy", scope: !13981, file: !3, line: 855, type: !348)
!13981 = distinct !DILexicalBlock(scope: !13982, file: !3, line: 855, column: 3)
!13982 = distinct !DILexicalBlock(scope: !13979, file: !3, line: 855, column: 3)
!13983 = !DILocation(line: 855, column: 3, scope: !13981)
!13984 = !DILocalVariable(name: "__dummy2", scope: !13981, file: !3, line: 855, type: !348)
!13985 = !DILocation(line: 855, column: 3, scope: !13982)
!13986 = !DILocation(line: 855, column: 3, scope: !13953)
!13987 = !{i32 -2139681918}
!13988 = !DILocation(line: 855, column: 3, scope: !13952)
!13989 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !13951)
!13990 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !13951)
!13991 = !DILocation(line: 856, column: 25, scope: !13947)
!13992 = !DILocation(line: 856, column: 29, scope: !13947)
!13993 = !DILocation(line: 856, column: 7, scope: !13947)
!13994 = !DILocation(line: 856, column: 5, scope: !13947)
!13995 = !DILocation(line: 857, column: 27, scope: !13947)
!13996 = !DILocation(line: 857, column: 31, scope: !13947)
!13997 = !DILocation(line: 857, column: 37, scope: !13947)
!13998 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !13946)
!13999 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !13946)
!14000 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !13946)
!14001 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !13946)
!14002 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !13946)
!14003 = !DILocation(line: 858, column: 2, scope: !13947)
!14004 = !DILocation(line: 859, column: 9, scope: !13944)
!14005 = !DILocation(line: 859, column: 2, scope: !13944)
!14006 = distinct !DISubprogram(name: "pcnet32_get_link", scope: !3, file: !3, line: 809, type: !5580, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14007 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !14008)
!14008 = distinct !DILocation(line: 831, column: 2, scope: !14006)
!14009 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !14008)
!14010 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !14011)
!14011 = distinct !DILocation(line: 815, column: 2, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 815, column: 2)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 815, column: 2)
!14014 = distinct !DILexicalBlock(scope: !14015, file: !3, line: 815, column: 2)
!14015 = distinct !DILexicalBlock(scope: !14016, file: !3, line: 815, column: 2)
!14016 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 815, column: 2)
!14017 = !DILocalVariable(name: "dev", arg: 1, scope: !14006, file: !3, line: 809, type: !326)
!14018 = !DILocation(line: 809, column: 48, scope: !14006)
!14019 = !DILocalVariable(name: "lp", scope: !14006, file: !3, line: 811, type: !7248)
!14020 = !DILocation(line: 811, column: 26, scope: !14006)
!14021 = !DILocation(line: 811, column: 43, scope: !14006)
!14022 = !DILocation(line: 811, column: 31, scope: !14006)
!14023 = !DILocalVariable(name: "flags", scope: !14006, file: !3, line: 812, type: !348)
!14024 = !DILocation(line: 812, column: 16, scope: !14006)
!14025 = !DILocalVariable(name: "r", scope: !14006, file: !3, line: 813, type: !7)
!14026 = !DILocation(line: 813, column: 6, scope: !14006)
!14027 = !DILocation(line: 815, column: 2, scope: !14006)
!14028 = !DILocation(line: 815, column: 2, scope: !14016)
!14029 = !DILocalVariable(name: "__dummy", scope: !14030, file: !3, line: 815, type: !348)
!14030 = distinct !DILexicalBlock(scope: !14015, file: !3, line: 815, column: 2)
!14031 = !DILocation(line: 815, column: 2, scope: !14030)
!14032 = !DILocalVariable(name: "__dummy2", scope: !14030, file: !3, line: 815, type: !348)
!14033 = !DILocation(line: 815, column: 2, scope: !14015)
!14034 = !DILocation(line: 815, column: 2, scope: !14014)
!14035 = !DILocation(line: 815, column: 2, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 815, column: 2)
!14037 = !DILocalVariable(name: "__dummy", scope: !14038, file: !3, line: 815, type: !348)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 815, column: 2)
!14039 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 815, column: 2)
!14040 = !DILocation(line: 815, column: 2, scope: !14038)
!14041 = !DILocalVariable(name: "__dummy2", scope: !14038, file: !3, line: 815, type: !348)
!14042 = !DILocation(line: 815, column: 2, scope: !14039)
!14043 = !DILocation(line: 815, column: 2, scope: !14013)
!14044 = !{i32 -2139682940}
!14045 = !DILocation(line: 815, column: 2, scope: !14012)
!14046 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !14011)
!14047 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !14011)
!14048 = !DILocation(line: 816, column: 6, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 816, column: 6)
!14050 = !DILocation(line: 816, column: 10, scope: !14049)
!14051 = !DILocation(line: 816, column: 6, scope: !14006)
!14052 = !DILocation(line: 817, column: 20, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14049, file: !3, line: 816, column: 15)
!14054 = !DILocation(line: 817, column: 24, scope: !14053)
!14055 = !DILocation(line: 817, column: 7, scope: !14053)
!14056 = !DILocation(line: 817, column: 5, scope: !14053)
!14057 = !DILocation(line: 818, column: 2, scope: !14053)
!14058 = !DILocation(line: 818, column: 13, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14049, file: !3, line: 818, column: 13)
!14060 = !DILocation(line: 818, column: 17, scope: !14059)
!14061 = !DILocation(line: 818, column: 30, scope: !14059)
!14062 = !DILocation(line: 818, column: 13, scope: !14049)
!14063 = !DILocalVariable(name: "ioaddr", scope: !14064, file: !3, line: 819, type: !11471)
!14064 = distinct !DILexicalBlock(scope: !14059, file: !3, line: 818, column: 50)
!14065 = !DILocation(line: 819, column: 9, scope: !14064)
!14066 = !DILocation(line: 819, column: 18, scope: !14064)
!14067 = !DILocation(line: 819, column: 23, scope: !14064)
!14068 = !DILocation(line: 821, column: 8, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14064, file: !3, line: 821, column: 7)
!14070 = !DILocation(line: 821, column: 12, scope: !14069)
!14071 = !DILocation(line: 821, column: 20, scope: !14069)
!14072 = !DILocation(line: 821, column: 23, scope: !14069)
!14073 = !DILocation(line: 821, column: 27, scope: !14069)
!14074 = !DILocation(line: 821, column: 7, scope: !14064)
!14075 = !DILocation(line: 822, column: 9, scope: !14069)
!14076 = !DILocation(line: 822, column: 13, scope: !14069)
!14077 = !DILocation(line: 822, column: 16, scope: !14069)
!14078 = !DILocation(line: 822, column: 25, scope: !14069)
!14079 = !DILocation(line: 822, column: 36, scope: !14069)
!14080 = !DILocation(line: 822, column: 6, scope: !14069)
!14081 = !DILocation(line: 822, column: 4, scope: !14069)
!14082 = !DILocation(line: 824, column: 6, scope: !14069)
!14083 = !DILocation(line: 825, column: 2, scope: !14064)
!14084 = !DILocation(line: 825, column: 13, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14059, file: !3, line: 825, column: 13)
!14086 = !DILocation(line: 825, column: 17, scope: !14085)
!14087 = !DILocation(line: 825, column: 30, scope: !14085)
!14088 = !DILocation(line: 825, column: 13, scope: !14059)
!14089 = !DILocalVariable(name: "ioaddr", scope: !14090, file: !3, line: 826, type: !11471)
!14090 = distinct !DILexicalBlock(scope: !14085, file: !3, line: 825, column: 49)
!14091 = !DILocation(line: 826, column: 9, scope: !14090)
!14092 = !DILocation(line: 826, column: 18, scope: !14090)
!14093 = !DILocation(line: 826, column: 23, scope: !14090)
!14094 = !DILocation(line: 827, column: 8, scope: !14090)
!14095 = !DILocation(line: 827, column: 12, scope: !14090)
!14096 = !DILocation(line: 827, column: 15, scope: !14090)
!14097 = !DILocation(line: 827, column: 24, scope: !14090)
!14098 = !DILocation(line: 827, column: 35, scope: !14090)
!14099 = !DILocation(line: 827, column: 5, scope: !14090)
!14100 = !DILocation(line: 828, column: 2, scope: !14090)
!14101 = !DILocation(line: 829, column: 5, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14085, file: !3, line: 828, column: 9)
!14103 = !DILocation(line: 831, column: 26, scope: !14006)
!14104 = !DILocation(line: 831, column: 30, scope: !14006)
!14105 = !DILocation(line: 831, column: 36, scope: !14006)
!14106 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !14008)
!14107 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !14008)
!14108 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !14008)
!14109 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !14008)
!14110 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !14008)
!14111 = !DILocation(line: 833, column: 9, scope: !14006)
!14112 = !DILocation(line: 833, column: 2, scope: !14006)
!14113 = distinct !DISubprogram(name: "pcnet32_get_ringparam", scope: !3, file: !3, line: 862, type: !5652, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14114 = !DILocalVariable(name: "dev", arg: 1, scope: !14113, file: !3, line: 862, type: !326)
!14115 = !DILocation(line: 862, column: 54, scope: !14113)
!14116 = !DILocalVariable(name: "ering", arg: 2, scope: !14113, file: !3, line: 863, type: !5654)
!14117 = !DILocation(line: 863, column: 33, scope: !14113)
!14118 = !DILocalVariable(name: "lp", scope: !14113, file: !3, line: 865, type: !7248)
!14119 = !DILocation(line: 865, column: 26, scope: !14113)
!14120 = !DILocation(line: 865, column: 43, scope: !14113)
!14121 = !DILocation(line: 865, column: 31, scope: !14113)
!14122 = !DILocation(line: 867, column: 2, scope: !14113)
!14123 = !DILocation(line: 867, column: 9, scope: !14113)
!14124 = !DILocation(line: 867, column: 24, scope: !14113)
!14125 = !DILocation(line: 868, column: 22, scope: !14113)
!14126 = !DILocation(line: 868, column: 26, scope: !14113)
!14127 = !DILocation(line: 868, column: 2, scope: !14113)
!14128 = !DILocation(line: 868, column: 9, scope: !14113)
!14129 = !DILocation(line: 868, column: 20, scope: !14113)
!14130 = !DILocation(line: 869, column: 2, scope: !14113)
!14131 = !DILocation(line: 869, column: 9, scope: !14113)
!14132 = !DILocation(line: 869, column: 24, scope: !14113)
!14133 = !DILocation(line: 870, column: 22, scope: !14113)
!14134 = !DILocation(line: 870, column: 26, scope: !14113)
!14135 = !DILocation(line: 870, column: 2, scope: !14113)
!14136 = !DILocation(line: 870, column: 9, scope: !14113)
!14137 = !DILocation(line: 870, column: 20, scope: !14113)
!14138 = !DILocation(line: 871, column: 1, scope: !14113)
!14139 = distinct !DISubprogram(name: "pcnet32_set_ringparam", scope: !3, file: !3, line: 873, type: !5668, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14140 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 918, column: 2, scope: !14139)
!14142 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !14141)
!14143 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !14144)
!14144 = distinct !DILocation(line: 888, column: 2, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 888, column: 2)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !3, line: 888, column: 2)
!14147 = distinct !DILexicalBlock(scope: !14148, file: !3, line: 888, column: 2)
!14148 = distinct !DILexicalBlock(scope: !14149, file: !3, line: 888, column: 2)
!14149 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 888, column: 2)
!14150 = !DILocalVariable(name: "dev", arg: 1, scope: !14139, file: !3, line: 873, type: !326)
!14151 = !DILocation(line: 873, column: 53, scope: !14139)
!14152 = !DILocalVariable(name: "ering", arg: 2, scope: !14139, file: !3, line: 874, type: !5654)
!14153 = !DILocation(line: 874, column: 32, scope: !14139)
!14154 = !DILocalVariable(name: "lp", scope: !14139, file: !3, line: 876, type: !7248)
!14155 = !DILocation(line: 876, column: 26, scope: !14139)
!14156 = !DILocation(line: 876, column: 43, scope: !14139)
!14157 = !DILocation(line: 876, column: 31, scope: !14139)
!14158 = !DILocalVariable(name: "flags", scope: !14139, file: !3, line: 877, type: !348)
!14159 = !DILocation(line: 877, column: 16, scope: !14139)
!14160 = !DILocalVariable(name: "size", scope: !14139, file: !3, line: 878, type: !13)
!14161 = !DILocation(line: 878, column: 15, scope: !14139)
!14162 = !DILocalVariable(name: "ioaddr", scope: !14139, file: !3, line: 879, type: !11471)
!14163 = !DILocation(line: 879, column: 8, scope: !14139)
!14164 = !DILocation(line: 879, column: 17, scope: !14139)
!14165 = !DILocation(line: 879, column: 22, scope: !14139)
!14166 = !DILocalVariable(name: "i", scope: !14139, file: !3, line: 880, type: !7)
!14167 = !DILocation(line: 880, column: 6, scope: !14139)
!14168 = !DILocation(line: 882, column: 6, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 882, column: 6)
!14170 = !DILocation(line: 882, column: 13, scope: !14169)
!14171 = !DILocation(line: 882, column: 29, scope: !14169)
!14172 = !DILocation(line: 882, column: 32, scope: !14169)
!14173 = !DILocation(line: 882, column: 39, scope: !14169)
!14174 = !DILocation(line: 882, column: 6, scope: !14139)
!14175 = !DILocation(line: 883, column: 3, scope: !14169)
!14176 = !DILocation(line: 885, column: 20, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 885, column: 6)
!14178 = !DILocation(line: 885, column: 6, scope: !14177)
!14179 = !DILocation(line: 885, column: 6, scope: !14139)
!14180 = !DILocation(line: 886, column: 22, scope: !14177)
!14181 = !DILocation(line: 886, column: 3, scope: !14177)
!14182 = !DILocation(line: 888, column: 2, scope: !14139)
!14183 = !DILocation(line: 888, column: 2, scope: !14149)
!14184 = !DILocalVariable(name: "__dummy", scope: !14185, file: !3, line: 888, type: !348)
!14185 = distinct !DILexicalBlock(scope: !14148, file: !3, line: 888, column: 2)
!14186 = !DILocation(line: 888, column: 2, scope: !14185)
!14187 = !DILocalVariable(name: "__dummy2", scope: !14185, file: !3, line: 888, type: !348)
!14188 = !DILocation(line: 888, column: 2, scope: !14148)
!14189 = !DILocation(line: 888, column: 2, scope: !14147)
!14190 = !DILocation(line: 888, column: 2, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14147, file: !3, line: 888, column: 2)
!14192 = !DILocalVariable(name: "__dummy", scope: !14193, file: !3, line: 888, type: !348)
!14193 = distinct !DILexicalBlock(scope: !14194, file: !3, line: 888, column: 2)
!14194 = distinct !DILexicalBlock(scope: !14191, file: !3, line: 888, column: 2)
!14195 = !DILocation(line: 888, column: 2, scope: !14193)
!14196 = !DILocalVariable(name: "__dummy2", scope: !14193, file: !3, line: 888, type: !348)
!14197 = !DILocation(line: 888, column: 2, scope: !14194)
!14198 = !DILocation(line: 888, column: 2, scope: !14146)
!14199 = !{i32 -2139680834}
!14200 = !DILocation(line: 888, column: 2, scope: !14145)
!14201 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !14144)
!14202 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !14144)
!14203 = !DILocation(line: 889, column: 2, scope: !14139)
!14204 = !DILocation(line: 889, column: 6, scope: !14139)
!14205 = !DILocation(line: 889, column: 9, scope: !14139)
!14206 = !DILocation(line: 889, column: 19, scope: !14139)
!14207 = !DILocalVariable(name: "__UNIQUE_ID___x321", scope: !14208, file: !3, line: 891, type: !528)
!14208 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 891, column: 9)
!14209 = !DILocation(line: 891, column: 9, scope: !14208)
!14210 = !DILocalVariable(name: "__UNIQUE_ID___y322", scope: !14208, file: !3, line: 891, type: !13)
!14211 = !DILocation(line: 891, column: 7, scope: !14139)
!14212 = !DILocation(line: 896, column: 9, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 896, column: 2)
!14214 = !DILocation(line: 896, column: 7, scope: !14213)
!14215 = !DILocation(line: 896, column: 14, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14213, file: !3, line: 896, column: 2)
!14217 = !DILocation(line: 896, column: 16, scope: !14216)
!14218 = !DILocation(line: 896, column: 2, scope: !14213)
!14219 = !DILocation(line: 897, column: 7, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14221, file: !3, line: 897, column: 7)
!14221 = distinct !DILexicalBlock(scope: !14216, file: !3, line: 896, column: 52)
!14222 = !DILocation(line: 897, column: 21, scope: !14220)
!14223 = !DILocation(line: 897, column: 18, scope: !14220)
!14224 = !DILocation(line: 897, column: 12, scope: !14220)
!14225 = !DILocation(line: 897, column: 7, scope: !14221)
!14226 = !DILocation(line: 898, column: 4, scope: !14220)
!14227 = !DILocation(line: 899, column: 2, scope: !14221)
!14228 = !DILocation(line: 896, column: 48, scope: !14216)
!14229 = !DILocation(line: 896, column: 2, scope: !14216)
!14230 = distinct !{!14230, !14218, !14231}
!14231 = !DILocation(line: 899, column: 2, scope: !14213)
!14232 = !DILocation(line: 900, column: 12, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 900, column: 6)
!14234 = !DILocation(line: 900, column: 9, scope: !14233)
!14235 = !DILocation(line: 900, column: 18, scope: !14233)
!14236 = !DILocation(line: 900, column: 22, scope: !14233)
!14237 = !DILocation(line: 900, column: 15, scope: !14233)
!14238 = !DILocation(line: 900, column: 6, scope: !14139)
!14239 = !DILocation(line: 901, column: 27, scope: !14233)
!14240 = !DILocation(line: 901, column: 32, scope: !14233)
!14241 = !DILocation(line: 901, column: 36, scope: !14233)
!14242 = !DILocation(line: 901, column: 3, scope: !14233)
!14243 = !DILocalVariable(name: "__UNIQUE_ID___x323", scope: !14244, file: !3, line: 903, type: !528)
!14244 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 903, column: 9)
!14245 = !DILocation(line: 903, column: 9, scope: !14244)
!14246 = !DILocalVariable(name: "__UNIQUE_ID___y324", scope: !14244, file: !3, line: 903, type: !13)
!14247 = !DILocation(line: 903, column: 7, scope: !14139)
!14248 = !DILocation(line: 904, column: 9, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 904, column: 2)
!14250 = !DILocation(line: 904, column: 7, scope: !14249)
!14251 = !DILocation(line: 904, column: 14, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 904, column: 2)
!14253 = !DILocation(line: 904, column: 16, scope: !14252)
!14254 = !DILocation(line: 904, column: 2, scope: !14249)
!14255 = !DILocation(line: 905, column: 7, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14257, file: !3, line: 905, column: 7)
!14257 = distinct !DILexicalBlock(scope: !14252, file: !3, line: 904, column: 52)
!14258 = !DILocation(line: 905, column: 21, scope: !14256)
!14259 = !DILocation(line: 905, column: 18, scope: !14256)
!14260 = !DILocation(line: 905, column: 12, scope: !14256)
!14261 = !DILocation(line: 905, column: 7, scope: !14257)
!14262 = !DILocation(line: 906, column: 4, scope: !14256)
!14263 = !DILocation(line: 907, column: 2, scope: !14257)
!14264 = !DILocation(line: 904, column: 48, scope: !14252)
!14265 = !DILocation(line: 904, column: 2, scope: !14252)
!14266 = distinct !{!14266, !14254, !14267}
!14267 = !DILocation(line: 907, column: 2, scope: !14249)
!14268 = !DILocation(line: 908, column: 12, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 908, column: 6)
!14270 = !DILocation(line: 908, column: 9, scope: !14269)
!14271 = !DILocation(line: 908, column: 18, scope: !14269)
!14272 = !DILocation(line: 908, column: 22, scope: !14269)
!14273 = !DILocation(line: 908, column: 15, scope: !14269)
!14274 = !DILocation(line: 908, column: 6, scope: !14139)
!14275 = !DILocation(line: 909, column: 27, scope: !14269)
!14276 = !DILocation(line: 909, column: 32, scope: !14269)
!14277 = !DILocation(line: 909, column: 36, scope: !14269)
!14278 = !DILocation(line: 909, column: 3, scope: !14269)
!14279 = !DILocation(line: 911, column: 20, scope: !14139)
!14280 = !DILocation(line: 911, column: 24, scope: !14139)
!14281 = !DILocation(line: 911, column: 37, scope: !14139)
!14282 = !DILocation(line: 911, column: 2, scope: !14139)
!14283 = !DILocation(line: 911, column: 6, scope: !14139)
!14284 = !DILocation(line: 911, column: 11, scope: !14139)
!14285 = !DILocation(line: 911, column: 18, scope: !14139)
!14286 = !DILocation(line: 913, column: 20, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 913, column: 6)
!14288 = !DILocation(line: 913, column: 6, scope: !14287)
!14289 = !DILocation(line: 913, column: 6, scope: !14139)
!14290 = !DILocation(line: 914, column: 23, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14287, file: !3, line: 913, column: 26)
!14292 = !DILocation(line: 914, column: 3, scope: !14291)
!14293 = !DILocation(line: 915, column: 19, scope: !14291)
!14294 = !DILocation(line: 915, column: 3, scope: !14291)
!14295 = !DILocation(line: 916, column: 2, scope: !14291)
!14296 = !DILocation(line: 918, column: 26, scope: !14139)
!14297 = !DILocation(line: 918, column: 30, scope: !14139)
!14298 = !DILocation(line: 918, column: 36, scope: !14139)
!14299 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !14141)
!14300 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !14141)
!14301 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !14141)
!14302 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !14141)
!14303 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !14141)
!14304 = !DILocation(line: 920, column: 2, scope: !14139)
!14305 = !DILocation(line: 920, column: 2, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14307, file: !3, line: 920, column: 2)
!14307 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 920, column: 2)
!14308 = !DILocation(line: 920, column: 2, scope: !14307)
!14309 = !DILocation(line: 923, column: 2, scope: !14139)
!14310 = !DILocation(line: 924, column: 1, scope: !14139)
!14311 = distinct !DISubprogram(name: "pcnet32_ethtool_test", scope: !3, file: !3, line: 942, type: !5696, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14312 = !DILocalVariable(name: "dev", arg: 1, scope: !14311, file: !3, line: 942, type: !326)
!14313 = !DILocation(line: 942, column: 53, scope: !14311)
!14314 = !DILocalVariable(name: "test", arg: 2, scope: !14311, file: !3, line: 943, type: !5698)
!14315 = !DILocation(line: 943, column: 27, scope: !14311)
!14316 = !DILocalVariable(name: "data", arg: 3, scope: !14311, file: !3, line: 943, type: !5377)
!14317 = !DILocation(line: 943, column: 39, scope: !14311)
!14318 = !DILocalVariable(name: "lp", scope: !14311, file: !3, line: 945, type: !7248)
!14319 = !DILocation(line: 945, column: 26, scope: !14311)
!14320 = !DILocation(line: 945, column: 43, scope: !14311)
!14321 = !DILocation(line: 945, column: 31, scope: !14311)
!14322 = !DILocalVariable(name: "rc", scope: !14311, file: !3, line: 946, type: !7)
!14323 = !DILocation(line: 946, column: 6, scope: !14311)
!14324 = !DILocation(line: 948, column: 6, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 948, column: 6)
!14326 = !DILocation(line: 948, column: 12, scope: !14325)
!14327 = !DILocation(line: 948, column: 18, scope: !14325)
!14328 = !DILocation(line: 948, column: 6, scope: !14311)
!14329 = !DILocation(line: 949, column: 30, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 948, column: 42)
!14331 = !DILocation(line: 949, column: 35, scope: !14330)
!14332 = !DILocation(line: 949, column: 8, scope: !14330)
!14333 = !DILocation(line: 949, column: 6, scope: !14330)
!14334 = !DILocation(line: 950, column: 7, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 950, column: 7)
!14336 = !DILocation(line: 950, column: 7, scope: !14330)
!14337 = !DILocation(line: 951, column: 4, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14335, file: !3, line: 950, column: 11)
!14339 = !DILocation(line: 951, column: 4, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 951, column: 4)
!14341 = distinct !DILexicalBlock(scope: !14338, file: !3, line: 951, column: 4)
!14342 = !DILocation(line: 951, column: 4, scope: !14341)
!14343 = !DILocation(line: 953, column: 4, scope: !14338)
!14344 = !DILocation(line: 953, column: 10, scope: !14338)
!14345 = !DILocation(line: 953, column: 16, scope: !14338)
!14346 = !DILocation(line: 954, column: 3, scope: !14338)
!14347 = !DILocation(line: 955, column: 4, scope: !14335)
!14348 = !DILocation(line: 955, column: 4, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !3, line: 955, column: 4)
!14350 = distinct !DILexicalBlock(scope: !14335, file: !3, line: 955, column: 4)
!14351 = !DILocation(line: 955, column: 4, scope: !14350)
!14352 = !DILocation(line: 957, column: 2, scope: !14330)
!14353 = !DILocation(line: 958, column: 3, scope: !14325)
!14354 = !DILocation(line: 958, column: 3, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14356, file: !3, line: 958, column: 3)
!14356 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 958, column: 3)
!14357 = !DILocation(line: 958, column: 3, scope: !14356)
!14358 = !DILocation(line: 960, column: 1, scope: !14311)
!14359 = distinct !DISubprogram(name: "pcnet32_get_strings", scope: !3, file: !3, line: 926, type: !5709, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14360 = !DILocalVariable(name: "dev", arg: 1, scope: !14359, file: !3, line: 926, type: !326)
!14361 = !DILocation(line: 926, column: 52, scope: !14359)
!14362 = !DILocalVariable(name: "stringset", arg: 2, scope: !14359, file: !3, line: 926, type: !1022)
!14363 = !DILocation(line: 926, column: 61, scope: !14359)
!14364 = !DILocalVariable(name: "data", arg: 3, scope: !14359, file: !3, line: 927, type: !828)
!14365 = !DILocation(line: 927, column: 9, scope: !14359)
!14366 = !DILocation(line: 929, column: 9, scope: !14359)
!14367 = !DILocation(line: 929, column: 2, scope: !14359)
!14368 = !DILocation(line: 930, column: 1, scope: !14359)
!14369 = distinct !DISubprogram(name: "pcnet32_set_phys_id", scope: !3, file: !3, line: 1125, type: !5713, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14370 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 1154, column: 3, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 1154, column: 3)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !3, line: 1154, column: 3)
!14374 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 1154, column: 3)
!14375 = distinct !DILexicalBlock(scope: !14376, file: !3, line: 1154, column: 3)
!14376 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1154, column: 3)
!14377 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 1134, column: 17)
!14378 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !14379)
!14379 = distinct !DILocation(line: 1149, column: 3, scope: !14377)
!14380 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !14379)
!14381 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !14382)
!14382 = distinct !DILocation(line: 1146, column: 3, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14384, file: !3, line: 1146, column: 3)
!14384 = distinct !DILexicalBlock(scope: !14385, file: !3, line: 1146, column: 3)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 1146, column: 3)
!14386 = distinct !DILexicalBlock(scope: !14387, file: !3, line: 1146, column: 3)
!14387 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1146, column: 3)
!14388 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 1140, column: 3, scope: !14377)
!14390 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !14389)
!14391 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !14392)
!14392 = distinct !DILocation(line: 1157, column: 3, scope: !14377)
!14393 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !14392)
!14394 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !14395)
!14395 = distinct !DILocation(line: 1137, column: 3, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14397, file: !3, line: 1137, column: 3)
!14397 = distinct !DILexicalBlock(scope: !14398, file: !3, line: 1137, column: 3)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !3, line: 1137, column: 3)
!14399 = distinct !DILexicalBlock(scope: !14400, file: !3, line: 1137, column: 3)
!14400 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1137, column: 3)
!14401 = !DILocalVariable(name: "dev", arg: 1, scope: !14369, file: !3, line: 1125, type: !326)
!14402 = !DILocation(line: 1125, column: 51, scope: !14369)
!14403 = !DILocalVariable(name: "state", arg: 2, scope: !14369, file: !3, line: 1126, type: !280)
!14404 = !DILocation(line: 1126, column: 38, scope: !14369)
!14405 = !DILocalVariable(name: "lp", scope: !14369, file: !3, line: 1128, type: !7248)
!14406 = !DILocation(line: 1128, column: 26, scope: !14369)
!14407 = !DILocation(line: 1128, column: 43, scope: !14369)
!14408 = !DILocation(line: 1128, column: 31, scope: !14369)
!14409 = !DILocalVariable(name: "a", scope: !14369, file: !3, line: 1129, type: !7563)
!14410 = !DILocation(line: 1129, column: 31, scope: !14369)
!14411 = !DILocation(line: 1129, column: 35, scope: !14369)
!14412 = !DILocation(line: 1129, column: 39, scope: !14369)
!14413 = !DILocalVariable(name: "ioaddr", scope: !14369, file: !3, line: 1130, type: !11471)
!14414 = !DILocation(line: 1130, column: 8, scope: !14369)
!14415 = !DILocation(line: 1130, column: 17, scope: !14369)
!14416 = !DILocation(line: 1130, column: 22, scope: !14369)
!14417 = !DILocalVariable(name: "flags", scope: !14369, file: !3, line: 1131, type: !348)
!14418 = !DILocation(line: 1131, column: 16, scope: !14369)
!14419 = !DILocalVariable(name: "i", scope: !14369, file: !3, line: 1132, type: !7)
!14420 = !DILocation(line: 1132, column: 6, scope: !14369)
!14421 = !DILocation(line: 1134, column: 10, scope: !14369)
!14422 = !DILocation(line: 1134, column: 2, scope: !14369)
!14423 = !DILocation(line: 1137, column: 3, scope: !14377)
!14424 = !DILocation(line: 1137, column: 3, scope: !14400)
!14425 = !DILocalVariable(name: "__dummy", scope: !14426, file: !3, line: 1137, type: !348)
!14426 = distinct !DILexicalBlock(scope: !14399, file: !3, line: 1137, column: 3)
!14427 = !DILocation(line: 1137, column: 3, scope: !14426)
!14428 = !DILocalVariable(name: "__dummy2", scope: !14426, file: !3, line: 1137, type: !348)
!14429 = !DILocation(line: 1137, column: 3, scope: !14399)
!14430 = !DILocation(line: 1137, column: 3, scope: !14398)
!14431 = !DILocation(line: 1137, column: 3, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14398, file: !3, line: 1137, column: 3)
!14433 = !DILocalVariable(name: "__dummy", scope: !14434, file: !3, line: 1137, type: !348)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !3, line: 1137, column: 3)
!14435 = distinct !DILexicalBlock(scope: !14432, file: !3, line: 1137, column: 3)
!14436 = !DILocation(line: 1137, column: 3, scope: !14434)
!14437 = !DILocalVariable(name: "__dummy2", scope: !14434, file: !3, line: 1137, type: !348)
!14438 = !DILocation(line: 1137, column: 3, scope: !14435)
!14439 = !DILocation(line: 1137, column: 3, scope: !14397)
!14440 = !{i32 -2139658247}
!14441 = !DILocation(line: 1137, column: 3, scope: !14396)
!14442 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !14395)
!14443 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !14395)
!14444 = !DILocation(line: 1138, column: 10, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1138, column: 3)
!14446 = !DILocation(line: 1138, column: 8, scope: !14445)
!14447 = !DILocation(line: 1138, column: 15, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14445, file: !3, line: 1138, column: 3)
!14449 = !DILocation(line: 1138, column: 17, scope: !14448)
!14450 = !DILocation(line: 1138, column: 3, scope: !14445)
!14451 = !DILocation(line: 1139, column: 27, scope: !14448)
!14452 = !DILocation(line: 1139, column: 30, scope: !14448)
!14453 = !DILocation(line: 1139, column: 39, scope: !14448)
!14454 = !DILocation(line: 1139, column: 47, scope: !14448)
!14455 = !DILocation(line: 1139, column: 4, scope: !14448)
!14456 = !DILocation(line: 1139, column: 8, scope: !14448)
!14457 = !DILocation(line: 1139, column: 18, scope: !14448)
!14458 = !DILocation(line: 1139, column: 20, scope: !14448)
!14459 = !DILocation(line: 1139, column: 25, scope: !14448)
!14460 = !DILocation(line: 1138, column: 23, scope: !14448)
!14461 = !DILocation(line: 1138, column: 3, scope: !14448)
!14462 = distinct !{!14462, !14450, !14463}
!14463 = !DILocation(line: 1139, column: 48, scope: !14445)
!14464 = !DILocation(line: 1140, column: 27, scope: !14377)
!14465 = !DILocation(line: 1140, column: 31, scope: !14377)
!14466 = !DILocation(line: 1140, column: 37, scope: !14377)
!14467 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !14389)
!14468 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !14389)
!14469 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !14389)
!14470 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !14389)
!14471 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !14389)
!14472 = !DILocation(line: 1141, column: 3, scope: !14377)
!14473 = !DILocation(line: 1146, column: 3, scope: !14377)
!14474 = !DILocation(line: 1146, column: 3, scope: !14387)
!14475 = !DILocalVariable(name: "__dummy", scope: !14476, file: !3, line: 1146, type: !348)
!14476 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 1146, column: 3)
!14477 = !DILocation(line: 1146, column: 3, scope: !14476)
!14478 = !DILocalVariable(name: "__dummy2", scope: !14476, file: !3, line: 1146, type: !348)
!14479 = !DILocation(line: 1146, column: 3, scope: !14386)
!14480 = !DILocation(line: 1146, column: 3, scope: !14385)
!14481 = !DILocation(line: 1146, column: 3, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14385, file: !3, line: 1146, column: 3)
!14483 = !DILocalVariable(name: "__dummy", scope: !14484, file: !3, line: 1146, type: !348)
!14484 = distinct !DILexicalBlock(scope: !14485, file: !3, line: 1146, column: 3)
!14485 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 1146, column: 3)
!14486 = !DILocation(line: 1146, column: 3, scope: !14484)
!14487 = !DILocalVariable(name: "__dummy2", scope: !14484, file: !3, line: 1146, type: !348)
!14488 = !DILocation(line: 1146, column: 3, scope: !14485)
!14489 = !DILocation(line: 1146, column: 3, scope: !14384)
!14490 = !{i32 -2139657242}
!14491 = !DILocation(line: 1146, column: 3, scope: !14383)
!14492 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !14382)
!14493 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !14382)
!14494 = !DILocation(line: 1147, column: 10, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1147, column: 3)
!14496 = !DILocation(line: 1147, column: 8, scope: !14495)
!14497 = !DILocation(line: 1147, column: 15, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 1147, column: 3)
!14499 = !DILocation(line: 1147, column: 17, scope: !14498)
!14500 = !DILocation(line: 1147, column: 3, scope: !14495)
!14501 = !DILocation(line: 1148, column: 4, scope: !14498)
!14502 = !DILocation(line: 1148, column: 7, scope: !14498)
!14503 = !DILocation(line: 1148, column: 17, scope: !14498)
!14504 = !DILocation(line: 1148, column: 25, scope: !14498)
!14505 = !DILocation(line: 1148, column: 28, scope: !14498)
!14506 = !DILocation(line: 1148, column: 31, scope: !14498)
!14507 = !DILocation(line: 1148, column: 40, scope: !14498)
!14508 = !DILocation(line: 1148, column: 48, scope: !14498)
!14509 = !DILocation(line: 1148, column: 51, scope: !14498)
!14510 = !DILocation(line: 1147, column: 23, scope: !14498)
!14511 = !DILocation(line: 1147, column: 3, scope: !14498)
!14512 = distinct !{!14512, !14500, !14513}
!14513 = !DILocation(line: 1148, column: 59, scope: !14495)
!14514 = !DILocation(line: 1149, column: 27, scope: !14377)
!14515 = !DILocation(line: 1149, column: 31, scope: !14377)
!14516 = !DILocation(line: 1149, column: 37, scope: !14377)
!14517 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !14379)
!14518 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !14379)
!14519 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !14379)
!14520 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !14379)
!14521 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !14379)
!14522 = !DILocation(line: 1150, column: 3, scope: !14377)
!14523 = !DILocation(line: 1154, column: 3, scope: !14377)
!14524 = !DILocation(line: 1154, column: 3, scope: !14376)
!14525 = !DILocalVariable(name: "__dummy", scope: !14526, file: !3, line: 1154, type: !348)
!14526 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 1154, column: 3)
!14527 = !DILocation(line: 1154, column: 3, scope: !14526)
!14528 = !DILocalVariable(name: "__dummy2", scope: !14526, file: !3, line: 1154, type: !348)
!14529 = !DILocation(line: 1154, column: 3, scope: !14375)
!14530 = !DILocation(line: 1154, column: 3, scope: !14374)
!14531 = !DILocation(line: 1154, column: 3, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14374, file: !3, line: 1154, column: 3)
!14533 = !DILocalVariable(name: "__dummy", scope: !14534, file: !3, line: 1154, type: !348)
!14534 = distinct !DILexicalBlock(scope: !14535, file: !3, line: 1154, column: 3)
!14535 = distinct !DILexicalBlock(scope: !14532, file: !3, line: 1154, column: 3)
!14536 = !DILocation(line: 1154, column: 3, scope: !14534)
!14537 = !DILocalVariable(name: "__dummy2", scope: !14534, file: !3, line: 1154, type: !348)
!14538 = !DILocation(line: 1154, column: 3, scope: !14535)
!14539 = !DILocation(line: 1154, column: 3, scope: !14373)
!14540 = !{i32 -2139656237}
!14541 = !DILocation(line: 1154, column: 3, scope: !14372)
!14542 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !14371)
!14543 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !14371)
!14544 = !DILocation(line: 1155, column: 10, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1155, column: 3)
!14546 = !DILocation(line: 1155, column: 8, scope: !14545)
!14547 = !DILocation(line: 1155, column: 15, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14545, file: !3, line: 1155, column: 3)
!14549 = !DILocation(line: 1155, column: 17, scope: !14548)
!14550 = !DILocation(line: 1155, column: 3, scope: !14545)
!14551 = !DILocation(line: 1156, column: 4, scope: !14548)
!14552 = !DILocation(line: 1156, column: 7, scope: !14548)
!14553 = !DILocation(line: 1156, column: 17, scope: !14548)
!14554 = !DILocation(line: 1156, column: 25, scope: !14548)
!14555 = !DILocation(line: 1156, column: 28, scope: !14548)
!14556 = !DILocation(line: 1156, column: 32, scope: !14548)
!14557 = !DILocation(line: 1156, column: 42, scope: !14548)
!14558 = !DILocation(line: 1156, column: 44, scope: !14548)
!14559 = !DILocation(line: 1155, column: 23, scope: !14548)
!14560 = !DILocation(line: 1155, column: 3, scope: !14548)
!14561 = distinct !{!14561, !14550, !14562}
!14562 = !DILocation(line: 1156, column: 48, scope: !14545)
!14563 = !DILocation(line: 1157, column: 27, scope: !14377)
!14564 = !DILocation(line: 1157, column: 31, scope: !14377)
!14565 = !DILocation(line: 1157, column: 37, scope: !14377)
!14566 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !14392)
!14567 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !14392)
!14568 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !14392)
!14569 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !14392)
!14570 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !14392)
!14571 = !DILocation(line: 1158, column: 2, scope: !14377)
!14572 = !DILocation(line: 1159, column: 2, scope: !14369)
!14573 = !DILocation(line: 1160, column: 1, scope: !14369)
!14574 = distinct !DISubprogram(name: "pcnet32_get_sset_count", scope: !3, file: !3, line: 932, type: !758, scopeLine: 933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14575 = !DILocalVariable(name: "dev", arg: 1, scope: !14574, file: !3, line: 932, type: !326)
!14576 = !DILocation(line: 932, column: 54, scope: !14574)
!14577 = !DILocalVariable(name: "sset", arg: 2, scope: !14574, file: !3, line: 932, type: !7)
!14578 = !DILocation(line: 932, column: 63, scope: !14574)
!14579 = !DILocation(line: 934, column: 10, scope: !14574)
!14580 = !DILocation(line: 934, column: 2, scope: !14574)
!14581 = !DILocation(line: 936, column: 3, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14574, file: !3, line: 934, column: 16)
!14583 = !DILocation(line: 938, column: 3, scope: !14582)
!14584 = !DILocation(line: 940, column: 1, scope: !14574)
!14585 = distinct !DISubprogram(name: "pcnet32_get_link_ksettings", scope: !3, file: !3, line: 718, type: !5982, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14586 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !14587)
!14587 = distinct !DILocation(line: 744, column: 2, scope: !14585)
!14588 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !14587)
!14589 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !14590)
!14590 = distinct !DILocation(line: 724, column: 2, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14592, file: !3, line: 724, column: 2)
!14592 = distinct !DILexicalBlock(scope: !14593, file: !3, line: 724, column: 2)
!14593 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 724, column: 2)
!14594 = distinct !DILexicalBlock(scope: !14595, file: !3, line: 724, column: 2)
!14595 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 724, column: 2)
!14596 = !DILocalVariable(name: "dev", arg: 1, scope: !14585, file: !3, line: 718, type: !326)
!14597 = !DILocation(line: 718, column: 58, scope: !14585)
!14598 = !DILocalVariable(name: "cmd", arg: 2, scope: !14585, file: !3, line: 719, type: !5984)
!14599 = !DILocation(line: 719, column: 42, scope: !14585)
!14600 = !DILocalVariable(name: "lp", scope: !14585, file: !3, line: 721, type: !7248)
!14601 = !DILocation(line: 721, column: 26, scope: !14585)
!14602 = !DILocation(line: 721, column: 43, scope: !14585)
!14603 = !DILocation(line: 721, column: 31, scope: !14585)
!14604 = !DILocalVariable(name: "flags", scope: !14585, file: !3, line: 722, type: !348)
!14605 = !DILocation(line: 722, column: 16, scope: !14585)
!14606 = !DILocation(line: 724, column: 2, scope: !14585)
!14607 = !DILocation(line: 724, column: 2, scope: !14595)
!14608 = !DILocalVariable(name: "__dummy", scope: !14609, file: !3, line: 724, type: !348)
!14609 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 724, column: 2)
!14610 = !DILocation(line: 724, column: 2, scope: !14609)
!14611 = !DILocalVariable(name: "__dummy2", scope: !14609, file: !3, line: 724, type: !348)
!14612 = !DILocation(line: 724, column: 2, scope: !14594)
!14613 = !DILocation(line: 724, column: 2, scope: !14593)
!14614 = !DILocation(line: 724, column: 2, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14593, file: !3, line: 724, column: 2)
!14616 = !DILocalVariable(name: "__dummy", scope: !14617, file: !3, line: 724, type: !348)
!14617 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 724, column: 2)
!14618 = distinct !DILexicalBlock(scope: !14615, file: !3, line: 724, column: 2)
!14619 = !DILocation(line: 724, column: 2, scope: !14617)
!14620 = !DILocalVariable(name: "__dummy2", scope: !14617, file: !3, line: 724, type: !348)
!14621 = !DILocation(line: 724, column: 2, scope: !14618)
!14622 = !DILocation(line: 724, column: 2, scope: !14592)
!14623 = !{i32 -2139685379}
!14624 = !DILocation(line: 724, column: 2, scope: !14591)
!14625 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !14590)
!14626 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !14590)
!14627 = !DILocation(line: 725, column: 6, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 725, column: 6)
!14629 = !DILocation(line: 725, column: 10, scope: !14628)
!14630 = !DILocation(line: 725, column: 6, scope: !14585)
!14631 = !DILocation(line: 726, column: 35, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 725, column: 15)
!14633 = !DILocation(line: 726, column: 39, scope: !14632)
!14634 = !DILocation(line: 726, column: 47, scope: !14632)
!14635 = !DILocation(line: 726, column: 3, scope: !14632)
!14636 = !DILocation(line: 727, column: 2, scope: !14632)
!14637 = !DILocation(line: 727, column: 13, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 727, column: 13)
!14639 = !DILocation(line: 727, column: 17, scope: !14638)
!14640 = !DILocation(line: 727, column: 30, scope: !14638)
!14641 = !DILocation(line: 727, column: 13, scope: !14628)
!14642 = !DILocation(line: 728, column: 7, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 728, column: 7)
!14644 = distinct !DILexicalBlock(scope: !14638, file: !3, line: 727, column: 50)
!14645 = !DILocation(line: 728, column: 11, scope: !14643)
!14646 = !DILocation(line: 728, column: 7, scope: !14644)
!14647 = !DILocation(line: 729, column: 4, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14643, file: !3, line: 728, column: 20)
!14649 = !DILocation(line: 729, column: 9, scope: !14648)
!14650 = !DILocation(line: 729, column: 14, scope: !14648)
!14651 = !DILocation(line: 729, column: 22, scope: !14648)
!14652 = !DILocation(line: 730, column: 8, scope: !14653)
!14653 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 730, column: 8)
!14654 = !DILocation(line: 730, column: 12, scope: !14653)
!14655 = !DILocation(line: 730, column: 15, scope: !14653)
!14656 = !DILocation(line: 730, column: 24, scope: !14653)
!14657 = !DILocation(line: 730, column: 29, scope: !14653)
!14658 = !DILocation(line: 730, column: 43, scope: !14653)
!14659 = !DILocation(line: 730, column: 8, scope: !14648)
!14660 = !DILocation(line: 731, column: 5, scope: !14653)
!14661 = !DILocation(line: 731, column: 10, scope: !14653)
!14662 = !DILocation(line: 731, column: 15, scope: !14653)
!14663 = !DILocation(line: 731, column: 20, scope: !14653)
!14664 = !DILocation(line: 733, column: 5, scope: !14653)
!14665 = !DILocation(line: 733, column: 10, scope: !14653)
!14666 = !DILocation(line: 733, column: 15, scope: !14653)
!14667 = !DILocation(line: 733, column: 20, scope: !14653)
!14668 = !DILocation(line: 734, column: 3, scope: !14648)
!14669 = !DILocation(line: 735, column: 4, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14643, file: !3, line: 734, column: 10)
!14671 = !DILocation(line: 735, column: 9, scope: !14670)
!14672 = !DILocation(line: 735, column: 14, scope: !14670)
!14673 = !DILocation(line: 735, column: 22, scope: !14670)
!14674 = !DILocation(line: 736, column: 21, scope: !14670)
!14675 = !DILocation(line: 736, column: 25, scope: !14670)
!14676 = !DILocation(line: 736, column: 4, scope: !14670)
!14677 = !DILocation(line: 736, column: 9, scope: !14670)
!14678 = !DILocation(line: 736, column: 14, scope: !14670)
!14679 = !DILocation(line: 736, column: 19, scope: !14670)
!14680 = !DILocation(line: 738, column: 22, scope: !14644)
!14681 = !DILocation(line: 738, column: 26, scope: !14644)
!14682 = !DILocation(line: 738, column: 3, scope: !14644)
!14683 = !DILocation(line: 738, column: 8, scope: !14644)
!14684 = !DILocation(line: 738, column: 13, scope: !14644)
!14685 = !DILocation(line: 738, column: 20, scope: !14644)
!14686 = !DILocation(line: 739, column: 3, scope: !14644)
!14687 = !DILocation(line: 739, column: 8, scope: !14644)
!14688 = !DILocation(line: 739, column: 13, scope: !14644)
!14689 = !DILocation(line: 739, column: 19, scope: !14644)
!14690 = !DILocation(line: 741, column: 7, scope: !14644)
!14691 = !DILocation(line: 741, column: 12, scope: !14644)
!14692 = !DILocation(line: 741, column: 23, scope: !14644)
!14693 = !DILocation(line: 740, column: 3, scope: !14644)
!14694 = !DILocation(line: 743, column: 2, scope: !14644)
!14695 = !DILocation(line: 744, column: 26, scope: !14585)
!14696 = !DILocation(line: 744, column: 30, scope: !14585)
!14697 = !DILocation(line: 744, column: 36, scope: !14585)
!14698 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !14587)
!14699 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !14587)
!14700 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !14587)
!14701 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !14587)
!14702 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !14587)
!14703 = !DILocation(line: 745, column: 2, scope: !14585)
!14704 = distinct !DISubprogram(name: "pcnet32_set_link_ksettings", scope: !3, file: !3, line: 748, type: !6021, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14705 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !14706)
!14706 = distinct !DILocation(line: 791, column: 2, scope: !14704)
!14707 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !14706)
!14708 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !14709)
!14709 = distinct !DILocation(line: 757, column: 2, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !3, line: 757, column: 2)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 757, column: 2)
!14712 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 757, column: 2)
!14713 = distinct !DILexicalBlock(scope: !14714, file: !3, line: 757, column: 2)
!14714 = distinct !DILexicalBlock(scope: !14704, file: !3, line: 757, column: 2)
!14715 = !DILocalVariable(name: "dev", arg: 1, scope: !14704, file: !3, line: 748, type: !326)
!14716 = !DILocation(line: 748, column: 58, scope: !14704)
!14717 = !DILocalVariable(name: "cmd", arg: 2, scope: !14704, file: !3, line: 749, type: !6023)
!14718 = !DILocation(line: 749, column: 48, scope: !14704)
!14719 = !DILocalVariable(name: "lp", scope: !14704, file: !3, line: 751, type: !7248)
!14720 = !DILocation(line: 751, column: 26, scope: !14704)
!14721 = !DILocation(line: 751, column: 43, scope: !14704)
!14722 = !DILocation(line: 751, column: 31, scope: !14704)
!14723 = !DILocalVariable(name: "ioaddr", scope: !14704, file: !3, line: 752, type: !11471)
!14724 = !DILocation(line: 752, column: 8, scope: !14704)
!14725 = !DILocation(line: 752, column: 17, scope: !14704)
!14726 = !DILocation(line: 752, column: 22, scope: !14704)
!14727 = !DILocalVariable(name: "flags", scope: !14704, file: !3, line: 753, type: !348)
!14728 = !DILocation(line: 753, column: 16, scope: !14704)
!14729 = !DILocalVariable(name: "r", scope: !14704, file: !3, line: 754, type: !7)
!14730 = !DILocation(line: 754, column: 6, scope: !14704)
!14731 = !DILocalVariable(name: "suspended", scope: !14704, file: !3, line: 755, type: !7)
!14732 = !DILocation(line: 755, column: 6, scope: !14704)
!14733 = !DILocalVariable(name: "bcr2", scope: !14704, file: !3, line: 755, type: !7)
!14734 = !DILocation(line: 755, column: 17, scope: !14704)
!14735 = !DILocalVariable(name: "bcr9", scope: !14704, file: !3, line: 755, type: !7)
!14736 = !DILocation(line: 755, column: 23, scope: !14704)
!14737 = !DILocalVariable(name: "csr15", scope: !14704, file: !3, line: 755, type: !7)
!14738 = !DILocation(line: 755, column: 29, scope: !14704)
!14739 = !DILocation(line: 757, column: 2, scope: !14704)
!14740 = !DILocation(line: 757, column: 2, scope: !14714)
!14741 = !DILocalVariable(name: "__dummy", scope: !14742, file: !3, line: 757, type: !348)
!14742 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 757, column: 2)
!14743 = !DILocation(line: 757, column: 2, scope: !14742)
!14744 = !DILocalVariable(name: "__dummy2", scope: !14742, file: !3, line: 757, type: !348)
!14745 = !DILocation(line: 757, column: 2, scope: !14713)
!14746 = !DILocation(line: 757, column: 2, scope: !14712)
!14747 = !DILocation(line: 757, column: 2, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 757, column: 2)
!14749 = !DILocalVariable(name: "__dummy", scope: !14750, file: !3, line: 757, type: !348)
!14750 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 757, column: 2)
!14751 = distinct !DILexicalBlock(scope: !14748, file: !3, line: 757, column: 2)
!14752 = !DILocation(line: 757, column: 2, scope: !14750)
!14753 = !DILocalVariable(name: "__dummy2", scope: !14750, file: !3, line: 757, type: !348)
!14754 = !DILocation(line: 757, column: 2, scope: !14751)
!14755 = !DILocation(line: 757, column: 2, scope: !14711)
!14756 = !{i32 -2139684088}
!14757 = !DILocation(line: 757, column: 2, scope: !14710)
!14758 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !14709)
!14759 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !14709)
!14760 = !DILocation(line: 758, column: 6, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14704, file: !3, line: 758, column: 6)
!14762 = !DILocation(line: 758, column: 10, scope: !14761)
!14763 = !DILocation(line: 758, column: 6, scope: !14704)
!14764 = !DILocation(line: 759, column: 39, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14761, file: !3, line: 758, column: 15)
!14766 = !DILocation(line: 759, column: 43, scope: !14765)
!14767 = !DILocation(line: 759, column: 51, scope: !14765)
!14768 = !DILocation(line: 759, column: 7, scope: !14765)
!14769 = !DILocation(line: 759, column: 5, scope: !14765)
!14770 = !DILocation(line: 760, column: 2, scope: !14765)
!14771 = !DILocation(line: 760, column: 13, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14761, file: !3, line: 760, column: 13)
!14773 = !DILocation(line: 760, column: 17, scope: !14772)
!14774 = !DILocation(line: 760, column: 30, scope: !14772)
!14775 = !DILocation(line: 760, column: 13, scope: !14761)
!14776 = !DILocation(line: 761, column: 31, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14772, file: !3, line: 760, column: 50)
!14778 = !DILocation(line: 761, column: 15, scope: !14777)
!14779 = !DILocation(line: 761, column: 13, scope: !14777)
!14780 = !DILocation(line: 762, column: 8, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14777, file: !3, line: 762, column: 7)
!14782 = !DILocation(line: 762, column: 7, scope: !14777)
!14783 = !DILocation(line: 763, column: 4, scope: !14781)
!14784 = !DILocation(line: 763, column: 8, scope: !14781)
!14785 = !DILocation(line: 763, column: 11, scope: !14781)
!14786 = !DILocation(line: 763, column: 21, scope: !14781)
!14787 = !DILocation(line: 765, column: 17, scope: !14777)
!14788 = !DILocation(line: 765, column: 22, scope: !14777)
!14789 = !DILocation(line: 765, column: 27, scope: !14777)
!14790 = !DILocation(line: 765, column: 35, scope: !14777)
!14791 = !DILocation(line: 765, column: 3, scope: !14777)
!14792 = !DILocation(line: 765, column: 7, scope: !14777)
!14793 = !DILocation(line: 765, column: 15, scope: !14777)
!14794 = !DILocation(line: 766, column: 10, scope: !14777)
!14795 = !DILocation(line: 766, column: 14, scope: !14777)
!14796 = !DILocation(line: 766, column: 17, scope: !14777)
!14797 = !DILocation(line: 766, column: 26, scope: !14777)
!14798 = !DILocation(line: 766, column: 8, scope: !14777)
!14799 = !DILocation(line: 767, column: 7, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14777, file: !3, line: 767, column: 7)
!14801 = !DILocation(line: 767, column: 12, scope: !14800)
!14802 = !DILocation(line: 767, column: 17, scope: !14800)
!14803 = !DILocation(line: 767, column: 25, scope: !14800)
!14804 = !DILocation(line: 767, column: 7, scope: !14777)
!14805 = !DILocation(line: 768, column: 4, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14800, file: !3, line: 767, column: 44)
!14807 = !DILocation(line: 768, column: 8, scope: !14806)
!14808 = !DILocation(line: 768, column: 11, scope: !14806)
!14809 = !DILocation(line: 768, column: 21, scope: !14806)
!14810 = !DILocation(line: 768, column: 32, scope: !14806)
!14811 = !DILocation(line: 768, column: 37, scope: !14806)
!14812 = !DILocation(line: 769, column: 3, scope: !14806)
!14813 = !DILocation(line: 770, column: 4, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14800, file: !3, line: 769, column: 10)
!14815 = !DILocation(line: 770, column: 8, scope: !14814)
!14816 = !DILocation(line: 770, column: 11, scope: !14814)
!14817 = !DILocation(line: 770, column: 21, scope: !14814)
!14818 = !DILocation(line: 770, column: 32, scope: !14814)
!14819 = !DILocation(line: 770, column: 37, scope: !14814)
!14820 = !DILocation(line: 772, column: 18, scope: !14814)
!14821 = !DILocation(line: 772, column: 23, scope: !14814)
!14822 = !DILocation(line: 772, column: 28, scope: !14814)
!14823 = !DILocation(line: 772, column: 33, scope: !14814)
!14824 = !DILocation(line: 772, column: 4, scope: !14814)
!14825 = !DILocation(line: 772, column: 8, scope: !14814)
!14826 = !DILocation(line: 772, column: 16, scope: !14814)
!14827 = !DILocation(line: 773, column: 12, scope: !14814)
!14828 = !DILocation(line: 773, column: 16, scope: !14814)
!14829 = !DILocation(line: 773, column: 19, scope: !14814)
!14830 = !DILocation(line: 773, column: 28, scope: !14814)
!14831 = !DILocation(line: 773, column: 43, scope: !14814)
!14832 = !DILocation(line: 773, column: 10, scope: !14814)
!14833 = !DILocation(line: 774, column: 8, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 774, column: 8)
!14835 = !DILocation(line: 774, column: 13, scope: !14834)
!14836 = !DILocation(line: 774, column: 18, scope: !14834)
!14837 = !DILocation(line: 774, column: 23, scope: !14834)
!14838 = !DILocation(line: 774, column: 8, scope: !14814)
!14839 = !DILocation(line: 775, column: 11, scope: !14834)
!14840 = !DILocation(line: 775, column: 5, scope: !14834)
!14841 = !DILocation(line: 776, column: 4, scope: !14814)
!14842 = !DILocation(line: 776, column: 8, scope: !14814)
!14843 = !DILocation(line: 776, column: 11, scope: !14814)
!14844 = !DILocation(line: 776, column: 21, scope: !14814)
!14845 = !DILocation(line: 776, column: 36, scope: !14814)
!14846 = !DILocation(line: 777, column: 27, scope: !14814)
!14847 = !DILocation(line: 777, column: 4, scope: !14814)
!14848 = !DILocation(line: 777, column: 8, scope: !14814)
!14849 = !DILocation(line: 777, column: 20, scope: !14814)
!14850 = !DILocation(line: 777, column: 25, scope: !14814)
!14851 = !DILocation(line: 779, column: 14, scope: !14814)
!14852 = !DILocation(line: 779, column: 19, scope: !14814)
!14853 = !DILocation(line: 779, column: 24, scope: !14814)
!14854 = !DILocation(line: 779, column: 31, scope: !14814)
!14855 = !DILocation(line: 779, column: 4, scope: !14814)
!14856 = !DILocation(line: 779, column: 8, scope: !14814)
!14857 = !DILocation(line: 779, column: 12, scope: !14814)
!14858 = !DILocation(line: 780, column: 11, scope: !14814)
!14859 = !DILocation(line: 780, column: 15, scope: !14814)
!14860 = !DILocation(line: 780, column: 18, scope: !14814)
!14861 = !DILocation(line: 780, column: 27, scope: !14814)
!14862 = !DILocation(line: 780, column: 38, scope: !14814)
!14863 = !DILocation(line: 780, column: 9, scope: !14814)
!14864 = !DILocation(line: 781, column: 8, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 781, column: 8)
!14866 = !DILocation(line: 781, column: 13, scope: !14865)
!14867 = !DILocation(line: 781, column: 18, scope: !14865)
!14868 = !DILocation(line: 781, column: 25, scope: !14865)
!14869 = !DILocation(line: 781, column: 8, scope: !14814)
!14870 = !DILocation(line: 782, column: 10, scope: !14865)
!14871 = !DILocation(line: 782, column: 5, scope: !14865)
!14872 = !DILocation(line: 783, column: 4, scope: !14814)
!14873 = !DILocation(line: 783, column: 8, scope: !14814)
!14874 = !DILocation(line: 783, column: 11, scope: !14814)
!14875 = !DILocation(line: 783, column: 21, scope: !14814)
!14876 = !DILocation(line: 783, column: 32, scope: !14814)
!14877 = !DILocation(line: 785, column: 7, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14777, file: !3, line: 785, column: 7)
!14879 = !DILocation(line: 785, column: 7, scope: !14777)
!14880 = !DILocation(line: 786, column: 24, scope: !14878)
!14881 = !DILocation(line: 786, column: 28, scope: !14878)
!14882 = !DILocation(line: 786, column: 4, scope: !14878)
!14883 = !DILocation(line: 787, column: 26, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14878, file: !3, line: 787, column: 12)
!14885 = !DILocation(line: 787, column: 12, scope: !14884)
!14886 = !DILocation(line: 787, column: 12, scope: !14878)
!14887 = !DILocation(line: 788, column: 20, scope: !14884)
!14888 = !DILocation(line: 788, column: 4, scope: !14884)
!14889 = !DILocation(line: 789, column: 5, scope: !14777)
!14890 = !DILocation(line: 790, column: 2, scope: !14777)
!14891 = !DILocation(line: 791, column: 26, scope: !14704)
!14892 = !DILocation(line: 791, column: 30, scope: !14704)
!14893 = !DILocation(line: 791, column: 36, scope: !14704)
!14894 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !14706)
!14895 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !14706)
!14896 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !14706)
!14897 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !14706)
!14898 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !14706)
!14899 = !DILocation(line: 792, column: 9, scope: !14704)
!14900 = !DILocation(line: 792, column: 2, scope: !14704)
!14901 = distinct !DISubprogram(name: "netif_running", scope: !6, file: !6, line: 3556, type: !10675, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14902 = !DILocalVariable(name: "dev", arg: 1, scope: !14901, file: !6, line: 3556, type: !808)
!14903 = !DILocation(line: 3556, column: 59, scope: !14901)
!14904 = !DILocation(line: 3558, column: 39, scope: !14901)
!14905 = !DILocation(line: 3558, column: 44, scope: !14901)
!14906 = !DILocation(line: 3558, column: 9, scope: !14901)
!14907 = !DILocation(line: 3558, column: 2, scope: !14901)
!14908 = distinct !DISubprogram(name: "pcnet32_netif_stop", scope: !3, file: !3, line: 446, type: !442, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14909 = !DILocalVariable(name: "dev", arg: 1, scope: !14908, file: !3, line: 446, type: !326)
!14910 = !DILocation(line: 446, column: 51, scope: !14908)
!14911 = !DILocalVariable(name: "lp", scope: !14908, file: !3, line: 448, type: !7248)
!14912 = !DILocation(line: 448, column: 26, scope: !14908)
!14913 = !DILocation(line: 448, column: 43, scope: !14908)
!14914 = !DILocation(line: 448, column: 31, scope: !14908)
!14915 = !DILocation(line: 450, column: 21, scope: !14908)
!14916 = !DILocation(line: 450, column: 2, scope: !14908)
!14917 = !DILocation(line: 451, column: 16, scope: !14908)
!14918 = !DILocation(line: 451, column: 20, scope: !14908)
!14919 = !DILocation(line: 451, column: 2, scope: !14908)
!14920 = !DILocation(line: 452, column: 19, scope: !14908)
!14921 = !DILocation(line: 452, column: 2, scope: !14908)
!14922 = !DILocation(line: 453, column: 1, scope: !14908)
!14923 = distinct !DISubprogram(name: "pcnet32_realloc_tx_ring", scope: !3, file: !3, line: 475, type: !14924, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!14924 = !DISubroutineType(types: !14925)
!14925 = !{null, !326, !7248, !13}
!14926 = !DILocalVariable(name: "dev", arg: 1, scope: !14923, file: !3, line: 475, type: !326)
!14927 = !DILocation(line: 475, column: 56, scope: !14923)
!14928 = !DILocalVariable(name: "lp", arg: 2, scope: !14923, file: !3, line: 476, type: !7248)
!14929 = !DILocation(line: 476, column: 33, scope: !14923)
!14930 = !DILocalVariable(name: "size", arg: 3, scope: !14923, file: !3, line: 477, type: !13)
!14931 = !DILocation(line: 477, column: 22, scope: !14923)
!14932 = !DILocalVariable(name: "new_ring_dma_addr", scope: !14923, file: !3, line: 479, type: !2070)
!14933 = !DILocation(line: 479, column: 13, scope: !14923)
!14934 = !DILocalVariable(name: "new_dma_addr_list", scope: !14923, file: !3, line: 480, type: !7560)
!14935 = !DILocation(line: 480, column: 14, scope: !14923)
!14936 = !DILocalVariable(name: "new_tx_ring", scope: !14923, file: !3, line: 481, type: !7274)
!14937 = !DILocation(line: 481, column: 26, scope: !14923)
!14938 = !DILocalVariable(name: "new_skb_list", scope: !14923, file: !3, line: 482, type: !6435)
!14939 = !DILocation(line: 482, column: 19, scope: !14923)
!14940 = !DILocalVariable(name: "entries", scope: !14923, file: !3, line: 483, type: !13)
!14941 = !DILocation(line: 483, column: 15, scope: !14923)
!14942 = !DILocation(line: 483, column: 25, scope: !14923)
!14943 = !DILocation(line: 485, column: 24, scope: !14923)
!14944 = !DILocation(line: 485, column: 2, scope: !14923)
!14945 = !DILocation(line: 488, column: 23, scope: !14923)
!14946 = !DILocation(line: 488, column: 27, scope: !14923)
!14947 = !DILocation(line: 488, column: 36, scope: !14923)
!14948 = !DILocation(line: 489, column: 41, scope: !14923)
!14949 = !DILocation(line: 489, column: 39, scope: !14923)
!14950 = !DILocation(line: 488, column: 3, scope: !14923)
!14951 = !DILocation(line: 487, column: 14, scope: !14923)
!14952 = !DILocation(line: 491, column: 6, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14923, file: !3, line: 491, column: 6)
!14954 = !DILocation(line: 491, column: 18, scope: !14953)
!14955 = !DILocation(line: 491, column: 6, scope: !14923)
!14956 = !DILocation(line: 492, column: 3, scope: !14953)
!14957 = !DILocation(line: 494, column: 30, scope: !14923)
!14958 = !DILocation(line: 494, column: 22, scope: !14923)
!14959 = !DILocation(line: 494, column: 20, scope: !14923)
!14960 = !DILocation(line: 495, column: 7, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14923, file: !3, line: 495, column: 6)
!14962 = !DILocation(line: 495, column: 6, scope: !14923)
!14963 = !DILocation(line: 496, column: 3, scope: !14961)
!14964 = !DILocation(line: 498, column: 25, scope: !14923)
!14965 = !DILocation(line: 498, column: 17, scope: !14923)
!14966 = !DILocation(line: 498, column: 15, scope: !14923)
!14967 = !DILocation(line: 499, column: 7, scope: !14968)
!14968 = distinct !DILexicalBlock(scope: !14923, file: !3, line: 499, column: 6)
!14969 = !DILocation(line: 499, column: 6, scope: !14923)
!14970 = !DILocation(line: 500, column: 3, scope: !14968)
!14971 = !DILocation(line: 502, column: 8, scope: !14923)
!14972 = !DILocation(line: 502, column: 12, scope: !14923)
!14973 = !DILocation(line: 502, column: 2, scope: !14923)
!14974 = !DILocation(line: 503, column: 8, scope: !14923)
!14975 = !DILocation(line: 503, column: 12, scope: !14923)
!14976 = !DILocation(line: 503, column: 2, scope: !14923)
!14977 = !DILocation(line: 504, column: 21, scope: !14923)
!14978 = !DILocation(line: 504, column: 25, scope: !14923)
!14979 = !DILocation(line: 504, column: 34, scope: !14923)
!14980 = !DILocation(line: 505, column: 39, scope: !14923)
!14981 = !DILocation(line: 505, column: 43, scope: !14923)
!14982 = !DILocation(line: 505, column: 37, scope: !14923)
!14983 = !DILocation(line: 506, column: 6, scope: !14923)
!14984 = !DILocation(line: 506, column: 10, scope: !14923)
!14985 = !DILocation(line: 506, column: 19, scope: !14923)
!14986 = !DILocation(line: 506, column: 23, scope: !14923)
!14987 = !DILocation(line: 504, column: 2, scope: !14923)
!14988 = !DILocation(line: 508, column: 21, scope: !14923)
!14989 = !DILocation(line: 508, column: 2, scope: !14923)
!14990 = !DILocation(line: 508, column: 6, scope: !14923)
!14991 = !DILocation(line: 508, column: 19, scope: !14923)
!14992 = !DILocation(line: 509, column: 20, scope: !14923)
!14993 = !DILocation(line: 509, column: 24, scope: !14923)
!14994 = !DILocation(line: 509, column: 37, scope: !14923)
!14995 = !DILocation(line: 509, column: 2, scope: !14923)
!14996 = !DILocation(line: 509, column: 6, scope: !14923)
!14997 = !DILocation(line: 509, column: 18, scope: !14923)
!14998 = !DILocation(line: 510, column: 21, scope: !14923)
!14999 = !DILocation(line: 510, column: 26, scope: !14923)
!15000 = !DILocation(line: 510, column: 20, scope: !14923)
!15001 = !DILocation(line: 510, column: 2, scope: !14923)
!15002 = !DILocation(line: 510, column: 6, scope: !14923)
!15003 = !DILocation(line: 510, column: 18, scope: !14923)
!15004 = !DILocation(line: 511, column: 16, scope: !14923)
!15005 = !DILocation(line: 511, column: 2, scope: !14923)
!15006 = !DILocation(line: 511, column: 6, scope: !14923)
!15007 = !DILocation(line: 511, column: 14, scope: !14923)
!15008 = !DILocation(line: 512, column: 25, scope: !14923)
!15009 = !DILocation(line: 512, column: 2, scope: !14923)
!15010 = !DILocation(line: 512, column: 6, scope: !14923)
!15011 = !DILocation(line: 512, column: 23, scope: !14923)
!15012 = !DILocation(line: 513, column: 20, scope: !14923)
!15013 = !DILocation(line: 513, column: 2, scope: !14923)
!15014 = !DILocation(line: 513, column: 6, scope: !14923)
!15015 = !DILocation(line: 513, column: 18, scope: !14923)
!15016 = !DILocation(line: 514, column: 18, scope: !14923)
!15017 = !DILocation(line: 514, column: 2, scope: !14923)
!15018 = !DILocation(line: 514, column: 6, scope: !14923)
!15019 = !DILocation(line: 514, column: 16, scope: !14923)
!15020 = !DILocation(line: 515, column: 2, scope: !14923)
!15021 = !DILabel(scope: !14923, name: "free_new_lists", file: !3, line: 517)
!15022 = !DILocation(line: 517, column: 1, scope: !14923)
!15023 = !DILocation(line: 518, column: 8, scope: !14923)
!15024 = !DILocation(line: 518, column: 2, scope: !14923)
!15025 = !DILabel(scope: !14923, name: "free_new_tx_ring", file: !3, line: 519)
!15026 = !DILocation(line: 519, column: 1, scope: !14923)
!15027 = !DILocation(line: 520, column: 21, scope: !14923)
!15028 = !DILocation(line: 520, column: 25, scope: !14923)
!15029 = !DILocation(line: 520, column: 34, scope: !14923)
!15030 = !DILocation(line: 521, column: 39, scope: !14923)
!15031 = !DILocation(line: 521, column: 37, scope: !14923)
!15032 = !DILocation(line: 522, column: 6, scope: !14923)
!15033 = !DILocation(line: 522, column: 19, scope: !14923)
!15034 = !DILocation(line: 520, column: 2, scope: !14923)
!15035 = !DILocation(line: 523, column: 1, scope: !14923)
!15036 = distinct !DISubprogram(name: "pcnet32_realloc_rx_ring", scope: !3, file: !3, line: 535, type: !14924, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15037 = !DILocalVariable(name: "dev", arg: 1, scope: !15036, file: !3, line: 535, type: !326)
!15038 = !DILocation(line: 535, column: 56, scope: !15036)
!15039 = !DILocalVariable(name: "lp", arg: 2, scope: !15036, file: !3, line: 536, type: !7248)
!15040 = !DILocation(line: 536, column: 33, scope: !15036)
!15041 = !DILocalVariable(name: "size", arg: 3, scope: !15036, file: !3, line: 537, type: !13)
!15042 = !DILocation(line: 537, column: 22, scope: !15036)
!15043 = !DILocalVariable(name: "new_ring_dma_addr", scope: !15036, file: !3, line: 539, type: !2070)
!15044 = !DILocation(line: 539, column: 13, scope: !15036)
!15045 = !DILocalVariable(name: "new_dma_addr_list", scope: !15036, file: !3, line: 540, type: !7560)
!15046 = !DILocation(line: 540, column: 14, scope: !15036)
!15047 = !DILocalVariable(name: "new_rx_ring", scope: !15036, file: !3, line: 541, type: !7265)
!15048 = !DILocation(line: 541, column: 26, scope: !15036)
!15049 = !DILocalVariable(name: "new_skb_list", scope: !15036, file: !3, line: 542, type: !6435)
!15050 = !DILocation(line: 542, column: 19, scope: !15036)
!15051 = !DILocalVariable(name: "new", scope: !15036, file: !3, line: 543, type: !7)
!15052 = !DILocation(line: 543, column: 6, scope: !15036)
!15053 = !DILocalVariable(name: "overlap", scope: !15036, file: !3, line: 543, type: !7)
!15054 = !DILocation(line: 543, column: 11, scope: !15036)
!15055 = !DILocalVariable(name: "entries", scope: !15036, file: !3, line: 544, type: !13)
!15056 = !DILocation(line: 544, column: 15, scope: !15036)
!15057 = !DILocation(line: 544, column: 25, scope: !15036)
!15058 = !DILocation(line: 547, column: 23, scope: !15036)
!15059 = !DILocation(line: 547, column: 27, scope: !15036)
!15060 = !DILocation(line: 547, column: 36, scope: !15036)
!15061 = !DILocation(line: 548, column: 41, scope: !15036)
!15062 = !DILocation(line: 548, column: 39, scope: !15036)
!15063 = !DILocation(line: 547, column: 3, scope: !15036)
!15064 = !DILocation(line: 546, column: 14, scope: !15036)
!15065 = !DILocation(line: 550, column: 6, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 550, column: 6)
!15067 = !DILocation(line: 550, column: 18, scope: !15066)
!15068 = !DILocation(line: 550, column: 6, scope: !15036)
!15069 = !DILocation(line: 551, column: 3, scope: !15066)
!15070 = !DILocation(line: 553, column: 30, scope: !15036)
!15071 = !DILocation(line: 553, column: 22, scope: !15036)
!15072 = !DILocation(line: 553, column: 20, scope: !15036)
!15073 = !DILocation(line: 554, column: 7, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 554, column: 6)
!15075 = !DILocation(line: 554, column: 6, scope: !15036)
!15076 = !DILocation(line: 555, column: 3, scope: !15074)
!15077 = !DILocation(line: 557, column: 25, scope: !15036)
!15078 = !DILocation(line: 557, column: 17, scope: !15036)
!15079 = !DILocation(line: 557, column: 15, scope: !15036)
!15080 = !DILocation(line: 558, column: 7, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 558, column: 6)
!15082 = !DILocation(line: 558, column: 6, scope: !15036)
!15083 = !DILocation(line: 559, column: 3, scope: !15081)
!15084 = !DILocalVariable(name: "__UNIQUE_ID___x319", scope: !15085, file: !3, line: 562, type: !13)
!15085 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 562, column: 12)
!15086 = !DILocation(line: 562, column: 12, scope: !15085)
!15087 = !DILocalVariable(name: "__UNIQUE_ID___y320", scope: !15085, file: !3, line: 562, type: !13)
!15088 = !DILocation(line: 562, column: 10, scope: !15036)
!15089 = !DILocation(line: 563, column: 11, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 563, column: 2)
!15091 = !DILocation(line: 563, column: 7, scope: !15090)
!15092 = !DILocation(line: 563, column: 16, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 563, column: 2)
!15094 = !DILocation(line: 563, column: 22, scope: !15093)
!15095 = !DILocation(line: 563, column: 20, scope: !15093)
!15096 = !DILocation(line: 563, column: 2, scope: !15090)
!15097 = !DILocation(line: 564, column: 3, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15093, file: !3, line: 563, column: 38)
!15099 = !DILocation(line: 564, column: 15, scope: !15098)
!15100 = !DILocation(line: 564, column: 22, scope: !15098)
!15101 = !DILocation(line: 564, column: 26, scope: !15098)
!15102 = !DILocation(line: 564, column: 34, scope: !15098)
!15103 = !DILocation(line: 565, column: 28, scope: !15098)
!15104 = !DILocation(line: 565, column: 32, scope: !15098)
!15105 = !DILocation(line: 565, column: 44, scope: !15098)
!15106 = !DILocation(line: 565, column: 3, scope: !15098)
!15107 = !DILocation(line: 565, column: 21, scope: !15098)
!15108 = !DILocation(line: 565, column: 26, scope: !15098)
!15109 = !DILocation(line: 566, column: 23, scope: !15098)
!15110 = !DILocation(line: 566, column: 27, scope: !15098)
!15111 = !DILocation(line: 566, column: 37, scope: !15098)
!15112 = !DILocation(line: 566, column: 3, scope: !15098)
!15113 = !DILocation(line: 566, column: 16, scope: !15098)
!15114 = !DILocation(line: 566, column: 21, scope: !15098)
!15115 = !DILocation(line: 567, column: 2, scope: !15098)
!15116 = !DILocation(line: 563, column: 34, scope: !15093)
!15117 = !DILocation(line: 563, column: 2, scope: !15093)
!15118 = distinct !{!15118, !15096, !15119}
!15119 = !DILocation(line: 567, column: 2, scope: !15090)
!15120 = !DILocation(line: 569, column: 2, scope: !15036)
!15121 = !DILocation(line: 569, column: 9, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15123, file: !3, line: 569, column: 2)
!15123 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 569, column: 2)
!15124 = !DILocation(line: 569, column: 15, scope: !15122)
!15125 = !DILocation(line: 569, column: 13, scope: !15122)
!15126 = !DILocation(line: 569, column: 2, scope: !15123)
!15127 = !DILocalVariable(name: "rx_skbuff", scope: !15128, file: !3, line: 570, type: !451)
!15128 = distinct !DILexicalBlock(scope: !15122, file: !3, line: 569, column: 31)
!15129 = !DILocation(line: 570, column: 19, scope: !15128)
!15130 = !DILocation(line: 571, column: 40, scope: !15128)
!15131 = !DILocation(line: 571, column: 23, scope: !15128)
!15132 = !DILocation(line: 571, column: 3, scope: !15128)
!15133 = !DILocation(line: 571, column: 16, scope: !15128)
!15134 = !DILocation(line: 571, column: 21, scope: !15128)
!15135 = !DILocation(line: 572, column: 15, scope: !15128)
!15136 = !DILocation(line: 572, column: 28, scope: !15128)
!15137 = !DILocation(line: 572, column: 13, scope: !15128)
!15138 = !DILocation(line: 573, column: 8, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15128, file: !3, line: 573, column: 7)
!15140 = !DILocation(line: 573, column: 7, scope: !15128)
!15141 = !DILocation(line: 575, column: 4, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15139, file: !3, line: 573, column: 19)
!15143 = !DILocation(line: 575, column: 4, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15145, file: !3, line: 575, column: 4)
!15145 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 575, column: 4)
!15146 = !DILocation(line: 575, column: 4, scope: !15145)
!15147 = !DILocation(line: 577, column: 4, scope: !15142)
!15148 = !DILocation(line: 579, column: 15, scope: !15128)
!15149 = !DILocation(line: 579, column: 3, scope: !15128)
!15150 = !DILocation(line: 582, column: 8, scope: !15128)
!15151 = !DILocation(line: 581, column: 3, scope: !15128)
!15152 = !DILocation(line: 581, column: 21, scope: !15128)
!15153 = !DILocation(line: 581, column: 26, scope: !15128)
!15154 = !DILocation(line: 584, column: 26, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15128, file: !3, line: 584, column: 7)
!15156 = !DILocation(line: 584, column: 30, scope: !15155)
!15157 = !DILocation(line: 584, column: 39, scope: !15155)
!15158 = !DILocation(line: 584, column: 44, scope: !15155)
!15159 = !DILocation(line: 584, column: 62, scope: !15155)
!15160 = !DILocation(line: 584, column: 7, scope: !15155)
!15161 = !DILocation(line: 584, column: 7, scope: !15128)
!15162 = !DILocation(line: 585, column: 4, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15155, file: !3, line: 584, column: 69)
!15164 = !DILocation(line: 585, column: 4, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15166, file: !3, line: 585, column: 4)
!15166 = distinct !DILexicalBlock(scope: !15163, file: !3, line: 585, column: 4)
!15167 = !DILocation(line: 585, column: 4, scope: !15166)
!15168 = !DILocation(line: 587, column: 4, scope: !15163)
!15169 = !DILocation(line: 588, column: 4, scope: !15163)
!15170 = !DILocation(line: 590, column: 27, scope: !15128)
!15171 = !DILocation(line: 590, column: 3, scope: !15128)
!15172 = !DILocation(line: 590, column: 15, scope: !15128)
!15173 = !DILocation(line: 590, column: 20, scope: !15128)
!15174 = !DILocation(line: 590, column: 25, scope: !15128)
!15175 = !DILocation(line: 591, column: 3, scope: !15128)
!15176 = !DILocation(line: 591, column: 15, scope: !15128)
!15177 = !DILocation(line: 591, column: 20, scope: !15128)
!15178 = !DILocation(line: 591, column: 31, scope: !15128)
!15179 = !DILocation(line: 592, column: 3, scope: !15128)
!15180 = !DILocation(line: 592, column: 15, scope: !15128)
!15181 = !DILocation(line: 592, column: 20, scope: !15128)
!15182 = !DILocation(line: 592, column: 27, scope: !15128)
!15183 = !DILocation(line: 593, column: 2, scope: !15128)
!15184 = !DILocation(line: 569, column: 27, scope: !15122)
!15185 = !DILocation(line: 569, column: 2, scope: !15122)
!15186 = distinct !{!15186, !15126, !15187}
!15187 = !DILocation(line: 593, column: 2, scope: !15123)
!15188 = !DILocation(line: 595, column: 2, scope: !15036)
!15189 = !DILocation(line: 595, column: 9, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15191, file: !3, line: 595, column: 2)
!15191 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 595, column: 2)
!15192 = !DILocation(line: 595, column: 15, scope: !15190)
!15193 = !DILocation(line: 595, column: 19, scope: !15190)
!15194 = !DILocation(line: 595, column: 13, scope: !15190)
!15195 = !DILocation(line: 595, column: 2, scope: !15191)
!15196 = !DILocation(line: 596, column: 7, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15198, file: !3, line: 596, column: 7)
!15198 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 595, column: 40)
!15199 = !DILocation(line: 596, column: 11, scope: !15197)
!15200 = !DILocation(line: 596, column: 21, scope: !15197)
!15201 = !DILocation(line: 596, column: 7, scope: !15198)
!15202 = !DILocation(line: 597, column: 28, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15204, file: !3, line: 597, column: 8)
!15204 = distinct !DILexicalBlock(scope: !15197, file: !3, line: 596, column: 27)
!15205 = !DILocation(line: 597, column: 32, scope: !15203)
!15206 = !DILocation(line: 597, column: 41, scope: !15203)
!15207 = !DILocation(line: 597, column: 46, scope: !15203)
!15208 = !DILocation(line: 597, column: 50, scope: !15203)
!15209 = !DILocation(line: 597, column: 62, scope: !15203)
!15210 = !DILocation(line: 597, column: 9, scope: !15203)
!15211 = !DILocation(line: 597, column: 8, scope: !15204)
!15212 = !DILocation(line: 598, column: 5, scope: !15203)
!15213 = !DILocation(line: 602, column: 4, scope: !15204)
!15214 = !DILocation(line: 603, column: 3, scope: !15204)
!15215 = !DILocation(line: 604, column: 2, scope: !15198)
!15216 = !DILocation(line: 595, column: 36, scope: !15190)
!15217 = !DILocation(line: 595, column: 2, scope: !15190)
!15218 = distinct !{!15218, !15195, !15219}
!15219 = !DILocation(line: 604, column: 2, scope: !15191)
!15220 = !DILocation(line: 606, column: 8, scope: !15036)
!15221 = !DILocation(line: 606, column: 12, scope: !15036)
!15222 = !DILocation(line: 606, column: 2, scope: !15036)
!15223 = !DILocation(line: 607, column: 8, scope: !15036)
!15224 = !DILocation(line: 607, column: 12, scope: !15036)
!15225 = !DILocation(line: 607, column: 2, scope: !15036)
!15226 = !DILocation(line: 608, column: 21, scope: !15036)
!15227 = !DILocation(line: 608, column: 25, scope: !15036)
!15228 = !DILocation(line: 608, column: 34, scope: !15036)
!15229 = !DILocation(line: 609, column: 39, scope: !15036)
!15230 = !DILocation(line: 609, column: 43, scope: !15036)
!15231 = !DILocation(line: 609, column: 37, scope: !15036)
!15232 = !DILocation(line: 610, column: 6, scope: !15036)
!15233 = !DILocation(line: 610, column: 10, scope: !15036)
!15234 = !DILocation(line: 610, column: 19, scope: !15036)
!15235 = !DILocation(line: 610, column: 23, scope: !15036)
!15236 = !DILocation(line: 608, column: 2, scope: !15036)
!15237 = !DILocation(line: 612, column: 21, scope: !15036)
!15238 = !DILocation(line: 612, column: 2, scope: !15036)
!15239 = !DILocation(line: 612, column: 6, scope: !15036)
!15240 = !DILocation(line: 612, column: 19, scope: !15036)
!15241 = !DILocation(line: 613, column: 20, scope: !15036)
!15242 = !DILocation(line: 613, column: 24, scope: !15036)
!15243 = !DILocation(line: 613, column: 37, scope: !15036)
!15244 = !DILocation(line: 613, column: 2, scope: !15036)
!15245 = !DILocation(line: 613, column: 6, scope: !15036)
!15246 = !DILocation(line: 613, column: 18, scope: !15036)
!15247 = !DILocation(line: 614, column: 21, scope: !15036)
!15248 = !DILocation(line: 614, column: 26, scope: !15036)
!15249 = !DILocation(line: 614, column: 20, scope: !15036)
!15250 = !DILocation(line: 614, column: 2, scope: !15036)
!15251 = !DILocation(line: 614, column: 6, scope: !15036)
!15252 = !DILocation(line: 614, column: 18, scope: !15036)
!15253 = !DILocation(line: 615, column: 16, scope: !15036)
!15254 = !DILocation(line: 615, column: 2, scope: !15036)
!15255 = !DILocation(line: 615, column: 6, scope: !15036)
!15256 = !DILocation(line: 615, column: 14, scope: !15036)
!15257 = !DILocation(line: 616, column: 25, scope: !15036)
!15258 = !DILocation(line: 616, column: 2, scope: !15036)
!15259 = !DILocation(line: 616, column: 6, scope: !15036)
!15260 = !DILocation(line: 616, column: 23, scope: !15036)
!15261 = !DILocation(line: 617, column: 20, scope: !15036)
!15262 = !DILocation(line: 617, column: 2, scope: !15036)
!15263 = !DILocation(line: 617, column: 6, scope: !15036)
!15264 = !DILocation(line: 617, column: 18, scope: !15036)
!15265 = !DILocation(line: 618, column: 18, scope: !15036)
!15266 = !DILocation(line: 618, column: 2, scope: !15036)
!15267 = !DILocation(line: 618, column: 6, scope: !15036)
!15268 = !DILocation(line: 618, column: 16, scope: !15036)
!15269 = !DILocation(line: 619, column: 2, scope: !15036)
!15270 = !DILabel(scope: !15036, name: "free_all_new", file: !3, line: 621)
!15271 = !DILocation(line: 621, column: 1, scope: !15036)
!15272 = !DILocation(line: 622, column: 2, scope: !15036)
!15273 = !DILocation(line: 622, column: 9, scope: !15036)
!15274 = !DILocation(line: 622, column: 18, scope: !15036)
!15275 = !DILocation(line: 622, column: 22, scope: !15036)
!15276 = !DILocation(line: 622, column: 15, scope: !15036)
!15277 = !DILocation(line: 623, column: 7, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !3, line: 623, column: 7)
!15279 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 622, column: 36)
!15280 = !DILocation(line: 623, column: 20, scope: !15278)
!15281 = !DILocation(line: 623, column: 7, scope: !15279)
!15282 = !DILocation(line: 624, column: 28, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15284, file: !3, line: 624, column: 8)
!15284 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 623, column: 26)
!15285 = !DILocation(line: 624, column: 32, scope: !15283)
!15286 = !DILocation(line: 624, column: 41, scope: !15283)
!15287 = !DILocation(line: 624, column: 46, scope: !15283)
!15288 = !DILocation(line: 624, column: 64, scope: !15283)
!15289 = !DILocation(line: 624, column: 9, scope: !15283)
!15290 = !DILocation(line: 624, column: 8, scope: !15284)
!15291 = !DILocation(line: 625, column: 5, scope: !15283)
!15292 = !DILocation(line: 629, column: 4, scope: !15284)
!15293 = !DILocation(line: 630, column: 3, scope: !15284)
!15294 = distinct !{!15294, !15272, !15295}
!15295 = !DILocation(line: 631, column: 2, scope: !15036)
!15296 = !DILocation(line: 632, column: 8, scope: !15036)
!15297 = !DILocation(line: 632, column: 2, scope: !15036)
!15298 = !DILabel(scope: !15036, name: "free_new_lists", file: !3, line: 633)
!15299 = !DILocation(line: 633, column: 1, scope: !15036)
!15300 = !DILocation(line: 634, column: 8, scope: !15036)
!15301 = !DILocation(line: 634, column: 2, scope: !15036)
!15302 = !DILabel(scope: !15036, name: "free_new_rx_ring", file: !3, line: 635)
!15303 = !DILocation(line: 635, column: 1, scope: !15036)
!15304 = !DILocation(line: 636, column: 21, scope: !15036)
!15305 = !DILocation(line: 636, column: 25, scope: !15036)
!15306 = !DILocation(line: 636, column: 34, scope: !15036)
!15307 = !DILocation(line: 637, column: 39, scope: !15036)
!15308 = !DILocation(line: 637, column: 37, scope: !15036)
!15309 = !DILocation(line: 638, column: 6, scope: !15036)
!15310 = !DILocation(line: 638, column: 19, scope: !15036)
!15311 = !DILocation(line: 636, column: 2, scope: !15036)
!15312 = !DILocation(line: 639, column: 1, scope: !15036)
!15313 = distinct !DISubprogram(name: "pcnet32_netif_start", scope: !3, file: !3, line: 455, type: !442, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15314 = !DILocalVariable(name: "dev", arg: 1, scope: !15313, file: !3, line: 455, type: !326)
!15315 = !DILocation(line: 455, column: 52, scope: !15313)
!15316 = !DILocalVariable(name: "lp", scope: !15313, file: !3, line: 457, type: !7248)
!15317 = !DILocation(line: 457, column: 26, scope: !15313)
!15318 = !DILocation(line: 457, column: 43, scope: !15313)
!15319 = !DILocation(line: 457, column: 31, scope: !15313)
!15320 = !DILocalVariable(name: "ioaddr", scope: !15313, file: !3, line: 458, type: !11471)
!15321 = !DILocation(line: 458, column: 8, scope: !15313)
!15322 = !DILocation(line: 458, column: 17, scope: !15313)
!15323 = !DILocation(line: 458, column: 22, scope: !15313)
!15324 = !DILocalVariable(name: "val", scope: !15313, file: !3, line: 459, type: !616)
!15325 = !DILocation(line: 459, column: 6, scope: !15313)
!15326 = !DILocation(line: 461, column: 19, scope: !15313)
!15327 = !DILocation(line: 461, column: 2, scope: !15313)
!15328 = !DILocation(line: 462, column: 8, scope: !15313)
!15329 = !DILocation(line: 462, column: 12, scope: !15313)
!15330 = !DILocation(line: 462, column: 15, scope: !15313)
!15331 = !DILocation(line: 462, column: 24, scope: !15313)
!15332 = !DILocation(line: 462, column: 6, scope: !15313)
!15333 = !DILocation(line: 463, column: 6, scope: !15313)
!15334 = !DILocation(line: 464, column: 2, scope: !15313)
!15335 = !DILocation(line: 464, column: 6, scope: !15313)
!15336 = !DILocation(line: 464, column: 9, scope: !15313)
!15337 = !DILocation(line: 464, column: 19, scope: !15313)
!15338 = !DILocation(line: 464, column: 33, scope: !15313)
!15339 = !DILocation(line: 465, column: 15, scope: !15313)
!15340 = !DILocation(line: 465, column: 19, scope: !15313)
!15341 = !DILocation(line: 465, column: 2, scope: !15313)
!15342 = !DILocation(line: 466, column: 1, scope: !15313)
!15343 = distinct !DISubprogram(name: "netif_tx_disable", scope: !6, file: !6, line: 4309, type: !442, scopeLine: 4310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15344 = !DILocation(line: 3324, column: 70, scope: !13437, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 4320, column: 3, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15347, file: !6, line: 4316, column: 43)
!15347 = distinct !DILexicalBlock(scope: !15348, file: !6, line: 4316, column: 2)
!15348 = distinct !DILexicalBlock(scope: !15343, file: !6, line: 4316, column: 2)
!15349 = !DILocalVariable(name: "dev", arg: 1, scope: !15343, file: !6, line: 4309, type: !326)
!15350 = !DILocation(line: 4309, column: 56, scope: !15343)
!15351 = !DILocalVariable(name: "i", scope: !15343, file: !6, line: 4311, type: !13)
!15352 = !DILocation(line: 4311, column: 15, scope: !15343)
!15353 = !DILocalVariable(name: "cpu", scope: !15343, file: !6, line: 4312, type: !7)
!15354 = !DILocation(line: 4312, column: 6, scope: !15343)
!15355 = !DILocation(line: 4314, column: 2, scope: !15343)
!15356 = !DILocation(line: 4315, column: 6, scope: !15343)
!15357 = !DILocation(line: 4316, column: 9, scope: !15348)
!15358 = !DILocation(line: 4316, column: 7, scope: !15348)
!15359 = !DILocation(line: 4316, column: 14, scope: !15347)
!15360 = !DILocation(line: 4316, column: 18, scope: !15347)
!15361 = !DILocation(line: 4316, column: 23, scope: !15347)
!15362 = !DILocation(line: 4316, column: 16, scope: !15347)
!15363 = !DILocation(line: 4316, column: 2, scope: !15348)
!15364 = !DILocalVariable(name: "txq", scope: !15346, file: !6, line: 4317, type: !6438)
!15365 = !DILocation(line: 4317, column: 24, scope: !15346)
!15366 = !DILocation(line: 4317, column: 50, scope: !15346)
!15367 = !DILocation(line: 4317, column: 55, scope: !15346)
!15368 = !DILocation(line: 4317, column: 30, scope: !15346)
!15369 = !DILocation(line: 4319, column: 19, scope: !15346)
!15370 = !DILocation(line: 4319, column: 24, scope: !15346)
!15371 = !DILocation(line: 4319, column: 3, scope: !15346)
!15372 = !DILocation(line: 4320, column: 23, scope: !15346)
!15373 = !DILocation(line: 3326, column: 35, scope: !13437, inlinedAt: !15345)
!15374 = !DILocation(line: 3326, column: 46, scope: !13437, inlinedAt: !15345)
!15375 = !DILocation(line: 3326, column: 2, scope: !13437, inlinedAt: !15345)
!15376 = !DILocation(line: 4321, column: 21, scope: !15346)
!15377 = !DILocation(line: 4321, column: 3, scope: !15346)
!15378 = !DILocation(line: 4322, column: 2, scope: !15346)
!15379 = !DILocation(line: 4316, column: 39, scope: !15347)
!15380 = !DILocation(line: 4316, column: 2, scope: !15347)
!15381 = distinct !{!15381, !15363, !15382}
!15382 = !DILocation(line: 4322, column: 2, scope: !15348)
!15383 = !DILocation(line: 4323, column: 2, scope: !15343)
!15384 = !DILocation(line: 4324, column: 1, scope: !15343)
!15385 = distinct !DISubprogram(name: "local_bh_disable", scope: !15386, file: !15386, line: 17, type: !3842, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15386 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!15387 = !DILocalVariable(name: "val", arg: 1, scope: !15388, file: !15389, line: 77, type: !7)
!15388 = distinct !DISubprogram(name: "__preempt_count_add", scope: !15389, file: !15389, line: 77, type: !3835, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15389 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!15390 = !DILocation(line: 77, column: 53, scope: !15388, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 12, column: 2, scope: !15392, inlinedAt: !15395)
!15392 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !15386, file: !15386, line: 10, type: !15393, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15393 = !DISubroutineType(types: !15394)
!15394 = !{null, !348, !13}
!15395 = distinct !DILocation(line: 19, column: 2, scope: !15385)
!15396 = !DILocalVariable(name: "pao_ID__", scope: !15397, file: !15389, line: 79, type: !7928)
!15397 = distinct !DILexicalBlock(scope: !15388, file: !15389, line: 79, column: 2)
!15398 = !DILocation(line: 79, column: 2, scope: !15397, inlinedAt: !15391)
!15399 = !DILocalVariable(name: "pto_val__", scope: !15400, file: !15389, line: 79, type: !1022)
!15400 = distinct !DILexicalBlock(scope: !15401, file: !15389, line: 79, column: 2)
!15401 = distinct !DILexicalBlock(scope: !15402, file: !15389, line: 79, column: 2)
!15402 = distinct !DILexicalBlock(scope: !15397, file: !15389, line: 79, column: 2)
!15403 = !DILocation(line: 79, column: 2, scope: !15400, inlinedAt: !15391)
!15404 = !DILocalVariable(name: "ip", arg: 1, scope: !15392, file: !15386, line: 10, type: !348)
!15405 = !DILocation(line: 10, column: 65, scope: !15392, inlinedAt: !15395)
!15406 = !DILocalVariable(name: "cnt", arg: 2, scope: !15392, file: !15386, line: 10, type: !13)
!15407 = !DILocation(line: 10, column: 82, scope: !15392, inlinedAt: !15395)
!15408 = !DILocation(line: 19, column: 24, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15385, file: !15386, line: 19, column: 24)
!15410 = !DILabel(scope: !15409, name: "__here", file: !15386, line: 19)
!15411 = !DILocation(line: 12, column: 2, scope: !15392, inlinedAt: !15395)
!15412 = !{i32 -2145465861}
!15413 = !DILocation(line: 13, column: 2, scope: !15392, inlinedAt: !15395)
!15414 = !{i32 -2145456259}
!15415 = !DILocation(line: 20, column: 1, scope: !15385)
!15416 = distinct !DISubprogram(name: "__netif_tx_lock", scope: !6, file: !6, line: 4173, type: !15417, scopeLine: 4174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15417 = !DISubroutineType(types: !15418)
!15418 = !{null, !6438, !7}
!15419 = !DILocation(line: 352, column: 51, scope: !13009, inlinedAt: !15420)
!15420 = distinct !DILocation(line: 4175, column: 2, scope: !15416)
!15421 = !DILocalVariable(name: "txq", arg: 1, scope: !15416, file: !6, line: 4173, type: !6438)
!15422 = !DILocation(line: 4173, column: 57, scope: !15416)
!15423 = !DILocalVariable(name: "cpu", arg: 2, scope: !15416, file: !6, line: 4173, type: !7)
!15424 = !DILocation(line: 4173, column: 66, scope: !15416)
!15425 = !DILocation(line: 4175, column: 13, scope: !15416)
!15426 = !DILocation(line: 4175, column: 18, scope: !15416)
!15427 = !DILocation(line: 354, column: 2, scope: !13037, inlinedAt: !15420)
!15428 = !DILocation(line: 354, column: 2, scope: !13040, inlinedAt: !15420)
!15429 = !DILocation(line: 4176, column: 25, scope: !15416)
!15430 = !DILocation(line: 4176, column: 2, scope: !15416)
!15431 = !DILocation(line: 4176, column: 7, scope: !15416)
!15432 = !DILocation(line: 4176, column: 23, scope: !15416)
!15433 = !DILocation(line: 4177, column: 1, scope: !15416)
!15434 = distinct !DISubprogram(name: "__netif_tx_unlock", scope: !6, file: !6, line: 4204, type: !13309, scopeLine: 4205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15435 = !DILocation(line: 392, column: 53, scope: !13003, inlinedAt: !15436)
!15436 = distinct !DILocation(line: 4207, column: 2, scope: !15434)
!15437 = !DILocalVariable(name: "txq", arg: 1, scope: !15434, file: !6, line: 4204, type: !6438)
!15438 = !DILocation(line: 4204, column: 59, scope: !15434)
!15439 = !DILocation(line: 4206, column: 2, scope: !15434)
!15440 = !DILocation(line: 4206, column: 7, scope: !15434)
!15441 = !DILocation(line: 4206, column: 23, scope: !15434)
!15442 = !DILocation(line: 4207, column: 15, scope: !15434)
!15443 = !DILocation(line: 4207, column: 20, scope: !15434)
!15444 = !DILocation(line: 394, column: 2, scope: !13137, inlinedAt: !15436)
!15445 = !DILocation(line: 394, column: 2, scope: !13140, inlinedAt: !15436)
!15446 = !DILocation(line: 4208, column: 1, scope: !15434)
!15447 = distinct !DISubprogram(name: "local_bh_enable", scope: !15386, file: !15386, line: 30, type: !3842, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15448 = !DILocation(line: 32, column: 23, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15447, file: !15386, line: 32, column: 23)
!15450 = !DILabel(scope: !15449, name: "__here", file: !15386, line: 32)
!15451 = !DILocation(line: 32, column: 2, scope: !15447)
!15452 = !DILocation(line: 33, column: 1, scope: !15447)
!15453 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 1062, column: 4, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15456, file: !3, line: 1062, column: 4)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 1062, column: 4)
!15457 = distinct !DILexicalBlock(scope: !15458, file: !3, line: 1062, column: 4)
!15458 = distinct !DILexicalBlock(scope: !15459, file: !3, line: 1062, column: 4)
!15459 = distinct !DILexicalBlock(scope: !15460, file: !3, line: 1062, column: 4)
!15460 = distinct !DILexicalBlock(scope: !15461, file: !3, line: 1059, column: 65)
!15461 = distinct !DILexicalBlock(scope: !15462, file: !3, line: 1056, column: 33)
!15462 = distinct !DILexicalBlock(scope: !15463, file: !3, line: 1056, column: 2)
!15463 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1056, column: 2)
!15464 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 1060, column: 4, scope: !15460)
!15466 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !15465)
!15467 = !DILocation(line: 407, column: 64, scope: !9352, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 1120, column: 2, scope: !7923)
!15469 = !DILocation(line: 407, column: 84, scope: !9352, inlinedAt: !15468)
!15470 = !DILocation(line: 327, column: 67, scope: !8237, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 984, column: 2, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !3, line: 984, column: 2)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 984, column: 2)
!15474 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 984, column: 2)
!15475 = distinct !DILexicalBlock(scope: !15476, file: !3, line: 984, column: 2)
!15476 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 984, column: 2)
!15477 = !DILocalVariable(name: "dev", arg: 1, scope: !7923, file: !3, line: 962, type: !326)
!15478 = !DILocation(line: 962, column: 53, scope: !7923)
!15479 = !DILocalVariable(name: "data1", arg: 2, scope: !7923, file: !3, line: 962, type: !7926)
!15480 = !DILocation(line: 962, column: 69, scope: !7923)
!15481 = !DILocalVariable(name: "lp", scope: !7923, file: !3, line: 964, type: !7248)
!15482 = !DILocation(line: 964, column: 26, scope: !7923)
!15483 = !DILocation(line: 964, column: 43, scope: !7923)
!15484 = !DILocation(line: 964, column: 31, scope: !7923)
!15485 = !DILocalVariable(name: "a", scope: !7923, file: !3, line: 965, type: !7563)
!15486 = !DILocation(line: 965, column: 31, scope: !7923)
!15487 = !DILocation(line: 965, column: 35, scope: !7923)
!15488 = !DILocation(line: 965, column: 39, scope: !7923)
!15489 = !DILocalVariable(name: "ioaddr", scope: !7923, file: !3, line: 966, type: !11471)
!15490 = !DILocation(line: 966, column: 8, scope: !7923)
!15491 = !DILocation(line: 966, column: 17, scope: !7923)
!15492 = !DILocation(line: 966, column: 22, scope: !7923)
!15493 = !DILocalVariable(name: "skb", scope: !7923, file: !3, line: 967, type: !451)
!15494 = !DILocation(line: 967, column: 18, scope: !7923)
!15495 = !DILocalVariable(name: "x", scope: !7923, file: !3, line: 968, type: !7)
!15496 = !DILocation(line: 968, column: 6, scope: !7923)
!15497 = !DILocalVariable(name: "i", scope: !7923, file: !3, line: 968, type: !7)
!15498 = !DILocation(line: 968, column: 9, scope: !7923)
!15499 = !DILocalVariable(name: "numbuffs", scope: !7923, file: !3, line: 969, type: !7)
!15500 = !DILocation(line: 969, column: 6, scope: !7923)
!15501 = !DILocalVariable(name: "status", scope: !7923, file: !3, line: 970, type: !616)
!15502 = !DILocation(line: 970, column: 6, scope: !7923)
!15503 = !DILocalVariable(name: "teststatus", scope: !7923, file: !3, line: 971, type: !7244)
!15504 = !DILocation(line: 971, column: 9, scope: !7923)
!15505 = !DILocalVariable(name: "rc", scope: !7923, file: !3, line: 972, type: !7)
!15506 = !DILocation(line: 972, column: 6, scope: !7923)
!15507 = !DILocalVariable(name: "size", scope: !7923, file: !3, line: 973, type: !7)
!15508 = !DILocation(line: 973, column: 6, scope: !7923)
!15509 = !DILocalVariable(name: "packet", scope: !7923, file: !3, line: 974, type: !599)
!15510 = !DILocation(line: 974, column: 17, scope: !7923)
!15511 = !DILocalVariable(name: "flags", scope: !7923, file: !3, line: 976, type: !348)
!15512 = !DILocation(line: 976, column: 16, scope: !7923)
!15513 = !DILocalVariable(name: "ticks", scope: !7923, file: !3, line: 977, type: !348)
!15514 = !DILocation(line: 977, column: 16, scope: !7923)
!15515 = !DILocation(line: 979, column: 5, scope: !7923)
!15516 = !DILocation(line: 981, column: 20, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 981, column: 6)
!15518 = !DILocation(line: 981, column: 6, scope: !15517)
!15519 = !DILocation(line: 981, column: 6, scope: !7923)
!15520 = !DILocation(line: 982, column: 22, scope: !15517)
!15521 = !DILocation(line: 982, column: 3, scope: !15517)
!15522 = !DILocation(line: 984, column: 2, scope: !7923)
!15523 = !DILocation(line: 984, column: 2, scope: !15476)
!15524 = !DILocalVariable(name: "__dummy", scope: !15525, file: !3, line: 984, type: !348)
!15525 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 984, column: 2)
!15526 = !DILocation(line: 984, column: 2, scope: !15525)
!15527 = !DILocalVariable(name: "__dummy2", scope: !15525, file: !3, line: 984, type: !348)
!15528 = !DILocation(line: 984, column: 2, scope: !15475)
!15529 = !DILocation(line: 984, column: 2, scope: !15474)
!15530 = !DILocation(line: 984, column: 2, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 984, column: 2)
!15532 = !DILocalVariable(name: "__dummy", scope: !15533, file: !3, line: 984, type: !348)
!15533 = distinct !DILexicalBlock(scope: !15534, file: !3, line: 984, column: 2)
!15534 = distinct !DILexicalBlock(scope: !15531, file: !3, line: 984, column: 2)
!15535 = !DILocation(line: 984, column: 2, scope: !15533)
!15536 = !DILocalVariable(name: "__dummy2", scope: !15533, file: !3, line: 984, type: !348)
!15537 = !DILocation(line: 984, column: 2, scope: !15534)
!15538 = !DILocation(line: 984, column: 2, scope: !15473)
!15539 = !{i32 -2139674154}
!15540 = !DILocation(line: 984, column: 2, scope: !15472)
!15541 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !15471)
!15542 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !15471)
!15543 = !DILocation(line: 985, column: 2, scope: !7923)
!15544 = !DILocation(line: 985, column: 6, scope: !7923)
!15545 = !DILocation(line: 985, column: 9, scope: !7923)
!15546 = !DILocation(line: 985, column: 19, scope: !7923)
!15547 = !DILocalVariable(name: "__UNIQUE_ID___x327", scope: !15548, file: !3, line: 987, type: !7)
!15548 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 987, column: 13)
!15549 = !DILocation(line: 987, column: 13, scope: !15548)
!15550 = !DILocalVariable(name: "__UNIQUE_ID___y328", scope: !15548, file: !3, line: 987, type: !7)
!15551 = !DILocalVariable(name: "__UNIQUE_ID___x325", scope: !15552, file: !3, line: 987, type: !13)
!15552 = distinct !DILexicalBlock(scope: !15548, file: !3, line: 987, column: 13)
!15553 = !DILocation(line: 987, column: 13, scope: !15552)
!15554 = !DILocalVariable(name: "__UNIQUE_ID___y326", scope: !15552, file: !3, line: 987, type: !13)
!15555 = !DILocation(line: 987, column: 11, scope: !7923)
!15556 = !DILocation(line: 990, column: 2, scope: !7923)
!15557 = !DILocation(line: 990, column: 6, scope: !7923)
!15558 = !DILocation(line: 990, column: 9, scope: !7923)
!15559 = !DILocation(line: 990, column: 15, scope: !7923)
!15560 = !DILocation(line: 991, column: 2, scope: !7923)
!15561 = !DILocation(line: 991, column: 6, scope: !7923)
!15562 = !DILocation(line: 991, column: 9, scope: !7923)
!15563 = !DILocation(line: 991, column: 19, scope: !7923)
!15564 = !DILocation(line: 994, column: 2, scope: !7923)
!15565 = !DILocation(line: 994, column: 6, scope: !7923)
!15566 = !DILocation(line: 994, column: 9, scope: !7923)
!15567 = !DILocation(line: 994, column: 19, scope: !7923)
!15568 = !DILocation(line: 997, column: 18, scope: !7923)
!15569 = !DILocation(line: 997, column: 2, scope: !7923)
!15570 = !DILocation(line: 999, column: 2, scope: !7923)
!15571 = !DILocation(line: 999, column: 6, scope: !7923)
!15572 = !DILocation(line: 999, column: 9, scope: !7923)
!15573 = !DILocation(line: 999, column: 19, scope: !7923)
!15574 = !DILocation(line: 1002, column: 7, scope: !7923)
!15575 = !DILocation(line: 1003, column: 9, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1003, column: 2)
!15577 = !DILocation(line: 1003, column: 7, scope: !15576)
!15578 = !DILocation(line: 1003, column: 14, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15576, file: !3, line: 1003, column: 2)
!15580 = !DILocation(line: 1003, column: 18, scope: !15579)
!15581 = !DILocation(line: 1003, column: 16, scope: !15579)
!15582 = !DILocation(line: 1003, column: 2, scope: !15576)
!15583 = !DILocation(line: 1004, column: 26, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15579, file: !3, line: 1003, column: 33)
!15585 = !DILocation(line: 1004, column: 31, scope: !15584)
!15586 = !DILocation(line: 1004, column: 9, scope: !15584)
!15587 = !DILocation(line: 1004, column: 7, scope: !15584)
!15588 = !DILocation(line: 1005, column: 8, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15584, file: !3, line: 1005, column: 7)
!15590 = !DILocation(line: 1005, column: 7, scope: !15584)
!15591 = !DILocation(line: 1006, column: 4, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15589, file: !3, line: 1005, column: 13)
!15593 = !DILocation(line: 1006, column: 4, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15595, file: !3, line: 1006, column: 4)
!15595 = distinct !DILexicalBlock(scope: !15592, file: !3, line: 1006, column: 4)
!15596 = !DILocation(line: 1006, column: 4, scope: !15595)
!15597 = !DILocation(line: 1009, column: 4, scope: !15592)
!15598 = !DILocation(line: 1011, column: 12, scope: !15584)
!15599 = !DILocation(line: 1011, column: 17, scope: !15584)
!15600 = !DILocation(line: 1011, column: 10, scope: !15584)
!15601 = !DILocation(line: 1012, column: 11, scope: !15584)
!15602 = !DILocation(line: 1012, column: 16, scope: !15584)
!15603 = !DILocation(line: 1012, column: 3, scope: !15584)
!15604 = !DILocation(line: 1013, column: 22, scope: !15584)
!15605 = !DILocation(line: 1013, column: 3, scope: !15584)
!15606 = !DILocation(line: 1013, column: 7, scope: !15584)
!15607 = !DILocation(line: 1013, column: 17, scope: !15584)
!15608 = !DILocation(line: 1013, column: 20, scope: !15584)
!15609 = !DILocation(line: 1014, column: 27, scope: !15584)
!15610 = !DILocation(line: 1014, column: 3, scope: !15584)
!15611 = !DILocation(line: 1014, column: 7, scope: !15584)
!15612 = !DILocation(line: 1014, column: 15, scope: !15584)
!15613 = !DILocation(line: 1014, column: 18, scope: !15584)
!15614 = !DILocation(line: 1014, column: 25, scope: !15584)
!15615 = !DILocation(line: 1015, column: 3, scope: !15584)
!15616 = !DILocation(line: 1015, column: 7, scope: !15584)
!15617 = !DILocation(line: 1015, column: 15, scope: !15584)
!15618 = !DILocation(line: 1015, column: 18, scope: !15584)
!15619 = !DILocation(line: 1015, column: 23, scope: !15584)
!15620 = !DILocation(line: 1018, column: 10, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15584, file: !3, line: 1018, column: 3)
!15622 = !DILocation(line: 1018, column: 8, scope: !15621)
!15623 = !DILocation(line: 1018, column: 15, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 1018, column: 3)
!15625 = !DILocation(line: 1018, column: 17, scope: !15624)
!15626 = !DILocation(line: 1018, column: 3, scope: !15621)
!15627 = !DILocation(line: 1019, column: 16, scope: !15624)
!15628 = !DILocation(line: 1019, column: 21, scope: !15624)
!15629 = !DILocation(line: 1019, column: 30, scope: !15624)
!15630 = !DILocation(line: 1019, column: 11, scope: !15624)
!15631 = !DILocation(line: 1019, column: 14, scope: !15624)
!15632 = !DILocation(line: 1019, column: 4, scope: !15624)
!15633 = !DILocation(line: 1018, column: 23, scope: !15624)
!15634 = !DILocation(line: 1018, column: 3, scope: !15624)
!15635 = distinct !{!15635, !15626, !15636}
!15636 = !DILocation(line: 1019, column: 31, scope: !15621)
!15637 = !DILocation(line: 1020, column: 10, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15584, file: !3, line: 1020, column: 3)
!15639 = !DILocation(line: 1020, column: 8, scope: !15638)
!15640 = !DILocation(line: 1020, column: 15, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15638, file: !3, line: 1020, column: 3)
!15642 = !DILocation(line: 1020, column: 17, scope: !15641)
!15643 = !DILocation(line: 1020, column: 3, scope: !15638)
!15644 = !DILocation(line: 1021, column: 16, scope: !15641)
!15645 = !DILocation(line: 1021, column: 21, scope: !15641)
!15646 = !DILocation(line: 1021, column: 30, scope: !15641)
!15647 = !DILocation(line: 1021, column: 11, scope: !15641)
!15648 = !DILocation(line: 1021, column: 14, scope: !15641)
!15649 = !DILocation(line: 1021, column: 4, scope: !15641)
!15650 = !DILocation(line: 1020, column: 23, scope: !15641)
!15651 = !DILocation(line: 1020, column: 3, scope: !15641)
!15652 = distinct !{!15652, !15643, !15653}
!15653 = !DILocation(line: 1021, column: 31, scope: !15638)
!15654 = !DILocation(line: 1023, column: 10, scope: !15584)
!15655 = !DILocation(line: 1023, column: 13, scope: !15584)
!15656 = !DILocation(line: 1024, column: 10, scope: !15584)
!15657 = !DILocation(line: 1024, column: 13, scope: !15584)
!15658 = !DILocation(line: 1026, column: 15, scope: !15584)
!15659 = !DILocation(line: 1026, column: 10, scope: !15584)
!15660 = !DILocation(line: 1026, column: 13, scope: !15584)
!15661 = !DILocation(line: 1028, column: 10, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15584, file: !3, line: 1028, column: 3)
!15663 = !DILocation(line: 1028, column: 8, scope: !15662)
!15664 = !DILocation(line: 1028, column: 15, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15662, file: !3, line: 1028, column: 3)
!15666 = !DILocation(line: 1028, column: 17, scope: !15665)
!15667 = !DILocation(line: 1028, column: 3, scope: !15662)
!15668 = !DILocation(line: 1029, column: 16, scope: !15665)
!15669 = !DILocation(line: 1029, column: 11, scope: !15665)
!15670 = !DILocation(line: 1029, column: 14, scope: !15665)
!15671 = !DILocation(line: 1029, column: 4, scope: !15665)
!15672 = !DILocation(line: 1028, column: 30, scope: !15665)
!15673 = !DILocation(line: 1028, column: 3, scope: !15665)
!15674 = distinct !{!15674, !15667, !15675}
!15675 = !DILocation(line: 1029, column: 16, scope: !15662)
!15676 = !DILocation(line: 1032, column: 4, scope: !15584)
!15677 = !DILocation(line: 1031, column: 3, scope: !15584)
!15678 = !DILocation(line: 1031, column: 7, scope: !15584)
!15679 = !DILocation(line: 1031, column: 19, scope: !15584)
!15680 = !DILocation(line: 1031, column: 22, scope: !15584)
!15681 = !DILocation(line: 1034, column: 26, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15584, file: !3, line: 1034, column: 7)
!15683 = !DILocation(line: 1034, column: 30, scope: !15682)
!15684 = !DILocation(line: 1034, column: 39, scope: !15682)
!15685 = !DILocation(line: 1034, column: 44, scope: !15682)
!15686 = !DILocation(line: 1034, column: 48, scope: !15682)
!15687 = !DILocation(line: 1034, column: 60, scope: !15682)
!15688 = !DILocation(line: 1034, column: 7, scope: !15682)
!15689 = !DILocation(line: 1034, column: 7, scope: !15584)
!15690 = !DILocation(line: 1035, column: 4, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15682, file: !3, line: 1034, column: 65)
!15692 = !DILocation(line: 1035, column: 4, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15694, file: !3, line: 1035, column: 4)
!15694 = distinct !DILexicalBlock(scope: !15691, file: !3, line: 1035, column: 4)
!15695 = !DILocation(line: 1035, column: 4, scope: !15694)
!15696 = !DILocation(line: 1038, column: 4, scope: !15691)
!15697 = !DILocation(line: 1040, column: 25, scope: !15584)
!15698 = !DILocation(line: 1040, column: 3, scope: !15584)
!15699 = !DILocation(line: 1040, column: 7, scope: !15584)
!15700 = !DILocation(line: 1040, column: 15, scope: !15584)
!15701 = !DILocation(line: 1040, column: 18, scope: !15584)
!15702 = !DILocation(line: 1040, column: 23, scope: !15584)
!15703 = !DILocation(line: 1041, column: 3, scope: !15584)
!15704 = !{i32 -2139661718}
!15705 = !DILocation(line: 1042, column: 27, scope: !15584)
!15706 = !DILocation(line: 1042, column: 3, scope: !15584)
!15707 = !DILocation(line: 1042, column: 7, scope: !15584)
!15708 = !DILocation(line: 1042, column: 15, scope: !15584)
!15709 = !DILocation(line: 1042, column: 18, scope: !15584)
!15710 = !DILocation(line: 1042, column: 25, scope: !15584)
!15711 = !DILocation(line: 1043, column: 2, scope: !15584)
!15712 = !DILocation(line: 1003, column: 29, scope: !15579)
!15713 = !DILocation(line: 1003, column: 2, scope: !15579)
!15714 = distinct !{!15714, !15582, !15715}
!15715 = !DILocation(line: 1043, column: 2, scope: !15576)
!15716 = !DILocation(line: 1045, column: 6, scope: !7923)
!15717 = !DILocation(line: 1045, column: 9, scope: !7923)
!15718 = !DILocation(line: 1045, column: 18, scope: !7923)
!15719 = !DILocation(line: 1045, column: 4, scope: !7923)
!15720 = !DILocation(line: 1046, column: 2, scope: !7923)
!15721 = !DILocation(line: 1046, column: 5, scope: !7923)
!15722 = !DILocation(line: 1046, column: 15, scope: !7923)
!15723 = !DILocation(line: 1046, column: 27, scope: !7923)
!15724 = !DILocation(line: 1046, column: 29, scope: !7923)
!15725 = !DILocation(line: 1049, column: 6, scope: !7923)
!15726 = !DILocation(line: 1049, column: 9, scope: !7923)
!15727 = !DILocation(line: 1049, column: 18, scope: !7923)
!15728 = !DILocation(line: 1049, column: 33, scope: !7923)
!15729 = !DILocation(line: 1049, column: 4, scope: !7923)
!15730 = !DILocation(line: 1050, column: 2, scope: !7923)
!15731 = !DILocation(line: 1050, column: 6, scope: !7923)
!15732 = !DILocation(line: 1050, column: 9, scope: !7923)
!15733 = !DILocation(line: 1050, column: 19, scope: !7923)
!15734 = !DILocation(line: 1050, column: 34, scope: !7923)
!15735 = !DILocation(line: 1050, column: 36, scope: !7923)
!15736 = !DILocation(line: 1052, column: 13, scope: !7923)
!15737 = !DILocation(line: 1053, column: 2, scope: !7923)
!15738 = !DILocation(line: 1053, column: 6, scope: !7923)
!15739 = !DILocation(line: 1053, column: 9, scope: !7923)
!15740 = !DILocation(line: 1053, column: 19, scope: !7923)
!15741 = !DILocation(line: 1056, column: 9, scope: !15463)
!15742 = !DILocation(line: 1056, column: 7, scope: !15463)
!15743 = !DILocation(line: 1056, column: 14, scope: !15462)
!15744 = !DILocation(line: 1056, column: 18, scope: !15462)
!15745 = !DILocation(line: 1056, column: 16, scope: !15462)
!15746 = !DILocation(line: 1056, column: 2, scope: !15463)
!15747 = !DILocation(line: 1057, column: 9, scope: !15461)
!15748 = !DILocation(line: 1058, column: 3, scope: !15461)
!15749 = !{i32 -2139661570}
!15750 = !DILocation(line: 1059, column: 3, scope: !15461)
!15751 = !DILocation(line: 1059, column: 11, scope: !15461)
!15752 = !DILocation(line: 1059, column: 15, scope: !15461)
!15753 = !DILocation(line: 1059, column: 23, scope: !15461)
!15754 = !DILocation(line: 1059, column: 26, scope: !15461)
!15755 = !DILocation(line: 1059, column: 35, scope: !15461)
!15756 = !DILocation(line: 1059, column: 33, scope: !15461)
!15757 = !DILocation(line: 1059, column: 47, scope: !15461)
!15758 = !DILocation(line: 1059, column: 51, scope: !15461)
!15759 = !DILocation(line: 1059, column: 57, scope: !15461)
!15760 = !DILocation(line: 0, scope: !15461)
!15761 = !DILocation(line: 1060, column: 28, scope: !15460)
!15762 = !DILocation(line: 1060, column: 32, scope: !15460)
!15763 = !DILocation(line: 1060, column: 38, scope: !15460)
!15764 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !15465)
!15765 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !15465)
!15766 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !15465)
!15767 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !15465)
!15768 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !15465)
!15769 = !DILocation(line: 1061, column: 4, scope: !15460)
!15770 = !DILocation(line: 1062, column: 4, scope: !15460)
!15771 = !DILocation(line: 1062, column: 4, scope: !15459)
!15772 = !DILocalVariable(name: "__dummy", scope: !15773, file: !3, line: 1062, type: !348)
!15773 = distinct !DILexicalBlock(scope: !15458, file: !3, line: 1062, column: 4)
!15774 = !DILocation(line: 1062, column: 4, scope: !15773)
!15775 = !DILocalVariable(name: "__dummy2", scope: !15773, file: !3, line: 1062, type: !348)
!15776 = !DILocation(line: 1062, column: 4, scope: !15458)
!15777 = !DILocation(line: 1062, column: 4, scope: !15457)
!15778 = !DILocation(line: 1062, column: 4, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 1062, column: 4)
!15780 = !DILocalVariable(name: "__dummy", scope: !15781, file: !3, line: 1062, type: !348)
!15781 = distinct !DILexicalBlock(scope: !15782, file: !3, line: 1062, column: 4)
!15782 = distinct !DILexicalBlock(scope: !15779, file: !3, line: 1062, column: 4)
!15783 = !DILocation(line: 1062, column: 4, scope: !15781)
!15784 = !DILocalVariable(name: "__dummy2", scope: !15781, file: !3, line: 1062, type: !348)
!15785 = !DILocation(line: 1062, column: 4, scope: !15782)
!15786 = !DILocation(line: 1062, column: 4, scope: !15456)
!15787 = !{i32 -2139660673}
!15788 = !DILocation(line: 1062, column: 4, scope: !15455)
!15789 = !DILocation(line: 329, column: 10, scope: !8237, inlinedAt: !15454)
!15790 = !DILocation(line: 329, column: 16, scope: !8237, inlinedAt: !15454)
!15791 = !DILocation(line: 1063, column: 4, scope: !15460)
!15792 = !{i32 -2139660531}
!15793 = !DILocation(line: 1064, column: 9, scope: !15460)
!15794 = distinct !{!15794, !15750, !15795}
!15795 = !DILocation(line: 1065, column: 3, scope: !15461)
!15796 = !DILocation(line: 1066, column: 7, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15461, file: !3, line: 1066, column: 7)
!15798 = !DILocation(line: 1066, column: 13, scope: !15797)
!15799 = !DILocation(line: 1066, column: 7, scope: !15461)
!15800 = !DILocation(line: 1067, column: 4, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 1066, column: 21)
!15802 = !DILocation(line: 1067, column: 4, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 1067, column: 4)
!15804 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 1067, column: 4)
!15805 = !DILocation(line: 1067, column: 4, scope: !15804)
!15806 = !DILocation(line: 1068, column: 4, scope: !15801)
!15807 = !DILocation(line: 1070, column: 2, scope: !15461)
!15808 = !DILocation(line: 1056, column: 29, scope: !15462)
!15809 = !DILocation(line: 1056, column: 2, scope: !15462)
!15810 = distinct !{!15810, !15746, !15811}
!15811 = !DILocation(line: 1070, column: 2, scope: !15463)
!15812 = !DILocation(line: 1072, column: 2, scope: !7923)
!15813 = !DILocation(line: 1072, column: 6, scope: !7923)
!15814 = !DILocation(line: 1072, column: 9, scope: !7923)
!15815 = !DILocation(line: 1072, column: 19, scope: !7923)
!15816 = !DILocation(line: 1073, column: 2, scope: !7923)
!15817 = !{i32 -2139660082}
!15818 = !DILocation(line: 1074, column: 6, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1074, column: 6)
!15820 = !DILocation(line: 1074, column: 23, scope: !15819)
!15821 = !DILocation(line: 1074, column: 26, scope: !15819)
!15822 = !DILocation(line: 1074, column: 6, scope: !7923)
!15823 = !DILocation(line: 1075, column: 29, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15819, file: !3, line: 1074, column: 49)
!15825 = !DILocation(line: 1075, column: 3, scope: !15824)
!15826 = !DILocation(line: 1077, column: 10, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15824, file: !3, line: 1077, column: 3)
!15828 = !DILocation(line: 1077, column: 8, scope: !15827)
!15829 = !DILocation(line: 1077, column: 15, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !15827, file: !3, line: 1077, column: 3)
!15831 = !DILocation(line: 1077, column: 19, scope: !15830)
!15832 = !DILocation(line: 1077, column: 17, scope: !15830)
!15833 = !DILocation(line: 1077, column: 3, scope: !15827)
!15834 = !DILocation(line: 1078, column: 30, scope: !15835)
!15835 = distinct !DILexicalBlock(scope: !15830, file: !3, line: 1077, column: 34)
!15836 = !DILocation(line: 1078, column: 50, scope: !15835)
!15837 = !DILocation(line: 1078, column: 4, scope: !15835)
!15838 = !DILocation(line: 1079, column: 10, scope: !15835)
!15839 = !DILocation(line: 1079, column: 14, scope: !15835)
!15840 = !DILocation(line: 1079, column: 24, scope: !15835)
!15841 = !DILocation(line: 1079, column: 8, scope: !15835)
!15842 = !DILocation(line: 1080, column: 11, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15835, file: !3, line: 1080, column: 4)
!15844 = !DILocation(line: 1080, column: 9, scope: !15843)
!15845 = !DILocation(line: 1080, column: 16, scope: !15846)
!15846 = distinct !DILexicalBlock(scope: !15843, file: !3, line: 1080, column: 4)
!15847 = !DILocation(line: 1080, column: 20, scope: !15846)
!15848 = !DILocation(line: 1080, column: 18, scope: !15846)
!15849 = !DILocation(line: 1080, column: 4, scope: !15843)
!15850 = !DILocation(line: 1081, column: 5, scope: !15846)
!15851 = !DILocation(line: 1080, column: 27, scope: !15846)
!15852 = !DILocation(line: 1080, column: 4, scope: !15846)
!15853 = distinct !{!15853, !15849, !15854}
!15854 = !DILocation(line: 1081, column: 5, scope: !15843)
!15855 = !DILocation(line: 1082, column: 4, scope: !15835)
!15856 = !DILocation(line: 1083, column: 3, scope: !15835)
!15857 = !DILocation(line: 1077, column: 30, scope: !15830)
!15858 = !DILocation(line: 1077, column: 3, scope: !15830)
!15859 = distinct !{!15859, !15833, !15860}
!15860 = !DILocation(line: 1083, column: 3, scope: !15827)
!15861 = !DILocation(line: 1084, column: 2, scope: !15824)
!15862 = !DILocation(line: 1086, column: 4, scope: !7923)
!15863 = !DILocation(line: 1087, column: 5, scope: !7923)
!15864 = !DILocation(line: 1088, column: 2, scope: !7923)
!15865 = !DILocation(line: 1088, column: 9, scope: !7923)
!15866 = !DILocation(line: 1088, column: 13, scope: !7923)
!15867 = !DILocation(line: 1088, column: 11, scope: !7923)
!15868 = !DILocation(line: 1088, column: 22, scope: !7923)
!15869 = !DILocation(line: 1088, column: 26, scope: !7923)
!15870 = !DILocation(line: 1088, column: 25, scope: !7923)
!15871 = !DILocation(line: 0, scope: !7923)
!15872 = !DILocation(line: 1089, column: 9, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1088, column: 30)
!15874 = !DILocation(line: 1089, column: 13, scope: !15873)
!15875 = !DILocation(line: 1089, column: 23, scope: !15873)
!15876 = !DILocation(line: 1089, column: 7, scope: !15873)
!15877 = !DILocation(line: 1090, column: 12, scope: !15873)
!15878 = !DILocation(line: 1090, column: 16, scope: !15873)
!15879 = !DILocation(line: 1090, column: 26, scope: !15873)
!15880 = !DILocation(line: 1090, column: 30, scope: !15873)
!15881 = !DILocation(line: 1090, column: 10, scope: !15873)
!15882 = !DILocation(line: 1091, column: 10, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 1091, column: 3)
!15884 = !DILocation(line: 1091, column: 8, scope: !15883)
!15885 = !DILocation(line: 1091, column: 15, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15883, file: !3, line: 1091, column: 3)
!15887 = !DILocation(line: 1091, column: 19, scope: !15886)
!15888 = !DILocation(line: 1091, column: 17, scope: !15886)
!15889 = !DILocation(line: 1091, column: 3, scope: !15883)
!15890 = !DILocation(line: 1092, column: 10, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15892, file: !3, line: 1092, column: 8)
!15892 = distinct !DILexicalBlock(scope: !15886, file: !3, line: 1091, column: 30)
!15893 = !DILocation(line: 1092, column: 15, scope: !15891)
!15894 = !DILocation(line: 1092, column: 22, scope: !15891)
!15895 = !DILocation(line: 1092, column: 20, scope: !15891)
!15896 = !DILocation(line: 1092, column: 8, scope: !15891)
!15897 = !DILocation(line: 1092, column: 28, scope: !15891)
!15898 = !DILocation(line: 1092, column: 35, scope: !15891)
!15899 = !DILocation(line: 1092, column: 25, scope: !15891)
!15900 = !DILocation(line: 1092, column: 8, scope: !15892)
!15901 = !DILocation(line: 1093, column: 5, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15891, file: !3, line: 1092, column: 39)
!15903 = !DILocation(line: 1093, column: 5, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15905, file: !3, line: 1093, column: 5)
!15905 = distinct !DILexicalBlock(scope: !15902, file: !3, line: 1093, column: 5)
!15906 = !DILocation(line: 1093, column: 5, scope: !15905)
!15907 = !DILocation(line: 1096, column: 8, scope: !15902)
!15908 = !DILocation(line: 1097, column: 5, scope: !15902)
!15909 = !DILocation(line: 1099, column: 3, scope: !15892)
!15910 = !DILocation(line: 1091, column: 26, scope: !15886)
!15911 = !DILocation(line: 1091, column: 3, scope: !15886)
!15912 = distinct !{!15912, !15889, !15913}
!15913 = !DILocation(line: 1099, column: 3, scope: !15883)
!15914 = !DILocation(line: 1100, column: 4, scope: !15873)
!15915 = distinct !{!15915, !15864, !15916}
!15916 = !DILocation(line: 1101, column: 2, scope: !7923)
!15917 = !DILabel(scope: !7923, name: "clean_up", file: !3, line: 1103)
!15918 = !DILocation(line: 1103, column: 1, scope: !7923)
!15919 = !DILocation(line: 1104, column: 11, scope: !7923)
!15920 = !DILocation(line: 1104, column: 3, scope: !7923)
!15921 = !DILocation(line: 1104, column: 9, scope: !7923)
!15922 = !DILocation(line: 1105, column: 24, scope: !7923)
!15923 = !DILocation(line: 1105, column: 2, scope: !7923)
!15924 = !DILocation(line: 1107, column: 6, scope: !7923)
!15925 = !DILocation(line: 1107, column: 9, scope: !7923)
!15926 = !DILocation(line: 1107, column: 18, scope: !7923)
!15927 = !DILocation(line: 1107, column: 4, scope: !7923)
!15928 = !DILocation(line: 1108, column: 2, scope: !7923)
!15929 = !DILocation(line: 1108, column: 5, scope: !7923)
!15930 = !DILocation(line: 1108, column: 15, scope: !7923)
!15931 = !DILocation(line: 1108, column: 31, scope: !7923)
!15932 = !DILocation(line: 1108, column: 33, scope: !7923)
!15933 = !DILocation(line: 1108, column: 30, scope: !7923)
!15934 = !DILocation(line: 1110, column: 6, scope: !7923)
!15935 = !DILocation(line: 1110, column: 9, scope: !7923)
!15936 = !DILocation(line: 1110, column: 18, scope: !7923)
!15937 = !DILocation(line: 1110, column: 4, scope: !7923)
!15938 = !DILocation(line: 1111, column: 2, scope: !7923)
!15939 = !DILocation(line: 1111, column: 5, scope: !7923)
!15940 = !DILocation(line: 1111, column: 15, scope: !7923)
!15941 = !DILocation(line: 1111, column: 28, scope: !7923)
!15942 = !DILocation(line: 1111, column: 30, scope: !7923)
!15943 = !DILocation(line: 1111, column: 27, scope: !7923)
!15944 = !DILocation(line: 1113, column: 20, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1113, column: 6)
!15946 = !DILocation(line: 1113, column: 6, scope: !15945)
!15947 = !DILocation(line: 1113, column: 6, scope: !7923)
!15948 = !DILocation(line: 1114, column: 23, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15945, file: !3, line: 1113, column: 26)
!15950 = !DILocation(line: 1114, column: 3, scope: !15949)
!15951 = !DILocation(line: 1115, column: 19, scope: !15949)
!15952 = !DILocation(line: 1115, column: 3, scope: !15949)
!15953 = !DILocation(line: 1116, column: 2, scope: !15949)
!15954 = !DILocation(line: 1117, column: 25, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15945, file: !3, line: 1116, column: 9)
!15956 = !DILocation(line: 1117, column: 3, scope: !15955)
!15957 = !DILocation(line: 1118, column: 3, scope: !15955)
!15958 = !DILocation(line: 1118, column: 7, scope: !15955)
!15959 = !DILocation(line: 1118, column: 10, scope: !15955)
!15960 = !DILocation(line: 1118, column: 20, scope: !15955)
!15961 = !DILocation(line: 1120, column: 26, scope: !7923)
!15962 = !DILocation(line: 1120, column: 30, scope: !7923)
!15963 = !DILocation(line: 1120, column: 36, scope: !7923)
!15964 = !DILocation(line: 409, column: 2, scope: !9464, inlinedAt: !15468)
!15965 = !DILocation(line: 409, column: 2, scope: !9469, inlinedAt: !15468)
!15966 = !DILocation(line: 409, column: 2, scope: !9470, inlinedAt: !15468)
!15967 = !DILocation(line: 409, column: 2, scope: !9477, inlinedAt: !15468)
!15968 = !DILocation(line: 409, column: 2, scope: !9480, inlinedAt: !15468)
!15969 = !DILocation(line: 1122, column: 9, scope: !7923)
!15970 = !DILocation(line: 1122, column: 2, scope: !7923)
!15971 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !6541, file: !6541, line: 660, type: !15972, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15972 = !DISubroutineType(types: !15973)
!15973 = !{null, !6545, !626}
!15974 = !DILocalVariable(name: "dev", arg: 1, scope: !15971, file: !6541, line: 660, type: !6545)
!15975 = !DILocation(line: 660, column: 51, scope: !15971)
!15976 = !DILocalVariable(name: "data", arg: 2, scope: !15971, file: !6541, line: 660, type: !626)
!15977 = !DILocation(line: 660, column: 62, scope: !15971)
!15978 = !DILocation(line: 662, column: 21, scope: !15971)
!15979 = !DILocation(line: 662, column: 2, scope: !15971)
!15980 = !DILocation(line: 662, column: 7, scope: !15971)
!15981 = !DILocation(line: 662, column: 19, scope: !15971)
!15982 = !DILocation(line: 663, column: 1, scope: !15971)
!15983 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !7286, file: !7286, line: 1865, type: !15984, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15984 = !DISubroutineType(types: !15985)
!15985 = !{!626, !7284}
!15986 = !DILocalVariable(name: "pdev", arg: 1, scope: !15983, file: !7286, line: 1865, type: !7284)
!15987 = !DILocation(line: 1865, column: 53, scope: !15983)
!15988 = !DILocation(line: 1867, column: 26, scope: !15983)
!15989 = !DILocation(line: 1867, column: 32, scope: !15983)
!15990 = !DILocation(line: 1867, column: 9, scope: !15983)
!15991 = !DILocation(line: 1867, column: 2, scope: !15983)
!15992 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !6541, file: !6541, line: 655, type: !15993, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!15993 = !DISubroutineType(types: !15994)
!15994 = !{!626, !6891}
!15995 = !DILocalVariable(name: "dev", arg: 1, scope: !15992, file: !6541, line: 655, type: !6891)
!15996 = !DILocation(line: 655, column: 58, scope: !15992)
!15997 = !DILocation(line: 657, column: 9, scope: !15992)
!15998 = !DILocation(line: 657, column: 14, scope: !15992)
!15999 = !DILocation(line: 657, column: 2, scope: !15992)
!16000 = distinct !DISubprogram(name: "pcnet32_pm_suspend", scope: !3, file: !3, line: 2903, type: !6578, scopeLine: 2904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!16001 = !DILocalVariable(name: "device_d", arg: 1, scope: !16000, file: !3, line: 2903, type: !6545)
!16002 = !DILocation(line: 2903, column: 61, scope: !16000)
!16003 = !DILocalVariable(name: "dev", scope: !16000, file: !3, line: 2905, type: !326)
!16004 = !DILocation(line: 2905, column: 21, scope: !16000)
!16005 = !DILocation(line: 2905, column: 43, scope: !16000)
!16006 = !DILocation(line: 2905, column: 27, scope: !16000)
!16007 = !DILocation(line: 2907, column: 20, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 2907, column: 6)
!16009 = !DILocation(line: 2907, column: 6, scope: !16008)
!16010 = !DILocation(line: 2907, column: 6, scope: !16000)
!16011 = !DILocation(line: 2908, column: 23, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16008, file: !3, line: 2907, column: 26)
!16013 = !DILocation(line: 2908, column: 3, scope: !16012)
!16014 = !DILocation(line: 2909, column: 17, scope: !16012)
!16015 = !DILocation(line: 2909, column: 3, scope: !16012)
!16016 = !DILocation(line: 2910, column: 2, scope: !16012)
!16017 = !DILocation(line: 2912, column: 2, scope: !16000)
!16018 = distinct !DISubprogram(name: "pcnet32_pm_resume", scope: !3, file: !3, line: 2915, type: !6578, scopeLine: 2916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!16019 = !DILocalVariable(name: "device_d", arg: 1, scope: !16018, file: !3, line: 2915, type: !6545)
!16020 = !DILocation(line: 2915, column: 60, scope: !16018)
!16021 = !DILocalVariable(name: "dev", scope: !16018, file: !3, line: 2917, type: !326)
!16022 = !DILocation(line: 2917, column: 21, scope: !16018)
!16023 = !DILocation(line: 2917, column: 43, scope: !16018)
!16024 = !DILocation(line: 2917, column: 27, scope: !16018)
!16025 = !DILocation(line: 2919, column: 20, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16018, file: !3, line: 2919, column: 6)
!16027 = !DILocation(line: 2919, column: 6, scope: !16026)
!16028 = !DILocation(line: 2919, column: 6, scope: !16018)
!16029 = !DILocation(line: 2920, column: 16, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 2919, column: 26)
!16031 = !DILocation(line: 2920, column: 3, scope: !16030)
!16032 = !DILocation(line: 2921, column: 23, scope: !16030)
!16033 = !DILocation(line: 2921, column: 3, scope: !16030)
!16034 = !DILocation(line: 2922, column: 2, scope: !16030)
!16035 = !DILocation(line: 2924, column: 2, scope: !16018)
!16036 = distinct !DISubprogram(name: "netif_msg_init", scope: !6, file: !6, line: 4162, type: !16037, scopeLine: 4163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!16037 = !DISubroutineType(types: !16038)
!16038 = !{!1022, !7, !7}
!16039 = !DILocalVariable(name: "debug_value", arg: 1, scope: !16036, file: !6, line: 4162, type: !7)
!16040 = !DILocation(line: 4162, column: 38, scope: !16036)
!16041 = !DILocalVariable(name: "default_msg_enable_bits", arg: 2, scope: !16036, file: !6, line: 4162, type: !7)
!16042 = !DILocation(line: 4162, column: 55, scope: !16036)
!16043 = !DILocation(line: 4165, column: 6, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16036, file: !6, line: 4165, column: 6)
!16045 = !DILocation(line: 4165, column: 18, scope: !16044)
!16046 = !DILocation(line: 4165, column: 22, scope: !16044)
!16047 = !DILocation(line: 4165, column: 25, scope: !16044)
!16048 = !DILocation(line: 4165, column: 37, scope: !16044)
!16049 = !DILocation(line: 4165, column: 6, scope: !16036)
!16050 = !DILocation(line: 4166, column: 10, scope: !16044)
!16051 = !DILocation(line: 4166, column: 3, scope: !16044)
!16052 = !DILocation(line: 4167, column: 6, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16036, file: !6, line: 4167, column: 6)
!16054 = !DILocation(line: 4167, column: 18, scope: !16053)
!16055 = !DILocation(line: 4167, column: 6, scope: !16036)
!16056 = !DILocation(line: 4168, column: 3, scope: !16053)
!16057 = !DILocation(line: 4170, column: 16, scope: !16036)
!16058 = !DILocation(line: 4170, column: 13, scope: !16036)
!16059 = !DILocation(line: 4170, column: 29, scope: !16036)
!16060 = !DILocation(line: 4170, column: 2, scope: !16036)
!16061 = !DILocation(line: 4171, column: 1, scope: !16036)
!16062 = distinct !DISubprogram(name: "pcnet32_probe_vlbus", scope: !3, file: !3, line: 1504, type: !16063, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1621)
!16063 = !DISubroutineType(types: !16064)
!16064 = !{null, !4628}
!16065 = !DILocalVariable(name: "pcnet32_portlist", arg: 1, scope: !16062, file: !3, line: 1504, type: !4628)
!16066 = !DILocation(line: 1504, column: 47, scope: !16062)
!16067 = !DILocalVariable(name: "port", scope: !16062, file: !3, line: 1506, type: !4628)
!16068 = !DILocation(line: 1506, column: 16, scope: !16062)
!16069 = !DILocalVariable(name: "ioaddr", scope: !16062, file: !3, line: 1506, type: !13)
!16070 = !DILocation(line: 1506, column: 22, scope: !16062)
!16071 = !DILocation(line: 1509, column: 14, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !16062, file: !3, line: 1509, column: 2)
!16073 = !DILocation(line: 1509, column: 12, scope: !16072)
!16074 = !DILocation(line: 1509, column: 7, scope: !16072)
!16075 = !DILocation(line: 1509, column: 43, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !16072, file: !3, line: 1509, column: 2)
!16077 = !DILocation(line: 1509, column: 42, scope: !16076)
!16078 = !DILocation(line: 1509, column: 40, scope: !16076)
!16079 = !DILocation(line: 1509, column: 2, scope: !16072)
!16080 = !DILocation(line: 1510, column: 7, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16082, file: !3, line: 1510, column: 7)
!16082 = distinct !DILexicalBlock(scope: !16076, file: !3, line: 1509, column: 58)
!16083 = !DILocation(line: 1510, column: 7, scope: !16082)
!16084 = !DILocation(line: 1513, column: 13, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 1513, column: 8)
!16086 = distinct !DILexicalBlock(scope: !16081, file: !3, line: 1511, column: 60)
!16087 = !DILocation(line: 1513, column: 20, scope: !16085)
!16088 = !DILocation(line: 1513, column: 9, scope: !16085)
!16089 = !DILocation(line: 1513, column: 26, scope: !16085)
!16090 = !DILocation(line: 1513, column: 35, scope: !16085)
!16091 = !DILocation(line: 1514, column: 13, scope: !16085)
!16092 = !DILocation(line: 1514, column: 20, scope: !16085)
!16093 = !DILocation(line: 1514, column: 9, scope: !16085)
!16094 = !DILocation(line: 1514, column: 26, scope: !16085)
!16095 = !DILocation(line: 1513, column: 8, scope: !16086)
!16096 = !DILocation(line: 1515, column: 20, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16085, file: !3, line: 1514, column: 36)
!16098 = !DILocation(line: 1515, column: 5, scope: !16097)
!16099 = !DILocation(line: 1516, column: 4, scope: !16097)
!16100 = !DILocation(line: 1517, column: 5, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16085, file: !3, line: 1516, column: 11)
!16102 = !DILocation(line: 1519, column: 3, scope: !16086)
!16103 = !DILocation(line: 1520, column: 2, scope: !16082)
!16104 = !DILocation(line: 1509, column: 54, scope: !16076)
!16105 = !DILocation(line: 1509, column: 2, scope: !16076)
!16106 = distinct !{!16106, !16079, !16107}
!16107 = !DILocation(line: 1520, column: 2, scope: !16072)
!16108 = !DILocation(line: 1521, column: 1, scope: !16062)
