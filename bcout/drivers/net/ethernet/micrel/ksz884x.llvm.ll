; ModuleID = '../bcout/drivers/net/ethernet/micrel/ksz884x.llvm.bc'
source_filename = "drivers/net/ethernet/micrel/ksz884x.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_pci_device_driver_init6:\09\09\09"
module asm ".long\09pci_device_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.87, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.86, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.86 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.84, %struct.list_head, %struct.list_head, %union.anon.85 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.82 }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.74, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.74 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.75, i32 }
%union.anon.75 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.88, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.128, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.88 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.40, %union.anon.43, %union.anon.44, [48 x i8], %union.anon.45, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.47, i32, i32, i32, i16, i16, %union.anon.49, %union.anon.50, %union.anon.51, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.42 }
%union.anon.42 = type { %struct.net_device* }
%union.anon.43 = type { %struct.sock* }
%union.anon.44 = type { i64 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { i64, void (%struct.sk_buff*)* }
%union.anon.47 = type { i32 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i16 }
%struct.ifreq = type { %union.anon.89, %union.anon.90 }
%union.anon.89 = type { [16 x i8] }
%union.anon.90 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.92 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.92 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.93 }
%union.anon.93 = type { %struct.anon.94 }
%struct.anon.94 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.125 }
%union.anon.125 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.126, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.126 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.127 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.127 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.128 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.38, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.38 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.52 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.52 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.53, %union.anon.54, i32 }
%struct.request_queue = type opaque
%union.anon.53 = type { %struct.list_head }
%union.anon.54 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.84 = type { %struct.list_head }
%union.anon.85 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.81 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.79 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.79 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.87 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.129 }
%union.anon.129 = type { i8* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.hw_regs = type { i32, i32 }
%struct.anon.131 = type { [32 x i8] }
%struct.dev_priv = type { %struct.dev_info*, %struct.ksz_port, %struct.ksz_timer_info, %struct.semaphore, i32, %struct.mii_if_info, i32, i32, i32, i32, i32 }
%struct.dev_info = type { %struct.net_device*, %struct.pci_dev*, %struct.ksz_hw, %struct.ksz_shared_mem, %struct.spinlock, %struct.mutex, i32 (%struct.dev_info*)*, %struct.sk_buff*, i32, i32, %struct.work_struct, %struct.ksz_timer_info, [3 x %struct.ksz_counter_info], i32, i32, %struct.tasklet_struct, %struct.tasklet_struct, i32, i32, i64 }
%struct.ksz_hw = type { i8*, %struct.ksz_switch*, [2 x %struct.ksz_port_info], [3 x %struct.ksz_port_mib], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ksz_desc_info, %struct.ksz_desc_info, i32, i32, i32, [6 x i8], [6 x i8], [16 x [6 x i8]], i8, i8, i8, i8, [32 x [6 x i8]], [8 x i8], i8, i8, i8, [1 x i8], i32, i32, i8* }
%struct.ksz_switch = type { [8 x %struct.ksz_mac_table], [16 x %struct.ksz_vlan_table], [3 x %struct.ksz_port_cfg], [64 x i8], [8 x i8], [6 x i8], [6 x i8], i8, i8 }
%struct.ksz_mac_table = type { [6 x i8], i16, i8, i8, i8 }
%struct.ksz_vlan_table = type { i16, i8, i8 }
%struct.ksz_port_cfg = type { i16, i8, i8, [4 x i32], [4 x i32], i32 }
%struct.ksz_port_info = type { i32, i32, i8, i8, i8, i8, i8* }
%struct.ksz_port_mib = type { i8, i8, i8, i8, [34 x i64], [2 x i32] }
%struct.ksz_desc_info = type { %struct.ksz_desc*, %struct.ksz_desc*, %struct.ksz_hw_desc*, i32, i32, i32, i32, i32, i32, i32 }
%struct.ksz_desc = type { %struct.ksz_hw_desc*, %struct.ksz_sw_desc, %struct.ksz_dma_buf }
%struct.ksz_sw_desc = type { %union.desc_stat, %union.desc_buf, i32 }
%union.desc_stat = type { %struct.ksz_desc_rx_stat }
%struct.ksz_desc_rx_stat = type { i32 }
%union.desc_buf = type { %struct.ksz_desc_rx_buf }
%struct.ksz_desc_rx_buf = type { i32 }
%struct.ksz_dma_buf = type { %struct.sk_buff*, i64, i32 }
%struct.ksz_hw_desc = type { %union.desc_stat, %union.desc_buf, i32, i32 }
%struct.ksz_shared_mem = type { i64, i32, i32, i8*, i8* }
%struct.ksz_counter_info = type { %struct.wait_queue_head, i64, i32 }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.130, i64 }
%union.anon.130 = type { void (i64)* }
%struct.ksz_port = type { i8, i8, i8, i8, i32, i32, i32, [4 x i64], %struct.ksz_hw*, %struct.ksz_port_info* }
%struct.ksz_timer_info = type { %struct.timer_list, i32, i32, i32 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.mii_if_info = type { i32, i32, i32, i32, i8, %struct.net_device*, i32 (%struct.net_device*, i32, i32)*, void (%struct.net_device*, i32, i32, i32)* }
%struct.platform_info = type { %struct.dev_info, [2 x %struct.net_device*] }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.ksz_desc_tx_stat = type { i32 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ksz_desc_tx_buf = type { i32 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }

@__UNIQUE_ID___addressable_pci_device_driver_init335 = internal global i8* bitcast (i32 ()* @pci_device_driver_init to i8*), section ".discard.addressable", align 8, !dbg !0
@pci_device_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @pcidev_name, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([3 x %struct.pci_device_id], [3 x %struct.pci_device_id]* @pcidev_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @pcidev_init, void (%struct.pci_dev*)* @pcidev_exit, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @pcidev_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.pci_dynids zeroinitializer }, align 8, !dbg !8231
@__exitcall_pci_device_driver_exit = internal global void ()* @pci_device_driver_exit, section ".exitcall.exit", align 8, !dbg !8097
@__UNIQUE_ID_description336 = internal constant [49 x i8] c"ksz884x.description=KSZ8841/2 PCI network driver\00", section ".modinfo", align 1, !dbg !8102
@__UNIQUE_ID_author337 = internal constant [52 x i8] c"ksz884x.author=Tristram Ha <Tristram.Ha@micrel.com>\00", section ".modinfo", align 1, !dbg !8107
@__UNIQUE_ID_file338 = internal constant [49 x i8] c"ksz884x.file=drivers/net/ethernet/micrel/ksz884x\00", section ".modinfo", align 1, !dbg !8110
@__UNIQUE_ID_license339 = internal constant [20 x i8] c"ksz884x.license=GPL\00", section ".modinfo", align 1, !dbg !8112
@__param_str_message = internal constant [16 x i8] c"ksz884x.message\00", align 16, !dbg !8319
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@msg_enable = internal global i32 0, align 4, !dbg !8223
@__param_message = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_message, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.129 { i8* bitcast (i32* @msg_enable to i8*) } }, section "__param", align 8, !dbg !8115
@__UNIQUE_ID_messagetype340 = internal constant [29 x i8] c"ksz884x.parmtype=message:int\00", section ".modinfo", align 1, !dbg !8164
@__UNIQUE_ID_message341 = internal constant [62 x i8] c"ksz884x.parm=message:Message verbosity level (0=none, 31=all)\00", section ".modinfo", align 1, !dbg !8169
@__param_str_macaddr = internal constant [16 x i8] c"ksz884x.macaddr\00", align 16, !dbg !8322
@param_ops_charp = external dso_local constant %struct.kernel_param_ops, align 8
@macaddr = internal global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0), align 8, !dbg !8324
@__param_macaddr = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_macaddr, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_charp, i16 0, i8 -1, i8 0, %union.anon.129 { i8* bitcast (i8** @macaddr to i8*) } }, section "__param", align 8, !dbg !8174
@__UNIQUE_ID_macaddrtype342 = internal constant [31 x i8] c"ksz884x.parmtype=macaddr:charp\00", section ".modinfo", align 1, !dbg !8176
@__param_str_mac1addr = internal constant [17 x i8] c"ksz884x.mac1addr\00", align 16, !dbg !8326
@mac1addr = internal global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0), align 8, !dbg !8329
@__param_mac1addr = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_mac1addr, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_charp, i16 0, i8 -1, i8 0, %union.anon.129 { i8* bitcast (i8** @mac1addr to i8*) } }, section "__param", align 8, !dbg !8181
@__UNIQUE_ID_mac1addrtype343 = internal constant [32 x i8] c"ksz884x.parmtype=mac1addr:charp\00", section ".modinfo", align 1, !dbg !8183
@__param_str_fast_aging = internal constant [19 x i8] c"ksz884x.fast_aging\00", align 16, !dbg !8331
@fast_aging = internal global i32 0, align 4, !dbg !8229
@__param_fast_aging = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_fast_aging, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.129 { i8* bitcast (i32* @fast_aging to i8*) } }, section "__param", align 8, !dbg !8186
@__UNIQUE_ID_fast_agingtype344 = internal constant [32 x i8] c"ksz884x.parmtype=fast_aging:int\00", section ".modinfo", align 1, !dbg !8188
@__param_str_multi_dev = internal constant [18 x i8] c"ksz884x.multi_dev\00", align 16, !dbg !8336
@multi_dev = internal global i32 0, align 4, !dbg !8225
@__param_multi_dev = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_multi_dev, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.129 { i8* bitcast (i32* @multi_dev to i8*) } }, section "__param", align 8, !dbg !8190
@__UNIQUE_ID_multi_devtype345 = internal constant [31 x i8] c"ksz884x.parmtype=multi_dev:int\00", section ".modinfo", align 1, !dbg !8192
@__param_str_stp = internal constant [12 x i8] c"ksz884x.stp\00", align 1, !dbg !8341
@stp = internal global i32 0, align 4, !dbg !8227
@__param_stp = internal constant %struct.kernel_param { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_stp, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.129 { i8* bitcast (i32* @stp to i8*) } }, section "__param", align 8, !dbg !8194
@__UNIQUE_ID_stptype346 = internal constant [25 x i8] c"ksz884x.parmtype=stp:int\00", section ".modinfo", align 1, !dbg !8196
@__UNIQUE_ID_macaddr347 = internal constant [33 x i8] c"ksz884x.parm=macaddr:MAC address\00", section ".modinfo", align 1, !dbg !8201
@__UNIQUE_ID_mac1addr348 = internal constant [41 x i8] c"ksz884x.parm=mac1addr:Second MAC address\00", section ".modinfo", align 1, !dbg !8206
@__UNIQUE_ID_fast_aging349 = internal constant [35 x i8] c"ksz884x.parm=fast_aging:Fast aging\00", section ".modinfo", align 1, !dbg !8211
@__UNIQUE_ID_multi_dev350 = internal constant [50 x i8] c"ksz884x.parm=multi_dev:Multiple device interfaces\00", section ".modinfo", align 1, !dbg !8216
@__UNIQUE_ID_stp351 = internal constant [29 x i8] c"ksz884x.parm=stp:STP support\00", section ".modinfo", align 1, !dbg !8221
@.str = private unnamed_addr constant [8 x i8] c"ksz884x\00", align 1
@pcidev_name = internal global [9 x i8] c"ksz884xp\00", align 1, !dbg !8233
@pcidev_table = internal constant [3 x %struct.pci_device_id] [%struct.pci_device_id { i32 5830, i32 34881, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5830, i32 34882, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !8236
@pcidev_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @pcidev_suspend, i32 (%struct.device*)* @pcidev_resume, i32 (%struct.device*)* @pcidev_suspend, i32 (%struct.device*)* @pcidev_resume, i32 (%struct.device*)* @pcidev_suspend, i32 (%struct.device*)* @pcidev_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !8314
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"KSZ884X PCI\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"\011ksz884x: chip not detected\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@version = internal global [39 x i8] c"Micrel KSZ884x PCI 1.0.0 (Feb 8, 2010)\00", align 16, !dbg !8244
@.str.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@net_device_present = internal global i32 0, align 4, !dbg !8249
@pcidev_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8239
@.str.5 = private unnamed_addr constant [15 x i8] c"&hw_priv->lock\00", align 1
@pcidev_init.__key.6 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8242
@.str.7 = private unnamed_addr constant [29 x i8] c"&hw_priv->counter[i].counter\00", align 1
@netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* @netdev_init, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @netdev_open, i32 (%struct.net_device*)* @netdev_close, i32 (%struct.sk_buff*, %struct.net_device*)* @netdev_tx, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @netdev_set_rx_mode, i32 (%struct.net_device*, i8*)* @netdev_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @netdev_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @netdev_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @netdev_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* @netdev_query_statistics, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* @netdev_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !8255
@netdev_ethtool_ops = internal constant %struct.ethtool_ops { i32 0, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @netdev_get_drvinfo, i32 (%struct.net_device*)* @netdev_get_regs_len, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* @netdev_get_regs, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @netdev_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @netdev_set_wol, i32 (%struct.net_device*)* @netdev_get_msglevel, void (%struct.net_device*, i32)* @netdev_set_msglevel, i32 (%struct.net_device*)* @netdev_nway_reset, i32 (%struct.net_device*)* @netdev_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* @netdev_get_eeprom_len, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* @netdev_get_eeprom, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* @netdev_set_eeprom, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, void (%struct.net_device*, %struct.ethtool_ringparam*)* @netdev_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* null, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* @netdev_get_pauseparam, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* @netdev_set_pauseparam, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @netdev_get_strings, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @netdev_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @netdev_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @netdev_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @netdev_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !8281
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.8 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.9 = private unnamed_addr constant [48 x i8] c"\011ksz884x: Hardware descriptor size not right!\0A\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"\011ksz884x: Hardware descriptor numbers not right!\0A\00", align 1
@DEFAULT_MAC_ADDRESS = internal global [6 x i8] c"\00\10\A1\88B\01", align 1, !dbg !8251
@jiffies = external dso_local global i64, align 8
@next_jiffies = internal global i64 0, align 8, !dbg !8253
@.str.11 = private unnamed_addr constant [9 x i8] c"link %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@sema_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8257
@.str.14 = private unnamed_addr constant [16 x i8] c"semaphore->lock\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"\016ksz884x: Tx stopped\0A\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"\016ksz884x: Tx disabled\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !8263
@.str.17 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@hw_add_wol_bcast.mask = internal constant [1 x i8] c"?", align 1, !dbg !8269
@hw_add_wol_bcast.pattern = internal constant [6 x i8] c"\FF\FF\FF\FF\FF\FF", align 1, !dbg !8275
@byte_rev_table = external dso_local constant [256 x i8], align 16
@netdev_tx_timeout.last_reset = internal global i64 0, align 8, !dbg !8278
@.str.19 = private unnamed_addr constant [6 x i8] c"1.0.0\00", align 1
@hw_regs_range = internal global [7 x %struct.hw_regs] [%struct.hw_regs { i32 0, i32 44 }, %struct.hw_regs { i32 128, i32 252 }, %struct.hw_regs { i32 512, i32 552 }, %struct.hw_regs { i32 1024, i32 1042 }, %struct.hw_regs { i32 1136, i32 1170 }, %struct.hw_regs { i32 1232, i32 1354 }, %struct.hw_regs zeroinitializer], align 16, !dbg !8283
@netdev_set_wol.net_addr = internal constant [4 x i8] c"\C0\A8\01\01", align 1, !dbg !8290
@hw_add_wol_ucast.mask = internal constant [1 x i8] c"?", align 1, !dbg !8294
@hw_add_wol_mcast.mask = internal constant [1 x i8] c"?", align 1, !dbg !8297
@__const.hw_add_wol_mcast.pattern = private unnamed_addr constant [6 x i8] c"33\FF\00\00\00", align 1
@hw_add_wol_arp.mask = internal constant [6 x i8] c"?\F0?\00\C0\03", align 1, !dbg !8300
@__const.hw_add_wol_arp.pattern = private unnamed_addr constant <{ [22 x i8], [20 x i8] }> <{ [22 x i8] c"\FF\FF\FF\FF\FF\FF\00\00\00\00\00\00\08\06\00\01\08\00\06\04\00\01", [20 x i8] zeroinitializer }>, align 16
@eeprom_data = internal global [64 x i16] zeroinitializer, align 16, !dbg !8305
@ethtool_stats_keys = internal global [34 x %struct.anon.131] [%struct.anon.131 { [32 x i8] c"rx_lo_priority_octets\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_hi_priority_octets\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_undersize_packets\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_fragments\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_oversize_packets\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_jabbers\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_symbol_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_crc_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_align_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_mac_ctrl_packets\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_pause_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_bcast_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_mcast_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_ucast_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_64_or_less_octet_packets\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_65_to_127_octet_packets\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_128_to_255_octet_packets\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_256_to_511_octet_packets\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_512_to_1023_octet_packets\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_1024_to_1522_octet_packets\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_lo_priority_octets\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_hi_priority_octets\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_late_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_pause_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_bcast_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_mcast_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_ucast_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_deferred\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_total_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_excessive_collisions\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_single_collisions\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_mult_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"rx_discards\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.anon.131 { [32 x i8] c"tx_discards\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }], align 16, !dbg !8308
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@pcidev_suspend.net_addr = internal constant [4 x i8] c"\C0\A8\01\01", align 1, !dbg !8316
@.str.20 = private unnamed_addr constant [2 x i8] c":\00", align 1
@llvm.used = appending global [25 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_device_driver_init335 to i8*), i8* bitcast (void ()* @pci_device_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_pci_device_driver_exit to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_description336, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__UNIQUE_ID_author337, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_file338, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license339, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_message to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_messagetype340, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__UNIQUE_ID_message341, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_macaddr to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_macaddrtype342, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_mac1addr to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_mac1addrtype343, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_fast_aging to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_fast_agingtype344, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_multi_dev to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_multi_devtype345, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_stp to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_stptype346, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_macaddr347, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_mac1addr348, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_fast_aging349, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_multi_dev350, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_stp351, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_device_driver_init() #0 section ".init.text" !dbg !8350 {
entry:
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @pci_device_driver, %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #12, !dbg !8353
  ret i32 %call, !dbg !8353
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @pci_device_driver_exit() #0 section ".exit.text" !dbg !8354 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @pci_device_driver) #12, !dbg !8355
  ret void, !dbg !8355
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcidev_init(%struct.pci_dev* %pdev, %struct.pci_device_id* %id) #2 !dbg !8241 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8356, metadata !DIExpression()), !dbg !8362
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %dev = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %info = alloca %struct.platform_info*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %reg_base = alloca i64, align 8
  %reg_len = alloca i64, align 8
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  %mib_port_count = alloca i32, align 4
  %pi = alloca i32, align 4
  %port_count = alloca i32, align 4
  %result = alloca i32, align 4
  %banner = alloca [39 x i8], align 16
  %sw = alloca %struct.ksz_switch*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral135 = alloca %struct.atomic64_t, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8365, metadata !DIExpression()), !dbg !8366
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !8369, metadata !DIExpression()), !dbg !8370
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !8371, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !8373, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !8375, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.declare(metadata %struct.platform_info** %info, metadata !8377, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !8385, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.declare(metadata i64* %reg_base, metadata !8388, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.declare(metadata i64* %reg_len, metadata !8390, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !8392, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8394, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata i32* %mib_port_count, metadata !8396, metadata !DIExpression()), !dbg !8397
  call void @llvm.dbg.declare(metadata i32* %pi, metadata !8398, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.declare(metadata i32* %port_count, metadata !8400, metadata !DIExpression()), !dbg !8401
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8402, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.declare(metadata [39 x i8]* %banner, metadata !8404, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.declare(metadata %struct.ksz_switch** %sw, metadata !8406, metadata !DIExpression()), !dbg !8407
  store %struct.ksz_switch* null, %struct.ksz_switch** %sw, align 8, !dbg !8407
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8408
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #12, !dbg !8409
  store i32 %call, i32* %result, align 4, !dbg !8410
  %1 = load i32, i32* %result, align 4, !dbg !8411
  %tobool = icmp ne i32 %1, 0, !dbg !8411
  br i1 %tobool, label %if.then, label %if.end, !dbg !8413

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %result, align 4, !dbg !8414
  store i32 %2, i32* %retval, align 4, !dbg !8415
  br label %return, !dbg !8415

if.end:                                           ; preds = %entry
  store i32 -19, i32* %result, align 4, !dbg !8416
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8417
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !8419
  %call2 = call i32 @dma_set_mask(%struct.device* %dev1, i64 4294967295) #12, !dbg !8420
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8420
  br i1 %tobool3, label %if.then7, label %lor.lhs.false, !dbg !8421

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8422
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !8423
  %call5 = call i32 @dma_set_coherent_mask(%struct.device* %dev4, i64 4294967295) #12, !dbg !8424
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8424
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8425

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load i32, i32* %result, align 4, !dbg !8426
  store i32 %5, i32* %retval, align 4, !dbg !8427
  br label %return, !dbg !8427

if.end8:                                          ; preds = %lor.lhs.false
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8428
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !8428
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8428
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !8428
  %7 = load i64, i64* %start, align 8, !dbg !8428
  store i64 %7, i64* %reg_base, align 8, !dbg !8429
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8430
  %resource9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 44, !dbg !8430
  %arrayidx10 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource9, i64 0, i64 0, !dbg !8430
  %start11 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx10, i32 0, i32 0, !dbg !8430
  %9 = load i64, i64* %start11, align 8, !dbg !8430
  %cmp = icmp eq i64 %9, 0, !dbg !8430
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !8430

land.lhs.true:                                    ; preds = %if.end8
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8430
  %resource12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !8430
  %arrayidx13 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource12, i64 0, i64 0, !dbg !8430
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx13, i32 0, i32 1, !dbg !8430
  %11 = load i64, i64* %end, align 8, !dbg !8430
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8430
  %resource14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !8430
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource14, i64 0, i64 0, !dbg !8430
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 0, !dbg !8430
  %13 = load i64, i64* %start16, align 8, !dbg !8430
  %cmp17 = icmp eq i64 %11, %13, !dbg !8430
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !8430

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !8430

cond.false:                                       ; preds = %land.lhs.true, %if.end8
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8430
  %resource18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 44, !dbg !8430
  %arrayidx19 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource18, i64 0, i64 0, !dbg !8430
  %end20 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx19, i32 0, i32 1, !dbg !8430
  %15 = load i64, i64* %end20, align 8, !dbg !8430
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8430
  %resource21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 44, !dbg !8430
  %arrayidx22 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource21, i64 0, i64 0, !dbg !8430
  %start23 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx22, i32 0, i32 0, !dbg !8430
  %17 = load i64, i64* %start23, align 8, !dbg !8430
  %sub = sub i64 %15, %17, !dbg !8430
  %add = add i64 %sub, 1, !dbg !8430
  br label %cond.end, !dbg !8430

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !8430
  store i64 %cond, i64* %reg_len, align 8, !dbg !8431
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8432
  %resource24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 44, !dbg !8432
  %arrayidx25 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource24, i64 0, i64 0, !dbg !8432
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx25, i32 0, i32 3, !dbg !8432
  %19 = load i64, i64* %flags, align 8, !dbg !8432
  %and = and i64 %19, 256, !dbg !8434
  %cmp26 = icmp ne i64 %and, 0, !dbg !8435
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !8436

if.then27:                                        ; preds = %cond.end
  %20 = load i32, i32* %result, align 4, !dbg !8437
  store i32 %20, i32* %retval, align 4, !dbg !8438
  br label %return, !dbg !8438

if.end28:                                         ; preds = %cond.end
  %21 = load i64, i64* %reg_base, align 8, !dbg !8439
  %22 = load i64, i64* %reg_len, align 8, !dbg !8439
  %call29 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %21, i64 %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 0) #12, !dbg !8439
  %tobool30 = icmp ne %struct.resource* %call29, null, !dbg !8439
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !8441

if.then31:                                        ; preds = %if.end28
  %23 = load i32, i32* %result, align 4, !dbg !8442
  store i32 %23, i32* %retval, align 4, !dbg !8443
  br label %return, !dbg !8443

if.end32:                                         ; preds = %if.end28
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8444
  call void @pci_set_master(%struct.pci_dev* %24) #12, !dbg !8445
  store i32 -12, i32* %result, align 4, !dbg !8446
  %call33 = call i8* @kzalloc(i64 1824, i32 3264) #12, !dbg !8447
  %25 = bitcast i8* %call33 to %struct.platform_info*, !dbg !8447
  store %struct.platform_info* %25, %struct.platform_info** %info, align 8, !dbg !8448
  %26 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8449
  %tobool34 = icmp ne %struct.platform_info* %26, null, !dbg !8449
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !8451

if.then35:                                        ; preds = %if.end32
  br label %pcidev_init_dev_err, !dbg !8452

if.end36:                                         ; preds = %if.end32
  %27 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8453
  %dev_info = getelementptr inbounds %struct.platform_info, %struct.platform_info* %27, i32 0, i32 0, !dbg !8454
  store %struct.dev_info* %dev_info, %struct.dev_info** %hw_priv, align 8, !dbg !8455
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8456
  %29 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8457
  %pdev37 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %29, i32 0, i32 1, !dbg !8458
  store %struct.pci_dev* %28, %struct.pci_dev** %pdev37, align 8, !dbg !8459
  %30 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8460
  %hw38 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %30, i32 0, i32 2, !dbg !8461
  store %struct.ksz_hw* %hw38, %struct.ksz_hw** %hw, align 8, !dbg !8462
  %31 = load i64, i64* %reg_base, align 8, !dbg !8463
  %32 = load i64, i64* %reg_len, align 8, !dbg !8464
  %call39 = call i8* @ioremap(i64 %31, i64 %32) #12, !dbg !8465
  %33 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8466
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %33, i32 0, i32 0, !dbg !8467
  store i8* %call39, i8** %io, align 8, !dbg !8468
  %34 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8469
  %io40 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %34, i32 0, i32 0, !dbg !8471
  %35 = load i8*, i8** %io40, align 8, !dbg !8471
  %tobool41 = icmp ne i8* %35, null, !dbg !8469
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !8472

if.then42:                                        ; preds = %if.end36
  br label %pcidev_init_io_err, !dbg !8473

if.end43:                                         ; preds = %if.end36
  %36 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8474
  %call44 = call i32 @hw_init(%struct.ksz_hw* %36) #12, !dbg !8475
  store i32 %call44, i32* %cnt, align 4, !dbg !8476
  %37 = load i32, i32* %cnt, align 4, !dbg !8477
  %tobool45 = icmp ne i32 %37, 0, !dbg !8477
  br i1 %tobool45, label %if.end52, label %if.then46, !dbg !8479

if.then46:                                        ; preds = %if.end43
  %38 = load i32, i32* @msg_enable, align 4, !dbg !8480
  %and47 = and i32 %38, 2, !dbg !8483
  %tobool48 = icmp ne i32 %and47, 0, !dbg !8483
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !8484

if.then49:                                        ; preds = %if.then46
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !8485
  br label %if.end51, !dbg !8485

if.end51:                                         ; preds = %if.then49, %if.then46
  store i32 -19, i32* %result, align 4, !dbg !8486
  br label %pcidev_init_alloc_err, !dbg !8487

if.end52:                                         ; preds = %if.end43
  %arraydecay = getelementptr inbounds [39 x i8], [39 x i8]* %banner, i64 0, i64 0, !dbg !8488
  %call53 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @version, i64 0, i64 0)) #12, !dbg !8489
  %39 = load i32, i32* %cnt, align 4, !dbg !8490
  %add54 = add i32 %39, 48, !dbg !8491
  %conv = trunc i32 %add54 to i8, !dbg !8490
  %arrayidx55 = getelementptr [39 x i8], [39 x i8]* %banner, i64 0, i64 13, !dbg !8492
  store i8 %conv, i8* %arrayidx55, align 1, !dbg !8493
  %40 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8494
  %pdev56 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %40, i32 0, i32 1, !dbg !8494
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev56, align 8, !dbg !8494
  %dev57 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 41, !dbg !8494
  %arraydecay58 = getelementptr inbounds [39 x i8], [39 x i8]* %banner, i64 0, i64 0, !dbg !8494
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay58) #13, !dbg !8494
  %42 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8495
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %42, i32 0, i32 4, !dbg !8496
  store i32 1, i32* %dev_count, align 8, !dbg !8497
  store i32 1, i32* %port_count, align 4, !dbg !8498
  store i32 1, i32* %mib_port_count, align 4, !dbg !8499
  %43 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8500
  %addr_list_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %43, i32 0, i32 22, !dbg !8501
  store i8 0, i8* %addr_list_size, align 8, !dbg !8502
  %44 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8503
  %mib_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %44, i32 0, i32 7, !dbg !8504
  store i32 32, i32* %mib_cnt, align 4, !dbg !8505
  %45 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8506
  %mib_port_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %45, i32 0, i32 8, !dbg !8507
  store i32 1, i32* %mib_port_cnt, align 8, !dbg !8508
  %46 = load i32, i32* %cnt, align 4, !dbg !8509
  %cmp59 = icmp eq i32 2, %46, !dbg !8511
  br i1 %cmp59, label %if.then61, label %if.end83, !dbg !8512

if.then61:                                        ; preds = %if.end52
  %47 = load i32, i32* @fast_aging, align 4, !dbg !8513
  %tobool62 = icmp ne i32 %47, 0, !dbg !8513
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !8516

if.then63:                                        ; preds = %if.then61
  %48 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8517
  %overrides = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %48, i32 0, i32 33, !dbg !8518
  %49 = load i32, i32* %overrides, align 4, !dbg !8519
  %or = or i32 %49, 2, !dbg !8519
  store i32 %or, i32* %overrides, align 4, !dbg !8519
  br label %if.end64, !dbg !8517

if.end64:                                         ; preds = %if.then63, %if.then61
  %50 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8520
  %mib_cnt65 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %50, i32 0, i32 7, !dbg !8521
  store i32 34, i32* %mib_cnt65, align 4, !dbg !8522
  %51 = load i32, i32* @multi_dev, align 4, !dbg !8523
  %tobool66 = icmp ne i32 %51, 0, !dbg !8523
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !8525

if.then67:                                        ; preds = %if.end64
  %52 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8526
  %dev_count68 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %52, i32 0, i32 4, !dbg !8528
  store i32 2, i32* %dev_count68, align 8, !dbg !8529
  %53 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8530
  %addr_list_size69 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %53, i32 0, i32 22, !dbg !8531
  store i8 1, i8* %addr_list_size69, align 8, !dbg !8532
  br label %if.end70, !dbg !8533

if.end70:                                         ; preds = %if.then67, %if.end64
  %54 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8534
  %dev_count71 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %54, i32 0, i32 4, !dbg !8536
  %55 = load i32, i32* %dev_count71, align 8, !dbg !8536
  %cmp72 = icmp eq i32 1, %55, !dbg !8537
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8538

if.then74:                                        ; preds = %if.end70
  store i32 2, i32* %port_count, align 4, !dbg !8539
  store i32 2, i32* %mib_port_count, align 4, !dbg !8541
  br label %if.end75, !dbg !8542

if.end75:                                         ; preds = %if.then74, %if.end70
  %56 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8543
  %mib_port_cnt76 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %56, i32 0, i32 8, !dbg !8544
  store i32 3, i32* %mib_port_cnt76, align 8, !dbg !8545
  %call77 = call i8* @kzalloc(i64 368, i32 3264) #12, !dbg !8546
  %57 = bitcast i8* %call77 to %struct.ksz_switch*, !dbg !8546
  %58 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8547
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %58, i32 0, i32 1, !dbg !8548
  store %struct.ksz_switch* %57, %struct.ksz_switch** %ksz_switch, align 8, !dbg !8549
  %59 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8550
  %ksz_switch78 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %59, i32 0, i32 1, !dbg !8552
  %60 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch78, align 8, !dbg !8552
  %tobool79 = icmp ne %struct.ksz_switch* %60, null, !dbg !8550
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !8553

if.then80:                                        ; preds = %if.end75
  br label %pcidev_init_alloc_err, !dbg !8554

if.end81:                                         ; preds = %if.end75
  %61 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8555
  %ksz_switch82 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %61, i32 0, i32 1, !dbg !8556
  %62 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch82, align 8, !dbg !8556
  store %struct.ksz_switch* %62, %struct.ksz_switch** %sw, align 8, !dbg !8557
  br label %if.end83, !dbg !8558

if.end83:                                         ; preds = %if.end81, %if.end52
  store i32 0, i32* %i, align 4, !dbg !8559
  br label %for.cond, !dbg !8561

for.cond:                                         ; preds = %for.inc, %if.end83
  %63 = load i32, i32* %i, align 4, !dbg !8562
  %64 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8564
  %mib_port_cnt84 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %64, i32 0, i32 8, !dbg !8565
  %65 = load i32, i32* %mib_port_cnt84, align 8, !dbg !8565
  %cmp85 = icmp slt i32 %63, %65, !dbg !8566
  br i1 %cmp85, label %for.body, label %for.end, !dbg !8567

for.body:                                         ; preds = %for.cond
  %66 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8568
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %66, i32 0, i32 3, !dbg !8569
  %67 = load i32, i32* %i, align 4, !dbg !8570
  %idxprom = sext i32 %67 to i64, !dbg !8568
  %arrayidx87 = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom, !dbg !8568
  %mib_start = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %arrayidx87, i32 0, i32 3, !dbg !8571
  store i8 0, i8* %mib_start, align 1, !dbg !8572
  br label %for.inc, !dbg !8568

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !dbg !8573
  %inc = add i32 %68, 1, !dbg !8573
  store i32 %inc, i32* %i, align 4, !dbg !8573
  br label %for.cond, !dbg !8574, !llvm.loop !8575

for.end:                                          ; preds = %for.cond
  %69 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8577
  %70 = bitcast %struct.dev_info* %69 to i8*, !dbg !8577
  %71 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8578
  %parent = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %71, i32 0, i32 34, !dbg !8579
  store i8* %70, i8** %parent, align 8, !dbg !8580
  %72 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8581
  %mtu = getelementptr inbounds %struct.dev_info, %struct.dev_info* %72, i32 0, i32 13, !dbg !8582
  store i32 1524, i32* %mtu, align 8, !dbg !8583
  %73 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8584
  %call88 = call i32 @ksz_alloc_mem(%struct.dev_info* %73) #12, !dbg !8586
  %tobool89 = icmp ne i32 %call88, 0, !dbg !8586
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !8587

if.then90:                                        ; preds = %for.end
  br label %pcidev_init_mem_err, !dbg !8588

if.end91:                                         ; preds = %for.end
  %74 = load i32, i32* @net_device_present, align 4, !dbg !8589
  %75 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8590
  %hw92 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %75, i32 0, i32 2, !dbg !8591
  %id93 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw92, i32 0, i32 6, !dbg !8592
  store i32 %74, i32* %id93, align 8, !dbg !8593
  br label %do.body, !dbg !8594

do.body:                                          ; preds = %if.end91
  %76 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8595
  %hwlock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %76, i32 0, i32 4, !dbg !8595
  store %struct.spinlock* %hwlock, %struct.spinlock** %lock.addr.i, align 8
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8596
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !8597
  %rlock.i = bitcast %union.anon.1* %78 to %struct.raw_spinlock*, !dbg !8597
  %79 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8595
  %hwlock95 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %79, i32 0, i32 4, !dbg !8595
  %80 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8595
  %rlock = bitcast %union.anon.1* %80 to %struct.raw_spinlock*, !dbg !8595
  %81 = bitcast %struct.spinlock* %hwlock95 to i8*, !dbg !8595
  %82 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 1 %82, i64 0, i1 false), !dbg !8595
  br label %do.end, !dbg !8595

do.end:                                           ; preds = %do.body
  br label %do.body96, !dbg !8598

do.body96:                                        ; preds = %do.end
  %83 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8599
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %83, i32 0, i32 5, !dbg !8599
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), %struct.lock_class_key* @pcidev_init.__key) #12, !dbg !8599
  br label %do.end97, !dbg !8599

do.end97:                                         ; preds = %do.body96
  store i32 0, i32* %i, align 4, !dbg !8601
  br label %for.cond98, !dbg !8603

for.cond98:                                       ; preds = %for.inc107, %do.end97
  %84 = load i32, i32* %i, align 4, !dbg !8604
  %cmp99 = icmp slt i32 %84, 3, !dbg !8606
  br i1 %cmp99, label %for.body101, label %for.end109, !dbg !8607

for.body101:                                      ; preds = %for.cond98
  br label %do.body102, !dbg !8608

do.body102:                                       ; preds = %for.body101
  %85 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8609
  %counter = getelementptr inbounds %struct.dev_info, %struct.dev_info* %85, i32 0, i32 12, !dbg !8609
  %86 = load i32, i32* %i, align 4, !dbg !8609
  %idxprom103 = sext i32 %86 to i64, !dbg !8609
  %arrayidx104 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter, i64 0, i64 %idxprom103, !dbg !8609
  %counter105 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx104, i32 0, i32 0, !dbg !8609
  call void @__init_waitqueue_head(%struct.wait_queue_head* %counter105, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), %struct.lock_class_key* @pcidev_init.__key.6) #12, !dbg !8609
  br label %do.end106, !dbg !8609

do.end106:                                        ; preds = %do.body102
  br label %for.inc107, !dbg !8609

for.inc107:                                       ; preds = %do.end106
  %87 = load i32, i32* %i, align 4, !dbg !8611
  %inc108 = add i32 %87, 1, !dbg !8611
  store i32 %inc108, i32* %i, align 4, !dbg !8611
  br label %for.cond98, !dbg !8612, !llvm.loop !8613

for.end109:                                       ; preds = %for.cond98
  %88 = load i8*, i8** @macaddr, align 8, !dbg !8615
  %arrayidx110 = getelementptr i8, i8* %88, i64 0, !dbg !8615
  %89 = load i8, i8* %arrayidx110, align 1, !dbg !8615
  %conv111 = sext i8 %89 to i32, !dbg !8615
  %cmp112 = icmp ne i32 %conv111, 58, !dbg !8617
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !8618

if.then114:                                       ; preds = %for.end109
  %90 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8619
  %91 = load i8*, i8** @macaddr, align 8, !dbg !8620
  call void @get_mac_addr(%struct.dev_info* %90, i8* %91, i32 0) #12, !dbg !8621
  br label %if.end115, !dbg !8621

if.end115:                                        ; preds = %if.then114, %for.end109
  %92 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8622
  call void @hw_read_addr(%struct.ksz_hw* %92) #12, !dbg !8623
  %93 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8624
  %dev_count116 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %93, i32 0, i32 4, !dbg !8626
  %94 = load i32, i32* %dev_count116, align 8, !dbg !8626
  %cmp117 = icmp sgt i32 %94, 1, !dbg !8627
  br i1 %cmp117, label %if.then119, label %if.end128, !dbg !8628

if.then119:                                       ; preds = %if.end115
  %95 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !8629
  %other_addr = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %95, i32 0, i32 6, !dbg !8631
  %arraydecay120 = getelementptr inbounds [6 x i8], [6 x i8]* %other_addr, i64 0, i64 0, !dbg !8632
  %96 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8633
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %96, i32 0, i32 20, !dbg !8634
  %arraydecay121 = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr, i64 0, i64 0, !dbg !8632
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay120, i8* align 2 %arraydecay121, i64 6, i1 false), !dbg !8632
  %97 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8635
  call void @read_other_addr(%struct.ksz_hw* %97) #12, !dbg !8636
  %98 = load i8*, i8** @mac1addr, align 8, !dbg !8637
  %arrayidx122 = getelementptr i8, i8* %98, i64 0, !dbg !8637
  %99 = load i8, i8* %arrayidx122, align 1, !dbg !8637
  %conv123 = sext i8 %99 to i32, !dbg !8637
  %cmp124 = icmp ne i32 %conv123, 58, !dbg !8639
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !8640

if.then126:                                       ; preds = %if.then119
  %100 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8641
  %101 = load i8*, i8** @mac1addr, align 8, !dbg !8642
  call void @get_mac_addr(%struct.dev_info* %100, i8* %101, i32 1) #12, !dbg !8643
  br label %if.end127, !dbg !8643

if.end127:                                        ; preds = %if.then126, %if.then119
  br label %if.end128, !dbg !8644

if.end128:                                        ; preds = %if.end127, %if.end115
  %102 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8645
  call void @hw_setup(%struct.ksz_hw* %102) #12, !dbg !8646
  %103 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8647
  %ksz_switch129 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %103, i32 0, i32 1, !dbg !8649
  %104 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch129, align 8, !dbg !8649
  %tobool130 = icmp ne %struct.ksz_switch* %104, null, !dbg !8647
  br i1 %tobool130, label %if.then131, label %if.else, !dbg !8650

if.then131:                                       ; preds = %if.end128
  %105 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8651
  call void @sw_setup(%struct.ksz_hw* %105) #12, !dbg !8652
  br label %if.end132, !dbg !8652

if.else:                                          ; preds = %if.end128
  %106 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8653
  %wol_support = getelementptr inbounds %struct.dev_info, %struct.dev_info* %106, i32 0, i32 18, !dbg !8655
  store i32 63, i32* %wol_support, align 4, !dbg !8656
  %107 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8657
  %wol_enable = getelementptr inbounds %struct.dev_info, %struct.dev_info* %107, i32 0, i32 17, !dbg !8658
  store i32 0, i32* %wol_enable, align 8, !dbg !8659
  br label %if.end132

if.end132:                                        ; preds = %if.else, %if.then131
  br label %do.body133, !dbg !8660

do.body133:                                       ; preds = %if.end132
  %108 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8661
  %mib_read = getelementptr inbounds %struct.dev_info, %struct.dev_info* %108, i32 0, i32 10, !dbg !8661
  call void @__init_work(%struct.work_struct* %mib_read, i32 0) #12, !dbg !8661
  %109 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8661
  %mib_read134 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %109, i32 0, i32 10, !dbg !8661
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %mib_read134, i32 0, i32 0, !dbg !8661
  %counter136 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral135, i32 0, i32 0, !dbg !8661
  store i64 68719476704, i64* %counter136, align 8, !dbg !8661
  %110 = bitcast %struct.atomic64_t* %data to i8*, !dbg !8661
  %111 = bitcast %struct.atomic64_t* %.compoundliteral135 to i8*, !dbg !8661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 8, i1 false), !dbg !8661
  %112 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8661
  %mib_read137 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %112, i32 0, i32 10, !dbg !8661
  %entry138 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %mib_read137, i32 0, i32 1, !dbg !8661
  call void @INIT_LIST_HEAD(%struct.list_head* %entry138) #12, !dbg !8661
  %113 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8661
  %mib_read139 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %113, i32 0, i32 10, !dbg !8661
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %mib_read139, i32 0, i32 2, !dbg !8661
  store void (%struct.work_struct*)* @mib_read_work, void (%struct.work_struct*)** %func, align 8, !dbg !8661
  br label %do.end140, !dbg !8661

do.end140:                                        ; preds = %do.body133
  %114 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8663
  %mib_timer_info = getelementptr inbounds %struct.dev_info, %struct.dev_info* %114, i32 0, i32 11, !dbg !8664
  call void @ksz_init_timer(%struct.ksz_timer_info* %mib_timer_info, i32 125, void (%struct.timer_list*)* @mib_monitor) #12, !dbg !8665
  store i32 0, i32* %i, align 4, !dbg !8666
  br label %for.cond141, !dbg !8668

for.cond141:                                      ; preds = %for.inc216, %do.end140
  %115 = load i32, i32* %i, align 4, !dbg !8669
  %116 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8671
  %dev_count142 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %116, i32 0, i32 4, !dbg !8672
  %117 = load i32, i32* %dev_count142, align 8, !dbg !8672
  %cmp143 = icmp slt i32 %115, %117, !dbg !8673
  br i1 %cmp143, label %for.body145, label %for.end218, !dbg !8674

for.body145:                                      ; preds = %for.cond141
  %call146 = call %struct.net_device* @alloc_etherdev_mqs(i32 232, i32 1, i32 1) #12, !dbg !8675
  store %struct.net_device* %call146, %struct.net_device** %dev, align 8, !dbg !8677
  %118 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8678
  %tobool147 = icmp ne %struct.net_device* %118, null, !dbg !8678
  br i1 %tobool147, label %if.end149, label %if.then148, !dbg !8680

if.then148:                                       ; preds = %for.body145
  br label %pcidev_init_reg_err, !dbg !8681

if.end149:                                        ; preds = %for.body145
  %119 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8682
  %dev150 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %119, i32 0, i32 41, !dbg !8682
  %120 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8682
  %dev151 = getelementptr inbounds %struct.net_device, %struct.net_device* %120, i32 0, i32 106, !dbg !8682
  %parent152 = getelementptr inbounds %struct.device, %struct.device* %dev151, i32 0, i32 1, !dbg !8682
  store %struct.device* %dev150, %struct.device** %parent152, align 8, !dbg !8682
  %121 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8683
  %122 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8684
  %netdev = getelementptr inbounds %struct.platform_info, %struct.platform_info* %122, i32 0, i32 1, !dbg !8685
  %123 = load i32, i32* %i, align 4, !dbg !8686
  %idxprom153 = sext i32 %123 to i64, !dbg !8684
  %arrayidx154 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev, i64 0, i64 %idxprom153, !dbg !8684
  store %struct.net_device* %121, %struct.net_device** %arrayidx154, align 8, !dbg !8687
  %124 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8688
  %call155 = call i8* @netdev_priv(%struct.net_device* %124) #12, !dbg !8689
  %125 = bitcast i8* %call155 to %struct.dev_priv*, !dbg !8689
  store %struct.dev_priv* %125, %struct.dev_priv** %priv, align 8, !dbg !8690
  %126 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8691
  %127 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !8692
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %127, i32 0, i32 0, !dbg !8693
  store %struct.dev_info* %126, %struct.dev_info** %adapter, align 8, !dbg !8694
  %128 = load i32, i32* @net_device_present, align 4, !dbg !8695
  %inc156 = add i32 %128, 1, !dbg !8695
  store i32 %inc156, i32* @net_device_present, align 4, !dbg !8695
  %129 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !8696
  %id157 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %129, i32 0, i32 4, !dbg !8697
  store i32 %128, i32* %id157, align 8, !dbg !8698
  %130 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !8699
  %port158 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %130, i32 0, i32 1, !dbg !8700
  store %struct.ksz_port* %port158, %struct.ksz_port** %port, align 8, !dbg !8701
  %131 = load i32, i32* %port_count, align 4, !dbg !8702
  %132 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8703
  %port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %132, i32 0, i32 6, !dbg !8704
  store i32 %131, i32* %port_cnt, align 4, !dbg !8705
  %133 = load i32, i32* %mib_port_count, align 4, !dbg !8706
  %134 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8707
  %mib_port_cnt159 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %134, i32 0, i32 5, !dbg !8708
  store i32 %133, i32* %mib_port_cnt159, align 8, !dbg !8709
  %135 = load i32, i32* %i, align 4, !dbg !8710
  %136 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8711
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %136, i32 0, i32 4, !dbg !8712
  store i32 %135, i32* %first_port, align 4, !dbg !8713
  %137 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8714
  %flow_ctrl = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %137, i32 0, i32 3, !dbg !8715
  store i8 1, i8* %flow_ctrl, align 1, !dbg !8716
  %138 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8717
  %139 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8718
  %hw160 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %139, i32 0, i32 8, !dbg !8719
  store %struct.ksz_hw* %138, %struct.ksz_hw** %hw160, align 8, !dbg !8720
  %140 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8721
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %140, i32 0, i32 2, !dbg !8722
  %141 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8723
  %first_port161 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %141, i32 0, i32 4, !dbg !8724
  %142 = load i32, i32* %first_port161, align 4, !dbg !8724
  %idxprom162 = sext i32 %142 to i64, !dbg !8721
  %arrayidx163 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 %idxprom162, !dbg !8721
  %143 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8725
  %linked = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %143, i32 0, i32 9, !dbg !8726
  store %struct.ksz_port_info* %arrayidx163, %struct.ksz_port_info** %linked, align 8, !dbg !8727
  store i32 0, i32* %cnt, align 4, !dbg !8728
  %144 = load i32, i32* %i, align 4, !dbg !8730
  store i32 %144, i32* %pi, align 4, !dbg !8731
  br label %for.cond164, !dbg !8732

for.cond164:                                      ; preds = %for.inc179, %if.end149
  %145 = load i32, i32* %cnt, align 4, !dbg !8733
  %146 = load i32, i32* %port_count, align 4, !dbg !8735
  %cmp165 = icmp slt i32 %145, %146, !dbg !8736
  br i1 %cmp165, label %for.body167, label %for.end182, !dbg !8737

for.body167:                                      ; preds = %for.cond164
  %147 = load i32, i32* %pi, align 4, !dbg !8738
  %conv168 = trunc i32 %147 to i8, !dbg !8738
  %148 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8740
  %port_info169 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %148, i32 0, i32 2, !dbg !8741
  %149 = load i32, i32* %pi, align 4, !dbg !8742
  %idxprom170 = sext i32 %149 to i64, !dbg !8740
  %arrayidx171 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info169, i64 0, i64 %idxprom170, !dbg !8740
  %port_id = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx171, i32 0, i32 5, !dbg !8743
  store i8 %conv168, i8* %port_id, align 1, !dbg !8744
  %150 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8745
  %151 = bitcast %struct.net_device* %150 to i8*, !dbg !8745
  %152 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8746
  %port_info172 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %152, i32 0, i32 2, !dbg !8747
  %153 = load i32, i32* %pi, align 4, !dbg !8748
  %idxprom173 = sext i32 %153 to i64, !dbg !8746
  %arrayidx174 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info172, i64 0, i64 %idxprom173, !dbg !8746
  %pdev175 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx174, i32 0, i32 6, !dbg !8749
  store i8* %151, i8** %pdev175, align 8, !dbg !8750
  %154 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8751
  %port_info176 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %154, i32 0, i32 2, !dbg !8752
  %155 = load i32, i32* %pi, align 4, !dbg !8753
  %idxprom177 = sext i32 %155 to i64, !dbg !8751
  %arrayidx178 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info176, i64 0, i64 %idxprom177, !dbg !8751
  %state = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx178, i32 0, i32 0, !dbg !8754
  store i32 1, i32* %state, align 8, !dbg !8755
  br label %for.inc179, !dbg !8756

for.inc179:                                       ; preds = %for.body167
  %156 = load i32, i32* %cnt, align 4, !dbg !8757
  %inc180 = add i32 %156, 1, !dbg !8757
  store i32 %inc180, i32* %cnt, align 4, !dbg !8757
  %157 = load i32, i32* %pi, align 4, !dbg !8758
  %inc181 = add i32 %157, 1, !dbg !8758
  store i32 %inc181, i32* %pi, align 4, !dbg !8758
  br label %for.cond164, !dbg !8759, !llvm.loop !8760

for.end182:                                       ; preds = %for.cond164
  %158 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8762
  %io183 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %158, i32 0, i32 0, !dbg !8763
  %159 = load i8*, i8** %io183, align 8, !dbg !8763
  %160 = ptrtoint i8* %159 to i64, !dbg !8764
  %161 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8765
  %mem_start = getelementptr inbounds %struct.net_device, %struct.net_device* %161, i32 0, i32 4, !dbg !8766
  store i64 %160, i64* %mem_start, align 8, !dbg !8767
  %162 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8768
  %mem_start184 = getelementptr inbounds %struct.net_device, %struct.net_device* %162, i32 0, i32 4, !dbg !8769
  %163 = load i64, i64* %mem_start184, align 8, !dbg !8769
  %164 = load i64, i64* %reg_len, align 8, !dbg !8770
  %add185 = add i64 %163, %164, !dbg !8771
  %sub186 = sub i64 %add185, 1, !dbg !8772
  %165 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8773
  %mem_end = getelementptr inbounds %struct.net_device, %struct.net_device* %165, i32 0, i32 3, !dbg !8774
  store i64 %sub186, i64* %mem_end, align 8, !dbg !8775
  %166 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8776
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %166, i32 0, i32 43, !dbg !8777
  %167 = load i32, i32* %irq, align 4, !dbg !8777
  %168 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8778
  %irq187 = getelementptr inbounds %struct.net_device, %struct.net_device* %168, i32 0, i32 6, !dbg !8779
  store i32 %167, i32* %irq187, align 8, !dbg !8780
  %169 = load i32, i32* %i, align 4, !dbg !8781
  %cmp188 = icmp eq i32 0, %169, !dbg !8783
  br i1 %cmp188, label %if.then190, label %if.else194, !dbg !8784

if.then190:                                       ; preds = %for.end182
  %170 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8785
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %170, i32 0, i32 74, !dbg !8786
  %171 = load i8*, i8** %dev_addr, align 8, !dbg !8786
  %172 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8787
  %hw191 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %172, i32 0, i32 2, !dbg !8788
  %override_addr192 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw191, i32 0, i32 20, !dbg !8789
  %arraydecay193 = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr192, i64 0, i64 0, !dbg !8790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %171, i8* align 2 %arraydecay193, i64 6, i1 false), !dbg !8790
  br label %if.end211, !dbg !8790

if.else194:                                       ; preds = %for.end182
  %173 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8791
  %dev_addr195 = getelementptr inbounds %struct.net_device, %struct.net_device* %173, i32 0, i32 74, !dbg !8793
  %174 = load i8*, i8** %dev_addr195, align 8, !dbg !8793
  %175 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !8794
  %other_addr196 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %175, i32 0, i32 6, !dbg !8795
  %arraydecay197 = getelementptr inbounds [6 x i8], [6 x i8]* %other_addr196, i64 0, i64 0, !dbg !8796
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %174, i8* align 2 %arraydecay197, i64 6, i1 false), !dbg !8796
  %176 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !8797
  %other_addr198 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %176, i32 0, i32 6, !dbg !8799
  %arraydecay199 = getelementptr inbounds [6 x i8], [6 x i8]* %other_addr198, i64 0, i64 0, !dbg !8797
  %177 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8800
  %override_addr200 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %177, i32 0, i32 20, !dbg !8801
  %arraydecay201 = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr200, i64 0, i64 0, !dbg !8800
  %call202 = call zeroext i1 @ether_addr_equal(i8* %arraydecay199, i8* %arraydecay201) #12, !dbg !8802
  br i1 %call202, label %if.then203, label %if.end210, !dbg !8803

if.then203:                                       ; preds = %if.else194
  %178 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8804
  %first_port204 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %178, i32 0, i32 4, !dbg !8805
  %179 = load i32, i32* %first_port204, align 4, !dbg !8805
  %180 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8806
  %dev_addr205 = getelementptr inbounds %struct.net_device, %struct.net_device* %180, i32 0, i32 74, !dbg !8807
  %181 = load i8*, i8** %dev_addr205, align 8, !dbg !8807
  %arrayidx206 = getelementptr i8, i8* %181, i64 5, !dbg !8806
  %182 = load i8, i8* %arrayidx206, align 1, !dbg !8808
  %conv207 = zext i8 %182 to i32, !dbg !8808
  %add208 = add i32 %conv207, %179, !dbg !8808
  %conv209 = trunc i32 %add208 to i8, !dbg !8808
  store i8 %conv209, i8* %arrayidx206, align 1, !dbg !8808
  br label %if.end210, !dbg !8806

if.end210:                                        ; preds = %if.then203, %if.else194
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then190
  %183 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8809
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %183, i32 0, i32 32, !dbg !8810
  store %struct.net_device_ops* @netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !8811
  %184 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8812
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %184, i32 0, i32 33, !dbg !8813
  store %struct.ethtool_ops* @netdev_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !8814
  %185 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8815
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %185, i32 0, i32 45, !dbg !8816
  store i32 60, i32* %min_mtu, align 4, !dbg !8817
  %186 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8818
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %186, i32 0, i32 46, !dbg !8819
  store i32 1894, i32* %max_mtu, align 8, !dbg !8820
  %187 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8821
  %call212 = call i32 @register_netdev(%struct.net_device* %187) #12, !dbg !8823
  %tobool213 = icmp ne i32 %call212, 0, !dbg !8823
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !8824

if.then214:                                       ; preds = %if.end211
  br label %pcidev_init_reg_err, !dbg !8825

if.end215:                                        ; preds = %if.end211
  %188 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !8826
  call void @port_set_power_saving(%struct.ksz_port* %188, i32 1) #12, !dbg !8827
  br label %for.inc216, !dbg !8828

for.inc216:                                       ; preds = %if.end215
  %189 = load i32, i32* %i, align 4, !dbg !8829
  %inc217 = add i32 %189, 1, !dbg !8829
  store i32 %inc217, i32* %i, align 4, !dbg !8829
  br label %for.cond141, !dbg !8830, !llvm.loop !8831

for.end218:                                       ; preds = %for.cond141
  %190 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8833
  %pdev219 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %190, i32 0, i32 1, !dbg !8834
  %191 = load %struct.pci_dev*, %struct.pci_dev** %pdev219, align 8, !dbg !8834
  %call220 = call %struct.pci_dev* @pci_dev_get(%struct.pci_dev* %191) #12, !dbg !8835
  %192 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8836
  %193 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8837
  %194 = bitcast %struct.platform_info* %193 to i8*, !dbg !8837
  call void @pci_set_drvdata(%struct.pci_dev* %192, i8* %194) #12, !dbg !8838
  store i32 0, i32* %retval, align 4, !dbg !8839
  br label %return, !dbg !8839

pcidev_init_reg_err:                              ; preds = %if.then214, %if.then148
  call void @llvm.dbg.label(metadata !8840), !dbg !8841
  store i32 0, i32* %i, align 4, !dbg !8842
  br label %for.cond221, !dbg !8844

for.cond221:                                      ; preds = %for.inc238, %pcidev_init_reg_err
  %195 = load i32, i32* %i, align 4, !dbg !8845
  %196 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8847
  %dev_count222 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %196, i32 0, i32 4, !dbg !8848
  %197 = load i32, i32* %dev_count222, align 8, !dbg !8848
  %cmp223 = icmp slt i32 %195, %197, !dbg !8849
  br i1 %cmp223, label %for.body225, label %for.end240, !dbg !8850

for.body225:                                      ; preds = %for.cond221
  %198 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8851
  %netdev226 = getelementptr inbounds %struct.platform_info, %struct.platform_info* %198, i32 0, i32 1, !dbg !8854
  %199 = load i32, i32* %i, align 4, !dbg !8855
  %idxprom227 = sext i32 %199 to i64, !dbg !8851
  %arrayidx228 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev226, i64 0, i64 %idxprom227, !dbg !8851
  %200 = load %struct.net_device*, %struct.net_device** %arrayidx228, align 8, !dbg !8851
  %tobool229 = icmp ne %struct.net_device* %200, null, !dbg !8851
  br i1 %tobool229, label %if.then230, label %if.end237, !dbg !8856

if.then230:                                       ; preds = %for.body225
  %201 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8857
  %netdev231 = getelementptr inbounds %struct.platform_info, %struct.platform_info* %201, i32 0, i32 1, !dbg !8859
  %202 = load i32, i32* %i, align 4, !dbg !8860
  %idxprom232 = sext i32 %202 to i64, !dbg !8857
  %arrayidx233 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev231, i64 0, i64 %idxprom232, !dbg !8857
  %203 = load %struct.net_device*, %struct.net_device** %arrayidx233, align 8, !dbg !8857
  call void @netdev_free(%struct.net_device* %203) #12, !dbg !8861
  %204 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8862
  %netdev234 = getelementptr inbounds %struct.platform_info, %struct.platform_info* %204, i32 0, i32 1, !dbg !8863
  %205 = load i32, i32* %i, align 4, !dbg !8864
  %idxprom235 = sext i32 %205 to i64, !dbg !8862
  %arrayidx236 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev234, i64 0, i64 %idxprom235, !dbg !8862
  store %struct.net_device* null, %struct.net_device** %arrayidx236, align 8, !dbg !8865
  br label %if.end237, !dbg !8866

if.end237:                                        ; preds = %if.then230, %for.body225
  br label %for.inc238, !dbg !8867

for.inc238:                                       ; preds = %if.end237
  %206 = load i32, i32* %i, align 4, !dbg !8868
  %inc239 = add i32 %206, 1, !dbg !8868
  store i32 %inc239, i32* %i, align 4, !dbg !8868
  br label %for.cond221, !dbg !8869, !llvm.loop !8870

for.end240:                                       ; preds = %for.cond221
  br label %pcidev_init_mem_err, !dbg !8871

pcidev_init_mem_err:                              ; preds = %for.end240, %if.then90
  call void @llvm.dbg.label(metadata !8872), !dbg !8873
  %207 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8874
  call void @ksz_free_mem(%struct.dev_info* %207) #12, !dbg !8875
  %208 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8876
  %ksz_switch241 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %208, i32 0, i32 1, !dbg !8877
  %209 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch241, align 8, !dbg !8877
  %210 = bitcast %struct.ksz_switch* %209 to i8*, !dbg !8876
  call void @kfree(i8* %210) #12, !dbg !8878
  br label %pcidev_init_alloc_err, !dbg !8878

pcidev_init_alloc_err:                            ; preds = %pcidev_init_mem_err, %if.then80, %if.end51
  call void @llvm.dbg.label(metadata !8879), !dbg !8880
  %211 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !8881
  %io242 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %211, i32 0, i32 0, !dbg !8882
  %212 = load i8*, i8** %io242, align 8, !dbg !8882
  call void @iounmap(i8* %212) #12, !dbg !8883
  br label %pcidev_init_io_err, !dbg !8883

pcidev_init_io_err:                               ; preds = %pcidev_init_alloc_err, %if.then42
  call void @llvm.dbg.label(metadata !8884), !dbg !8885
  %213 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8886
  %214 = bitcast %struct.platform_info* %213 to i8*, !dbg !8886
  call void @kfree(i8* %214) #12, !dbg !8887
  br label %pcidev_init_dev_err, !dbg !8887

pcidev_init_dev_err:                              ; preds = %pcidev_init_io_err, %if.then35
  call void @llvm.dbg.label(metadata !8888), !dbg !8889
  %215 = load i64, i64* %reg_base, align 8, !dbg !8890
  %216 = load i64, i64* %reg_len, align 8, !dbg !8890
  call void @__release_region(%struct.resource* @iomem_resource, i64 %215, i64 %216) #12, !dbg !8890
  %217 = load i32, i32* %result, align 4, !dbg !8891
  store i32 %217, i32* %retval, align 4, !dbg !8892
  br label %return, !dbg !8892

return:                                           ; preds = %pcidev_init_dev_err, %for.end218, %if.then31, %if.then27, %if.then7, %if.then
  %218 = load i32, i32* %retval, align 4, !dbg !8893
  ret i32 %218, !dbg !8893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcidev_exit(%struct.pci_dev* %pdev) #2 !dbg !8894 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %info = alloca %struct.platform_info*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8895, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8897, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.declare(metadata %struct.platform_info** %info, metadata !8899, metadata !DIExpression()), !dbg !8900
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8901
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !8902
  %1 = bitcast i8* %call to %struct.platform_info*, !dbg !8902
  store %struct.platform_info* %1, %struct.platform_info** %info, align 8, !dbg !8900
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !8903, metadata !DIExpression()), !dbg !8904
  %2 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8905
  %dev_info = getelementptr inbounds %struct.platform_info, %struct.platform_info* %2, i32 0, i32 0, !dbg !8906
  store %struct.dev_info* %dev_info, %struct.dev_info** %hw_priv, align 8, !dbg !8904
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8907
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !8907
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8907
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !8907
  %4 = load i64, i64* %start, align 8, !dbg !8907
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8907
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 44, !dbg !8907
  %arrayidx2 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 0, !dbg !8907
  %start3 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx2, i32 0, i32 0, !dbg !8907
  %6 = load i64, i64* %start3, align 8, !dbg !8907
  %cmp = icmp eq i64 %6, 0, !dbg !8907
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !8907

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8907
  %resource4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 44, !dbg !8907
  %arrayidx5 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource4, i64 0, i64 0, !dbg !8907
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx5, i32 0, i32 1, !dbg !8907
  %8 = load i64, i64* %end, align 8, !dbg !8907
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8907
  %resource6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !8907
  %arrayidx7 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource6, i64 0, i64 0, !dbg !8907
  %start8 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx7, i32 0, i32 0, !dbg !8907
  %10 = load i64, i64* %start8, align 8, !dbg !8907
  %cmp9 = icmp eq i64 %8, %10, !dbg !8907
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !8907

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !8907

cond.false:                                       ; preds = %land.lhs.true, %entry
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8907
  %resource10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 44, !dbg !8907
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource10, i64 0, i64 0, !dbg !8907
  %end12 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 1, !dbg !8907
  %12 = load i64, i64* %end12, align 8, !dbg !8907
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8907
  %resource13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 44, !dbg !8907
  %arrayidx14 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource13, i64 0, i64 0, !dbg !8907
  %start15 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx14, i32 0, i32 0, !dbg !8907
  %14 = load i64, i64* %start15, align 8, !dbg !8907
  %sub = sub i64 %12, %14, !dbg !8907
  %add = add i64 %sub, 1, !dbg !8907
  br label %cond.end, !dbg !8907

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !8907
  call void @__release_region(%struct.resource* @iomem_resource, i64 %4, i64 %cond) #12, !dbg !8907
  store i32 0, i32* %i, align 4, !dbg !8908
  br label %for.cond, !dbg !8910

for.cond:                                         ; preds = %for.inc, %cond.end
  %15 = load i32, i32* %i, align 4, !dbg !8911
  %16 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8913
  %hw = getelementptr inbounds %struct.dev_info, %struct.dev_info* %16, i32 0, i32 2, !dbg !8914
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw, i32 0, i32 4, !dbg !8915
  %17 = load i32, i32* %dev_count, align 8, !dbg !8915
  %cmp16 = icmp slt i32 %15, %17, !dbg !8916
  br i1 %cmp16, label %for.body, label %for.end, !dbg !8917

for.body:                                         ; preds = %for.cond
  %18 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8918
  %netdev = getelementptr inbounds %struct.platform_info, %struct.platform_info* %18, i32 0, i32 1, !dbg !8921
  %19 = load i32, i32* %i, align 4, !dbg !8922
  %idxprom = sext i32 %19 to i64, !dbg !8918
  %arrayidx17 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev, i64 0, i64 %idxprom, !dbg !8918
  %20 = load %struct.net_device*, %struct.net_device** %arrayidx17, align 8, !dbg !8918
  %tobool = icmp ne %struct.net_device* %20, null, !dbg !8918
  br i1 %tobool, label %if.then, label %if.end, !dbg !8923

if.then:                                          ; preds = %for.body
  %21 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8924
  %netdev18 = getelementptr inbounds %struct.platform_info, %struct.platform_info* %21, i32 0, i32 1, !dbg !8925
  %22 = load i32, i32* %i, align 4, !dbg !8926
  %idxprom19 = sext i32 %22 to i64, !dbg !8924
  %arrayidx20 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev18, i64 0, i64 %idxprom19, !dbg !8924
  %23 = load %struct.net_device*, %struct.net_device** %arrayidx20, align 8, !dbg !8924
  call void @netdev_free(%struct.net_device* %23) #12, !dbg !8927
  br label %if.end, !dbg !8927

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8928

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !8929
  %inc = add i32 %24, 1, !dbg !8929
  store i32 %inc, i32* %i, align 4, !dbg !8929
  br label %for.cond, !dbg !8930, !llvm.loop !8931

for.end:                                          ; preds = %for.cond
  %25 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8933
  %hw21 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %25, i32 0, i32 2, !dbg !8935
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw21, i32 0, i32 0, !dbg !8936
  %26 = load i8*, i8** %io, align 8, !dbg !8936
  %tobool22 = icmp ne i8* %26, null, !dbg !8933
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !8937

if.then23:                                        ; preds = %for.end
  %27 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8938
  %hw24 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %27, i32 0, i32 2, !dbg !8939
  %io25 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw24, i32 0, i32 0, !dbg !8940
  %28 = load i8*, i8** %io25, align 8, !dbg !8940
  call void @iounmap(i8* %28) #12, !dbg !8941
  br label %if.end26, !dbg !8941

if.end26:                                         ; preds = %if.then23, %for.end
  %29 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8942
  call void @ksz_free_mem(%struct.dev_info* %29) #12, !dbg !8943
  %30 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8944
  %hw27 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %30, i32 0, i32 2, !dbg !8945
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw27, i32 0, i32 1, !dbg !8946
  %31 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !8946
  %32 = bitcast %struct.ksz_switch* %31 to i8*, !dbg !8944
  call void @kfree(i8* %32) #12, !dbg !8947
  %33 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !8948
  %pdev28 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %33, i32 0, i32 1, !dbg !8949
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev28, align 8, !dbg !8949
  call void @pci_dev_put(%struct.pci_dev* %34) #12, !dbg !8950
  %35 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !8951
  %36 = bitcast %struct.platform_info* %35 to i8*, !dbg !8951
  call void @kfree(i8* %36) #12, !dbg !8952
  ret void, !dbg !8953
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !8954 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8957, metadata !DIExpression()), !dbg !8961
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8967, metadata !DIExpression()), !dbg !8968
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8969, metadata !DIExpression()), !dbg !8970
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8971, metadata !DIExpression()), !dbg !8972
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8973, metadata !DIExpression()), !dbg !8977
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8979, metadata !DIExpression()), !dbg !8983
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8985, metadata !DIExpression()), !dbg !8989
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8994, metadata !DIExpression()), !dbg !8995
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8996, metadata !DIExpression()), !dbg !8997
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8998, metadata !DIExpression()), !dbg !8999
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9000, metadata !DIExpression()), !dbg !9001
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9002, metadata !DIExpression()), !dbg !9003
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9004, metadata !DIExpression()), !dbg !9005
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9006, metadata !DIExpression()), !dbg !9007
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9008, metadata !DIExpression()), !dbg !9009
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9012, metadata !DIExpression()), !dbg !9013
  %0 = load i64, i64* %size.addr, align 8, !dbg !9014
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9015
  %or = or i32 %1, 256, !dbg !9016
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9017
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !9018
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9019

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9020
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9021
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9022

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9023
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9024
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9025
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !9026
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9003
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9027
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9028
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9029
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9030
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9031
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9032
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #15, !dbg !9033
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9033
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9033
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9033
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !9033
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9034
  br label %kmalloc.exit, !dbg !9034

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9035
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9036
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9036
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9038

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9039
  br label %kmalloc_index.exit.i, !dbg !9039

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9040
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9042
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9043

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9044
  br label %kmalloc_index.exit.i, !dbg !9044

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9045
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9047
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9048

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9049
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9050
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9051

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9052
  br label %kmalloc_index.exit.i, !dbg !9052

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9053
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9055
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9056

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9057
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9058
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9059

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9060
  br label %kmalloc_index.exit.i, !dbg !9060

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9061
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9063
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9064

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9065
  br label %kmalloc_index.exit.i, !dbg !9065

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9066
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9068
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9069

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9070
  br label %kmalloc_index.exit.i, !dbg !9070

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9071
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9073
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9074

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9075
  br label %kmalloc_index.exit.i, !dbg !9075

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9076
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9078
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9079

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9080
  br label %kmalloc_index.exit.i, !dbg !9080

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9081
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9083
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9084

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9085
  br label %kmalloc_index.exit.i, !dbg !9085

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9086
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9088
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9089

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9090
  br label %kmalloc_index.exit.i, !dbg !9090

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9091
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9093
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9094

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9095
  br label %kmalloc_index.exit.i, !dbg !9095

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9096
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9098
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9099

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9100
  br label %kmalloc_index.exit.i, !dbg !9100

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9101
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9103
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9104

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9105
  br label %kmalloc_index.exit.i, !dbg !9105

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9106
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9108
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9109

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9110
  br label %kmalloc_index.exit.i, !dbg !9110

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9111
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9113
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9114

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9115
  br label %kmalloc_index.exit.i, !dbg !9115

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9116
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9118
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9119

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9120
  br label %kmalloc_index.exit.i, !dbg !9120

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9121
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9123
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9124

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9125
  br label %kmalloc_index.exit.i, !dbg !9125

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9126
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9128
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9129

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9130
  br label %kmalloc_index.exit.i, !dbg !9130

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9131
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9133
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9134

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9135
  br label %kmalloc_index.exit.i, !dbg !9135

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9136
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9138
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9139

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9140
  br label %kmalloc_index.exit.i, !dbg !9140

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9141
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9143
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9144

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9145
  br label %kmalloc_index.exit.i, !dbg !9145

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9146
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9148
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9149

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9150
  br label %kmalloc_index.exit.i, !dbg !9150

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9151
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9153
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9154

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9155
  br label %kmalloc_index.exit.i, !dbg !9155

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9156
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9158
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9159

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9160
  br label %kmalloc_index.exit.i, !dbg !9160

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9161
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9163
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9164

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9165
  br label %kmalloc_index.exit.i, !dbg !9165

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9166
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9168
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9169

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9170
  br label %kmalloc_index.exit.i, !dbg !9170

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9171
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9173
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9174

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9175
  br label %kmalloc_index.exit.i, !dbg !9175

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9176
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9178
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9179

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9180
  br label %kmalloc_index.exit.i, !dbg !9180

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !9181, !srcloc !9184
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !9185, !srcloc !9188
  unreachable, !dbg !9189

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9190
  store i32 %45, i32* %index.i, align 4, !dbg !9191
  %46 = load i32, i32* %index.i, align 4, !dbg !9192
  %tobool.i = icmp ne i32 %46, 0, !dbg !9192
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9194

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9195
  br label %kmalloc.exit, !dbg !9195

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9196
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9197
  %and.i.i = and i32 %48, 17, !dbg !9197
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9197
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9197
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9197
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9197
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9199

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9200
  br label %kmalloc_type.exit.i, !dbg !9200

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9201
  %and2.i.i = and i32 %49, 1, !dbg !9202
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9201
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9201
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9201
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9203
  br label %kmalloc_type.exit.i, !dbg !9203

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9204
  %idxprom.i = zext i32 %51 to i64, !dbg !9205
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9205
  %52 = load i32, i32* %index.i, align 4, !dbg !9206
  %idxprom6.i = zext i32 %52 to i64, !dbg !9205
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9205
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9205
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9207
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9208
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9209
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9210
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #15, !dbg !9211
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9211
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9211
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9211
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !9211
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8972
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9212
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9213
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9214
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9215
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #15, !dbg !9216
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9217
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9218
  store i8* %62, i8** %retval.i, align 8, !dbg !9219
  br label %kmalloc.exit, !dbg !9219

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9220
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9221
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #15, !dbg !9222
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9222
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9222
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9222
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !9222
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9223
  br label %kmalloc.exit, !dbg !9223

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9224
  ret i8* %65, !dbg !9225
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_init(%struct.ksz_hw* %hw) #2 !dbg !9226 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %rc = alloca i32, align 4
  %data = alloca i16, align 2
  %revision = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !9229, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9231, metadata !DIExpression()), !dbg !9232
  store i32 0, i32* %rc, align 4, !dbg !9232
  call void @llvm.dbg.declare(metadata i16* %data, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata i16* %revision, metadata !9235, metadata !DIExpression()), !dbg !9236
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9237
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !9238
  %1 = load i8*, i8** %io, align 8, !dbg !9238
  %add.ptr = getelementptr i8, i8* %1, i64 528, !dbg !9239
  call void @writew(i16 zeroext 0, i8* %add.ptr) #12, !dbg !9240
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9241
  %io1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !9242
  %3 = load i8*, i8** %io1, align 8, !dbg !9242
  %add.ptr2 = getelementptr i8, i8* %3, i64 1024, !dbg !9243
  %call = call zeroext i16 @readw(i8* %add.ptr2) #12, !dbg !9244
  store i16 %call, i16* %data, align 2, !dbg !9245
  %4 = load i16, i16* %data, align 2, !dbg !9246
  %conv = zext i16 %4 to i32, !dbg !9246
  %and = and i32 %conv, 14, !dbg !9247
  %shr = ashr i32 %and, 1, !dbg !9248
  %conv3 = trunc i32 %shr to i16, !dbg !9249
  store i16 %conv3, i16* %revision, align 2, !dbg !9250
  %5 = load i16, i16* %data, align 2, !dbg !9251
  %conv4 = zext i16 %5 to i32, !dbg !9251
  %and5 = and i32 %conv4, 65296, !dbg !9251
  %conv6 = trunc i32 %and5 to i16, !dbg !9251
  store i16 %conv6, i16* %data, align 2, !dbg !9251
  %6 = load i16, i16* %data, align 2, !dbg !9252
  %conv7 = zext i16 %6 to i32, !dbg !9252
  %cmp = icmp eq i32 34832, %conv7, !dbg !9254
  br i1 %cmp, label %if.then, label %if.else, !dbg !9255

if.then:                                          ; preds = %entry
  store i32 1, i32* %rc, align 4, !dbg !9256
  br label %if.end14, !dbg !9257

if.else:                                          ; preds = %entry
  %7 = load i16, i16* %data, align 2, !dbg !9258
  %conv9 = zext i16 %7 to i32, !dbg !9258
  %cmp10 = icmp eq i32 34816, %conv9, !dbg !9260
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !9261

if.then12:                                        ; preds = %if.else
  store i32 2, i32* %rc, align 4, !dbg !9262
  br label %if.end, !dbg !9263

if.else13:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !9264
  br label %return, !dbg !9264

if.end:                                           ; preds = %if.then12
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %8 = load i16, i16* %revision, align 2, !dbg !9265
  %conv15 = zext i16 %8 to i32, !dbg !9265
  %cmp16 = icmp sle i32 %conv15, 1, !dbg !9267
  br i1 %cmp16, label %if.then18, label %if.end25, !dbg !9268

if.then18:                                        ; preds = %if.end14
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9269
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 32, !dbg !9271
  %10 = load i32, i32* %features, align 8, !dbg !9272
  %or = or i32 %10, 2, !dbg !9272
  store i32 %or, i32* %features, align 8, !dbg !9272
  %11 = load i32, i32* %rc, align 4, !dbg !9273
  %cmp19 = icmp eq i32 1, %11, !dbg !9275
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !9276

if.then21:                                        ; preds = %if.then18
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9277
  %features22 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 32, !dbg !9278
  %13 = load i32, i32* %features22, align 8, !dbg !9279
  %or23 = or i32 %13, 4, !dbg !9279
  store i32 %or23, i32* %features22, align 8, !dbg !9279
  br label %if.end24, !dbg !9277

if.end24:                                         ; preds = %if.then21, %if.then18
  br label %if.end25, !dbg !9280

if.end25:                                         ; preds = %if.end24, %if.end14
  %14 = load i32, i32* %rc, align 4, !dbg !9281
  store i32 %14, i32* %retval, align 4, !dbg !9282
  br label %return, !dbg !9282

return:                                           ; preds = %if.end25, %if.else13
  %15 = load i32, i32* %retval, align 4, !dbg !9283
  ret i32 %15, !dbg !9283
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ksz_alloc_mem(%struct.dev_info* %adapter) #2 !dbg !9284 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.dev_info* %adapter, %struct.dev_info** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %adapter.addr, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !9287, metadata !DIExpression()), !dbg !9288
  %0 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !9289
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !9290
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !9288
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9291
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 14, !dbg !9292
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info, i32 0, i32 5, !dbg !9293
  store i32 64, i32* %alloc, align 8, !dbg !9294
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9295
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 15, !dbg !9296
  %alloc2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info, i32 0, i32 5, !dbg !9297
  store i32 64, i32* %alloc2, align 8, !dbg !9298
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9299
  %tx_int_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 16, !dbg !9300
  store i32 0, i32* %tx_int_cnt, align 8, !dbg !9301
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9302
  %tx_int_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 17, !dbg !9303
  store i32 16, i32* %tx_int_mask, align 4, !dbg !9304
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9305
  %tx_int_mask3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 17, !dbg !9307
  %6 = load i32, i32* %tx_int_mask3, align 4, !dbg !9307
  %cmp = icmp sgt i32 %6, 8, !dbg !9308
  br i1 %cmp, label %if.then, label %if.end, !dbg !9309

if.then:                                          ; preds = %entry
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9310
  %tx_int_mask4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 17, !dbg !9311
  store i32 8, i32* %tx_int_mask4, align 4, !dbg !9312
  br label %if.end, !dbg !9310

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !9313

while.cond:                                       ; preds = %while.body, %if.end
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9314
  %tx_int_mask5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 17, !dbg !9315
  %9 = load i32, i32* %tx_int_mask5, align 4, !dbg !9315
  %tobool = icmp ne i32 %9, 0, !dbg !9313
  br i1 %tobool, label %while.body, label %while.end, !dbg !9313

while.body:                                       ; preds = %while.cond
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9316
  %tx_int_cnt6 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 16, !dbg !9318
  %11 = load i32, i32* %tx_int_cnt6, align 8, !dbg !9319
  %inc = add i32 %11, 1, !dbg !9319
  store i32 %inc, i32* %tx_int_cnt6, align 8, !dbg !9319
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9320
  %tx_int_mask7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 17, !dbg !9321
  %13 = load i32, i32* %tx_int_mask7, align 4, !dbg !9322
  %shr = ashr i32 %13, 1, !dbg !9322
  store i32 %shr, i32* %tx_int_mask7, align 4, !dbg !9322
  br label %while.cond, !dbg !9313, !llvm.loop !9323

while.end:                                        ; preds = %while.cond
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9325
  %tx_int_cnt8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %14, i32 0, i32 16, !dbg !9327
  %15 = load i32, i32* %tx_int_cnt8, align 8, !dbg !9327
  %tobool9 = icmp ne i32 %15, 0, !dbg !9325
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !9328

if.then10:                                        ; preds = %while.end
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9329
  %tx_int_cnt11 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 16, !dbg !9331
  %17 = load i32, i32* %tx_int_cnt11, align 8, !dbg !9331
  %sub = sub i32 %17, 1, !dbg !9332
  %shl = shl i32 1, %sub, !dbg !9333
  %sub12 = sub i32 %shl, 1, !dbg !9334
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9335
  %tx_int_mask13 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 17, !dbg !9336
  store i32 %sub12, i32* %tx_int_mask13, align 4, !dbg !9337
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9338
  %tx_int_cnt14 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %19, i32 0, i32 16, !dbg !9339
  store i32 0, i32* %tx_int_cnt14, align 8, !dbg !9340
  br label %if.end15, !dbg !9341

if.end15:                                         ; preds = %if.then10, %while.end
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9342
  %rx_desc_info16 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %20, i32 0, i32 14, !dbg !9343
  %size = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info16, i32 0, i32 4, !dbg !9344
  store i32 16, i32* %size, align 4, !dbg !9345
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9346
  %tx_desc_info17 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %21, i32 0, i32 15, !dbg !9347
  %size18 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info17, i32 0, i32 4, !dbg !9348
  store i32 16, i32* %size18, align 4, !dbg !9349
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9350
  %rx_desc_info19 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %22, i32 0, i32 14, !dbg !9352
  %size20 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info19, i32 0, i32 4, !dbg !9353
  %23 = load i32, i32* %size20, align 4, !dbg !9353
  %conv = sext i32 %23 to i64, !dbg !9350
  %cmp21 = icmp ne i64 %conv, 16, !dbg !9354
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9355

if.then23:                                        ; preds = %if.end15
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0)) #13, !dbg !9356
  br label %if.end24, !dbg !9356

if.end24:                                         ; preds = %if.then23, %if.end15
  %24 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9357
  %rx_desc_info25 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %24, i32 0, i32 14, !dbg !9358
  call void @ksz_check_desc_num(%struct.ksz_desc_info* %rx_desc_info25) #12, !dbg !9359
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9360
  %tx_desc_info26 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %25, i32 0, i32 15, !dbg !9361
  call void @ksz_check_desc_num(%struct.ksz_desc_info* %tx_desc_info26) #12, !dbg !9362
  %26 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !9363
  %call27 = call i32 @ksz_alloc_desc(%struct.dev_info* %26) #12, !dbg !9365
  %tobool28 = icmp ne i32 %call27, 0, !dbg !9365
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !9366

if.then29:                                        ; preds = %if.end24
  store i32 1, i32* %retval, align 4, !dbg !9367
  br label %return, !dbg !9367

if.end30:                                         ; preds = %if.end24
  store i32 0, i32* %retval, align 4, !dbg !9368
  br label %return, !dbg !9368

return:                                           ; preds = %if.end30, %if.then29
  %27 = load i32, i32* %retval, align 4, !dbg !9369
  ret i32 %27, !dbg !9369
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_mac_addr(%struct.dev_info* %hw_priv, i8* %macaddr, i32 %port) #2 !dbg !9370 {
entry:
  %hw_priv.addr = alloca %struct.dev_info*, align 8
  %macaddr.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %got_num = alloca i32, align 4
  %num = alloca i32, align 4
  %digit = alloca i32, align 4
  store %struct.dev_info* %hw_priv, %struct.dev_info** %hw_priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  store i8* %macaddr, i8** %macaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %macaddr.addr, metadata !9375, metadata !DIExpression()), !dbg !9376
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.declare(metadata i32* %got_num, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata i32* %num, metadata !9385, metadata !DIExpression()), !dbg !9386
  store i32 0, i32* %got_num, align 4, !dbg !9387
  store i32 0, i32* %num, align 4, !dbg !9388
  store i32 0, i32* %j, align 4, !dbg !9389
  store i32 0, i32* %i, align 4, !dbg !9390
  br label %while.cond, !dbg !9391

while.cond:                                       ; preds = %if.end50, %entry
  %0 = load i32, i32* %j, align 4, !dbg !9392
  %cmp = icmp slt i32 %0, 6, !dbg !9393
  br i1 %cmp, label %while.body, label %while.end, !dbg !9391

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %macaddr.addr, align 8, !dbg !9394
  %2 = load i32, i32* %i, align 4, !dbg !9397
  %idxprom = sext i32 %2 to i64, !dbg !9394
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !9394
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9394
  %tobool = icmp ne i8 %3, 0, !dbg !9394
  br i1 %tobool, label %if.then, label %if.else12, !dbg !9398

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !9399, metadata !DIExpression()), !dbg !9401
  store i32 1, i32* %got_num, align 4, !dbg !9402
  %4 = load i8*, i8** %macaddr.addr, align 8, !dbg !9403
  %5 = load i32, i32* %i, align 4, !dbg !9404
  %idxprom1 = sext i32 %5 to i64, !dbg !9403
  %arrayidx2 = getelementptr i8, i8* %4, i64 %idxprom1, !dbg !9403
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !9403
  %call = call i32 @hex_to_bin(i8 signext %6) #12, !dbg !9405
  store i32 %call, i32* %digit, align 4, !dbg !9406
  %7 = load i32, i32* %digit, align 4, !dbg !9407
  %cmp3 = icmp sge i32 %7, 0, !dbg !9409
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !9410

if.then4:                                         ; preds = %if.then
  %8 = load i32, i32* %num, align 4, !dbg !9411
  %mul = mul i32 %8, 16, !dbg !9412
  %9 = load i32, i32* %digit, align 4, !dbg !9413
  %add = add i32 %mul, %9, !dbg !9414
  store i32 %add, i32* %num, align 4, !dbg !9415
  br label %if.end11, !dbg !9416

if.else:                                          ; preds = %if.then
  %10 = load i8*, i8** %macaddr.addr, align 8, !dbg !9417
  %11 = load i32, i32* %i, align 4, !dbg !9419
  %idxprom5 = sext i32 %11 to i64, !dbg !9417
  %arrayidx6 = getelementptr i8, i8* %10, i64 %idxprom5, !dbg !9417
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !9417
  %conv = zext i8 %12 to i32, !dbg !9417
  %cmp7 = icmp eq i32 58, %conv, !dbg !9420
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !9421

if.then9:                                         ; preds = %if.else
  store i32 2, i32* %got_num, align 4, !dbg !9422
  br label %if.end, !dbg !9423

if.else10:                                        ; preds = %if.else
  br label %while.end, !dbg !9424

if.end:                                           ; preds = %if.then9
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then4
  br label %if.end17, !dbg !9425

if.else12:                                        ; preds = %while.body
  %13 = load i32, i32* %got_num, align 4, !dbg !9426
  %tobool13 = icmp ne i32 %13, 0, !dbg !9426
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !9428

if.then14:                                        ; preds = %if.else12
  store i32 2, i32* %got_num, align 4, !dbg !9429
  br label %if.end16, !dbg !9430

if.else15:                                        ; preds = %if.else12
  br label %while.end, !dbg !9431

if.end16:                                         ; preds = %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end11
  %14 = load i32, i32* %got_num, align 4, !dbg !9432
  %cmp18 = icmp eq i32 2, %14, !dbg !9434
  br i1 %cmp18, label %if.then20, label %if.end50, !dbg !9435

if.then20:                                        ; preds = %if.end17
  %15 = load i32, i32* %port.addr, align 4, !dbg !9436
  %cmp21 = icmp eq i32 0, %15, !dbg !9439
  br i1 %cmp21, label %if.then23, label %if.else34, !dbg !9440

if.then23:                                        ; preds = %if.then20
  %16 = load i32, i32* %num, align 4, !dbg !9441
  %conv24 = trunc i32 %16 to i8, !dbg !9443
  %17 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !9444
  %hw = getelementptr inbounds %struct.dev_info, %struct.dev_info* %17, i32 0, i32 2, !dbg !9445
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw, i32 0, i32 20, !dbg !9446
  %18 = load i32, i32* %j, align 4, !dbg !9447
  %inc = add i32 %18, 1, !dbg !9447
  store i32 %inc, i32* %j, align 4, !dbg !9447
  %idxprom25 = sext i32 %18 to i64, !dbg !9444
  %arrayidx26 = getelementptr [6 x i8], [6 x i8]* %override_addr, i64 0, i64 %idxprom25, !dbg !9444
  store i8 %conv24, i8* %arrayidx26, align 1, !dbg !9448
  %19 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !9449
  %hw27 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %19, i32 0, i32 2, !dbg !9450
  %id = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw27, i32 0, i32 6, !dbg !9451
  %20 = load i32, i32* %id, align 8, !dbg !9451
  %21 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !9452
  %hw28 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %21, i32 0, i32 2, !dbg !9453
  %override_addr29 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw28, i32 0, i32 20, !dbg !9454
  %arrayidx30 = getelementptr [6 x i8], [6 x i8]* %override_addr29, i64 0, i64 5, !dbg !9452
  %22 = load i8, i8* %arrayidx30, align 1, !dbg !9455
  %conv31 = zext i8 %22 to i32, !dbg !9455
  %add32 = add i32 %conv31, %20, !dbg !9455
  %conv33 = trunc i32 %add32 to i8, !dbg !9455
  store i8 %conv33, i8* %arrayidx30, align 1, !dbg !9455
  br label %if.end49, !dbg !9456

if.else34:                                        ; preds = %if.then20
  %23 = load i32, i32* %num, align 4, !dbg !9457
  %conv35 = trunc i32 %23 to i8, !dbg !9459
  %24 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !9460
  %hw36 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %24, i32 0, i32 2, !dbg !9461
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw36, i32 0, i32 1, !dbg !9462
  %25 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !9462
  %other_addr = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %25, i32 0, i32 6, !dbg !9463
  %26 = load i32, i32* %j, align 4, !dbg !9464
  %inc37 = add i32 %26, 1, !dbg !9464
  store i32 %inc37, i32* %j, align 4, !dbg !9464
  %idxprom38 = sext i32 %26 to i64, !dbg !9460
  %arrayidx39 = getelementptr [6 x i8], [6 x i8]* %other_addr, i64 0, i64 %idxprom38, !dbg !9460
  store i8 %conv35, i8* %arrayidx39, align 1, !dbg !9465
  %27 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !9466
  %hw40 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %27, i32 0, i32 2, !dbg !9467
  %id41 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw40, i32 0, i32 6, !dbg !9468
  %28 = load i32, i32* %id41, align 8, !dbg !9468
  %29 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !9469
  %hw42 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %29, i32 0, i32 2, !dbg !9470
  %ksz_switch43 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw42, i32 0, i32 1, !dbg !9471
  %30 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch43, align 8, !dbg !9471
  %other_addr44 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %30, i32 0, i32 6, !dbg !9472
  %arrayidx45 = getelementptr [6 x i8], [6 x i8]* %other_addr44, i64 0, i64 5, !dbg !9469
  %31 = load i8, i8* %arrayidx45, align 1, !dbg !9473
  %conv46 = zext i8 %31 to i32, !dbg !9473
  %add47 = add i32 %conv46, %28, !dbg !9473
  %conv48 = trunc i32 %add47 to i8, !dbg !9473
  store i8 %conv48, i8* %arrayidx45, align 1, !dbg !9473
  br label %if.end49

if.end49:                                         ; preds = %if.else34, %if.then23
  store i32 0, i32* %got_num, align 4, !dbg !9474
  store i32 0, i32* %num, align 4, !dbg !9475
  br label %if.end50, !dbg !9476

if.end50:                                         ; preds = %if.end49, %if.end17
  %32 = load i32, i32* %i, align 4, !dbg !9477
  %inc51 = add i32 %32, 1, !dbg !9477
  store i32 %inc51, i32* %i, align 4, !dbg !9477
  br label %while.cond, !dbg !9391, !llvm.loop !9478

while.end:                                        ; preds = %if.else15, %if.else10, %while.cond
  %33 = load i32, i32* %j, align 4, !dbg !9480
  %cmp52 = icmp eq i32 6, %33, !dbg !9482
  br i1 %cmp52, label %if.then54, label %if.end60, !dbg !9483

if.then54:                                        ; preds = %while.end
  %34 = load i32, i32* %port.addr, align 4, !dbg !9484
  %cmp55 = icmp eq i32 0, %34, !dbg !9487
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !9488

if.then57:                                        ; preds = %if.then54
  %35 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !9489
  %hw58 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %35, i32 0, i32 2, !dbg !9490
  %mac_override = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw58, i32 0, i32 23, !dbg !9491
  store i8 1, i8* %mac_override, align 1, !dbg !9492
  br label %if.end59, !dbg !9489

if.end59:                                         ; preds = %if.then57, %if.then54
  br label %if.end60, !dbg !9493

if.end60:                                         ; preds = %if.end59, %while.end
  ret void, !dbg !9494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_read_addr(%struct.ksz_hw* %hw) #2 !dbg !9495 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9498, metadata !DIExpression()), !dbg !9499
  store i32 0, i32* %i, align 4, !dbg !9500
  br label %for.cond, !dbg !9502

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9503
  %cmp = icmp slt i32 %0, 6, !dbg !9505
  br i1 %cmp, label %for.body, label %for.end, !dbg !9506

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9507
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 0, !dbg !9508
  %2 = load i8*, i8** %io, align 8, !dbg !9508
  %add.ptr = getelementptr i8, i8* %2, i64 512, !dbg !9509
  %3 = load i32, i32* %i, align 4, !dbg !9510
  %idx.ext = sext i32 %3 to i64, !dbg !9511
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !9511
  %call = call zeroext i8 @readb(i8* %add.ptr1) #12, !dbg !9512
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9513
  %perm_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 19, !dbg !9514
  %5 = load i32, i32* %i, align 4, !dbg !9515
  %sub = sub i32 5, %5, !dbg !9515
  %idxprom = sext i32 %sub to i64, !dbg !9513
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %perm_addr, i64 0, i64 %idxprom, !dbg !9513
  store i8 %call, i8* %arrayidx, align 1, !dbg !9516
  br label %for.inc, !dbg !9513

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !9517
  %inc = add i32 %6, 1, !dbg !9517
  store i32 %inc, i32* %i, align 4, !dbg !9517
  br label %for.cond, !dbg !9518, !llvm.loop !9519

for.end:                                          ; preds = %for.cond
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9521
  %mac_override = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 23, !dbg !9523
  %8 = load i8, i8* %mac_override, align 1, !dbg !9523
  %tobool = icmp ne i8 %8, 0, !dbg !9521
  br i1 %tobool, label %if.end16, label %if.then, !dbg !9524

if.then:                                          ; preds = %for.end
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9525
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 20, !dbg !9527
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr, i64 0, i64 0, !dbg !9528
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9529
  %perm_addr2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 19, !dbg !9530
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %perm_addr2, i64 0, i64 0, !dbg !9528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 4 %arraydecay3, i64 6, i1 false), !dbg !9528
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9531
  %override_addr4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 20, !dbg !9533
  %arraydecay5 = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr4, i64 0, i64 0, !dbg !9531
  %call6 = call i32 @empty_addr(i8* %arraydecay5) #12, !dbg !9534
  %tobool7 = icmp ne i32 %call6, 0, !dbg !9534
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !9535

if.then8:                                         ; preds = %if.then
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9536
  %perm_addr9 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 19, !dbg !9538
  %arraydecay10 = getelementptr inbounds [6 x i8], [6 x i8]* %perm_addr9, i64 0, i64 0, !dbg !9539
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay10, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @DEFAULT_MAC_ADDRESS, i64 0, i64 0), i64 6, i1 false), !dbg !9539
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9540
  %override_addr11 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 20, !dbg !9541
  %arraydecay12 = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr11, i64 0, i64 0, !dbg !9542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay12, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @DEFAULT_MAC_ADDRESS, i64 0, i64 0), i64 6, i1 false), !dbg !9542
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9543
  %id = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %14, i32 0, i32 6, !dbg !9544
  %15 = load i32, i32* %id, align 8, !dbg !9544
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9545
  %override_addr13 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 20, !dbg !9546
  %arrayidx14 = getelementptr [6 x i8], [6 x i8]* %override_addr13, i64 0, i64 5, !dbg !9545
  %17 = load i8, i8* %arrayidx14, align 1, !dbg !9547
  %conv = zext i8 %17 to i32, !dbg !9547
  %add = add i32 %conv, %15, !dbg !9547
  %conv15 = trunc i32 %add to i8, !dbg !9547
  store i8 %conv15, i8* %arrayidx14, align 1, !dbg !9547
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9548
  call void @hw_set_addr(%struct.ksz_hw* %18) #12, !dbg !9549
  br label %if.end, !dbg !9550

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end16, !dbg !9551

if.end16:                                         ; preds = %if.end, %for.end
  ret void, !dbg !9552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @read_other_addr(%struct.ksz_hw* %hw) #2 !dbg !9553 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  %data = alloca [3 x i16], align 2
  %sw = alloca %struct.ksz_switch*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9556, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.declare(metadata [3 x i16]* %data, metadata !9558, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.declare(metadata %struct.ksz_switch** %sw, metadata !9561, metadata !DIExpression()), !dbg !9562
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9563
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !9564
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !9564
  store %struct.ksz_switch* %1, %struct.ksz_switch** %sw, align 8, !dbg !9562
  store i32 0, i32* %i, align 4, !dbg !9565
  br label %for.cond, !dbg !9567

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9568
  %cmp = icmp slt i32 %2, 3, !dbg !9570
  br i1 %cmp, label %for.body, label %for.end, !dbg !9571

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9572
  %4 = load i32, i32* %i, align 4, !dbg !9573
  %add = add i32 %4, 9, !dbg !9574
  %conv = trunc i32 %add to i8, !dbg !9573
  %call = call zeroext i16 @eeprom_read(%struct.ksz_hw* %3, i8 zeroext %conv) #12, !dbg !9575
  %5 = load i32, i32* %i, align 4, !dbg !9576
  %idxprom = sext i32 %5 to i64, !dbg !9577
  %arrayidx = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 %idxprom, !dbg !9577
  store i16 %call, i16* %arrayidx, align 2, !dbg !9578
  br label %for.inc, !dbg !9577

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !9579
  %inc = add i32 %6, 1, !dbg !9579
  store i32 %inc, i32* %i, align 4, !dbg !9579
  br label %for.cond, !dbg !9580, !llvm.loop !9581

for.end:                                          ; preds = %for.cond
  %arrayidx1 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 0, !dbg !9583
  %7 = load i16, i16* %arrayidx1, align 2, !dbg !9583
  %conv2 = zext i16 %7 to i32, !dbg !9583
  %tobool = icmp ne i32 %conv2, 0, !dbg !9583
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !9585

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx3 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 1, !dbg !9586
  %8 = load i16, i16* %arrayidx3, align 2, !dbg !9586
  %conv4 = zext i16 %8 to i32, !dbg !9586
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !9586
  br i1 %tobool5, label %land.lhs.true, label %lor.lhs.false6, !dbg !9587

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %arrayidx7 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 2, !dbg !9588
  %9 = load i16, i16* %arrayidx7, align 2, !dbg !9588
  %conv8 = zext i16 %9 to i32, !dbg !9588
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !9588
  br i1 %tobool9, label %land.lhs.true, label %if.end, !dbg !9589

land.lhs.true:                                    ; preds = %lor.lhs.false6, %lor.lhs.false, %for.end
  %arrayidx10 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 0, !dbg !9590
  %10 = load i16, i16* %arrayidx10, align 2, !dbg !9590
  %conv11 = zext i16 %10 to i32, !dbg !9590
  %cmp12 = icmp ne i32 %conv11, 65535, !dbg !9591
  br i1 %cmp12, label %if.then, label %if.end, !dbg !9592

if.then:                                          ; preds = %land.lhs.true
  %arrayidx14 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 0, !dbg !9593
  %11 = load i16, i16* %arrayidx14, align 2, !dbg !9593
  %conv15 = trunc i16 %11 to i8, !dbg !9595
  %12 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !9596
  %other_addr = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %12, i32 0, i32 6, !dbg !9597
  %arrayidx16 = getelementptr [6 x i8], [6 x i8]* %other_addr, i64 0, i64 5, !dbg !9596
  store i8 %conv15, i8* %arrayidx16, align 1, !dbg !9598
  %arrayidx17 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 0, !dbg !9599
  %13 = load i16, i16* %arrayidx17, align 2, !dbg !9599
  %conv18 = zext i16 %13 to i32, !dbg !9599
  %shr = ashr i32 %conv18, 8, !dbg !9600
  %conv19 = trunc i32 %shr to i8, !dbg !9601
  %14 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !9602
  %other_addr20 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %14, i32 0, i32 6, !dbg !9603
  %arrayidx21 = getelementptr [6 x i8], [6 x i8]* %other_addr20, i64 0, i64 4, !dbg !9602
  store i8 %conv19, i8* %arrayidx21, align 2, !dbg !9604
  %arrayidx22 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 1, !dbg !9605
  %15 = load i16, i16* %arrayidx22, align 2, !dbg !9605
  %conv23 = trunc i16 %15 to i8, !dbg !9606
  %16 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !9607
  %other_addr24 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %16, i32 0, i32 6, !dbg !9608
  %arrayidx25 = getelementptr [6 x i8], [6 x i8]* %other_addr24, i64 0, i64 3, !dbg !9607
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !9609
  %arrayidx26 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 1, !dbg !9610
  %17 = load i16, i16* %arrayidx26, align 2, !dbg !9610
  %conv27 = zext i16 %17 to i32, !dbg !9610
  %shr28 = ashr i32 %conv27, 8, !dbg !9611
  %conv29 = trunc i32 %shr28 to i8, !dbg !9612
  %18 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !9613
  %other_addr30 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %18, i32 0, i32 6, !dbg !9614
  %arrayidx31 = getelementptr [6 x i8], [6 x i8]* %other_addr30, i64 0, i64 2, !dbg !9613
  store i8 %conv29, i8* %arrayidx31, align 2, !dbg !9615
  %arrayidx32 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 2, !dbg !9616
  %19 = load i16, i16* %arrayidx32, align 2, !dbg !9616
  %conv33 = trunc i16 %19 to i8, !dbg !9617
  %20 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !9618
  %other_addr34 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %20, i32 0, i32 6, !dbg !9619
  %arrayidx35 = getelementptr [6 x i8], [6 x i8]* %other_addr34, i64 0, i64 1, !dbg !9618
  store i8 %conv33, i8* %arrayidx35, align 1, !dbg !9620
  %arrayidx36 = getelementptr [3 x i16], [3 x i16]* %data, i64 0, i64 2, !dbg !9621
  %21 = load i16, i16* %arrayidx36, align 2, !dbg !9621
  %conv37 = zext i16 %21 to i32, !dbg !9621
  %shr38 = ashr i32 %conv37, 8, !dbg !9622
  %conv39 = trunc i32 %shr38 to i8, !dbg !9623
  %22 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !9624
  %other_addr40 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %22, i32 0, i32 6, !dbg !9625
  %arrayidx41 = getelementptr [6 x i8], [6 x i8]* %other_addr40, i64 0, i64 0, !dbg !9624
  store i8 %conv39, i8* %arrayidx41, align 2, !dbg !9626
  br label %if.end, !dbg !9627

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false6
  ret void, !dbg !9628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_setup(%struct.ksz_hw* %hw) #2 !dbg !9629 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9632
  %tx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 9, !dbg !9633
  store i32 134217735, i32* %tx_cfg, align 4, !dbg !9634
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9635
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 10, !dbg !9636
  store i32 134217809, i32* %rx_cfg, align 8, !dbg !9637
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9638
  %rx_cfg1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 10, !dbg !9639
  %3 = load i32, i32* %rx_cfg1, align 8, !dbg !9640
  %or = or i32 %3, 2, !dbg !9640
  store i32 %or, i32* %rx_cfg1, align 8, !dbg !9640
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9641
  %rx_cfg2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 10, !dbg !9642
  %5 = load i32, i32* %rx_cfg2, align 8, !dbg !9643
  %or3 = or i32 %5, 196608, !dbg !9643
  store i32 %or3, i32* %rx_cfg2, align 8, !dbg !9643
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9644
  %all_multi = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 25, !dbg !9646
  %7 = load i8, i8* %all_multi, align 1, !dbg !9646
  %tobool = icmp ne i8 %7, 0, !dbg !9644
  br i1 %tobool, label %if.then, label %if.end, !dbg !9647

if.then:                                          ; preds = %entry
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9648
  %rx_cfg4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 10, !dbg !9649
  %9 = load i32, i32* %rx_cfg4, align 8, !dbg !9650
  %or5 = or i32 %9, 32, !dbg !9650
  store i32 %or5, i32* %rx_cfg4, align 8, !dbg !9650
  br label %if.end, !dbg !9648

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9651
  %promiscuous = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 24, !dbg !9653
  %11 = load i8, i8* %promiscuous, align 2, !dbg !9653
  %tobool6 = icmp ne i8 %11, 0, !dbg !9651
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !9654

if.then7:                                         ; preds = %if.end
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9655
  %rx_cfg8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 10, !dbg !9656
  %13 = load i32, i32* %rx_cfg8, align 8, !dbg !9657
  %or9 = or i32 %13, 4, !dbg !9657
  store i32 %or9, i32* %rx_cfg8, align 8, !dbg !9657
  br label %if.end10, !dbg !9655

if.end10:                                         ; preds = %if.then7, %if.end
  ret void, !dbg !9658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_setup(%struct.ksz_hw* %hw) #2 !dbg !9659 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.declare(metadata i32* %port, metadata !9662, metadata !DIExpression()), !dbg !9663
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9664
  call void @sw_set_global_ctrl(%struct.ksz_hw* %0) #12, !dbg !9665
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9666
  call void @sw_init_broad_storm(%struct.ksz_hw* %1) #12, !dbg !9667
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9668
  call void @hw_cfg_broad_storm(%struct.ksz_hw* %2, i8 zeroext 10) #12, !dbg !9669
  store i32 0, i32* %port, align 4, !dbg !9670
  br label %for.cond, !dbg !9672

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %port, align 4, !dbg !9673
  %cmp = icmp slt i32 %3, 2, !dbg !9675
  br i1 %cmp, label %for.body, label %for.end, !dbg !9676

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9677
  %5 = load i32, i32* %port, align 4, !dbg !9678
  call void @sw_ena_broad_storm(%struct.ksz_hw* %4, i32 %5) #12, !dbg !9679
  br label %for.inc, !dbg !9679

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %port, align 4, !dbg !9680
  %inc = add i32 %6, 1, !dbg !9680
  store i32 %inc, i32* %port, align 4, !dbg !9680
  br label %for.cond, !dbg !9681, !llvm.loop !9682

for.end:                                          ; preds = %for.cond
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9684
  call void @sw_init_prio(%struct.ksz_hw* %7) #12, !dbg !9685
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9686
  call void @sw_init_mirror(%struct.ksz_hw* %8) #12, !dbg !9687
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9688
  call void @sw_init_prio_rate(%struct.ksz_hw* %9) #12, !dbg !9689
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9690
  call void @sw_init_vlan(%struct.ksz_hw* %10) #12, !dbg !9691
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9692
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 32, !dbg !9694
  %12 = load i32, i32* %features, align 8, !dbg !9694
  %and = and i32 %12, 256, !dbg !9695
  %tobool = icmp ne i32 %and, 0, !dbg !9695
  br i1 %tobool, label %if.then, label %if.end, !dbg !9696

if.then:                                          ; preds = %for.end
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9697
  call void @sw_init_stp(%struct.ksz_hw* %13) #12, !dbg !9698
  br label %if.end, !dbg !9698

if.end:                                           ; preds = %if.then, %for.end
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9699
  %call = call i32 @sw_chk(%struct.ksz_hw* %14, i32 1026, i16 zeroext 12288) #12, !dbg !9701
  %tobool1 = icmp ne i32 %call, 0, !dbg !9701
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !9702

if.then2:                                         ; preds = %if.end
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9703
  %overrides = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %15, i32 0, i32 33, !dbg !9704
  %16 = load i32, i32* %overrides, align 4, !dbg !9705
  %or = or i32 %16, 1, !dbg !9705
  store i32 %or, i32* %overrides, align 4, !dbg !9705
  br label %if.end3, !dbg !9703

if.end3:                                          ; preds = %if.then2, %if.end
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !9706
  call void @sw_enable(%struct.ksz_hw* %17, i32 1) #12, !dbg !9707
  ret void, !dbg !9708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !9709 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !9714, metadata !DIExpression()), !dbg !9715
  ret void, !dbg !9716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !9717 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9721, metadata !DIExpression()), !dbg !9722
  br label %do.body, !dbg !9723

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9724

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9726

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9724

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9728
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9728
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9728
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9728
  br label %do.end3, !dbg !9728

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9724

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9730
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9731
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !9732
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !9733
  ret void, !dbg !9734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mib_read_work(%struct.work_struct* %work) #2 !dbg !9735 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %mib = alloca %struct.ksz_port_mib*, align 8
  %i = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9736, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !9738, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9740, metadata !DIExpression()), !dbg !9742
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9742
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !9742
  store i8* %1, i8** %__mptr, align 8, !dbg !9742
  br label %do.body, !dbg !9742

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9743

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9742
  %add.ptr = getelementptr i8, i8* %2, i64 -1520, !dbg !9742
  %3 = bitcast i8* %add.ptr to %struct.dev_info*, !dbg !9742
  store %struct.dev_info* %3, %struct.dev_info** %tmp, align 8, !dbg !9743
  %4 = load %struct.dev_info*, %struct.dev_info** %tmp, align 8, !dbg !9742
  store %struct.dev_info* %4, %struct.dev_info** %hw_priv, align 8, !dbg !9739
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !9745, metadata !DIExpression()), !dbg !9746
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9747
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 2, !dbg !9748
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !9746
  call void @llvm.dbg.declare(metadata %struct.ksz_port_mib** %mib, metadata !9749, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9752, metadata !DIExpression()), !dbg !9753
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !9754
  store i64 %6, i64* @next_jiffies, align 8, !dbg !9755
  store i32 0, i32* %i, align 4, !dbg !9756
  br label %for.cond, !dbg !9758

for.cond:                                         ; preds = %for.inc, %do.end
  %7 = load i32, i32* %i, align 4, !dbg !9759
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9761
  %mib_port_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 8, !dbg !9762
  %9 = load i32, i32* %mib_port_cnt, align 8, !dbg !9762
  %cmp = icmp slt i32 %7, %9, !dbg !9763
  br i1 %cmp, label %for.body, label %for.end, !dbg !9764

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9765
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 3, !dbg !9767
  %11 = load i32, i32* %i, align 4, !dbg !9768
  %idxprom = sext i32 %11 to i64, !dbg !9765
  %arrayidx = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom, !dbg !9765
  store %struct.ksz_port_mib* %arrayidx, %struct.ksz_port_mib** %mib, align 8, !dbg !9769
  %12 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !9770
  %cnt_ptr = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %12, i32 0, i32 0, !dbg !9772
  %13 = load i8, i8* %cnt_ptr, align 8, !dbg !9772
  %conv = zext i8 %13 to i32, !dbg !9770
  %tobool = icmp ne i32 %conv, 0, !dbg !9770
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9773

lor.lhs.false:                                    ; preds = %for.body
  %14 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9774
  %counter = getelementptr inbounds %struct.dev_info, %struct.dev_info* %14, i32 0, i32 12, !dbg !9775
  %15 = load i32, i32* %i, align 4, !dbg !9776
  %idxprom2 = sext i32 %15 to i64, !dbg !9774
  %arrayidx3 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter, i64 0, i64 %idxprom2, !dbg !9774
  %read = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx3, i32 0, i32 2, !dbg !9777
  %16 = load i32, i32* %read, align 8, !dbg !9777
  %cmp4 = icmp eq i32 1, %16, !dbg !9778
  br i1 %cmp4, label %if.then, label %if.else, !dbg !9779

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9780
  %18 = load i32, i32* %i, align 4, !dbg !9783
  %call = call i32 @port_r_cnt(%struct.ksz_hw* %17, i32 %18) #12, !dbg !9784
  %tobool6 = icmp ne i32 %call, 0, !dbg !9784
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9785

if.then7:                                         ; preds = %if.then
  br label %for.end, !dbg !9786

if.end:                                           ; preds = %if.then
  %19 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9787
  %counter8 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %19, i32 0, i32 12, !dbg !9788
  %20 = load i32, i32* %i, align 4, !dbg !9789
  %idxprom9 = sext i32 %20 to i64, !dbg !9787
  %arrayidx10 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter8, i64 0, i64 %idxprom9, !dbg !9787
  %read11 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx10, i32 0, i32 2, !dbg !9790
  store i32 0, i32* %read11, align 8, !dbg !9791
  %21 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !9792
  %cnt_ptr12 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %21, i32 0, i32 0, !dbg !9794
  %22 = load i8, i8* %cnt_ptr12, align 8, !dbg !9794
  %conv13 = zext i8 %22 to i32, !dbg !9792
  %cmp14 = icmp eq i32 0, %conv13, !dbg !9795
  br i1 %cmp14, label %if.then16, label %if.end25, !dbg !9796

if.then16:                                        ; preds = %if.end
  %23 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9797
  %counter17 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %23, i32 0, i32 12, !dbg !9799
  %24 = load i32, i32* %i, align 4, !dbg !9800
  %idxprom18 = sext i32 %24 to i64, !dbg !9797
  %arrayidx19 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter17, i64 0, i64 %idxprom18, !dbg !9797
  %read20 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx19, i32 0, i32 2, !dbg !9801
  store i32 2, i32* %read20, align 8, !dbg !9802
  %25 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9803
  %counter21 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %25, i32 0, i32 12, !dbg !9803
  %26 = load i32, i32* %i, align 4, !dbg !9803
  %idxprom22 = sext i32 %26 to i64, !dbg !9803
  %arrayidx23 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter21, i64 0, i64 %idxprom22, !dbg !9803
  %counter24 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx23, i32 0, i32 0, !dbg !9803
  call void @__wake_up(%struct.wait_queue_head* %counter24, i32 1, i32 1, i8* null) #12, !dbg !9803
  br label %if.end25, !dbg !9804

if.end25:                                         ; preds = %if.then16, %if.end
  br label %if.end57, !dbg !9805

if.else:                                          ; preds = %lor.lhs.false
  %27 = load volatile i64, i64* @jiffies, align 8, !dbg !9806
  %28 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9806
  %counter26 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %28, i32 0, i32 12, !dbg !9806
  %29 = load i32, i32* %i, align 4, !dbg !9806
  %idxprom27 = sext i32 %29 to i64, !dbg !9806
  %arrayidx28 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter26, i64 0, i64 %idxprom27, !dbg !9806
  %time = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx28, i32 0, i32 1, !dbg !9806
  %30 = load i64, i64* %time, align 8, !dbg !9806
  %sub = sub i64 %27, %30, !dbg !9806
  %cmp29 = icmp sge i64 %sub, 0, !dbg !9806
  br i1 %cmp29, label %if.then31, label %if.else47, !dbg !9808

if.then31:                                        ; preds = %if.else
  %31 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !9809
  %state = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %31, i32 0, i32 2, !dbg !9812
  %32 = load i8, i8* %state, align 2, !dbg !9812
  %conv32 = zext i8 %32 to i32, !dbg !9809
  %cmp33 = icmp eq i32 0, %conv32, !dbg !9813
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !9814

if.then35:                                        ; preds = %if.then31
  %33 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9815
  %counter36 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %33, i32 0, i32 12, !dbg !9816
  %34 = load i32, i32* %i, align 4, !dbg !9817
  %idxprom37 = sext i32 %34 to i64, !dbg !9815
  %arrayidx38 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter36, i64 0, i64 %idxprom37, !dbg !9815
  %read39 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx38, i32 0, i32 2, !dbg !9818
  store i32 1, i32* %read39, align 8, !dbg !9819
  br label %if.end40, !dbg !9815

if.end40:                                         ; preds = %if.then35, %if.then31
  %35 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9820
  %mib_port_cnt41 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %35, i32 0, i32 8, !dbg !9821
  %36 = load i32, i32* %mib_port_cnt41, align 8, !dbg !9821
  %mul = mul i32 250, %36, !dbg !9822
  %conv42 = sext i32 %mul to i64, !dbg !9823
  %37 = load i64, i64* @next_jiffies, align 8, !dbg !9824
  %add = add i64 %37, %conv42, !dbg !9824
  store i64 %add, i64* @next_jiffies, align 8, !dbg !9824
  %38 = load i64, i64* @next_jiffies, align 8, !dbg !9825
  %39 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9826
  %counter43 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %39, i32 0, i32 12, !dbg !9827
  %40 = load i32, i32* %i, align 4, !dbg !9828
  %idxprom44 = sext i32 %40 to i64, !dbg !9826
  %arrayidx45 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter43, i64 0, i64 %idxprom44, !dbg !9826
  %time46 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx45, i32 0, i32 1, !dbg !9829
  store i64 %38, i64* %time46, align 8, !dbg !9830
  br label %if.end56, !dbg !9831

if.else47:                                        ; preds = %if.else
  %41 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !9832
  %link_down = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %41, i32 0, i32 1, !dbg !9834
  %42 = load i8, i8* %link_down, align 1, !dbg !9834
  %tobool48 = icmp ne i8 %42, 0, !dbg !9832
  br i1 %tobool48, label %if.then49, label %if.end55, !dbg !9835

if.then49:                                        ; preds = %if.else47
  %43 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !9836
  %link_down50 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %43, i32 0, i32 1, !dbg !9838
  store i8 0, i8* %link_down50, align 1, !dbg !9839
  %44 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9840
  %counter51 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %44, i32 0, i32 12, !dbg !9841
  %45 = load i32, i32* %i, align 4, !dbg !9842
  %idxprom52 = sext i32 %45 to i64, !dbg !9840
  %arrayidx53 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter51, i64 0, i64 %idxprom52, !dbg !9840
  %read54 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx53, i32 0, i32 2, !dbg !9843
  store i32 1, i32* %read54, align 8, !dbg !9844
  br label %if.end55, !dbg !9845

if.end55:                                         ; preds = %if.then49, %if.else47
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end40
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end25
  br label %for.inc, !dbg !9846

for.inc:                                          ; preds = %if.end57
  %46 = load i32, i32* %i, align 4, !dbg !9847
  %inc = add i32 %46, 1, !dbg !9847
  store i32 %inc, i32* %i, align 4, !dbg !9847
  br label %for.cond, !dbg !9848, !llvm.loop !9849

for.end:                                          ; preds = %if.then7, %for.cond
  ret void, !dbg !9851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_init_timer(%struct.ksz_timer_info* %info, i32 %period, void (%struct.timer_list*)* %function) #2 !dbg !9852 {
entry:
  %info.addr = alloca %struct.ksz_timer_info*, align 8
  %period.addr = alloca i32, align 4
  %function.addr = alloca void (%struct.timer_list*)*, align 8
  store %struct.ksz_timer_info* %info, %struct.ksz_timer_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_timer_info** %info.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  store i32 %period, i32* %period.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %period.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  store void (%struct.timer_list*)* %function, void (%struct.timer_list*)** %function.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.timer_list*)** %function.addr, metadata !9860, metadata !DIExpression()), !dbg !9861
  %0 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !9862
  %max = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %0, i32 0, i32 2, !dbg !9863
  store i32 0, i32* %max, align 4, !dbg !9864
  %1 = load i32, i32* %period.addr, align 4, !dbg !9865
  %2 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !9866
  %period1 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %2, i32 0, i32 3, !dbg !9867
  store i32 %1, i32* %period1, align 8, !dbg !9868
  %3 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !9869
  %timer = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %3, i32 0, i32 0, !dbg !9869
  %4 = load void (%struct.timer_list*)*, void (%struct.timer_list*)** %function.addr, align 8, !dbg !9869
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* %4, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !9869
  ret void, !dbg !9870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mib_monitor(%struct.timer_list* %t) #2 !dbg !9871 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_info*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !9872, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !9874, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9876, metadata !DIExpression()), !dbg !9878
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !9878
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !9878
  store i8* %1, i8** %__mptr, align 8, !dbg !9878
  br label %do.body, !dbg !9878

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9879

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9878
  %add.ptr = getelementptr i8, i8* %2, i64 -1552, !dbg !9878
  %3 = bitcast i8* %add.ptr to %struct.dev_info*, !dbg !9878
  store %struct.dev_info* %3, %struct.dev_info** %tmp, align 8, !dbg !9879
  %4 = load %struct.dev_info*, %struct.dev_info** %tmp, align 8, !dbg !9878
  store %struct.dev_info* %4, %struct.dev_info** %hw_priv, align 8, !dbg !9875
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9881
  %mib_read = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 10, !dbg !9882
  call void @mib_read_work(%struct.work_struct* %mib_read) #12, !dbg !9883
  %6 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9884
  %pme_wait = getelementptr inbounds %struct.dev_info, %struct.dev_info* %6, i32 0, i32 19, !dbg !9886
  %7 = load i64, i64* %pme_wait, align 8, !dbg !9886
  %tobool = icmp ne i64 %7, 0, !dbg !9884
  br i1 %tobool, label %if.then, label %if.else, !dbg !9887

if.then:                                          ; preds = %do.end
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !9888
  %9 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9888
  %pme_wait1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %9, i32 0, i32 19, !dbg !9888
  %10 = load i64, i64* %pme_wait1, align 8, !dbg !9888
  %sub = sub i64 %8, %10, !dbg !9888
  %cmp = icmp sge i64 %sub, 0, !dbg !9888
  br i1 %cmp, label %if.then2, label %if.end, !dbg !9891

if.then2:                                         ; preds = %if.then
  %11 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9892
  %hw = getelementptr inbounds %struct.dev_info, %struct.dev_info* %11, i32 0, i32 2, !dbg !9894
  call void @hw_clr_wol_pme_status(%struct.ksz_hw* %hw) #12, !dbg !9895
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9896
  %pme_wait3 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 19, !dbg !9897
  store i64 0, i64* %pme_wait3, align 8, !dbg !9898
  br label %if.end, !dbg !9899

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end9, !dbg !9900

if.else:                                          ; preds = %do.end
  %13 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9901
  %hw4 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %13, i32 0, i32 2, !dbg !9903
  %call = call i32 @hw_chk_wol_pme_status(%struct.ksz_hw* %hw4) #12, !dbg !9904
  %tobool5 = icmp ne i32 %call, 0, !dbg !9904
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !9905

if.then6:                                         ; preds = %if.else
  %14 = load volatile i64, i64* @jiffies, align 8, !dbg !9906
  %add = add i64 %14, 500, !dbg !9908
  %15 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9909
  %pme_wait7 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 19, !dbg !9910
  store i64 %add, i64* %pme_wait7, align 8, !dbg !9911
  br label %if.end8, !dbg !9912

if.end8:                                          ; preds = %if.then6, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %16 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !9913
  %mib_timer_info = getelementptr inbounds %struct.dev_info, %struct.dev_info* %16, i32 0, i32 11, !dbg !9914
  call void @ksz_update_timer(%struct.ksz_timer_info* %mib_timer_info) #12, !dbg !9915
  ret void, !dbg !9916
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #2 !dbg !9917 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9920, metadata !DIExpression()), !dbg !9921
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9922
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !9923
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !9924
  ret i8* %add.ptr, !dbg !9925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ether_addr_equal(i8* %addr1, i8* %addr2) #2 !dbg !9926 {
entry:
  %addr1.addr = alloca i8*, align 8
  %addr2.addr = alloca i8*, align 8
  %fold = alloca i32, align 4
  store i8* %addr1, i8** %addr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr1.addr, metadata !9930, metadata !DIExpression()), !dbg !9931
  store i8* %addr2, i8** %addr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr2.addr, metadata !9932, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.declare(metadata i32* %fold, metadata !9934, metadata !DIExpression()), !dbg !9935
  %0 = load i8*, i8** %addr1.addr, align 8, !dbg !9936
  %1 = bitcast i8* %0 to i32*, !dbg !9937
  %2 = load i32, i32* %1, align 4, !dbg !9937
  %3 = load i8*, i8** %addr2.addr, align 8, !dbg !9938
  %4 = bitcast i8* %3 to i32*, !dbg !9939
  %5 = load i32, i32* %4, align 4, !dbg !9939
  %xor = xor i32 %2, %5, !dbg !9940
  %6 = load i8*, i8** %addr1.addr, align 8, !dbg !9941
  %add.ptr = getelementptr i8, i8* %6, i64 4, !dbg !9942
  %7 = bitcast i8* %add.ptr to i16*, !dbg !9943
  %8 = load i16, i16* %7, align 2, !dbg !9943
  %conv = zext i16 %8 to i32, !dbg !9944
  %9 = load i8*, i8** %addr2.addr, align 8, !dbg !9945
  %add.ptr1 = getelementptr i8, i8* %9, i64 4, !dbg !9946
  %10 = bitcast i8* %add.ptr1 to i16*, !dbg !9947
  %11 = load i16, i16* %10, align 2, !dbg !9947
  %conv2 = zext i16 %11 to i32, !dbg !9948
  %xor3 = xor i32 %conv, %conv2, !dbg !9949
  %or = or i32 %xor, %xor3, !dbg !9950
  store i32 %or, i32* %fold, align 4, !dbg !9935
  %12 = load i32, i32* %fold, align 4, !dbg !9951
  %cmp = icmp eq i32 %12, 0, !dbg !9952
  ret i1 %cmp, !dbg !9953
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_set_power_saving(%struct.ksz_port* %port, i32 %enable) #2 !dbg !9954 {
entry:
  %port.addr = alloca %struct.ksz_port*, align 8
  %enable.addr = alloca i32, align 4
  %hw = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !9957, metadata !DIExpression()), !dbg !9958
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !9959, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !9961, metadata !DIExpression()), !dbg !9962
  %0 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !9963
  %hw1 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %0, i32 0, i32 8, !dbg !9964
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw1, align 8, !dbg !9964
  store %struct.ksz_hw* %1, %struct.ksz_hw** %hw, align 8, !dbg !9962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9965, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9967, metadata !DIExpression()), !dbg !9968
  store i32 0, i32* %i, align 4, !dbg !9969
  %2 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !9971
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %2, i32 0, i32 4, !dbg !9972
  %3 = load i32, i32* %first_port, align 4, !dbg !9972
  store i32 %3, i32* %p, align 4, !dbg !9973
  br label %for.cond, !dbg !9974

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9975
  %5 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !9977
  %port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %5, i32 0, i32 6, !dbg !9978
  %6 = load i32, i32* %port_cnt, align 4, !dbg !9978
  %cmp = icmp slt i32 %4, %6, !dbg !9979
  br i1 %cmp, label %for.body, label %for.end, !dbg !9980

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !9981
  %8 = load i32, i32* %p, align 4, !dbg !9982
  %9 = load i32, i32* %enable.addr, align 4, !dbg !9983
  call void @port_cfg(%struct.ksz_hw* %7, i32 %8, i32 18, i16 zeroext 2048, i32 %9) #12, !dbg !9984
  br label %for.inc, !dbg !9984

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !9985
  %inc = add i32 %10, 1, !dbg !9985
  store i32 %inc, i32* %i, align 4, !dbg !9985
  %11 = load i32, i32* %p, align 4, !dbg !9986
  %inc2 = add i32 %11, 1, !dbg !9986
  store i32 %inc2, i32* %p, align 4, !dbg !9986
  br label %for.cond, !dbg !9987, !llvm.loop !9988

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9990
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_dev_get(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !9991 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9998
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9999
  %1 = load i8*, i8** %data.addr, align 8, !dbg !10000
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !10001
  ret void, !dbg !10002
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_free(%struct.net_device* %dev) #2 !dbg !10003 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10004, metadata !DIExpression()), !dbg !10005
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10006
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 94, !dbg !10008
  %1 = load i32, i32* %watchdog_timeo, align 8, !dbg !10008
  %tobool = icmp ne i32 %1, 0, !dbg !10006
  br i1 %tobool, label %if.then, label %if.end, !dbg !10009

if.then:                                          ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10010
  call void @unregister_netdev(%struct.net_device* %2) #12, !dbg !10011
  br label %if.end, !dbg !10011

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10012
  call void @free_netdev(%struct.net_device* %3) #12, !dbg !10013
  ret void, !dbg !10014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_free_mem(%struct.dev_info* %adapter) #2 !dbg !10015 {
entry:
  %adapter.addr = alloca %struct.dev_info*, align 8
  store %struct.dev_info* %adapter, %struct.dev_info** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %adapter.addr, metadata !10018, metadata !DIExpression()), !dbg !10019
  %0 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10020
  %1 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10021
  %hw = getelementptr inbounds %struct.dev_info, %struct.dev_info* %1, i32 0, i32 2, !dbg !10022
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw, i32 0, i32 15, !dbg !10023
  call void @ksz_free_buffers(%struct.dev_info* %0, %struct.ksz_desc_info* %tx_desc_info, i32 1) #12, !dbg !10024
  %2 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10025
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10026
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %3, i32 0, i32 2, !dbg !10027
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw1, i32 0, i32 14, !dbg !10028
  call void @ksz_free_buffers(%struct.dev_info* %2, %struct.ksz_desc_info* %rx_desc_info, i32 2) #12, !dbg !10029
  %4 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10030
  call void @ksz_free_desc(%struct.dev_info* %4) #12, !dbg !10031
  ret void, !dbg !10032
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !10033 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10037, metadata !DIExpression()), !dbg !10042
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10044, metadata !DIExpression()), !dbg !10045
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10046, metadata !DIExpression()), !dbg !10047
  %0 = load i64, i64* %size.addr, align 8, !dbg !10048
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10050
  br i1 %1, label %if.then, label %if.end447, !dbg !10051

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10052
  %tobool = icmp ne i64 %2, 0, !dbg !10052
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10055

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10056
  br label %return, !dbg !10056

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10057
  %cmp = icmp ult i64 %3, 4096, !dbg !10059
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10060

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10061
  br label %return, !dbg !10061

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub = sub i64 %4, 1, !dbg !10062
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10062
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10062

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub4 = sub i64 %6, 1, !dbg !10062
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10062
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10062

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub6 = sub i64 %8, 1, !dbg !10062
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10062
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10062

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10062

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub9 = sub i64 %9, 1, !dbg !10062
  %and = and i64 %sub9, -9223372036854775808, !dbg !10062
  %tobool10 = icmp ne i64 %and, 0, !dbg !10062
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10062

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10062

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub13 = sub i64 %10, 1, !dbg !10062
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10062
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10062
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10062

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10062

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub18 = sub i64 %11, 1, !dbg !10062
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10062
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10062
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10062

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10062

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub23 = sub i64 %12, 1, !dbg !10062
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10062
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10062
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10062

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10062

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub28 = sub i64 %13, 1, !dbg !10062
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10062
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10062
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10062

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10062

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub33 = sub i64 %14, 1, !dbg !10062
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10062
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10062
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10062

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10062

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub38 = sub i64 %15, 1, !dbg !10062
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10062
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10062
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10062

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10062

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub43 = sub i64 %16, 1, !dbg !10062
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10062
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10062
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10062

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10062

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub48 = sub i64 %17, 1, !dbg !10062
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10062
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10062
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10062

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10062

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub53 = sub i64 %18, 1, !dbg !10062
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10062
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10062
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10062

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10062

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub58 = sub i64 %19, 1, !dbg !10062
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10062
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10062
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10062

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10062

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub63 = sub i64 %20, 1, !dbg !10062
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10062
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10062
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10062

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10062

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub68 = sub i64 %21, 1, !dbg !10062
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10062
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10062
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10062

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10062

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub73 = sub i64 %22, 1, !dbg !10062
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10062
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10062
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10062

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10062

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub78 = sub i64 %23, 1, !dbg !10062
  %and79 = and i64 %sub78, 562949953421312, !dbg !10062
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10062
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10062

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10062

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub83 = sub i64 %24, 1, !dbg !10062
  %and84 = and i64 %sub83, 281474976710656, !dbg !10062
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10062
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10062

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10062

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub88 = sub i64 %25, 1, !dbg !10062
  %and89 = and i64 %sub88, 140737488355328, !dbg !10062
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10062
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10062

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10062

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub93 = sub i64 %26, 1, !dbg !10062
  %and94 = and i64 %sub93, 70368744177664, !dbg !10062
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10062
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10062

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10062

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub98 = sub i64 %27, 1, !dbg !10062
  %and99 = and i64 %sub98, 35184372088832, !dbg !10062
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10062
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10062

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10062

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub103 = sub i64 %28, 1, !dbg !10062
  %and104 = and i64 %sub103, 17592186044416, !dbg !10062
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10062
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10062

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10062

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub108 = sub i64 %29, 1, !dbg !10062
  %and109 = and i64 %sub108, 8796093022208, !dbg !10062
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10062
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10062

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10062

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub113 = sub i64 %30, 1, !dbg !10062
  %and114 = and i64 %sub113, 4398046511104, !dbg !10062
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10062
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10062

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10062

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub118 = sub i64 %31, 1, !dbg !10062
  %and119 = and i64 %sub118, 2199023255552, !dbg !10062
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10062
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10062

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10062

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub123 = sub i64 %32, 1, !dbg !10062
  %and124 = and i64 %sub123, 1099511627776, !dbg !10062
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10062
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10062

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10062

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub128 = sub i64 %33, 1, !dbg !10062
  %and129 = and i64 %sub128, 549755813888, !dbg !10062
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10062
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10062

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10062

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub133 = sub i64 %34, 1, !dbg !10062
  %and134 = and i64 %sub133, 274877906944, !dbg !10062
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10062
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10062

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10062

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub138 = sub i64 %35, 1, !dbg !10062
  %and139 = and i64 %sub138, 137438953472, !dbg !10062
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10062
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10062

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10062

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub143 = sub i64 %36, 1, !dbg !10062
  %and144 = and i64 %sub143, 68719476736, !dbg !10062
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10062
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10062

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10062

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub148 = sub i64 %37, 1, !dbg !10062
  %and149 = and i64 %sub148, 34359738368, !dbg !10062
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10062
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10062

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10062

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub153 = sub i64 %38, 1, !dbg !10062
  %and154 = and i64 %sub153, 17179869184, !dbg !10062
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10062
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10062

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10062

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub158 = sub i64 %39, 1, !dbg !10062
  %and159 = and i64 %sub158, 8589934592, !dbg !10062
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10062
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10062

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10062

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub163 = sub i64 %40, 1, !dbg !10062
  %and164 = and i64 %sub163, 4294967296, !dbg !10062
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10062
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10062

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10062

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub168 = sub i64 %41, 1, !dbg !10062
  %and169 = and i64 %sub168, 2147483648, !dbg !10062
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10062
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10062

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10062

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub173 = sub i64 %42, 1, !dbg !10062
  %and174 = and i64 %sub173, 1073741824, !dbg !10062
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10062
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10062

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10062

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub178 = sub i64 %43, 1, !dbg !10062
  %and179 = and i64 %sub178, 536870912, !dbg !10062
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10062
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10062

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10062

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub183 = sub i64 %44, 1, !dbg !10062
  %and184 = and i64 %sub183, 268435456, !dbg !10062
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10062
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10062

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10062

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub188 = sub i64 %45, 1, !dbg !10062
  %and189 = and i64 %sub188, 134217728, !dbg !10062
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10062
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10062

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10062

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub193 = sub i64 %46, 1, !dbg !10062
  %and194 = and i64 %sub193, 67108864, !dbg !10062
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10062
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10062

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10062

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub198 = sub i64 %47, 1, !dbg !10062
  %and199 = and i64 %sub198, 33554432, !dbg !10062
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10062
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10062

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10062

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub203 = sub i64 %48, 1, !dbg !10062
  %and204 = and i64 %sub203, 16777216, !dbg !10062
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10062
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10062

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10062

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub208 = sub i64 %49, 1, !dbg !10062
  %and209 = and i64 %sub208, 8388608, !dbg !10062
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10062
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10062

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10062

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub213 = sub i64 %50, 1, !dbg !10062
  %and214 = and i64 %sub213, 4194304, !dbg !10062
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10062
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10062

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10062

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub218 = sub i64 %51, 1, !dbg !10062
  %and219 = and i64 %sub218, 2097152, !dbg !10062
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10062
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10062

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10062

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub223 = sub i64 %52, 1, !dbg !10062
  %and224 = and i64 %sub223, 1048576, !dbg !10062
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10062
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10062

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10062

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub228 = sub i64 %53, 1, !dbg !10062
  %and229 = and i64 %sub228, 524288, !dbg !10062
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10062
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10062

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10062

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub233 = sub i64 %54, 1, !dbg !10062
  %and234 = and i64 %sub233, 262144, !dbg !10062
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10062
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10062

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10062

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub238 = sub i64 %55, 1, !dbg !10062
  %and239 = and i64 %sub238, 131072, !dbg !10062
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10062
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10062

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10062

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub243 = sub i64 %56, 1, !dbg !10062
  %and244 = and i64 %sub243, 65536, !dbg !10062
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10062
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10062

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10062

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub248 = sub i64 %57, 1, !dbg !10062
  %and249 = and i64 %sub248, 32768, !dbg !10062
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10062
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10062

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10062

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub253 = sub i64 %58, 1, !dbg !10062
  %and254 = and i64 %sub253, 16384, !dbg !10062
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10062
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10062

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10062

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub258 = sub i64 %59, 1, !dbg !10062
  %and259 = and i64 %sub258, 8192, !dbg !10062
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10062
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10062

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10062

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub263 = sub i64 %60, 1, !dbg !10062
  %and264 = and i64 %sub263, 4096, !dbg !10062
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10062
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10062

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10062

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub268 = sub i64 %61, 1, !dbg !10062
  %and269 = and i64 %sub268, 2048, !dbg !10062
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10062
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10062

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10062

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub273 = sub i64 %62, 1, !dbg !10062
  %and274 = and i64 %sub273, 1024, !dbg !10062
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10062
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10062

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10062

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub278 = sub i64 %63, 1, !dbg !10062
  %and279 = and i64 %sub278, 512, !dbg !10062
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10062
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10062

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10062

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub283 = sub i64 %64, 1, !dbg !10062
  %and284 = and i64 %sub283, 256, !dbg !10062
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10062
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10062

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10062

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub288 = sub i64 %65, 1, !dbg !10062
  %and289 = and i64 %sub288, 128, !dbg !10062
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10062
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10062

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10062

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub293 = sub i64 %66, 1, !dbg !10062
  %and294 = and i64 %sub293, 64, !dbg !10062
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10062
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10062

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10062

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub298 = sub i64 %67, 1, !dbg !10062
  %and299 = and i64 %sub298, 32, !dbg !10062
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10062
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10062

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10062

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub303 = sub i64 %68, 1, !dbg !10062
  %and304 = and i64 %sub303, 16, !dbg !10062
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10062
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10062

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10062

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub308 = sub i64 %69, 1, !dbg !10062
  %and309 = and i64 %sub308, 8, !dbg !10062
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10062
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10062

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10062

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub313 = sub i64 %70, 1, !dbg !10062
  %and314 = and i64 %sub313, 4, !dbg !10062
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10062
  %71 = zext i1 %tobool315 to i64, !dbg !10062
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10062
  br label %cond.end, !dbg !10062

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10062
  br label %cond.end317, !dbg !10062

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10062
  br label %cond.end319, !dbg !10062

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10062
  br label %cond.end321, !dbg !10062

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10062
  br label %cond.end323, !dbg !10062

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10062
  br label %cond.end325, !dbg !10062

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10062
  br label %cond.end327, !dbg !10062

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10062
  br label %cond.end329, !dbg !10062

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10062
  br label %cond.end331, !dbg !10062

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10062
  br label %cond.end333, !dbg !10062

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10062
  br label %cond.end335, !dbg !10062

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10062
  br label %cond.end337, !dbg !10062

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10062
  br label %cond.end339, !dbg !10062

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10062
  br label %cond.end341, !dbg !10062

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10062
  br label %cond.end343, !dbg !10062

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10062
  br label %cond.end345, !dbg !10062

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10062
  br label %cond.end347, !dbg !10062

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10062
  br label %cond.end349, !dbg !10062

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10062
  br label %cond.end351, !dbg !10062

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10062
  br label %cond.end353, !dbg !10062

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10062
  br label %cond.end355, !dbg !10062

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10062
  br label %cond.end357, !dbg !10062

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10062
  br label %cond.end359, !dbg !10062

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10062
  br label %cond.end361, !dbg !10062

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10062
  br label %cond.end363, !dbg !10062

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10062
  br label %cond.end365, !dbg !10062

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10062
  br label %cond.end367, !dbg !10062

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10062
  br label %cond.end369, !dbg !10062

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10062
  br label %cond.end371, !dbg !10062

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10062
  br label %cond.end373, !dbg !10062

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10062
  br label %cond.end375, !dbg !10062

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10062
  br label %cond.end377, !dbg !10062

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10062
  br label %cond.end379, !dbg !10062

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10062
  br label %cond.end381, !dbg !10062

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10062
  br label %cond.end383, !dbg !10062

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10062
  br label %cond.end385, !dbg !10062

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10062
  br label %cond.end387, !dbg !10062

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10062
  br label %cond.end389, !dbg !10062

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10062
  br label %cond.end391, !dbg !10062

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10062
  br label %cond.end393, !dbg !10062

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10062
  br label %cond.end395, !dbg !10062

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10062
  br label %cond.end397, !dbg !10062

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10062
  br label %cond.end399, !dbg !10062

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10062
  br label %cond.end401, !dbg !10062

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10062
  br label %cond.end403, !dbg !10062

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10062
  br label %cond.end405, !dbg !10062

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10062
  br label %cond.end407, !dbg !10062

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10062
  br label %cond.end409, !dbg !10062

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10062
  br label %cond.end411, !dbg !10062

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10062
  br label %cond.end413, !dbg !10062

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10062
  br label %cond.end415, !dbg !10062

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10062
  br label %cond.end417, !dbg !10062

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10062
  br label %cond.end419, !dbg !10062

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10062
  br label %cond.end421, !dbg !10062

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10062
  br label %cond.end423, !dbg !10062

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10062
  br label %cond.end425, !dbg !10062

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10062
  br label %cond.end427, !dbg !10062

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10062
  br label %cond.end429, !dbg !10062

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10062
  br label %cond.end431, !dbg !10062

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10062
  br label %cond.end433, !dbg !10062

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10062
  br label %cond.end435, !dbg !10062

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10062
  br label %cond.end437, !dbg !10062

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10062
  br label %cond.end440, !dbg !10062

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10062

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10062
  br label %cond.end444, !dbg !10062

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10062
  %sub443 = sub i64 %72, 1, !dbg !10062
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !10062
  br label %cond.end444, !dbg !10062

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10062
  %sub446 = sub i32 %cond445, 12, !dbg !10063
  %add = add i32 %sub446, 1, !dbg !10064
  store i32 %add, i32* %retval, align 4, !dbg !10065
  br label %return, !dbg !10065

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10066
  %dec = add i64 %73, -1, !dbg !10066
  store i64 %dec, i64* %size.addr, align 8, !dbg !10066
  %74 = load i64, i64* %size.addr, align 8, !dbg !10067
  %shr = lshr i64 %74, 12, !dbg !10067
  store i64 %shr, i64* %size.addr, align 8, !dbg !10067
  %75 = load i64, i64* %size.addr, align 8, !dbg !10068
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10045
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10069
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10070
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !10069, !srcloc !10071
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10069
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10072
  %add.i = add i32 %79, 1, !dbg !10073
  store i32 %add.i, i32* %retval, align 4, !dbg !10074
  br label %return, !dbg !10074

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10075
  ret i32 %80, !dbg !10075
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !10076 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10037, metadata !DIExpression()), !dbg !10080
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10044, metadata !DIExpression()), !dbg !10082
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10083, metadata !DIExpression()), !dbg !10084
  %0 = load i64, i64* %n.addr, align 8, !dbg !10085
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10082
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10086
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10087
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !10086, !srcloc !10071
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10086
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10088
  %add.i = add i32 %4, 1, !dbg !10089
  %sub = sub i32 %add.i, 1, !dbg !10090
  ret i32 %sub, !dbg !10091
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !10092 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10096, metadata !DIExpression()), !dbg !10097
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10098, metadata !DIExpression()), !dbg !10099
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10100, metadata !DIExpression()), !dbg !10101
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10102, metadata !DIExpression()), !dbg !10103
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10104
  ret i8* %0, !dbg !10105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #2 !dbg !10106 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10114, metadata !DIExpression()), !dbg !10113
  %0 = load i16, i16* %val.addr, align 2, !dbg !10113
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10113
  %2 = bitcast i8* %1 to i16*, !dbg !10113
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #10, !dbg !10113, !srcloc !10115
  ret void, !dbg !10113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #2 !dbg !10116 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10121, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !10123, metadata !DIExpression()), !dbg !10122
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10122
  %1 = bitcast i8* %0 to i16*, !dbg !10122
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #10, !dbg !10122, !srcloc !10124
  store i16 %2, i16* %ret, align 2, !dbg !10122
  %3 = load i16, i16* %ret, align 2, !dbg !10122
  ret i16 %3, !dbg !10122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_check_desc_num(%struct.ksz_desc_info* %info) #2 !dbg !10125 {
entry:
  %info.addr = alloca %struct.ksz_desc_info*, align 8
  %alloc = alloca i32, align 4
  %shift = alloca i32, align 4
  store %struct.ksz_desc_info* %info, %struct.ksz_desc_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info.addr, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.declare(metadata i32* %alloc, metadata !10131, metadata !DIExpression()), !dbg !10132
  %0 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !10133
  %alloc1 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %0, i32 0, i32 5, !dbg !10134
  %1 = load i32, i32* %alloc1, align 8, !dbg !10134
  store i32 %1, i32* %alloc, align 4, !dbg !10132
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !10135, metadata !DIExpression()), !dbg !10136
  store i32 0, i32* %shift, align 4, !dbg !10137
  br label %while.cond, !dbg !10138

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %alloc, align 4, !dbg !10139
  %and = and i32 %2, 1, !dbg !10140
  %tobool = icmp ne i32 %and, 0, !dbg !10141
  %lnot = xor i1 %tobool, true, !dbg !10141
  br i1 %lnot, label %while.body, label %while.end, !dbg !10138

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %shift, align 4, !dbg !10142
  %inc = add i32 %3, 1, !dbg !10142
  store i32 %inc, i32* %shift, align 4, !dbg !10142
  %4 = load i32, i32* %alloc, align 4, !dbg !10144
  %shr = ashr i32 %4, 1, !dbg !10144
  store i32 %shr, i32* %alloc, align 4, !dbg !10144
  br label %while.cond, !dbg !10138, !llvm.loop !10145

while.end:                                        ; preds = %while.cond
  %5 = load i32, i32* %alloc, align 4, !dbg !10147
  %cmp = icmp ne i32 %5, 1, !dbg !10149
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10150

lor.lhs.false:                                    ; preds = %while.end
  %6 = load i32, i32* %shift, align 4, !dbg !10151
  %cmp2 = icmp slt i32 %6, 2, !dbg !10152
  br i1 %cmp2, label %if.then, label %if.end12, !dbg !10153

if.then:                                          ; preds = %lor.lhs.false, %while.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0)) #13, !dbg !10154
  br label %while.cond3, !dbg !10156

while.cond3:                                      ; preds = %while.body5, %if.then
  %7 = load i32, i32* %alloc, align 4, !dbg !10157
  %tobool4 = icmp ne i32 %7, 0, !dbg !10156
  br i1 %tobool4, label %while.body5, label %while.end8, !dbg !10156

while.body5:                                      ; preds = %while.cond3
  %8 = load i32, i32* %shift, align 4, !dbg !10158
  %inc6 = add i32 %8, 1, !dbg !10158
  store i32 %inc6, i32* %shift, align 4, !dbg !10158
  %9 = load i32, i32* %alloc, align 4, !dbg !10160
  %shr7 = ashr i32 %9, 1, !dbg !10160
  store i32 %shr7, i32* %alloc, align 4, !dbg !10160
  br label %while.cond3, !dbg !10156, !llvm.loop !10161

while.end8:                                       ; preds = %while.cond3
  %10 = load i32, i32* %shift, align 4, !dbg !10163
  %cmp9 = icmp slt i32 %10, 2, !dbg !10165
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !10166

if.then10:                                        ; preds = %while.end8
  store i32 2, i32* %shift, align 4, !dbg !10167
  br label %if.end, !dbg !10168

if.end:                                           ; preds = %if.then10, %while.end8
  %11 = load i32, i32* %shift, align 4, !dbg !10169
  %shl = shl i32 1, %11, !dbg !10170
  store i32 %shl, i32* %alloc, align 4, !dbg !10171
  %12 = load i32, i32* %alloc, align 4, !dbg !10172
  %13 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !10173
  %alloc11 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %13, i32 0, i32 5, !dbg !10174
  store i32 %12, i32* %alloc11, align 8, !dbg !10175
  br label %if.end12, !dbg !10176

if.end12:                                         ; preds = %if.end, %lor.lhs.false
  %14 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !10177
  %alloc13 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %14, i32 0, i32 5, !dbg !10178
  %15 = load i32, i32* %alloc13, align 8, !dbg !10178
  %sub = sub i32 %15, 1, !dbg !10179
  %16 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !10180
  %mask = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %16, i32 0, i32 9, !dbg !10181
  store i32 %sub, i32* %mask, align 8, !dbg !10182
  ret void, !dbg !10183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ksz_alloc_desc(%struct.dev_info* %adapter) #2 !dbg !10184 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %offset = alloca i32, align 4
  store %struct.dev_info* %adapter, %struct.dev_info** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %adapter.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !10187, metadata !DIExpression()), !dbg !10188
  %0 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10189
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !10190
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !10188
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10191, metadata !DIExpression()), !dbg !10192
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10193
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 14, !dbg !10194
  %size = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info, i32 0, i32 4, !dbg !10195
  %2 = load i32, i32* %size, align 4, !dbg !10195
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10196
  %rx_desc_info2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 14, !dbg !10197
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info2, i32 0, i32 5, !dbg !10198
  %4 = load i32, i32* %alloc, align 8, !dbg !10198
  %mul = mul i32 %2, %4, !dbg !10199
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10200
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 15, !dbg !10201
  %size3 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info, i32 0, i32 4, !dbg !10202
  %6 = load i32, i32* %size3, align 4, !dbg !10202
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10203
  %tx_desc_info4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 15, !dbg !10204
  %alloc5 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info4, i32 0, i32 5, !dbg !10205
  %8 = load i32, i32* %alloc5, align 8, !dbg !10205
  %mul6 = mul i32 %6, %8, !dbg !10206
  %add = add i32 %mul, %mul6, !dbg !10207
  %add7 = add i32 %add, 16, !dbg !10208
  %9 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10209
  %desc_pool = getelementptr inbounds %struct.dev_info, %struct.dev_info* %9, i32 0, i32 3, !dbg !10210
  %alloc_size = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool, i32 0, i32 1, !dbg !10211
  store i32 %add7, i32* %alloc_size, align 8, !dbg !10212
  %10 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10213
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %10, i32 0, i32 1, !dbg !10214
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10214
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !10215
  %12 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10216
  %desc_pool8 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 3, !dbg !10217
  %alloc_size9 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool8, i32 0, i32 1, !dbg !10218
  %13 = load i32, i32* %alloc_size9, align 8, !dbg !10218
  %conv = zext i32 %13 to i64, !dbg !10216
  %14 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10219
  %desc_pool10 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %14, i32 0, i32 3, !dbg !10220
  %dma_addr = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool10, i32 0, i32 0, !dbg !10221
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %conv, i64* %dma_addr, i32 3264) #12, !dbg !10222
  %15 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10223
  %desc_pool11 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 3, !dbg !10224
  %alloc_virt = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool11, i32 0, i32 3, !dbg !10225
  store i8* %call, i8** %alloc_virt, align 8, !dbg !10226
  %16 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10227
  %desc_pool12 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %16, i32 0, i32 3, !dbg !10229
  %alloc_virt13 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool12, i32 0, i32 3, !dbg !10230
  %17 = load i8*, i8** %alloc_virt13, align 8, !dbg !10230
  %cmp = icmp eq i8* %17, null, !dbg !10231
  br i1 %cmp, label %if.then, label %if.end, !dbg !10232

if.then:                                          ; preds = %entry
  %18 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10233
  %desc_pool15 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %18, i32 0, i32 3, !dbg !10235
  %alloc_size16 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool15, i32 0, i32 1, !dbg !10236
  store i32 0, i32* %alloc_size16, align 8, !dbg !10237
  store i32 1, i32* %retval, align 4, !dbg !10238
  br label %return, !dbg !10238

if.end:                                           ; preds = %entry
  %19 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10239
  %desc_pool17 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %19, i32 0, i32 3, !dbg !10240
  %alloc_virt18 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool17, i32 0, i32 3, !dbg !10241
  %20 = load i8*, i8** %alloc_virt18, align 8, !dbg !10241
  %21 = ptrtoint i8* %20 to i64, !dbg !10242
  %rem = urem i64 %21, 16, !dbg !10243
  %tobool = icmp ne i64 %rem, 0, !dbg !10243
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10244

cond.true:                                        ; preds = %if.end
  %22 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10245
  %desc_pool19 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %22, i32 0, i32 3, !dbg !10246
  %alloc_virt20 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool19, i32 0, i32 3, !dbg !10247
  %23 = load i8*, i8** %alloc_virt20, align 8, !dbg !10247
  %24 = ptrtoint i8* %23 to i64, !dbg !10248
  %rem21 = urem i64 %24, 16, !dbg !10249
  %sub = sub i64 16, %rem21, !dbg !10250
  br label %cond.end, !dbg !10244

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !10244

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !10244
  %conv22 = trunc i64 %cond to i32, !dbg !10251
  store i32 %conv22, i32* %offset, align 4, !dbg !10252
  %25 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10253
  %desc_pool23 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %25, i32 0, i32 3, !dbg !10254
  %alloc_virt24 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool23, i32 0, i32 3, !dbg !10255
  %26 = load i8*, i8** %alloc_virt24, align 8, !dbg !10255
  %27 = load i32, i32* %offset, align 4, !dbg !10256
  %idx.ext = sext i32 %27 to i64, !dbg !10257
  %add.ptr = getelementptr i8, i8* %26, i64 %idx.ext, !dbg !10257
  %28 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10258
  %desc_pool25 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %28, i32 0, i32 3, !dbg !10259
  %virt = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool25, i32 0, i32 4, !dbg !10260
  store i8* %add.ptr, i8** %virt, align 8, !dbg !10261
  %29 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10262
  %desc_pool26 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %29, i32 0, i32 3, !dbg !10263
  %dma_addr27 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool26, i32 0, i32 0, !dbg !10264
  %30 = load i64, i64* %dma_addr27, align 8, !dbg !10264
  %31 = load i32, i32* %offset, align 4, !dbg !10265
  %conv28 = sext i32 %31 to i64, !dbg !10265
  %add29 = add i64 %30, %conv28, !dbg !10266
  %conv30 = trunc i64 %add29 to i32, !dbg !10262
  %32 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10267
  %desc_pool31 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %32, i32 0, i32 3, !dbg !10268
  %phys = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool31, i32 0, i32 2, !dbg !10269
  store i32 %conv30, i32* %phys, align 4, !dbg !10270
  %33 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10271
  %desc_pool32 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %33, i32 0, i32 3, !dbg !10272
  %virt33 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool32, i32 0, i32 4, !dbg !10273
  %34 = load i8*, i8** %virt33, align 8, !dbg !10273
  %35 = bitcast i8* %34 to %struct.ksz_hw_desc*, !dbg !10274
  %36 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10275
  %rx_desc_info34 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %36, i32 0, i32 14, !dbg !10276
  %ring_virt = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info34, i32 0, i32 2, !dbg !10277
  store %struct.ksz_hw_desc* %35, %struct.ksz_hw_desc** %ring_virt, align 8, !dbg !10278
  %37 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10279
  %desc_pool35 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %37, i32 0, i32 3, !dbg !10280
  %phys36 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool35, i32 0, i32 2, !dbg !10281
  %38 = load i32, i32* %phys36, align 4, !dbg !10281
  %39 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10282
  %rx_desc_info37 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %39, i32 0, i32 14, !dbg !10283
  %ring_phys = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info37, i32 0, i32 3, !dbg !10284
  store i32 %38, i32* %ring_phys, align 8, !dbg !10285
  %40 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10286
  %rx_desc_info38 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %40, i32 0, i32 14, !dbg !10287
  %alloc39 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info38, i32 0, i32 5, !dbg !10288
  %41 = load i32, i32* %alloc39, align 8, !dbg !10288
  %42 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10289
  %rx_desc_info40 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %42, i32 0, i32 14, !dbg !10290
  %size41 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info40, i32 0, i32 4, !dbg !10291
  %43 = load i32, i32* %size41, align 4, !dbg !10291
  %mul42 = mul i32 %41, %43, !dbg !10292
  store i32 %mul42, i32* %offset, align 4, !dbg !10293
  %44 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10294
  %desc_pool43 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %44, i32 0, i32 3, !dbg !10295
  %virt44 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool43, i32 0, i32 4, !dbg !10296
  %45 = load i8*, i8** %virt44, align 8, !dbg !10296
  %46 = load i32, i32* %offset, align 4, !dbg !10297
  %idx.ext45 = sext i32 %46 to i64, !dbg !10298
  %add.ptr46 = getelementptr i8, i8* %45, i64 %idx.ext45, !dbg !10298
  %47 = bitcast i8* %add.ptr46 to %struct.ksz_hw_desc*, !dbg !10299
  %48 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10300
  %tx_desc_info47 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %48, i32 0, i32 15, !dbg !10301
  %ring_virt48 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info47, i32 0, i32 2, !dbg !10302
  store %struct.ksz_hw_desc* %47, %struct.ksz_hw_desc** %ring_virt48, align 8, !dbg !10303
  %49 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !10304
  %desc_pool49 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %49, i32 0, i32 3, !dbg !10305
  %phys50 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool49, i32 0, i32 2, !dbg !10306
  %50 = load i32, i32* %phys50, align 4, !dbg !10306
  %51 = load i32, i32* %offset, align 4, !dbg !10307
  %add51 = add i32 %50, %51, !dbg !10308
  %52 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10309
  %tx_desc_info52 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %52, i32 0, i32 15, !dbg !10310
  %ring_phys53 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info52, i32 0, i32 3, !dbg !10311
  store i32 %add51, i32* %ring_phys53, align 8, !dbg !10312
  %53 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10313
  %rx_desc_info54 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %53, i32 0, i32 14, !dbg !10315
  %call55 = call i32 @ksz_alloc_soft_desc(%struct.ksz_desc_info* %rx_desc_info54, i32 0) #12, !dbg !10316
  %tobool56 = icmp ne i32 %call55, 0, !dbg !10316
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !10317

if.then57:                                        ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !10318
  br label %return, !dbg !10318

if.end58:                                         ; preds = %cond.end
  %54 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !10319
  %tx_desc_info59 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %54, i32 0, i32 15, !dbg !10321
  %call60 = call i32 @ksz_alloc_soft_desc(%struct.ksz_desc_info* %tx_desc_info59, i32 1) #12, !dbg !10322
  %tobool61 = icmp ne i32 %call60, 0, !dbg !10322
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !10323

if.then62:                                        ; preds = %if.end58
  store i32 1, i32* %retval, align 4, !dbg !10324
  br label %return, !dbg !10324

if.end63:                                         ; preds = %if.end58
  store i32 0, i32* %retval, align 4, !dbg !10325
  br label %return, !dbg !10325

return:                                           ; preds = %if.end63, %if.then62, %if.then57, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !10326
  ret i32 %55, !dbg !10326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !10327 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !10335, metadata !DIExpression()), !dbg !10336
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10339
  %1 = load i64, i64* %size.addr, align 8, !dbg !10340
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !10341
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !10342
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !10343
  %and = and i32 %4, 8192, !dbg !10344
  %tobool = icmp ne i32 %and, 0, !dbg !10345
  %5 = zext i1 %tobool to i64, !dbg !10345
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !10345
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !10346
  ret i8* %call, !dbg !10347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ksz_alloc_soft_desc(%struct.ksz_desc_info* %desc_info, i32 %transmit) #2 !dbg !10348 {
entry:
  %retval = alloca i32, align 4
  %desc_info.addr = alloca %struct.ksz_desc_info*, align 8
  %transmit.addr = alloca i32, align 4
  store %struct.ksz_desc_info* %desc_info, %struct.ksz_desc_info** %desc_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %desc_info.addr, metadata !10351, metadata !DIExpression()), !dbg !10352
  store i32 %transmit, i32* %transmit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %transmit.addr, metadata !10353, metadata !DIExpression()), !dbg !10354
  %0 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10355
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %0, i32 0, i32 5, !dbg !10356
  %1 = load i32, i32* %alloc, align 8, !dbg !10356
  %conv = sext i32 %1 to i64, !dbg !10355
  %call = call i8* @kcalloc(i64 %conv, i64 48, i32 3264) #12, !dbg !10357
  %2 = bitcast i8* %call to %struct.ksz_desc*, !dbg !10357
  %3 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10358
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %3, i32 0, i32 0, !dbg !10359
  store %struct.ksz_desc* %2, %struct.ksz_desc** %ring, align 8, !dbg !10360
  %4 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10361
  %ring1 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %4, i32 0, i32 0, !dbg !10363
  %5 = load %struct.ksz_desc*, %struct.ksz_desc** %ring1, align 8, !dbg !10363
  %tobool = icmp ne %struct.ksz_desc* %5, null, !dbg !10361
  br i1 %tobool, label %if.end, label %if.then, !dbg !10364

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10365
  br label %return, !dbg !10365

if.end:                                           ; preds = %entry
  %6 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10366
  %7 = load i32, i32* %transmit.addr, align 4, !dbg !10367
  call void @hw_init_desc(%struct.ksz_desc_info* %6, i32 %7) #12, !dbg !10368
  store i32 0, i32* %retval, align 4, !dbg !10369
  br label %return, !dbg !10369

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10370
  ret i32 %8, !dbg !10370
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #2 !dbg !10371 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10374, metadata !DIExpression()), !dbg !10375
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10376, metadata !DIExpression()), !dbg !10377
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10378, metadata !DIExpression()), !dbg !10379
  %0 = load i64, i64* %n.addr, align 8, !dbg !10380
  %1 = load i64, i64* %size.addr, align 8, !dbg !10381
  %2 = load i32, i32* %flags.addr, align 4, !dbg !10382
  %or = or i32 %2, 256, !dbg !10383
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !10384
  ret i8* %call, !dbg !10385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_init_desc(%struct.ksz_desc_info* %desc_info, i32 %transmit) #2 !dbg !10386 {
entry:
  %desc_info.addr = alloca %struct.ksz_desc_info*, align 8
  %transmit.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %phys = alloca i32, align 4
  %desc = alloca %struct.ksz_hw_desc*, align 8
  %cur = alloca %struct.ksz_desc*, align 8
  %previous = alloca %struct.ksz_desc*, align 8
  store %struct.ksz_desc_info* %desc_info, %struct.ksz_desc_info** %desc_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %desc_info.addr, metadata !10389, metadata !DIExpression()), !dbg !10390
  store i32 %transmit, i32* %transmit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %transmit.addr, metadata !10391, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10393, metadata !DIExpression()), !dbg !10394
  call void @llvm.dbg.declare(metadata i32* %phys, metadata !10395, metadata !DIExpression()), !dbg !10396
  %0 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10397
  %ring_phys = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %0, i32 0, i32 3, !dbg !10398
  %1 = load i32, i32* %ring_phys, align 8, !dbg !10398
  store i32 %1, i32* %phys, align 4, !dbg !10396
  call void @llvm.dbg.declare(metadata %struct.ksz_hw_desc** %desc, metadata !10399, metadata !DIExpression()), !dbg !10400
  %2 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10401
  %ring_virt = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %2, i32 0, i32 2, !dbg !10402
  %3 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %ring_virt, align 8, !dbg !10402
  store %struct.ksz_hw_desc* %3, %struct.ksz_hw_desc** %desc, align 8, !dbg !10400
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %cur, metadata !10403, metadata !DIExpression()), !dbg !10404
  %4 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10405
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %4, i32 0, i32 0, !dbg !10406
  %5 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !10406
  store %struct.ksz_desc* %5, %struct.ksz_desc** %cur, align 8, !dbg !10404
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %previous, metadata !10407, metadata !DIExpression()), !dbg !10408
  store %struct.ksz_desc* null, %struct.ksz_desc** %previous, align 8, !dbg !10408
  store i32 0, i32* %i, align 4, !dbg !10409
  br label %for.cond, !dbg !10411

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !10412
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10414
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 5, !dbg !10415
  %8 = load i32, i32* %alloc, align 8, !dbg !10415
  %cmp = icmp slt i32 %6, %8, !dbg !10416
  br i1 %cmp, label %for.body, label %for.end, !dbg !10417

for.body:                                         ; preds = %for.cond
  %9 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %desc, align 8, !dbg !10418
  %incdec.ptr = getelementptr %struct.ksz_hw_desc, %struct.ksz_hw_desc* %9, i32 1, !dbg !10418
  store %struct.ksz_hw_desc* %incdec.ptr, %struct.ksz_hw_desc** %desc, align 8, !dbg !10418
  %10 = load %struct.ksz_desc*, %struct.ksz_desc** %cur, align 8, !dbg !10420
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %10, i32 0, i32 0, !dbg !10421
  store %struct.ksz_hw_desc* %9, %struct.ksz_hw_desc** %phw, align 8, !dbg !10422
  %11 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10423
  %size = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %11, i32 0, i32 4, !dbg !10424
  %12 = load i32, i32* %size, align 4, !dbg !10424
  %13 = load i32, i32* %phys, align 4, !dbg !10425
  %add = add i32 %13, %12, !dbg !10425
  store i32 %add, i32* %phys, align 4, !dbg !10425
  %14 = load %struct.ksz_desc*, %struct.ksz_desc** %cur, align 8, !dbg !10426
  %incdec.ptr1 = getelementptr %struct.ksz_desc, %struct.ksz_desc* %14, i32 1, !dbg !10426
  store %struct.ksz_desc* %incdec.ptr1, %struct.ksz_desc** %cur, align 8, !dbg !10426
  store %struct.ksz_desc* %14, %struct.ksz_desc** %previous, align 8, !dbg !10427
  %15 = load i32, i32* %phys, align 4, !dbg !10428
  %16 = load %struct.ksz_desc*, %struct.ksz_desc** %previous, align 8, !dbg !10429
  %phw2 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %16, i32 0, i32 0, !dbg !10430
  %17 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw2, align 8, !dbg !10430
  %next = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %17, i32 0, i32 3, !dbg !10431
  store i32 %15, i32* %next, align 4, !dbg !10432
  br label %for.inc, !dbg !10433

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !10434
  %inc = add i32 %18, 1, !dbg !10434
  store i32 %inc, i32* %i, align 4, !dbg !10434
  br label %for.cond, !dbg !10435, !llvm.loop !10436

for.end:                                          ; preds = %for.cond
  %19 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10438
  %ring_phys3 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %19, i32 0, i32 3, !dbg !10438
  %20 = load i32, i32* %ring_phys3, align 8, !dbg !10438
  %21 = load %struct.ksz_desc*, %struct.ksz_desc** %previous, align 8, !dbg !10439
  %phw4 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %21, i32 0, i32 0, !dbg !10440
  %22 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw4, align 8, !dbg !10440
  %next5 = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %22, i32 0, i32 3, !dbg !10441
  store i32 %20, i32* %next5, align 4, !dbg !10442
  %23 = load %struct.ksz_desc*, %struct.ksz_desc** %previous, align 8, !dbg !10443
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %23, i32 0, i32 1, !dbg !10444
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !10445
  %rx = bitcast %union.desc_buf* %buf to %struct.ksz_desc_rx_buf*, !dbg !10446
  %24 = bitcast %struct.ksz_desc_rx_buf* %rx to i32*, !dbg !10447
  %bf.load = load i32, i32* %24, align 4, !dbg !10448
  %bf.clear = and i32 %bf.load, -33554433, !dbg !10448
  %bf.set = or i32 %bf.clear, 33554432, !dbg !10448
  store i32 %bf.set, i32* %24, align 4, !dbg !10448
  %25 = load %struct.ksz_desc*, %struct.ksz_desc** %previous, align 8, !dbg !10449
  %sw6 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %25, i32 0, i32 1, !dbg !10449
  %buf7 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw6, i32 0, i32 1, !dbg !10449
  %data = bitcast %union.desc_buf* %buf7 to i32*, !dbg !10449
  %26 = load i32, i32* %data, align 4, !dbg !10449
  %27 = load %struct.ksz_desc*, %struct.ksz_desc** %previous, align 8, !dbg !10450
  %phw8 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %27, i32 0, i32 0, !dbg !10451
  %28 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw8, align 8, !dbg !10451
  %buf9 = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %28, i32 0, i32 1, !dbg !10452
  %data10 = bitcast %union.desc_buf* %buf9 to i32*, !dbg !10453
  store i32 %26, i32* %data10, align 4, !dbg !10454
  %29 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10455
  %alloc11 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %29, i32 0, i32 5, !dbg !10456
  %30 = load i32, i32* %alloc11, align 8, !dbg !10456
  %31 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10457
  %avail = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %31, i32 0, i32 6, !dbg !10458
  store i32 %30, i32* %avail, align 4, !dbg !10459
  %32 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10460
  %next12 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %32, i32 0, i32 8, !dbg !10461
  store i32 0, i32* %next12, align 4, !dbg !10462
  %33 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10463
  %last = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %33, i32 0, i32 7, !dbg !10464
  store i32 0, i32* %last, align 8, !dbg !10465
  %34 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10466
  %ring13 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %34, i32 0, i32 0, !dbg !10467
  %35 = load %struct.ksz_desc*, %struct.ksz_desc** %ring13, align 8, !dbg !10467
  %36 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !10468
  %cur14 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %36, i32 0, i32 1, !dbg !10469
  store %struct.ksz_desc* %35, %struct.ksz_desc** %cur14, align 8, !dbg !10470
  ret void, !dbg !10471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #2 !dbg !10472 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8957, metadata !DIExpression()), !dbg !10473
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8967, metadata !DIExpression()), !dbg !10477
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8969, metadata !DIExpression()), !dbg !10478
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8971, metadata !DIExpression()), !dbg !10479
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8973, metadata !DIExpression()), !dbg !10480
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8979, metadata !DIExpression()), !dbg !10482
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8985, metadata !DIExpression()), !dbg !10484
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8994, metadata !DIExpression()), !dbg !10487
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8996, metadata !DIExpression()), !dbg !10488
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8998, metadata !DIExpression()), !dbg !10489
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9000, metadata !DIExpression()), !dbg !10490
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9002, metadata !DIExpression()), !dbg !10491
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9004, metadata !DIExpression()), !dbg !10492
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9006, metadata !DIExpression()), !dbg !10493
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9008, metadata !DIExpression()), !dbg !10494
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10495, metadata !DIExpression()), !dbg !10496
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10499, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10501, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !10503, metadata !DIExpression()), !dbg !10506
  %0 = load i64, i64* %n.addr, align 8, !dbg !10506
  store i64 %0, i64* %__a, align 8, !dbg !10506
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !10507, metadata !DIExpression()), !dbg !10506
  %1 = load i64, i64* %size.addr, align 8, !dbg !10506
  store i64 %1, i64* %__b, align 8, !dbg !10506
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !10508, metadata !DIExpression()), !dbg !10506
  store i64* %bytes, i64** %__d, align 8, !dbg !10506
  %cmp = icmp eq i64* %__a, %__b, !dbg !10506
  %conv = zext i1 %cmp to i32, !dbg !10506
  %2 = load i64*, i64** %__d, align 8, !dbg !10506
  %cmp1 = icmp eq i64* %__a, %2, !dbg !10506
  %conv2 = zext i1 %cmp1 to i32, !dbg !10506
  %3 = load i64, i64* %__a, align 8, !dbg !10506
  %4 = load i64, i64* %__b, align 8, !dbg !10506
  %5 = load i64*, i64** %__d, align 8, !dbg !10506
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !10506
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !10506
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !10506
  store i64 %8, i64* %5, align 8, !dbg !10506
  %frombool = zext i1 %7 to i8, !dbg !10506
  store i8 %frombool, i8* %tmp, align 1, !dbg !10506
  %9 = load i8, i8* %tmp, align 1, !dbg !10506
  %tobool = trunc i8 %9 to i1, !dbg !10506
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !10509
  %lnot = xor i1 %call, true, !dbg !10509
  %lnot3 = xor i1 %lnot, true, !dbg !10509
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10509
  %conv4 = sext i32 %lnot.ext to i64, !dbg !10509
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !10509
  br i1 %tobool5, label %if.then, label %if.end, !dbg !10510

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10511
  br label %return, !dbg !10511

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !10512
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !10513
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !10514

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !10515
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !10516
  br i1 %13, label %if.then6, label %if.end8, !dbg !10517

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !10518
  %15 = load i32, i32* %flags.addr, align 4, !dbg !10519
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !10520
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !10521
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !10522

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !10523
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !10524
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10525

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !10526
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !10527
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !10528
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !10529
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10491
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !10530
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10531
  %24 = load i32, i32* %order.i.i, align 4, !dbg !10532
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10533
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10534
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10535
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #15, !dbg !10536
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10536
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10536
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10536
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !10536
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10537
  br label %kmalloc.exit, !dbg !10537

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !10538
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10539
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !10539
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10540

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10541
  br label %kmalloc_index.exit.i, !dbg !10541

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10542
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !10543
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10544

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10545
  br label %kmalloc_index.exit.i, !dbg !10545

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10546
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !10547
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10548

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10549
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !10550
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10551

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10552
  br label %kmalloc_index.exit.i, !dbg !10552

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10553
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !10554
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10555

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10556
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !10557
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10558

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10559
  br label %kmalloc_index.exit.i, !dbg !10559

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10560
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !10561
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10562

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10563
  br label %kmalloc_index.exit.i, !dbg !10563

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10564
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !10565
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10566

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10567
  br label %kmalloc_index.exit.i, !dbg !10567

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10568
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !10569
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10570

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10571
  br label %kmalloc_index.exit.i, !dbg !10571

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10572
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !10573
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10574

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10575
  br label %kmalloc_index.exit.i, !dbg !10575

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10576
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !10577
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10578

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10579
  br label %kmalloc_index.exit.i, !dbg !10579

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10580
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !10581
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10582

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10583
  br label %kmalloc_index.exit.i, !dbg !10583

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10584
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !10585
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10586

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10587
  br label %kmalloc_index.exit.i, !dbg !10587

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10588
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !10589
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10590

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10591
  br label %kmalloc_index.exit.i, !dbg !10591

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10592
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !10593
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10594

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10595
  br label %kmalloc_index.exit.i, !dbg !10595

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10596
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !10597
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10598

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10599
  br label %kmalloc_index.exit.i, !dbg !10599

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10600
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !10601
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10602

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10603
  br label %kmalloc_index.exit.i, !dbg !10603

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10604
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !10605
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10606

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10607
  br label %kmalloc_index.exit.i, !dbg !10607

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10608
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !10609
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10610

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10611
  br label %kmalloc_index.exit.i, !dbg !10611

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10612
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !10613
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10614

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10615
  br label %kmalloc_index.exit.i, !dbg !10615

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10616
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !10617
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10618

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10619
  br label %kmalloc_index.exit.i, !dbg !10619

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10620
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !10621
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10622

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10623
  br label %kmalloc_index.exit.i, !dbg !10623

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10624
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !10625
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10626

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10627
  br label %kmalloc_index.exit.i, !dbg !10627

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10628
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !10629
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10630

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10631
  br label %kmalloc_index.exit.i, !dbg !10631

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10632
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !10633
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10634

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10635
  br label %kmalloc_index.exit.i, !dbg !10635

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10636
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !10637
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10638

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10639
  br label %kmalloc_index.exit.i, !dbg !10639

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10640
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !10641
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10642

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10643
  br label %kmalloc_index.exit.i, !dbg !10643

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10644
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !10645
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10646

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10647
  br label %kmalloc_index.exit.i, !dbg !10647

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10648
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !10649
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10650

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10651
  br label %kmalloc_index.exit.i, !dbg !10651

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10652
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !10653
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10654

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10655
  br label %kmalloc_index.exit.i, !dbg !10655

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !10656, !srcloc !9184
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !10657, !srcloc !9188
  unreachable, !dbg !10658

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !10659
  store i32 %59, i32* %index.i, align 4, !dbg !10660
  %60 = load i32, i32* %index.i, align 4, !dbg !10661
  %tobool.i = icmp ne i32 %60, 0, !dbg !10661
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10662

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10663
  br label %kmalloc.exit, !dbg !10663

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !10664
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10665
  %and.i.i = and i32 %62, 17, !dbg !10665
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10665
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10665
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10665
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10665
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10666

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10667
  br label %kmalloc_type.exit.i, !dbg !10667

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10668
  %and2.i.i = and i32 %63, 1, !dbg !10669
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10668
  %64 = zext i1 %tobool3.i.i to i64, !dbg !10668
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10668
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10670
  br label %kmalloc_type.exit.i, !dbg !10670

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !10671
  %idxprom.i = zext i32 %65 to i64, !dbg !10672
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10672
  %66 = load i32, i32* %index.i, align 4, !dbg !10673
  %idxprom6.i = zext i32 %66 to i64, !dbg !10672
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10672
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10672
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !10674
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !10675
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10676
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10677
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #15, !dbg !10678
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10678
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10678
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10678
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !10678
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10479
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10679
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !10680
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10681
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10682
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #15, !dbg !10683
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10684
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !10685
  store i8* %76, i8** %retval.i, align 8, !dbg !10686
  br label %kmalloc.exit, !dbg !10686

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !10687
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !10688
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #15, !dbg !10689
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10689
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10689
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10689
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !10689
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10690
  br label %kmalloc.exit, !dbg !10690

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !10691
  store i8* %79, i8** %retval, align 8, !dbg !10692
  br label %return, !dbg !10692

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !10693
  %81 = load i32, i32* %flags.addr, align 4, !dbg !10694
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !10695
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !10695
  %maskedptr = and i64 %ptrint, 7, !dbg !10695
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !10695
  call void @llvm.assume(i1 %maskcond), !dbg !10695
  store i8* %call9, i8** %retval, align 8, !dbg !10696
  br label %return, !dbg !10696

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !10697
  ret i8* %82, !dbg !10697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !10698 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !10704
  %tobool = trunc i8 %0 to i1, !dbg !10704
  %lnot = xor i1 %tobool, true, !dbg !10704
  %lnot1 = xor i1 %lnot, true, !dbg !10704
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10704
  %conv = sext i32 %lnot.ext to i64, !dbg !10704
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10704
  ret i1 %tobool2, !dbg !10705
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @hex_to_bin(i8 signext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #2 !dbg !10706 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10709, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !10711, metadata !DIExpression()), !dbg !10710
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10710
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #10, !dbg !10710, !srcloc !10712
  store i8 %1, i8* %ret, align 1, !dbg !10710
  %2 = load i8, i8* %ret, align 1, !dbg !10710
  ret i8 %2, !dbg !10710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @empty_addr(i8* %addr) #2 !dbg !10713 {
entry:
  %addr.addr = alloca i8*, align 8
  %addr1 = alloca i32*, align 8
  %addr2 = alloca i16*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.declare(metadata i32** %addr1, metadata !10718, metadata !DIExpression()), !dbg !10719
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10720
  %1 = bitcast i8* %0 to i32*, !dbg !10721
  store i32* %1, i32** %addr1, align 8, !dbg !10719
  call void @llvm.dbg.declare(metadata i16** %addr2, metadata !10722, metadata !DIExpression()), !dbg !10723
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !10724
  %arrayidx = getelementptr i8, i8* %2, i64 4, !dbg !10724
  %3 = bitcast i8* %arrayidx to i16*, !dbg !10725
  store i16* %3, i16** %addr2, align 8, !dbg !10723
  %4 = load i32*, i32** %addr1, align 8, !dbg !10726
  %5 = load i32, i32* %4, align 4, !dbg !10727
  %cmp = icmp eq i32 0, %5, !dbg !10728
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10729

land.rhs:                                         ; preds = %entry
  %6 = load i16*, i16** %addr2, align 8, !dbg !10730
  %7 = load i16, i16* %6, align 2, !dbg !10731
  %conv = zext i16 %7 to i32, !dbg !10731
  %cmp1 = icmp eq i32 0, %conv, !dbg !10732
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !10733
  %land.ext = zext i1 %8 to i32, !dbg !10729
  ret i32 %land.ext, !dbg !10734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_addr(%struct.ksz_hw* %hw) #2 !dbg !10735 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10736, metadata !DIExpression()), !dbg !10737
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10738, metadata !DIExpression()), !dbg !10739
  store i32 0, i32* %i, align 4, !dbg !10740
  br label %for.cond, !dbg !10742

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10743
  %cmp = icmp slt i32 %0, 6, !dbg !10745
  br i1 %cmp, label %for.body, label %for.end, !dbg !10746

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10747
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 20, !dbg !10748
  %2 = load i32, i32* %i, align 4, !dbg !10749
  %sub = sub i32 5, %2, !dbg !10749
  %idxprom = sext i32 %sub to i64, !dbg !10747
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %override_addr, i64 0, i64 %idxprom, !dbg !10747
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10747
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10750
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !10751
  %5 = load i8*, i8** %io, align 8, !dbg !10751
  %add.ptr = getelementptr i8, i8* %5, i64 512, !dbg !10752
  %6 = load i32, i32* %i, align 4, !dbg !10753
  %idx.ext = sext i32 %6 to i64, !dbg !10754
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10754
  call void @writeb(i8 zeroext %3, i8* %add.ptr1) #12, !dbg !10755
  br label %for.inc, !dbg !10755

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !10756
  %inc = add i32 %7, 1, !dbg !10756
  store i32 %inc, i32* %i, align 4, !dbg !10756
  br label %for.cond, !dbg !10757, !llvm.loop !10758

for.end:                                          ; preds = %for.cond
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10760
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10761
  %override_addr2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 20, !dbg !10762
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr2, i64 0, i64 0, !dbg !10761
  call void @sw_set_addr(%struct.ksz_hw* %8, i8* %arraydecay) #12, !dbg !10763
  ret void, !dbg !10764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !10765 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !10768, metadata !DIExpression()), !dbg !10769
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10770, metadata !DIExpression()), !dbg !10769
  %0 = load i8, i8* %val.addr, align 1, !dbg !10769
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10769
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !10769, !srcloc !10771
  ret void, !dbg !10769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_set_addr(%struct.ksz_hw* %hw, i8* %mac_addr) #2 !dbg !10772 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %mac_addr.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10775, metadata !DIExpression()), !dbg !10776
  store i8* %mac_addr, i8** %mac_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac_addr.addr, metadata !10777, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10779, metadata !DIExpression()), !dbg !10780
  store i32 0, i32* %i, align 4, !dbg !10781
  br label %for.cond, !dbg !10783

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10784
  %cmp = icmp slt i32 %0, 6, !dbg !10786
  br i1 %cmp, label %for.body, label %for.end, !dbg !10787

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %mac_addr.addr, align 8, !dbg !10788
  %2 = load i32, i32* %i, align 4, !dbg !10790
  %idxprom = sext i32 %2 to i64, !dbg !10788
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !10788
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10788
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10791
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !10792
  %5 = load i8*, i8** %io, align 8, !dbg !10792
  %add.ptr = getelementptr i8, i8* %5, i64 1137, !dbg !10793
  %6 = load i32, i32* %i, align 4, !dbg !10794
  %idx.ext = sext i32 %6 to i64, !dbg !10795
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10795
  call void @writeb(i8 zeroext %3, i8* %add.ptr1) #12, !dbg !10796
  %7 = load i8*, i8** %mac_addr.addr, align 8, !dbg !10797
  %8 = load i32, i32* %i, align 4, !dbg !10798
  %add = add i32 1, %8, !dbg !10799
  %idxprom2 = sext i32 %add to i64, !dbg !10797
  %arrayidx3 = getelementptr i8, i8* %7, i64 %idxprom2, !dbg !10797
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !10797
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10800
  %io4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 0, !dbg !10801
  %11 = load i8*, i8** %io4, align 8, !dbg !10801
  %add.ptr5 = getelementptr i8, i8* %11, i64 1136, !dbg !10802
  %12 = load i32, i32* %i, align 4, !dbg !10803
  %idx.ext6 = sext i32 %12 to i64, !dbg !10804
  %add.ptr7 = getelementptr i8, i8* %add.ptr5, i64 %idx.ext6, !dbg !10804
  call void @writeb(i8 zeroext %9, i8* %add.ptr7) #12, !dbg !10805
  br label %for.inc, !dbg !10806

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !10807
  %add8 = add i32 %13, 2, !dbg !10807
  store i32 %add8, i32* %i, align 4, !dbg !10807
  br label %for.cond, !dbg !10808, !llvm.loop !10809

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @eeprom_read(%struct.ksz_hw* %hw, i8 zeroext %reg) #2 !dbg !10812 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %reg.addr = alloca i8, align 1
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i16* %data, metadata !10819, metadata !DIExpression()), !dbg !10820
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10821
  call void @raise_gpio(%struct.ksz_hw* %0, i8 zeroext 17) #12, !dbg !10822
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10823
  %2 = load i8, i8* %reg.addr, align 1, !dbg !10824
  call void @spi_reg(%struct.ksz_hw* %1, i8 zeroext 2, i8 zeroext %2) #12, !dbg !10825
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10826
  %call = call zeroext i16 @spi_r(%struct.ksz_hw* %3) #12, !dbg !10827
  store i16 %call, i16* %data, align 2, !dbg !10828
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10829
  call void @drop_gpio(%struct.ksz_hw* %4, i8 zeroext 17) #12, !dbg !10830
  %5 = load i16, i16* %data, align 2, !dbg !10831
  ret i16 %5, !dbg !10832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @raise_gpio(%struct.ksz_hw* %hw, i8 zeroext %gpio) #2 !dbg !10833 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %gpio.addr = alloca i8, align 1
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10836, metadata !DIExpression()), !dbg !10837
  store i8 %gpio, i8* %gpio.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %gpio.addr, metadata !10838, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.declare(metadata i16* %data, metadata !10840, metadata !DIExpression()), !dbg !10841
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10842
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !10843
  %1 = load i8*, i8** %io, align 8, !dbg !10843
  %add.ptr = getelementptr i8, i8* %1, i64 530, !dbg !10844
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !10845
  store i16 %call, i16* %data, align 2, !dbg !10846
  %2 = load i8, i8* %gpio.addr, align 1, !dbg !10847
  %conv = zext i8 %2 to i32, !dbg !10847
  %3 = load i16, i16* %data, align 2, !dbg !10848
  %conv1 = zext i16 %3 to i32, !dbg !10848
  %or = or i32 %conv1, %conv, !dbg !10848
  %conv2 = trunc i32 %or to i16, !dbg !10848
  store i16 %conv2, i16* %data, align 2, !dbg !10848
  %4 = load i16, i16* %data, align 2, !dbg !10849
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10850
  %io3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 0, !dbg !10851
  %6 = load i8*, i8** %io3, align 8, !dbg !10851
  %add.ptr4 = getelementptr i8, i8* %6, i64 530, !dbg !10852
  call void @writew(i16 zeroext %4, i8* %add.ptr4) #12, !dbg !10853
  ret void, !dbg !10854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_reg(%struct.ksz_hw* %hw, i8 zeroext %data, i8 zeroext %reg) #2 !dbg !10855 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %data.addr = alloca i8, align 1
  %reg.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10858, metadata !DIExpression()), !dbg !10859
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !10860, metadata !DIExpression()), !dbg !10861
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !10862, metadata !DIExpression()), !dbg !10863
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10864, metadata !DIExpression()), !dbg !10865
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10866
  call void @raise_gpio(%struct.ksz_hw* %0, i8 zeroext 4) #12, !dbg !10867
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10868
  call void @eeprom_clk(%struct.ksz_hw* %1) #12, !dbg !10869
  store i32 1, i32* %i, align 4, !dbg !10870
  br label %for.cond, !dbg !10872

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10873
  %cmp = icmp sge i32 %2, 0, !dbg !10875
  br i1 %cmp, label %for.body, label %for.end, !dbg !10876

for.body:                                         ; preds = %for.cond
  %3 = load i8, i8* %data.addr, align 1, !dbg !10877
  %conv = zext i8 %3 to i32, !dbg !10877
  %4 = load i32, i32* %i, align 4, !dbg !10879
  %shl = shl i32 1, %4, !dbg !10880
  %and = and i32 %conv, %shl, !dbg !10881
  %tobool = icmp ne i32 %and, 0, !dbg !10881
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10882

cond.true:                                        ; preds = %for.body
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10883
  call void @raise_gpio(%struct.ksz_hw* %5, i8 zeroext 4) #12, !dbg !10884
  br label %cond.end, !dbg !10882

cond.false:                                       ; preds = %for.body
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10885
  call void @drop_gpio(%struct.ksz_hw* %6, i8 zeroext 4) #12, !dbg !10886
  br label %cond.end, !dbg !10882

cond.end:                                         ; preds = %cond.false, %cond.true
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10887
  call void @eeprom_clk(%struct.ksz_hw* %7) #12, !dbg !10888
  br label %for.inc, !dbg !10889

for.inc:                                          ; preds = %cond.end
  %8 = load i32, i32* %i, align 4, !dbg !10890
  %dec = add i32 %8, -1, !dbg !10890
  store i32 %dec, i32* %i, align 4, !dbg !10890
  br label %for.cond, !dbg !10891, !llvm.loop !10892

for.end:                                          ; preds = %for.cond
  store i32 5, i32* %i, align 4, !dbg !10894
  br label %for.cond1, !dbg !10896

for.cond1:                                        ; preds = %for.inc12, %for.end
  %9 = load i32, i32* %i, align 4, !dbg !10897
  %cmp2 = icmp sge i32 %9, 0, !dbg !10899
  br i1 %cmp2, label %for.body4, label %for.end14, !dbg !10900

for.body4:                                        ; preds = %for.cond1
  %10 = load i8, i8* %reg.addr, align 1, !dbg !10901
  %conv5 = zext i8 %10 to i32, !dbg !10901
  %11 = load i32, i32* %i, align 4, !dbg !10903
  %shl6 = shl i32 1, %11, !dbg !10904
  %and7 = and i32 %conv5, %shl6, !dbg !10905
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10905
  br i1 %tobool8, label %cond.true9, label %cond.false10, !dbg !10906

cond.true9:                                       ; preds = %for.body4
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10907
  call void @raise_gpio(%struct.ksz_hw* %12, i8 zeroext 4) #12, !dbg !10908
  br label %cond.end11, !dbg !10906

cond.false10:                                     ; preds = %for.body4
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10909
  call void @drop_gpio(%struct.ksz_hw* %13, i8 zeroext 4) #12, !dbg !10910
  br label %cond.end11, !dbg !10906

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10911
  call void @eeprom_clk(%struct.ksz_hw* %14) #12, !dbg !10912
  br label %for.inc12, !dbg !10913

for.inc12:                                        ; preds = %cond.end11
  %15 = load i32, i32* %i, align 4, !dbg !10914
  %dec13 = add i32 %15, -1, !dbg !10914
  store i32 %dec13, i32* %i, align 4, !dbg !10914
  br label %for.cond1, !dbg !10915, !llvm.loop !10916

for.end14:                                        ; preds = %for.cond1
  ret void, !dbg !10918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @spi_r(%struct.ksz_hw* %hw) #2 !dbg !10919 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  %temp = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10922, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10924, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.declare(metadata i16* %temp, metadata !10926, metadata !DIExpression()), !dbg !10927
  store i16 0, i16* %temp, align 2, !dbg !10927
  store i32 15, i32* %i, align 4, !dbg !10928
  br label %for.cond, !dbg !10930

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10931
  %cmp = icmp sge i32 %0, 0, !dbg !10933
  br i1 %cmp, label %for.body, label %for.end, !dbg !10934

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10935
  call void @raise_gpio(%struct.ksz_hw* %1, i8 zeroext 2) #12, !dbg !10937
  call void @__const_udelay(i64 17180) #12, !dbg !10938
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10943
  %call = call zeroext i8 @state_gpio(%struct.ksz_hw* %2, i8 zeroext 8) #12, !dbg !10944
  %conv = zext i8 %call to i32, !dbg !10945
  %tobool = icmp ne i32 %conv, 0, !dbg !10945
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10945

cond.true:                                        ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !10946
  %shl = shl i32 1, %3, !dbg !10947
  br label %cond.end, !dbg !10945

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !10945

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shl, %cond.true ], [ 0, %cond.false ], !dbg !10945
  %4 = load i16, i16* %temp, align 2, !dbg !10948
  %conv1 = zext i16 %4 to i32, !dbg !10948
  %or = or i32 %conv1, %cond, !dbg !10948
  %conv2 = trunc i32 %or to i16, !dbg !10948
  store i16 %conv2, i16* %temp, align 2, !dbg !10948
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10949
  call void @drop_gpio(%struct.ksz_hw* %5, i8 zeroext 2) #12, !dbg !10950
  call void @__const_udelay(i64 17180) #12, !dbg !10951
  br label %for.inc, !dbg !10956

for.inc:                                          ; preds = %cond.end
  %6 = load i32, i32* %i, align 4, !dbg !10957
  %dec = add i32 %6, -1, !dbg !10957
  store i32 %dec, i32* %i, align 4, !dbg !10957
  br label %for.cond, !dbg !10958, !llvm.loop !10959

for.end:                                          ; preds = %for.cond
  %7 = load i16, i16* %temp, align 2, !dbg !10961
  ret i16 %7, !dbg !10962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drop_gpio(%struct.ksz_hw* %hw, i8 zeroext %gpio) #2 !dbg !10963 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %gpio.addr = alloca i8, align 1
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  store i8 %gpio, i8* %gpio.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %gpio.addr, metadata !10966, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.declare(metadata i16* %data, metadata !10968, metadata !DIExpression()), !dbg !10969
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10970
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !10971
  %1 = load i8*, i8** %io, align 8, !dbg !10971
  %add.ptr = getelementptr i8, i8* %1, i64 530, !dbg !10972
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !10973
  store i16 %call, i16* %data, align 2, !dbg !10974
  %2 = load i8, i8* %gpio.addr, align 1, !dbg !10975
  %conv = zext i8 %2 to i32, !dbg !10975
  %neg = xor i32 %conv, -1, !dbg !10976
  %3 = load i16, i16* %data, align 2, !dbg !10977
  %conv1 = zext i16 %3 to i32, !dbg !10977
  %and = and i32 %conv1, %neg, !dbg !10977
  %conv2 = trunc i32 %and to i16, !dbg !10977
  store i16 %conv2, i16* %data, align 2, !dbg !10977
  %4 = load i16, i16* %data, align 2, !dbg !10978
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10979
  %io3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 0, !dbg !10980
  %6 = load i8*, i8** %io3, align 8, !dbg !10980
  %add.ptr4 = getelementptr i8, i8* %6, i64 530, !dbg !10981
  call void @writew(i16 zeroext %4, i8* %add.ptr4) #12, !dbg !10982
  ret void, !dbg !10983
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eeprom_clk(%struct.ksz_hw* %hw) #2 !dbg !10984 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !10985, metadata !DIExpression()), !dbg !10986
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10987
  call void @raise_gpio(%struct.ksz_hw* %0, i8 zeroext 2) #12, !dbg !10988
  call void @__const_udelay(i64 17180) #12, !dbg !10989
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !10994
  call void @drop_gpio(%struct.ksz_hw* %1, i8 zeroext 2) #12, !dbg !10995
  call void @__const_udelay(i64 17180) #12, !dbg !10996
  ret void, !dbg !11001
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @state_gpio(%struct.ksz_hw* %hw, i8 zeroext %gpio) #2 !dbg !11002 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %gpio.addr = alloca i8, align 1
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  store i8 %gpio, i8* %gpio.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %gpio.addr, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11009, metadata !DIExpression()), !dbg !11010
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11011
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !11012
  %1 = load i8*, i8** %io, align 8, !dbg !11012
  %add.ptr = getelementptr i8, i8* %1, i64 530, !dbg !11013
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11014
  store i16 %call, i16* %data, align 2, !dbg !11015
  %2 = load i16, i16* %data, align 2, !dbg !11016
  %conv = zext i16 %2 to i32, !dbg !11016
  %3 = load i8, i8* %gpio.addr, align 1, !dbg !11017
  %conv1 = zext i8 %3 to i32, !dbg !11017
  %and = and i32 %conv, %conv1, !dbg !11018
  %conv2 = trunc i32 %and to i8, !dbg !11019
  ret i8 %conv2, !dbg !11020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_set_global_ctrl(%struct.ksz_hw* %hw) #2 !dbg !11021 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11022, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11024, metadata !DIExpression()), !dbg !11025
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11026
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !11027
  %1 = load i8*, i8** %io, align 8, !dbg !11027
  %add.ptr = getelementptr i8, i8* %1, i64 1030, !dbg !11028
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11029
  store i16 %call, i16* %data, align 2, !dbg !11030
  %2 = load i16, i16* %data, align 2, !dbg !11031
  %conv = zext i16 %2 to i32, !dbg !11031
  %or = or i32 %conv, 32, !dbg !11031
  %conv1 = trunc i32 %or to i16, !dbg !11031
  store i16 %conv1, i16* %data, align 2, !dbg !11031
  %3 = load i16, i16* %data, align 2, !dbg !11032
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11033
  %io2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !11034
  %5 = load i8*, i8** %io2, align 8, !dbg !11034
  %add.ptr3 = getelementptr i8, i8* %5, i64 1030, !dbg !11035
  call void @writew(i16 zeroext %3, i8* %add.ptr3) #12, !dbg !11036
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11037
  %io4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 0, !dbg !11038
  %7 = load i8*, i8** %io4, align 8, !dbg !11038
  %add.ptr5 = getelementptr i8, i8* %7, i64 1026, !dbg !11039
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !11040
  store i16 %call6, i16* %data, align 2, !dbg !11041
  %8 = load i16, i16* %data, align 2, !dbg !11042
  %conv7 = zext i16 %8 to i32, !dbg !11042
  %or8 = or i32 %conv7, 256, !dbg !11042
  %conv9 = trunc i32 %or8 to i16, !dbg !11042
  store i16 %conv9, i16* %data, align 2, !dbg !11042
  %9 = load i16, i16* %data, align 2, !dbg !11043
  %conv10 = zext i16 %9 to i32, !dbg !11043
  %or11 = or i32 %conv10, 1024, !dbg !11043
  %conv12 = trunc i32 %or11 to i16, !dbg !11043
  store i16 %conv12, i16* %data, align 2, !dbg !11043
  %10 = load i16, i16* %data, align 2, !dbg !11044
  %conv13 = zext i16 %10 to i32, !dbg !11044
  %or14 = or i32 %conv13, 1, !dbg !11044
  %conv15 = trunc i32 %or14 to i16, !dbg !11044
  store i16 %conv15, i16* %data, align 2, !dbg !11044
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11045
  %overrides = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 33, !dbg !11047
  %12 = load i32, i32* %overrides, align 4, !dbg !11047
  %and = and i32 %12, 2, !dbg !11048
  %tobool = icmp ne i32 %and, 0, !dbg !11048
  br i1 %tobool, label %if.then, label %if.else, !dbg !11049

if.then:                                          ; preds = %entry
  %13 = load i16, i16* %data, align 2, !dbg !11050
  %conv16 = zext i16 %13 to i32, !dbg !11050
  %or17 = or i32 %conv16, 512, !dbg !11050
  %conv18 = trunc i32 %or17 to i16, !dbg !11050
  store i16 %conv18, i16* %data, align 2, !dbg !11050
  br label %if.end, !dbg !11051

if.else:                                          ; preds = %entry
  %14 = load i16, i16* %data, align 2, !dbg !11052
  %conv19 = zext i16 %14 to i32, !dbg !11052
  %and20 = and i32 %conv19, -513, !dbg !11052
  %conv21 = trunc i32 %and20 to i16, !dbg !11052
  store i16 %conv21, i16* %data, align 2, !dbg !11052
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i16, i16* %data, align 2, !dbg !11053
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11054
  %io22 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 0, !dbg !11055
  %17 = load i8*, i8** %io22, align 8, !dbg !11055
  %add.ptr23 = getelementptr i8, i8* %17, i64 1026, !dbg !11056
  call void @writew(i16 zeroext %15, i8* %add.ptr23) #12, !dbg !11057
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11058
  %io24 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 0, !dbg !11059
  %19 = load i8*, i8** %io24, align 8, !dbg !11059
  %add.ptr25 = getelementptr i8, i8* %19, i64 1028, !dbg !11060
  %call26 = call zeroext i16 @readw(i8* %add.ptr25) #12, !dbg !11061
  store i16 %call26, i16* %data, align 2, !dbg !11062
  %20 = load i16, i16* %data, align 2, !dbg !11063
  %conv27 = zext i16 %20 to i32, !dbg !11063
  %or28 = or i32 %conv27, 8, !dbg !11063
  %conv29 = trunc i32 %or28 to i16, !dbg !11063
  store i16 %conv29, i16* %data, align 2, !dbg !11063
  %21 = load i16, i16* %data, align 2, !dbg !11064
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11065
  %io30 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %22, i32 0, i32 0, !dbg !11066
  %23 = load i8*, i8** %io30, align 8, !dbg !11066
  %add.ptr31 = getelementptr i8, i8* %23, i64 1028, !dbg !11067
  call void @writew(i16 zeroext %21, i8* %add.ptr31) #12, !dbg !11068
  ret void, !dbg !11069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_init_broad_storm(%struct.ksz_hw* %hw) #2 !dbg !11070 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11073, metadata !DIExpression()), !dbg !11074
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11075
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !11076
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11076
  %broad_per = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %1, i32 0, i32 7, !dbg !11077
  store i8 1, i8* %broad_per, align 4, !dbg !11078
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11079
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11080
  %ksz_switch1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 1, !dbg !11081
  %4 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch1, align 8, !dbg !11081
  %broad_per2 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %4, i32 0, i32 7, !dbg !11082
  %5 = load i8, i8* %broad_per2, align 4, !dbg !11082
  call void @sw_cfg_broad_storm(%struct.ksz_hw* %2, i8 zeroext %5) #12, !dbg !11083
  store i32 0, i32* %port, align 4, !dbg !11084
  br label %for.cond, !dbg !11086

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %port, align 4, !dbg !11087
  %cmp = icmp slt i32 %6, 3, !dbg !11089
  br i1 %cmp, label %for.body, label %for.end, !dbg !11090

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11091
  %8 = load i32, i32* %port, align 4, !dbg !11092
  call void @sw_dis_broad_storm(%struct.ksz_hw* %7, i32 %8) #12, !dbg !11093
  br label %for.inc, !dbg !11093

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %port, align 4, !dbg !11094
  %inc = add i32 %9, 1, !dbg !11094
  store i32 %inc, i32* %port, align 4, !dbg !11094
  br label %for.cond, !dbg !11095, !llvm.loop !11096

for.end:                                          ; preds = %for.cond
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11098
  call void @sw_cfg(%struct.ksz_hw* %10, i32 1028, i16 zeroext 64, i32 1) #12, !dbg !11099
  ret void, !dbg !11100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_cfg_broad_storm(%struct.ksz_hw* %hw, i8 zeroext %percent) #2 !dbg !11101 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %percent.addr = alloca i8, align 1
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11102, metadata !DIExpression()), !dbg !11103
  store i8 %percent, i8* %percent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %percent.addr, metadata !11104, metadata !DIExpression()), !dbg !11105
  %0 = load i8, i8* %percent.addr, align 1, !dbg !11106
  %conv = zext i8 %0 to i32, !dbg !11106
  %cmp = icmp sgt i32 %conv, 100, !dbg !11108
  br i1 %cmp, label %if.then, label %if.end, !dbg !11109

if.then:                                          ; preds = %entry
  store i8 100, i8* %percent.addr, align 1, !dbg !11110
  br label %if.end, !dbg !11111

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11112
  %2 = load i8, i8* %percent.addr, align 1, !dbg !11113
  call void @sw_cfg_broad_storm(%struct.ksz_hw* %1, i8 zeroext %2) #12, !dbg !11114
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11115
  call void @sw_get_broad_storm(%struct.ksz_hw* %3, i8* %percent.addr) #12, !dbg !11116
  %4 = load i8, i8* %percent.addr, align 1, !dbg !11117
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11118
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 1, !dbg !11119
  %6 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11119
  %broad_per = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %6, i32 0, i32 7, !dbg !11120
  store i8 %4, i8* %broad_per, align 4, !dbg !11121
  ret void, !dbg !11122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_ena_broad_storm(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !11123 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11126, metadata !DIExpression()), !dbg !11127
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11130
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11131
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 1, !dbg !11132
  %2 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11132
  %broad_per = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %2, i32 0, i32 7, !dbg !11133
  %3 = load i8, i8* %broad_per, align 4, !dbg !11133
  call void @sw_cfg_broad_storm(%struct.ksz_hw* %0, i8 zeroext %3) #12, !dbg !11134
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11135
  %5 = load i32, i32* %port.addr, align 4, !dbg !11136
  call void @port_cfg_broad_storm(%struct.ksz_hw* %4, i32 %5, i32 1) #12, !dbg !11137
  ret void, !dbg !11138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_init_prio(%struct.ksz_hw* %hw) #2 !dbg !11139 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  %tos = alloca i32, align 4
  %sw = alloca %struct.ksz_switch*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11140, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11142, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.declare(metadata i32* %tos, metadata !11144, metadata !DIExpression()), !dbg !11145
  call void @llvm.dbg.declare(metadata %struct.ksz_switch** %sw, metadata !11146, metadata !DIExpression()), !dbg !11147
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11148
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !11149
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11149
  store %struct.ksz_switch* %1, %struct.ksz_switch** %sw, align 8, !dbg !11147
  %2 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11150
  %p_802_1p = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %2, i32 0, i32 4, !dbg !11151
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %p_802_1p, i64 0, i64 0, !dbg !11150
  store i8 0, i8* %arrayidx, align 4, !dbg !11152
  %3 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11153
  %p_802_1p1 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %3, i32 0, i32 4, !dbg !11154
  %arrayidx2 = getelementptr [8 x i8], [8 x i8]* %p_802_1p1, i64 0, i64 1, !dbg !11153
  store i8 0, i8* %arrayidx2, align 1, !dbg !11155
  %4 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11156
  %p_802_1p3 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %4, i32 0, i32 4, !dbg !11157
  %arrayidx4 = getelementptr [8 x i8], [8 x i8]* %p_802_1p3, i64 0, i64 2, !dbg !11156
  store i8 1, i8* %arrayidx4, align 2, !dbg !11158
  %5 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11159
  %p_802_1p5 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %5, i32 0, i32 4, !dbg !11160
  %arrayidx6 = getelementptr [8 x i8], [8 x i8]* %p_802_1p5, i64 0, i64 3, !dbg !11159
  store i8 1, i8* %arrayidx6, align 1, !dbg !11161
  %6 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11162
  %p_802_1p7 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %6, i32 0, i32 4, !dbg !11163
  %arrayidx8 = getelementptr [8 x i8], [8 x i8]* %p_802_1p7, i64 0, i64 4, !dbg !11162
  store i8 2, i8* %arrayidx8, align 4, !dbg !11164
  %7 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11165
  %p_802_1p9 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %7, i32 0, i32 4, !dbg !11166
  %arrayidx10 = getelementptr [8 x i8], [8 x i8]* %p_802_1p9, i64 0, i64 5, !dbg !11165
  store i8 2, i8* %arrayidx10, align 1, !dbg !11167
  %8 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11168
  %p_802_1p11 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %8, i32 0, i32 4, !dbg !11169
  %arrayidx12 = getelementptr [8 x i8], [8 x i8]* %p_802_1p11, i64 0, i64 6, !dbg !11168
  store i8 3, i8* %arrayidx12, align 2, !dbg !11170
  %9 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11171
  %p_802_1p13 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %9, i32 0, i32 4, !dbg !11172
  %arrayidx14 = getelementptr [8 x i8], [8 x i8]* %p_802_1p13, i64 0, i64 7, !dbg !11171
  store i8 3, i8* %arrayidx14, align 1, !dbg !11173
  store i32 0, i32* %tos, align 4, !dbg !11174
  br label %for.cond, !dbg !11176

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %tos, align 4, !dbg !11177
  %cmp = icmp slt i32 %10, 64, !dbg !11179
  br i1 %cmp, label %for.body, label %for.end, !dbg !11180

for.body:                                         ; preds = %for.cond
  %11 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11181
  %diffserv = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %11, i32 0, i32 3, !dbg !11182
  %12 = load i32, i32* %tos, align 4, !dbg !11183
  %idxprom = sext i32 %12 to i64, !dbg !11181
  %arrayidx15 = getelementptr [64 x i8], [64 x i8]* %diffserv, i64 0, i64 %idxprom, !dbg !11181
  store i8 0, i8* %arrayidx15, align 1, !dbg !11184
  br label %for.inc, !dbg !11181

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %tos, align 4, !dbg !11185
  %inc = add i32 %13, 1, !dbg !11185
  store i32 %inc, i32* %tos, align 4, !dbg !11185
  br label %for.cond, !dbg !11186, !llvm.loop !11187

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %port, align 4, !dbg !11189
  br label %for.cond16, !dbg !11191

for.cond16:                                       ; preds = %for.inc25, %for.end
  %14 = load i32, i32* %port, align 4, !dbg !11192
  %cmp17 = icmp slt i32 %14, 3, !dbg !11194
  br i1 %cmp17, label %for.body18, label %for.end27, !dbg !11195

for.body18:                                       ; preds = %for.cond16
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11196
  %16 = load i32, i32* %port, align 4, !dbg !11198
  call void @sw_dis_multi_queue(%struct.ksz_hw* %15, i32 %16) #12, !dbg !11199
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11200
  %18 = load i32, i32* %port, align 4, !dbg !11201
  call void @sw_dis_diffserv(%struct.ksz_hw* %17, i32 %18) #12, !dbg !11202
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11203
  %20 = load i32, i32* %port, align 4, !dbg !11204
  call void @sw_dis_802_1p(%struct.ksz_hw* %19, i32 %20) #12, !dbg !11205
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11206
  %22 = load i32, i32* %port, align 4, !dbg !11207
  call void @sw_cfg_replace_vid(%struct.ksz_hw* %21, i32 %22, i32 0) #12, !dbg !11208
  %23 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11209
  %port_cfg = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %23, i32 0, i32 2, !dbg !11210
  %24 = load i32, i32* %port, align 4, !dbg !11211
  %idxprom19 = sext i32 %24 to i64, !dbg !11209
  %arrayidx20 = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg, i64 0, i64 %idxprom19, !dbg !11209
  %port_prio = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx20, i32 0, i32 2, !dbg !11212
  store i8 0, i8* %port_prio, align 1, !dbg !11213
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11214
  %26 = load i32, i32* %port, align 4, !dbg !11215
  %27 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11216
  %port_cfg21 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %27, i32 0, i32 2, !dbg !11217
  %28 = load i32, i32* %port, align 4, !dbg !11218
  %idxprom22 = sext i32 %28 to i64, !dbg !11216
  %arrayidx23 = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg21, i64 0, i64 %idxprom22, !dbg !11216
  %port_prio24 = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx23, i32 0, i32 2, !dbg !11219
  %29 = load i8, i8* %port_prio24, align 1, !dbg !11219
  call void @sw_cfg_port_based(%struct.ksz_hw* %25, i32 %26, i8 zeroext %29) #12, !dbg !11220
  br label %for.inc25, !dbg !11221

for.inc25:                                        ; preds = %for.body18
  %30 = load i32, i32* %port, align 4, !dbg !11222
  %inc26 = add i32 %30, 1, !dbg !11222
  store i32 %inc26, i32* %port, align 4, !dbg !11222
  br label %for.cond16, !dbg !11223, !llvm.loop !11224

for.end27:                                        ; preds = %for.cond16
  %31 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11226
  call void @sw_cfg_replace_null_vid(%struct.ksz_hw* %31, i32 0) #12, !dbg !11227
  ret void, !dbg !11228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_init_mirror(%struct.ksz_hw* %hw) #2 !dbg !11229 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11232, metadata !DIExpression()), !dbg !11233
  store i32 0, i32* %port, align 4, !dbg !11234
  br label %for.cond, !dbg !11236

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %port, align 4, !dbg !11237
  %cmp = icmp slt i32 %0, 3, !dbg !11239
  br i1 %cmp, label %for.body, label %for.end, !dbg !11240

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11241
  %2 = load i32, i32* %port, align 4, !dbg !11243
  call void @port_cfg_mirror_sniffer(%struct.ksz_hw* %1, i32 %2, i32 0) #12, !dbg !11244
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11245
  %4 = load i32, i32* %port, align 4, !dbg !11246
  call void @port_cfg_mirror_rx(%struct.ksz_hw* %3, i32 %4, i32 0) #12, !dbg !11247
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11248
  %6 = load i32, i32* %port, align 4, !dbg !11249
  call void @port_cfg_mirror_tx(%struct.ksz_hw* %5, i32 %6, i32 0) #12, !dbg !11250
  br label %for.inc, !dbg !11251

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %port, align 4, !dbg !11252
  %inc = add i32 %7, 1, !dbg !11252
  store i32 %inc, i32* %port, align 4, !dbg !11252
  br label %for.cond, !dbg !11253, !llvm.loop !11254

for.end:                                          ; preds = %for.cond
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11256
  call void @sw_cfg_mirror_rx_tx(%struct.ksz_hw* %8, i32 0) #12, !dbg !11257
  ret void, !dbg !11258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_init_prio_rate(%struct.ksz_hw* %hw) #2 !dbg !11259 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  %prio = alloca i32, align 4
  %sw = alloca %struct.ksz_switch*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11260, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11262, metadata !DIExpression()), !dbg !11263
  call void @llvm.dbg.declare(metadata i32* %prio, metadata !11264, metadata !DIExpression()), !dbg !11265
  call void @llvm.dbg.declare(metadata %struct.ksz_switch** %sw, metadata !11266, metadata !DIExpression()), !dbg !11267
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11268
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !11269
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11269
  store %struct.ksz_switch* %1, %struct.ksz_switch** %sw, align 8, !dbg !11267
  store i32 0, i32* %port, align 4, !dbg !11270
  br label %for.cond, !dbg !11272

for.cond:                                         ; preds = %for.inc11, %entry
  %2 = load i32, i32* %port, align 4, !dbg !11273
  %cmp = icmp slt i32 %2, 3, !dbg !11275
  br i1 %cmp, label %for.body, label %for.end13, !dbg !11276

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %prio, align 4, !dbg !11277
  br label %for.cond1, !dbg !11280

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %prio, align 4, !dbg !11281
  %cmp2 = icmp slt i32 %3, 4, !dbg !11283
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !11284

for.body3:                                        ; preds = %for.cond1
  %4 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11285
  %port_cfg = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %4, i32 0, i32 2, !dbg !11287
  %5 = load i32, i32* %port, align 4, !dbg !11288
  %idxprom = sext i32 %5 to i64, !dbg !11285
  %arrayidx = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg, i64 0, i64 %idxprom, !dbg !11285
  %tx_rate = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx, i32 0, i32 4, !dbg !11289
  %6 = load i32, i32* %prio, align 4, !dbg !11290
  %idxprom4 = sext i32 %6 to i64, !dbg !11285
  %arrayidx5 = getelementptr [4 x i32], [4 x i32]* %tx_rate, i64 0, i64 %idxprom4, !dbg !11285
  store i32 0, i32* %arrayidx5, align 4, !dbg !11291
  %7 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11292
  %port_cfg6 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %7, i32 0, i32 2, !dbg !11293
  %8 = load i32, i32* %port, align 4, !dbg !11294
  %idxprom7 = sext i32 %8 to i64, !dbg !11292
  %arrayidx8 = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg6, i64 0, i64 %idxprom7, !dbg !11292
  %rx_rate = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx8, i32 0, i32 3, !dbg !11295
  %9 = load i32, i32* %prio, align 4, !dbg !11296
  %idxprom9 = sext i32 %9 to i64, !dbg !11292
  %arrayidx10 = getelementptr [4 x i32], [4 x i32]* %rx_rate, i64 0, i64 %idxprom9, !dbg !11292
  store i32 0, i32* %arrayidx10, align 4, !dbg !11297
  br label %for.inc, !dbg !11298

for.inc:                                          ; preds = %for.body3
  %10 = load i32, i32* %prio, align 4, !dbg !11299
  %inc = add i32 %10, 1, !dbg !11299
  store i32 %inc, i32* %prio, align 4, !dbg !11299
  br label %for.cond1, !dbg !11300, !llvm.loop !11301

for.end:                                          ; preds = %for.cond1
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11303
  %12 = load i32, i32* %port, align 4, !dbg !11304
  call void @sw_dis_prio_rate(%struct.ksz_hw* %11, i32 %12) #12, !dbg !11305
  br label %for.inc11, !dbg !11306

for.inc11:                                        ; preds = %for.end
  %13 = load i32, i32* %port, align 4, !dbg !11307
  %inc12 = add i32 %13, 1, !dbg !11307
  store i32 %inc12, i32* %port, align 4, !dbg !11307
  br label %for.cond, !dbg !11308, !llvm.loop !11309

for.end13:                                        ; preds = %for.cond
  ret void, !dbg !11311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_init_vlan(%struct.ksz_hw* %hw) #2 !dbg !11312 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  %entry1 = alloca i32, align 4
  %sw = alloca %struct.ksz_switch*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11315, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !11317, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.declare(metadata %struct.ksz_switch** %sw, metadata !11319, metadata !DIExpression()), !dbg !11320
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11321
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !11322
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11322
  store %struct.ksz_switch* %1, %struct.ksz_switch** %sw, align 8, !dbg !11320
  store i32 0, i32* %entry1, align 4, !dbg !11323
  br label %for.cond, !dbg !11325

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %entry1, align 4, !dbg !11326
  %cmp = icmp slt i32 %2, 16, !dbg !11328
  br i1 %cmp, label %for.body, label %for.end, !dbg !11329

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11330
  %4 = load i32, i32* %entry1, align 4, !dbg !11332
  %conv = trunc i32 %4 to i16, !dbg !11332
  %5 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11333
  %vlan_table = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %5, i32 0, i32 1, !dbg !11334
  %6 = load i32, i32* %entry1, align 4, !dbg !11335
  %idxprom = sext i32 %6 to i64, !dbg !11333
  %arrayidx = getelementptr [16 x %struct.ksz_vlan_table], [16 x %struct.ksz_vlan_table]* %vlan_table, i64 0, i64 %idxprom, !dbg !11333
  %vid = getelementptr inbounds %struct.ksz_vlan_table, %struct.ksz_vlan_table* %arrayidx, i32 0, i32 0, !dbg !11336
  %7 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11337
  %vlan_table2 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %7, i32 0, i32 1, !dbg !11338
  %8 = load i32, i32* %entry1, align 4, !dbg !11339
  %idxprom3 = sext i32 %8 to i64, !dbg !11337
  %arrayidx4 = getelementptr [16 x %struct.ksz_vlan_table], [16 x %struct.ksz_vlan_table]* %vlan_table2, i64 0, i64 %idxprom3, !dbg !11337
  %fid = getelementptr inbounds %struct.ksz_vlan_table, %struct.ksz_vlan_table* %arrayidx4, i32 0, i32 1, !dbg !11340
  %9 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11341
  %vlan_table5 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %9, i32 0, i32 1, !dbg !11342
  %10 = load i32, i32* %entry1, align 4, !dbg !11343
  %idxprom6 = sext i32 %10 to i64, !dbg !11341
  %arrayidx7 = getelementptr [16 x %struct.ksz_vlan_table], [16 x %struct.ksz_vlan_table]* %vlan_table5, i64 0, i64 %idxprom6, !dbg !11341
  %member = getelementptr inbounds %struct.ksz_vlan_table, %struct.ksz_vlan_table* %arrayidx7, i32 0, i32 2, !dbg !11344
  %call = call i32 @sw_r_vlan_table(%struct.ksz_hw* %3, i16 zeroext %conv, i16* %vid, i8* %fid, i8* %member) #12, !dbg !11345
  br label %for.inc, !dbg !11346

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %entry1, align 4, !dbg !11347
  %inc = add i32 %11, 1, !dbg !11347
  store i32 %inc, i32* %entry1, align 4, !dbg !11347
  br label %for.cond, !dbg !11348, !llvm.loop !11349

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %port, align 4, !dbg !11351
  br label %for.cond8, !dbg !11353

for.cond8:                                        ; preds = %for.inc19, %for.end
  %12 = load i32, i32* %port, align 4, !dbg !11354
  %cmp9 = icmp slt i32 %12, 3, !dbg !11356
  br i1 %cmp9, label %for.body11, label %for.end21, !dbg !11357

for.body11:                                       ; preds = %for.cond8
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11358
  %14 = load i32, i32* %port, align 4, !dbg !11360
  %15 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11361
  %port_cfg = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %15, i32 0, i32 2, !dbg !11362
  %16 = load i32, i32* %port, align 4, !dbg !11363
  %idxprom12 = sext i32 %16 to i64, !dbg !11361
  %arrayidx13 = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg, i64 0, i64 %idxprom12, !dbg !11361
  %vid14 = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx13, i32 0, i32 0, !dbg !11364
  call void @port_get_def_vid(%struct.ksz_hw* %13, i32 %14, i16* %vid14) #12, !dbg !11365
  %17 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !11366
  %port_cfg15 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %17, i32 0, i32 2, !dbg !11367
  %18 = load i32, i32* %port, align 4, !dbg !11368
  %idxprom16 = sext i32 %18 to i64, !dbg !11366
  %arrayidx17 = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg15, i64 0, i64 %idxprom16, !dbg !11366
  %member18 = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx17, i32 0, i32 1, !dbg !11369
  store i8 7, i8* %member18, align 2, !dbg !11370
  br label %for.inc19, !dbg !11371

for.inc19:                                        ; preds = %for.body11
  %19 = load i32, i32* %port, align 4, !dbg !11372
  %inc20 = add i32 %19, 1, !dbg !11372
  store i32 %inc20, i32* %port, align 4, !dbg !11372
  br label %for.cond8, !dbg !11373, !llvm.loop !11374

for.end21:                                        ; preds = %for.cond8
  ret void, !dbg !11376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_init_stp(%struct.ksz_hw* %hw) #2 !dbg !11377 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %entry1 = alloca %struct.ksz_mac_table*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11378, metadata !DIExpression()), !dbg !11379
  call void @llvm.dbg.declare(metadata %struct.ksz_mac_table** %entry1, metadata !11380, metadata !DIExpression()), !dbg !11382
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11383
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !11384
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11384
  %mac_table = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %1, i32 0, i32 0, !dbg !11385
  %arrayidx = getelementptr [8 x %struct.ksz_mac_table], [8 x %struct.ksz_mac_table]* %mac_table, i64 0, i64 0, !dbg !11383
  store %struct.ksz_mac_table* %arrayidx, %struct.ksz_mac_table** %entry1, align 8, !dbg !11386
  %2 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11387
  %mac_addr = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %2, i32 0, i32 0, !dbg !11388
  %arrayidx2 = getelementptr [6 x i8], [6 x i8]* %mac_addr, i64 0, i64 0, !dbg !11387
  store i8 1, i8* %arrayidx2, align 2, !dbg !11389
  %3 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11390
  %mac_addr3 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %3, i32 0, i32 0, !dbg !11391
  %arrayidx4 = getelementptr [6 x i8], [6 x i8]* %mac_addr3, i64 0, i64 1, !dbg !11390
  store i8 -128, i8* %arrayidx4, align 1, !dbg !11392
  %4 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11393
  %mac_addr5 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %4, i32 0, i32 0, !dbg !11394
  %arrayidx6 = getelementptr [6 x i8], [6 x i8]* %mac_addr5, i64 0, i64 2, !dbg !11393
  store i8 -62, i8* %arrayidx6, align 2, !dbg !11395
  %5 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11396
  %mac_addr7 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %5, i32 0, i32 0, !dbg !11397
  %arrayidx8 = getelementptr [6 x i8], [6 x i8]* %mac_addr7, i64 0, i64 3, !dbg !11396
  store i8 0, i8* %arrayidx8, align 1, !dbg !11398
  %6 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11399
  %mac_addr9 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %6, i32 0, i32 0, !dbg !11400
  %arrayidx10 = getelementptr [6 x i8], [6 x i8]* %mac_addr9, i64 0, i64 4, !dbg !11399
  store i8 0, i8* %arrayidx10, align 2, !dbg !11401
  %7 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11402
  %mac_addr11 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %7, i32 0, i32 0, !dbg !11403
  %arrayidx12 = getelementptr [6 x i8], [6 x i8]* %mac_addr11, i64 0, i64 5, !dbg !11402
  store i8 0, i8* %arrayidx12, align 1, !dbg !11404
  %8 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11405
  %ports = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %8, i32 0, i32 3, !dbg !11406
  store i8 4, i8* %ports, align 1, !dbg !11407
  %9 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11408
  %override = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %9, i32 0, i32 4, !dbg !11409
  %bf.load = load i8, i8* %override, align 2, !dbg !11410
  %bf.clear = and i8 %bf.load, -2, !dbg !11410
  %bf.set = or i8 %bf.clear, 1, !dbg !11410
  store i8 %bf.set, i8* %override, align 2, !dbg !11410
  %10 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11411
  %valid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %10, i32 0, i32 4, !dbg !11412
  %bf.load13 = load i8, i8* %valid, align 2, !dbg !11413
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !11413
  %bf.set15 = or i8 %bf.clear14, 4, !dbg !11413
  store i8 %bf.set15, i8* %valid, align 2, !dbg !11413
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11414
  %12 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11415
  %mac_addr16 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %12, i32 0, i32 0, !dbg !11416
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac_addr16, i64 0, i64 0, !dbg !11415
  %13 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11417
  %ports17 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %13, i32 0, i32 3, !dbg !11418
  %14 = load i8, i8* %ports17, align 1, !dbg !11418
  %15 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11419
  %override18 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %15, i32 0, i32 4, !dbg !11420
  %bf.load19 = load i8, i8* %override18, align 2, !dbg !11420
  %bf.clear20 = and i8 %bf.load19, 1, !dbg !11420
  %conv = zext i8 %bf.clear20 to i32, !dbg !11419
  %16 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11421
  %valid21 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %16, i32 0, i32 4, !dbg !11422
  %bf.load22 = load i8, i8* %valid21, align 2, !dbg !11422
  %bf.lshr = lshr i8 %bf.load22, 2, !dbg !11422
  %bf.clear23 = and i8 %bf.lshr, 1, !dbg !11422
  %conv24 = zext i8 %bf.clear23 to i32, !dbg !11421
  %17 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11423
  %use_fid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %17, i32 0, i32 4, !dbg !11424
  %bf.load25 = load i8, i8* %use_fid, align 2, !dbg !11424
  %bf.lshr26 = lshr i8 %bf.load25, 1, !dbg !11424
  %bf.clear27 = and i8 %bf.lshr26, 1, !dbg !11424
  %conv28 = zext i8 %bf.clear27 to i32, !dbg !11423
  %18 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !11425
  %fid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %18, i32 0, i32 2, !dbg !11426
  %19 = load i8, i8* %fid, align 2, !dbg !11426
  call void @sw_w_sta_mac_table(%struct.ksz_hw* %11, i16 zeroext 0, i8* %arraydecay, i8 zeroext %14, i32 %conv, i32 %conv24, i32 %conv28, i8 zeroext %19) #12, !dbg !11427
  ret void, !dbg !11428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sw_chk(%struct.ksz_hw* %hw, i32 %addr, i16 zeroext %bits) #2 !dbg !11429 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %addr.addr = alloca i32, align 4
  %bits.addr = alloca i16, align 2
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !11434, metadata !DIExpression()), !dbg !11435
  store i16 %bits, i16* %bits.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bits.addr, metadata !11436, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11438, metadata !DIExpression()), !dbg !11439
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11440
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !11441
  %1 = load i8*, i8** %io, align 8, !dbg !11441
  %2 = load i32, i32* %addr.addr, align 4, !dbg !11442
  %idx.ext = zext i32 %2 to i64, !dbg !11443
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11443
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11444
  store i16 %call, i16* %data, align 2, !dbg !11445
  %3 = load i16, i16* %data, align 2, !dbg !11446
  %conv = zext i16 %3 to i32, !dbg !11446
  %4 = load i16, i16* %bits.addr, align 2, !dbg !11447
  %conv1 = zext i16 %4 to i32, !dbg !11447
  %and = and i32 %conv, %conv1, !dbg !11448
  %5 = load i16, i16* %bits.addr, align 2, !dbg !11449
  %conv2 = zext i16 %5 to i32, !dbg !11449
  %cmp = icmp eq i32 %and, %conv2, !dbg !11450
  %conv3 = zext i1 %cmp to i32, !dbg !11450
  ret i32 %conv3, !dbg !11451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_enable(%struct.ksz_hw* %hw, i32 %enable) #2 !dbg !11452 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %enable.addr = alloca i32, align 4
  %port = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11453, metadata !DIExpression()), !dbg !11454
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !11455, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11457, metadata !DIExpression()), !dbg !11458
  store i32 0, i32* %port, align 4, !dbg !11459
  br label %for.cond, !dbg !11461

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %port, align 4, !dbg !11462
  %cmp = icmp slt i32 %0, 2, !dbg !11464
  br i1 %cmp, label %for.body, label %for.end, !dbg !11465

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11466
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 4, !dbg !11469
  %2 = load i32, i32* %dev_count, align 8, !dbg !11469
  %cmp1 = icmp sgt i32 %2, 1, !dbg !11470
  br i1 %cmp1, label %if.then, label %if.else, !dbg !11471

if.then:                                          ; preds = %for.body
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11472
  %4 = load i32, i32* %port, align 4, !dbg !11474
  %5 = load i32, i32* %port, align 4, !dbg !11475
  %shl = shl i32 1, %5, !dbg !11476
  %or = or i32 4, %shl, !dbg !11477
  %conv = trunc i32 %or to i8, !dbg !11478
  call void @sw_cfg_port_base_vlan(%struct.ksz_hw* %3, i32 %4, i8 zeroext %conv) #12, !dbg !11479
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11480
  %7 = load i32, i32* %port, align 4, !dbg !11481
  call void @port_set_stp_state(%struct.ksz_hw* %6, i32 %7, i32 0) #12, !dbg !11482
  br label %if.end, !dbg !11483

if.else:                                          ; preds = %for.body
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11484
  %9 = load i32, i32* %port, align 4, !dbg !11486
  call void @sw_cfg_port_base_vlan(%struct.ksz_hw* %8, i32 %9, i8 zeroext 7) #12, !dbg !11487
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11488
  %11 = load i32, i32* %port, align 4, !dbg !11489
  call void @port_set_stp_state(%struct.ksz_hw* %10, i32 %11, i32 3) #12, !dbg !11490
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !11491

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %port, align 4, !dbg !11492
  %inc = add i32 %12, 1, !dbg !11492
  store i32 %inc, i32* %port, align 4, !dbg !11492
  br label %for.cond, !dbg !11493, !llvm.loop !11494

for.end:                                          ; preds = %for.cond
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11496
  %dev_count2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 4, !dbg !11498
  %14 = load i32, i32* %dev_count2, align 8, !dbg !11498
  %cmp3 = icmp sgt i32 %14, 1, !dbg !11499
  br i1 %cmp3, label %if.then5, label %if.else6, !dbg !11500

if.then5:                                         ; preds = %for.end
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11501
  call void @port_set_stp_state(%struct.ksz_hw* %15, i32 2, i32 5) #12, !dbg !11502
  br label %if.end7, !dbg !11502

if.else6:                                         ; preds = %for.end
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11503
  call void @port_set_stp_state(%struct.ksz_hw* %16, i32 2, i32 3) #12, !dbg !11504
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  %17 = load i32, i32* %enable.addr, align 4, !dbg !11505
  %tobool = icmp ne i32 %17, 0, !dbg !11505
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !11507

if.then8:                                         ; preds = %if.end7
  store i32 1, i32* %enable.addr, align 4, !dbg !11508
  br label %if.end9, !dbg !11509

if.end9:                                          ; preds = %if.then8, %if.end7
  %18 = load i32, i32* %enable.addr, align 4, !dbg !11510
  %conv10 = trunc i32 %18 to i16, !dbg !11510
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11511
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %19, i32 0, i32 0, !dbg !11512
  %20 = load i8*, i8** %io, align 8, !dbg !11512
  %add.ptr = getelementptr i8, i8* %20, i64 1024, !dbg !11513
  call void @writew(i16 zeroext %conv10, i8* %add.ptr) #12, !dbg !11514
  ret void, !dbg !11515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_cfg_broad_storm(%struct.ksz_hw* %hw, i8 zeroext %percent) #2 !dbg !11516 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %percent.addr = alloca i8, align 1
  %data = alloca i16, align 2
  %value = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11517, metadata !DIExpression()), !dbg !11518
  store i8 %percent, i8* %percent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %percent.addr, metadata !11519, metadata !DIExpression()), !dbg !11520
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11521, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.declare(metadata i32* %value, metadata !11523, metadata !DIExpression()), !dbg !11524
  %0 = load i8, i8* %percent.addr, align 1, !dbg !11525
  %conv = zext i8 %0 to i32, !dbg !11526
  %mul = mul i32 9969, %conv, !dbg !11527
  %div = udiv i32 %mul, 100, !dbg !11528
  store i32 %div, i32* %value, align 4, !dbg !11524
  %1 = load i32, i32* %value, align 4, !dbg !11529
  %cmp = icmp ugt i32 %1, 2047, !dbg !11531
  br i1 %cmp, label %if.then, label %if.end, !dbg !11532

if.then:                                          ; preds = %entry
  store i32 2047, i32* %value, align 4, !dbg !11533
  br label %if.end, !dbg !11534

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11535
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !11536
  %3 = load i8*, i8** %io, align 8, !dbg !11536
  %add.ptr = getelementptr i8, i8* %3, i64 1030, !dbg !11537
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11538
  store i16 %call, i16* %data, align 2, !dbg !11539
  %4 = load i16, i16* %data, align 2, !dbg !11540
  %conv2 = zext i16 %4 to i32, !dbg !11540
  %and = and i32 %conv2, -65288, !dbg !11540
  %conv3 = trunc i32 %and to i16, !dbg !11540
  store i16 %conv3, i16* %data, align 2, !dbg !11540
  %5 = load i32, i32* %value, align 4, !dbg !11541
  %and4 = and i32 %5, 255, !dbg !11542
  %shl = shl i32 %and4, 8, !dbg !11543
  %6 = load i32, i32* %value, align 4, !dbg !11544
  %and5 = and i32 %6, 65280, !dbg !11545
  %shr = lshr i32 %and5, 8, !dbg !11546
  %or = or i32 %shl, %shr, !dbg !11547
  %7 = load i16, i16* %data, align 2, !dbg !11548
  %conv6 = zext i16 %7 to i32, !dbg !11548
  %or7 = or i32 %conv6, %or, !dbg !11548
  %conv8 = trunc i32 %or7 to i16, !dbg !11548
  store i16 %conv8, i16* %data, align 2, !dbg !11548
  %8 = load i16, i16* %data, align 2, !dbg !11549
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11550
  %io9 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 0, !dbg !11551
  %10 = load i8*, i8** %io9, align 8, !dbg !11551
  %add.ptr10 = getelementptr i8, i8* %10, i64 1030, !dbg !11552
  call void @writew(i16 zeroext %8, i8* %add.ptr10) #12, !dbg !11553
  ret void, !dbg !11554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_dis_broad_storm(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !11555 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11556, metadata !DIExpression()), !dbg !11557
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11558, metadata !DIExpression()), !dbg !11559
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11560
  %1 = load i32, i32* %port.addr, align 4, !dbg !11561
  call void @port_cfg_broad_storm(%struct.ksz_hw* %0, i32 %1, i32 0) #12, !dbg !11562
  ret void, !dbg !11563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_cfg(%struct.ksz_hw* %hw, i32 %addr, i16 zeroext %bits, i32 %set) #2 !dbg !11564 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %addr.addr = alloca i32, align 4
  %bits.addr = alloca i16, align 2
  %set.addr = alloca i32, align 4
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11567, metadata !DIExpression()), !dbg !11568
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !11569, metadata !DIExpression()), !dbg !11570
  store i16 %bits, i16* %bits.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bits.addr, metadata !11571, metadata !DIExpression()), !dbg !11572
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11573, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11575, metadata !DIExpression()), !dbg !11576
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11577
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !11578
  %1 = load i8*, i8** %io, align 8, !dbg !11578
  %2 = load i32, i32* %addr.addr, align 4, !dbg !11579
  %idx.ext = zext i32 %2 to i64, !dbg !11580
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11580
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11581
  store i16 %call, i16* %data, align 2, !dbg !11582
  %3 = load i32, i32* %set.addr, align 4, !dbg !11583
  %tobool = icmp ne i32 %3, 0, !dbg !11583
  br i1 %tobool, label %if.then, label %if.else, !dbg !11585

if.then:                                          ; preds = %entry
  %4 = load i16, i16* %bits.addr, align 2, !dbg !11586
  %conv = zext i16 %4 to i32, !dbg !11586
  %5 = load i16, i16* %data, align 2, !dbg !11587
  %conv1 = zext i16 %5 to i32, !dbg !11587
  %or = or i32 %conv1, %conv, !dbg !11587
  %conv2 = trunc i32 %or to i16, !dbg !11587
  store i16 %conv2, i16* %data, align 2, !dbg !11587
  br label %if.end, !dbg !11588

if.else:                                          ; preds = %entry
  %6 = load i16, i16* %bits.addr, align 2, !dbg !11589
  %conv3 = zext i16 %6 to i32, !dbg !11589
  %neg = xor i32 %conv3, -1, !dbg !11590
  %7 = load i16, i16* %data, align 2, !dbg !11591
  %conv4 = zext i16 %7 to i32, !dbg !11591
  %and = and i32 %conv4, %neg, !dbg !11591
  %conv5 = trunc i32 %and to i16, !dbg !11591
  store i16 %conv5, i16* %data, align 2, !dbg !11591
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i16, i16* %data, align 2, !dbg !11592
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11593
  %io6 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 0, !dbg !11594
  %10 = load i8*, i8** %io6, align 8, !dbg !11594
  %11 = load i32, i32* %addr.addr, align 4, !dbg !11595
  %idx.ext7 = zext i32 %11 to i64, !dbg !11596
  %add.ptr8 = getelementptr i8, i8* %10, i64 %idx.ext7, !dbg !11596
  call void @writew(i16 zeroext %8, i8* %add.ptr8) #12, !dbg !11597
  ret void, !dbg !11598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_broad_storm(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11599 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11602, metadata !DIExpression()), !dbg !11603
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11604, metadata !DIExpression()), !dbg !11605
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11608
  %1 = load i32, i32* %p.addr, align 4, !dbg !11609
  %2 = load i32, i32* %set.addr, align 4, !dbg !11610
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 0, i16 zeroext 128, i32 %2) #12, !dbg !11611
  ret void, !dbg !11612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg(%struct.ksz_hw* %hw, i32 %port, i32 %offset, i16 zeroext %bits, i32 %set) #2 !dbg !11613 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %bits.addr = alloca i16, align 2
  %set.addr = alloca i32, align 4
  %addr = alloca i32, align 4
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11616, metadata !DIExpression()), !dbg !11617
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11618, metadata !DIExpression()), !dbg !11619
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11620, metadata !DIExpression()), !dbg !11621
  store i16 %bits, i16* %bits.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bits.addr, metadata !11622, metadata !DIExpression()), !dbg !11623
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11624, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !11626, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11628, metadata !DIExpression()), !dbg !11629
  %0 = load i32, i32* %port.addr, align 4, !dbg !11630
  %mul = mul i32 %0, 32, !dbg !11630
  %add = add i32 1280, %mul, !dbg !11630
  store i32 %add, i32* %addr, align 4, !dbg !11630
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11631
  %2 = load i32, i32* %addr, align 4, !dbg !11632
  %add1 = add i32 %2, %1, !dbg !11632
  store i32 %add1, i32* %addr, align 4, !dbg !11632
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11633
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !11634
  %4 = load i8*, i8** %io, align 8, !dbg !11634
  %5 = load i32, i32* %addr, align 4, !dbg !11635
  %idx.ext = zext i32 %5 to i64, !dbg !11636
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !11636
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11637
  store i16 %call, i16* %data, align 2, !dbg !11638
  %6 = load i32, i32* %set.addr, align 4, !dbg !11639
  %tobool = icmp ne i32 %6, 0, !dbg !11639
  br i1 %tobool, label %if.then, label %if.else, !dbg !11641

if.then:                                          ; preds = %entry
  %7 = load i16, i16* %bits.addr, align 2, !dbg !11642
  %conv = zext i16 %7 to i32, !dbg !11642
  %8 = load i16, i16* %data, align 2, !dbg !11643
  %conv2 = zext i16 %8 to i32, !dbg !11643
  %or = or i32 %conv2, %conv, !dbg !11643
  %conv3 = trunc i32 %or to i16, !dbg !11643
  store i16 %conv3, i16* %data, align 2, !dbg !11643
  br label %if.end, !dbg !11644

if.else:                                          ; preds = %entry
  %9 = load i16, i16* %bits.addr, align 2, !dbg !11645
  %conv4 = zext i16 %9 to i32, !dbg !11645
  %neg = xor i32 %conv4, -1, !dbg !11646
  %10 = load i16, i16* %data, align 2, !dbg !11647
  %conv5 = zext i16 %10 to i32, !dbg !11647
  %and = and i32 %conv5, %neg, !dbg !11647
  %conv6 = trunc i32 %and to i16, !dbg !11647
  store i16 %conv6, i16* %data, align 2, !dbg !11647
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i16, i16* %data, align 2, !dbg !11648
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11649
  %io7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 0, !dbg !11650
  %13 = load i8*, i8** %io7, align 8, !dbg !11650
  %14 = load i32, i32* %addr, align 4, !dbg !11651
  %idx.ext8 = zext i32 %14 to i64, !dbg !11652
  %add.ptr9 = getelementptr i8, i8* %13, i64 %idx.ext8, !dbg !11652
  call void @writew(i16 zeroext %11, i8* %add.ptr9) #12, !dbg !11653
  ret void, !dbg !11654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_get_broad_storm(%struct.ksz_hw* %hw, i8* %percent) #2 !dbg !11655 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %percent.addr = alloca i8*, align 8
  %num = alloca i32, align 4
  %data = alloca i16, align 2
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11656, metadata !DIExpression()), !dbg !11657
  store i8* %percent, i8** %percent.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %percent.addr, metadata !11658, metadata !DIExpression()), !dbg !11659
  call void @llvm.dbg.declare(metadata i32* %num, metadata !11660, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11662, metadata !DIExpression()), !dbg !11663
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11664
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !11665
  %1 = load i8*, i8** %io, align 8, !dbg !11665
  %add.ptr = getelementptr i8, i8* %1, i64 1030, !dbg !11666
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11667
  store i16 %call, i16* %data, align 2, !dbg !11668
  %2 = load i16, i16* %data, align 2, !dbg !11669
  %conv = zext i16 %2 to i32, !dbg !11669
  %and = and i32 %conv, 7, !dbg !11670
  store i32 %and, i32* %num, align 4, !dbg !11671
  %3 = load i32, i32* %num, align 4, !dbg !11672
  %shl = shl i32 %3, 8, !dbg !11672
  store i32 %shl, i32* %num, align 4, !dbg !11672
  %4 = load i16, i16* %data, align 2, !dbg !11673
  %conv1 = zext i16 %4 to i32, !dbg !11673
  %and2 = and i32 %conv1, 65280, !dbg !11674
  %shr = ashr i32 %and2, 8, !dbg !11675
  %5 = load i32, i32* %num, align 4, !dbg !11676
  %or = or i32 %5, %shr, !dbg !11676
  store i32 %or, i32* %num, align 4, !dbg !11676
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !11677, metadata !DIExpression()), !dbg !11679
  %6 = load i32, i32* %num, align 4, !dbg !11679
  %mul = mul i32 %6, 100, !dbg !11679
  store i32 %mul, i32* %__x, align 4, !dbg !11679
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !11680, metadata !DIExpression()), !dbg !11679
  store i32 9969, i32* %__d, align 4, !dbg !11679
  %7 = load i32, i32* %__x, align 4, !dbg !11679
  %cmp = icmp sgt i32 %7, 0, !dbg !11679
  %conv3 = zext i1 %cmp to i32, !dbg !11679
  %8 = load i32, i32* %__d, align 4, !dbg !11679
  %cmp4 = icmp sgt i32 %8, 0, !dbg !11679
  %conv5 = zext i1 %cmp4 to i32, !dbg !11679
  %cmp6 = icmp eq i32 %conv3, %conv5, !dbg !11679
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !11679

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %__x, align 4, !dbg !11679
  %10 = load i32, i32* %__d, align 4, !dbg !11679
  %div = sdiv i32 %10, 2, !dbg !11679
  %add = add i32 %9, %div, !dbg !11679
  %11 = load i32, i32* %__d, align 4, !dbg !11679
  %div8 = sdiv i32 %add, %11, !dbg !11679
  br label %cond.end, !dbg !11679

cond.false:                                       ; preds = %entry
  %12 = load i32, i32* %__x, align 4, !dbg !11679
  %13 = load i32, i32* %__d, align 4, !dbg !11679
  %div9 = sdiv i32 %13, 2, !dbg !11679
  %sub = sub i32 %12, %div9, !dbg !11679
  %14 = load i32, i32* %__d, align 4, !dbg !11679
  %div10 = sdiv i32 %sub, %14, !dbg !11679
  br label %cond.end, !dbg !11679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div8, %cond.true ], [ %div10, %cond.false ], !dbg !11679
  store i32 %cond, i32* %tmp, align 4, !dbg !11679
  %15 = load i32, i32* %tmp, align 4, !dbg !11679
  store i32 %15, i32* %num, align 4, !dbg !11681
  %16 = load i32, i32* %num, align 4, !dbg !11682
  %conv11 = trunc i32 %16 to i8, !dbg !11683
  %17 = load i8*, i8** %percent.addr, align 8, !dbg !11684
  store i8 %conv11, i8* %17, align 1, !dbg !11685
  ret void, !dbg !11686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_dis_multi_queue(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !11687 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11688, metadata !DIExpression()), !dbg !11689
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11690, metadata !DIExpression()), !dbg !11691
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11692
  %1 = load i32, i32* %port.addr, align 4, !dbg !11693
  call void @port_cfg_prio(%struct.ksz_hw* %0, i32 %1, i32 0) #12, !dbg !11694
  ret void, !dbg !11695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_dis_diffserv(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !11696 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11697, metadata !DIExpression()), !dbg !11698
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11699, metadata !DIExpression()), !dbg !11700
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11701
  %1 = load i32, i32* %port.addr, align 4, !dbg !11702
  call void @port_cfg_diffserv(%struct.ksz_hw* %0, i32 %1, i32 0) #12, !dbg !11703
  ret void, !dbg !11704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_dis_802_1p(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !11705 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11706, metadata !DIExpression()), !dbg !11707
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11708, metadata !DIExpression()), !dbg !11709
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11710
  %1 = load i32, i32* %port.addr, align 4, !dbg !11711
  call void @port_cfg_802_1p(%struct.ksz_hw* %0, i32 %1, i32 0) #12, !dbg !11712
  ret void, !dbg !11713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_cfg_replace_vid(%struct.ksz_hw* %hw, i32 %port, i32 %set) #2 !dbg !11714 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11715, metadata !DIExpression()), !dbg !11716
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11719, metadata !DIExpression()), !dbg !11720
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11721
  %1 = load i32, i32* %port.addr, align 4, !dbg !11722
  %2 = load i32, i32* %set.addr, align 4, !dbg !11723
  call void @port_cfg_replace_vid(%struct.ksz_hw* %0, i32 %1, i32 %2) #12, !dbg !11724
  ret void, !dbg !11725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_cfg_port_based(%struct.ksz_hw* %hw, i32 %port, i8 zeroext %prio) #2 !dbg !11726 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %prio.addr = alloca i8, align 1
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11729, metadata !DIExpression()), !dbg !11730
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11731, metadata !DIExpression()), !dbg !11732
  store i8 %prio, i8* %prio.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prio.addr, metadata !11733, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11735, metadata !DIExpression()), !dbg !11736
  %0 = load i8, i8* %prio.addr, align 1, !dbg !11737
  %conv = zext i8 %0 to i32, !dbg !11737
  %cmp = icmp sgt i32 %conv, 3, !dbg !11739
  br i1 %cmp, label %if.then, label %if.end, !dbg !11740

if.then:                                          ; preds = %entry
  store i8 3, i8* %prio.addr, align 1, !dbg !11741
  br label %if.end, !dbg !11742

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8, i8* %prio.addr, align 1, !dbg !11743
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11744
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 1, !dbg !11745
  %3 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !11745
  %port_cfg = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %3, i32 0, i32 2, !dbg !11746
  %4 = load i32, i32* %port.addr, align 4, !dbg !11747
  %idxprom = sext i32 %4 to i64, !dbg !11744
  %arrayidx = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg, i64 0, i64 %idxprom, !dbg !11744
  %port_prio = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx, i32 0, i32 2, !dbg !11748
  store i8 %1, i8* %port_prio, align 1, !dbg !11749
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11750
  %6 = load i32, i32* %port.addr, align 4, !dbg !11751
  call void @port_r16(%struct.ksz_hw* %5, i32 %6, i32 0, i16* %data) #12, !dbg !11752
  %7 = load i16, i16* %data, align 2, !dbg !11753
  %conv2 = zext i16 %7 to i32, !dbg !11753
  %and = and i32 %conv2, -25, !dbg !11753
  %conv3 = trunc i32 %and to i16, !dbg !11753
  store i16 %conv3, i16* %data, align 2, !dbg !11753
  %8 = load i8, i8* %prio.addr, align 1, !dbg !11754
  %conv4 = zext i8 %8 to i32, !dbg !11754
  %shl = shl i32 %conv4, 3, !dbg !11755
  %9 = load i16, i16* %data, align 2, !dbg !11756
  %conv5 = zext i16 %9 to i32, !dbg !11756
  %or = or i32 %conv5, %shl, !dbg !11756
  %conv6 = trunc i32 %or to i16, !dbg !11756
  store i16 %conv6, i16* %data, align 2, !dbg !11756
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11757
  %11 = load i32, i32* %port.addr, align 4, !dbg !11758
  %12 = load i16, i16* %data, align 2, !dbg !11759
  call void @port_w16(%struct.ksz_hw* %10, i32 %11, i32 0, i16 zeroext %12) #12, !dbg !11760
  ret void, !dbg !11761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_cfg_replace_null_vid(%struct.ksz_hw* %hw, i32 %set) #2 !dbg !11762 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11763, metadata !DIExpression()), !dbg !11764
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11765, metadata !DIExpression()), !dbg !11766
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11767
  %1 = load i32, i32* %set.addr, align 4, !dbg !11768
  call void @sw_cfg(%struct.ksz_hw* %0, i32 1030, i16 zeroext 8, i32 %1) #12, !dbg !11769
  ret void, !dbg !11770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_prio(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11771 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11774, metadata !DIExpression()), !dbg !11775
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11776, metadata !DIExpression()), !dbg !11777
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11778
  %1 = load i32, i32* %p.addr, align 4, !dbg !11779
  %2 = load i32, i32* %set.addr, align 4, !dbg !11780
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 0, i16 zeroext 1, i32 %2) #12, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_diffserv(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11783 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11786, metadata !DIExpression()), !dbg !11787
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11788, metadata !DIExpression()), !dbg !11789
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11790
  %1 = load i32, i32* %p.addr, align 4, !dbg !11791
  %2 = load i32, i32* %set.addr, align 4, !dbg !11792
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 0, i16 zeroext 64, i32 %2) #12, !dbg !11793
  ret void, !dbg !11794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_802_1p(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11795 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11802
  %1 = load i32, i32* %p.addr, align 4, !dbg !11803
  %2 = load i32, i32* %set.addr, align 4, !dbg !11804
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 0, i16 zeroext 32, i32 %2) #12, !dbg !11805
  ret void, !dbg !11806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_replace_vid(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11807 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11808, metadata !DIExpression()), !dbg !11809
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11814
  %1 = load i32, i32* %p.addr, align 4, !dbg !11815
  %2 = load i32, i32* %set.addr, align 4, !dbg !11816
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 2, i16 zeroext 8, i32 %2) #12, !dbg !11817
  ret void, !dbg !11818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_r16(%struct.ksz_hw* %hw, i32 %port, i32 %offset, i16* %data) #2 !dbg !11819 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %data.addr = alloca i16*, align 8
  %addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11822, metadata !DIExpression()), !dbg !11823
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11824, metadata !DIExpression()), !dbg !11825
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11826, metadata !DIExpression()), !dbg !11827
  store i16* %data, i16** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %data.addr, metadata !11828, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !11830, metadata !DIExpression()), !dbg !11831
  %0 = load i32, i32* %port.addr, align 4, !dbg !11832
  %mul = mul i32 %0, 32, !dbg !11832
  %add = add i32 1280, %mul, !dbg !11832
  store i32 %add, i32* %addr, align 4, !dbg !11832
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11833
  %2 = load i32, i32* %addr, align 4, !dbg !11834
  %add1 = add i32 %2, %1, !dbg !11834
  store i32 %add1, i32* %addr, align 4, !dbg !11834
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11835
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !11836
  %4 = load i8*, i8** %io, align 8, !dbg !11836
  %5 = load i32, i32* %addr, align 4, !dbg !11837
  %idx.ext = zext i32 %5 to i64, !dbg !11838
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !11838
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11839
  %6 = load i16*, i16** %data.addr, align 8, !dbg !11840
  store i16 %call, i16* %6, align 2, !dbg !11841
  ret void, !dbg !11842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_w16(%struct.ksz_hw* %hw, i32 %port, i32 %offset, i16 zeroext %data) #2 !dbg !11843 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %data.addr = alloca i16, align 2
  %addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11846, metadata !DIExpression()), !dbg !11847
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11848, metadata !DIExpression()), !dbg !11849
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11850, metadata !DIExpression()), !dbg !11851
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !11852, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !11854, metadata !DIExpression()), !dbg !11855
  %0 = load i32, i32* %port.addr, align 4, !dbg !11856
  %mul = mul i32 %0, 32, !dbg !11856
  %add = add i32 1280, %mul, !dbg !11856
  store i32 %add, i32* %addr, align 4, !dbg !11856
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11857
  %2 = load i32, i32* %addr, align 4, !dbg !11858
  %add1 = add i32 %2, %1, !dbg !11858
  store i32 %add1, i32* %addr, align 4, !dbg !11858
  %3 = load i16, i16* %data.addr, align 2, !dbg !11859
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11860
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !11861
  %5 = load i8*, i8** %io, align 8, !dbg !11861
  %6 = load i32, i32* %addr, align 4, !dbg !11862
  %idx.ext = zext i32 %6 to i64, !dbg !11863
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !11863
  call void @writew(i16 zeroext %3, i8* %add.ptr) #12, !dbg !11864
  ret void, !dbg !11865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_mirror_sniffer(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11866 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11867, metadata !DIExpression()), !dbg !11868
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11869, metadata !DIExpression()), !dbg !11870
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11871, metadata !DIExpression()), !dbg !11872
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11873
  %1 = load i32, i32* %p.addr, align 4, !dbg !11874
  %2 = load i32, i32* %set.addr, align 4, !dbg !11875
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 2, i16 zeroext 128, i32 %2) #12, !dbg !11876
  ret void, !dbg !11877
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_mirror_rx(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11878 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11879, metadata !DIExpression()), !dbg !11880
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11881, metadata !DIExpression()), !dbg !11882
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11883, metadata !DIExpression()), !dbg !11884
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11885
  %1 = load i32, i32* %p.addr, align 4, !dbg !11886
  %2 = load i32, i32* %set.addr, align 4, !dbg !11887
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 2, i16 zeroext 64, i32 %2) #12, !dbg !11888
  ret void, !dbg !11889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_mirror_tx(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !11890 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11891, metadata !DIExpression()), !dbg !11892
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !11893, metadata !DIExpression()), !dbg !11894
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11895, metadata !DIExpression()), !dbg !11896
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11897
  %1 = load i32, i32* %p.addr, align 4, !dbg !11898
  %2 = load i32, i32* %set.addr, align 4, !dbg !11899
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 2, i16 zeroext 32, i32 %2) #12, !dbg !11900
  ret void, !dbg !11901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_cfg_mirror_rx_tx(%struct.ksz_hw* %hw, i32 %set) #2 !dbg !11902 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11903, metadata !DIExpression()), !dbg !11904
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11905, metadata !DIExpression()), !dbg !11906
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11907
  %1 = load i32, i32* %set.addr, align 4, !dbg !11908
  call void @sw_cfg(%struct.ksz_hw* %0, i32 1028, i16 zeroext 256, i32 %1) #12, !dbg !11909
  ret void, !dbg !11910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_dis_prio_rate(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !11911 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11912, metadata !DIExpression()), !dbg !11913
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11914, metadata !DIExpression()), !dbg !11915
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !11916, metadata !DIExpression()), !dbg !11917
  %0 = load i32, i32* %port.addr, align 4, !dbg !11918
  %mul = mul i32 %0, 32, !dbg !11918
  %add = add i32 1280, %mul, !dbg !11918
  store i32 %add, i32* %addr, align 4, !dbg !11918
  %1 = load i32, i32* %addr, align 4, !dbg !11919
  %add1 = add i32 %1, 8, !dbg !11919
  store i32 %add1, i32* %addr, align 4, !dbg !11919
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11920
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !11921
  %3 = load i8*, i8** %io, align 8, !dbg !11921
  %4 = load i32, i32* %addr, align 4, !dbg !11922
  %idx.ext = zext i32 %4 to i64, !dbg !11923
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !11923
  call void @writel(i32 0, i8* %add.ptr) #12, !dbg !11924
  ret void, !dbg !11925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !11926 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11929, metadata !DIExpression()), !dbg !11930
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11931, metadata !DIExpression()), !dbg !11930
  %0 = load i32, i32* %val.addr, align 4, !dbg !11930
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !11930
  %2 = bitcast i8* %1 to i32*, !dbg !11930
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !11930, !srcloc !11932
  ret void, !dbg !11930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sw_r_vlan_table(%struct.ksz_hw* %hw, i16 zeroext %addr, i16* %vid, i8* %fid, i8* %member) #2 !dbg !11933 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %addr.addr = alloca i16, align 2
  %vid.addr = alloca i16*, align 8
  %fid.addr = alloca i8*, align 8
  %member.addr = alloca i8*, align 8
  %data = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11936, metadata !DIExpression()), !dbg !11937
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !11938, metadata !DIExpression()), !dbg !11939
  store i16* %vid, i16** %vid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %vid.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  store i8* %fid, i8** %fid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fid.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  store i8* %member, i8** %member.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %member.addr, metadata !11944, metadata !DIExpression()), !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %data, metadata !11946, metadata !DIExpression()), !dbg !11947
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11948
  %1 = load i16, i16* %addr.addr, align 2, !dbg !11949
  call void @sw_r_table(%struct.ksz_hw* %0, i32 1, i16 zeroext %1, i32* %data) #12, !dbg !11950
  %2 = load i32, i32* %data, align 4, !dbg !11951
  %and = and i32 %2, 524288, !dbg !11953
  %tobool = icmp ne i32 %and, 0, !dbg !11953
  br i1 %tobool, label %if.then, label %if.end, !dbg !11954

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %data, align 4, !dbg !11955
  %and1 = and i32 %3, 4095, !dbg !11957
  %conv = trunc i32 %and1 to i16, !dbg !11958
  %4 = load i16*, i16** %vid.addr, align 8, !dbg !11959
  store i16 %conv, i16* %4, align 2, !dbg !11960
  %5 = load i32, i32* %data, align 4, !dbg !11961
  %and2 = and i32 %5, 61440, !dbg !11962
  %shr = lshr i32 %and2, 12, !dbg !11963
  %conv3 = trunc i32 %shr to i8, !dbg !11964
  %6 = load i8*, i8** %fid.addr, align 8, !dbg !11965
  store i8 %conv3, i8* %6, align 1, !dbg !11966
  %7 = load i32, i32* %data, align 4, !dbg !11967
  %and4 = and i32 %7, 458752, !dbg !11968
  %shr5 = lshr i32 %and4, 16, !dbg !11969
  %conv6 = trunc i32 %shr5 to i8, !dbg !11970
  %8 = load i8*, i8** %member.addr, align 8, !dbg !11971
  store i8 %conv6, i8* %8, align 1, !dbg !11972
  store i32 0, i32* %retval, align 4, !dbg !11973
  br label %return, !dbg !11973

if.end:                                           ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !11974
  br label %return, !dbg !11974

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !11975
  ret i32 %9, !dbg !11975
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_get_def_vid(%struct.ksz_hw* %hw, i32 %port, i16* %vid) #2 !dbg !11976 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %vid.addr = alloca i16*, align 8
  %addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !11979, metadata !DIExpression()), !dbg !11980
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11981, metadata !DIExpression()), !dbg !11982
  store i16* %vid, i16** %vid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %vid.addr, metadata !11983, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !11985, metadata !DIExpression()), !dbg !11986
  %0 = load i32, i32* %port.addr, align 4, !dbg !11987
  %mul = mul i32 %0, 32, !dbg !11987
  %add = add i32 1280, %mul, !dbg !11987
  store i32 %add, i32* %addr, align 4, !dbg !11987
  %1 = load i32, i32* %addr, align 4, !dbg !11988
  %add1 = add i32 %1, 4, !dbg !11988
  store i32 %add1, i32* %addr, align 4, !dbg !11988
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !11989
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !11990
  %3 = load i8*, i8** %io, align 8, !dbg !11990
  %4 = load i32, i32* %addr, align 4, !dbg !11991
  %idx.ext = zext i32 %4 to i64, !dbg !11992
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !11992
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !11993
  %5 = load i16*, i16** %vid.addr, align 8, !dbg !11994
  store i16 %call, i16* %5, align 2, !dbg !11995
  ret void, !dbg !11996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_r_table(%struct.ksz_hw* %hw, i32 %table, i16 zeroext %addr, i32* %data) #2 !dbg !11997 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %table.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %data.addr = alloca i32*, align 8
  %ctrl_addr = alloca i16, align 2
  %interrupt = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12000, metadata !DIExpression()), !dbg !12001
  store i32 %table, i32* %table.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table.addr, metadata !12002, metadata !DIExpression()), !dbg !12003
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !12004, metadata !DIExpression()), !dbg !12005
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !12006, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.declare(metadata i16* %ctrl_addr, metadata !12008, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.declare(metadata i32* %interrupt, metadata !12010, metadata !DIExpression()), !dbg !12011
  %0 = load i32, i32* %table.addr, align 4, !dbg !12012
  %shl = shl i32 %0, 2, !dbg !12013
  %or = or i32 %shl, 16, !dbg !12014
  %shl1 = shl i32 %or, 8, !dbg !12015
  %1 = load i16, i16* %addr.addr, align 2, !dbg !12016
  %conv = zext i16 %1 to i32, !dbg !12016
  %or2 = or i32 %shl1, %conv, !dbg !12017
  %conv3 = trunc i32 %or2 to i16, !dbg !12018
  store i16 %conv3, i16* %ctrl_addr, align 2, !dbg !12019
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12020
  %call = call i32 @hw_block_intr(%struct.ksz_hw* %2) #12, !dbg !12021
  store i32 %call, i32* %interrupt, align 4, !dbg !12022
  %3 = load i16, i16* %ctrl_addr, align 2, !dbg !12023
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12024
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !12025
  %5 = load i8*, i8** %io, align 8, !dbg !12025
  %add.ptr = getelementptr i8, i8* %5, i64 1184, !dbg !12026
  call void @writew(i16 zeroext %3, i8* %add.ptr) #12, !dbg !12027
  br label %do.body, !dbg !12028

do.body:                                          ; preds = %entry
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12029
  %io4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 0, !dbg !12029
  %7 = load i8*, i8** %io4, align 8, !dbg !12029
  %add.ptr5 = getelementptr i8, i8* %7, i64 1184, !dbg !12029
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !12029
  br label %do.end, !dbg !12029

do.end:                                           ; preds = %do.body
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12031
  %io7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 0, !dbg !12032
  %9 = load i8*, i8** %io7, align 8, !dbg !12032
  %add.ptr8 = getelementptr i8, i8* %9, i64 1192, !dbg !12033
  %call9 = call i32 @readl(i8* %add.ptr8) #12, !dbg !12034
  %10 = load i32*, i32** %data.addr, align 8, !dbg !12035
  store i32 %call9, i32* %10, align 4, !dbg !12036
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12037
  %12 = load i32, i32* %interrupt, align 4, !dbg !12038
  call void @hw_restore_intr(%struct.ksz_hw* %11, i32 %12) #12, !dbg !12039
  ret void, !dbg !12040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_block_intr(%struct.ksz_hw* %hw) #2 !dbg !12041 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %interrupt = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12044, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.declare(metadata i32* %interrupt, metadata !12046, metadata !DIExpression()), !dbg !12047
  store i32 0, i32* %interrupt, align 4, !dbg !12047
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12048
  %intr_blocked = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 13, !dbg !12050
  %1 = load i32, i32* %intr_blocked, align 4, !dbg !12050
  %tobool = icmp ne i32 %1, 0, !dbg !12048
  br i1 %tobool, label %if.end, label %if.then, !dbg !12051

if.then:                                          ; preds = %entry
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12052
  call void @hw_dis_intr(%struct.ksz_hw* %2) #12, !dbg !12054
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12055
  %intr_blocked1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 13, !dbg !12056
  %4 = load i32, i32* %intr_blocked1, align 4, !dbg !12056
  store i32 %4, i32* %interrupt, align 4, !dbg !12057
  br label %if.end, !dbg !12058

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %interrupt, align 4, !dbg !12059
  ret i32 %5, !dbg !12060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !12061 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12064, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12066, metadata !DIExpression()), !dbg !12065
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !12065
  %1 = bitcast i8* %0 to i32*, !dbg !12065
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !12065, !srcloc !12067
  store i32 %2, i32* %ret, align 4, !dbg !12065
  %3 = load i32, i32* %ret, align 4, !dbg !12065
  ret i32 %3, !dbg !12065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_restore_intr(%struct.ksz_hw* %hw, i32 %interrupt) #2 !dbg !12068 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %interrupt.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12071, metadata !DIExpression()), !dbg !12072
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !12073, metadata !DIExpression()), !dbg !12074
  %0 = load i32, i32* %interrupt.addr, align 4, !dbg !12075
  %tobool = icmp ne i32 %0, 0, !dbg !12075
  br i1 %tobool, label %if.then, label %if.end, !dbg !12077

if.then:                                          ; preds = %entry
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12078
  call void @hw_ena_intr(%struct.ksz_hw* %1) #12, !dbg !12079
  br label %if.end, !dbg !12079

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_dis_intr(%struct.ksz_hw* %hw) #2 !dbg !12081 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12082, metadata !DIExpression()), !dbg !12083
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12084
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 11, !dbg !12085
  %1 = load i32, i32* %intr_mask, align 4, !dbg !12085
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12086
  %intr_blocked = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 13, !dbg !12087
  store i32 %1, i32* %intr_blocked, align 4, !dbg !12088
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12089
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !12090
  %4 = load i8*, i8** %io, align 8, !dbg !12090
  %add.ptr = getelementptr i8, i8* %4, i64 40, !dbg !12091
  call void @writel(i32 0, i8* %add.ptr) #12, !dbg !12092
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12093
  %io1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 0, !dbg !12094
  %6 = load i8*, i8** %io1, align 8, !dbg !12094
  %add.ptr2 = getelementptr i8, i8* %6, i64 40, !dbg !12095
  %call = call i32 @readl(i8* %add.ptr2) #12, !dbg !12096
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12097
  %intr_set = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 12, !dbg !12098
  store i32 %call, i32* %intr_set, align 8, !dbg !12099
  ret void, !dbg !12100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_ena_intr(%struct.ksz_hw* %hw) #2 !dbg !12101 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12102, metadata !DIExpression()), !dbg !12103
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12104
  %intr_blocked = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 13, !dbg !12105
  store i32 0, i32* %intr_blocked, align 4, !dbg !12106
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12107
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12108
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 11, !dbg !12109
  %3 = load i32, i32* %intr_mask, align 4, !dbg !12109
  call void @hw_set_intr(%struct.ksz_hw* %1, i32 %3) #12, !dbg !12110
  ret void, !dbg !12111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_intr(%struct.ksz_hw* %hw, i32 %interrupt) #2 !dbg !12112 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %interrupt.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  %0 = load i32, i32* %interrupt.addr, align 4, !dbg !12117
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12118
  %intr_set = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 12, !dbg !12119
  store i32 %0, i32* %intr_set, align 8, !dbg !12120
  %2 = load i32, i32* %interrupt.addr, align 4, !dbg !12121
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12122
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !12123
  %4 = load i8*, i8** %io, align 8, !dbg !12123
  %add.ptr = getelementptr i8, i8* %4, i64 40, !dbg !12124
  call void @writel(i32 %2, i8* %add.ptr) #12, !dbg !12125
  ret void, !dbg !12126
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_w_sta_mac_table(%struct.ksz_hw* %hw, i16 zeroext %addr, i8* %mac_addr, i8 zeroext %ports, i32 %override, i32 %valid, i32 %use_fid, i8 zeroext %fid) #2 !dbg !12127 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %addr.addr = alloca i16, align 2
  %mac_addr.addr = alloca i8*, align 8
  %ports.addr = alloca i8, align 1
  %override.addr = alloca i32, align 4
  %valid.addr = alloca i32, align 4
  %use_fid.addr = alloca i32, align 4
  %fid.addr = alloca i8, align 1
  %data_hi = alloca i32, align 4
  %data_lo = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12130, metadata !DIExpression()), !dbg !12131
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !12132, metadata !DIExpression()), !dbg !12133
  store i8* %mac_addr, i8** %mac_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac_addr.addr, metadata !12134, metadata !DIExpression()), !dbg !12135
  store i8 %ports, i8* %ports.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ports.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  store i32 %override, i32* %override.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %override.addr, metadata !12138, metadata !DIExpression()), !dbg !12139
  store i32 %valid, i32* %valid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %valid.addr, metadata !12140, metadata !DIExpression()), !dbg !12141
  store i32 %use_fid, i32* %use_fid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %use_fid.addr, metadata !12142, metadata !DIExpression()), !dbg !12143
  store i8 %fid, i8* %fid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fid.addr, metadata !12144, metadata !DIExpression()), !dbg !12145
  call void @llvm.dbg.declare(metadata i32* %data_hi, metadata !12146, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.declare(metadata i32* %data_lo, metadata !12148, metadata !DIExpression()), !dbg !12149
  %0 = load i8*, i8** %mac_addr.addr, align 8, !dbg !12150
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !12150
  %1 = load i8, i8* %arrayidx, align 1, !dbg !12150
  %conv = zext i8 %1 to i32, !dbg !12151
  %shl = shl i32 %conv, 24, !dbg !12152
  %2 = load i8*, i8** %mac_addr.addr, align 8, !dbg !12153
  %arrayidx1 = getelementptr i8, i8* %2, i64 3, !dbg !12153
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !12153
  %conv2 = zext i8 %3 to i32, !dbg !12154
  %shl3 = shl i32 %conv2, 16, !dbg !12155
  %or = or i32 %shl, %shl3, !dbg !12156
  %4 = load i8*, i8** %mac_addr.addr, align 8, !dbg !12157
  %arrayidx4 = getelementptr i8, i8* %4, i64 4, !dbg !12157
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !12157
  %conv5 = zext i8 %5 to i32, !dbg !12158
  %shl6 = shl i32 %conv5, 8, !dbg !12159
  %or7 = or i32 %or, %shl6, !dbg !12160
  %6 = load i8*, i8** %mac_addr.addr, align 8, !dbg !12161
  %arrayidx8 = getelementptr i8, i8* %6, i64 5, !dbg !12161
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !12161
  %conv9 = zext i8 %7 to i32, !dbg !12161
  %or10 = or i32 %or7, %conv9, !dbg !12162
  store i32 %or10, i32* %data_lo, align 4, !dbg !12163
  %8 = load i8*, i8** %mac_addr.addr, align 8, !dbg !12164
  %arrayidx11 = getelementptr i8, i8* %8, i64 0, !dbg !12164
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !12164
  %conv12 = zext i8 %9 to i32, !dbg !12165
  %shl13 = shl i32 %conv12, 8, !dbg !12166
  %10 = load i8*, i8** %mac_addr.addr, align 8, !dbg !12167
  %arrayidx14 = getelementptr i8, i8* %10, i64 1, !dbg !12167
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !12167
  %conv15 = zext i8 %11 to i32, !dbg !12167
  %or16 = or i32 %shl13, %conv15, !dbg !12168
  store i32 %or16, i32* %data_hi, align 4, !dbg !12169
  %12 = load i8, i8* %ports.addr, align 1, !dbg !12170
  %conv17 = zext i8 %12 to i32, !dbg !12171
  %shl18 = shl i32 %conv17, 16, !dbg !12172
  %13 = load i32, i32* %data_hi, align 4, !dbg !12173
  %or19 = or i32 %13, %shl18, !dbg !12173
  store i32 %or19, i32* %data_hi, align 4, !dbg !12173
  %14 = load i32, i32* %override.addr, align 4, !dbg !12174
  %tobool = icmp ne i32 %14, 0, !dbg !12174
  br i1 %tobool, label %if.then, label %if.end, !dbg !12176

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %data_hi, align 4, !dbg !12177
  %or20 = or i32 %15, 1048576, !dbg !12177
  store i32 %or20, i32* %data_hi, align 4, !dbg !12177
  br label %if.end, !dbg !12178

if.end:                                           ; preds = %if.then, %entry
  %16 = load i32, i32* %use_fid.addr, align 4, !dbg !12179
  %tobool21 = icmp ne i32 %16, 0, !dbg !12179
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !12181

if.then22:                                        ; preds = %if.end
  %17 = load i32, i32* %data_hi, align 4, !dbg !12182
  %or23 = or i32 %17, 2097152, !dbg !12182
  store i32 %or23, i32* %data_hi, align 4, !dbg !12182
  %18 = load i8, i8* %fid.addr, align 1, !dbg !12184
  %conv24 = zext i8 %18 to i32, !dbg !12185
  %shl25 = shl i32 %conv24, 22, !dbg !12186
  %19 = load i32, i32* %data_hi, align 4, !dbg !12187
  %or26 = or i32 %19, %shl25, !dbg !12187
  store i32 %or26, i32* %data_hi, align 4, !dbg !12187
  br label %if.end27, !dbg !12188

if.end27:                                         ; preds = %if.then22, %if.end
  %20 = load i32, i32* %valid.addr, align 4, !dbg !12189
  %tobool28 = icmp ne i32 %20, 0, !dbg !12189
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !12191

if.then29:                                        ; preds = %if.end27
  %21 = load i32, i32* %data_hi, align 4, !dbg !12192
  %or30 = or i32 %21, 524288, !dbg !12192
  store i32 %or30, i32* %data_hi, align 4, !dbg !12192
  br label %if.end31, !dbg !12193

if.end31:                                         ; preds = %if.then29, %if.end27
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12194
  %23 = load i16, i16* %addr.addr, align 2, !dbg !12195
  %24 = load i32, i32* %data_hi, align 4, !dbg !12196
  %25 = load i32, i32* %data_lo, align 4, !dbg !12197
  call void @sw_w_table_64(%struct.ksz_hw* %22, i32 0, i16 zeroext %23, i32 %24, i32 %25) #12, !dbg !12198
  ret void, !dbg !12199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_w_table_64(%struct.ksz_hw* %hw, i32 %table, i16 zeroext %addr, i32 %data_hi, i32 %data_lo) #2 !dbg !12200 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %table.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %data_hi.addr = alloca i32, align 4
  %data_lo.addr = alloca i32, align 4
  %ctrl_addr = alloca i16, align 2
  %interrupt = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12203, metadata !DIExpression()), !dbg !12204
  store i32 %table, i32* %table.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %table.addr, metadata !12205, metadata !DIExpression()), !dbg !12206
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !12207, metadata !DIExpression()), !dbg !12208
  store i32 %data_hi, i32* %data_hi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_hi.addr, metadata !12209, metadata !DIExpression()), !dbg !12210
  store i32 %data_lo, i32* %data_lo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_lo.addr, metadata !12211, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.declare(metadata i16* %ctrl_addr, metadata !12213, metadata !DIExpression()), !dbg !12214
  call void @llvm.dbg.declare(metadata i32* %interrupt, metadata !12215, metadata !DIExpression()), !dbg !12216
  %0 = load i32, i32* %table.addr, align 4, !dbg !12217
  %shl = shl i32 %0, 2, !dbg !12218
  %shl1 = shl i32 %shl, 8, !dbg !12219
  %1 = load i16, i16* %addr.addr, align 2, !dbg !12220
  %conv = zext i16 %1 to i32, !dbg !12220
  %or = or i32 %shl1, %conv, !dbg !12221
  %conv2 = trunc i32 %or to i16, !dbg !12222
  store i16 %conv2, i16* %ctrl_addr, align 2, !dbg !12223
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12224
  %call = call i32 @hw_block_intr(%struct.ksz_hw* %2) #12, !dbg !12225
  store i32 %call, i32* %interrupt, align 4, !dbg !12226
  %3 = load i32, i32* %data_hi.addr, align 4, !dbg !12227
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12228
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !12229
  %5 = load i8*, i8** %io, align 8, !dbg !12229
  %add.ptr = getelementptr i8, i8* %5, i64 1188, !dbg !12230
  call void @writel(i32 %3, i8* %add.ptr) #12, !dbg !12231
  %6 = load i32, i32* %data_lo.addr, align 4, !dbg !12232
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12233
  %io3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 0, !dbg !12234
  %8 = load i8*, i8** %io3, align 8, !dbg !12234
  %add.ptr4 = getelementptr i8, i8* %8, i64 1192, !dbg !12235
  call void @writel(i32 %6, i8* %add.ptr4) #12, !dbg !12236
  %9 = load i16, i16* %ctrl_addr, align 2, !dbg !12237
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12238
  %io5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 0, !dbg !12239
  %11 = load i8*, i8** %io5, align 8, !dbg !12239
  %add.ptr6 = getelementptr i8, i8* %11, i64 1184, !dbg !12240
  call void @writew(i16 zeroext %9, i8* %add.ptr6) #12, !dbg !12241
  br label %do.body, !dbg !12242

do.body:                                          ; preds = %entry
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12243
  %io7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 0, !dbg !12243
  %13 = load i8*, i8** %io7, align 8, !dbg !12243
  %add.ptr8 = getelementptr i8, i8* %13, i64 1184, !dbg !12243
  %call9 = call zeroext i16 @readw(i8* %add.ptr8) #12, !dbg !12243
  br label %do.end, !dbg !12243

do.end:                                           ; preds = %do.body
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12245
  %15 = load i32, i32* %interrupt, align 4, !dbg !12246
  call void @hw_restore_intr(%struct.ksz_hw* %14, i32 %15) #12, !dbg !12247
  ret void, !dbg !12248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_cfg_port_base_vlan(%struct.ksz_hw* %hw, i32 %port, i8 zeroext %member) #2 !dbg !12249 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %member.addr = alloca i8, align 1
  %addr = alloca i32, align 4
  %data = alloca i8, align 1
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12252, metadata !DIExpression()), !dbg !12253
  store i8 %member, i8* %member.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %member.addr, metadata !12254, metadata !DIExpression()), !dbg !12255
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !12256, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.declare(metadata i8* %data, metadata !12258, metadata !DIExpression()), !dbg !12259
  %0 = load i32, i32* %port.addr, align 4, !dbg !12260
  %mul = mul i32 %0, 32, !dbg !12260
  %add = add i32 1280, %mul, !dbg !12260
  store i32 %add, i32* %addr, align 4, !dbg !12260
  %1 = load i32, i32* %addr, align 4, !dbg !12261
  %add1 = add i32 %1, 2, !dbg !12261
  store i32 %add1, i32* %addr, align 4, !dbg !12261
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12262
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !12263
  %3 = load i8*, i8** %io, align 8, !dbg !12263
  %4 = load i32, i32* %addr, align 4, !dbg !12264
  %idx.ext = zext i32 %4 to i64, !dbg !12265
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !12265
  %call = call zeroext i8 @readb(i8* %add.ptr) #12, !dbg !12266
  store i8 %call, i8* %data, align 1, !dbg !12267
  %5 = load i8, i8* %data, align 1, !dbg !12268
  %conv = zext i8 %5 to i32, !dbg !12268
  %and = and i32 %conv, -8, !dbg !12268
  %conv2 = trunc i32 %and to i8, !dbg !12268
  store i8 %conv2, i8* %data, align 1, !dbg !12268
  %6 = load i8, i8* %member.addr, align 1, !dbg !12269
  %conv3 = zext i8 %6 to i32, !dbg !12269
  %and4 = and i32 %conv3, 7, !dbg !12270
  %7 = load i8, i8* %data, align 1, !dbg !12271
  %conv5 = zext i8 %7 to i32, !dbg !12271
  %or = or i32 %conv5, %and4, !dbg !12271
  %conv6 = trunc i32 %or to i8, !dbg !12271
  store i8 %conv6, i8* %data, align 1, !dbg !12271
  %8 = load i8, i8* %data, align 1, !dbg !12272
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12273
  %io7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 0, !dbg !12274
  %10 = load i8*, i8** %io7, align 8, !dbg !12274
  %11 = load i32, i32* %addr, align 4, !dbg !12275
  %idx.ext8 = zext i32 %11 to i64, !dbg !12276
  %add.ptr9 = getelementptr i8, i8* %10, i64 %idx.ext8, !dbg !12276
  call void @writeb(i8 zeroext %8, i8* %add.ptr9) #12, !dbg !12277
  %12 = load i8, i8* %member.addr, align 1, !dbg !12278
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12279
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 1, !dbg !12280
  %14 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !12280
  %port_cfg = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %14, i32 0, i32 2, !dbg !12281
  %15 = load i32, i32* %port.addr, align 4, !dbg !12282
  %idxprom = sext i32 %15 to i64, !dbg !12279
  %arrayidx = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg, i64 0, i64 %idxprom, !dbg !12279
  %member10 = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx, i32 0, i32 1, !dbg !12283
  store i8 %12, i8* %member10, align 2, !dbg !12284
  ret void, !dbg !12285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_set_stp_state(%struct.ksz_hw* %hw, i32 %port, i32 %state) #2 !dbg !12286 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %state.addr = alloca i32, align 4
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12287, metadata !DIExpression()), !dbg !12288
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12289, metadata !DIExpression()), !dbg !12290
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !12291, metadata !DIExpression()), !dbg !12292
  call void @llvm.dbg.declare(metadata i16* %data, metadata !12293, metadata !DIExpression()), !dbg !12294
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12295
  %1 = load i32, i32* %port.addr, align 4, !dbg !12296
  call void @port_r16(%struct.ksz_hw* %0, i32 %1, i32 2, i16* %data) #12, !dbg !12297
  %2 = load i32, i32* %state.addr, align 4, !dbg !12298
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb14
    i32 3, label %sw.bb24
    i32 4, label %sw.bb31
    i32 5, label %sw.bb38
  ], !dbg !12299

sw.bb:                                            ; preds = %entry
  %3 = load i16, i16* %data, align 2, !dbg !12300
  %conv = zext i16 %3 to i32, !dbg !12300
  %and = and i32 %conv, -1537, !dbg !12300
  %conv1 = trunc i32 %and to i16, !dbg !12300
  store i16 %conv1, i16* %data, align 2, !dbg !12300
  %4 = load i16, i16* %data, align 2, !dbg !12302
  %conv2 = zext i16 %4 to i32, !dbg !12302
  %or = or i32 %conv2, 256, !dbg !12302
  %conv3 = trunc i32 %or to i16, !dbg !12302
  store i16 %conv3, i16* %data, align 2, !dbg !12302
  br label %sw.epilog, !dbg !12303

sw.bb4:                                           ; preds = %entry
  %5 = load i16, i16* %data, align 2, !dbg !12304
  %conv5 = zext i16 %5 to i32, !dbg !12304
  %and6 = and i32 %conv5, -1025, !dbg !12304
  %conv7 = trunc i32 %and6 to i16, !dbg !12304
  store i16 %conv7, i16* %data, align 2, !dbg !12304
  %6 = load i16, i16* %data, align 2, !dbg !12305
  %conv8 = zext i16 %6 to i32, !dbg !12305
  %or9 = or i32 %conv8, 512, !dbg !12305
  %conv10 = trunc i32 %or9 to i16, !dbg !12305
  store i16 %conv10, i16* %data, align 2, !dbg !12305
  %7 = load i16, i16* %data, align 2, !dbg !12306
  %conv11 = zext i16 %7 to i32, !dbg !12306
  %or12 = or i32 %conv11, 256, !dbg !12306
  %conv13 = trunc i32 %or12 to i16, !dbg !12306
  store i16 %conv13, i16* %data, align 2, !dbg !12306
  br label %sw.epilog, !dbg !12307

sw.bb14:                                          ; preds = %entry
  %8 = load i16, i16* %data, align 2, !dbg !12308
  %conv15 = zext i16 %8 to i32, !dbg !12308
  %and16 = and i32 %conv15, -1025, !dbg !12308
  %conv17 = trunc i32 %and16 to i16, !dbg !12308
  store i16 %conv17, i16* %data, align 2, !dbg !12308
  %9 = load i16, i16* %data, align 2, !dbg !12309
  %conv18 = zext i16 %9 to i32, !dbg !12309
  %or19 = or i32 %conv18, 512, !dbg !12309
  %conv20 = trunc i32 %or19 to i16, !dbg !12309
  store i16 %conv20, i16* %data, align 2, !dbg !12309
  %10 = load i16, i16* %data, align 2, !dbg !12310
  %conv21 = zext i16 %10 to i32, !dbg !12310
  %and22 = and i32 %conv21, -257, !dbg !12310
  %conv23 = trunc i32 %and22 to i16, !dbg !12310
  store i16 %conv23, i16* %data, align 2, !dbg !12310
  br label %sw.epilog, !dbg !12311

sw.bb24:                                          ; preds = %entry
  %11 = load i16, i16* %data, align 2, !dbg !12312
  %conv25 = zext i16 %11 to i32, !dbg !12312
  %or26 = or i32 %conv25, 1536, !dbg !12312
  %conv27 = trunc i32 %or26 to i16, !dbg !12312
  store i16 %conv27, i16* %data, align 2, !dbg !12312
  %12 = load i16, i16* %data, align 2, !dbg !12313
  %conv28 = zext i16 %12 to i32, !dbg !12313
  %and29 = and i32 %conv28, -257, !dbg !12313
  %conv30 = trunc i32 %and29 to i16, !dbg !12313
  store i16 %conv30, i16* %data, align 2, !dbg !12313
  br label %sw.epilog, !dbg !12314

sw.bb31:                                          ; preds = %entry
  %13 = load i16, i16* %data, align 2, !dbg !12315
  %conv32 = zext i16 %13 to i32, !dbg !12315
  %and33 = and i32 %conv32, -1537, !dbg !12315
  %conv34 = trunc i32 %and33 to i16, !dbg !12315
  store i16 %conv34, i16* %data, align 2, !dbg !12315
  %14 = load i16, i16* %data, align 2, !dbg !12316
  %conv35 = zext i16 %14 to i32, !dbg !12316
  %or36 = or i32 %conv35, 256, !dbg !12316
  %conv37 = trunc i32 %or36 to i16, !dbg !12316
  store i16 %conv37, i16* %data, align 2, !dbg !12316
  br label %sw.epilog, !dbg !12317

sw.bb38:                                          ; preds = %entry
  %15 = load i16, i16* %data, align 2, !dbg !12318
  %conv39 = zext i16 %15 to i32, !dbg !12318
  %or40 = or i32 %conv39, 1536, !dbg !12318
  %conv41 = trunc i32 %or40 to i16, !dbg !12318
  store i16 %conv41, i16* %data, align 2, !dbg !12318
  %16 = load i16, i16* %data, align 2, !dbg !12319
  %conv42 = zext i16 %16 to i32, !dbg !12319
  %or43 = or i32 %conv42, 256, !dbg !12319
  %conv44 = trunc i32 %or43 to i16, !dbg !12319
  store i16 %conv44, i16* %data, align 2, !dbg !12319
  br label %sw.epilog, !dbg !12320

sw.epilog:                                        ; preds = %entry, %sw.bb38, %sw.bb31, %sw.bb24, %sw.bb14, %sw.bb4, %sw.bb
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12321
  %18 = load i32, i32* %port.addr, align 4, !dbg !12322
  %19 = load i16, i16* %data, align 2, !dbg !12323
  call void @port_w16(%struct.ksz_hw* %17, i32 %18, i32 2, i16 zeroext %19) #12, !dbg !12324
  %20 = load i32, i32* %state.addr, align 4, !dbg !12325
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12326
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %21, i32 0, i32 1, !dbg !12327
  %22 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !12327
  %port_cfg = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %22, i32 0, i32 2, !dbg !12328
  %23 = load i32, i32* %port.addr, align 4, !dbg !12329
  %idxprom = sext i32 %23 to i64, !dbg !12326
  %arrayidx = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg, i64 0, i64 %idxprom, !dbg !12326
  %stp_state = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx, i32 0, i32 5, !dbg !12330
  store i32 %20, i32* %stp_state, align 4, !dbg !12331
  ret void, !dbg !12332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @port_r_cnt(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !12333 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %mib = alloca %struct.ksz_port_mib*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12336, metadata !DIExpression()), !dbg !12337
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12338, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.declare(metadata %struct.ksz_port_mib** %mib, metadata !12340, metadata !DIExpression()), !dbg !12341
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12342
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 3, !dbg !12343
  %1 = load i32, i32* %port.addr, align 4, !dbg !12344
  %idxprom = sext i32 %1 to i64, !dbg !12342
  %arrayidx = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom, !dbg !12342
  store %struct.ksz_port_mib* %arrayidx, %struct.ksz_port_mib** %mib, align 8, !dbg !12341
  %2 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12345
  %mib_start = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %2, i32 0, i32 3, !dbg !12347
  %3 = load i8, i8* %mib_start, align 1, !dbg !12347
  %conv = zext i8 %3 to i32, !dbg !12345
  %cmp = icmp slt i32 %conv, 32, !dbg !12348
  br i1 %cmp, label %if.then, label %if.end, !dbg !12349

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !12350

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12351
  %cnt_ptr = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %4, i32 0, i32 0, !dbg !12352
  %5 = load i8, i8* %cnt_ptr, align 8, !dbg !12352
  %conv2 = zext i8 %5 to i32, !dbg !12351
  %cmp3 = icmp slt i32 %conv2, 32, !dbg !12353
  br i1 %cmp3, label %while.body, label %while.end, !dbg !12350

while.body:                                       ; preds = %while.cond
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12354
  %7 = load i32, i32* %port.addr, align 4, !dbg !12356
  %8 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12357
  %cnt_ptr5 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %8, i32 0, i32 0, !dbg !12358
  %9 = load i8, i8* %cnt_ptr5, align 8, !dbg !12358
  %conv6 = zext i8 %9 to i16, !dbg !12357
  %10 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12359
  %counter = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %10, i32 0, i32 4, !dbg !12360
  %11 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12361
  %cnt_ptr7 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %11, i32 0, i32 0, !dbg !12362
  %12 = load i8, i8* %cnt_ptr7, align 8, !dbg !12362
  %idxprom8 = zext i8 %12 to i64, !dbg !12359
  %arrayidx9 = getelementptr [34 x i64], [34 x i64]* %counter, i64 0, i64 %idxprom8, !dbg !12359
  call void @port_r_mib_cnt(%struct.ksz_hw* %6, i32 %7, i16 zeroext %conv6, i64* %arrayidx9) #12, !dbg !12363
  %13 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12364
  %cnt_ptr10 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %13, i32 0, i32 0, !dbg !12365
  %14 = load i8, i8* %cnt_ptr10, align 8, !dbg !12366
  %inc = add i8 %14, 1, !dbg !12366
  store i8 %inc, i8* %cnt_ptr10, align 8, !dbg !12366
  br label %while.cond, !dbg !12350, !llvm.loop !12367

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !12350

if.end:                                           ; preds = %while.end, %entry
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12369
  %mib_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %15, i32 0, i32 7, !dbg !12371
  %16 = load i32, i32* %mib_cnt, align 4, !dbg !12371
  %cmp11 = icmp sgt i32 %16, 32, !dbg !12372
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !12373

if.then13:                                        ; preds = %if.end
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12374
  %18 = load i32, i32* %port.addr, align 4, !dbg !12375
  %19 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12376
  %dropped = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %19, i32 0, i32 5, !dbg !12377
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %dropped, i64 0, i64 0, !dbg !12376
  %20 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12378
  %counter14 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %20, i32 0, i32 4, !dbg !12379
  %arrayidx15 = getelementptr [34 x i64], [34 x i64]* %counter14, i64 0, i64 32, !dbg !12378
  call void @port_r_mib_pkt(%struct.ksz_hw* %17, i32 %18, i32* %arraydecay, i64* %arrayidx15) #12, !dbg !12380
  br label %if.end16, !dbg !12380

if.end16:                                         ; preds = %if.then13, %if.end
  %21 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !12381
  %cnt_ptr17 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %21, i32 0, i32 0, !dbg !12382
  store i8 0, i8* %cnt_ptr17, align 8, !dbg !12383
  ret i32 0, !dbg !12384
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_r_mib_cnt(%struct.ksz_hw* %hw, i32 %port, i16 zeroext %addr, i64* %cnt) #2 !dbg !12385 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %cnt.addr = alloca i64*, align 8
  %data = alloca i32, align 4
  %ctrl_addr = alloca i16, align 2
  %interrupt = alloca i32, align 4
  %timeout = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12388, metadata !DIExpression()), !dbg !12389
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12390, metadata !DIExpression()), !dbg !12391
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !12392, metadata !DIExpression()), !dbg !12393
  store i64* %cnt, i64** %cnt.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %cnt.addr, metadata !12394, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.declare(metadata i32* %data, metadata !12396, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.declare(metadata i16* %ctrl_addr, metadata !12398, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.declare(metadata i32* %interrupt, metadata !12400, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !12402, metadata !DIExpression()), !dbg !12403
  %0 = load i16, i16* %addr.addr, align 2, !dbg !12404
  %conv = zext i16 %0 to i32, !dbg !12404
  %1 = load i32, i32* %port.addr, align 4, !dbg !12405
  %mul = mul i32 32, %1, !dbg !12406
  %add = add i32 %conv, %mul, !dbg !12407
  %conv1 = trunc i32 %add to i16, !dbg !12404
  store i16 %conv1, i16* %ctrl_addr, align 2, !dbg !12408
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12409
  %call = call i32 @hw_block_intr(%struct.ksz_hw* %2) #12, !dbg !12410
  store i32 %call, i32* %interrupt, align 4, !dbg !12411
  %3 = load i16, i16* %ctrl_addr, align 2, !dbg !12412
  %conv2 = zext i16 %3 to i32, !dbg !12412
  %or = or i32 %conv2, 7168, !dbg !12412
  %conv3 = trunc i32 %or to i16, !dbg !12412
  store i16 %conv3, i16* %ctrl_addr, align 2, !dbg !12412
  %4 = load i16, i16* %ctrl_addr, align 2, !dbg !12413
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12414
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 0, !dbg !12415
  %6 = load i8*, i8** %io, align 8, !dbg !12415
  %add.ptr = getelementptr i8, i8* %6, i64 1184, !dbg !12416
  call void @writew(i16 zeroext %4, i8* %add.ptr) #12, !dbg !12417
  br label %do.body, !dbg !12418

do.body:                                          ; preds = %entry
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12419
  %io4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 0, !dbg !12419
  %8 = load i8*, i8** %io4, align 8, !dbg !12419
  %add.ptr5 = getelementptr i8, i8* %8, i64 1184, !dbg !12419
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !12419
  br label %do.end, !dbg !12419

do.end:                                           ; preds = %do.body
  store i32 100, i32* %timeout, align 4, !dbg !12421
  br label %for.cond, !dbg !12423

for.cond:                                         ; preds = %for.inc, %do.end
  %9 = load i32, i32* %timeout, align 4, !dbg !12424
  %cmp = icmp sgt i32 %9, 0, !dbg !12426
  br i1 %cmp, label %for.body, label %for.end, !dbg !12427

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12428
  %io8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 0, !dbg !12430
  %11 = load i8*, i8** %io8, align 8, !dbg !12430
  %add.ptr9 = getelementptr i8, i8* %11, i64 1192, !dbg !12431
  %call10 = call i32 @readl(i8* %add.ptr9) #12, !dbg !12432
  store i32 %call10, i32* %data, align 4, !dbg !12433
  %12 = load i32, i32* %data, align 4, !dbg !12434
  %and = and i32 %12, 1073741824, !dbg !12436
  %tobool = icmp ne i32 %and, 0, !dbg !12436
  br i1 %tobool, label %if.then, label %if.end18, !dbg !12437

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %data, align 4, !dbg !12438
  %and11 = and i32 %13, -2147483648, !dbg !12441
  %tobool12 = icmp ne i32 %and11, 0, !dbg !12441
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !12442

if.then13:                                        ; preds = %if.then
  %14 = load i64*, i64** %cnt.addr, align 8, !dbg !12443
  %15 = load i64, i64* %14, align 8, !dbg !12444
  %add14 = add i64 %15, 1073741824, !dbg !12444
  store i64 %add14, i64* %14, align 8, !dbg !12444
  br label %if.end, !dbg !12445

if.end:                                           ; preds = %if.then13, %if.then
  %16 = load i32, i32* %data, align 4, !dbg !12446
  %and15 = and i32 %16, 1073741823, !dbg !12447
  %conv16 = zext i32 %and15 to i64, !dbg !12446
  %17 = load i64*, i64** %cnt.addr, align 8, !dbg !12448
  %18 = load i64, i64* %17, align 8, !dbg !12449
  %add17 = add i64 %18, %conv16, !dbg !12449
  store i64 %add17, i64* %17, align 8, !dbg !12449
  br label %for.end, !dbg !12450

if.end18:                                         ; preds = %for.body
  br label %for.inc, !dbg !12451

for.inc:                                          ; preds = %if.end18
  %19 = load i32, i32* %timeout, align 4, !dbg !12452
  %dec = add i32 %19, -1, !dbg !12452
  store i32 %dec, i32* %timeout, align 4, !dbg !12452
  br label %for.cond, !dbg !12453, !llvm.loop !12454

for.end:                                          ; preds = %if.end, %for.cond
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12456
  %21 = load i32, i32* %interrupt, align 4, !dbg !12457
  call void @hw_restore_intr(%struct.ksz_hw* %20, i32 %21) #12, !dbg !12458
  ret void, !dbg !12459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_r_mib_pkt(%struct.ksz_hw* %hw, i32 %port, i32* %last, i64* %cnt) #2 !dbg !12460 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %last.addr = alloca i32*, align 8
  %cnt.addr = alloca i64*, align 8
  %cur = alloca i32, align 4
  %data = alloca i32, align 4
  %ctrl_addr = alloca i16, align 2
  %interrupt = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12463, metadata !DIExpression()), !dbg !12464
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12465, metadata !DIExpression()), !dbg !12466
  store i32* %last, i32** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %last.addr, metadata !12467, metadata !DIExpression()), !dbg !12468
  store i64* %cnt, i64** %cnt.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %cnt.addr, metadata !12469, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.declare(metadata i32* %cur, metadata !12471, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.declare(metadata i32* %data, metadata !12473, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.declare(metadata i16* %ctrl_addr, metadata !12475, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.declare(metadata i32* %interrupt, metadata !12477, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12479, metadata !DIExpression()), !dbg !12480
  %0 = load i32, i32* %port.addr, align 4, !dbg !12481
  %add = add i32 259, %0, !dbg !12482
  store i32 %add, i32* %index, align 4, !dbg !12483
  br label %do.body, !dbg !12484

do.body:                                          ; preds = %do.cond, %entry
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12485
  %call = call i32 @hw_block_intr(%struct.ksz_hw* %1) #12, !dbg !12487
  store i32 %call, i32* %interrupt, align 4, !dbg !12488
  %2 = load i32, i32* %index, align 4, !dbg !12489
  %conv = trunc i32 %2 to i16, !dbg !12490
  store i16 %conv, i16* %ctrl_addr, align 2, !dbg !12491
  %3 = load i16, i16* %ctrl_addr, align 2, !dbg !12492
  %conv1 = zext i16 %3 to i32, !dbg !12492
  %or = or i32 %conv1, 7168, !dbg !12492
  %conv2 = trunc i32 %or to i16, !dbg !12492
  store i16 %conv2, i16* %ctrl_addr, align 2, !dbg !12492
  %4 = load i16, i16* %ctrl_addr, align 2, !dbg !12493
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12494
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 0, !dbg !12495
  %6 = load i8*, i8** %io, align 8, !dbg !12495
  %add.ptr = getelementptr i8, i8* %6, i64 1184, !dbg !12496
  call void @writew(i16 zeroext %4, i8* %add.ptr) #12, !dbg !12497
  br label %do.body3, !dbg !12498

do.body3:                                         ; preds = %do.body
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12499
  %io4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 0, !dbg !12499
  %8 = load i8*, i8** %io4, align 8, !dbg !12499
  %add.ptr5 = getelementptr i8, i8* %8, i64 1184, !dbg !12499
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !12499
  br label %do.end, !dbg !12499

do.end:                                           ; preds = %do.body3
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12501
  %io7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 0, !dbg !12502
  %10 = load i8*, i8** %io7, align 8, !dbg !12502
  %add.ptr8 = getelementptr i8, i8* %10, i64 1192, !dbg !12503
  %call9 = call i32 @readl(i8* %add.ptr8) #12, !dbg !12504
  store i32 %call9, i32* %data, align 4, !dbg !12505
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12506
  %12 = load i32, i32* %interrupt, align 4, !dbg !12507
  call void @hw_restore_intr(%struct.ksz_hw* %11, i32 %12) #12, !dbg !12508
  %13 = load i32, i32* %data, align 4, !dbg !12509
  %and = and i32 %13, 65535, !dbg !12509
  store i32 %and, i32* %data, align 4, !dbg !12509
  %14 = load i32*, i32** %last.addr, align 8, !dbg !12510
  %15 = load i32, i32* %14, align 4, !dbg !12511
  store i32 %15, i32* %cur, align 4, !dbg !12512
  %16 = load i32, i32* %data, align 4, !dbg !12513
  %17 = load i32, i32* %cur, align 4, !dbg !12515
  %cmp = icmp ne i32 %16, %17, !dbg !12516
  br i1 %cmp, label %if.then, label %if.end17, !dbg !12517

if.then:                                          ; preds = %do.end
  %18 = load i32, i32* %data, align 4, !dbg !12518
  %19 = load i32*, i32** %last.addr, align 8, !dbg !12520
  store i32 %18, i32* %19, align 4, !dbg !12521
  %20 = load i32, i32* %data, align 4, !dbg !12522
  %21 = load i32, i32* %cur, align 4, !dbg !12524
  %cmp11 = icmp ult i32 %20, %21, !dbg !12525
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !12526

if.then13:                                        ; preds = %if.then
  %22 = load i32, i32* %data, align 4, !dbg !12527
  %add14 = add i32 %22, 65536, !dbg !12527
  store i32 %add14, i32* %data, align 4, !dbg !12527
  br label %if.end, !dbg !12528

if.end:                                           ; preds = %if.then13, %if.then
  %23 = load i32, i32* %cur, align 4, !dbg !12529
  %24 = load i32, i32* %data, align 4, !dbg !12530
  %sub = sub i32 %24, %23, !dbg !12530
  store i32 %sub, i32* %data, align 4, !dbg !12530
  %25 = load i32, i32* %data, align 4, !dbg !12531
  %conv15 = zext i32 %25 to i64, !dbg !12531
  %26 = load i64*, i64** %cnt.addr, align 8, !dbg !12532
  %27 = load i64, i64* %26, align 8, !dbg !12533
  %add16 = add i64 %27, %conv15, !dbg !12533
  store i64 %add16, i64* %26, align 8, !dbg !12533
  br label %if.end17, !dbg !12534

if.end17:                                         ; preds = %if.end, %do.end
  %28 = load i32*, i32** %last.addr, align 8, !dbg !12535
  %incdec.ptr = getelementptr i32, i32* %28, i32 1, !dbg !12535
  store i32* %incdec.ptr, i32** %last.addr, align 8, !dbg !12535
  %29 = load i64*, i64** %cnt.addr, align 8, !dbg !12536
  %incdec.ptr18 = getelementptr i64, i64* %29, i32 1, !dbg !12536
  store i64* %incdec.ptr18, i64** %cnt.addr, align 8, !dbg !12536
  %30 = load i32, i32* %index, align 4, !dbg !12537
  %sub19 = sub i32 %30, 3, !dbg !12537
  store i32 %sub19, i32* %index, align 4, !dbg !12537
  br label %do.cond, !dbg !12538

do.cond:                                          ; preds = %if.end17
  %31 = load i32, i32* %index, align 4, !dbg !12539
  %32 = load i32, i32* %port.addr, align 4, !dbg !12540
  %add20 = add i32 256, %32, !dbg !12541
  %cmp21 = icmp sge i32 %31, %add20, !dbg !12542
  br i1 %cmp21, label %do.body, label %do.end23, !dbg !12538, !llvm.loop !12543

do.end23:                                         ; preds = %do.cond
  ret void, !dbg !12545
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_clr_wol_pme_status(%struct.ksz_hw* %hw) #2 !dbg !12546 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_info*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12547, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !12549, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12551, metadata !DIExpression()), !dbg !12553
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12553
  %1 = bitcast %struct.ksz_hw* %0 to i8*, !dbg !12553
  store i8* %1, i8** %__mptr, align 8, !dbg !12553
  br label %do.body, !dbg !12553

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12554

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12553
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !12553
  %3 = bitcast i8* %add.ptr to %struct.dev_info*, !dbg !12553
  store %struct.dev_info* %3, %struct.dev_info** %tmp, align 8, !dbg !12554
  %4 = load %struct.dev_info*, %struct.dev_info** %tmp, align 8, !dbg !12553
  store %struct.dev_info* %4, %struct.dev_info** %hw_priv, align 8, !dbg !12550
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12556, metadata !DIExpression()), !dbg !12557
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12558
  %pdev1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 1, !dbg !12559
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !12559
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !12557
  call void @llvm.dbg.declare(metadata i16* %data, metadata !12560, metadata !DIExpression()), !dbg !12561
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12562
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 28, !dbg !12564
  %8 = load i8, i8* %pm_cap, align 1, !dbg !12564
  %tobool = icmp ne i8 %8, 0, !dbg !12562
  br i1 %tobool, label %if.end, label %if.then, !dbg !12565

if.then:                                          ; preds = %do.end
  br label %return, !dbg !12566

if.end:                                           ; preds = %do.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12567
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12568
  %pm_cap2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 28, !dbg !12569
  %11 = load i8, i8* %pm_cap2, align 1, !dbg !12569
  %conv = zext i8 %11 to i32, !dbg !12568
  %add = add i32 %conv, 4, !dbg !12570
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %9, i32 %add, i16* %data) #12, !dbg !12571
  %12 = load i16, i16* %data, align 2, !dbg !12572
  %conv3 = zext i16 %12 to i32, !dbg !12572
  %or = or i32 %conv3, 32768, !dbg !12572
  %conv4 = trunc i32 %or to i16, !dbg !12572
  store i16 %conv4, i16* %data, align 2, !dbg !12572
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12573
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12574
  %pm_cap5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 28, !dbg !12575
  %15 = load i8, i8* %pm_cap5, align 1, !dbg !12575
  %conv6 = zext i8 %15 to i32, !dbg !12574
  %add7 = add i32 %conv6, 4, !dbg !12576
  %16 = load i16, i16* %data, align 2, !dbg !12577
  %call8 = call i32 @pci_write_config_word(%struct.pci_dev* %13, i32 %add7, i16 zeroext %16) #12, !dbg !12578
  br label %return, !dbg !12579

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_chk_wol_pme_status(%struct.ksz_hw* %hw) #2 !dbg !12580 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_info*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !12581, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !12583, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12585, metadata !DIExpression()), !dbg !12587
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !12587
  %1 = bitcast %struct.ksz_hw* %0 to i8*, !dbg !12587
  store i8* %1, i8** %__mptr, align 8, !dbg !12587
  br label %do.body, !dbg !12587

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12588

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12587
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !12587
  %3 = bitcast i8* %add.ptr to %struct.dev_info*, !dbg !12587
  store %struct.dev_info* %3, %struct.dev_info** %tmp, align 8, !dbg !12588
  %4 = load %struct.dev_info*, %struct.dev_info** %tmp, align 8, !dbg !12587
  store %struct.dev_info* %4, %struct.dev_info** %hw_priv, align 8, !dbg !12584
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12590, metadata !DIExpression()), !dbg !12591
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12592
  %pdev1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 1, !dbg !12593
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !12593
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !12591
  call void @llvm.dbg.declare(metadata i16* %data, metadata !12594, metadata !DIExpression()), !dbg !12595
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12596
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 28, !dbg !12598
  %8 = load i8, i8* %pm_cap, align 1, !dbg !12598
  %tobool = icmp ne i8 %8, 0, !dbg !12596
  br i1 %tobool, label %if.end, label %if.then, !dbg !12599

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !12600
  br label %return, !dbg !12600

if.end:                                           ; preds = %do.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12601
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12602
  %pm_cap2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 28, !dbg !12603
  %11 = load i8, i8* %pm_cap2, align 1, !dbg !12603
  %conv = zext i8 %11 to i32, !dbg !12602
  %add = add i32 %conv, 4, !dbg !12604
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %9, i32 %add, i16* %data) #12, !dbg !12605
  %12 = load i16, i16* %data, align 2, !dbg !12606
  %conv3 = zext i16 %12 to i32, !dbg !12606
  %and = and i32 %conv3, 32768, !dbg !12607
  %cmp = icmp eq i32 %and, 32768, !dbg !12608
  %conv4 = zext i1 %cmp to i32, !dbg !12608
  store i32 %conv4, i32* %retval, align 4, !dbg !12609
  br label %return, !dbg !12609

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !12610
  ret i32 %13, !dbg !12610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_update_timer(%struct.ksz_timer_info* %info) #2 !dbg !12611 {
entry:
  %info.addr = alloca %struct.ksz_timer_info*, align 8
  store %struct.ksz_timer_info* %info, %struct.ksz_timer_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_timer_info** %info.addr, metadata !12614, metadata !DIExpression()), !dbg !12615
  %0 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12616
  %cnt = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %0, i32 0, i32 1, !dbg !12617
  %1 = load i32, i32* %cnt, align 8, !dbg !12618
  %inc = add i32 %1, 1, !dbg !12618
  store i32 %inc, i32* %cnt, align 8, !dbg !12618
  %2 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12619
  %max = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %2, i32 0, i32 2, !dbg !12621
  %3 = load i32, i32* %max, align 4, !dbg !12621
  %cmp = icmp sgt i32 %3, 0, !dbg !12622
  br i1 %cmp, label %if.then, label %if.else7, !dbg !12623

if.then:                                          ; preds = %entry
  %4 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12624
  %cnt1 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %4, i32 0, i32 1, !dbg !12627
  %5 = load i32, i32* %cnt1, align 8, !dbg !12627
  %6 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12628
  %max2 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %6, i32 0, i32 2, !dbg !12629
  %7 = load i32, i32* %max2, align 4, !dbg !12629
  %cmp3 = icmp slt i32 %5, %7, !dbg !12630
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !12631

if.then4:                                         ; preds = %if.then
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !12632
  %9 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12634
  %period = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %9, i32 0, i32 3, !dbg !12635
  %10 = load i32, i32* %period, align 8, !dbg !12635
  %conv = sext i32 %10 to i64, !dbg !12634
  %add = add i64 %8, %conv, !dbg !12636
  %11 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12637
  %timer = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %11, i32 0, i32 0, !dbg !12638
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %timer, i32 0, i32 1, !dbg !12639
  store i64 %add, i64* %expires, align 8, !dbg !12640
  %12 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12641
  %timer5 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %12, i32 0, i32 0, !dbg !12642
  call void @add_timer(%struct.timer_list* %timer5) #12, !dbg !12643
  br label %if.end, !dbg !12644

if.else:                                          ; preds = %if.then
  %13 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12645
  %max6 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %13, i32 0, i32 2, !dbg !12646
  store i32 0, i32* %max6, align 4, !dbg !12647
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end19, !dbg !12648

if.else7:                                         ; preds = %entry
  %14 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12649
  %max8 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %14, i32 0, i32 2, !dbg !12651
  %15 = load i32, i32* %max8, align 4, !dbg !12651
  %cmp9 = icmp slt i32 %15, 0, !dbg !12652
  br i1 %cmp9, label %if.then11, label %if.end18, !dbg !12653

if.then11:                                        ; preds = %if.else7
  %16 = load volatile i64, i64* @jiffies, align 8, !dbg !12654
  %17 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12656
  %period12 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %17, i32 0, i32 3, !dbg !12657
  %18 = load i32, i32* %period12, align 8, !dbg !12657
  %conv13 = sext i32 %18 to i64, !dbg !12656
  %add14 = add i64 %16, %conv13, !dbg !12658
  %19 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12659
  %timer15 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %19, i32 0, i32 0, !dbg !12660
  %expires16 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %timer15, i32 0, i32 1, !dbg !12661
  store i64 %add14, i64* %expires16, align 8, !dbg !12662
  %20 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !12663
  %timer17 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %20, i32 0, i32 0, !dbg !12664
  call void @add_timer(%struct.timer_list* %timer17) #12, !dbg !12665
  br label %if.end18, !dbg !12666

if.end18:                                         ; preds = %if.then11, %if.else7
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  ret void, !dbg !12667
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @add_timer(%struct.timer_list*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_init(%struct.net_device* %dev) #0 section ".init.text" !dbg !12668 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12669, metadata !DIExpression()), !dbg !12670
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !12671, metadata !DIExpression()), !dbg !12672
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12673
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !12674
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !12674
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !12672
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12675
  %monitor_timer_info = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 2, !dbg !12676
  call void @ksz_init_timer(%struct.ksz_timer_info* %monitor_timer_info, i32 125, void (%struct.timer_list*)* @dev_monitor) #12, !dbg !12677
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12678
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 94, !dbg !12679
  store i32 125, i32* %watchdog_timeo, align 8, !dbg !12680
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12681
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 16, !dbg !12682
  store i64 1099511627779, i64* %hw_features, align 8, !dbg !12683
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12684
  %hw_features1 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 16, !dbg !12685
  %6 = load i64, i64* %hw_features1, align 8, !dbg !12686
  %or = or i64 %6, 16, !dbg !12686
  store i64 %or, i64* %hw_features1, align 8, !dbg !12686
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12687
  %hw_features2 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 16, !dbg !12688
  %8 = load i64, i64* %hw_features2, align 8, !dbg !12688
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12689
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 15, !dbg !12690
  %10 = load i64, i64* %features, align 8, !dbg !12691
  %or3 = or i64 %10, %8, !dbg !12691
  store i64 %or3, i64* %features, align 8, !dbg !12691
  %11 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12692
  %proc_sem = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %11, i32 0, i32 3, !dbg !12693
  call void @sema_init(%struct.semaphore* %proc_sem, i32 1) #12, !dbg !12694
  %12 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12695
  %mii_if = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %12, i32 0, i32 5, !dbg !12696
  %phy_id_mask = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if, i32 0, i32 2, !dbg !12697
  store i32 1, i32* %phy_id_mask, align 8, !dbg !12698
  %13 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12699
  %mii_if4 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %13, i32 0, i32 5, !dbg !12700
  %reg_num_mask = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if4, i32 0, i32 3, !dbg !12701
  store i32 7, i32* %reg_num_mask, align 4, !dbg !12702
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12703
  %15 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12704
  %mii_if5 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %15, i32 0, i32 5, !dbg !12705
  %dev6 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if5, i32 0, i32 5, !dbg !12706
  store %struct.net_device* %14, %struct.net_device** %dev6, align 8, !dbg !12707
  %16 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12708
  %mii_if7 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %16, i32 0, i32 5, !dbg !12709
  %mdio_read = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if7, i32 0, i32 6, !dbg !12710
  store i32 (%struct.net_device*, i32, i32)* @mdio_read, i32 (%struct.net_device*, i32, i32)** %mdio_read, align 8, !dbg !12711
  %17 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12712
  %mii_if8 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %17, i32 0, i32 5, !dbg !12713
  %mdio_write = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if8, i32 0, i32 7, !dbg !12714
  store void (%struct.net_device*, i32, i32, i32)* @mdio_write, void (%struct.net_device*, i32, i32, i32)** %mdio_write, align 8, !dbg !12715
  %18 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12716
  %port = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %18, i32 0, i32 1, !dbg !12717
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %port, i32 0, i32 4, !dbg !12718
  %19 = load i32, i32* %first_port, align 4, !dbg !12718
  %add = add i32 %19, 1, !dbg !12719
  %20 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12720
  %mii_if9 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %20, i32 0, i32 5, !dbg !12721
  %phy_id = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if9, i32 0, i32 0, !dbg !12722
  store i32 %add, i32* %phy_id, align 8, !dbg !12723
  %21 = load i32, i32* @msg_enable, align 4, !dbg !12724
  %call10 = call i32 @netif_msg_init(i32 %21, i32 7) #12, !dbg !12725
  %22 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12726
  %msg_enable = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %22, i32 0, i32 7, !dbg !12727
  store i32 %call10, i32* %msg_enable, align 4, !dbg !12728
  ret i32 0, !dbg !12729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_open(%struct.net_device* %dev) #2 !dbg !12730 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %i = alloca i32, align 4
  %p = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12731, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !12733, metadata !DIExpression()), !dbg !12734
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12735
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !12736
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !12736
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !12734
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !12737, metadata !DIExpression()), !dbg !12738
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12739
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !12740
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !12740
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !12738
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !12741, metadata !DIExpression()), !dbg !12742
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12743
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !12744
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !12742
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !12745, metadata !DIExpression()), !dbg !12746
  %5 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12747
  %port2 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %5, i32 0, i32 1, !dbg !12748
  store %struct.ksz_port* %port2, %struct.ksz_port** %port, align 8, !dbg !12746
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12749, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.declare(metadata i32* %p, metadata !12751, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12753, metadata !DIExpression()), !dbg !12754
  store i32 0, i32* %rc, align 4, !dbg !12754
  %6 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12755
  %multicast = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %6, i32 0, i32 9, !dbg !12756
  store i32 0, i32* %multicast, align 4, !dbg !12757
  %7 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12758
  %promiscuous = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %7, i32 0, i32 10, !dbg !12759
  store i32 0, i32* %promiscuous, align 8, !dbg !12760
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12761
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 24, !dbg !12762
  %9 = bitcast %struct.net_device_stats* %stats to i8*, !dbg !12763
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 184, i1 false), !dbg !12763
  %10 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12764
  %counter = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %10, i32 0, i32 7, !dbg !12765
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %counter, i64 0, i64 0, !dbg !12766
  %11 = bitcast i64* %arraydecay to i8*, !dbg !12766
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false), !dbg !12766
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12767
  %opened = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 14, !dbg !12769
  %13 = load i32, i32* %opened, align 4, !dbg !12769
  %tobool = icmp ne i32 %13, 0, !dbg !12770
  br i1 %tobool, label %if.end21, label %if.then, !dbg !12771

if.then:                                          ; preds = %entry
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12772
  %call3 = call i32 @prepare_hardware(%struct.net_device* %14) #12, !dbg !12774
  store i32 %call3, i32* %rc, align 4, !dbg !12775
  %15 = load i32, i32* %rc, align 4, !dbg !12776
  %tobool4 = icmp ne i32 %15, 0, !dbg !12776
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !12778

if.then5:                                         ; preds = %if.then
  %16 = load i32, i32* %rc, align 4, !dbg !12779
  store i32 %16, i32* %retval, align 4, !dbg !12780
  br label %return, !dbg !12780

if.end:                                           ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !12781
  br label %for.cond, !dbg !12783

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %i, align 4, !dbg !12784
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12786
  %mib_port_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 8, !dbg !12787
  %19 = load i32, i32* %mib_port_cnt, align 8, !dbg !12787
  %cmp = icmp slt i32 %17, %19, !dbg !12788
  br i1 %cmp, label %for.body, label %for.end, !dbg !12789

for.body:                                         ; preds = %for.cond
  %20 = load i64, i64* @next_jiffies, align 8, !dbg !12790
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !12793
  %cmp6 = icmp ult i64 %20, %21, !dbg !12794
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !12795

if.then7:                                         ; preds = %for.body
  %22 = load volatile i64, i64* @jiffies, align 8, !dbg !12796
  %add = add i64 %22, 500, !dbg !12797
  store i64 %add, i64* @next_jiffies, align 8, !dbg !12798
  br label %if.end9, !dbg !12799

if.else:                                          ; preds = %for.body
  %23 = load i64, i64* @next_jiffies, align 8, !dbg !12800
  %add8 = add i64 %23, 250, !dbg !12800
  store i64 %add8, i64* @next_jiffies, align 8, !dbg !12800
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  %24 = load i64, i64* @next_jiffies, align 8, !dbg !12801
  %25 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12802
  %counter10 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %25, i32 0, i32 12, !dbg !12803
  %26 = load i32, i32* %i, align 4, !dbg !12804
  %idxprom = sext i32 %26 to i64, !dbg !12802
  %arrayidx = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter10, i64 0, i64 %idxprom, !dbg !12802
  %time = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx, i32 0, i32 1, !dbg !12805
  store i64 %24, i64* %time, align 8, !dbg !12806
  %27 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12807
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %27, i32 0, i32 3, !dbg !12808
  %28 = load i32, i32* %i, align 4, !dbg !12809
  %idxprom11 = sext i32 %28 to i64, !dbg !12807
  %arrayidx12 = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom11, !dbg !12807
  %state = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %arrayidx12, i32 0, i32 2, !dbg !12810
  store i8 1, i8* %state, align 2, !dbg !12811
  %29 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12812
  %30 = load i32, i32* %i, align 4, !dbg !12813
  call void @port_init_cnt(%struct.ksz_hw* %29, i32 %30) #12, !dbg !12814
  br label %for.inc, !dbg !12815

for.inc:                                          ; preds = %if.end9
  %31 = load i32, i32* %i, align 4, !dbg !12816
  %inc = add i32 %31, 1, !dbg !12816
  store i32 %inc, i32* %i, align 4, !dbg !12816
  br label %for.cond, !dbg !12817, !llvm.loop !12818

for.end:                                          ; preds = %for.cond
  %32 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12820
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %32, i32 0, i32 1, !dbg !12822
  %33 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !12822
  %tobool13 = icmp ne %struct.ksz_switch* %33, null, !dbg !12820
  br i1 %tobool13, label %if.then14, label %if.else18, !dbg !12823

if.then14:                                        ; preds = %for.end
  %34 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12824
  %port_mib15 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %34, i32 0, i32 3, !dbg !12825
  %arrayidx16 = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib15, i64 0, i64 2, !dbg !12824
  %state17 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %arrayidx16, i32 0, i32 2, !dbg !12826
  store i8 0, i8* %state17, align 2, !dbg !12827
  br label %if.end20, !dbg !12824

if.else18:                                        ; preds = %for.end
  %35 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12828
  call void @hw_add_wol_bcast(%struct.ksz_hw* %35) #12, !dbg !12830
  %36 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12831
  call void @hw_cfg_wol_pme(%struct.ksz_hw* %36, i32 0) #12, !dbg !12832
  %37 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12833
  %hw19 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %37, i32 0, i32 2, !dbg !12834
  call void @hw_clr_wol_pme_status(%struct.ksz_hw* %hw19) #12, !dbg !12835
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then14
  br label %if.end21, !dbg !12836

if.end21:                                         ; preds = %if.end20, %entry
  %38 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12837
  call void @port_set_power_saving(%struct.ksz_port* %38, i32 0) #12, !dbg !12838
  store i32 0, i32* %i, align 4, !dbg !12839
  %39 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12841
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %39, i32 0, i32 4, !dbg !12842
  %40 = load i32, i32* %first_port, align 4, !dbg !12842
  store i32 %40, i32* %p, align 4, !dbg !12843
  br label %for.cond22, !dbg !12844

for.cond22:                                       ; preds = %for.inc31, %if.end21
  %41 = load i32, i32* %i, align 4, !dbg !12845
  %42 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12847
  %port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %42, i32 0, i32 6, !dbg !12848
  %43 = load i32, i32* %port_cnt, align 4, !dbg !12848
  %cmp23 = icmp slt i32 %41, %43, !dbg !12849
  br i1 %cmp23, label %for.body24, label %for.end34, !dbg !12850

for.body24:                                       ; preds = %for.cond22
  %44 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12851
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %44, i32 0, i32 2, !dbg !12853
  %45 = load i32, i32* %p, align 4, !dbg !12854
  %idxprom25 = sext i32 %45 to i64, !dbg !12851
  %arrayidx26 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 %idxprom25, !dbg !12851
  %partner = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx26, i32 0, i32 4, !dbg !12855
  store i8 -1, i8* %partner, align 2, !dbg !12856
  %46 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12857
  %port_info27 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %46, i32 0, i32 2, !dbg !12858
  %47 = load i32, i32* %p, align 4, !dbg !12859
  %idxprom28 = sext i32 %47 to i64, !dbg !12857
  %arrayidx29 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info27, i64 0, i64 %idxprom28, !dbg !12857
  %state30 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx29, i32 0, i32 0, !dbg !12860
  store i32 1, i32* %state30, align 8, !dbg !12861
  br label %for.inc31, !dbg !12862

for.inc31:                                        ; preds = %for.body24
  %48 = load i32, i32* %i, align 4, !dbg !12863
  %inc32 = add i32 %48, 1, !dbg !12863
  store i32 %inc32, i32* %i, align 4, !dbg !12863
  %49 = load i32, i32* %p, align 4, !dbg !12864
  %inc33 = add i32 %49, 1, !dbg !12864
  store i32 %inc33, i32* %p, align 4, !dbg !12864
  br label %for.cond22, !dbg !12865, !llvm.loop !12866

for.end34:                                        ; preds = %for.cond22
  %50 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12868
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %50, i32 0, i32 4, !dbg !12870
  %51 = load i32, i32* %dev_count, align 8, !dbg !12870
  %cmp35 = icmp sgt i32 %51, 1, !dbg !12871
  br i1 %cmp35, label %if.then36, label %if.end43, !dbg !12872

if.then36:                                        ; preds = %for.end34
  %52 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12873
  %53 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12875
  %first_port37 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %53, i32 0, i32 4, !dbg !12876
  %54 = load i32, i32* %first_port37, align 4, !dbg !12876
  call void @port_set_stp_state(%struct.ksz_hw* %52, i32 %54, i32 5) #12, !dbg !12877
  %55 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12878
  %first_port38 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %55, i32 0, i32 4, !dbg !12880
  %56 = load i32, i32* %first_port38, align 4, !dbg !12880
  %cmp39 = icmp sgt i32 %56, 0, !dbg !12881
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !12882

if.then40:                                        ; preds = %if.then36
  %57 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12883
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12884
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %58, i32 0, i32 74, !dbg !12885
  %59 = load i8*, i8** %dev_addr, align 8, !dbg !12885
  %call41 = call i32 @hw_add_addr(%struct.ksz_hw* %57, i8* %59) #12, !dbg !12886
  br label %if.end42, !dbg !12886

if.end42:                                         ; preds = %if.then40, %if.then36
  br label %if.end43, !dbg !12887

if.end43:                                         ; preds = %if.end42, %for.end34
  %60 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12888
  call void @port_get_link_speed(%struct.ksz_port* %60) #12, !dbg !12889
  %61 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12890
  %force_link = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %61, i32 0, i32 2, !dbg !12892
  %62 = load i8, i8* %force_link, align 2, !dbg !12892
  %tobool44 = icmp ne i8 %62, 0, !dbg !12890
  br i1 %tobool44, label %if.then45, label %if.else46, !dbg !12893

if.then45:                                        ; preds = %if.end43
  %63 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12894
  call void @port_force_link_speed(%struct.ksz_port* %63) #12, !dbg !12895
  br label %if.end47, !dbg !12895

if.else46:                                        ; preds = %if.end43
  %64 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12896
  call void @port_set_link_speed(%struct.ksz_port* %64) #12, !dbg !12897
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %if.then45
  %65 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12898
  %opened48 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %65, i32 0, i32 14, !dbg !12900
  %66 = load i32, i32* %opened48, align 4, !dbg !12900
  %tobool49 = icmp ne i32 %66, 0, !dbg !12901
  br i1 %tobool49, label %if.end56, label %if.then50, !dbg !12902

if.then50:                                        ; preds = %if.end47
  %67 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12903
  call void @hw_setup_intr(%struct.ksz_hw* %67) #12, !dbg !12905
  %68 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12906
  call void @hw_enable(%struct.ksz_hw* %68) #12, !dbg !12907
  %69 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12908
  call void @hw_ena_intr(%struct.ksz_hw* %69) #12, !dbg !12909
  %70 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12910
  %mib_port_cnt51 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %70, i32 0, i32 8, !dbg !12912
  %71 = load i32, i32* %mib_port_cnt51, align 8, !dbg !12912
  %tobool52 = icmp ne i32 %71, 0, !dbg !12910
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !12913

if.then53:                                        ; preds = %if.then50
  %72 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12914
  %mib_timer_info = getelementptr inbounds %struct.dev_info, %struct.dev_info* %72, i32 0, i32 11, !dbg !12915
  %73 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12916
  %mib_timer_info54 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %73, i32 0, i32 11, !dbg !12917
  %period = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %mib_timer_info54, i32 0, i32 3, !dbg !12918
  %74 = load i32, i32* %period, align 8, !dbg !12918
  call void @ksz_start_timer(%struct.ksz_timer_info* %mib_timer_info, i32 %74) #12, !dbg !12919
  br label %if.end55, !dbg !12919

if.end55:                                         ; preds = %if.then53, %if.then50
  br label %if.end56, !dbg !12920

if.end56:                                         ; preds = %if.end55, %if.end47
  %75 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12921
  %opened57 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %75, i32 0, i32 14, !dbg !12922
  %76 = load i32, i32* %opened57, align 4, !dbg !12923
  %inc58 = add i32 %76, 1, !dbg !12923
  store i32 %inc58, i32* %opened57, align 4, !dbg !12923
  %77 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12924
  %monitor_timer_info = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %77, i32 0, i32 2, !dbg !12925
  %78 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12926
  %monitor_timer_info59 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %78, i32 0, i32 2, !dbg !12927
  %period60 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %monitor_timer_info59, i32 0, i32 3, !dbg !12928
  %79 = load i32, i32* %period60, align 8, !dbg !12928
  call void @ksz_start_timer(%struct.ksz_timer_info* %monitor_timer_info, i32 %79) #12, !dbg !12929
  %80 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12930
  %linked = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %80, i32 0, i32 9, !dbg !12931
  %81 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked, align 8, !dbg !12931
  %state61 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %81, i32 0, i32 0, !dbg !12932
  %82 = load i32, i32* %state61, align 8, !dbg !12932
  %83 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12933
  %media_state = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %83, i32 0, i32 8, !dbg !12934
  store i32 %82, i32* %media_state, align 8, !dbg !12935
  %84 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12936
  call void @set_media_state(%struct.net_device* %84, i32 0) #12, !dbg !12937
  %85 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12938
  call void @netif_start_queue(%struct.net_device* %85) #12, !dbg !12939
  store i32 0, i32* %retval, align 4, !dbg !12940
  br label %return, !dbg !12940

return:                                           ; preds = %if.end56, %if.then5
  %86 = load i32, i32* %retval, align 4, !dbg !12941
  ret i32 %86, !dbg !12941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_close(%struct.net_device* %dev) #2 !dbg !12942 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %pi = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !12945, metadata !DIExpression()), !dbg !12946
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12947
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !12948
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !12948
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !12946
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !12949, metadata !DIExpression()), !dbg !12950
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12951
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !12952
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !12952
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !12950
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !12953, metadata !DIExpression()), !dbg !12954
  %4 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12955
  %port1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %4, i32 0, i32 1, !dbg !12956
  store %struct.ksz_port* %port1, %struct.ksz_port** %port, align 8, !dbg !12954
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !12957, metadata !DIExpression()), !dbg !12958
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !12959
  %hw2 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 2, !dbg !12960
  store %struct.ksz_hw* %hw2, %struct.ksz_hw** %hw, align 8, !dbg !12958
  call void @llvm.dbg.declare(metadata i32* %pi, metadata !12961, metadata !DIExpression()), !dbg !12962
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12963
  call void @netif_stop_queue(%struct.net_device* %6) #12, !dbg !12964
  %7 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !12965
  %monitor_timer_info = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %7, i32 0, i32 2, !dbg !12966
  call void @ksz_stop_timer(%struct.ksz_timer_info* %monitor_timer_info) #12, !dbg !12967
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12968
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 4, !dbg !12970
  %9 = load i32, i32* %dev_count, align 8, !dbg !12970
  %cmp = icmp sgt i32 %9, 1, !dbg !12971
  br i1 %cmp, label %if.then, label %if.end14, !dbg !12972

if.then:                                          ; preds = %entry
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12973
  %11 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12975
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %11, i32 0, i32 4, !dbg !12976
  %12 = load i32, i32* %first_port, align 4, !dbg !12976
  call void @port_set_stp_state(%struct.ksz_hw* %10, i32 %12, i32 0) #12, !dbg !12977
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12978
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 32, !dbg !12980
  %14 = load i32, i32* %features, align 8, !dbg !12980
  %and = and i32 %14, 256, !dbg !12981
  %tobool = icmp ne i32 %and, 0, !dbg !12981
  br i1 %tobool, label %if.then3, label %if.end13, !dbg !12982

if.then3:                                         ; preds = %if.then
  %15 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !12983
  %first_port4 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %15, i32 0, i32 4, !dbg !12985
  %16 = load i32, i32* %first_port4, align 4, !dbg !12985
  %shl = shl i32 1, %16, !dbg !12986
  store i32 %shl, i32* %pi, align 4, !dbg !12987
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12988
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 1, !dbg !12990
  %18 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !12990
  %member = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %18, i32 0, i32 8, !dbg !12991
  %19 = load i8, i8* %member, align 1, !dbg !12991
  %conv = zext i8 %19 to i32, !dbg !12988
  %20 = load i32, i32* %pi, align 4, !dbg !12992
  %and5 = and i32 %conv, %20, !dbg !12993
  %tobool6 = icmp ne i32 %and5, 0, !dbg !12993
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12994

if.then7:                                         ; preds = %if.then3
  %21 = load i32, i32* %pi, align 4, !dbg !12995
  %neg = xor i32 %21, -1, !dbg !12997
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !12998
  %ksz_switch8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %22, i32 0, i32 1, !dbg !12999
  %23 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch8, align 8, !dbg !12999
  %member9 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %23, i32 0, i32 8, !dbg !13000
  %24 = load i8, i8* %member9, align 1, !dbg !13001
  %conv10 = zext i8 %24 to i32, !dbg !13001
  %and11 = and i32 %conv10, %neg, !dbg !13001
  %conv12 = trunc i32 %and11 to i8, !dbg !13001
  store i8 %conv12, i8* %member9, align 1, !dbg !13001
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13002
  call void @bridge_change(%struct.ksz_hw* %25) #12, !dbg !13003
  br label %if.end, !dbg !13004

if.end:                                           ; preds = %if.then7, %if.then3
  br label %if.end13, !dbg !13005

if.end13:                                         ; preds = %if.end, %if.then
  br label %if.end14, !dbg !13006

if.end14:                                         ; preds = %if.end13, %entry
  %26 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13007
  %first_port15 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %26, i32 0, i32 4, !dbg !13009
  %27 = load i32, i32* %first_port15, align 4, !dbg !13009
  %cmp16 = icmp sgt i32 %27, 0, !dbg !13010
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !13011

if.then18:                                        ; preds = %if.end14
  %28 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13012
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13013
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 74, !dbg !13014
  %30 = load i8*, i8** %dev_addr, align 8, !dbg !13014
  %call19 = call i32 @hw_del_addr(%struct.ksz_hw* %28, i8* %30) #12, !dbg !13015
  br label %if.end20, !dbg !13015

if.end20:                                         ; preds = %if.then18, %if.end14
  %31 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13016
  %wol_enable = getelementptr inbounds %struct.dev_info, %struct.dev_info* %31, i32 0, i32 17, !dbg !13018
  %32 = load i32, i32* %wol_enable, align 8, !dbg !13018
  %tobool21 = icmp ne i32 %32, 0, !dbg !13016
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !13019

if.then22:                                        ; preds = %if.end20
  %33 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13020
  call void @port_set_power_saving(%struct.ksz_port* %33, i32 1) #12, !dbg !13021
  br label %if.end23, !dbg !13021

if.end23:                                         ; preds = %if.then22, %if.end20
  %34 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13022
  %multicast = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %34, i32 0, i32 9, !dbg !13024
  %35 = load i32, i32* %multicast, align 4, !dbg !13024
  %tobool24 = icmp ne i32 %35, 0, !dbg !13022
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !13025

if.then25:                                        ; preds = %if.end23
  %36 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13026
  %all_multi = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %36, i32 0, i32 25, !dbg !13027
  %37 = load i8, i8* %all_multi, align 1, !dbg !13028
  %dec = add i8 %37, -1, !dbg !13028
  store i8 %dec, i8* %all_multi, align 1, !dbg !13028
  br label %if.end26, !dbg !13028

if.end26:                                         ; preds = %if.then25, %if.end23
  %38 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13029
  %promiscuous = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %38, i32 0, i32 10, !dbg !13031
  %39 = load i32, i32* %promiscuous, align 8, !dbg !13031
  %tobool27 = icmp ne i32 %39, 0, !dbg !13029
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !13032

if.then28:                                        ; preds = %if.end26
  %40 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13033
  %promiscuous29 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %40, i32 0, i32 24, !dbg !13034
  %41 = load i8, i8* %promiscuous29, align 2, !dbg !13035
  %dec30 = add i8 %41, -1, !dbg !13035
  store i8 %dec30, i8* %promiscuous29, align 2, !dbg !13035
  br label %if.end31, !dbg !13035

if.end31:                                         ; preds = %if.then28, %if.end26
  %42 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13036
  %opened = getelementptr inbounds %struct.dev_info, %struct.dev_info* %42, i32 0, i32 14, !dbg !13037
  %43 = load i32, i32* %opened, align 4, !dbg !13038
  %dec32 = add i32 %43, -1, !dbg !13038
  store i32 %dec32, i32* %opened, align 4, !dbg !13038
  %44 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13039
  %opened33 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %44, i32 0, i32 14, !dbg !13041
  %45 = load i32, i32* %opened33, align 4, !dbg !13041
  %tobool34 = icmp ne i32 %45, 0, !dbg !13042
  br i1 %tobool34, label %if.end44, label %if.then35, !dbg !13043

if.then35:                                        ; preds = %if.end31
  %46 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13044
  %mib_timer_info = getelementptr inbounds %struct.dev_info, %struct.dev_info* %46, i32 0, i32 11, !dbg !13046
  call void @ksz_stop_timer(%struct.ksz_timer_info* %mib_timer_info) #12, !dbg !13047
  %47 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13048
  %mib_read = getelementptr inbounds %struct.dev_info, %struct.dev_info* %47, i32 0, i32 10, !dbg !13049
  %call36 = call zeroext i1 @flush_work(%struct.work_struct* %mib_read) #12, !dbg !13050
  %48 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13051
  call void @hw_dis_intr(%struct.ksz_hw* %48) #12, !dbg !13052
  %49 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13053
  call void @hw_disable(%struct.ksz_hw* %49) #12, !dbg !13054
  %50 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13055
  call void @hw_clr_multicast(%struct.ksz_hw* %50) #12, !dbg !13056
  call void @msleep(i32 8) #12, !dbg !13057
  %51 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13058
  %rx_tasklet = getelementptr inbounds %struct.dev_info, %struct.dev_info* %51, i32 0, i32 15, !dbg !13059
  call void @tasklet_kill(%struct.tasklet_struct* %rx_tasklet) #12, !dbg !13060
  %52 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13061
  %tx_tasklet = getelementptr inbounds %struct.dev_info, %struct.dev_info* %52, i32 0, i32 16, !dbg !13062
  call void @tasklet_kill(%struct.tasklet_struct* %tx_tasklet) #12, !dbg !13063
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13064
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %53, i32 0, i32 6, !dbg !13065
  %54 = load i32, i32* %irq, align 8, !dbg !13065
  %55 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13066
  %dev37 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %55, i32 0, i32 0, !dbg !13067
  %56 = load %struct.net_device*, %struct.net_device** %dev37, align 8, !dbg !13067
  %57 = bitcast %struct.net_device* %56 to i8*, !dbg !13066
  %call38 = call i8* @free_irq(i32 %54, i8* %57) #12, !dbg !13068
  %58 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13069
  call void @transmit_cleanup(%struct.dev_info* %58, i32 0) #12, !dbg !13070
  %59 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13071
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %59, i32 0, i32 14, !dbg !13072
  call void @hw_reset_pkts(%struct.ksz_desc_info* %rx_desc_info) #12, !dbg !13073
  %60 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13074
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %60, i32 0, i32 15, !dbg !13075
  call void @hw_reset_pkts(%struct.ksz_desc_info* %tx_desc_info) #12, !dbg !13076
  %61 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13077
  %features39 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %61, i32 0, i32 32, !dbg !13079
  %62 = load i32, i32* %features39, align 8, !dbg !13079
  %and40 = and i32 %62, 256, !dbg !13080
  %tobool41 = icmp ne i32 %and40, 0, !dbg !13080
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !13081

if.then42:                                        ; preds = %if.then35
  %63 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13082
  call void @sw_clr_sta_mac_table(%struct.ksz_hw* %63) #12, !dbg !13083
  br label %if.end43, !dbg !13083

if.end43:                                         ; preds = %if.then42, %if.then35
  br label %if.end44, !dbg !13084

if.end44:                                         ; preds = %if.end43, %if.end31
  ret i32 0, !dbg !13085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_tx(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !13086 {
entry:
  %lock.addr.i63 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i63, metadata !13087, metadata !DIExpression()), !dbg !13091
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13093, metadata !DIExpression()), !dbg !13095
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %left = alloca i32, align 4
  %num = alloca i32, align 4
  %rc = alloca i32, align 4
  %org_skb = alloca %struct.sk_buff*, align 8
  %org_skb43 = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13097, metadata !DIExpression()), !dbg !13098
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13099, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13101, metadata !DIExpression()), !dbg !13102
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13103
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13104
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13104
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13102
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13105, metadata !DIExpression()), !dbg !13106
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13107
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !13108
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13108
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !13106
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13109, metadata !DIExpression()), !dbg !13110
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13111
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13112
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !13110
  call void @llvm.dbg.declare(metadata i32* %left, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.declare(metadata i32* %num, metadata !13115, metadata !DIExpression()), !dbg !13116
  store i32 1, i32* %num, align 4, !dbg !13116
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !13117, metadata !DIExpression()), !dbg !13118
  store i32 0, i32* %rc, align 4, !dbg !13118
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13119
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 32, !dbg !13121
  %6 = load i32, i32* %features, align 8, !dbg !13121
  %and = and i32 %6, 2, !dbg !13122
  %tobool = icmp ne i32 %and, 0, !dbg !13122
  br i1 %tobool, label %if.then, label %if.end27, !dbg !13123

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %org_skb, metadata !13124, metadata !DIExpression()), !dbg !13126
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13127
  store %struct.sk_buff* %7, %struct.sk_buff** %org_skb, align 8, !dbg !13126
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13128
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 5, !dbg !13130
  %9 = load i32, i32* %len, align 8, !dbg !13130
  %cmp = icmp ule i32 %9, 48, !dbg !13131
  br i1 %cmp, label %if.then2, label %if.end26, !dbg !13132

if.then2:                                         ; preds = %if.then
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13133
  %call3 = call i8* @skb_end_pointer(%struct.sk_buff* %10) #12, !dbg !13136
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13137
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 37, !dbg !13138
  %12 = load i8*, i8** %data, align 8, !dbg !13138
  %sub.ptr.lhs.cast = ptrtoint i8* %call3 to i64, !dbg !13139
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !13139
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13139
  %cmp4 = icmp sge i64 %sub.ptr.sub, 50, !dbg !13140
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !13141

if.then5:                                         ; preds = %if.then2
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13142
  %data6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 37, !dbg !13144
  %14 = load i8*, i8** %data6, align 8, !dbg !13144
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13145
  %len7 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %15, i32 0, i32 5, !dbg !13146
  %16 = load i32, i32* %len7, align 8, !dbg !13146
  %idxprom = zext i32 %16 to i64, !dbg !13142
  %arrayidx = getelementptr i8, i8* %14, i64 %idxprom, !dbg !13142
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13147
  %len8 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %17, i32 0, i32 5, !dbg !13148
  %18 = load i32, i32* %len8, align 8, !dbg !13148
  %sub = sub i32 50, %18, !dbg !13149
  %conv = zext i32 %sub to i64, !dbg !13150
  call void @llvm.memset.p0i8.i64(i8* align 1 %arrayidx, i8 0, i64 %conv, i1 false), !dbg !13151
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13152
  %len9 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %19, i32 0, i32 5, !dbg !13153
  store i32 50, i32* %len9, align 8, !dbg !13154
  br label %if.end25, !dbg !13155

if.else:                                          ; preds = %if.then2
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13156
  %call10 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %20, i32 50) #12, !dbg !13158
  store %struct.sk_buff* %call10, %struct.sk_buff** %skb.addr, align 8, !dbg !13159
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13160
  %tobool11 = icmp ne %struct.sk_buff* %21, null, !dbg !13160
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !13162

if.then12:                                        ; preds = %if.else
  store i32 16, i32* %retval, align 4, !dbg !13163
  br label %return, !dbg !13163

if.end:                                           ; preds = %if.else
  %22 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13164
  %data13 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %22, i32 0, i32 37, !dbg !13165
  %23 = load i8*, i8** %data13, align 8, !dbg !13165
  %24 = load %struct.sk_buff*, %struct.sk_buff** %org_skb, align 8, !dbg !13166
  %data14 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %24, i32 0, i32 37, !dbg !13167
  %25 = load i8*, i8** %data14, align 8, !dbg !13167
  %26 = load %struct.sk_buff*, %struct.sk_buff** %org_skb, align 8, !dbg !13168
  %len15 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %26, i32 0, i32 5, !dbg !13169
  %27 = load i32, i32* %len15, align 8, !dbg !13169
  %conv16 = zext i32 %27 to i64, !dbg !13168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %25, i64 %conv16, i1 false), !dbg !13170
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13171
  %data17 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %28, i32 0, i32 37, !dbg !13172
  %29 = load i8*, i8** %data17, align 8, !dbg !13172
  %30 = load %struct.sk_buff*, %struct.sk_buff** %org_skb, align 8, !dbg !13173
  %len18 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %30, i32 0, i32 5, !dbg !13174
  %31 = load i32, i32* %len18, align 8, !dbg !13174
  %idxprom19 = zext i32 %31 to i64, !dbg !13171
  %arrayidx20 = getelementptr i8, i8* %29, i64 %idxprom19, !dbg !13171
  %32 = load %struct.sk_buff*, %struct.sk_buff** %org_skb, align 8, !dbg !13175
  %len21 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %32, i32 0, i32 5, !dbg !13176
  %33 = load i32, i32* %len21, align 8, !dbg !13176
  %sub22 = sub i32 50, %33, !dbg !13177
  %conv23 = zext i32 %sub22 to i64, !dbg !13178
  call void @llvm.memset.p0i8.i64(i8* align 1 %arrayidx20, i8 0, i64 %conv23, i1 false), !dbg !13179
  %34 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13180
  %len24 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %34, i32 0, i32 5, !dbg !13181
  store i32 50, i32* %len24, align 8, !dbg !13182
  %35 = load %struct.sk_buff*, %struct.sk_buff** %org_skb, align 8, !dbg !13183
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13184
  call void @copy_old_skb(%struct.sk_buff* %35, %struct.sk_buff* %36) #12, !dbg !13185
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then5
  br label %if.end26, !dbg !13186

if.end26:                                         ; preds = %if.end25, %if.then
  br label %if.end27, !dbg !13187

if.end27:                                         ; preds = %if.end26, %entry
  %37 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13188
  %hwlock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %37, i32 0, i32 4, !dbg !13189
  store %struct.spinlock* %hwlock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !13190
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13193, !srcloc !13195
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13196
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !13196
  %rlock.i = bitcast %union.anon.1* %39 to %struct.raw_spinlock*, !dbg !13196
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13198
  %call28 = call i8* @skb_end_pointer(%struct.sk_buff* %40) #12, !dbg !13198
  %41 = bitcast i8* %call28 to %struct.skb_shared_info*, !dbg !13199
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %41, i32 0, i32 2, !dbg !13199
  %42 = load i8, i8* %nr_frags, align 2, !dbg !13199
  %conv29 = zext i8 %42 to i32, !dbg !13198
  %add = add i32 %conv29, 1, !dbg !13200
  store i32 %add, i32* %num, align 4, !dbg !13201
  %43 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13202
  %44 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13203
  %len30 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %44, i32 0, i32 5, !dbg !13204
  %45 = load i32, i32* %len30, align 8, !dbg !13204
  %46 = load i32, i32* %num, align 4, !dbg !13205
  %call31 = call i32 @hw_alloc_pkt(%struct.ksz_hw* %43, i32 %45, i32 %46) #12, !dbg !13206
  store i32 %call31, i32* %left, align 4, !dbg !13207
  %47 = load i32, i32* %left, align 4, !dbg !13208
  %tobool32 = icmp ne i32 %47, 0, !dbg !13208
  br i1 %tobool32, label %if.then33, label %if.else60, !dbg !13210

if.then33:                                        ; preds = %if.end27
  %48 = load i32, i32* %left, align 4, !dbg !13211
  %49 = load i32, i32* %num, align 4, !dbg !13214
  %cmp34 = icmp slt i32 %48, %49, !dbg !13215
  br i1 %cmp34, label %if.then42, label %lor.lhs.false, !dbg !13216

lor.lhs.false:                                    ; preds = %if.then33
  %50 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13217
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %50, i32 0, i32 14, !dbg !13218
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !13218
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !13218
  %bf.clear = and i16 %bf.lshr, 3, !dbg !13218
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !13218
  %conv36 = zext i8 %bf.cast to i32, !dbg !13217
  %cmp37 = icmp eq i32 3, %conv36, !dbg !13219
  br i1 %cmp37, label %land.lhs.true, label %if.end55, !dbg !13220

land.lhs.true:                                    ; preds = %lor.lhs.false
  %51 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13221
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %51, i32 0, i32 29, !dbg !13222
  %52 = load i16, i16* %protocol, align 8, !dbg !13222
  %conv39 = zext i16 %52 to i32, !dbg !13221
  %cmp40 = icmp eq i32 %conv39, 56710, !dbg !13223
  br i1 %cmp40, label %if.then42, label %if.end55, !dbg !13224

if.then42:                                        ; preds = %land.lhs.true, %if.then33
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %org_skb43, metadata !13225, metadata !DIExpression()), !dbg !13227
  %53 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13228
  store %struct.sk_buff* %53, %struct.sk_buff** %org_skb43, align 8, !dbg !13227
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13229
  %55 = load %struct.sk_buff*, %struct.sk_buff** %org_skb43, align 8, !dbg !13230
  %len44 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %55, i32 0, i32 5, !dbg !13231
  %56 = load i32, i32* %len44, align 8, !dbg !13231
  %call45 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %54, i32 %56) #12, !dbg !13232
  store %struct.sk_buff* %call45, %struct.sk_buff** %skb.addr, align 8, !dbg !13233
  %57 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13234
  %tobool46 = icmp ne %struct.sk_buff* %57, null, !dbg !13234
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !13236

if.then47:                                        ; preds = %if.then42
  store i32 16, i32* %rc, align 4, !dbg !13237
  br label %unlock, !dbg !13239

if.end48:                                         ; preds = %if.then42
  %58 = load %struct.sk_buff*, %struct.sk_buff** %org_skb43, align 8, !dbg !13240
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13241
  %data49 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %59, i32 0, i32 37, !dbg !13242
  %60 = load i8*, i8** %data49, align 8, !dbg !13242
  call void @skb_copy_and_csum_dev(%struct.sk_buff* %58, i8* %60) #12, !dbg !13243
  %61 = load %struct.sk_buff*, %struct.sk_buff** %org_skb43, align 8, !dbg !13244
  %ip_summed50 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %61, i32 0, i32 14, !dbg !13245
  %bf.load51 = load i16, i16* %ip_summed50, align 8, !dbg !13246
  %bf.clear52 = and i16 %bf.load51, -97, !dbg !13246
  store i16 %bf.clear52, i16* %ip_summed50, align 8, !dbg !13246
  %62 = load %struct.sk_buff*, %struct.sk_buff** %org_skb43, align 8, !dbg !13247
  %len53 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %62, i32 0, i32 5, !dbg !13248
  %63 = load i32, i32* %len53, align 8, !dbg !13248
  %64 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13249
  %len54 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %64, i32 0, i32 5, !dbg !13250
  store i32 %63, i32* %len54, align 8, !dbg !13251
  %65 = load %struct.sk_buff*, %struct.sk_buff** %org_skb43, align 8, !dbg !13252
  %66 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13253
  call void @copy_old_skb(%struct.sk_buff* %65, %struct.sk_buff* %66) #12, !dbg !13254
  br label %if.end55, !dbg !13255

if.end55:                                         ; preds = %if.end48, %land.lhs.true, %lor.lhs.false
  %67 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13256
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13257
  call void @send_packet(%struct.sk_buff* %67, %struct.net_device* %68) #12, !dbg !13258
  %69 = load i32, i32* %left, align 4, !dbg !13259
  %70 = load i32, i32* %num, align 4, !dbg !13261
  %cmp56 = icmp sle i32 %69, %70, !dbg !13262
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !13263

if.then58:                                        ; preds = %if.end55
  %71 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13264
  call void @netif_stop_queue(%struct.net_device* %71) #12, !dbg !13265
  br label %if.end59, !dbg !13265

if.end59:                                         ; preds = %if.then58, %if.end55
  br label %if.end61, !dbg !13266

if.else60:                                        ; preds = %if.end27
  %72 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13267
  call void @netif_stop_queue(%struct.net_device* %72) #12, !dbg !13269
  store i32 16, i32* %rc, align 4, !dbg !13270
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.end59
  br label %unlock, !dbg !13208

unlock:                                           ; preds = %if.end61, %if.then47
  call void @llvm.dbg.label(metadata !13271), !dbg !13272
  %73 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13273
  %hwlock62 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %73, i32 0, i32 4, !dbg !13274
  store %struct.spinlock* %hwlock62, %struct.spinlock** %lock.addr.i63, align 8
  call void @arch_local_irq_enable() #15, !dbg !13275
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13278, !srcloc !13280
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i63, align 8, !dbg !13281
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !13281
  %rlock.i64 = bitcast %union.anon.1* %75 to %struct.raw_spinlock*, !dbg !13281
  %76 = load i32, i32* %rc, align 4, !dbg !13283
  store i32 %76, i32* %retval, align 4, !dbg !13284
  br label %return, !dbg !13284

return:                                           ; preds = %unlock, %if.then12
  %77 = load i32, i32* %retval, align 4, !dbg !13285
  ret i32 %77, !dbg !13285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_set_rx_mode(%struct.net_device* %dev) #2 !dbg !13286 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %multicast = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr39 = alloca i8*, align 8
  %tmp44 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13289, metadata !DIExpression()), !dbg !13290
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13291
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13292
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13292
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13290
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13293, metadata !DIExpression()), !dbg !13294
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13295
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !13296
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13296
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !13294
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13297, metadata !DIExpression()), !dbg !13298
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13299
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13300
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !13298
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !13301, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.declare(metadata i32* %multicast, metadata !13303, metadata !DIExpression()), !dbg !13304
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13305
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 36, !dbg !13306
  %6 = load i32, i32* %flags, align 8, !dbg !13306
  %and = and i32 %6, 512, !dbg !13307
  store i32 %and, i32* %multicast, align 4, !dbg !13304
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13308
  %8 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13309
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13310
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13311
  %flags2 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 36, !dbg !13312
  %11 = load i32, i32* %flags2, align 8, !dbg !13312
  %and3 = and i32 %11, 256, !dbg !13313
  call void @dev_set_promiscuous(%struct.net_device* %7, %struct.dev_priv* %8, %struct.ksz_hw* %9, i32 %and3) #12, !dbg !13314
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13315
  %hw4 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 2, !dbg !13317
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw4, i32 0, i32 4, !dbg !13318
  %13 = load i32, i32* %dev_count, align 8, !dbg !13318
  %cmp = icmp sgt i32 %13, 1, !dbg !13319
  br i1 %cmp, label %if.then, label %if.end, !dbg !13320

if.then:                                          ; preds = %entry
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13321
  %flags5 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 36, !dbg !13322
  %15 = load i32, i32* %flags5, align 8, !dbg !13322
  %and6 = and i32 %15, 4096, !dbg !13323
  %16 = load i32, i32* %multicast, align 4, !dbg !13324
  %or = or i32 %16, %and6, !dbg !13324
  store i32 %or, i32* %multicast, align 4, !dbg !13324
  br label %if.end, !dbg !13325

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13326
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13327
  %19 = load i32, i32* %multicast, align 4, !dbg !13328
  call void @dev_set_multicast(%struct.dev_priv* %17, %struct.ksz_hw* %18, i32 %19) #12, !dbg !13329
  %20 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13330
  %hw7 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %20, i32 0, i32 2, !dbg !13332
  %dev_count8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %hw7, i32 0, i32 4, !dbg !13333
  %21 = load i32, i32* %dev_count8, align 8, !dbg !13333
  %cmp9 = icmp sgt i32 %21, 1, !dbg !13334
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !13335

if.then10:                                        ; preds = %if.end
  br label %if.end57, !dbg !13336

if.end11:                                         ; preds = %if.end
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13337
  %flags12 = getelementptr inbounds %struct.net_device, %struct.net_device* %22, i32 0, i32 36, !dbg !13339
  %23 = load i32, i32* %flags12, align 8, !dbg !13339
  %and13 = and i32 %23, 4096, !dbg !13340
  %tobool = icmp ne i32 %and13, 0, !dbg !13340
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !13341

land.lhs.true:                                    ; preds = %if.end11
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13342
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %24, i32 0, i32 63, !dbg !13342
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !13342
  %25 = load i32, i32* %count, align 8, !dbg !13342
  %cmp14 = icmp eq i32 %25, 0, !dbg !13342
  br i1 %cmp14, label %if.else, label %if.then15, !dbg !13343

if.then15:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13344, metadata !DIExpression()), !dbg !13346
  store i32 0, i32* %i, align 4, !dbg !13346
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13347
  %mc16 = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 63, !dbg !13347
  %count17 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc16, i32 0, i32 1, !dbg !13347
  %27 = load i32, i32* %count17, align 8, !dbg !13347
  %cmp18 = icmp sgt i32 %27, 32, !dbg !13349
  br i1 %cmp18, label %if.then19, label %if.end26, !dbg !13350

if.then19:                                        ; preds = %if.then15
  %28 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13351
  %multi_list_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %28, i32 0, i32 28, !dbg !13354
  %29 = load i8, i8* %multi_list_size, align 4, !dbg !13354
  %conv = zext i8 %29 to i32, !dbg !13351
  %cmp20 = icmp ne i32 32, %conv, !dbg !13355
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !13356

if.then22:                                        ; preds = %if.then19
  %30 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13357
  %multi_list_size23 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %30, i32 0, i32 28, !dbg !13359
  store i8 32, i8* %multi_list_size23, align 4, !dbg !13360
  %31 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13361
  %all_multi = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %31, i32 0, i32 25, !dbg !13362
  %32 = load i8, i8* %all_multi, align 1, !dbg !13363
  %inc = add i8 %32, 1, !dbg !13363
  store i8 %inc, i8* %all_multi, align 1, !dbg !13363
  %33 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13364
  %34 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13365
  %all_multi24 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %34, i32 0, i32 25, !dbg !13366
  %35 = load i8, i8* %all_multi24, align 1, !dbg !13366
  call void @hw_set_multicast(%struct.ksz_hw* %33, i8 zeroext %35) #12, !dbg !13367
  br label %if.end25, !dbg !13368

if.end25:                                         ; preds = %if.then22, %if.then19
  br label %if.end57, !dbg !13369

if.end26:                                         ; preds = %if.then15
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13370, metadata !DIExpression()), !dbg !13373
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13373
  %mc27 = getelementptr inbounds %struct.net_device, %struct.net_device* %36, i32 0, i32 63, !dbg !13373
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc27, i32 0, i32 0, !dbg !13373
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !13373
  %37 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13373
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !13373
  store i8* %38, i8** %__mptr, align 8, !dbg !13373
  br label %do.body, !dbg !13373

do.body:                                          ; preds = %if.end26
  br label %do.end, !dbg !13374

do.end:                                           ; preds = %do.body
  %39 = load i8*, i8** %__mptr, align 8, !dbg !13373
  %add.ptr = getelementptr i8, i8* %39, i64 0, !dbg !13373
  %40 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !13373
  store %struct.netdev_hw_addr* %40, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13374
  %41 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13373
  store %struct.netdev_hw_addr* %41, %struct.netdev_hw_addr** %ha, align 8, !dbg !13376
  br label %for.cond, !dbg !13376

for.cond:                                         ; preds = %do.end43, %do.end
  %42 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13377
  %list28 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %42, i32 0, i32 0, !dbg !13377
  %43 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13377
  %mc29 = getelementptr inbounds %struct.net_device, %struct.net_device* %43, i32 0, i32 63, !dbg !13377
  %list30 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc29, i32 0, i32 0, !dbg !13377
  %cmp31 = icmp eq %struct.list_head* %list28, %list30, !dbg !13377
  %lnot = xor i1 %cmp31, true, !dbg !13377
  br i1 %lnot, label %for.body, label %for.end, !dbg !13376

for.body:                                         ; preds = %for.cond
  %44 = load i32, i32* %i, align 4, !dbg !13379
  %cmp33 = icmp sge i32 %44, 32, !dbg !13382
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !13383

if.then35:                                        ; preds = %for.body
  br label %for.end, !dbg !13384

if.end36:                                         ; preds = %for.body
  %45 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13385
  %multi_list = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %45, i32 0, i32 26, !dbg !13386
  %46 = load i32, i32* %i, align 4, !dbg !13387
  %inc37 = add i32 %46, 1, !dbg !13387
  store i32 %inc37, i32* %i, align 4, !dbg !13387
  %idxprom = sext i32 %46 to i64, !dbg !13385
  %arrayidx = getelementptr [32 x [6 x i8]], [32 x [6 x i8]]* %multi_list, i64 0, i64 %idxprom, !dbg !13385
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx, i64 0, i64 0, !dbg !13388
  %47 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13389
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %47, i32 0, i32 1, !dbg !13390
  %arraydecay38 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !13388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 8 %arraydecay38, i64 6, i1 false), !dbg !13388
  br label %for.inc, !dbg !13391

for.inc:                                          ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i8** %__mptr39, metadata !13392, metadata !DIExpression()), !dbg !13394
  %48 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13394
  %list40 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %48, i32 0, i32 0, !dbg !13394
  %next41 = getelementptr inbounds %struct.list_head, %struct.list_head* %list40, i32 0, i32 0, !dbg !13394
  %49 = load %struct.list_head*, %struct.list_head** %next41, align 8, !dbg !13394
  %50 = bitcast %struct.list_head* %49 to i8*, !dbg !13394
  store i8* %50, i8** %__mptr39, align 8, !dbg !13394
  br label %do.body42, !dbg !13394

do.body42:                                        ; preds = %for.inc
  br label %do.end43, !dbg !13395

do.end43:                                         ; preds = %do.body42
  %51 = load i8*, i8** %__mptr39, align 8, !dbg !13394
  %add.ptr45 = getelementptr i8, i8* %51, i64 0, !dbg !13394
  %52 = bitcast i8* %add.ptr45 to %struct.netdev_hw_addr*, !dbg !13394
  store %struct.netdev_hw_addr* %52, %struct.netdev_hw_addr** %tmp44, align 8, !dbg !13395
  %53 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp44, align 8, !dbg !13394
  store %struct.netdev_hw_addr* %53, %struct.netdev_hw_addr** %ha, align 8, !dbg !13377
  br label %for.cond, !dbg !13377, !llvm.loop !13397

for.end:                                          ; preds = %if.then35, %for.cond
  %54 = load i32, i32* %i, align 4, !dbg !13399
  %conv46 = trunc i32 %54 to i8, !dbg !13400
  %55 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13401
  %multi_list_size47 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %55, i32 0, i32 28, !dbg !13402
  store i8 %conv46, i8* %multi_list_size47, align 4, !dbg !13403
  %56 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13404
  call void @hw_set_grp_addr(%struct.ksz_hw* %56) #12, !dbg !13405
  br label %if.end57, !dbg !13406

if.else:                                          ; preds = %land.lhs.true, %if.end11
  %57 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13407
  %multi_list_size48 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %57, i32 0, i32 28, !dbg !13410
  %58 = load i8, i8* %multi_list_size48, align 4, !dbg !13410
  %conv49 = zext i8 %58 to i32, !dbg !13407
  %cmp50 = icmp eq i32 32, %conv49, !dbg !13411
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !13412

if.then52:                                        ; preds = %if.else
  %59 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13413
  %all_multi53 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %59, i32 0, i32 25, !dbg !13415
  %60 = load i8, i8* %all_multi53, align 1, !dbg !13416
  %dec = add i8 %60, -1, !dbg !13416
  store i8 %dec, i8* %all_multi53, align 1, !dbg !13416
  %61 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13417
  %62 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13418
  %all_multi54 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %62, i32 0, i32 25, !dbg !13419
  %63 = load i8, i8* %all_multi54, align 1, !dbg !13419
  call void @hw_set_multicast(%struct.ksz_hw* %61, i8 zeroext %63) #12, !dbg !13420
  br label %if.end55, !dbg !13421

if.end55:                                         ; preds = %if.then52, %if.else
  %64 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13422
  %multi_list_size56 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %64, i32 0, i32 28, !dbg !13423
  store i8 0, i8* %multi_list_size56, align 4, !dbg !13424
  %65 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13425
  call void @hw_clr_multicast(%struct.ksz_hw* %65) #12, !dbg !13426
  br label %if.end57

if.end57:                                         ; preds = %if.then10, %if.end25, %if.end55, %for.end
  ret void, !dbg !13427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_set_mac_address(%struct.net_device* %dev, i8* %addr) #2 !dbg !13428 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %addr.addr = alloca i8*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %mac = alloca %struct.sockaddr*, align 8
  %interrupt = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13429, metadata !DIExpression()), !dbg !13430
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13431, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13433, metadata !DIExpression()), !dbg !13434
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13435
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13436
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13436
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13434
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13437, metadata !DIExpression()), !dbg !13438
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13439
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !13440
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13440
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !13438
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13441, metadata !DIExpression()), !dbg !13442
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13443
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13444
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !13442
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %mac, metadata !13445, metadata !DIExpression()), !dbg !13447
  %5 = load i8*, i8** %addr.addr, align 8, !dbg !13448
  %6 = bitcast i8* %5 to %struct.sockaddr*, !dbg !13448
  store %struct.sockaddr* %6, %struct.sockaddr** %mac, align 8, !dbg !13447
  call void @llvm.dbg.declare(metadata i32* %interrupt, metadata !13449, metadata !DIExpression()), !dbg !13450
  %7 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13451
  %port = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %7, i32 0, i32 1, !dbg !13453
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %port, i32 0, i32 4, !dbg !13454
  %8 = load i32, i32* %first_port, align 4, !dbg !13454
  %cmp = icmp sgt i32 %8, 0, !dbg !13455
  br i1 %cmp, label %if.then, label %if.else, !dbg !13456

if.then:                                          ; preds = %entry
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13457
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13458
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 74, !dbg !13459
  %11 = load i8*, i8** %dev_addr, align 8, !dbg !13459
  %call2 = call i32 @hw_del_addr(%struct.ksz_hw* %9, i8* %11) #12, !dbg !13460
  br label %if.end, !dbg !13460

if.else:                                          ; preds = %entry
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13461
  %mac_override = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 23, !dbg !13463
  store i8 1, i8* %mac_override, align 1, !dbg !13464
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13465
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 20, !dbg !13466
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr, i64 0, i64 0, !dbg !13467
  %14 = load %struct.sockaddr*, %struct.sockaddr** %mac, align 8, !dbg !13468
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %14, i32 0, i32 1, !dbg !13469
  %arraydecay3 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !13467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 2 %arraydecay3, i64 6, i1 false), !dbg !13467
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13470
  %dev_addr4 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 74, !dbg !13471
  %16 = load i8*, i8** %dev_addr4, align 8, !dbg !13471
  %17 = load %struct.sockaddr*, %struct.sockaddr** %mac, align 8, !dbg !13472
  %sa_data5 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %17, i32 0, i32 1, !dbg !13473
  %arraydecay6 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data5, i64 0, i64 0, !dbg !13474
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 2 %arraydecay6, i64 6, i1 false), !dbg !13474
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13475
  %call7 = call i32 @hw_block_intr(%struct.ksz_hw* %18) #12, !dbg !13476
  store i32 %call7, i32* %interrupt, align 4, !dbg !13477
  %19 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13478
  %port8 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %19, i32 0, i32 1, !dbg !13480
  %first_port9 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %port8, i32 0, i32 4, !dbg !13481
  %20 = load i32, i32* %first_port9, align 4, !dbg !13481
  %cmp10 = icmp sgt i32 %20, 0, !dbg !13482
  br i1 %cmp10, label %if.then11, label %if.else14, !dbg !13483

if.then11:                                        ; preds = %if.end
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13484
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13485
  %dev_addr12 = getelementptr inbounds %struct.net_device, %struct.net_device* %22, i32 0, i32 74, !dbg !13486
  %23 = load i8*, i8** %dev_addr12, align 8, !dbg !13486
  %call13 = call i32 @hw_add_addr(%struct.ksz_hw* %21, i8* %23) #12, !dbg !13487
  br label %if.end15, !dbg !13487

if.else14:                                        ; preds = %if.end
  %24 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13488
  call void @hw_set_addr(%struct.ksz_hw* %24) #12, !dbg !13489
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then11
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13490
  %26 = load i32, i32* %interrupt, align 4, !dbg !13491
  call void @hw_restore_intr(%struct.ksz_hw* %25, i32 %26) #12, !dbg !13492
  ret i32 0, !dbg !13493
}

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_ioctl(%struct.net_device* %dev, %struct.ifreq* %ifr, i32 %cmd) #2 !dbg !13494 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %result = alloca i32, align 4
  %data = alloca %struct.mii_ioctl_data*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13495, metadata !DIExpression()), !dbg !13496
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !13497, metadata !DIExpression()), !dbg !13498
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !13499, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13501, metadata !DIExpression()), !dbg !13502
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13503
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13504
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13504
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13502
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13505, metadata !DIExpression()), !dbg !13506
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13507
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !13508
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13508
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !13506
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13509, metadata !DIExpression()), !dbg !13510
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13511
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13512
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !13510
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !13513, metadata !DIExpression()), !dbg !13514
  %5 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13515
  %port2 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %5, i32 0, i32 1, !dbg !13516
  store %struct.ksz_port* %port2, %struct.ksz_port** %port, align 8, !dbg !13514
  call void @llvm.dbg.declare(metadata i32* %result, metadata !13517, metadata !DIExpression()), !dbg !13518
  store i32 0, i32* %result, align 4, !dbg !13518
  call void @llvm.dbg.declare(metadata %struct.mii_ioctl_data** %data, metadata !13519, metadata !DIExpression()), !dbg !13520
  %6 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !13521
  %call3 = call %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %6) #12, !dbg !13522
  store %struct.mii_ioctl_data* %call3, %struct.mii_ioctl_data** %data, align 8, !dbg !13520
  %7 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13523
  %proc_sem = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %7, i32 0, i32 3, !dbg !13525
  %call4 = call i32 @down_interruptible(%struct.semaphore* %proc_sem) #12, !dbg !13526
  %tobool = icmp ne i32 %call4, 0, !dbg !13526
  br i1 %tobool, label %if.then, label %if.end, !dbg !13527

if.then:                                          ; preds = %entry
  store i32 -512, i32* %retval, align 4, !dbg !13528
  br label %return, !dbg !13528

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %cmd.addr, align 4, !dbg !13529
  switch i32 %8, label %sw.default [
    i32 35143, label %sw.bb
    i32 35144, label %sw.bb5
    i32 35145, label %sw.bb17
  ], !dbg !13530

sw.bb:                                            ; preds = %if.end
  %9 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13531
  %id = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %9, i32 0, i32 4, !dbg !13533
  %10 = load i32, i32* %id, align 8, !dbg !13533
  %conv = trunc i32 %10 to i16, !dbg !13531
  %11 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13534
  %phy_id = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %11, i32 0, i32 0, !dbg !13535
  store i16 %conv, i16* %phy_id, align 2, !dbg !13536
  br label %sw.bb5, !dbg !13534

sw.bb5:                                           ; preds = %if.end, %sw.bb
  %12 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13537
  %phy_id6 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %12, i32 0, i32 0, !dbg !13539
  %13 = load i16, i16* %phy_id6, align 2, !dbg !13539
  %conv7 = zext i16 %13 to i32, !dbg !13537
  %14 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13540
  %id8 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %14, i32 0, i32 4, !dbg !13541
  %15 = load i32, i32* %id8, align 8, !dbg !13541
  %cmp = icmp ne i32 %conv7, %15, !dbg !13542
  br i1 %cmp, label %if.then13, label %lor.lhs.false, !dbg !13543

lor.lhs.false:                                    ; preds = %sw.bb5
  %16 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13544
  %reg_num = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %16, i32 0, i32 1, !dbg !13545
  %17 = load i16, i16* %reg_num, align 2, !dbg !13545
  %conv10 = zext i16 %17 to i32, !dbg !13544
  %cmp11 = icmp sge i32 %conv10, 6, !dbg !13546
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !13547

if.then13:                                        ; preds = %lor.lhs.false, %sw.bb5
  store i32 -5, i32* %result, align 4, !dbg !13548
  br label %if.end16, !dbg !13549

if.else:                                          ; preds = %lor.lhs.false
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13550
  %19 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13551
  %linked = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %19, i32 0, i32 9, !dbg !13552
  %20 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked, align 8, !dbg !13552
  %port_id = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %20, i32 0, i32 5, !dbg !13553
  %21 = load i8, i8* %port_id, align 1, !dbg !13553
  %conv14 = zext i8 %21 to i32, !dbg !13551
  %22 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13554
  %reg_num15 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %22, i32 0, i32 1, !dbg !13555
  %23 = load i16, i16* %reg_num15, align 2, !dbg !13555
  %24 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13556
  %val_out = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %24, i32 0, i32 3, !dbg !13557
  call void @hw_r_phy(%struct.ksz_hw* %18, i32 %conv14, i16 zeroext %23, i16* %val_out) #12, !dbg !13558
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  br label %sw.epilog, !dbg !13559

sw.bb17:                                          ; preds = %if.end
  %call18 = call zeroext i1 @capable(i32 12) #12, !dbg !13560
  br i1 %call18, label %if.else20, label %if.then19, !dbg !13562

if.then19:                                        ; preds = %sw.bb17
  store i32 -1, i32* %result, align 4, !dbg !13563
  br label %if.end38, !dbg !13564

if.else20:                                        ; preds = %sw.bb17
  %25 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13565
  %phy_id21 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %25, i32 0, i32 0, !dbg !13567
  %26 = load i16, i16* %phy_id21, align 2, !dbg !13567
  %conv22 = zext i16 %26 to i32, !dbg !13565
  %27 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13568
  %id23 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %27, i32 0, i32 4, !dbg !13569
  %28 = load i32, i32* %id23, align 8, !dbg !13569
  %cmp24 = icmp ne i32 %conv22, %28, !dbg !13570
  br i1 %cmp24, label %if.then31, label %lor.lhs.false26, !dbg !13571

lor.lhs.false26:                                  ; preds = %if.else20
  %29 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13572
  %reg_num27 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %29, i32 0, i32 1, !dbg !13573
  %30 = load i16, i16* %reg_num27, align 2, !dbg !13573
  %conv28 = zext i16 %30 to i32, !dbg !13572
  %cmp29 = icmp sge i32 %conv28, 6, !dbg !13574
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !13575

if.then31:                                        ; preds = %lor.lhs.false26, %if.else20
  store i32 -5, i32* %result, align 4, !dbg !13576
  br label %if.end37, !dbg !13577

if.else32:                                        ; preds = %lor.lhs.false26
  %31 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13578
  %32 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13579
  %linked33 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %32, i32 0, i32 9, !dbg !13580
  %33 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked33, align 8, !dbg !13580
  %port_id34 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %33, i32 0, i32 5, !dbg !13581
  %34 = load i8, i8* %port_id34, align 1, !dbg !13581
  %conv35 = zext i8 %34 to i32, !dbg !13579
  %35 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13582
  %reg_num36 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %35, i32 0, i32 1, !dbg !13583
  %36 = load i16, i16* %reg_num36, align 2, !dbg !13583
  %37 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !13584
  %val_in = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %37, i32 0, i32 2, !dbg !13585
  %38 = load i16, i16* %val_in, align 2, !dbg !13585
  call void @hw_w_phy(%struct.ksz_hw* %31, i32 %conv35, i16 zeroext %36, i16 zeroext %38) #12, !dbg !13586
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.then31
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then19
  br label %sw.epilog, !dbg !13587

sw.default:                                       ; preds = %if.end
  store i32 -95, i32* %result, align 4, !dbg !13588
  br label %sw.epilog, !dbg !13589

sw.epilog:                                        ; preds = %sw.default, %if.end38, %if.end16
  %39 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13590
  %proc_sem39 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %39, i32 0, i32 3, !dbg !13591
  call void @up(%struct.semaphore* %proc_sem39) #12, !dbg !13592
  %40 = load i32, i32* %result, align 4, !dbg !13593
  store i32 %40, i32* %retval, align 4, !dbg !13594
  br label %return, !dbg !13594

return:                                           ; preds = %sw.epilog, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !13595
  ret i32 %41, !dbg !13595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #2 !dbg !13596 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %hw_mtu = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13597, metadata !DIExpression()), !dbg !13598
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !13599, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13601, metadata !DIExpression()), !dbg !13602
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13603
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13604
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13604
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13602
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13605, metadata !DIExpression()), !dbg !13606
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13607
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !13608
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13608
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !13606
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13609, metadata !DIExpression()), !dbg !13610
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13611
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13612
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !13610
  call void @llvm.dbg.declare(metadata i32* %hw_mtu, metadata !13613, metadata !DIExpression()), !dbg !13614
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13615
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %5) #12, !dbg !13617
  br i1 %call2, label %if.then, label %if.end, !dbg !13618

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !13619
  br label %return, !dbg !13619

if.end:                                           ; preds = %entry
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13620
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 4, !dbg !13622
  %7 = load i32, i32* %dev_count, align 8, !dbg !13622
  %cmp = icmp sgt i32 %7, 1, !dbg !13623
  br i1 %cmp, label %if.then3, label %if.end8, !dbg !13624

if.then3:                                         ; preds = %if.end
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13625
  %9 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13627
  %dev4 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %9, i32 0, i32 0, !dbg !13628
  %10 = load %struct.net_device*, %struct.net_device** %dev4, align 8, !dbg !13628
  %cmp5 = icmp ne %struct.net_device* %8, %10, !dbg !13629
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !13630

if.then6:                                         ; preds = %if.then3
  store i32 0, i32* %retval, align 4, !dbg !13631
  br label %return, !dbg !13631

if.end7:                                          ; preds = %if.then3
  br label %if.end8, !dbg !13628

if.end8:                                          ; preds = %if.end7, %if.end
  %11 = load i32, i32* %new_mtu.addr, align 4, !dbg !13632
  %add = add i32 %11, 18, !dbg !13633
  %add9 = add i32 %add, 4, !dbg !13634
  store i32 %add9, i32* %hw_mtu, align 4, !dbg !13635
  %12 = load i32, i32* %hw_mtu, align 4, !dbg !13636
  %cmp10 = icmp sgt i32 %12, 1522, !dbg !13638
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !13639

if.then11:                                        ; preds = %if.end8
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13640
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 32, !dbg !13642
  %14 = load i32, i32* %features, align 8, !dbg !13643
  %or = or i32 %14, 16, !dbg !13643
  store i32 %or, i32* %features, align 8, !dbg !13643
  store i32 1916, i32* %hw_mtu, align 4, !dbg !13644
  br label %if.end13, !dbg !13645

if.else:                                          ; preds = %if.end8
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13646
  %features12 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %15, i32 0, i32 32, !dbg !13648
  %16 = load i32, i32* %features12, align 8, !dbg !13649
  %and = and i32 %16, -17, !dbg !13649
  store i32 %and, i32* %features12, align 8, !dbg !13649
  store i32 1522, i32* %hw_mtu, align 4, !dbg !13650
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  %17 = load i32, i32* %hw_mtu, align 4, !dbg !13651
  %add14 = add i32 %17, 3, !dbg !13652
  %and15 = and i32 %add14, -4, !dbg !13653
  store i32 %and15, i32* %hw_mtu, align 4, !dbg !13654
  %18 = load i32, i32* %hw_mtu, align 4, !dbg !13655
  %19 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13656
  %mtu = getelementptr inbounds %struct.dev_info, %struct.dev_info* %19, i32 0, i32 13, !dbg !13657
  store i32 %18, i32* %mtu, align 8, !dbg !13658
  %20 = load i32, i32* %new_mtu.addr, align 4, !dbg !13659
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13660
  %mtu16 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 44, !dbg !13661
  store i32 %20, i32* %mtu16, align 8, !dbg !13662
  store i32 0, i32* %retval, align 4, !dbg !13663
  br label %return, !dbg !13663

return:                                           ; preds = %if.end13, %if.then6, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !13664
  ret i32 %22, !dbg !13664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #2 !dbg !8280 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  %port_dev = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13665, metadata !DIExpression()), !dbg !13666
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13669, metadata !DIExpression()), !dbg !13670
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13671
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13672
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13672
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13670
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13673, metadata !DIExpression()), !dbg !13674
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13675
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !13676
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13676
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !13674
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13677, metadata !DIExpression()), !dbg !13678
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13679
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13680
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !13678
  call void @llvm.dbg.declare(metadata i32* %port, metadata !13681, metadata !DIExpression()), !dbg !13682
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13683
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 4, !dbg !13685
  %6 = load i32, i32* %dev_count, align 8, !dbg !13685
  %cmp = icmp sgt i32 %6, 1, !dbg !13686
  br i1 %cmp, label %if.then, label %if.end5, !dbg !13687

if.then:                                          ; preds = %entry
  %7 = load i64, i64* @netdev_tx_timeout.last_reset, align 8, !dbg !13688
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13688
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 94, !dbg !13688
  %9 = load i32, i32* %watchdog_timeo, align 8, !dbg !13688
  %conv = sext i32 %9 to i64, !dbg !13688
  %add = add i64 %7, %conv, !dbg !13688
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !13688
  %sub = sub i64 %add, %10, !dbg !13688
  %cmp2 = icmp sge i64 %sub, 0, !dbg !13688
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !13691

if.then4:                                         ; preds = %if.then
  store %struct.dev_info* null, %struct.dev_info** %hw_priv, align 8, !dbg !13692
  br label %if.end, !dbg !13693

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !13694

if.end5:                                          ; preds = %if.end, %entry
  %11 = load volatile i64, i64* @jiffies, align 8, !dbg !13695
  store i64 %11, i64* @netdev_tx_timeout.last_reset, align 8, !dbg !13696
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13697
  %tobool = icmp ne %struct.dev_info* %12, null, !dbg !13697
  br i1 %tobool, label %if.then6, label %if.end27, !dbg !13699

if.then6:                                         ; preds = %if.end5
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13700
  call void @hw_dis_intr(%struct.ksz_hw* %13) #12, !dbg !13702
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13703
  call void @hw_disable(%struct.ksz_hw* %14) #12, !dbg !13704
  %15 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13705
  call void @transmit_cleanup(%struct.dev_info* %15, i32 0) #12, !dbg !13706
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13707
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 14, !dbg !13708
  call void @hw_reset_pkts(%struct.ksz_desc_info* %rx_desc_info) #12, !dbg !13709
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13710
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 15, !dbg !13711
  call void @hw_reset_pkts(%struct.ksz_desc_info* %tx_desc_info) #12, !dbg !13712
  %18 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13713
  call void @ksz_init_rx_buffers(%struct.dev_info* %18) #12, !dbg !13714
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13715
  call void @hw_reset(%struct.ksz_hw* %19) #12, !dbg !13716
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13717
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13718
  %tx_desc_info7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %21, i32 0, i32 15, !dbg !13719
  %ring_phys = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info7, i32 0, i32 3, !dbg !13720
  %22 = load i32, i32* %ring_phys, align 8, !dbg !13720
  %23 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13721
  %rx_desc_info8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %23, i32 0, i32 14, !dbg !13722
  %ring_phys9 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info8, i32 0, i32 3, !dbg !13723
  %24 = load i32, i32* %ring_phys9, align 8, !dbg !13723
  call void @hw_set_desc_base(%struct.ksz_hw* %20, i32 %22, i32 %24) #12, !dbg !13724
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13725
  call void @hw_set_addr(%struct.ksz_hw* %25) #12, !dbg !13726
  %26 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13727
  %all_multi = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %26, i32 0, i32 25, !dbg !13729
  %27 = load i8, i8* %all_multi, align 1, !dbg !13729
  %tobool10 = icmp ne i8 %27, 0, !dbg !13727
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13730

if.then11:                                        ; preds = %if.then6
  %28 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13731
  %29 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13732
  %all_multi12 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %29, i32 0, i32 25, !dbg !13733
  %30 = load i8, i8* %all_multi12, align 1, !dbg !13733
  call void @hw_set_multicast(%struct.ksz_hw* %28, i8 zeroext %30) #12, !dbg !13734
  br label %if.end16, !dbg !13734

if.else:                                          ; preds = %if.then6
  %31 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13735
  %multi_list_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %31, i32 0, i32 28, !dbg !13737
  %32 = load i8, i8* %multi_list_size, align 4, !dbg !13737
  %tobool13 = icmp ne i8 %32, 0, !dbg !13735
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !13738

if.then14:                                        ; preds = %if.else
  %33 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13739
  call void @hw_set_grp_addr(%struct.ksz_hw* %33) #12, !dbg !13740
  br label %if.end15, !dbg !13740

if.end15:                                         ; preds = %if.then14, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then11
  %34 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13741
  %dev_count17 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %34, i32 0, i32 4, !dbg !13743
  %35 = load i32, i32* %dev_count17, align 8, !dbg !13743
  %cmp18 = icmp sgt i32 %35, 1, !dbg !13744
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !13745

if.then20:                                        ; preds = %if.end16
  %36 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13746
  call void @hw_set_add_addr(%struct.ksz_hw* %36) #12, !dbg !13748
  store i32 0, i32* %port, align 4, !dbg !13749
  br label %for.cond, !dbg !13751

for.cond:                                         ; preds = %for.inc, %if.then20
  %37 = load i32, i32* %port, align 4, !dbg !13752
  %cmp21 = icmp slt i32 %37, 2, !dbg !13754
  br i1 %cmp21, label %for.body, label %for.end, !dbg !13755

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %port_dev, metadata !13756, metadata !DIExpression()), !dbg !13758
  %38 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13759
  %39 = load i32, i32* %port, align 4, !dbg !13760
  call void @port_set_stp_state(%struct.ksz_hw* %38, i32 %39, i32 0) #12, !dbg !13761
  %40 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13762
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %40, i32 0, i32 2, !dbg !13763
  %41 = load i32, i32* %port, align 4, !dbg !13764
  %idxprom = sext i32 %41 to i64, !dbg !13762
  %arrayidx = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 %idxprom, !dbg !13762
  %pdev = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx, i32 0, i32 6, !dbg !13765
  %42 = load i8*, i8** %pdev, align 8, !dbg !13765
  %43 = bitcast i8* %42 to %struct.net_device*, !dbg !13762
  store %struct.net_device* %43, %struct.net_device** %port_dev, align 8, !dbg !13766
  %44 = load %struct.net_device*, %struct.net_device** %port_dev, align 8, !dbg !13767
  %call23 = call zeroext i1 @netif_running(%struct.net_device* %44) #12, !dbg !13769
  br i1 %call23, label %if.then24, label %if.end25, !dbg !13770

if.then24:                                        ; preds = %for.body
  %45 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13771
  %46 = load i32, i32* %port, align 4, !dbg !13772
  call void @port_set_stp_state(%struct.ksz_hw* %45, i32 %46, i32 5) #12, !dbg !13773
  br label %if.end25, !dbg !13773

if.end25:                                         ; preds = %if.then24, %for.body
  br label %for.inc, !dbg !13774

for.inc:                                          ; preds = %if.end25
  %47 = load i32, i32* %port, align 4, !dbg !13775
  %inc = add i32 %47, 1, !dbg !13775
  store i32 %inc, i32* %port, align 4, !dbg !13775
  br label %for.cond, !dbg !13776, !llvm.loop !13777

for.end:                                          ; preds = %for.cond
  br label %if.end26, !dbg !13779

if.end26:                                         ; preds = %for.end, %if.end16
  %48 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13780
  call void @hw_enable(%struct.ksz_hw* %48) #12, !dbg !13781
  %49 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13782
  call void @hw_ena_intr(%struct.ksz_hw* %49) #12, !dbg !13783
  br label %if.end27, !dbg !13784

if.end27:                                         ; preds = %if.end26, %if.end5
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13785
  call void @netif_trans_update(%struct.net_device* %50) #12, !dbg !13786
  %51 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13787
  call void @netif_wake_queue(%struct.net_device* %51) #12, !dbg !13788
  ret void, !dbg !13789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device_stats* @netdev_query_statistics(%struct.net_device* %dev) #2 !dbg !13790 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %mib = alloca %struct.ksz_port_mib*, align 8
  %i = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13791, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13793, metadata !DIExpression()), !dbg !13794
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13795
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13796
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13796
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13794
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !13797, metadata !DIExpression()), !dbg !13798
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13799
  %port1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 1, !dbg !13800
  store %struct.ksz_port* %port1, %struct.ksz_port** %port, align 8, !dbg !13798
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13801, metadata !DIExpression()), !dbg !13802
  %3 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13803
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %3, i32 0, i32 0, !dbg !13804
  %4 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13804
  %hw2 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13805
  store %struct.ksz_hw* %hw2, %struct.ksz_hw** %hw, align 8, !dbg !13802
  call void @llvm.dbg.declare(metadata %struct.ksz_port_mib** %mib, metadata !13806, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13808, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.declare(metadata i32* %p, metadata !13810, metadata !DIExpression()), !dbg !13811
  %5 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13812
  %counter = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %5, i32 0, i32 7, !dbg !13813
  %arrayidx = getelementptr [4 x i64], [4 x i64]* %counter, i64 0, i64 3, !dbg !13812
  %6 = load i64, i64* %arrayidx, align 8, !dbg !13812
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13814
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 24, !dbg !13815
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !13816
  store i64 %6, i64* %rx_errors, align 8, !dbg !13817
  %8 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13818
  %counter3 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %8, i32 0, i32 7, !dbg !13819
  %arrayidx4 = getelementptr [4 x i64], [4 x i64]* %counter3, i64 0, i64 2, !dbg !13818
  %9 = load i64, i64* %arrayidx4, align 8, !dbg !13818
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13820
  %stats5 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 24, !dbg !13821
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats5, i32 0, i32 5, !dbg !13822
  store i64 %9, i64* %tx_errors, align 8, !dbg !13823
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13824
  %stats6 = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 24, !dbg !13825
  %multicast = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats6, i32 0, i32 8, !dbg !13826
  store i64 0, i64* %multicast, align 8, !dbg !13827
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13828
  %stats7 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 24, !dbg !13829
  %collisions = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats7, i32 0, i32 9, !dbg !13830
  store i64 0, i64* %collisions, align 8, !dbg !13831
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13832
  %stats8 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 24, !dbg !13833
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats8, i32 0, i32 10, !dbg !13834
  store i64 0, i64* %rx_length_errors, align 8, !dbg !13835
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13836
  %stats9 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 24, !dbg !13837
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats9, i32 0, i32 12, !dbg !13838
  store i64 0, i64* %rx_crc_errors, align 8, !dbg !13839
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13840
  %stats10 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 24, !dbg !13841
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats10, i32 0, i32 13, !dbg !13842
  store i64 0, i64* %rx_frame_errors, align 8, !dbg !13843
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13844
  %stats11 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 24, !dbg !13845
  %tx_window_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats11, i32 0, i32 20, !dbg !13846
  store i64 0, i64* %tx_window_errors, align 8, !dbg !13847
  store i32 0, i32* %i, align 4, !dbg !13848
  %17 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13850
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %17, i32 0, i32 4, !dbg !13851
  %18 = load i32, i32* %first_port, align 4, !dbg !13851
  store i32 %18, i32* %p, align 4, !dbg !13852
  br label %for.cond, !dbg !13853

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %i, align 4, !dbg !13854
  %20 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13856
  %mib_port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %20, i32 0, i32 5, !dbg !13857
  %21 = load i32, i32* %mib_port_cnt, align 8, !dbg !13857
  %cmp = icmp slt i32 %19, %21, !dbg !13858
  br i1 %cmp, label %for.body, label %for.end, !dbg !13859

for.body:                                         ; preds = %for.cond
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13860
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %22, i32 0, i32 3, !dbg !13862
  %23 = load i32, i32* %p, align 4, !dbg !13863
  %idxprom = sext i32 %23 to i64, !dbg !13860
  %arrayidx12 = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom, !dbg !13860
  store %struct.ksz_port_mib* %arrayidx12, %struct.ksz_port_mib** %mib, align 8, !dbg !13864
  %24 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13865
  %counter13 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %24, i32 0, i32 4, !dbg !13866
  %arrayidx14 = getelementptr [34 x i64], [34 x i64]* %counter13, i64 0, i64 12, !dbg !13865
  %25 = load i64, i64* %arrayidx14, align 8, !dbg !13865
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13867
  %stats15 = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 24, !dbg !13868
  %multicast16 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats15, i32 0, i32 8, !dbg !13869
  %27 = load i64, i64* %multicast16, align 8, !dbg !13870
  %add = add i64 %27, %25, !dbg !13870
  store i64 %add, i64* %multicast16, align 8, !dbg !13870
  %28 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13871
  %counter17 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %28, i32 0, i32 4, !dbg !13872
  %arrayidx18 = getelementptr [34 x i64], [34 x i64]* %counter17, i64 0, i64 28, !dbg !13871
  %29 = load i64, i64* %arrayidx18, align 8, !dbg !13871
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13873
  %stats19 = getelementptr inbounds %struct.net_device, %struct.net_device* %30, i32 0, i32 24, !dbg !13874
  %collisions20 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats19, i32 0, i32 9, !dbg !13875
  %31 = load i64, i64* %collisions20, align 8, !dbg !13876
  %add21 = add i64 %31, %29, !dbg !13876
  store i64 %add21, i64* %collisions20, align 8, !dbg !13876
  %32 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13877
  %counter22 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %32, i32 0, i32 4, !dbg !13878
  %arrayidx23 = getelementptr [34 x i64], [34 x i64]* %counter22, i64 0, i64 2, !dbg !13877
  %33 = load i64, i64* %arrayidx23, align 8, !dbg !13877
  %34 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13879
  %counter24 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %34, i32 0, i32 4, !dbg !13880
  %arrayidx25 = getelementptr [34 x i64], [34 x i64]* %counter24, i64 0, i64 3, !dbg !13879
  %35 = load i64, i64* %arrayidx25, align 8, !dbg !13879
  %add26 = add i64 %33, %35, !dbg !13881
  %36 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13882
  %counter27 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %36, i32 0, i32 4, !dbg !13883
  %arrayidx28 = getelementptr [34 x i64], [34 x i64]* %counter27, i64 0, i64 4, !dbg !13882
  %37 = load i64, i64* %arrayidx28, align 8, !dbg !13882
  %add29 = add i64 %add26, %37, !dbg !13884
  %38 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13885
  %counter30 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %38, i32 0, i32 4, !dbg !13886
  %arrayidx31 = getelementptr [34 x i64], [34 x i64]* %counter30, i64 0, i64 5, !dbg !13885
  %39 = load i64, i64* %arrayidx31, align 8, !dbg !13885
  %add32 = add i64 %add29, %39, !dbg !13887
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13888
  %stats33 = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 24, !dbg !13889
  %rx_length_errors34 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats33, i32 0, i32 10, !dbg !13890
  %41 = load i64, i64* %rx_length_errors34, align 8, !dbg !13891
  %add35 = add i64 %41, %add32, !dbg !13891
  store i64 %add35, i64* %rx_length_errors34, align 8, !dbg !13891
  %42 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13892
  %counter36 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %42, i32 0, i32 4, !dbg !13893
  %arrayidx37 = getelementptr [34 x i64], [34 x i64]* %counter36, i64 0, i64 7, !dbg !13892
  %43 = load i64, i64* %arrayidx37, align 8, !dbg !13892
  %44 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13894
  %stats38 = getelementptr inbounds %struct.net_device, %struct.net_device* %44, i32 0, i32 24, !dbg !13895
  %rx_crc_errors39 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats38, i32 0, i32 12, !dbg !13896
  %45 = load i64, i64* %rx_crc_errors39, align 8, !dbg !13897
  %add40 = add i64 %45, %43, !dbg !13897
  store i64 %add40, i64* %rx_crc_errors39, align 8, !dbg !13897
  %46 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13898
  %counter41 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %46, i32 0, i32 4, !dbg !13899
  %arrayidx42 = getelementptr [34 x i64], [34 x i64]* %counter41, i64 0, i64 8, !dbg !13898
  %47 = load i64, i64* %arrayidx42, align 8, !dbg !13898
  %48 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13900
  %counter43 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %48, i32 0, i32 4, !dbg !13901
  %arrayidx44 = getelementptr [34 x i64], [34 x i64]* %counter43, i64 0, i64 6, !dbg !13900
  %49 = load i64, i64* %arrayidx44, align 8, !dbg !13900
  %add45 = add i64 %47, %49, !dbg !13902
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13903
  %stats46 = getelementptr inbounds %struct.net_device, %struct.net_device* %50, i32 0, i32 24, !dbg !13904
  %rx_frame_errors47 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats46, i32 0, i32 13, !dbg !13905
  %51 = load i64, i64* %rx_frame_errors47, align 8, !dbg !13906
  %add48 = add i64 %51, %add45, !dbg !13906
  store i64 %add48, i64* %rx_frame_errors47, align 8, !dbg !13906
  %52 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !13907
  %counter49 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %52, i32 0, i32 4, !dbg !13908
  %arrayidx50 = getelementptr [34 x i64], [34 x i64]* %counter49, i64 0, i64 22, !dbg !13907
  %53 = load i64, i64* %arrayidx50, align 8, !dbg !13907
  %54 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13909
  %stats51 = getelementptr inbounds %struct.net_device, %struct.net_device* %54, i32 0, i32 24, !dbg !13910
  %tx_window_errors52 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats51, i32 0, i32 20, !dbg !13911
  %55 = load i64, i64* %tx_window_errors52, align 8, !dbg !13912
  %add53 = add i64 %55, %53, !dbg !13912
  store i64 %add53, i64* %tx_window_errors52, align 8, !dbg !13912
  br label %for.inc, !dbg !13913

for.inc:                                          ; preds = %for.body
  %56 = load i32, i32* %i, align 4, !dbg !13914
  %inc = add i32 %56, 1, !dbg !13914
  store i32 %inc, i32* %i, align 4, !dbg !13914
  %57 = load i32, i32* %p, align 4, !dbg !13915
  %inc54 = add i32 %57, 1, !dbg !13915
  store i32 %inc54, i32* %p, align 4, !dbg !13915
  br label %for.cond, !dbg !13916, !llvm.loop !13917

for.end:                                          ; preds = %for.cond
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13919
  %stats55 = getelementptr inbounds %struct.net_device, %struct.net_device* %58, i32 0, i32 24, !dbg !13920
  ret %struct.net_device_stats* %stats55, !dbg !13921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_set_features(%struct.net_device* %dev, i64 %features) #2 !dbg !13922 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13923, metadata !DIExpression()), !dbg !13924
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !13925, metadata !DIExpression()), !dbg !13926
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13927, metadata !DIExpression()), !dbg !13928
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13929
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13930
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !13930
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !13928
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13931, metadata !DIExpression()), !dbg !13932
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13933
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !13934
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13934
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !13932
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13935, metadata !DIExpression()), !dbg !13936
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13937
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !13938
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !13936
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13939
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 5, !dbg !13940
  call void @mutex_lock(%struct.mutex* %lock) #12, !dbg !13941
  %6 = load i64, i64* %features.addr, align 8, !dbg !13942
  %and = and i64 %6, 1099511627776, !dbg !13944
  %tobool = icmp ne i64 %and, 0, !dbg !13944
  br i1 %tobool, label %if.then, label %if.else, !dbg !13945

if.then:                                          ; preds = %entry
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13946
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 10, !dbg !13947
  %8 = load i32, i32* %rx_cfg, align 8, !dbg !13948
  %or = or i32 %8, 196608, !dbg !13948
  store i32 %or, i32* %rx_cfg, align 8, !dbg !13948
  br label %if.end, !dbg !13946

if.else:                                          ; preds = %entry
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13949
  %rx_cfg2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 10, !dbg !13950
  %10 = load i32, i32* %rx_cfg2, align 8, !dbg !13951
  %and3 = and i32 %10, -196609, !dbg !13951
  store i32 %and3, i32* %rx_cfg2, align 8, !dbg !13951
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13952
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 29, !dbg !13954
  %12 = load i8, i8* %enabled, align 1, !dbg !13954
  %tobool4 = icmp ne i8 %12, 0, !dbg !13952
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !13955

if.then5:                                         ; preds = %if.end
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13956
  %rx_cfg6 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 10, !dbg !13957
  %14 = load i32, i32* %rx_cfg6, align 8, !dbg !13957
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13958
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %15, i32 0, i32 0, !dbg !13959
  %16 = load i8*, i8** %io, align 8, !dbg !13959
  %add.ptr = getelementptr i8, i8* %16, i64 4, !dbg !13960
  call void @writel(i32 %14, i8* %add.ptr) #12, !dbg !13961
  br label %if.end7, !dbg !13961

if.end7:                                          ; preds = %if.then5, %if.end
  %17 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13962
  %lock8 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %17, i32 0, i32 5, !dbg !13963
  call void @mutex_unlock(%struct.mutex* %lock8) #12, !dbg !13964
  ret i32 0, !dbg !13965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_monitor(%struct.timer_list* %t) #2 !dbg !13966 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_priv*, align 8
  %dev = alloca %struct.net_device*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca %struct.ksz_port*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !13967, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !13969, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13971, metadata !DIExpression()), !dbg !13973
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !13973
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !13973
  store i8* %1, i8** %__mptr, align 8, !dbg !13973
  br label %do.body, !dbg !13973

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13974

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13973
  %add.ptr = getelementptr i8, i8* %2, i64 -72, !dbg !13973
  %3 = bitcast i8* %add.ptr to %struct.dev_priv*, !dbg !13973
  store %struct.dev_priv* %3, %struct.dev_priv** %tmp, align 8, !dbg !13974
  %4 = load %struct.dev_priv*, %struct.dev_priv** %tmp, align 8, !dbg !13973
  store %struct.dev_priv* %4, %struct.dev_priv** %priv, align 8, !dbg !13970
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !13976, metadata !DIExpression()), !dbg !13977
  %5 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13978
  %mii_if = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %5, i32 0, i32 5, !dbg !13979
  %dev1 = getelementptr inbounds %struct.mii_if_info, %struct.mii_if_info* %mii_if, i32 0, i32 5, !dbg !13980
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !13980
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !13977
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !13981, metadata !DIExpression()), !dbg !13982
  %7 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13983
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %7, i32 0, i32 0, !dbg !13984
  %8 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !13984
  store %struct.dev_info* %8, %struct.dev_info** %hw_priv, align 8, !dbg !13982
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !13985, metadata !DIExpression()), !dbg !13986
  %9 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !13987
  %hw2 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %9, i32 0, i32 2, !dbg !13988
  store %struct.ksz_hw* %hw2, %struct.ksz_hw** %hw, align 8, !dbg !13986
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !13989, metadata !DIExpression()), !dbg !13990
  %10 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !13991
  %port3 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %10, i32 0, i32 1, !dbg !13992
  store %struct.ksz_port* %port3, %struct.ksz_port** %port, align 8, !dbg !13990
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !13993
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 32, !dbg !13995
  %12 = load i32, i32* %features, align 8, !dbg !13995
  %and = and i32 %12, 1, !dbg !13996
  %tobool = icmp ne i32 %and, 0, !dbg !13996
  br i1 %tobool, label %if.end, label %if.then, !dbg !13997

if.then:                                          ; preds = %do.end
  %13 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !13998
  call void @port_get_link_speed(%struct.ksz_port* %13) #12, !dbg !13999
  br label %if.end, !dbg !13999

if.end:                                           ; preds = %if.then, %do.end
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14000
  %15 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14001
  %16 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !14002
  call void @update_link(%struct.net_device* %14, %struct.dev_priv* %15, %struct.ksz_port* %16) #12, !dbg !14003
  %17 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14004
  %monitor_timer_info = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %17, i32 0, i32 2, !dbg !14005
  call void @ksz_update_timer(%struct.ksz_timer_info* %monitor_timer_info) #12, !dbg !14006
  ret void, !dbg !14007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sema_init(%struct.semaphore* %sem, i32 %val) #2 !dbg !8259 {
entry:
  %sem.addr = alloca %struct.semaphore*, align 8
  %val.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.semaphore, align 8
  store %struct.semaphore* %sem, %struct.semaphore** %sem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.semaphore** %sem.addr, metadata !14008, metadata !DIExpression()), !dbg !14009
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14010, metadata !DIExpression()), !dbg !14011
  %0 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !14012
  %count = getelementptr inbounds %struct.semaphore, %struct.semaphore* %.compoundliteral, i32 0, i32 1, !dbg !14013
  %1 = load i32, i32* %val.addr, align 4, !dbg !14013
  store i32 %1, i32* %count, align 8, !dbg !14013
  %wait_list = getelementptr inbounds %struct.semaphore, %struct.semaphore* %.compoundliteral, i32 0, i32 2, !dbg !14013
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %wait_list, i32 0, i32 0, !dbg !14013
  %2 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !14013
  %wait_list1 = getelementptr inbounds %struct.semaphore, %struct.semaphore* %2, i32 0, i32 2, !dbg !14013
  store %struct.list_head* %wait_list1, %struct.list_head** %next, align 8, !dbg !14013
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %wait_list, i32 0, i32 1, !dbg !14013
  %3 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !14013
  %wait_list2 = getelementptr inbounds %struct.semaphore, %struct.semaphore* %3, i32 0, i32 2, !dbg !14013
  store %struct.list_head* %wait_list2, %struct.list_head** %prev, align 8, !dbg !14013
  %4 = bitcast %struct.semaphore* %0 to i8*, !dbg !14014
  %5 = bitcast %struct.semaphore* %.compoundliteral to i8*, !dbg !14014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !14014
  br label %do.body, !dbg !14015

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14016

do.end:                                           ; preds = %do.body
  ret void, !dbg !14018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mdio_read(%struct.net_device* %dev, i32 %phy_id, i32 %reg_num) #2 !dbg !14019 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %phy_id.addr = alloca i32, align 4
  %reg_num.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %val_out = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14020, metadata !DIExpression()), !dbg !14021
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !14022, metadata !DIExpression()), !dbg !14023
  store i32 %reg_num, i32* %reg_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_num.addr, metadata !14024, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !14026, metadata !DIExpression()), !dbg !14027
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14028
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14029
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !14029
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !14027
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !14030, metadata !DIExpression()), !dbg !14031
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14032
  %port1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 1, !dbg !14033
  store %struct.ksz_port* %port1, %struct.ksz_port** %port, align 8, !dbg !14031
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !14034, metadata !DIExpression()), !dbg !14035
  %3 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !14036
  %hw2 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %3, i32 0, i32 8, !dbg !14037
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw2, align 8, !dbg !14037
  store %struct.ksz_hw* %4, %struct.ksz_hw** %hw, align 8, !dbg !14035
  call void @llvm.dbg.declare(metadata i16* %val_out, metadata !14038, metadata !DIExpression()), !dbg !14039
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14040
  %6 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !14041
  %linked = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %6, i32 0, i32 9, !dbg !14042
  %7 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked, align 8, !dbg !14042
  %port_id = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %7, i32 0, i32 5, !dbg !14043
  %8 = load i8, i8* %port_id, align 1, !dbg !14043
  %conv = zext i8 %8 to i32, !dbg !14041
  %9 = load i32, i32* %reg_num.addr, align 4, !dbg !14044
  %shl = shl i32 %9, 1, !dbg !14045
  %conv3 = trunc i32 %shl to i16, !dbg !14044
  call void @hw_r_phy(%struct.ksz_hw* %5, i32 %conv, i16 zeroext %conv3, i16* %val_out) #12, !dbg !14046
  %10 = load i16, i16* %val_out, align 2, !dbg !14047
  %conv4 = zext i16 %10 to i32, !dbg !14047
  ret i32 %conv4, !dbg !14048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mdio_write(%struct.net_device* %dev, i32 %phy_id, i32 %reg_num, i32 %val) #2 !dbg !14049 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %phy_id.addr = alloca i32, align 4
  %reg_num.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  %pi = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14050, metadata !DIExpression()), !dbg !14051
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !14052, metadata !DIExpression()), !dbg !14053
  store i32 %reg_num, i32* %reg_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_num.addr, metadata !14054, metadata !DIExpression()), !dbg !14055
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14056, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !14058, metadata !DIExpression()), !dbg !14059
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14060
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14061
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !14061
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !14059
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !14062, metadata !DIExpression()), !dbg !14063
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14064
  %port1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 1, !dbg !14065
  store %struct.ksz_port* %port1, %struct.ksz_port** %port, align 8, !dbg !14063
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !14066, metadata !DIExpression()), !dbg !14067
  %3 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !14068
  %hw2 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %3, i32 0, i32 8, !dbg !14069
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw2, align 8, !dbg !14069
  store %struct.ksz_hw* %4, %struct.ksz_hw** %hw, align 8, !dbg !14067
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14070, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.declare(metadata i32* %pi, metadata !14072, metadata !DIExpression()), !dbg !14073
  store i32 0, i32* %i, align 4, !dbg !14074
  %5 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !14076
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %5, i32 0, i32 4, !dbg !14077
  %6 = load i32, i32* %first_port, align 4, !dbg !14077
  store i32 %6, i32* %pi, align 4, !dbg !14078
  br label %for.cond, !dbg !14079

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !14080
  %8 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !14082
  %port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %8, i32 0, i32 6, !dbg !14083
  %9 = load i32, i32* %port_cnt, align 4, !dbg !14083
  %cmp = icmp slt i32 %7, %9, !dbg !14084
  br i1 %cmp, label %for.body, label %for.end, !dbg !14085

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14086
  %11 = load i32, i32* %pi, align 4, !dbg !14087
  %12 = load i32, i32* %reg_num.addr, align 4, !dbg !14088
  %shl = shl i32 %12, 1, !dbg !14089
  %conv = trunc i32 %shl to i16, !dbg !14088
  %13 = load i32, i32* %val.addr, align 4, !dbg !14090
  %conv3 = trunc i32 %13 to i16, !dbg !14090
  call void @hw_w_phy(%struct.ksz_hw* %10, i32 %11, i16 zeroext %conv, i16 zeroext %conv3) #12, !dbg !14091
  br label %for.inc, !dbg !14091

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !14092
  %inc = add i32 %14, 1, !dbg !14092
  store i32 %inc, i32* %i, align 4, !dbg !14092
  %15 = load i32, i32* %pi, align 4, !dbg !14093
  %inc4 = add i32 %15, 1, !dbg !14093
  store i32 %inc4, i32* %pi, align 4, !dbg !14093
  br label %for.cond, !dbg !14094, !llvm.loop !14095

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netif_msg_init(i32 %debug_value, i32 %default_msg_enable_bits) #2 !dbg !14098 {
entry:
  %retval = alloca i32, align 4
  %debug_value.addr = alloca i32, align 4
  %default_msg_enable_bits.addr = alloca i32, align 4
  store i32 %debug_value, i32* %debug_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debug_value.addr, metadata !14101, metadata !DIExpression()), !dbg !14102
  store i32 %default_msg_enable_bits, i32* %default_msg_enable_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_msg_enable_bits.addr, metadata !14103, metadata !DIExpression()), !dbg !14104
  %0 = load i32, i32* %debug_value.addr, align 4, !dbg !14105
  %cmp = icmp slt i32 %0, 0, !dbg !14107
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14108

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %debug_value.addr, align 4, !dbg !14109
  %conv = sext i32 %1 to i64, !dbg !14109
  %cmp1 = icmp uge i64 %conv, 32, !dbg !14110
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14111

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %default_msg_enable_bits.addr, align 4, !dbg !14112
  store i32 %2, i32* %retval, align 4, !dbg !14113
  br label %return, !dbg !14113

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %debug_value.addr, align 4, !dbg !14114
  %cmp3 = icmp eq i32 %3, 0, !dbg !14116
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !14117

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14118
  br label %return, !dbg !14118

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %debug_value.addr, align 4, !dbg !14119
  %shl = shl i32 1, %4, !dbg !14120
  %sub = sub i32 %shl, 1, !dbg !14121
  store i32 %sub, i32* %retval, align 4, !dbg !14122
  br label %return, !dbg !14122

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !14123
  ret i32 %5, !dbg !14123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_get_link_speed(%struct.ksz_port* %port) #2 !dbg !14124 {
entry:
  %port.addr = alloca %struct.ksz_port*, align 8
  %interrupt = alloca i32, align 4
  %info = alloca %struct.ksz_port_info*, align 8
  %linked = alloca %struct.ksz_port_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %data = alloca i16, align 2
  %status = alloca i16, align 2
  %local = alloca i8, align 1
  %remote = alloca i8, align 1
  %i = alloca i32, align 4
  %p = alloca i32, align 4
  %change = alloca i32, align 4
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !14127, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.declare(metadata i32* %interrupt, metadata !14129, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.declare(metadata %struct.ksz_port_info** %info, metadata !14131, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.declare(metadata %struct.ksz_port_info** %linked, metadata !14133, metadata !DIExpression()), !dbg !14134
  store %struct.ksz_port_info* null, %struct.ksz_port_info** %linked, align 8, !dbg !14134
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !14135, metadata !DIExpression()), !dbg !14136
  %0 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14137
  %hw1 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %0, i32 0, i32 8, !dbg !14138
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw1, align 8, !dbg !14138
  store %struct.ksz_hw* %1, %struct.ksz_hw** %hw, align 8, !dbg !14136
  call void @llvm.dbg.declare(metadata i16* %data, metadata !14139, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14141, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.declare(metadata i8* %local, metadata !14143, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.declare(metadata i8* %remote, metadata !14145, metadata !DIExpression()), !dbg !14146
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14147, metadata !DIExpression()), !dbg !14148
  call void @llvm.dbg.declare(metadata i32* %p, metadata !14149, metadata !DIExpression()), !dbg !14150
  call void @llvm.dbg.declare(metadata i32* %change, metadata !14151, metadata !DIExpression()), !dbg !14152
  store i32 0, i32* %change, align 4, !dbg !14152
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14153
  %call = call i32 @hw_block_intr(%struct.ksz_hw* %2) #12, !dbg !14154
  store i32 %call, i32* %interrupt, align 4, !dbg !14155
  store i32 0, i32* %i, align 4, !dbg !14156
  %3 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14158
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %3, i32 0, i32 4, !dbg !14159
  %4 = load i32, i32* %first_port, align 4, !dbg !14159
  store i32 %4, i32* %p, align 4, !dbg !14160
  br label %for.cond, !dbg !14161

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !14162
  %6 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14164
  %port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %6, i32 0, i32 6, !dbg !14165
  %7 = load i32, i32* %port_cnt, align 4, !dbg !14165
  %cmp = icmp slt i32 %5, %7, !dbg !14166
  br i1 %cmp, label %for.body, label %for.end, !dbg !14167

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14168
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 2, !dbg !14170
  %9 = load i32, i32* %p, align 4, !dbg !14171
  %idxprom = sext i32 %9 to i64, !dbg !14168
  %arrayidx = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 %idxprom, !dbg !14168
  store %struct.ksz_port_info* %arrayidx, %struct.ksz_port_info** %info, align 8, !dbg !14172
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14173
  %11 = load i32, i32* %p, align 4, !dbg !14174
  call void @port_r16(%struct.ksz_hw* %10, i32 %11, i32 18, i16* %data) #12, !dbg !14175
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14176
  %13 = load i32, i32* %p, align 4, !dbg !14177
  call void @port_r16(%struct.ksz_hw* %12, i32 %13, i32 20, i16* %status) #12, !dbg !14178
  %14 = load i16, i16* %status, align 2, !dbg !14179
  %conv = zext i16 %14 to i32, !dbg !14179
  %and = and i32 %conv, 96, !dbg !14180
  %conv2 = trunc i32 %and to i8, !dbg !14179
  store i8 %conv2, i8* %remote, align 1, !dbg !14181
  %15 = load i16, i16* %data, align 2, !dbg !14182
  %conv3 = trunc i16 %15 to i8, !dbg !14183
  store i8 %conv3, i8* %local, align 1, !dbg !14184
  %16 = load i8, i8* %local, align 1, !dbg !14185
  %conv4 = zext i8 %16 to i32, !dbg !14185
  %17 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14187
  %advertised = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %17, i32 0, i32 3, !dbg !14188
  %18 = load i8, i8* %advertised, align 1, !dbg !14188
  %conv5 = zext i8 %18 to i32, !dbg !14187
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !14189
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !14190

land.lhs.true:                                    ; preds = %for.body
  %19 = load i8, i8* %remote, align 1, !dbg !14191
  %conv8 = zext i8 %19 to i32, !dbg !14191
  %20 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14192
  %partner = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %20, i32 0, i32 4, !dbg !14193
  %21 = load i8, i8* %partner, align 2, !dbg !14193
  %conv9 = zext i8 %21 to i32, !dbg !14192
  %cmp10 = icmp eq i32 %conv8, %conv9, !dbg !14194
  br i1 %cmp10, label %if.then, label %if.end, !dbg !14195

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !14196

if.end:                                           ; preds = %land.lhs.true, %for.body
  %22 = load i8, i8* %local, align 1, !dbg !14197
  %23 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14198
  %advertised12 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %23, i32 0, i32 3, !dbg !14199
  store i8 %22, i8* %advertised12, align 1, !dbg !14200
  %24 = load i8, i8* %remote, align 1, !dbg !14201
  %25 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14202
  %partner13 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %25, i32 0, i32 4, !dbg !14203
  store i8 %24, i8* %partner13, align 2, !dbg !14204
  %26 = load i16, i16* %status, align 2, !dbg !14205
  %conv14 = zext i16 %26 to i32, !dbg !14205
  %and15 = and i32 %conv14, 32, !dbg !14207
  %tobool = icmp ne i32 %and15, 0, !dbg !14207
  br i1 %tobool, label %if.then16, label %if.else, !dbg !14208

if.then16:                                        ; preds = %if.end
  %27 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked, align 8, !dbg !14209
  %tobool17 = icmp ne %struct.ksz_port_info* %27, null, !dbg !14209
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !14212

if.then18:                                        ; preds = %if.then16
  %28 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14213
  store %struct.ksz_port_info* %28, %struct.ksz_port_info** %linked, align 8, !dbg !14214
  br label %if.end19, !dbg !14215

if.end19:                                         ; preds = %if.then18, %if.then16
  %29 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14216
  %tx_rate = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %29, i32 0, i32 1, !dbg !14217
  store i32 100000, i32* %tx_rate, align 4, !dbg !14218
  %30 = load i16, i16* %status, align 2, !dbg !14219
  %conv20 = zext i16 %30 to i32, !dbg !14219
  %and21 = and i32 %conv20, 1024, !dbg !14221
  %tobool22 = icmp ne i32 %and21, 0, !dbg !14221
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !14222

if.then23:                                        ; preds = %if.end19
  %31 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14223
  %tx_rate24 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %31, i32 0, i32 1, !dbg !14224
  store i32 1000000, i32* %tx_rate24, align 4, !dbg !14225
  br label %if.end25, !dbg !14223

if.end25:                                         ; preds = %if.then23, %if.end19
  %32 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14226
  %duplex = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %32, i32 0, i32 2, !dbg !14227
  store i8 1, i8* %duplex, align 8, !dbg !14228
  %33 = load i16, i16* %status, align 2, !dbg !14229
  %conv26 = zext i16 %33 to i32, !dbg !14229
  %and27 = and i32 %conv26, 512, !dbg !14231
  %tobool28 = icmp ne i32 %and27, 0, !dbg !14231
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !14232

if.then29:                                        ; preds = %if.end25
  %34 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14233
  %duplex30 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %34, i32 0, i32 2, !dbg !14234
  store i8 2, i8* %duplex30, align 8, !dbg !14235
  br label %if.end31, !dbg !14233

if.end31:                                         ; preds = %if.then29, %if.end25
  %35 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14236
  %state = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %35, i32 0, i32 0, !dbg !14238
  %36 = load i32, i32* %state, align 8, !dbg !14238
  %cmp32 = icmp ne i32 0, %36, !dbg !14239
  br i1 %cmp32, label %if.then34, label %if.end42, !dbg !14240

if.then34:                                        ; preds = %if.end31
  %37 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14241
  %38 = load i32, i32* %p, align 4, !dbg !14243
  call void @hw_r_phy(%struct.ksz_hw* %37, i32 %38, i16 zeroext 8, i16* %data) #12, !dbg !14244
  %39 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14245
  %40 = load i32, i32* %p, align 4, !dbg !14246
  call void @hw_r_phy(%struct.ksz_hw* %39, i32 %40, i16 zeroext 10, i16* %status) #12, !dbg !14247
  %41 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14248
  %42 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14249
  %43 = load i16, i16* %data, align 2, !dbg !14250
  %44 = load i16, i16* %status, align 2, !dbg !14251
  call void @determine_flow_ctrl(%struct.ksz_hw* %41, %struct.ksz_port* %42, i16 zeroext %43, i16 zeroext %44) #12, !dbg !14252
  %45 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14253
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %45, i32 0, i32 1, !dbg !14255
  %46 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !14255
  %tobool35 = icmp ne %struct.ksz_switch* %46, null, !dbg !14253
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !14256

if.then36:                                        ; preds = %if.then34
  %47 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14257
  %48 = load i32, i32* %p, align 4, !dbg !14259
  %49 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14260
  %duplex37 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %49, i32 0, i32 2, !dbg !14261
  %50 = load i8, i8* %duplex37, align 8, !dbg !14261
  %conv38 = zext i8 %50 to i32, !dbg !14260
  %cmp39 = icmp eq i32 1, %conv38, !dbg !14262
  %conv40 = zext i1 %cmp39 to i32, !dbg !14262
  call void @port_cfg_back_pressure(%struct.ksz_hw* %47, i32 %48, i32 %conv40) #12, !dbg !14263
  br label %if.end41, !dbg !14264

if.end41:                                         ; preds = %if.then36, %if.then34
  %51 = load i32, i32* %i, align 4, !dbg !14265
  %shl = shl i32 1, %51, !dbg !14266
  %52 = load i32, i32* %change, align 4, !dbg !14267
  %or = or i32 %52, %shl, !dbg !14267
  store i32 %or, i32* %change, align 4, !dbg !14267
  %53 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14268
  %54 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14269
  %55 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14270
  %56 = load i16, i16* %status, align 2, !dbg !14271
  call void @port_cfg_change(%struct.ksz_hw* %53, %struct.ksz_port* %54, %struct.ksz_port_info* %55, i16 zeroext %56) #12, !dbg !14272
  br label %if.end42, !dbg !14273

if.end42:                                         ; preds = %if.end41, %if.end31
  %57 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14274
  %state43 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %57, i32 0, i32 0, !dbg !14275
  store i32 0, i32* %state43, align 8, !dbg !14276
  br label %if.end54, !dbg !14277

if.else:                                          ; preds = %if.end
  %58 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14278
  %state44 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %58, i32 0, i32 0, !dbg !14281
  %59 = load i32, i32* %state44, align 8, !dbg !14281
  %cmp45 = icmp ne i32 1, %59, !dbg !14282
  br i1 %cmp45, label %if.then47, label %if.end52, !dbg !14283

if.then47:                                        ; preds = %if.else
  %60 = load i32, i32* %i, align 4, !dbg !14284
  %shl48 = shl i32 1, %60, !dbg !14286
  %61 = load i32, i32* %change, align 4, !dbg !14287
  %or49 = or i32 %61, %shl48, !dbg !14287
  store i32 %or49, i32* %change, align 4, !dbg !14287
  %62 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14288
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %62, i32 0, i32 3, !dbg !14289
  %63 = load i32, i32* %p, align 4, !dbg !14290
  %idxprom50 = sext i32 %63 to i64, !dbg !14288
  %arrayidx51 = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom50, !dbg !14288
  %link_down = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %arrayidx51, i32 0, i32 1, !dbg !14291
  store i8 1, i8* %link_down, align 1, !dbg !14292
  br label %if.end52, !dbg !14293

if.end52:                                         ; preds = %if.then47, %if.else
  %64 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14294
  %state53 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %64, i32 0, i32 0, !dbg !14295
  store i32 1, i32* %state53, align 8, !dbg !14296
  br label %if.end54

if.end54:                                         ; preds = %if.end52, %if.end42
  %65 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info, align 8, !dbg !14297
  %state55 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %65, i32 0, i32 0, !dbg !14298
  %66 = load i32, i32* %state55, align 8, !dbg !14298
  %conv56 = trunc i32 %66 to i8, !dbg !14299
  %67 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14300
  %port_mib57 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %67, i32 0, i32 3, !dbg !14301
  %68 = load i32, i32* %p, align 4, !dbg !14302
  %idxprom58 = sext i32 %68 to i64, !dbg !14300
  %arrayidx59 = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib57, i64 0, i64 %idxprom58, !dbg !14300
  %state60 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %arrayidx59, i32 0, i32 2, !dbg !14303
  store i8 %conv56, i8* %state60, align 2, !dbg !14304
  br label %for.inc, !dbg !14305

for.inc:                                          ; preds = %if.end54, %if.then
  %69 = load i32, i32* %i, align 4, !dbg !14306
  %inc = add i32 %69, 1, !dbg !14306
  store i32 %inc, i32* %i, align 4, !dbg !14306
  %70 = load i32, i32* %p, align 4, !dbg !14307
  %inc61 = add i32 %70, 1, !dbg !14307
  store i32 %inc61, i32* %p, align 4, !dbg !14307
  br label %for.cond, !dbg !14308, !llvm.loop !14309

for.end:                                          ; preds = %for.cond
  %71 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked, align 8, !dbg !14311
  %tobool62 = icmp ne %struct.ksz_port_info* %71, null, !dbg !14311
  br i1 %tobool62, label %land.lhs.true63, label %if.end70, !dbg !14313

land.lhs.true63:                                  ; preds = %for.end
  %72 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14314
  %linked64 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %72, i32 0, i32 9, !dbg !14315
  %73 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked64, align 8, !dbg !14315
  %state65 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %73, i32 0, i32 0, !dbg !14316
  %74 = load i32, i32* %state65, align 8, !dbg !14316
  %cmp66 = icmp eq i32 1, %74, !dbg !14317
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !14318

if.then68:                                        ; preds = %land.lhs.true63
  %75 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked, align 8, !dbg !14319
  %76 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14320
  %linked69 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %76, i32 0, i32 9, !dbg !14321
  store %struct.ksz_port_info* %75, %struct.ksz_port_info** %linked69, align 8, !dbg !14322
  br label %if.end70, !dbg !14320

if.end70:                                         ; preds = %if.then68, %land.lhs.true63, %for.end
  %77 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14323
  %78 = load i32, i32* %interrupt, align 4, !dbg !14324
  call void @hw_restore_intr(%struct.ksz_hw* %77, i32 %78) #12, !dbg !14325
  ret void, !dbg !14326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @update_link(%struct.net_device* %dev, %struct.dev_priv* %priv, %struct.ksz_port* %port) #2 !dbg !14327 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv.addr = alloca %struct.dev_priv*, align 8
  %port.addr = alloca %struct.ksz_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14330, metadata !DIExpression()), !dbg !14331
  store %struct.dev_priv* %priv, %struct.dev_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv.addr, metadata !14332, metadata !DIExpression()), !dbg !14333
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !14334, metadata !DIExpression()), !dbg !14335
  %0 = load %struct.dev_priv*, %struct.dev_priv** %priv.addr, align 8, !dbg !14336
  %media_state = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %0, i32 0, i32 8, !dbg !14338
  %1 = load i32, i32* %media_state, align 8, !dbg !14338
  %2 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14339
  %linked = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %2, i32 0, i32 9, !dbg !14340
  %3 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked, align 8, !dbg !14340
  %state = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %3, i32 0, i32 0, !dbg !14341
  %4 = load i32, i32* %state, align 8, !dbg !14341
  %cmp = icmp ne i32 %1, %4, !dbg !14342
  br i1 %cmp, label %if.then, label %if.end5, !dbg !14343

if.then:                                          ; preds = %entry
  %5 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14344
  %linked1 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %5, i32 0, i32 9, !dbg !14346
  %6 = load %struct.ksz_port_info*, %struct.ksz_port_info** %linked1, align 8, !dbg !14346
  %state2 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %6, i32 0, i32 0, !dbg !14347
  %7 = load i32, i32* %state2, align 8, !dbg !14347
  %8 = load %struct.dev_priv*, %struct.dev_priv** %priv.addr, align 8, !dbg !14348
  %media_state3 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %8, i32 0, i32 8, !dbg !14349
  store i32 %7, i32* %media_state3, align 8, !dbg !14350
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14351
  %call = call zeroext i1 @netif_running(%struct.net_device* %9) #12, !dbg !14353
  br i1 %call, label %if.then4, label %if.end, !dbg !14354

if.then4:                                         ; preds = %if.then
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14355
  call void @set_media_state(%struct.net_device* %10, i32 0) #12, !dbg !14356
  br label %if.end, !dbg !14356

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !14357

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !14358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_r_phy(%struct.ksz_hw* %hw, i32 %port, i16 zeroext %reg, i16* %val) #2 !dbg !14359 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16*, align 8
  %phy = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14362, metadata !DIExpression()), !dbg !14363
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14364, metadata !DIExpression()), !dbg !14365
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !14366, metadata !DIExpression()), !dbg !14367
  store i16* %val, i16** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %val.addr, metadata !14368, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.declare(metadata i32* %phy, metadata !14370, metadata !DIExpression()), !dbg !14371
  %0 = load i32, i32* %port.addr, align 4, !dbg !14372
  %mul = mul i32 %0, 16, !dbg !14373
  %add = add i32 1232, %mul, !dbg !14374
  %1 = load i16, i16* %reg.addr, align 2, !dbg !14375
  %conv = zext i16 %1 to i32, !dbg !14375
  %add1 = add i32 %add, %conv, !dbg !14376
  store i32 %add1, i32* %phy, align 4, !dbg !14377
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14378
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !14379
  %3 = load i8*, i8** %io, align 8, !dbg !14379
  %4 = load i32, i32* %phy, align 4, !dbg !14380
  %idx.ext = sext i32 %4 to i64, !dbg !14381
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !14381
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !14382
  %5 = load i16*, i16** %val.addr, align 8, !dbg !14383
  store i16 %call, i16* %5, align 2, !dbg !14384
  ret void, !dbg !14385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @determine_flow_ctrl(%struct.ksz_hw* %hw, %struct.ksz_port* %port, i16 zeroext %local, i16 zeroext %remote) #2 !dbg !14386 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca %struct.ksz_port*, align 8
  %local.addr = alloca i16, align 2
  %remote.addr = alloca i16, align 2
  %rx = alloca i32, align 4
  %tx = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14389, metadata !DIExpression()), !dbg !14390
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !14391, metadata !DIExpression()), !dbg !14392
  store i16 %local, i16* %local.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %local.addr, metadata !14393, metadata !DIExpression()), !dbg !14394
  store i16 %remote, i16* %remote.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %remote.addr, metadata !14395, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.declare(metadata i32* %rx, metadata !14397, metadata !DIExpression()), !dbg !14398
  call void @llvm.dbg.declare(metadata i32* %tx, metadata !14399, metadata !DIExpression()), !dbg !14400
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14401
  %overrides = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 33, !dbg !14403
  %1 = load i32, i32* %overrides, align 4, !dbg !14403
  %and = and i32 %1, 1, !dbg !14404
  %tobool = icmp ne i32 %and, 0, !dbg !14404
  br i1 %tobool, label %if.then, label %if.end, !dbg !14405

if.then:                                          ; preds = %entry
  br label %if.end35, !dbg !14406

if.end:                                           ; preds = %entry
  store i32 0, i32* %tx, align 4, !dbg !14407
  store i32 0, i32* %rx, align 4, !dbg !14408
  %2 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14409
  %force_link = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %2, i32 0, i32 2, !dbg !14411
  %3 = load i8, i8* %force_link, align 2, !dbg !14411
  %tobool1 = icmp ne i8 %3, 0, !dbg !14409
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !14412

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %tx, align 4, !dbg !14413
  store i32 1, i32* %rx, align 4, !dbg !14414
  br label %if.end3, !dbg !14415

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i16, i16* %remote.addr, align 2, !dbg !14416
  %conv = zext i16 %4 to i32, !dbg !14416
  %and4 = and i32 %conv, 1024, !dbg !14418
  %tobool5 = icmp ne i32 %and4, 0, !dbg !14418
  br i1 %tobool5, label %if.then6, label %if.else20, !dbg !14419

if.then6:                                         ; preds = %if.end3
  %5 = load i16, i16* %local.addr, align 2, !dbg !14420
  %conv7 = zext i16 %5 to i32, !dbg !14420
  %and8 = and i32 %conv7, 1024, !dbg !14423
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14423
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !14424

if.then10:                                        ; preds = %if.then6
  store i32 1, i32* %tx, align 4, !dbg !14425
  store i32 1, i32* %rx, align 4, !dbg !14427
  br label %if.end19, !dbg !14428

if.else:                                          ; preds = %if.then6
  %6 = load i16, i16* %remote.addr, align 2, !dbg !14429
  %conv11 = zext i16 %6 to i32, !dbg !14429
  %and12 = and i32 %conv11, 2048, !dbg !14431
  %tobool13 = icmp ne i32 %and12, 0, !dbg !14431
  br i1 %tobool13, label %land.lhs.true, label %if.end18, !dbg !14432

land.lhs.true:                                    ; preds = %if.else
  %7 = load i16, i16* %local.addr, align 2, !dbg !14433
  %conv14 = zext i16 %7 to i32, !dbg !14433
  %and15 = and i32 %conv14, 3072, !dbg !14434
  %cmp = icmp eq i32 %and15, 2048, !dbg !14435
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !14436

if.then17:                                        ; preds = %land.lhs.true
  store i32 1, i32* %tx, align 4, !dbg !14437
  br label %if.end18, !dbg !14439

if.end18:                                         ; preds = %if.then17, %land.lhs.true, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then10
  br label %if.end32, !dbg !14440

if.else20:                                        ; preds = %if.end3
  %8 = load i16, i16* %remote.addr, align 2, !dbg !14441
  %conv21 = zext i16 %8 to i32, !dbg !14441
  %and22 = and i32 %conv21, 2048, !dbg !14443
  %tobool23 = icmp ne i32 %and22, 0, !dbg !14443
  br i1 %tobool23, label %if.then24, label %if.end31, !dbg !14444

if.then24:                                        ; preds = %if.else20
  %9 = load i16, i16* %local.addr, align 2, !dbg !14445
  %conv25 = zext i16 %9 to i32, !dbg !14445
  %and26 = and i32 %conv25, 3072, !dbg !14448
  %cmp27 = icmp eq i32 %and26, 3072, !dbg !14449
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !14450

if.then29:                                        ; preds = %if.then24
  store i32 1, i32* %rx, align 4, !dbg !14451
  br label %if.end30, !dbg !14452

if.end30:                                         ; preds = %if.then29, %if.then24
  br label %if.end31, !dbg !14453

if.end31:                                         ; preds = %if.end30, %if.else20
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end19
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14454
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 1, !dbg !14456
  %11 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !14456
  %tobool33 = icmp ne %struct.ksz_switch* %11, null, !dbg !14454
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !14457

if.then34:                                        ; preds = %if.end32
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14458
  %13 = load i32, i32* %rx, align 4, !dbg !14459
  %14 = load i32, i32* %tx, align 4, !dbg !14460
  call void @set_flow_ctrl(%struct.ksz_hw* %12, i32 %13, i32 %14) #12, !dbg !14461
  br label %if.end35, !dbg !14461

if.end35:                                         ; preds = %if.then, %if.then34, %if.end32
  ret void, !dbg !14462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_back_pressure(%struct.ksz_hw* %hw, i32 %p, i32 %set) #2 !dbg !14463 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %p.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14464, metadata !DIExpression()), !dbg !14465
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !14466, metadata !DIExpression()), !dbg !14467
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !14468, metadata !DIExpression()), !dbg !14469
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14470
  %1 = load i32, i32* %p.addr, align 4, !dbg !14471
  %2 = load i32, i32* %set.addr, align 4, !dbg !14472
  call void @port_cfg(%struct.ksz_hw* %0, i32 %1, i32 2, i16 zeroext 2048, i32 %2) #12, !dbg !14473
  ret void, !dbg !14474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_cfg_change(%struct.ksz_hw* %hw, %struct.ksz_port* %port, %struct.ksz_port_info* %info, i16 zeroext %link_status) #2 !dbg !14475 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca %struct.ksz_port*, align 8
  %info.addr = alloca %struct.ksz_port_info*, align 8
  %link_status.addr = alloca i16, align 2
  %cfg = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14478, metadata !DIExpression()), !dbg !14479
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !14480, metadata !DIExpression()), !dbg !14481
  store %struct.ksz_port_info* %info, %struct.ksz_port_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port_info** %info.addr, metadata !14482, metadata !DIExpression()), !dbg !14483
  store i16 %link_status, i16* %link_status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %link_status.addr, metadata !14484, metadata !DIExpression()), !dbg !14485
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14486
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 32, !dbg !14488
  %1 = load i32, i32* %features, align 8, !dbg !14488
  %and = and i32 %1, 4, !dbg !14489
  %tobool = icmp ne i32 %and, 0, !dbg !14489
  br i1 %tobool, label %land.lhs.true, label %if.end16, !dbg !14490

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14491
  %overrides = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 33, !dbg !14492
  %3 = load i32, i32* %overrides, align 4, !dbg !14492
  %and1 = and i32 %3, 1, !dbg !14493
  %tobool2 = icmp ne i32 %and1, 0, !dbg !14493
  br i1 %tobool2, label %if.end16, label %if.then, !dbg !14494

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %cfg, metadata !14495, metadata !DIExpression()), !dbg !14497
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14498
  %tx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 9, !dbg !14499
  %5 = load i32, i32* %tx_cfg, align 4, !dbg !14499
  store i32 %5, i32* %cfg, align 4, !dbg !14497
  %6 = load %struct.ksz_port_info*, %struct.ksz_port_info** %info.addr, align 8, !dbg !14500
  %duplex = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %6, i32 0, i32 2, !dbg !14502
  %7 = load i8, i8* %duplex, align 8, !dbg !14502
  %conv = zext i8 %7 to i32, !dbg !14500
  %cmp = icmp eq i32 1, %conv, !dbg !14503
  br i1 %cmp, label %if.then4, label %if.end, !dbg !14504

if.then4:                                         ; preds = %if.then
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14505
  %tx_cfg5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 9, !dbg !14506
  %9 = load i32, i32* %tx_cfg5, align 4, !dbg !14507
  %and6 = and i32 %9, -513, !dbg !14507
  store i32 %and6, i32* %tx_cfg5, align 4, !dbg !14507
  br label %if.end, !dbg !14505

if.end:                                           ; preds = %if.then4, %if.then
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14508
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 29, !dbg !14510
  %11 = load i8, i8* %enabled, align 1, !dbg !14510
  %conv7 = zext i8 %11 to i32, !dbg !14508
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !14508
  br i1 %tobool8, label %land.lhs.true9, label %if.end15, !dbg !14511

land.lhs.true9:                                   ; preds = %if.end
  %12 = load i32, i32* %cfg, align 4, !dbg !14512
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14513
  %tx_cfg10 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 9, !dbg !14514
  %14 = load i32, i32* %tx_cfg10, align 4, !dbg !14514
  %cmp11 = icmp ne i32 %12, %14, !dbg !14515
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !14516

if.then13:                                        ; preds = %land.lhs.true9
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14517
  %tx_cfg14 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %15, i32 0, i32 9, !dbg !14518
  %16 = load i32, i32* %tx_cfg14, align 4, !dbg !14518
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14519
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 0, !dbg !14520
  %18 = load i8*, i8** %io, align 8, !dbg !14520
  %add.ptr = getelementptr i8, i8* %18, i64 0, !dbg !14521
  call void @writel(i32 %16, i8* %add.ptr) #12, !dbg !14522
  br label %if.end15, !dbg !14522

if.end15:                                         ; preds = %if.then13, %land.lhs.true9, %if.end
  br label %if.end16, !dbg !14523

if.end16:                                         ; preds = %if.end15, %land.lhs.true, %entry
  ret void, !dbg !14524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_flow_ctrl(%struct.ksz_hw* %hw, i32 %rx, i32 %tx) #2 !dbg !14525 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %rx.addr = alloca i32, align 4
  %tx.addr = alloca i32, align 4
  %rx_cfg = alloca i32, align 4
  %tx_cfg = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14526, metadata !DIExpression()), !dbg !14527
  store i32 %rx, i32* %rx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rx.addr, metadata !14528, metadata !DIExpression()), !dbg !14529
  store i32 %tx, i32* %tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx.addr, metadata !14530, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.declare(metadata i32* %rx_cfg, metadata !14532, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.declare(metadata i32* %tx_cfg, metadata !14534, metadata !DIExpression()), !dbg !14535
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14536
  %rx_cfg1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 10, !dbg !14537
  %1 = load i32, i32* %rx_cfg1, align 8, !dbg !14537
  store i32 %1, i32* %rx_cfg, align 4, !dbg !14538
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14539
  %tx_cfg2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 9, !dbg !14540
  %3 = load i32, i32* %tx_cfg2, align 4, !dbg !14540
  store i32 %3, i32* %tx_cfg, align 4, !dbg !14541
  %4 = load i32, i32* %rx.addr, align 4, !dbg !14542
  %tobool = icmp ne i32 %4, 0, !dbg !14542
  br i1 %tobool, label %if.then, label %if.else, !dbg !14544

if.then:                                          ; preds = %entry
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14545
  %rx_cfg3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 10, !dbg !14546
  %6 = load i32, i32* %rx_cfg3, align 8, !dbg !14547
  %or = or i32 %6, 512, !dbg !14547
  store i32 %or, i32* %rx_cfg3, align 8, !dbg !14547
  br label %if.end, !dbg !14545

if.else:                                          ; preds = %entry
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14548
  %rx_cfg4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 10, !dbg !14549
  %8 = load i32, i32* %rx_cfg4, align 8, !dbg !14550
  %and = and i32 %8, -513, !dbg !14550
  store i32 %and, i32* %rx_cfg4, align 8, !dbg !14550
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %tx.addr, align 4, !dbg !14551
  %tobool5 = icmp ne i32 %9, 0, !dbg !14551
  br i1 %tobool5, label %if.then6, label %if.else9, !dbg !14553

if.then6:                                         ; preds = %if.end
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14554
  %tx_cfg7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 9, !dbg !14555
  %11 = load i32, i32* %tx_cfg7, align 4, !dbg !14556
  %or8 = or i32 %11, 512, !dbg !14556
  store i32 %or8, i32* %tx_cfg7, align 4, !dbg !14556
  br label %if.end12, !dbg !14554

if.else9:                                         ; preds = %if.end
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14557
  %tx_cfg10 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 9, !dbg !14558
  %13 = load i32, i32* %tx_cfg10, align 4, !dbg !14559
  %and11 = and i32 %13, -513, !dbg !14559
  store i32 %and11, i32* %tx_cfg10, align 4, !dbg !14559
  br label %if.end12

if.end12:                                         ; preds = %if.else9, %if.then6
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14560
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %14, i32 0, i32 29, !dbg !14562
  %15 = load i8, i8* %enabled, align 1, !dbg !14562
  %tobool13 = icmp ne i8 %15, 0, !dbg !14560
  br i1 %tobool13, label %if.then14, label %if.end26, !dbg !14563

if.then14:                                        ; preds = %if.end12
  %16 = load i32, i32* %rx_cfg, align 4, !dbg !14564
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14567
  %rx_cfg15 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 10, !dbg !14568
  %18 = load i32, i32* %rx_cfg15, align 8, !dbg !14568
  %cmp = icmp ne i32 %16, %18, !dbg !14569
  br i1 %cmp, label %if.then16, label %if.end18, !dbg !14570

if.then16:                                        ; preds = %if.then14
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14571
  %rx_cfg17 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %19, i32 0, i32 10, !dbg !14572
  %20 = load i32, i32* %rx_cfg17, align 8, !dbg !14572
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14573
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %21, i32 0, i32 0, !dbg !14574
  %22 = load i8*, i8** %io, align 8, !dbg !14574
  %add.ptr = getelementptr i8, i8* %22, i64 4, !dbg !14575
  call void @writel(i32 %20, i8* %add.ptr) #12, !dbg !14576
  br label %if.end18, !dbg !14576

if.end18:                                         ; preds = %if.then16, %if.then14
  %23 = load i32, i32* %tx_cfg, align 4, !dbg !14577
  %24 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14579
  %tx_cfg19 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %24, i32 0, i32 9, !dbg !14580
  %25 = load i32, i32* %tx_cfg19, align 4, !dbg !14580
  %cmp20 = icmp ne i32 %23, %25, !dbg !14581
  br i1 %cmp20, label %if.then21, label %if.end25, !dbg !14582

if.then21:                                        ; preds = %if.end18
  %26 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14583
  %tx_cfg22 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %26, i32 0, i32 9, !dbg !14584
  %27 = load i32, i32* %tx_cfg22, align 4, !dbg !14584
  %28 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14585
  %io23 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %28, i32 0, i32 0, !dbg !14586
  %29 = load i8*, i8** %io23, align 8, !dbg !14586
  %add.ptr24 = getelementptr i8, i8* %29, i64 0, !dbg !14587
  call void @writel(i32 %27, i8* %add.ptr24) #12, !dbg !14588
  br label %if.end25, !dbg !14588

if.end25:                                         ; preds = %if.then21, %if.end18
  br label %if.end26, !dbg !14589

if.end26:                                         ; preds = %if.end25, %if.end12
  ret void, !dbg !14590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #2 !dbg !14591 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14594, metadata !DIExpression()), !dbg !14595
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14596
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !14597
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !14598
  ret i1 %call, !dbg !14599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_media_state(%struct.net_device* %dev, i32 %media_state) #2 !dbg !14600 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %media_state.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14601, metadata !DIExpression()), !dbg !14602
  store i32 %media_state, i32* %media_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %media_state.addr, metadata !14603, metadata !DIExpression()), !dbg !14604
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !14605, metadata !DIExpression()), !dbg !14606
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14607
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14608
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !14608
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !14606
  %2 = load i32, i32* %media_state.addr, align 4, !dbg !14609
  %3 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14611
  %media_state1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %3, i32 0, i32 8, !dbg !14612
  %4 = load i32, i32* %media_state1, align 8, !dbg !14612
  %cmp = icmp eq i32 %2, %4, !dbg !14613
  br i1 %cmp, label %if.then, label %if.else, !dbg !14614

if.then:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14615
  call void @netif_carrier_on(%struct.net_device* %5) #12, !dbg !14616
  br label %if.end, !dbg !14616

if.else:                                          ; preds = %entry
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14617
  call void @netif_carrier_off(%struct.net_device* %6) #12, !dbg !14618
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !14619

do.body:                                          ; preds = %if.end
  %7 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14620
  %msg_enable = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %7, i32 0, i32 7, !dbg !14620
  %8 = load i32, i32* %msg_enable, align 4, !dbg !14620
  %and = and i32 %8, 4, !dbg !14620
  %tobool = icmp ne i32 %and, 0, !dbg !14620
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !14623

if.then2:                                         ; preds = %do.body
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14620
  %10 = load i32, i32* %media_state.addr, align 4, !dbg !14620
  %11 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14620
  %media_state3 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %11, i32 0, i32 8, !dbg !14620
  %12 = load i32, i32* %media_state3, align 8, !dbg !14620
  %cmp4 = icmp eq i32 %10, %12, !dbg !14620
  %13 = zext i1 %cmp4 to i64, !dbg !14620
  %cond = select i1 %cmp4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), !dbg !14620
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* %cond) #13, !dbg !14620
  br label %if.end5, !dbg !14620

if.end5:                                          ; preds = %if.then2, %do.body
  br label %do.end, !dbg !14623

do.end:                                           ; preds = %if.end5
  ret void, !dbg !14624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !14625 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !14632, metadata !DIExpression()), !dbg !14634
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !14636, metadata !DIExpression()), !dbg !14637
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !14638, metadata !DIExpression()), !dbg !14639
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14640, metadata !DIExpression()), !dbg !14642
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14644, metadata !DIExpression()), !dbg !14645
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14646, metadata !DIExpression()), !dbg !14651
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14653, metadata !DIExpression()), !dbg !14654
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14655, metadata !DIExpression()), !dbg !14656
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14657, metadata !DIExpression()), !dbg !14658
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14659
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14660
  %div = sdiv i64 %1, 64, !dbg !14660
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14661
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14659
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14662
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14663
  %conv.i = trunc i64 %4 to i32, !dbg !14663
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #15, !dbg !14664
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14665
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14665
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #15, !dbg !14665
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14666
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !14666
  br i1 %8, label %cond.true, label %cond.false, !dbg !14666

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !14666
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !14666
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !14667
  %and.i = and i64 %11, 63, !dbg !14668
  %shl.i = shl i64 1, %and.i, !dbg !14669
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !14670
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !14671
  %shr.i = ashr i64 %13, 6, !dbg !14672
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !14670
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !14670
  %and1.i = and i64 %shl.i, %14, !dbg !14673
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !14674
  %conv = zext i1 %cmp.i to i32, !dbg !14666
  br label %cond.end, !dbg !14666

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !14666
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !14666
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !14675
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !14676
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !14677, !srcloc !14678
  store i8 %19, i8* %oldbit.i, align 1, !dbg !14677
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !14679
  %tobool.i = trunc i8 %20 to i1, !dbg !14679
  %conv2 = zext i1 %tobool.i to i32, !dbg !14666
  br label %cond.end, !dbg !14666

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !14666
  %tobool = icmp ne i32 %cond, 0, !dbg !14666
  ret i1 %tobool, !dbg !14680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !14681 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14685, metadata !DIExpression()), !dbg !14686
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14687, metadata !DIExpression()), !dbg !14688
  ret i1 true, !dbg !14689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !14690 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14694, metadata !DIExpression()), !dbg !14695
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14696, metadata !DIExpression()), !dbg !14697
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14698, metadata !DIExpression()), !dbg !14699
  ret void, !dbg !14700
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_w_phy(%struct.ksz_hw* %hw, i32 %port, i16 zeroext %reg, i16 zeroext %val) #2 !dbg !14701 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %phy = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14704, metadata !DIExpression()), !dbg !14705
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14706, metadata !DIExpression()), !dbg !14707
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !14708, metadata !DIExpression()), !dbg !14709
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14710, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.declare(metadata i32* %phy, metadata !14712, metadata !DIExpression()), !dbg !14713
  %0 = load i32, i32* %port.addr, align 4, !dbg !14714
  %mul = mul i32 %0, 16, !dbg !14715
  %add = add i32 1232, %mul, !dbg !14716
  %1 = load i16, i16* %reg.addr, align 2, !dbg !14717
  %conv = zext i16 %1 to i32, !dbg !14717
  %add1 = add i32 %add, %conv, !dbg !14718
  store i32 %add1, i32* %phy, align 4, !dbg !14719
  %2 = load i16, i16* %val.addr, align 2, !dbg !14720
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14721
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !14722
  %4 = load i8*, i8** %io, align 8, !dbg !14722
  %5 = load i32, i32* %phy, align 4, !dbg !14723
  %idx.ext = sext i32 %5 to i64, !dbg !14724
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !14724
  call void @writew(i16 zeroext %2, i8* %add.ptr) #12, !dbg !14725
  ret void, !dbg !14726
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @prepare_hardware(%struct.net_device* %dev) #2 !dbg !14727 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %rc = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14728, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !14730, metadata !DIExpression()), !dbg !14731
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14732
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !14733
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !14733
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !14731
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !14734, metadata !DIExpression()), !dbg !14735
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !14736
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !14737
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !14737
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !14735
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !14738, metadata !DIExpression()), !dbg !14739
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !14740
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !14741
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !14739
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !14742, metadata !DIExpression()), !dbg !14743
  store i32 0, i32* %rc, align 4, !dbg !14743
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14744
  %6 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !14745
  %dev2 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %6, i32 0, i32 0, !dbg !14746
  store %struct.net_device* %5, %struct.net_device** %dev2, align 8, !dbg !14747
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14748
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 6, !dbg !14749
  %8 = load i32, i32* %irq, align 8, !dbg !14749
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14750
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 0, !dbg !14751
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !14750
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14752
  %11 = bitcast %struct.net_device* %10 to i8*, !dbg !14752
  %call3 = call i32 @request_irq(i32 %8, i32 (i32, i8*)* @netdev_intr, i64 128, i8* %arraydecay, i8* %11) #12, !dbg !14753
  store i32 %call3, i32* %rc, align 4, !dbg !14754
  %12 = load i32, i32* %rc, align 4, !dbg !14755
  %tobool = icmp ne i32 %12, 0, !dbg !14755
  br i1 %tobool, label %if.then, label %if.end, !dbg !14757

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %rc, align 4, !dbg !14758
  store i32 %13, i32* %retval, align 4, !dbg !14759
  br label %return, !dbg !14759

if.end:                                           ; preds = %entry
  %14 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !14760
  %rx_tasklet = getelementptr inbounds %struct.dev_info, %struct.dev_info* %14, i32 0, i32 15, !dbg !14761
  call void @tasklet_setup(%struct.tasklet_struct* %rx_tasklet, void (%struct.tasklet_struct*)* @rx_proc_task) #12, !dbg !14762
  %15 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !14763
  %tx_tasklet = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 16, !dbg !14764
  call void @tasklet_setup(%struct.tasklet_struct* %tx_tasklet, void (%struct.tasklet_struct*)* @tx_proc_task) #12, !dbg !14765
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14766
  %promiscuous = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 24, !dbg !14767
  store i8 0, i8* %promiscuous, align 2, !dbg !14768
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14769
  %all_multi = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 25, !dbg !14770
  store i8 0, i8* %all_multi, align 1, !dbg !14771
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14772
  %multi_list_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 28, !dbg !14773
  store i8 0, i8* %multi_list_size, align 4, !dbg !14774
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14775
  call void @hw_reset(%struct.ksz_hw* %19) #12, !dbg !14776
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14777
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14778
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %21, i32 0, i32 15, !dbg !14779
  %ring_phys = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info, i32 0, i32 3, !dbg !14780
  %22 = load i32, i32* %ring_phys, align 8, !dbg !14780
  %23 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14781
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %23, i32 0, i32 14, !dbg !14782
  %ring_phys4 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info, i32 0, i32 3, !dbg !14783
  %24 = load i32, i32* %ring_phys4, align 8, !dbg !14783
  call void @hw_set_desc_base(%struct.ksz_hw* %20, i32 %22, i32 %24) #12, !dbg !14784
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14785
  call void @hw_set_addr(%struct.ksz_hw* %25) #12, !dbg !14786
  %26 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !14787
  %27 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !14788
  call void @hw_cfg_huge_frame(%struct.dev_info* %26, %struct.ksz_hw* %27) #12, !dbg !14789
  %28 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !14790
  call void @ksz_init_rx_buffers(%struct.dev_info* %28) #12, !dbg !14791
  store i32 0, i32* %retval, align 4, !dbg !14792
  br label %return, !dbg !14792

return:                                           ; preds = %if.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !14793
  ret i32 %29, !dbg !14793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_init_cnt(%struct.ksz_hw* %hw, i32 %port) #2 !dbg !14794 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %mib = alloca %struct.ksz_port_mib*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14795, metadata !DIExpression()), !dbg !14796
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14797, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.declare(metadata %struct.ksz_port_mib** %mib, metadata !14799, metadata !DIExpression()), !dbg !14800
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14801
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 3, !dbg !14802
  %1 = load i32, i32* %port.addr, align 4, !dbg !14803
  %idxprom = sext i32 %1 to i64, !dbg !14801
  %arrayidx = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom, !dbg !14801
  store %struct.ksz_port_mib* %arrayidx, %struct.ksz_port_mib** %mib, align 8, !dbg !14800
  %2 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14804
  %cnt_ptr = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %2, i32 0, i32 0, !dbg !14805
  store i8 0, i8* %cnt_ptr, align 8, !dbg !14806
  %3 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14807
  %mib_start = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %3, i32 0, i32 3, !dbg !14809
  %4 = load i8, i8* %mib_start, align 1, !dbg !14809
  %conv = zext i8 %4 to i32, !dbg !14807
  %cmp = icmp slt i32 %conv, 32, !dbg !14810
  br i1 %cmp, label %if.then, label %if.end, !dbg !14811

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14812

do.body:                                          ; preds = %do.cond, %if.then
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14813
  %6 = load i32, i32* %port.addr, align 4, !dbg !14815
  %7 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14816
  %cnt_ptr2 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %7, i32 0, i32 0, !dbg !14817
  %8 = load i8, i8* %cnt_ptr2, align 8, !dbg !14817
  %conv3 = zext i8 %8 to i16, !dbg !14816
  %9 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14818
  %counter = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %9, i32 0, i32 4, !dbg !14819
  %10 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14820
  %cnt_ptr4 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %10, i32 0, i32 0, !dbg !14821
  %11 = load i8, i8* %cnt_ptr4, align 8, !dbg !14821
  %idxprom5 = zext i8 %11 to i64, !dbg !14818
  %arrayidx6 = getelementptr [34 x i64], [34 x i64]* %counter, i64 0, i64 %idxprom5, !dbg !14818
  call void @port_r_mib_cnt(%struct.ksz_hw* %5, i32 %6, i16 zeroext %conv3, i64* %arrayidx6) #12, !dbg !14822
  %12 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14823
  %cnt_ptr7 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %12, i32 0, i32 0, !dbg !14824
  %13 = load i8, i8* %cnt_ptr7, align 8, !dbg !14825
  %inc = add i8 %13, 1, !dbg !14825
  store i8 %inc, i8* %cnt_ptr7, align 8, !dbg !14825
  br label %do.cond, !dbg !14826

do.cond:                                          ; preds = %do.body
  %14 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14827
  %cnt_ptr8 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %14, i32 0, i32 0, !dbg !14828
  %15 = load i8, i8* %cnt_ptr8, align 8, !dbg !14828
  %conv9 = zext i8 %15 to i32, !dbg !14827
  %cmp10 = icmp slt i32 %conv9, 32, !dbg !14829
  br i1 %cmp10, label %do.body, label %do.end, !dbg !14826, !llvm.loop !14830

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !14826

if.end:                                           ; preds = %do.end, %entry
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14832
  %mib_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 7, !dbg !14834
  %17 = load i32, i32* %mib_cnt, align 4, !dbg !14834
  %cmp12 = icmp sgt i32 %17, 32, !dbg !14835
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !14836

if.then14:                                        ; preds = %if.end
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14837
  %19 = load i32, i32* %port.addr, align 4, !dbg !14838
  %20 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14839
  %dropped = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %20, i32 0, i32 5, !dbg !14840
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %dropped, i64 0, i64 0, !dbg !14839
  %21 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14841
  %counter15 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %21, i32 0, i32 4, !dbg !14842
  %arrayidx16 = getelementptr [34 x i64], [34 x i64]* %counter15, i64 0, i64 32, !dbg !14841
  call void @port_r_mib_pkt(%struct.ksz_hw* %18, i32 %19, i32* %arraydecay, i64* %arrayidx16) #12, !dbg !14843
  br label %if.end17, !dbg !14843

if.end17:                                         ; preds = %if.then14, %if.end
  %22 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14844
  %counter18 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %22, i32 0, i32 4, !dbg !14845
  %arraydecay19 = getelementptr inbounds [34 x i64], [34 x i64]* %counter18, i64 0, i64 0, !dbg !14846
  %23 = bitcast i64* %arraydecay19 to i8*, !dbg !14846
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 272, i1 false), !dbg !14846
  %24 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %mib, align 8, !dbg !14847
  %cnt_ptr20 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %24, i32 0, i32 0, !dbg !14848
  store i8 0, i8* %cnt_ptr20, align 8, !dbg !14849
  ret void, !dbg !14850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_add_wol_bcast(%struct.ksz_hw* %hw) #2 !dbg !8271 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14851, metadata !DIExpression()), !dbg !14852
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14853
  call void @hw_set_wol_frame(%struct.ksz_hw* %0, i32 2, i32 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @hw_add_wol_bcast.mask, i64 0, i64 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @hw_add_wol_bcast.pattern, i64 0, i64 0)) #12, !dbg !14854
  ret void, !dbg !14855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_cfg_wol_pme(%struct.ksz_hw* %hw, i32 %set) #2 !dbg !14856 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %set.addr = alloca i32, align 4
  %hw_priv = alloca %struct.dev_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_info*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14857, metadata !DIExpression()), !dbg !14858
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !14859, metadata !DIExpression()), !dbg !14860
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !14861, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14863, metadata !DIExpression()), !dbg !14865
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14865
  %1 = bitcast %struct.ksz_hw* %0 to i8*, !dbg !14865
  store i8* %1, i8** %__mptr, align 8, !dbg !14865
  br label %do.body, !dbg !14865

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14866

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14865
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !14865
  %3 = bitcast i8* %add.ptr to %struct.dev_info*, !dbg !14865
  store %struct.dev_info* %3, %struct.dev_info** %tmp, align 8, !dbg !14866
  %4 = load %struct.dev_info*, %struct.dev_info** %tmp, align 8, !dbg !14865
  store %struct.dev_info* %4, %struct.dev_info** %hw_priv, align 8, !dbg !14862
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !14868, metadata !DIExpression()), !dbg !14869
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !14870
  %pdev1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 1, !dbg !14871
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !14871
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !14869
  call void @llvm.dbg.declare(metadata i16* %data, metadata !14872, metadata !DIExpression()), !dbg !14873
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14874
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 28, !dbg !14876
  %8 = load i8, i8* %pm_cap, align 1, !dbg !14876
  %tobool = icmp ne i8 %8, 0, !dbg !14874
  br i1 %tobool, label %if.end, label %if.then, !dbg !14877

if.then:                                          ; preds = %do.end
  br label %return, !dbg !14878

if.end:                                           ; preds = %do.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14879
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14880
  %pm_cap2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 28, !dbg !14881
  %11 = load i8, i8* %pm_cap2, align 1, !dbg !14881
  %conv = zext i8 %11 to i32, !dbg !14880
  %add = add i32 %conv, 4, !dbg !14882
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %9, i32 %add, i16* %data) #12, !dbg !14883
  %12 = load i16, i16* %data, align 2, !dbg !14884
  %conv3 = zext i16 %12 to i32, !dbg !14884
  %and = and i32 %conv3, -4, !dbg !14884
  %conv4 = trunc i32 %and to i16, !dbg !14884
  store i16 %conv4, i16* %data, align 2, !dbg !14884
  %13 = load i32, i32* %set.addr, align 4, !dbg !14885
  %tobool5 = icmp ne i32 %13, 0, !dbg !14885
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !14887

if.then6:                                         ; preds = %if.end
  %14 = load i16, i16* %data, align 2, !dbg !14888
  %conv7 = zext i16 %14 to i32, !dbg !14888
  %or = or i32 %conv7, 259, !dbg !14888
  %conv8 = trunc i32 %or to i16, !dbg !14888
  store i16 %conv8, i16* %data, align 2, !dbg !14888
  br label %if.end12, !dbg !14889

if.else:                                          ; preds = %if.end
  %15 = load i16, i16* %data, align 2, !dbg !14890
  %conv9 = zext i16 %15 to i32, !dbg !14890
  %and10 = and i32 %conv9, -257, !dbg !14890
  %conv11 = trunc i32 %and10 to i16, !dbg !14890
  store i16 %conv11, i16* %data, align 2, !dbg !14890
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then6
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14891
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14892
  %pm_cap13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 28, !dbg !14893
  %18 = load i8, i8* %pm_cap13, align 1, !dbg !14893
  %conv14 = zext i8 %18 to i32, !dbg !14892
  %add15 = add i32 %conv14, 4, !dbg !14894
  %19 = load i16, i16* %data, align 2, !dbg !14895
  %call16 = call i32 @pci_write_config_word(%struct.pci_dev* %16, i32 %add15, i16 zeroext %19) #12, !dbg !14896
  br label %return, !dbg !14897

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !14897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_add_addr(%struct.ksz_hw* %hw, i8* %mac_addr) #2 !dbg !14898 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %mac_addr.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !14901, metadata !DIExpression()), !dbg !14902
  store i8* %mac_addr, i8** %mac_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac_addr.addr, metadata !14903, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14905, metadata !DIExpression()), !dbg !14906
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14907, metadata !DIExpression()), !dbg !14908
  store i32 16, i32* %j, align 4, !dbg !14908
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14909
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 20, !dbg !14911
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr, i64 0, i64 0, !dbg !14909
  %1 = load i8*, i8** %mac_addr.addr, align 8, !dbg !14912
  %call = call zeroext i1 @ether_addr_equal(i8* %arraydecay, i8* %1) #12, !dbg !14913
  br i1 %call, label %if.then, label %if.end, !dbg !14914

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14915
  br label %return, !dbg !14915

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14916
  br label %for.cond, !dbg !14918

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !14919
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14921
  %addr_list_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 22, !dbg !14922
  %4 = load i8, i8* %addr_list_size, align 8, !dbg !14922
  %conv = zext i8 %4 to i32, !dbg !14921
  %cmp = icmp slt i32 %2, %conv, !dbg !14923
  br i1 %cmp, label %for.body, label %for.end, !dbg !14924

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14925
  %address = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 21, !dbg !14928
  %6 = load i32, i32* %i, align 4, !dbg !14929
  %idxprom = sext i32 %6 to i64, !dbg !14925
  %arrayidx = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address, i64 0, i64 %idxprom, !dbg !14925
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx, i64 0, i64 0, !dbg !14925
  %7 = load i8*, i8** %mac_addr.addr, align 8, !dbg !14930
  %call3 = call zeroext i1 @ether_addr_equal(i8* %arraydecay2, i8* %7) #12, !dbg !14931
  br i1 %call3, label %if.then4, label %if.end5, !dbg !14932

if.then4:                                         ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !14933
  br label %return, !dbg !14933

if.end5:                                          ; preds = %for.body
  %8 = load i32, i32* %j, align 4, !dbg !14934
  %cmp6 = icmp eq i32 16, %8, !dbg !14936
  br i1 %cmp6, label %land.lhs.true, label %if.end14, !dbg !14937

land.lhs.true:                                    ; preds = %if.end5
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14938
  %address8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 21, !dbg !14939
  %10 = load i32, i32* %i, align 4, !dbg !14940
  %idxprom9 = sext i32 %10 to i64, !dbg !14938
  %arrayidx10 = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address8, i64 0, i64 %idxprom9, !dbg !14938
  %arraydecay11 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx10, i64 0, i64 0, !dbg !14938
  %call12 = call i32 @empty_addr(i8* %arraydecay11) #12, !dbg !14941
  %tobool = icmp ne i32 %call12, 0, !dbg !14941
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !14942

if.then13:                                        ; preds = %land.lhs.true
  %11 = load i32, i32* %i, align 4, !dbg !14943
  store i32 %11, i32* %j, align 4, !dbg !14944
  br label %if.end14, !dbg !14945

if.end14:                                         ; preds = %if.then13, %land.lhs.true, %if.end5
  br label %for.inc, !dbg !14946

for.inc:                                          ; preds = %if.end14
  %12 = load i32, i32* %i, align 4, !dbg !14947
  %inc = add i32 %12, 1, !dbg !14947
  store i32 %inc, i32* %i, align 4, !dbg !14947
  br label %for.cond, !dbg !14948, !llvm.loop !14949

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %j, align 4, !dbg !14951
  %cmp15 = icmp slt i32 %13, 16, !dbg !14953
  br i1 %cmp15, label %if.then17, label %if.end26, !dbg !14954

if.then17:                                        ; preds = %for.end
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14955
  %address18 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %14, i32 0, i32 21, !dbg !14957
  %15 = load i32, i32* %j, align 4, !dbg !14958
  %idxprom19 = sext i32 %15 to i64, !dbg !14955
  %arrayidx20 = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address18, i64 0, i64 %idxprom19, !dbg !14955
  %arraydecay21 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx20, i64 0, i64 0, !dbg !14959
  %16 = load i8*, i8** %mac_addr.addr, align 8, !dbg !14960
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay21, i8* align 1 %16, i64 6, i1 false), !dbg !14959
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14961
  %18 = load i32, i32* %j, align 4, !dbg !14962
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !14963
  %address22 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %19, i32 0, i32 21, !dbg !14964
  %20 = load i32, i32* %j, align 4, !dbg !14965
  %idxprom23 = sext i32 %20 to i64, !dbg !14963
  %arrayidx24 = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address22, i64 0, i64 %idxprom23, !dbg !14963
  %arraydecay25 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx24, i64 0, i64 0, !dbg !14963
  call void @hw_ena_add_addr(%struct.ksz_hw* %17, i32 %18, i8* %arraydecay25) #12, !dbg !14966
  store i32 0, i32* %retval, align 4, !dbg !14967
  br label %return, !dbg !14967

if.end26:                                         ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !14968
  br label %return, !dbg !14968

return:                                           ; preds = %if.end26, %if.then17, %if.then4, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !14969
  ret i32 %21, !dbg !14969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_force_link_speed(%struct.ksz_port* %port) #2 !dbg !14970 {
entry:
  %port.addr = alloca %struct.ksz_port*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %data = alloca i16, align 2
  %i = alloca i32, align 4
  %phy = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !14971, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !14973, metadata !DIExpression()), !dbg !14974
  %0 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14975
  %hw1 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %0, i32 0, i32 8, !dbg !14976
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw1, align 8, !dbg !14976
  store %struct.ksz_hw* %1, %struct.ksz_hw** %hw, align 8, !dbg !14974
  call void @llvm.dbg.declare(metadata i16* %data, metadata !14977, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14979, metadata !DIExpression()), !dbg !14980
  call void @llvm.dbg.declare(metadata i32* %phy, metadata !14981, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.declare(metadata i32* %p, metadata !14983, metadata !DIExpression()), !dbg !14984
  store i32 0, i32* %i, align 4, !dbg !14985
  %2 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14987
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %2, i32 0, i32 4, !dbg !14988
  %3 = load i32, i32* %first_port, align 4, !dbg !14988
  store i32 %3, i32* %p, align 4, !dbg !14989
  br label %for.cond, !dbg !14990

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !14991
  %5 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !14993
  %port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %5, i32 0, i32 6, !dbg !14994
  %6 = load i32, i32* %port_cnt, align 4, !dbg !14994
  %cmp = icmp slt i32 %4, %6, !dbg !14995
  br i1 %cmp, label %for.body, label %for.end, !dbg !14996

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %p, align 4, !dbg !14997
  %mul = mul i32 %7, 16, !dbg !14999
  %add = add i32 1232, %mul, !dbg !15000
  store i32 %add, i32* %phy, align 4, !dbg !15001
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15002
  %9 = load i32, i32* %phy, align 4, !dbg !15003
  call void @hw_r_phy_ctrl(%struct.ksz_hw* %8, i32 %9, i16* %data) #12, !dbg !15004
  %10 = load i16, i16* %data, align 2, !dbg !15005
  %conv = zext i16 %10 to i32, !dbg !15005
  %and = and i32 %conv, -4097, !dbg !15005
  %conv2 = trunc i32 %and to i16, !dbg !15005
  store i16 %conv2, i16* %data, align 2, !dbg !15005
  %11 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15006
  %speed = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %11, i32 0, i32 1, !dbg !15008
  %12 = load i8, i8* %speed, align 1, !dbg !15008
  %conv3 = zext i8 %12 to i32, !dbg !15006
  %cmp4 = icmp eq i32 10, %conv3, !dbg !15009
  br i1 %cmp4, label %if.then, label %if.else, !dbg !15010

if.then:                                          ; preds = %for.body
  %13 = load i16, i16* %data, align 2, !dbg !15011
  %conv6 = zext i16 %13 to i32, !dbg !15011
  %and7 = and i32 %conv6, -8193, !dbg !15011
  %conv8 = trunc i32 %and7 to i16, !dbg !15011
  store i16 %conv8, i16* %data, align 2, !dbg !15011
  br label %if.end16, !dbg !15012

if.else:                                          ; preds = %for.body
  %14 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15013
  %speed9 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %14, i32 0, i32 1, !dbg !15015
  %15 = load i8, i8* %speed9, align 1, !dbg !15015
  %conv10 = zext i8 %15 to i32, !dbg !15013
  %cmp11 = icmp eq i32 100, %conv10, !dbg !15016
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !15017

if.then13:                                        ; preds = %if.else
  %16 = load i16, i16* %data, align 2, !dbg !15018
  %conv14 = zext i16 %16 to i32, !dbg !15018
  %or = or i32 %conv14, 8192, !dbg !15018
  %conv15 = trunc i32 %or to i16, !dbg !15018
  store i16 %conv15, i16* %data, align 2, !dbg !15018
  br label %if.end, !dbg !15019

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %17 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15020
  %duplex = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %17, i32 0, i32 0, !dbg !15022
  %18 = load i8, i8* %duplex, align 8, !dbg !15022
  %conv17 = zext i8 %18 to i32, !dbg !15020
  %cmp18 = icmp eq i32 1, %conv17, !dbg !15023
  br i1 %cmp18, label %if.then20, label %if.else24, !dbg !15024

if.then20:                                        ; preds = %if.end16
  %19 = load i16, i16* %data, align 2, !dbg !15025
  %conv21 = zext i16 %19 to i32, !dbg !15025
  %and22 = and i32 %conv21, -257, !dbg !15025
  %conv23 = trunc i32 %and22 to i16, !dbg !15025
  store i16 %conv23, i16* %data, align 2, !dbg !15025
  br label %if.end34, !dbg !15026

if.else24:                                        ; preds = %if.end16
  %20 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15027
  %duplex25 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %20, i32 0, i32 0, !dbg !15029
  %21 = load i8, i8* %duplex25, align 8, !dbg !15029
  %conv26 = zext i8 %21 to i32, !dbg !15027
  %cmp27 = icmp eq i32 2, %conv26, !dbg !15030
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !15031

if.then29:                                        ; preds = %if.else24
  %22 = load i16, i16* %data, align 2, !dbg !15032
  %conv30 = zext i16 %22 to i32, !dbg !15032
  %or31 = or i32 %conv30, 256, !dbg !15032
  %conv32 = trunc i32 %or31 to i16, !dbg !15032
  store i16 %conv32, i16* %data, align 2, !dbg !15032
  br label %if.end33, !dbg !15033

if.end33:                                         ; preds = %if.then29, %if.else24
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then20
  %23 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15034
  %24 = load i32, i32* %phy, align 4, !dbg !15035
  %25 = load i16, i16* %data, align 2, !dbg !15036
  call void @hw_w_phy_ctrl(%struct.ksz_hw* %23, i32 %24, i16 zeroext %25) #12, !dbg !15037
  br label %for.inc, !dbg !15038

for.inc:                                          ; preds = %if.end34
  %26 = load i32, i32* %i, align 4, !dbg !15039
  %inc = add i32 %26, 1, !dbg !15039
  store i32 %inc, i32* %i, align 4, !dbg !15039
  %27 = load i32, i32* %p, align 4, !dbg !15040
  %inc35 = add i32 %27, 1, !dbg !15040
  store i32 %inc35, i32* %p, align 4, !dbg !15040
  br label %for.cond, !dbg !15041, !llvm.loop !15042

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_set_link_speed(%struct.ksz_port* %port) #2 !dbg !15045 {
entry:
  %port.addr = alloca %struct.ksz_port*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %data = alloca i16, align 2
  %cfg = alloca i16, align 2
  %status = alloca i8, align 1
  %i = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !15046, metadata !DIExpression()), !dbg !15047
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !15048, metadata !DIExpression()), !dbg !15049
  %0 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15050
  %hw1 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %0, i32 0, i32 8, !dbg !15051
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw1, align 8, !dbg !15051
  store %struct.ksz_hw* %1, %struct.ksz_hw** %hw, align 8, !dbg !15049
  call void @llvm.dbg.declare(metadata i16* %data, metadata !15052, metadata !DIExpression()), !dbg !15053
  call void @llvm.dbg.declare(metadata i16* %cfg, metadata !15054, metadata !DIExpression()), !dbg !15055
  call void @llvm.dbg.declare(metadata i8* %status, metadata !15056, metadata !DIExpression()), !dbg !15057
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15058, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.declare(metadata i32* %p, metadata !15060, metadata !DIExpression()), !dbg !15061
  store i32 0, i32* %i, align 4, !dbg !15062
  %2 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15064
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %2, i32 0, i32 4, !dbg !15065
  %3 = load i32, i32* %first_port, align 4, !dbg !15065
  store i32 %3, i32* %p, align 4, !dbg !15066
  br label %for.cond, !dbg !15067

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !15068
  %5 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15070
  %port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %5, i32 0, i32 6, !dbg !15071
  %6 = load i32, i32* %port_cnt, align 4, !dbg !15071
  %cmp = icmp slt i32 %4, %6, !dbg !15072
  br i1 %cmp, label %for.body, label %for.end, !dbg !15073

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15074
  %8 = load i32, i32* %p, align 4, !dbg !15076
  call void @port_r16(%struct.ksz_hw* %7, i32 %8, i32 18, i16* %data) #12, !dbg !15077
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15078
  %10 = load i32, i32* %p, align 4, !dbg !15079
  call void @port_r8(%struct.ksz_hw* %9, i32 %10, i32 20, i8* %status) #12, !dbg !15080
  store i16 0, i16* %cfg, align 2, !dbg !15081
  %11 = load i8, i8* %status, align 1, !dbg !15082
  %conv = zext i8 %11 to i32, !dbg !15082
  %and = and i32 %conv, 32, !dbg !15084
  %tobool = icmp ne i32 %and, 0, !dbg !15084
  br i1 %tobool, label %if.then, label %if.end, !dbg !15085

if.then:                                          ; preds = %for.body
  %12 = load i16, i16* %data, align 2, !dbg !15086
  store i16 %12, i16* %cfg, align 2, !dbg !15087
  br label %if.end, !dbg !15088

if.end:                                           ; preds = %if.then, %for.body
  %13 = load i16, i16* %data, align 2, !dbg !15089
  %conv2 = zext i16 %13 to i32, !dbg !15089
  %or = or i32 %conv2, 128, !dbg !15089
  %conv3 = trunc i32 %or to i16, !dbg !15089
  store i16 %conv3, i16* %data, align 2, !dbg !15089
  %14 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15090
  %15 = load i16, i16* %data, align 2, !dbg !15091
  %call = call zeroext i16 @advertised_flow_ctrl(%struct.ksz_port* %14, i16 zeroext %15) #12, !dbg !15092
  store i16 %call, i16* %data, align 2, !dbg !15093
  %16 = load i16, i16* %data, align 2, !dbg !15094
  %conv4 = zext i16 %16 to i32, !dbg !15094
  %or5 = or i32 %conv4, 15, !dbg !15094
  %conv6 = trunc i32 %or5 to i16, !dbg !15094
  store i16 %conv6, i16* %data, align 2, !dbg !15094
  %17 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15095
  %speed = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %17, i32 0, i32 1, !dbg !15097
  %18 = load i8, i8* %speed, align 1, !dbg !15097
  %conv7 = zext i8 %18 to i32, !dbg !15095
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !15095
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !15098

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15099
  %duplex = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %19, i32 0, i32 0, !dbg !15100
  %20 = load i8, i8* %duplex, align 8, !dbg !15100
  %conv9 = zext i8 %20 to i32, !dbg !15099
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !15099
  br i1 %tobool10, label %if.then11, label %if.end49, !dbg !15101

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  %21 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15102
  %speed12 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %21, i32 0, i32 1, !dbg !15105
  %22 = load i8, i8* %speed12, align 1, !dbg !15105
  %conv13 = zext i8 %22 to i32, !dbg !15102
  %cmp14 = icmp eq i32 10, %conv13, !dbg !15106
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !15107

if.then16:                                        ; preds = %if.then11
  %23 = load i16, i16* %data, align 2, !dbg !15108
  %conv17 = zext i16 %23 to i32, !dbg !15108
  %and18 = and i32 %conv17, -13, !dbg !15108
  %conv19 = trunc i32 %and18 to i16, !dbg !15108
  store i16 %conv19, i16* %data, align 2, !dbg !15108
  br label %if.end29, !dbg !15109

if.else:                                          ; preds = %if.then11
  %24 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15110
  %speed20 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %24, i32 0, i32 1, !dbg !15112
  %25 = load i8, i8* %speed20, align 1, !dbg !15112
  %conv21 = zext i8 %25 to i32, !dbg !15110
  %cmp22 = icmp eq i32 100, %conv21, !dbg !15113
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !15114

if.then24:                                        ; preds = %if.else
  %26 = load i16, i16* %data, align 2, !dbg !15115
  %conv25 = zext i16 %26 to i32, !dbg !15115
  %and26 = and i32 %conv25, -4, !dbg !15115
  %conv27 = trunc i32 %and26 to i16, !dbg !15115
  store i16 %conv27, i16* %data, align 2, !dbg !15115
  br label %if.end28, !dbg !15116

if.end28:                                         ; preds = %if.then24, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then16
  %27 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15117
  %duplex30 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %27, i32 0, i32 0, !dbg !15119
  %28 = load i8, i8* %duplex30, align 8, !dbg !15119
  %conv31 = zext i8 %28 to i32, !dbg !15117
  %cmp32 = icmp eq i32 1, %conv31, !dbg !15120
  br i1 %cmp32, label %if.then34, label %if.else38, !dbg !15121

if.then34:                                        ; preds = %if.end29
  %29 = load i16, i16* %data, align 2, !dbg !15122
  %conv35 = zext i16 %29 to i32, !dbg !15122
  %and36 = and i32 %conv35, -11, !dbg !15122
  %conv37 = trunc i32 %and36 to i16, !dbg !15122
  store i16 %conv37, i16* %data, align 2, !dbg !15122
  br label %if.end48, !dbg !15123

if.else38:                                        ; preds = %if.end29
  %30 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !15124
  %duplex39 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %30, i32 0, i32 0, !dbg !15126
  %31 = load i8, i8* %duplex39, align 8, !dbg !15126
  %conv40 = zext i8 %31 to i32, !dbg !15124
  %cmp41 = icmp eq i32 2, %conv40, !dbg !15127
  br i1 %cmp41, label %if.then43, label %if.end47, !dbg !15128

if.then43:                                        ; preds = %if.else38
  %32 = load i16, i16* %data, align 2, !dbg !15129
  %conv44 = zext i16 %32 to i32, !dbg !15129
  %and45 = and i32 %conv44, -6, !dbg !15129
  %conv46 = trunc i32 %and45 to i16, !dbg !15129
  store i16 %conv46, i16* %data, align 2, !dbg !15129
  br label %if.end47, !dbg !15130

if.end47:                                         ; preds = %if.then43, %if.else38
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then34
  br label %if.end49, !dbg !15131

if.end49:                                         ; preds = %if.end48, %lor.lhs.false
  %33 = load i16, i16* %data, align 2, !dbg !15132
  %conv50 = zext i16 %33 to i32, !dbg !15132
  %34 = load i16, i16* %cfg, align 2, !dbg !15134
  %conv51 = zext i16 %34 to i32, !dbg !15134
  %cmp52 = icmp ne i32 %conv50, %conv51, !dbg !15135
  br i1 %cmp52, label %if.then54, label %if.end58, !dbg !15136

if.then54:                                        ; preds = %if.end49
  %35 = load i16, i16* %data, align 2, !dbg !15137
  %conv55 = zext i16 %35 to i32, !dbg !15137
  %or56 = or i32 %conv55, 8192, !dbg !15137
  %conv57 = trunc i32 %or56 to i16, !dbg !15137
  store i16 %conv57, i16* %data, align 2, !dbg !15137
  %36 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15139
  %37 = load i32, i32* %p, align 4, !dbg !15140
  %38 = load i16, i16* %data, align 2, !dbg !15141
  call void @port_w16(%struct.ksz_hw* %36, i32 %37, i32 18, i16 zeroext %38) #12, !dbg !15142
  br label %if.end58, !dbg !15143

if.end58:                                         ; preds = %if.then54, %if.end49
  br label %for.inc, !dbg !15144

for.inc:                                          ; preds = %if.end58
  %39 = load i32, i32* %i, align 4, !dbg !15145
  %inc = add i32 %39, 1, !dbg !15145
  store i32 %inc, i32* %i, align 4, !dbg !15145
  %40 = load i32, i32* %p, align 4, !dbg !15146
  %inc59 = add i32 %40, 1, !dbg !15146
  store i32 %inc59, i32* %p, align 4, !dbg !15146
  br label %for.cond, !dbg !15147, !llvm.loop !15148

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_setup_intr(%struct.ksz_hw* %hw) #2 !dbg !15151 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15152, metadata !DIExpression()), !dbg !15153
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15154
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 11, !dbg !15155
  store i32 -402653184, i32* %intr_mask, align 4, !dbg !15156
  ret void, !dbg !15157
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_enable(%struct.ksz_hw* %hw) #2 !dbg !15158 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15159, metadata !DIExpression()), !dbg !15160
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15161
  call void @hw_start_tx(%struct.ksz_hw* %0) #12, !dbg !15162
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15163
  call void @hw_start_rx(%struct.ksz_hw* %1) #12, !dbg !15164
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15165
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 29, !dbg !15166
  store i8 1, i8* %enabled, align 1, !dbg !15167
  ret void, !dbg !15168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_start_timer(%struct.ksz_timer_info* %info, i32 %time) #2 !dbg !15169 {
entry:
  %info.addr = alloca %struct.ksz_timer_info*, align 8
  %time.addr = alloca i32, align 4
  store %struct.ksz_timer_info* %info, %struct.ksz_timer_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_timer_info** %info.addr, metadata !15172, metadata !DIExpression()), !dbg !15173
  store i32 %time, i32* %time.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %time.addr, metadata !15174, metadata !DIExpression()), !dbg !15175
  %0 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !15176
  %cnt = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %0, i32 0, i32 1, !dbg !15177
  store i32 0, i32* %cnt, align 8, !dbg !15178
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !15179
  %2 = load i32, i32* %time.addr, align 4, !dbg !15180
  %conv = sext i32 %2 to i64, !dbg !15180
  %add = add i64 %1, %conv, !dbg !15181
  %3 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !15182
  %timer = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %3, i32 0, i32 0, !dbg !15183
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %timer, i32 0, i32 1, !dbg !15184
  store i64 %add, i64* %expires, align 8, !dbg !15185
  %4 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !15186
  %timer1 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %4, i32 0, i32 0, !dbg !15187
  call void @add_timer(%struct.timer_list* %timer1) #12, !dbg !15188
  %5 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !15189
  %max = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %5, i32 0, i32 2, !dbg !15190
  store i32 -1, i32* %max, align 4, !dbg !15191
  ret void, !dbg !15192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #2 !dbg !15193 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !15194, metadata !DIExpression()), !dbg !15198
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15200, metadata !DIExpression()), !dbg !15201
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15202
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !15203
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !15204
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !15205
  call void @clear_bit(i64 0, i64* %state.i) #15, !dbg !15206
  ret void, !dbg !15207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !15208 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !15216, metadata !DIExpression()), !dbg !15217
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !15218, metadata !DIExpression()), !dbg !15219
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !15220, metadata !DIExpression()), !dbg !15221
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15222, metadata !DIExpression()), !dbg !15223
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !15224, metadata !DIExpression()), !dbg !15225
  %0 = load i32, i32* %irq.addr, align 4, !dbg !15226
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !15227
  %2 = load i64, i64* %flags.addr, align 8, !dbg !15228
  %3 = load i8*, i8** %name.addr, align 8, !dbg !15229
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !15230
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !15231
  ret i32 %call, !dbg !15232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_intr(i32 %irq, i8* %dev_id) #2 !dbg !15233 {
entry:
  %lock.addr.i72 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i72, metadata !15234, metadata !DIExpression()), !dbg !15236
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !15234, metadata !DIExpression()), !dbg !15238
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15242, metadata !DIExpression()), !dbg !15244
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %int_enable = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %data = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !15246, metadata !DIExpression()), !dbg !15247
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !15248, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.declare(metadata i32* %int_enable, metadata !15250, metadata !DIExpression()), !dbg !15251
  store i32 0, i32* %int_enable, align 4, !dbg !15251
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15252, metadata !DIExpression()), !dbg !15253
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !15254
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !15255
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !15253
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !15256, metadata !DIExpression()), !dbg !15257
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15258
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !15259
  %3 = bitcast i8* %call to %struct.dev_priv*, !dbg !15259
  store %struct.dev_priv* %3, %struct.dev_priv** %priv, align 8, !dbg !15257
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !15260, metadata !DIExpression()), !dbg !15261
  %4 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !15262
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %4, i32 0, i32 0, !dbg !15263
  %5 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !15263
  store %struct.dev_info* %5, %struct.dev_info** %hw_priv, align 8, !dbg !15261
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !15264, metadata !DIExpression()), !dbg !15265
  %6 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15266
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %6, i32 0, i32 2, !dbg !15267
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !15265
  %7 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15268
  %hwlock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %7, i32 0, i32 4, !dbg !15269
  store %struct.spinlock* %hwlock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15270, !srcloc !15272
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15273
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !15273
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !15273
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15275
  call void @hw_read_intr(%struct.ksz_hw* %10, i32* %int_enable) #12, !dbg !15276
  %11 = load i32, i32* %int_enable, align 4, !dbg !15277
  %tobool = icmp ne i32 %11, 0, !dbg !15277
  br i1 %tobool, label %if.end, label %if.then, !dbg !15278

if.then:                                          ; preds = %entry
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15279
  %hwlock2 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 4, !dbg !15280
  store %struct.spinlock* %hwlock2, %struct.spinlock** %lock.addr.i70, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15281, !srcloc !15283
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !15284
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !15284
  %rlock.i71 = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !15284
  store i32 0, i32* %retval, align 4, !dbg !15286
  br label %return, !dbg !15286

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !15287

do.body:                                          ; preds = %if.end
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15288
  %16 = load i32, i32* %int_enable, align 4, !dbg !15290
  call void @hw_ack_intr(%struct.ksz_hw* %15, i32 %16) #12, !dbg !15291
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15292
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 11, !dbg !15293
  %18 = load i32, i32* %intr_mask, align 4, !dbg !15293
  %19 = load i32, i32* %int_enable, align 4, !dbg !15294
  %and = and i32 %19, %18, !dbg !15294
  store i32 %and, i32* %int_enable, align 4, !dbg !15294
  %20 = load i32, i32* %int_enable, align 4, !dbg !15295
  %and3 = and i32 %20, 1342177280, !dbg !15295
  %tobool4 = icmp ne i32 %and3, 0, !dbg !15295
  %lnot = xor i1 %tobool4, true, !dbg !15295
  %lnot5 = xor i1 %lnot, true, !dbg !15295
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !15295
  %conv = sext i32 %lnot.ext to i64, !dbg !15295
  %tobool6 = icmp ne i64 %conv, 0, !dbg !15295
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15297

if.then7:                                         ; preds = %do.body
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15298
  call void @hw_dis_intr_bit(%struct.ksz_hw* %21, i32 1342177280) #12, !dbg !15300
  %22 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15301
  %tx_tasklet = getelementptr inbounds %struct.dev_info, %struct.dev_info* %22, i32 0, i32 16, !dbg !15302
  call void @tasklet_schedule(%struct.tasklet_struct* %tx_tasklet) #12, !dbg !15303
  br label %if.end8, !dbg !15304

if.end8:                                          ; preds = %if.then7, %do.body
  %23 = load i32, i32* %int_enable, align 4, !dbg !15305
  %and9 = and i32 %23, 536870912, !dbg !15305
  %tobool10 = icmp ne i32 %and9, 0, !dbg !15305
  %lnot11 = xor i1 %tobool10, true, !dbg !15305
  %lnot13 = xor i1 %lnot11, true, !dbg !15305
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !15305
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !15305
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !15305
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !15307

if.then17:                                        ; preds = %if.end8
  %24 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15308
  call void @hw_dis_intr_bit(%struct.ksz_hw* %24, i32 536870912) #12, !dbg !15310
  %25 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15311
  %rx_tasklet = getelementptr inbounds %struct.dev_info, %struct.dev_info* %25, i32 0, i32 15, !dbg !15312
  call void @tasklet_schedule(%struct.tasklet_struct* %rx_tasklet) #12, !dbg !15313
  br label %if.end18, !dbg !15314

if.end18:                                         ; preds = %if.then17, %if.end8
  %26 = load i32, i32* %int_enable, align 4, !dbg !15315
  %and19 = and i32 %26, 134217728, !dbg !15315
  %tobool20 = icmp ne i32 %and19, 0, !dbg !15315
  %lnot21 = xor i1 %tobool20, true, !dbg !15315
  %lnot23 = xor i1 %lnot21, true, !dbg !15315
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !15315
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !15315
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !15315
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !15317

if.then27:                                        ; preds = %if.end18
  %27 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15318
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 24, !dbg !15320
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 14, !dbg !15321
  %28 = load i64, i64* %rx_fifo_errors, align 8, !dbg !15322
  %inc = add i64 %28, 1, !dbg !15322
  store i64 %inc, i64* %rx_fifo_errors, align 8, !dbg !15322
  %29 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15323
  call void @hw_resume_rx(%struct.ksz_hw* %29) #12, !dbg !15324
  br label %if.end28, !dbg !15325

if.end28:                                         ; preds = %if.then27, %if.end18
  %30 = load i32, i32* %int_enable, align 4, !dbg !15326
  %and29 = and i32 %30, -2147483648, !dbg !15326
  %tobool30 = icmp ne i32 %and29, 0, !dbg !15326
  %lnot31 = xor i1 %tobool30, true, !dbg !15326
  %lnot33 = xor i1 %lnot31, true, !dbg !15326
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !15326
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !15326
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !15326
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !15328

if.then37:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !15329, metadata !DIExpression()), !dbg !15331
  %31 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !15332
  %port38 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %31, i32 0, i32 1, !dbg !15333
  store %struct.ksz_port* %port38, %struct.ksz_port** %port, align 8, !dbg !15331
  %32 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15334
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %32, i32 0, i32 32, !dbg !15335
  %33 = load i32, i32* %features, align 8, !dbg !15336
  %or = or i32 %33, 1, !dbg !15336
  store i32 %or, i32* %features, align 8, !dbg !15336
  %34 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !15337
  call void @port_get_link_speed(%struct.ksz_port* %34) #12, !dbg !15338
  br label %if.end39, !dbg !15339

if.end39:                                         ; preds = %if.then37, %if.end28
  %35 = load i32, i32* %int_enable, align 4, !dbg !15340
  %and40 = and i32 %35, 33554432, !dbg !15340
  %tobool41 = icmp ne i32 %and40, 0, !dbg !15340
  %lnot42 = xor i1 %tobool41, true, !dbg !15340
  %lnot44 = xor i1 %lnot42, true, !dbg !15340
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !15340
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !15340
  %tobool47 = icmp ne i64 %conv46, 0, !dbg !15340
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !15342

if.then48:                                        ; preds = %if.end39
  %36 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15343
  call void @handle_rx_stop(%struct.ksz_hw* %36) #12, !dbg !15345
  br label %do.end, !dbg !15346

if.end49:                                         ; preds = %if.end39
  %37 = load i32, i32* %int_enable, align 4, !dbg !15347
  %and50 = and i32 %37, 67108864, !dbg !15347
  %tobool51 = icmp ne i32 %and50, 0, !dbg !15347
  %lnot52 = xor i1 %tobool51, true, !dbg !15347
  %lnot54 = xor i1 %lnot52, true, !dbg !15347
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !15347
  %conv56 = sext i32 %lnot.ext55 to i64, !dbg !15347
  %tobool57 = icmp ne i64 %conv56, 0, !dbg !15347
  br i1 %tobool57, label %if.then58, label %if.end68, !dbg !15349

if.then58:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %data, metadata !15350, metadata !DIExpression()), !dbg !15352
  %38 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15353
  %intr_mask59 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %38, i32 0, i32 11, !dbg !15354
  %39 = load i32, i32* %intr_mask59, align 4, !dbg !15355
  %and60 = and i32 %39, -67108865, !dbg !15355
  store i32 %and60, i32* %intr_mask59, align 4, !dbg !15355
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !15356
  %40 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15357
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %40, i32 0, i32 0, !dbg !15358
  %41 = load i8*, i8** %io, align 8, !dbg !15358
  %add.ptr = getelementptr i8, i8* %41, i64 0, !dbg !15359
  %call62 = call i32 @readl(i8* %add.ptr) #12, !dbg !15360
  store i32 %call62, i32* %data, align 4, !dbg !15361
  %42 = load i32, i32* %data, align 4, !dbg !15362
  %and63 = and i32 %42, 1, !dbg !15364
  %tobool64 = icmp ne i32 %and63, 0, !dbg !15364
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !15365

if.then65:                                        ; preds = %if.then58
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !15366
  br label %if.end67, !dbg !15366

if.end67:                                         ; preds = %if.then65, %if.then58
  br label %do.end, !dbg !15367

if.end68:                                         ; preds = %if.end49
  br label %do.end, !dbg !15368

do.end:                                           ; preds = %if.end68, %if.end67, %if.then48
  %43 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15369
  call void @hw_ena_intr(%struct.ksz_hw* %43) #12, !dbg !15370
  %44 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15371
  %hwlock69 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %44, i32 0, i32 4, !dbg !15372
  store %struct.spinlock* %hwlock69, %struct.spinlock** %lock.addr.i72, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15373, !srcloc !15283
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i72, align 8, !dbg !15374
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !15374
  %rlock.i73 = bitcast %union.anon.1* %46 to %struct.raw_spinlock*, !dbg !15374
  store i32 1, i32* %retval, align 4, !dbg !15375
  br label %return, !dbg !15375

return:                                           ; preds = %do.end, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !15376
  ret i32 %47, !dbg !15376
}

; Function Attrs: noredzone
declare dso_local void @tasklet_setup(%struct.tasklet_struct*, void (%struct.tasklet_struct*)*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_proc_task(%struct.tasklet_struct* %t) #2 !dbg !15377 {
entry:
  %lock.addr.i9 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i9, metadata !13087, metadata !DIExpression()), !dbg !15378
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13093, metadata !DIExpression()), !dbg !15382
  %t.addr = alloca %struct.tasklet_struct*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !15384, metadata !DIExpression()), !dbg !15385
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !15386, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15388, metadata !DIExpression()), !dbg !15390
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !15390
  %1 = bitcast %struct.tasklet_struct* %0 to i8*, !dbg !15390
  store i8* %1, i8** %__mptr, align 8, !dbg !15390
  br label %do.body, !dbg !15390

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15391

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15390
  %add.ptr = getelementptr i8, i8* %2, i64 -1712, !dbg !15390
  %3 = bitcast i8* %add.ptr to %struct.dev_info*, !dbg !15390
  store %struct.dev_info* %3, %struct.dev_info** %tmp, align 8, !dbg !15391
  %4 = load %struct.dev_info*, %struct.dev_info** %tmp, align 8, !dbg !15390
  store %struct.dev_info* %4, %struct.dev_info** %hw_priv, align 8, !dbg !15387
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !15393, metadata !DIExpression()), !dbg !15394
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15395
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 2, !dbg !15396
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !15394
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15397
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 29, !dbg !15399
  %7 = load i8, i8* %enabled, align 1, !dbg !15399
  %tobool = icmp ne i8 %7, 0, !dbg !15397
  br i1 %tobool, label %if.end, label %if.then, !dbg !15400

if.then:                                          ; preds = %do.end
  br label %if.end8, !dbg !15401

if.end:                                           ; preds = %do.end
  %8 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15402
  %dev_rcv = getelementptr inbounds %struct.dev_info, %struct.dev_info* %8, i32 0, i32 6, !dbg !15402
  %9 = load i32 (%struct.dev_info*)*, i32 (%struct.dev_info*)** %dev_rcv, align 8, !dbg !15402
  %10 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15402
  %call = call i32 %9(%struct.dev_info* %10) #12, !dbg !15402
  %tobool2 = icmp ne i32 %call, 0, !dbg !15402
  %lnot = xor i1 %tobool2, true, !dbg !15402
  %lnot3 = xor i1 %lnot, true, !dbg !15402
  %lnot4 = xor i1 %lnot3, true, !dbg !15402
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !15402
  %conv = sext i32 %lnot.ext to i64, !dbg !15402
  %tobool5 = icmp ne i64 %conv, 0, !dbg !15402
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !15403

if.then6:                                         ; preds = %if.end
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15404
  call void @hw_resume_rx(%struct.ksz_hw* %11) #12, !dbg !15405
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15406
  %hwlock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 4, !dbg !15407
  store %struct.spinlock* %hwlock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !15408
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15409, !srcloc !13195
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15410
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !15410
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !15410
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15411
  call void @hw_turn_on_intr(%struct.ksz_hw* %15, i32 671088640) #12, !dbg !15412
  %16 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15413
  %hwlock7 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %16, i32 0, i32 4, !dbg !15414
  store %struct.spinlock* %hwlock7, %struct.spinlock** %lock.addr.i9, align 8
  call void @arch_local_irq_enable() #15, !dbg !15415
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15416, !srcloc !13280
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i9, align 8, !dbg !15417
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !15417
  %rlock.i10 = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !15417
  br label %if.end8, !dbg !15418

if.else:                                          ; preds = %if.end
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15419
  call void @hw_ack_intr(%struct.ksz_hw* %19, i32 536870912) #12, !dbg !15421
  %20 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15422
  %rx_tasklet = getelementptr inbounds %struct.dev_info, %struct.dev_info* %20, i32 0, i32 15, !dbg !15423
  call void @tasklet_schedule(%struct.tasklet_struct* %rx_tasklet) #12, !dbg !15424
  br label %if.end8

if.end8:                                          ; preds = %if.then, %if.else, %if.then6
  ret void, !dbg !15425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_proc_task(%struct.tasklet_struct* %t) #2 !dbg !15426 {
entry:
  %lock.addr.i3 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i3, metadata !13087, metadata !DIExpression()), !dbg !15427
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13093, metadata !DIExpression()), !dbg !15429
  %t.addr = alloca %struct.tasklet_struct*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !15431, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !15433, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15435, metadata !DIExpression()), !dbg !15437
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !15437
  %1 = bitcast %struct.tasklet_struct* %0 to i8*, !dbg !15437
  store i8* %1, i8** %__mptr, align 8, !dbg !15437
  br label %do.body, !dbg !15437

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15438

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15437
  %add.ptr = getelementptr i8, i8* %2, i64 -1752, !dbg !15437
  %3 = bitcast i8* %add.ptr to %struct.dev_info*, !dbg !15437
  store %struct.dev_info* %3, %struct.dev_info** %tmp, align 8, !dbg !15438
  %4 = load %struct.dev_info*, %struct.dev_info** %tmp, align 8, !dbg !15437
  store %struct.dev_info* %4, %struct.dev_info** %hw_priv, align 8, !dbg !15434
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !15440, metadata !DIExpression()), !dbg !15441
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15442
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 2, !dbg !15443
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !15441
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15444
  call void @hw_ack_intr(%struct.ksz_hw* %6, i32 1342177280) #12, !dbg !15445
  %7 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15446
  call void @tx_done(%struct.dev_info* %7) #12, !dbg !15447
  %8 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15448
  %hwlock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %8, i32 0, i32 4, !dbg !15449
  store %struct.spinlock* %hwlock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !15450
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15451, !srcloc !13195
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15452
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !15452
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !15452
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15453
  call void @hw_turn_on_intr(%struct.ksz_hw* %11, i32 1073741824) #12, !dbg !15454
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !15455
  %hwlock2 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 4, !dbg !15456
  store %struct.spinlock* %hwlock2, %struct.spinlock** %lock.addr.i3, align 8
  call void @arch_local_irq_enable() #15, !dbg !15457
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15458, !srcloc !13280
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i3, align 8, !dbg !15459
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !15459
  %rlock.i4 = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !15459
  ret void, !dbg !15460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_reset(%struct.ksz_hw* %hw) #2 !dbg !15461 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %__ms = alloca i64, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15462, metadata !DIExpression()), !dbg !15463
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15464
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !15465
  %1 = load i8*, i8** %io, align 8, !dbg !15465
  %add.ptr = getelementptr i8, i8* %1, i64 534, !dbg !15466
  call void @writew(i16 zeroext 1, i8* %add.ptr) #12, !dbg !15467
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !15468, metadata !DIExpression()), !dbg !15470
  store i64 10, i64* %__ms, align 8, !dbg !15470
  br label %while.cond, !dbg !15470

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %__ms, align 8, !dbg !15470
  %dec = add i64 %2, -1, !dbg !15470
  store i64 %dec, i64* %__ms, align 8, !dbg !15470
  %tobool = icmp ne i64 %2, 0, !dbg !15470
  br i1 %tobool, label %while.body, label %while.end, !dbg !15470

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #12, !dbg !15471
  br label %while.cond, !dbg !15470, !llvm.loop !15476

while.end:                                        ; preds = %while.cond
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15477
  %io1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !15478
  %4 = load i8*, i8** %io1, align 8, !dbg !15478
  %add.ptr2 = getelementptr i8, i8* %4, i64 534, !dbg !15479
  call void @writew(i16 zeroext 0, i8* %add.ptr2) #12, !dbg !15480
  ret void, !dbg !15481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_desc_base(%struct.ksz_hw* %hw, i32 %tx_addr, i32 %rx_addr) #2 !dbg !15482 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %tx_addr.addr = alloca i32, align 4
  %rx_addr.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15485, metadata !DIExpression()), !dbg !15486
  store i32 %tx_addr, i32* %tx_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_addr.addr, metadata !15487, metadata !DIExpression()), !dbg !15488
  store i32 %rx_addr, i32* %rx_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rx_addr.addr, metadata !15489, metadata !DIExpression()), !dbg !15490
  %0 = load i32, i32* %tx_addr.addr, align 4, !dbg !15491
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15492
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 0, !dbg !15493
  %2 = load i8*, i8** %io, align 8, !dbg !15493
  %add.ptr = getelementptr i8, i8* %2, i64 16, !dbg !15494
  call void @writel(i32 %0, i8* %add.ptr) #12, !dbg !15495
  %3 = load i32, i32* %rx_addr.addr, align 4, !dbg !15496
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15497
  %io1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !15498
  %5 = load i8*, i8** %io1, align 8, !dbg !15498
  %add.ptr2 = getelementptr i8, i8* %5, i64 20, !dbg !15499
  call void @writel(i32 %3, i8* %add.ptr2) #12, !dbg !15500
  ret void, !dbg !15501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_cfg_huge_frame(%struct.dev_info* %hw_priv, %struct.ksz_hw* %hw) #2 !dbg !15502 {
entry:
  %hw_priv.addr = alloca %struct.dev_info*, align 8
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %data = alloca i32, align 4
  store %struct.dev_info* %hw_priv, %struct.dev_info** %hw_priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv.addr, metadata !15505, metadata !DIExpression()), !dbg !15506
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15507, metadata !DIExpression()), !dbg !15508
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15509
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !15511
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !15511
  %tobool = icmp ne %struct.ksz_switch* %1, null, !dbg !15509
  br i1 %tobool, label %if.then, label %if.end7, !dbg !15512

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %data, metadata !15513, metadata !DIExpression()), !dbg !15515
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15516
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !15517
  %3 = load i8*, i8** %io, align 8, !dbg !15517
  %add.ptr = getelementptr i8, i8* %3, i64 1028, !dbg !15518
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !15519
  %conv = zext i16 %call to i32, !dbg !15519
  store i32 %conv, i32* %data, align 4, !dbg !15520
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15521
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 32, !dbg !15523
  %5 = load i32, i32* %features, align 8, !dbg !15523
  %and = and i32 %5, 16, !dbg !15524
  %tobool1 = icmp ne i32 %and, 0, !dbg !15524
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !15525

if.then2:                                         ; preds = %if.then
  %6 = load i32, i32* %data, align 4, !dbg !15526
  %or = or i32 %6, 4, !dbg !15526
  store i32 %or, i32* %data, align 4, !dbg !15526
  br label %if.end, !dbg !15527

if.else:                                          ; preds = %if.then
  %7 = load i32, i32* %data, align 4, !dbg !15528
  %and3 = and i32 %7, -5, !dbg !15528
  store i32 %and3, i32* %data, align 4, !dbg !15528
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %8 = load i32, i32* %data, align 4, !dbg !15529
  %conv4 = trunc i32 %8 to i16, !dbg !15529
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15530
  %io5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 0, !dbg !15531
  %10 = load i8*, i8** %io5, align 8, !dbg !15531
  %add.ptr6 = getelementptr i8, i8* %10, i64 1028, !dbg !15532
  call void @writew(i16 zeroext %conv4, i8* %add.ptr6) #12, !dbg !15533
  br label %if.end7, !dbg !15534

if.end7:                                          ; preds = %if.end, %entry
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15535
  %features8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 32, !dbg !15537
  %12 = load i32, i32* %features8, align 8, !dbg !15537
  %and9 = and i32 %12, 16, !dbg !15538
  %tobool10 = icmp ne i32 %and9, 0, !dbg !15538
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !15539

if.then11:                                        ; preds = %if.end7
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15540
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 10, !dbg !15542
  %14 = load i32, i32* %rx_cfg, align 8, !dbg !15543
  %or12 = or i32 %14, 8, !dbg !15543
  store i32 %or12, i32* %rx_cfg, align 8, !dbg !15543
  %15 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15544
  %dev_rcv = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 6, !dbg !15545
  store i32 (%struct.dev_info*)* @dev_rcv_special, i32 (%struct.dev_info*)** %dev_rcv, align 8, !dbg !15546
  br label %if.end22, !dbg !15547

if.else13:                                        ; preds = %if.end7
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15548
  %rx_cfg14 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 10, !dbg !15550
  %17 = load i32, i32* %rx_cfg14, align 8, !dbg !15551
  %and15 = and i32 %17, -9, !dbg !15551
  store i32 %and15, i32* %rx_cfg14, align 8, !dbg !15551
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15552
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 4, !dbg !15554
  %19 = load i32, i32* %dev_count, align 8, !dbg !15554
  %cmp = icmp sgt i32 %19, 1, !dbg !15555
  br i1 %cmp, label %if.then17, label %if.else19, !dbg !15556

if.then17:                                        ; preds = %if.else13
  %20 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15557
  %dev_rcv18 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %20, i32 0, i32 6, !dbg !15558
  store i32 (%struct.dev_info*)* @port_rcv_packets, i32 (%struct.dev_info*)** %dev_rcv18, align 8, !dbg !15559
  br label %if.end21, !dbg !15557

if.else19:                                        ; preds = %if.else13
  %21 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15560
  %dev_rcv20 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %21, i32 0, i32 6, !dbg !15561
  store i32 (%struct.dev_info*)* @dev_rcv_packets, i32 (%struct.dev_info*)** %dev_rcv20, align 8, !dbg !15562
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.then17
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then11
  ret void, !dbg !15563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_init_rx_buffers(%struct.dev_info* %adapter) #2 !dbg !15564 {
entry:
  %adapter.addr = alloca %struct.dev_info*, align 8
  %i = alloca i32, align 4
  %desc = alloca %struct.ksz_desc*, align 8
  %dma_buf = alloca %struct.ksz_dma_buf*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %info = alloca %struct.ksz_desc_info*, align 8
  store %struct.dev_info* %adapter, %struct.dev_info** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %adapter.addr, metadata !15565, metadata !DIExpression()), !dbg !15566
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15567, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc, metadata !15569, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.declare(metadata %struct.ksz_dma_buf** %dma_buf, metadata !15571, metadata !DIExpression()), !dbg !15572
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !15573, metadata !DIExpression()), !dbg !15574
  %0 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !15575
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !15576
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !15574
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info, metadata !15577, metadata !DIExpression()), !dbg !15578
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15579
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 14, !dbg !15580
  store %struct.ksz_desc_info* %rx_desc_info, %struct.ksz_desc_info** %info, align 8, !dbg !15578
  store i32 0, i32* %i, align 4, !dbg !15581
  br label %for.cond, !dbg !15583

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !15584
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15586
  %rx_desc_info2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 14, !dbg !15587
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info2, i32 0, i32 5, !dbg !15588
  %4 = load i32, i32* %alloc, align 8, !dbg !15588
  %cmp = icmp slt i32 %2, %4, !dbg !15589
  br i1 %cmp, label %for.body, label %for.end, !dbg !15590

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !15591
  call void @get_rx_pkt(%struct.ksz_desc_info* %5, %struct.ksz_desc** %desc) #12, !dbg !15593
  %6 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !15594
  %dma_buf3 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %6, i32 0, i32 2, !dbg !15594
  store %struct.ksz_dma_buf* %dma_buf3, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15595
  %7 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15596
  %skb = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %7, i32 0, i32 0, !dbg !15598
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15598
  %tobool = icmp ne %struct.sk_buff* %8, null, !dbg !15596
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15599

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15600
  %len = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %9, i32 0, i32 2, !dbg !15601
  %10 = load i32, i32* %len, align 8, !dbg !15601
  %11 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !15602
  %mtu = getelementptr inbounds %struct.dev_info, %struct.dev_info* %11, i32 0, i32 13, !dbg !15603
  %12 = load i32, i32* %mtu, align 8, !dbg !15603
  %cmp4 = icmp ne i32 %10, %12, !dbg !15604
  br i1 %cmp4, label %if.then, label %if.end, !dbg !15605

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !15606
  %14 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15607
  call void @free_dma_buf(%struct.dev_info* %13, %struct.ksz_dma_buf* %14, i32 2) #12, !dbg !15608
  br label %if.end, !dbg !15608

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %15 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !15609
  %mtu5 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 13, !dbg !15610
  %16 = load i32, i32* %mtu5, align 8, !dbg !15610
  %17 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15611
  %len6 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %17, i32 0, i32 2, !dbg !15612
  store i32 %16, i32* %len6, align 8, !dbg !15613
  %18 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15614
  %skb7 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %18, i32 0, i32 0, !dbg !15616
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb7, align 8, !dbg !15616
  %tobool8 = icmp ne %struct.sk_buff* %19, null, !dbg !15614
  br i1 %tobool8, label %if.end12, label %if.then9, !dbg !15617

if.then9:                                         ; preds = %if.end
  %20 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15618
  %len10 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %20, i32 0, i32 2, !dbg !15619
  %21 = load i32, i32* %len10, align 8, !dbg !15619
  %call = call %struct.sk_buff* @alloc_skb(i32 %21, i32 2592) #12, !dbg !15620
  %22 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15621
  %skb11 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %22, i32 0, i32 0, !dbg !15622
  store %struct.sk_buff* %call, %struct.sk_buff** %skb11, align 8, !dbg !15623
  br label %if.end12, !dbg !15621

if.end12:                                         ; preds = %if.then9, %if.end
  %23 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15624
  %skb13 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %23, i32 0, i32 0, !dbg !15626
  %24 = load %struct.sk_buff*, %struct.sk_buff** %skb13, align 8, !dbg !15626
  %tobool14 = icmp ne %struct.sk_buff* %24, null, !dbg !15624
  br i1 %tobool14, label %land.lhs.true15, label %if.end23, !dbg !15627

land.lhs.true15:                                  ; preds = %if.end12
  %25 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15628
  %dma = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %25, i32 0, i32 1, !dbg !15629
  %26 = load i64, i64* %dma, align 8, !dbg !15629
  %tobool16 = icmp ne i64 %26, 0, !dbg !15628
  br i1 %tobool16, label %if.end23, label %if.then17, !dbg !15630

if.then17:                                        ; preds = %land.lhs.true15
  %27 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !15631
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %27, i32 0, i32 1, !dbg !15631
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15631
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !15631
  %29 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15631
  %skb18 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %29, i32 0, i32 0, !dbg !15631
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb18, align 8, !dbg !15631
  %call19 = call i8* @skb_tail_pointer(%struct.sk_buff* %30) #12, !dbg !15631
  %31 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15631
  %len20 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %31, i32 0, i32 2, !dbg !15631
  %32 = load i32, i32* %len20, align 8, !dbg !15631
  %conv = sext i32 %32 to i64, !dbg !15631
  %call21 = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %call19, i64 %conv, i32 2, i64 0) #12, !dbg !15631
  %33 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15632
  %dma22 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %33, i32 0, i32 1, !dbg !15633
  store i64 %call21, i64* %dma22, align 8, !dbg !15634
  br label %if.end23, !dbg !15632

if.end23:                                         ; preds = %if.then17, %land.lhs.true15, %if.end12
  %34 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !15635
  %35 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15636
  %dma24 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %35, i32 0, i32 1, !dbg !15637
  %36 = load i64, i64* %dma24, align 8, !dbg !15637
  %conv25 = trunc i64 %36 to i32, !dbg !15636
  call void @set_rx_buf(%struct.ksz_desc* %34, i32 %conv25) #12, !dbg !15638
  %37 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !15639
  %38 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15640
  %len26 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %38, i32 0, i32 2, !dbg !15641
  %39 = load i32, i32* %len26, align 8, !dbg !15641
  call void @set_rx_len(%struct.ksz_desc* %37, i32 %39) #12, !dbg !15642
  %40 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !15643
  call void @release_desc(%struct.ksz_desc* %40) #12, !dbg !15644
  br label %for.inc, !dbg !15645

for.inc:                                          ; preds = %if.end23
  %41 = load i32, i32* %i, align 4, !dbg !15646
  %inc = add i32 %41, 1, !dbg !15646
  store i32 %inc, i32* %i, align 4, !dbg !15646
  br label %for.cond, !dbg !15647, !llvm.loop !15648

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15650
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_read_intr(%struct.ksz_hw* %hw, i32* %status) #2 !dbg !15651 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15655, metadata !DIExpression()), !dbg !15656
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !15657, metadata !DIExpression()), !dbg !15658
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15659
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !15660
  %1 = load i8*, i8** %io, align 8, !dbg !15660
  %add.ptr = getelementptr i8, i8* %1, i64 44, !dbg !15661
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !15662
  %2 = load i32*, i32** %status.addr, align 8, !dbg !15663
  store i32 %call, i32* %2, align 4, !dbg !15664
  %3 = load i32*, i32** %status.addr, align 8, !dbg !15665
  %4 = load i32, i32* %3, align 4, !dbg !15666
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15667
  %intr_set = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 12, !dbg !15668
  %6 = load i32, i32* %intr_set, align 8, !dbg !15668
  %and = and i32 %4, %6, !dbg !15669
  %7 = load i32*, i32** %status.addr, align 8, !dbg !15670
  store i32 %and, i32* %7, align 4, !dbg !15671
  ret void, !dbg !15672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_ack_intr(%struct.ksz_hw* %hw, i32 %interrupt) #2 !dbg !15673 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %interrupt.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15674, metadata !DIExpression()), !dbg !15675
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !15676, metadata !DIExpression()), !dbg !15677
  %0 = load i32, i32* %interrupt.addr, align 4, !dbg !15678
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15679
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 0, !dbg !15680
  %2 = load i8*, i8** %io, align 8, !dbg !15680
  %add.ptr = getelementptr i8, i8* %2, i64 44, !dbg !15681
  call void @writel(i32 %0, i8* %add.ptr) #12, !dbg !15682
  ret void, !dbg !15683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_dis_intr_bit(%struct.ksz_hw* %hw, i32 %bit) #2 !dbg !15684 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %bit.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15685, metadata !DIExpression()), !dbg !15686
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !15687, metadata !DIExpression()), !dbg !15688
  %0 = load i32, i32* %bit.addr, align 4, !dbg !15689
  %neg = xor i32 %0, -1, !dbg !15690
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15691
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 11, !dbg !15692
  %2 = load i32, i32* %intr_mask, align 4, !dbg !15693
  %and = and i32 %2, %neg, !dbg !15693
  store i32 %and, i32* %intr_mask, align 4, !dbg !15693
  ret void, !dbg !15694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #2 !dbg !15695 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !15696, metadata !DIExpression()), !dbg !15697
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !15698
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !15700
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #12, !dbg !15701
  br i1 %call, label %if.end, label %if.then, !dbg !15702

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !15703
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #12, !dbg !15704
  br label %if.end, !dbg !15704

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_resume_rx(%struct.ksz_hw* %hw) #2 !dbg !15706 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15707, metadata !DIExpression()), !dbg !15708
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15709
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !15710
  %1 = load i8*, i8** %io, align 8, !dbg !15710
  %add.ptr = getelementptr i8, i8* %1, i64 12, !dbg !15711
  call void @writel(i32 1, i8* %add.ptr) #12, !dbg !15712
  ret void, !dbg !15713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_rx_stop(%struct.ksz_hw* %hw) #2 !dbg !15714 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15715, metadata !DIExpression()), !dbg !15716
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15717
  %rx_stop = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 30, !dbg !15719
  %1 = load i8, i8* %rx_stop, align 2, !dbg !15719
  %conv = zext i8 %1 to i32, !dbg !15717
  %cmp = icmp eq i32 0, %conv, !dbg !15720
  br i1 %cmp, label %if.then, label %if.else, !dbg !15721

if.then:                                          ; preds = %entry
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15722
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 11, !dbg !15723
  %3 = load i32, i32* %intr_mask, align 4, !dbg !15724
  %and = and i32 %3, -33554433, !dbg !15724
  store i32 %and, i32* %intr_mask, align 4, !dbg !15724
  br label %if.end18, !dbg !15722

if.else:                                          ; preds = %entry
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15725
  %rx_stop2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 30, !dbg !15727
  %5 = load i8, i8* %rx_stop2, align 2, !dbg !15727
  %conv3 = zext i8 %5 to i32, !dbg !15725
  %cmp4 = icmp sgt i32 %conv3, 1, !dbg !15728
  br i1 %cmp4, label %if.then6, label %if.else15, !dbg !15729

if.then6:                                         ; preds = %if.else
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15730
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 29, !dbg !15733
  %7 = load i8, i8* %enabled, align 1, !dbg !15733
  %conv7 = zext i8 %7 to i32, !dbg !15730
  %tobool = icmp ne i32 %conv7, 0, !dbg !15730
  br i1 %tobool, label %land.lhs.true, label %if.else11, !dbg !15734

land.lhs.true:                                    ; preds = %if.then6
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15735
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 10, !dbg !15736
  %9 = load i32, i32* %rx_cfg, align 8, !dbg !15736
  %and8 = and i32 %9, 1, !dbg !15737
  %tobool9 = icmp ne i32 %and8, 0, !dbg !15737
  br i1 %tobool9, label %if.then10, label %if.else11, !dbg !15738

if.then10:                                        ; preds = %land.lhs.true
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15739
  call void @hw_start_rx(%struct.ksz_hw* %10) #12, !dbg !15741
  br label %if.end, !dbg !15742

if.else11:                                        ; preds = %land.lhs.true, %if.then6
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15743
  %intr_mask12 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 11, !dbg !15745
  %12 = load i32, i32* %intr_mask12, align 4, !dbg !15746
  %and13 = and i32 %12, -33554433, !dbg !15746
  store i32 %and13, i32* %intr_mask12, align 4, !dbg !15746
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15747
  %rx_stop14 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 30, !dbg !15748
  store i8 0, i8* %rx_stop14, align 2, !dbg !15749
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end17, !dbg !15750

if.else15:                                        ; preds = %if.else
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15751
  %rx_stop16 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %14, i32 0, i32 30, !dbg !15752
  %15 = load i8, i8* %rx_stop16, align 2, !dbg !15753
  %inc = add i8 %15, 1, !dbg !15753
  store i8 %inc, i8* %rx_stop16, align 2, !dbg !15753
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !15754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #2 !dbg !15755 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !15760, metadata !DIExpression()), !dbg !15762
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !15764, metadata !DIExpression()), !dbg !15765
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !15766, metadata !DIExpression()), !dbg !15768
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !15769, metadata !DIExpression()), !dbg !15771
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15773, metadata !DIExpression()), !dbg !15774
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !15775, metadata !DIExpression()), !dbg !15776
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !15777, metadata !DIExpression()), !dbg !15778
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !15779
  %1 = load i64, i64* %nr.addr, align 8, !dbg !15780
  %div = sdiv i64 %1, 64, !dbg !15780
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !15781
  %2 = bitcast i64* %add.ptr to i8*, !dbg !15779
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !15782
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15783
  %conv.i = trunc i64 %4 to i32, !dbg !15783
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !15784
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !15785
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !15785
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #15, !dbg !15785
  %7 = load i64, i64* %nr.addr, align 8, !dbg !15786
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !15787
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !15768
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !15768
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !15768, !srcloc !15788
  store i8 %11, i8* %c.i, align 1, !dbg !15768
  %12 = load i8, i8* %c.i, align 1, !dbg !15768
  %tobool.i = trunc i8 %12 to i1, !dbg !15768
  %frombool.i = zext i1 %tobool.i to i8, !dbg !15768
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !15768
  %13 = load i8, i8* %tmp.i, align 1, !dbg !15768
  %tobool1.i = trunc i8 %13 to i1, !dbg !15768
  ret i1 %tobool1.i, !dbg !15789
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !15790 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15791, metadata !DIExpression()), !dbg !15792
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !15793, metadata !DIExpression()), !dbg !15794
  ret i1 true, !dbg !15795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_start_rx(%struct.ksz_hw* %hw) #2 !dbg !15796 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15797, metadata !DIExpression()), !dbg !15798
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15799
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 10, !dbg !15800
  %1 = load i32, i32* %rx_cfg, align 8, !dbg !15800
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15801
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !15802
  %3 = load i8*, i8** %io, align 8, !dbg !15802
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !15803
  call void @writel(i32 %1, i8* %add.ptr) #12, !dbg !15804
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15805
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 11, !dbg !15806
  %5 = load i32, i32* %intr_mask, align 4, !dbg !15807
  %or = or i32 %5, 33554432, !dbg !15807
  store i32 %or, i32* %intr_mask, align 4, !dbg !15807
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15808
  %io1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 0, !dbg !15809
  %7 = load i8*, i8** %io1, align 8, !dbg !15809
  %add.ptr2 = getelementptr i8, i8* %7, i64 12, !dbg !15810
  call void @writel(i32 1, i8* %add.ptr2) #12, !dbg !15811
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15812
  call void @hw_ack_intr(%struct.ksz_hw* %8, i32 33554432) #12, !dbg !15813
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15814
  %rx_stop = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 30, !dbg !15815
  %10 = load i8, i8* %rx_stop, align 2, !dbg !15816
  %inc = add i8 %10, 1, !dbg !15816
  store i8 %inc, i8* %rx_stop, align 2, !dbg !15816
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15817
  %rx_stop3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 30, !dbg !15819
  %12 = load i8, i8* %rx_stop3, align 2, !dbg !15819
  %conv = zext i8 %12 to i32, !dbg !15817
  %cmp = icmp eq i32 0, %conv, !dbg !15820
  br i1 %cmp, label %if.then, label %if.end, !dbg !15821

if.then:                                          ; preds = %entry
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15822
  %rx_stop5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 30, !dbg !15823
  store i8 2, i8* %rx_stop5, align 2, !dbg !15824
  br label %if.end, !dbg !15822

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_turn_on_intr(%struct.ksz_hw* %hw, i32 %bit) #2 !dbg !15826 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %bit.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !15829, metadata !DIExpression()), !dbg !15830
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !15831, metadata !DIExpression()), !dbg !15832
  %0 = load i32, i32* %bit.addr, align 4, !dbg !15833
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15834
  %intr_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 11, !dbg !15835
  %2 = load i32, i32* %intr_mask, align 4, !dbg !15836
  %or = or i32 %2, %0, !dbg !15836
  store i32 %or, i32* %intr_mask, align 4, !dbg !15836
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15837
  %intr_blocked = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 13, !dbg !15839
  %4 = load i32, i32* %intr_blocked, align 4, !dbg !15839
  %tobool = icmp ne i32 %4, 0, !dbg !15837
  br i1 %tobool, label %if.end, label %if.then, !dbg !15840

if.then:                                          ; preds = %entry
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15841
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !15842
  %intr_mask1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 11, !dbg !15843
  %7 = load i32, i32* %intr_mask1, align 4, !dbg !15843
  call void @hw_set_intr(%struct.ksz_hw* %5, i32 %7) #12, !dbg !15844
  br label %if.end, !dbg !15844

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !15846 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15848, metadata !DIExpression()), !dbg !15850
  %0 = load i64, i64* %__edi, align 8, !dbg !15850
  store i64 %0, i64* %__edi, align 8, !dbg !15850
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15851, metadata !DIExpression()), !dbg !15850
  %1 = load i64, i64* %__esi, align 8, !dbg !15850
  store i64 %1, i64* %__esi, align 8, !dbg !15850
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15852, metadata !DIExpression()), !dbg !15850
  %2 = load i64, i64* %__edx, align 8, !dbg !15850
  store i64 %2, i64* %__edx, align 8, !dbg !15850
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15853, metadata !DIExpression()), !dbg !15850
  %3 = load i64, i64* %__ecx, align 8, !dbg !15850
  store i64 %3, i64* %__ecx, align 8, !dbg !15850
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15854, metadata !DIExpression()), !dbg !15850
  %4 = load i64, i64* %__eax, align 8, !dbg !15850
  store i64 %4, i64* %__eax, align 8, !dbg !15850
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !15850
  %6 = call i64 @llvm.read_register.i64(metadata !8344), !dbg !15850
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !15850, !srcloc !15855
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15850
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15850
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15850
  call void @llvm.write_register.i64(metadata !8344, i64 %asmresult1), !dbg !15850
  ret void, !dbg !15856
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #2 !dbg !15857 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15858, metadata !DIExpression()), !dbg !15860
  %0 = load i64, i64* %__edi, align 8, !dbg !15860
  store i64 %0, i64* %__edi, align 8, !dbg !15860
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15861, metadata !DIExpression()), !dbg !15860
  %1 = load i64, i64* %__esi, align 8, !dbg !15860
  store i64 %1, i64* %__esi, align 8, !dbg !15860
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15862, metadata !DIExpression()), !dbg !15860
  %2 = load i64, i64* %__edx, align 8, !dbg !15860
  store i64 %2, i64* %__edx, align 8, !dbg !15860
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15863, metadata !DIExpression()), !dbg !15860
  %3 = load i64, i64* %__ecx, align 8, !dbg !15860
  store i64 %3, i64* %__ecx, align 8, !dbg !15860
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15864, metadata !DIExpression()), !dbg !15860
  %4 = load i64, i64* %__eax, align 8, !dbg !15860
  store i64 %4, i64* %__eax, align 8, !dbg !15860
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !15860
  %6 = call i64 @llvm.read_register.i64(metadata !8344), !dbg !15860
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !15860, !srcloc !15865
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15860
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15860
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15860
  call void @llvm.write_register.i64(metadata !8344, i64 %asmresult1), !dbg !15860
  ret void, !dbg !15866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_done(%struct.dev_info* %hw_priv) #2 !dbg !15867 {
entry:
  %hw_priv.addr = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  store %struct.dev_info* %hw_priv, %struct.dev_info** %hw_priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv.addr, metadata !15868, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !15870, metadata !DIExpression()), !dbg !15871
  %0 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15872
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !15873
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !15871
  call void @llvm.dbg.declare(metadata i32* %port, metadata !15874, metadata !DIExpression()), !dbg !15875
  %1 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15876
  call void @transmit_cleanup(%struct.dev_info* %1, i32 1) #12, !dbg !15877
  store i32 0, i32* %port, align 4, !dbg !15878
  br label %for.cond, !dbg !15880

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %port, align 4, !dbg !15881
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15883
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 4, !dbg !15884
  %4 = load i32, i32* %dev_count, align 8, !dbg !15884
  %cmp = icmp slt i32 %2, %4, !dbg !15885
  br i1 %cmp, label %for.body, label %for.end, !dbg !15886

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15887, metadata !DIExpression()), !dbg !15889
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15890
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 2, !dbg !15891
  %6 = load i32, i32* %port, align 4, !dbg !15892
  %idxprom = sext i32 %6 to i64, !dbg !15890
  %arrayidx = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 %idxprom, !dbg !15890
  %pdev = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx, i32 0, i32 6, !dbg !15893
  %7 = load i8*, i8** %pdev, align 8, !dbg !15893
  %8 = bitcast i8* %7 to %struct.net_device*, !dbg !15890
  store %struct.net_device* %8, %struct.net_device** %dev, align 8, !dbg !15889
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15894
  %call = call zeroext i1 @netif_running(%struct.net_device* %9) #12, !dbg !15896
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !15897

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15898
  %call2 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %10) #12, !dbg !15899
  br i1 %call2, label %if.then, label %if.end, !dbg !15900

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15901
  call void @netif_wake_queue(%struct.net_device* %11) #12, !dbg !15902
  br label %if.end, !dbg !15902

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !15903

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %port, align 4, !dbg !15904
  %inc = add i32 %12, 1, !dbg !15904
  store i32 %inc, i32* %port, align 4, !dbg !15904
  br label %for.cond, !dbg !15905, !llvm.loop !15906

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @transmit_cleanup(%struct.dev_info* %hw_priv, i32 %normal) #2 !dbg !15909 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !13087, metadata !DIExpression()), !dbg !15912
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13093, metadata !DIExpression()), !dbg !15914
  %hw_priv.addr = alloca %struct.dev_info*, align 8
  %normal.addr = alloca i32, align 4
  %last = alloca i32, align 4
  %status = alloca %union.desc_stat, align 4
  %hw = alloca %struct.ksz_hw*, align 8
  %info = alloca %struct.ksz_desc_info*, align 8
  %desc = alloca %struct.ksz_desc*, align 8
  %dma_buf = alloca %struct.ksz_dma_buf*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.dev_info* %hw_priv, %struct.dev_info** %hw_priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv.addr, metadata !15916, metadata !DIExpression()), !dbg !15917
  store i32 %normal, i32* %normal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %normal.addr, metadata !15918, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.declare(metadata i32* %last, metadata !15920, metadata !DIExpression()), !dbg !15921
  call void @llvm.dbg.declare(metadata %union.desc_stat* %status, metadata !15922, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !15924, metadata !DIExpression()), !dbg !15925
  %0 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15926
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !15927
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !15925
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info, metadata !15928, metadata !DIExpression()), !dbg !15929
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !15930
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 15, !dbg !15931
  store %struct.ksz_desc_info* %tx_desc_info, %struct.ksz_desc_info** %info, align 8, !dbg !15929
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc, metadata !15932, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.declare(metadata %struct.ksz_dma_buf** %dma_buf, metadata !15934, metadata !DIExpression()), !dbg !15935
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15936, metadata !DIExpression()), !dbg !15937
  store %struct.net_device* null, %struct.net_device** %dev, align 8, !dbg !15937
  %2 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15938
  %hwlock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %2, i32 0, i32 4, !dbg !15939
  store %struct.spinlock* %hwlock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !15940
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15941, !srcloc !13195
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15942
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !15942
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !15942
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !15943
  %last2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %5, i32 0, i32 7, !dbg !15944
  %6 = load i32, i32* %last2, align 8, !dbg !15944
  store i32 %6, i32* %last, align 4, !dbg !15945
  br label %while.cond, !dbg !15946

while.cond:                                       ; preds = %if.end16, %entry
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !15947
  %avail = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 6, !dbg !15948
  %8 = load i32, i32* %avail, align 4, !dbg !15948
  %9 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !15949
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %9, i32 0, i32 5, !dbg !15950
  %10 = load i32, i32* %alloc, align 8, !dbg !15950
  %cmp = icmp slt i32 %8, %10, !dbg !15951
  br i1 %cmp, label %while.body, label %while.end, !dbg !15946

while.body:                                       ; preds = %while.cond
  %11 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !15952
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %11, i32 0, i32 0, !dbg !15954
  %12 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !15954
  %13 = load i32, i32* %last, align 4, !dbg !15955
  %idxprom = sext i32 %13 to i64, !dbg !15952
  %arrayidx = getelementptr %struct.ksz_desc, %struct.ksz_desc* %12, i64 %idxprom, !dbg !15952
  store %struct.ksz_desc* %arrayidx, %struct.ksz_desc** %desc, align 8, !dbg !15956
  %14 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !15957
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %14, i32 0, i32 0, !dbg !15957
  %15 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !15957
  %ctrl = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %15, i32 0, i32 0, !dbg !15957
  %data = bitcast %union.desc_stat* %ctrl to i32*, !dbg !15957
  %16 = load i32, i32* %data, align 4, !dbg !15957
  %data3 = bitcast %union.desc_stat* %status to i32*, !dbg !15958
  store i32 %16, i32* %data3, align 4, !dbg !15959
  %tx = bitcast %union.desc_stat* %status to %struct.ksz_desc_tx_stat*, !dbg !15960
  %17 = bitcast %struct.ksz_desc_tx_stat* %tx to i32*, !dbg !15962
  %bf.load = load i32, i32* %17, align 4, !dbg !15962
  %bf.lshr = lshr i32 %bf.load, 31, !dbg !15962
  %tobool = icmp ne i32 %bf.lshr, 0, !dbg !15963
  br i1 %tobool, label %if.then, label %if.end7, !dbg !15964

if.then:                                          ; preds = %while.body
  %18 = load i32, i32* %normal.addr, align 4, !dbg !15965
  %tobool4 = icmp ne i32 %18, 0, !dbg !15965
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !15968

if.then5:                                         ; preds = %if.then
  br label %while.end, !dbg !15969

if.else:                                          ; preds = %if.then
  %19 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !15970
  %coerce.dive = getelementptr inbounds %union.desc_stat, %union.desc_stat* %status, i32 0, i32 0, !dbg !15971
  %coerce.dive6 = getelementptr inbounds %struct.ksz_desc_rx_stat, %struct.ksz_desc_rx_stat* %coerce.dive, i32 0, i32 0, !dbg !15971
  %20 = load i32, i32* %coerce.dive6, align 4, !dbg !15971
  call void @reset_desc(%struct.ksz_desc* %19, i32 %20) #12, !dbg !15971
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end7, !dbg !15972

if.end7:                                          ; preds = %if.end, %while.body
  %21 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !15973
  %dma_buf8 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %21, i32 0, i32 2, !dbg !15973
  store %struct.ksz_dma_buf* %dma_buf8, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15974
  %22 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !15975
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %22, i32 0, i32 1, !dbg !15975
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15975
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !15975
  %24 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15975
  %dma = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %24, i32 0, i32 1, !dbg !15975
  %25 = load i64, i64* %dma, align 8, !dbg !15975
  %26 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15975
  %len = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %26, i32 0, i32 2, !dbg !15975
  %27 = load i32, i32* %len, align 8, !dbg !15975
  %conv = sext i32 %27 to i64, !dbg !15975
  call void @dma_unmap_single_attrs(%struct.device* %dev9, i64 %25, i64 %conv, i32 1, i64 0) #12, !dbg !15975
  %28 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15976
  %skb = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %28, i32 0, i32 0, !dbg !15978
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15978
  %tobool10 = icmp ne %struct.sk_buff* %29, null, !dbg !15976
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !15979

if.then11:                                        ; preds = %if.end7
  %30 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15980
  %skb12 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %30, i32 0, i32 0, !dbg !15982
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb12, align 8, !dbg !15982
  %32 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 0, !dbg !15983
  %33 = bitcast %union.anon.40* %32 to %struct.anon.41*, !dbg !15983
  %34 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %33, i32 0, i32 2, !dbg !15983
  %dev13 = bitcast %union.anon.42* %34 to %struct.net_device**, !dbg !15983
  %35 = load %struct.net_device*, %struct.net_device** %dev13, align 8, !dbg !15983
  store %struct.net_device* %35, %struct.net_device** %dev, align 8, !dbg !15984
  %36 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15985
  %skb14 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %36, i32 0, i32 0, !dbg !15986
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb14, align 8, !dbg !15986
  call void @dev_kfree_skb_irq(%struct.sk_buff* %37) #12, !dbg !15987
  %38 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !15988
  %skb15 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %38, i32 0, i32 0, !dbg !15989
  store %struct.sk_buff* null, %struct.sk_buff** %skb15, align 8, !dbg !15990
  br label %if.end16, !dbg !15991

if.end16:                                         ; preds = %if.then11, %if.end7
  %39 = load i32, i32* %last, align 4, !dbg !15992
  %inc = add i32 %39, 1, !dbg !15992
  store i32 %inc, i32* %last, align 4, !dbg !15992
  %40 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !15993
  %mask = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %40, i32 0, i32 9, !dbg !15994
  %41 = load i32, i32* %mask, align 8, !dbg !15994
  %42 = load i32, i32* %last, align 4, !dbg !15995
  %and = and i32 %42, %41, !dbg !15995
  store i32 %and, i32* %last, align 4, !dbg !15995
  %43 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !15996
  %avail17 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %43, i32 0, i32 6, !dbg !15997
  %44 = load i32, i32* %avail17, align 4, !dbg !15998
  %inc18 = add i32 %44, 1, !dbg !15998
  store i32 %inc18, i32* %avail17, align 4, !dbg !15998
  br label %while.cond, !dbg !15946, !llvm.loop !15999

while.end:                                        ; preds = %if.then5, %while.cond
  %45 = load i32, i32* %last, align 4, !dbg !16001
  %46 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16002
  %last19 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %46, i32 0, i32 7, !dbg !16003
  store i32 %45, i32* %last19, align 8, !dbg !16004
  %47 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !16005
  %hwlock20 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %47, i32 0, i32 4, !dbg !16006
  store %struct.spinlock* %hwlock20, %struct.spinlock** %lock.addr.i24, align 8
  call void @arch_local_irq_enable() #15, !dbg !16007
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16008, !srcloc !13280
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !16009
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !16009
  %rlock.i25 = bitcast %union.anon.1* %49 to %struct.raw_spinlock*, !dbg !16009
  %50 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16010
  %tobool21 = icmp ne %struct.net_device* %50, null, !dbg !16010
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !16012

if.then22:                                        ; preds = %while.end
  %51 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16013
  call void @netif_trans_update(%struct.net_device* %51) #12, !dbg !16014
  br label %if.end23, !dbg !16014

if.end23:                                         ; preds = %if.then22, %while.end
  ret void, !dbg !16015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #2 !dbg !16016 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16017, metadata !DIExpression()), !dbg !16018
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16019
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !16020
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #12, !dbg !16021
  ret i1 %call1, !dbg !16022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #2 !dbg !16023 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16024, metadata !DIExpression()), !dbg !16025
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16026
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !16027
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #12, !dbg !16028
  ret void, !dbg !16029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_desc(%struct.ksz_desc* %desc, i32 %status.coerce) #2 !dbg !16030 {
entry:
  %status = alloca %union.desc_stat, align 4
  %desc.addr = alloca %struct.ksz_desc*, align 8
  %coerce.dive = getelementptr inbounds %union.desc_stat, %union.desc_stat* %status, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %struct.ksz_desc_rx_stat, %struct.ksz_desc_rx_stat* %coerce.dive, i32 0, i32 0
  store i32 %status.coerce, i32* %coerce.dive1, align 4
  store %struct.ksz_desc* %desc, %struct.ksz_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc.addr, metadata !16033, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.declare(metadata %union.desc_stat* %status, metadata !16035, metadata !DIExpression()), !dbg !16036
  %rx = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16037
  %0 = bitcast %struct.ksz_desc_rx_stat* %rx to i32*, !dbg !16038
  %bf.load = load i32, i32* %0, align 4, !dbg !16039
  %bf.clear = and i32 %bf.load, 2147483647, !dbg !16039
  store i32 %bf.clear, i32* %0, align 4, !dbg !16039
  %data = bitcast %union.desc_stat* %status to i32*, !dbg !16040
  %1 = load i32, i32* %data, align 4, !dbg !16040
  %2 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16041
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %2, i32 0, i32 0, !dbg !16042
  %3 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !16042
  %ctrl = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %3, i32 0, i32 0, !dbg !16043
  %data2 = bitcast %union.desc_stat* %ctrl to i32*, !dbg !16044
  store i32 %1, i32* %data2, align 4, !dbg !16045
  ret void, !dbg !16046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !16047 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16050, metadata !DIExpression()), !dbg !16051
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !16052, metadata !DIExpression()), !dbg !16053
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16054, metadata !DIExpression()), !dbg !16055
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16056, metadata !DIExpression()), !dbg !16057
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !16058, metadata !DIExpression()), !dbg !16059
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16060
  %1 = load i64, i64* %addr.addr, align 8, !dbg !16061
  %2 = load i64, i64* %size.addr, align 8, !dbg !16062
  %3 = load i32, i32* %dir.addr, align 4, !dbg !16063
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !16064
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !16065
  ret void, !dbg !16066
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_irq(%struct.sk_buff* %skb) #2 !dbg !16067 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16068, metadata !DIExpression()), !dbg !16069
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16070
  call void @__dev_kfree_skb_irq(%struct.sk_buff* %0, i32 1) #12, !dbg !16071
  ret void, !dbg !16072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_trans_update(%struct.net_device* %dev) #2 !dbg !16073 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16074, metadata !DIExpression()), !dbg !16075
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !16076, metadata !DIExpression()), !dbg !16077
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16078
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !16079
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !16077
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16080
  %trans_start = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 9, !dbg !16082
  %2 = load i64, i64* %trans_start, align 8, !dbg !16082
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !16083
  %cmp = icmp ne i64 %2, %3, !dbg !16084
  br i1 %cmp, label %if.then, label %if.end, !dbg !16085

if.then:                                          ; preds = %entry
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !16086
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16087
  %trans_start1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 9, !dbg !16088
  store i64 %4, i64* %trans_start1, align 8, !dbg !16089
  br label %if.end, !dbg !16087

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16090
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_irq(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #2 !dbg !16091 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16094, metadata !DIExpression()), !dbg !16095
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !16096, metadata !DIExpression()), !dbg !16097
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16098
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !16099
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !16099
  %2 = load i32, i32* %index.addr, align 4, !dbg !16100
  %idxprom = zext i32 %2 to i64, !dbg !16098
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !16098
  ret %struct.netdev_queue* %arrayidx, !dbg !16101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #2 !dbg !16102 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !16107, metadata !DIExpression()), !dbg !16108
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !16109
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !16110
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !16111
  ret i1 %call, !dbg !16112
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_rcv_special(%struct.dev_info* %hw_priv) #2 !dbg !16113 {
entry:
  %hw_priv.addr = alloca %struct.dev_info*, align 8
  %next = alloca i32, align 4
  %status = alloca %union.desc_stat, align 4
  %hw = alloca %struct.ksz_hw*, align 8
  %dev = alloca %struct.net_device*, align 8
  %info = alloca %struct.ksz_desc_info*, align 8
  %left = alloca i32, align 4
  %desc = alloca %struct.ksz_desc*, align 8
  %received = alloca i32, align 4
  %p = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  store %struct.dev_info* %hw_priv, %struct.dev_info** %hw_priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv.addr, metadata !16114, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.declare(metadata i32* %next, metadata !16116, metadata !DIExpression()), !dbg !16117
  call void @llvm.dbg.declare(metadata %union.desc_stat* %status, metadata !16118, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !16120, metadata !DIExpression()), !dbg !16121
  %0 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !16122
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !16123
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !16121
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !16124, metadata !DIExpression()), !dbg !16125
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16126
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 2, !dbg !16127
  %arrayidx = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 0, !dbg !16126
  %pdev = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx, i32 0, i32 6, !dbg !16128
  %2 = load i8*, i8** %pdev, align 8, !dbg !16128
  %3 = bitcast i8* %2 to %struct.net_device*, !dbg !16126
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !16125
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info, metadata !16129, metadata !DIExpression()), !dbg !16130
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16131
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 14, !dbg !16132
  store %struct.ksz_desc_info* %rx_desc_info, %struct.ksz_desc_info** %info, align 8, !dbg !16130
  call void @llvm.dbg.declare(metadata i32* %left, metadata !16133, metadata !DIExpression()), !dbg !16134
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16135
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %5, i32 0, i32 5, !dbg !16136
  %6 = load i32, i32* %alloc, align 8, !dbg !16136
  store i32 %6, i32* %left, align 4, !dbg !16134
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc, metadata !16137, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.declare(metadata i32* %received, metadata !16139, metadata !DIExpression()), !dbg !16140
  store i32 0, i32* %received, align 4, !dbg !16140
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16141
  %next2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 8, !dbg !16142
  %8 = load i32, i32* %next2, align 4, !dbg !16142
  store i32 %8, i32* %next, align 4, !dbg !16143
  br label %while.cond, !dbg !16144

while.cond:                                       ; preds = %release_packet, %entry
  %9 = load i32, i32* %left, align 4, !dbg !16145
  %dec = add i32 %9, -1, !dbg !16145
  store i32 %dec, i32* %left, align 4, !dbg !16145
  %tobool = icmp ne i32 %9, 0, !dbg !16144
  br i1 %tobool, label %while.body, label %while.end, !dbg !16144

while.body:                                       ; preds = %while.cond
  %10 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16146
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %10, i32 0, i32 0, !dbg !16148
  %11 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !16148
  %12 = load i32, i32* %next, align 4, !dbg !16149
  %idxprom = sext i32 %12 to i64, !dbg !16146
  %arrayidx3 = getelementptr %struct.ksz_desc, %struct.ksz_desc* %11, i64 %idxprom, !dbg !16146
  store %struct.ksz_desc* %arrayidx3, %struct.ksz_desc** %desc, align 8, !dbg !16150
  %13 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16151
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %13, i32 0, i32 0, !dbg !16151
  %14 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !16151
  %ctrl = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %14, i32 0, i32 0, !dbg !16151
  %data = bitcast %union.desc_stat* %ctrl to i32*, !dbg !16151
  %15 = load i32, i32* %data, align 4, !dbg !16151
  %data4 = bitcast %union.desc_stat* %status to i32*, !dbg !16152
  store i32 %15, i32* %data4, align 4, !dbg !16153
  %rx = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16154
  %16 = bitcast %struct.ksz_desc_rx_stat* %rx to i32*, !dbg !16156
  %bf.load = load i32, i32* %16, align 4, !dbg !16156
  %bf.lshr = lshr i32 %bf.load, 31, !dbg !16156
  %tobool5 = icmp ne i32 %bf.lshr, 0, !dbg !16157
  br i1 %tobool5, label %if.then, label %if.end, !dbg !16158

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !16159

if.end:                                           ; preds = %while.body
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16160
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 4, !dbg !16162
  %18 = load i32, i32* %dev_count, align 8, !dbg !16162
  %cmp = icmp sgt i32 %18, 1, !dbg !16163
  br i1 %cmp, label %if.then6, label %if.end16, !dbg !16164

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %p, metadata !16165, metadata !DIExpression()), !dbg !16167
  %rx7 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16168
  %19 = bitcast %struct.ksz_desc_rx_stat* %rx7 to i32*, !dbg !16168
  %bf.load8 = load i32, i32* %19, align 4, !dbg !16168
  %bf.lshr9 = lshr i32 %bf.load8, 20, !dbg !16168
  %bf.clear = and i32 %bf.lshr9, 15, !dbg !16168
  %sub = sub i32 %bf.clear, 1, !dbg !16168
  store i32 %sub, i32* %p, align 4, !dbg !16167
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16169
  %port_info10 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %20, i32 0, i32 2, !dbg !16170
  %21 = load i32, i32* %p, align 4, !dbg !16171
  %idxprom11 = sext i32 %21 to i64, !dbg !16169
  %arrayidx12 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info10, i64 0, i64 %idxprom11, !dbg !16169
  %pdev13 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx12, i32 0, i32 6, !dbg !16172
  %22 = load i8*, i8** %pdev13, align 8, !dbg !16172
  %23 = bitcast i8* %22 to %struct.net_device*, !dbg !16169
  store %struct.net_device* %23, %struct.net_device** %dev, align 8, !dbg !16173
  %24 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16174
  %call = call zeroext i1 @netif_running(%struct.net_device* %24) #12, !dbg !16176
  br i1 %call, label %if.end15, label %if.then14, !dbg !16177

if.then14:                                        ; preds = %if.then6
  br label %release_packet, !dbg !16178

if.end15:                                         ; preds = %if.then6
  br label %if.end16, !dbg !16179

if.end16:                                         ; preds = %if.end15, %if.end
  %rx17 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16180
  %25 = bitcast %struct.ksz_desc_rx_stat* %rx17 to i32*, !dbg !16182
  %bf.load18 = load i32, i32* %25, align 4, !dbg !16182
  %bf.lshr19 = lshr i32 %bf.load18, 29, !dbg !16182
  %bf.clear20 = and i32 %bf.lshr19, 1, !dbg !16182
  %tobool21 = icmp ne i32 %bf.clear20, 0, !dbg !16183
  br i1 %tobool21, label %land.lhs.true, label %if.end45, !dbg !16184

land.lhs.true:                                    ; preds = %if.end16
  %rx22 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16185
  %26 = bitcast %struct.ksz_desc_rx_stat* %rx22 to i32*, !dbg !16186
  %bf.load23 = load i32, i32* %26, align 4, !dbg !16186
  %bf.lshr24 = lshr i32 %bf.load23, 30, !dbg !16186
  %bf.clear25 = and i32 %bf.lshr24, 1, !dbg !16186
  %tobool26 = icmp ne i32 %bf.clear25, 0, !dbg !16187
  br i1 %tobool26, label %if.then27, label %if.end45, !dbg !16188

if.then27:                                        ; preds = %land.lhs.true
  %rx28 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16189
  %27 = bitcast %struct.ksz_desc_rx_stat* %rx28 to i32*, !dbg !16192
  %bf.load29 = load i32, i32* %27, align 4, !dbg !16192
  %bf.lshr30 = lshr i32 %bf.load29, 25, !dbg !16192
  %bf.clear31 = and i32 %bf.lshr30, 1, !dbg !16192
  %tobool32 = icmp ne i32 %bf.clear31, 0, !dbg !16193
  br i1 %tobool32, label %lor.lhs.false, label %if.then35, !dbg !16194

lor.lhs.false:                                    ; preds = %if.then27
  %data33 = bitcast %union.desc_stat* %status to i32*, !dbg !16195
  %28 = load i32, i32* %data33, align 4, !dbg !16195
  %and = and i32 %28, 983040, !dbg !16196
  %cmp34 = icmp eq i32 %and, 262144, !dbg !16197
  br i1 %cmp34, label %if.then35, label %if.else, !dbg !16198

if.then35:                                        ; preds = %lor.lhs.false, %if.then27
  %29 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16199
  %30 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16202
  %31 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16203
  %coerce.dive = getelementptr inbounds %union.desc_stat, %union.desc_stat* %status, i32 0, i32 0, !dbg !16204
  %coerce.dive36 = getelementptr inbounds %struct.ksz_desc_rx_stat, %struct.ksz_desc_rx_stat* %coerce.dive, i32 0, i32 0, !dbg !16204
  %32 = load i32, i32* %coerce.dive36, align 4, !dbg !16204
  %call37 = call i32 @rx_proc(%struct.net_device* %29, %struct.ksz_hw* %30, %struct.ksz_desc* %31, i32 %32) #12, !dbg !16204
  %tobool38 = icmp ne i32 %call37, 0, !dbg !16204
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !16205

if.then39:                                        ; preds = %if.then35
  br label %release_packet, !dbg !16206

if.end40:                                         ; preds = %if.then35
  %33 = load i32, i32* %received, align 4, !dbg !16207
  %inc = add i32 %33, 1, !dbg !16207
  store i32 %inc, i32* %received, align 4, !dbg !16207
  br label %if.end44, !dbg !16208

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !16209, metadata !DIExpression()), !dbg !16211
  %34 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16212
  %call41 = call i8* @netdev_priv(%struct.net_device* %34) #12, !dbg !16213
  %35 = bitcast i8* %call41 to %struct.dev_priv*, !dbg !16213
  store %struct.dev_priv* %35, %struct.dev_priv** %priv, align 8, !dbg !16211
  %36 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !16214
  %port = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %36, i32 0, i32 1, !dbg !16215
  %counter = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %port, i32 0, i32 7, !dbg !16216
  %arrayidx42 = getelementptr [4 x i64], [4 x i64]* %counter, i64 0, i64 3, !dbg !16214
  %37 = load i64, i64* %arrayidx42, align 8, !dbg !16217
  %inc43 = add i64 %37, 1, !dbg !16217
  store i64 %inc43, i64* %arrayidx42, align 8, !dbg !16217
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.end40
  br label %if.end45, !dbg !16218

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %if.end16
  br label %release_packet, !dbg !16186

release_packet:                                   ; preds = %if.end45, %if.then39, %if.then14
  call void @llvm.dbg.label(metadata !16219), !dbg !16220
  %38 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16221
  call void @release_desc(%struct.ksz_desc* %38) #12, !dbg !16222
  %39 = load i32, i32* %next, align 4, !dbg !16223
  %inc46 = add i32 %39, 1, !dbg !16223
  store i32 %inc46, i32* %next, align 4, !dbg !16223
  %40 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16224
  %mask = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %40, i32 0, i32 9, !dbg !16225
  %41 = load i32, i32* %mask, align 8, !dbg !16225
  %42 = load i32, i32* %next, align 4, !dbg !16226
  %and47 = and i32 %42, %41, !dbg !16226
  store i32 %and47, i32* %next, align 4, !dbg !16226
  br label %while.cond, !dbg !16144, !llvm.loop !16227

while.end:                                        ; preds = %if.then, %while.cond
  %43 = load i32, i32* %next, align 4, !dbg !16229
  %44 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16230
  %next48 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %44, i32 0, i32 8, !dbg !16231
  store i32 %43, i32* %next48, align 4, !dbg !16232
  %45 = load i32, i32* %received, align 4, !dbg !16233
  ret i32 %45, !dbg !16234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @port_rcv_packets(%struct.dev_info* %hw_priv) #2 !dbg !16235 {
entry:
  %hw_priv.addr = alloca %struct.dev_info*, align 8
  %next = alloca i32, align 4
  %status = alloca %union.desc_stat, align 4
  %hw = alloca %struct.ksz_hw*, align 8
  %dev = alloca %struct.net_device*, align 8
  %info = alloca %struct.ksz_desc_info*, align 8
  %left = alloca i32, align 4
  %desc = alloca %struct.ksz_desc*, align 8
  %received = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.dev_info* %hw_priv, %struct.dev_info** %hw_priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv.addr, metadata !16236, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.declare(metadata i32* %next, metadata !16238, metadata !DIExpression()), !dbg !16239
  call void @llvm.dbg.declare(metadata %union.desc_stat* %status, metadata !16240, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !16242, metadata !DIExpression()), !dbg !16243
  %0 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !16244
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !16245
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !16243
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !16246, metadata !DIExpression()), !dbg !16247
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16248
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 2, !dbg !16249
  %arrayidx = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 0, !dbg !16248
  %pdev = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx, i32 0, i32 6, !dbg !16250
  %2 = load i8*, i8** %pdev, align 8, !dbg !16250
  %3 = bitcast i8* %2 to %struct.net_device*, !dbg !16248
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !16247
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info, metadata !16251, metadata !DIExpression()), !dbg !16252
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16253
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 14, !dbg !16254
  store %struct.ksz_desc_info* %rx_desc_info, %struct.ksz_desc_info** %info, align 8, !dbg !16252
  call void @llvm.dbg.declare(metadata i32* %left, metadata !16255, metadata !DIExpression()), !dbg !16256
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16257
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %5, i32 0, i32 5, !dbg !16258
  %6 = load i32, i32* %alloc, align 8, !dbg !16258
  store i32 %6, i32* %left, align 4, !dbg !16256
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc, metadata !16259, metadata !DIExpression()), !dbg !16260
  call void @llvm.dbg.declare(metadata i32* %received, metadata !16261, metadata !DIExpression()), !dbg !16262
  store i32 0, i32* %received, align 4, !dbg !16262
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16263
  %next2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 8, !dbg !16264
  %8 = load i32, i32* %next2, align 4, !dbg !16264
  store i32 %8, i32* %next, align 4, !dbg !16265
  br label %while.cond, !dbg !16266

while.cond:                                       ; preds = %release_packet, %entry
  %9 = load i32, i32* %left, align 4, !dbg !16267
  %dec = add i32 %9, -1, !dbg !16267
  store i32 %dec, i32* %left, align 4, !dbg !16267
  %tobool = icmp ne i32 %9, 0, !dbg !16266
  br i1 %tobool, label %while.body, label %while.end, !dbg !16266

while.body:                                       ; preds = %while.cond
  %10 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16268
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %10, i32 0, i32 0, !dbg !16270
  %11 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !16270
  %12 = load i32, i32* %next, align 4, !dbg !16271
  %idxprom = sext i32 %12 to i64, !dbg !16268
  %arrayidx3 = getelementptr %struct.ksz_desc, %struct.ksz_desc* %11, i64 %idxprom, !dbg !16268
  store %struct.ksz_desc* %arrayidx3, %struct.ksz_desc** %desc, align 8, !dbg !16272
  %13 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16273
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %13, i32 0, i32 0, !dbg !16273
  %14 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !16273
  %ctrl = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %14, i32 0, i32 0, !dbg !16273
  %data = bitcast %union.desc_stat* %ctrl to i32*, !dbg !16273
  %15 = load i32, i32* %data, align 4, !dbg !16273
  %data4 = bitcast %union.desc_stat* %status to i32*, !dbg !16274
  store i32 %15, i32* %data4, align 4, !dbg !16275
  %rx = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16276
  %16 = bitcast %struct.ksz_desc_rx_stat* %rx to i32*, !dbg !16278
  %bf.load = load i32, i32* %16, align 4, !dbg !16278
  %bf.lshr = lshr i32 %bf.load, 31, !dbg !16278
  %tobool5 = icmp ne i32 %bf.lshr, 0, !dbg !16279
  br i1 %tobool5, label %if.then, label %if.end, !dbg !16280

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !16281

if.end:                                           ; preds = %while.body
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16282
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 4, !dbg !16284
  %18 = load i32, i32* %dev_count, align 8, !dbg !16284
  %cmp = icmp sgt i32 %18, 1, !dbg !16285
  br i1 %cmp, label %if.then6, label %if.end16, !dbg !16286

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %p, metadata !16287, metadata !DIExpression()), !dbg !16289
  %rx7 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16290
  %19 = bitcast %struct.ksz_desc_rx_stat* %rx7 to i32*, !dbg !16290
  %bf.load8 = load i32, i32* %19, align 4, !dbg !16290
  %bf.lshr9 = lshr i32 %bf.load8, 20, !dbg !16290
  %bf.clear = and i32 %bf.lshr9, 15, !dbg !16290
  %sub = sub i32 %bf.clear, 1, !dbg !16290
  store i32 %sub, i32* %p, align 4, !dbg !16289
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16291
  %port_info10 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %20, i32 0, i32 2, !dbg !16292
  %21 = load i32, i32* %p, align 4, !dbg !16293
  %idxprom11 = sext i32 %21 to i64, !dbg !16291
  %arrayidx12 = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info10, i64 0, i64 %idxprom11, !dbg !16291
  %pdev13 = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx12, i32 0, i32 6, !dbg !16294
  %22 = load i8*, i8** %pdev13, align 8, !dbg !16294
  %23 = bitcast i8* %22 to %struct.net_device*, !dbg !16291
  store %struct.net_device* %23, %struct.net_device** %dev, align 8, !dbg !16295
  %24 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16296
  %call = call zeroext i1 @netif_running(%struct.net_device* %24) #12, !dbg !16298
  br i1 %call, label %if.end15, label %if.then14, !dbg !16299

if.then14:                                        ; preds = %if.then6
  br label %release_packet, !dbg !16300

if.end15:                                         ; preds = %if.then6
  br label %if.end16, !dbg !16301

if.end16:                                         ; preds = %if.end15, %if.end
  %rx17 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16302
  %25 = bitcast %struct.ksz_desc_rx_stat* %rx17 to i32*, !dbg !16304
  %bf.load18 = load i32, i32* %25, align 4, !dbg !16304
  %bf.lshr19 = lshr i32 %bf.load18, 29, !dbg !16304
  %bf.clear20 = and i32 %bf.lshr19, 1, !dbg !16304
  %tobool21 = icmp ne i32 %bf.clear20, 0, !dbg !16305
  br i1 %tobool21, label %land.lhs.true, label %if.end33, !dbg !16306

land.lhs.true:                                    ; preds = %if.end16
  %rx22 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16307
  %26 = bitcast %struct.ksz_desc_rx_stat* %rx22 to i32*, !dbg !16308
  %bf.load23 = load i32, i32* %26, align 4, !dbg !16308
  %bf.lshr24 = lshr i32 %bf.load23, 30, !dbg !16308
  %bf.clear25 = and i32 %bf.lshr24, 1, !dbg !16308
  %tobool26 = icmp ne i32 %bf.clear25, 0, !dbg !16309
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !16310

if.then27:                                        ; preds = %land.lhs.true
  %27 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16311
  %28 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16314
  %29 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16315
  %coerce.dive = getelementptr inbounds %union.desc_stat, %union.desc_stat* %status, i32 0, i32 0, !dbg !16316
  %coerce.dive28 = getelementptr inbounds %struct.ksz_desc_rx_stat, %struct.ksz_desc_rx_stat* %coerce.dive, i32 0, i32 0, !dbg !16316
  %30 = load i32, i32* %coerce.dive28, align 4, !dbg !16316
  %call29 = call i32 @rx_proc(%struct.net_device* %27, %struct.ksz_hw* %28, %struct.ksz_desc* %29, i32 %30) #12, !dbg !16316
  %tobool30 = icmp ne i32 %call29, 0, !dbg !16316
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !16317

if.then31:                                        ; preds = %if.then27
  br label %release_packet, !dbg !16318

if.end32:                                         ; preds = %if.then27
  %31 = load i32, i32* %received, align 4, !dbg !16319
  %inc = add i32 %31, 1, !dbg !16319
  store i32 %inc, i32* %received, align 4, !dbg !16319
  br label %if.end33, !dbg !16320

if.end33:                                         ; preds = %if.end32, %land.lhs.true, %if.end16
  br label %release_packet, !dbg !16308

release_packet:                                   ; preds = %if.end33, %if.then31, %if.then14
  call void @llvm.dbg.label(metadata !16321), !dbg !16322
  %32 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16323
  call void @release_desc(%struct.ksz_desc* %32) #12, !dbg !16324
  %33 = load i32, i32* %next, align 4, !dbg !16325
  %inc34 = add i32 %33, 1, !dbg !16325
  store i32 %inc34, i32* %next, align 4, !dbg !16325
  %34 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16326
  %mask = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %34, i32 0, i32 9, !dbg !16327
  %35 = load i32, i32* %mask, align 8, !dbg !16327
  %36 = load i32, i32* %next, align 4, !dbg !16328
  %and = and i32 %36, %35, !dbg !16328
  store i32 %and, i32* %next, align 4, !dbg !16328
  br label %while.cond, !dbg !16266, !llvm.loop !16329

while.end:                                        ; preds = %if.then, %while.cond
  %37 = load i32, i32* %next, align 4, !dbg !16331
  %38 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16332
  %next35 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %38, i32 0, i32 8, !dbg !16333
  store i32 %37, i32* %next35, align 4, !dbg !16334
  %39 = load i32, i32* %received, align 4, !dbg !16335
  ret i32 %39, !dbg !16336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_rcv_packets(%struct.dev_info* %hw_priv) #2 !dbg !16337 {
entry:
  %hw_priv.addr = alloca %struct.dev_info*, align 8
  %next = alloca i32, align 4
  %status = alloca %union.desc_stat, align 4
  %hw = alloca %struct.ksz_hw*, align 8
  %dev = alloca %struct.net_device*, align 8
  %info = alloca %struct.ksz_desc_info*, align 8
  %left = alloca i32, align 4
  %desc = alloca %struct.ksz_desc*, align 8
  %received = alloca i32, align 4
  store %struct.dev_info* %hw_priv, %struct.dev_info** %hw_priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv.addr, metadata !16338, metadata !DIExpression()), !dbg !16339
  call void @llvm.dbg.declare(metadata i32* %next, metadata !16340, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.declare(metadata %union.desc_stat* %status, metadata !16342, metadata !DIExpression()), !dbg !16343
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !16344, metadata !DIExpression()), !dbg !16345
  %0 = load %struct.dev_info*, %struct.dev_info** %hw_priv.addr, align 8, !dbg !16346
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !16347
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !16345
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !16348, metadata !DIExpression()), !dbg !16349
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16350
  %port_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 2, !dbg !16351
  %arrayidx = getelementptr [2 x %struct.ksz_port_info], [2 x %struct.ksz_port_info]* %port_info, i64 0, i64 0, !dbg !16350
  %pdev = getelementptr inbounds %struct.ksz_port_info, %struct.ksz_port_info* %arrayidx, i32 0, i32 6, !dbg !16352
  %2 = load i8*, i8** %pdev, align 8, !dbg !16352
  %3 = bitcast i8* %2 to %struct.net_device*, !dbg !16350
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !16349
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info, metadata !16353, metadata !DIExpression()), !dbg !16354
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16355
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 14, !dbg !16356
  store %struct.ksz_desc_info* %rx_desc_info, %struct.ksz_desc_info** %info, align 8, !dbg !16354
  call void @llvm.dbg.declare(metadata i32* %left, metadata !16357, metadata !DIExpression()), !dbg !16358
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16359
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %5, i32 0, i32 5, !dbg !16360
  %6 = load i32, i32* %alloc, align 8, !dbg !16360
  store i32 %6, i32* %left, align 4, !dbg !16358
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc, metadata !16361, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.declare(metadata i32* %received, metadata !16363, metadata !DIExpression()), !dbg !16364
  store i32 0, i32* %received, align 4, !dbg !16364
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16365
  %next2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 8, !dbg !16366
  %8 = load i32, i32* %next2, align 4, !dbg !16366
  store i32 %8, i32* %next, align 4, !dbg !16367
  br label %while.cond, !dbg !16368

while.cond:                                       ; preds = %release_packet, %entry
  %9 = load i32, i32* %left, align 4, !dbg !16369
  %dec = add i32 %9, -1, !dbg !16369
  store i32 %dec, i32* %left, align 4, !dbg !16369
  %tobool = icmp ne i32 %9, 0, !dbg !16368
  br i1 %tobool, label %while.body, label %while.end, !dbg !16368

while.body:                                       ; preds = %while.cond
  %10 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16370
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %10, i32 0, i32 0, !dbg !16372
  %11 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !16372
  %12 = load i32, i32* %next, align 4, !dbg !16373
  %idxprom = sext i32 %12 to i64, !dbg !16370
  %arrayidx3 = getelementptr %struct.ksz_desc, %struct.ksz_desc* %11, i64 %idxprom, !dbg !16370
  store %struct.ksz_desc* %arrayidx3, %struct.ksz_desc** %desc, align 8, !dbg !16374
  %13 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16375
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %13, i32 0, i32 0, !dbg !16375
  %14 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !16375
  %ctrl = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %14, i32 0, i32 0, !dbg !16375
  %data = bitcast %union.desc_stat* %ctrl to i32*, !dbg !16375
  %15 = load i32, i32* %data, align 4, !dbg !16375
  %data4 = bitcast %union.desc_stat* %status to i32*, !dbg !16376
  store i32 %15, i32* %data4, align 4, !dbg !16377
  %rx = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16378
  %16 = bitcast %struct.ksz_desc_rx_stat* %rx to i32*, !dbg !16380
  %bf.load = load i32, i32* %16, align 4, !dbg !16380
  %bf.lshr = lshr i32 %bf.load, 31, !dbg !16380
  %tobool5 = icmp ne i32 %bf.lshr, 0, !dbg !16381
  br i1 %tobool5, label %if.then, label %if.end, !dbg !16382

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !16383

if.end:                                           ; preds = %while.body
  %rx6 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16384
  %17 = bitcast %struct.ksz_desc_rx_stat* %rx6 to i32*, !dbg !16386
  %bf.load7 = load i32, i32* %17, align 4, !dbg !16386
  %bf.lshr8 = lshr i32 %bf.load7, 29, !dbg !16386
  %bf.clear = and i32 %bf.lshr8, 1, !dbg !16386
  %tobool9 = icmp ne i32 %bf.clear, 0, !dbg !16387
  br i1 %tobool9, label %land.lhs.true, label %if.end20, !dbg !16388

land.lhs.true:                                    ; preds = %if.end
  %rx10 = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16389
  %18 = bitcast %struct.ksz_desc_rx_stat* %rx10 to i32*, !dbg !16390
  %bf.load11 = load i32, i32* %18, align 4, !dbg !16390
  %bf.lshr12 = lshr i32 %bf.load11, 30, !dbg !16390
  %bf.clear13 = and i32 %bf.lshr12, 1, !dbg !16390
  %tobool14 = icmp ne i32 %bf.clear13, 0, !dbg !16391
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !16392

if.then15:                                        ; preds = %land.lhs.true
  %19 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16393
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !16396
  %21 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16397
  %coerce.dive = getelementptr inbounds %union.desc_stat, %union.desc_stat* %status, i32 0, i32 0, !dbg !16398
  %coerce.dive16 = getelementptr inbounds %struct.ksz_desc_rx_stat, %struct.ksz_desc_rx_stat* %coerce.dive, i32 0, i32 0, !dbg !16398
  %22 = load i32, i32* %coerce.dive16, align 4, !dbg !16398
  %call = call i32 @rx_proc(%struct.net_device* %19, %struct.ksz_hw* %20, %struct.ksz_desc* %21, i32 %22) #12, !dbg !16398
  %tobool17 = icmp ne i32 %call, 0, !dbg !16398
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !16399

if.then18:                                        ; preds = %if.then15
  br label %release_packet, !dbg !16400

if.end19:                                         ; preds = %if.then15
  %23 = load i32, i32* %received, align 4, !dbg !16401
  %inc = add i32 %23, 1, !dbg !16401
  store i32 %inc, i32* %received, align 4, !dbg !16401
  br label %if.end20, !dbg !16402

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.end
  br label %release_packet, !dbg !16390

release_packet:                                   ; preds = %if.end20, %if.then18
  call void @llvm.dbg.label(metadata !16403), !dbg !16404
  %24 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !16405
  call void @release_desc(%struct.ksz_desc* %24) #12, !dbg !16406
  %25 = load i32, i32* %next, align 4, !dbg !16407
  %inc21 = add i32 %25, 1, !dbg !16407
  store i32 %inc21, i32* %next, align 4, !dbg !16407
  %26 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16408
  %mask = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %26, i32 0, i32 9, !dbg !16409
  %27 = load i32, i32* %mask, align 8, !dbg !16409
  %28 = load i32, i32* %next, align 4, !dbg !16410
  %and = and i32 %28, %27, !dbg !16410
  store i32 %and, i32* %next, align 4, !dbg !16410
  br label %while.cond, !dbg !16368, !llvm.loop !16411

while.end:                                        ; preds = %if.then, %while.cond
  %29 = load i32, i32* %next, align 4, !dbg !16413
  %30 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !16414
  %next22 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %30, i32 0, i32 8, !dbg !16415
  store i32 %29, i32* %next22, align 4, !dbg !16416
  %31 = load i32, i32* %received, align 4, !dbg !16417
  ret i32 %31, !dbg !16418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rx_proc(%struct.net_device* %dev, %struct.ksz_hw* %hw, %struct.ksz_desc* %desc, i32 %status.coerce) #2 !dbg !16419 {
entry:
  %retval = alloca i32, align 4
  %status = alloca %union.desc_stat, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %desc.addr = alloca %struct.ksz_desc*, align 8
  %packet_len = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %dma_buf = alloca %struct.ksz_dma_buf*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %coerce.dive = getelementptr inbounds %union.desc_stat, %union.desc_stat* %status, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %struct.ksz_desc_rx_stat, %struct.ksz_desc_rx_stat* %coerce.dive, i32 0, i32 0
  store i32 %status.coerce, i32* %coerce.dive1, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16422, metadata !DIExpression()), !dbg !16423
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !16424, metadata !DIExpression()), !dbg !16425
  store %struct.ksz_desc* %desc, %struct.ksz_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc.addr, metadata !16426, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.declare(metadata %union.desc_stat* %status, metadata !16428, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.declare(metadata i32* %packet_len, metadata !16430, metadata !DIExpression()), !dbg !16431
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !16432, metadata !DIExpression()), !dbg !16433
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16434
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !16435
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !16435
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !16433
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !16436, metadata !DIExpression()), !dbg !16437
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !16438
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !16439
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !16439
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !16437
  call void @llvm.dbg.declare(metadata %struct.ksz_dma_buf** %dma_buf, metadata !16440, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16442, metadata !DIExpression()), !dbg !16443
  %rx = bitcast %union.desc_stat* %status to %struct.ksz_desc_rx_stat*, !dbg !16444
  %4 = bitcast %struct.ksz_desc_rx_stat* %rx to i32*, !dbg !16445
  %bf.load = load i32, i32* %4, align 4, !dbg !16445
  %bf.clear = and i32 %bf.load, 2047, !dbg !16445
  %sub = sub i32 %bf.clear, 4, !dbg !16446
  store i32 %sub, i32* %packet_len, align 4, !dbg !16447
  %5 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16448
  %dma_buf2 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %5, i32 0, i32 2, !dbg !16448
  store %struct.ksz_dma_buf* %dma_buf2, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !16449
  %6 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !16450
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %6, i32 0, i32 1, !dbg !16451
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16451
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !16452
  %8 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !16453
  %dma = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %8, i32 0, i32 1, !dbg !16454
  %9 = load i64, i64* %dma, align 8, !dbg !16454
  %10 = load i32, i32* %packet_len, align 4, !dbg !16455
  %add = add i32 %10, 4, !dbg !16456
  %conv = sext i32 %add to i64, !dbg !16455
  call void @dma_sync_single_for_cpu(%struct.device* %dev3, i64 %9, i64 %conv, i32 2) #12, !dbg !16457
  br label %do.body, !dbg !16458

do.body:                                          ; preds = %entry
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16459
  %12 = load i32, i32* %packet_len, align 4, !dbg !16461
  %add4 = add i32 %12, 2, !dbg !16462
  %call5 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %11, i32 %add4) #12, !dbg !16463
  store %struct.sk_buff* %call5, %struct.sk_buff** %skb, align 8, !dbg !16464
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16465
  %tobool = icmp ne %struct.sk_buff* %13, null, !dbg !16465
  br i1 %tobool, label %if.end, label %if.then, !dbg !16467

if.then:                                          ; preds = %do.body
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16468
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 24, !dbg !16470
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 6, !dbg !16471
  %15 = load i64, i64* %rx_dropped, align 8, !dbg !16472
  %inc = add i64 %15, 1, !dbg !16472
  store i64 %inc, i64* %rx_dropped, align 8, !dbg !16472
  store i32 -12, i32* %retval, align 4, !dbg !16473
  br label %return, !dbg !16473

if.end:                                           ; preds = %do.body
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16474
  call void @skb_reserve(%struct.sk_buff* %16, i32 2) #12, !dbg !16475
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16476
  %18 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !16477
  %skb6 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %18, i32 0, i32 0, !dbg !16478
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb6, align 8, !dbg !16478
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %19, i32 0, i32 37, !dbg !16479
  %20 = load i8*, i8** %data, align 8, !dbg !16479
  %21 = load i32, i32* %packet_len, align 4, !dbg !16480
  %call7 = call i8* @skb_put_data(%struct.sk_buff* %17, i8* %20, i32 %21) #12, !dbg !16481
  br label %do.end, !dbg !16482

do.end:                                           ; preds = %if.end
  %22 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16483
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16484
  %call8 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %22, %struct.net_device* %23) #12, !dbg !16485
  %24 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16486
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %24, i32 0, i32 29, !dbg !16487
  store i16 %call8, i16* %protocol, align 8, !dbg !16488
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !16489
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %25, i32 0, i32 10, !dbg !16491
  %26 = load i32, i32* %rx_cfg, align 8, !dbg !16491
  %and = and i32 %26, 393216, !dbg !16492
  %tobool9 = icmp ne i32 %and, 0, !dbg !16492
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !16493

if.then10:                                        ; preds = %do.end
  %27 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16494
  call void @csum_verified(%struct.sk_buff* %27) #12, !dbg !16495
  br label %if.end11, !dbg !16495

if.end11:                                         ; preds = %if.then10, %do.end
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16496
  %stats12 = getelementptr inbounds %struct.net_device, %struct.net_device* %28, i32 0, i32 24, !dbg !16497
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats12, i32 0, i32 0, !dbg !16498
  %29 = load i64, i64* %rx_packets, align 8, !dbg !16499
  %inc13 = add i64 %29, 1, !dbg !16499
  store i64 %inc13, i64* %rx_packets, align 8, !dbg !16499
  %30 = load i32, i32* %packet_len, align 4, !dbg !16500
  %conv14 = sext i32 %30 to i64, !dbg !16500
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16501
  %stats15 = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 24, !dbg !16502
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats15, i32 0, i32 2, !dbg !16503
  %32 = load i64, i64* %rx_bytes, align 8, !dbg !16504
  %add16 = add i64 %32, %conv14, !dbg !16504
  store i64 %add16, i64* %rx_bytes, align 8, !dbg !16504
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16505
  %call17 = call i32 @netif_rx(%struct.sk_buff* %33) #12, !dbg !16506
  store i32 0, i32* %retval, align 4, !dbg !16507
  br label %return, !dbg !16507

return:                                           ; preds = %if.end11, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !16508
  ret i32 %34, !dbg !16508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_desc(%struct.ksz_desc* %desc) #2 !dbg !16509 {
entry:
  %desc.addr = alloca %struct.ksz_desc*, align 8
  store %struct.ksz_desc* %desc, %struct.ksz_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc.addr, metadata !16512, metadata !DIExpression()), !dbg !16513
  %0 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16514
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %0, i32 0, i32 1, !dbg !16515
  %ctrl = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 0, !dbg !16516
  %tx = bitcast %union.desc_stat* %ctrl to %struct.ksz_desc_tx_stat*, !dbg !16517
  %1 = bitcast %struct.ksz_desc_tx_stat* %tx to i32*, !dbg !16518
  %bf.load = load i32, i32* %1, align 8, !dbg !16519
  %bf.clear = and i32 %bf.load, 2147483647, !dbg !16519
  %bf.set = or i32 %bf.clear, -2147483648, !dbg !16519
  store i32 %bf.set, i32* %1, align 8, !dbg !16519
  %2 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16520
  %sw1 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %2, i32 0, i32 1, !dbg !16522
  %buf_size = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw1, i32 0, i32 2, !dbg !16523
  %3 = load i32, i32* %buf_size, align 8, !dbg !16523
  %4 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16524
  %sw2 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %4, i32 0, i32 1, !dbg !16525
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw2, i32 0, i32 1, !dbg !16526
  %data = bitcast %union.desc_buf* %buf to i32*, !dbg !16527
  %5 = load i32, i32* %data, align 4, !dbg !16527
  %cmp = icmp ne i32 %3, %5, !dbg !16528
  br i1 %cmp, label %if.then, label %if.end, !dbg !16529

if.then:                                          ; preds = %entry
  %6 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16530
  %sw3 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %6, i32 0, i32 1, !dbg !16532
  %buf4 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw3, i32 0, i32 1, !dbg !16533
  %data5 = bitcast %union.desc_buf* %buf4 to i32*, !dbg !16534
  %7 = load i32, i32* %data5, align 4, !dbg !16534
  %8 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16535
  %sw6 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %8, i32 0, i32 1, !dbg !16536
  %buf_size7 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw6, i32 0, i32 2, !dbg !16537
  store i32 %7, i32* %buf_size7, align 8, !dbg !16538
  %9 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16539
  %sw8 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %9, i32 0, i32 1, !dbg !16539
  %buf9 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw8, i32 0, i32 1, !dbg !16539
  %data10 = bitcast %union.desc_buf* %buf9 to i32*, !dbg !16539
  %10 = load i32, i32* %data10, align 4, !dbg !16539
  %11 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16540
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %11, i32 0, i32 0, !dbg !16541
  %12 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !16541
  %buf11 = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %12, i32 0, i32 1, !dbg !16542
  %data12 = bitcast %union.desc_buf* %buf11 to i32*, !dbg !16543
  store i32 %10, i32* %data12, align 4, !dbg !16544
  br label %if.end, !dbg !16545

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16546
  %sw13 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %13, i32 0, i32 1, !dbg !16546
  %ctrl14 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw13, i32 0, i32 0, !dbg !16546
  %data15 = bitcast %union.desc_stat* %ctrl14 to i32*, !dbg !16546
  %14 = load i32, i32* %data15, align 8, !dbg !16546
  %15 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16547
  %phw16 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %15, i32 0, i32 0, !dbg !16548
  %16 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw16, align 8, !dbg !16548
  %ctrl17 = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %16, i32 0, i32 0, !dbg !16549
  %data18 = bitcast %union.desc_stat* %ctrl17 to i32*, !dbg !16550
  store i32 %14, i32* %data18, align 4, !dbg !16551
  ret void, !dbg !16552
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #2 !dbg !16553 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16556, metadata !DIExpression()), !dbg !16557
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !16558, metadata !DIExpression()), !dbg !16559
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16560
  %1 = load i32, i32* %length.addr, align 4, !dbg !16561
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #12, !dbg !16562
  ret %struct.sk_buff* %call, !dbg !16563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #2 !dbg !16564 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16567, metadata !DIExpression()), !dbg !16568
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16569, metadata !DIExpression()), !dbg !16570
  %0 = load i32, i32* %len.addr, align 4, !dbg !16571
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16572
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !16573
  %2 = load i8*, i8** %data, align 8, !dbg !16574
  %idx.ext = sext i32 %0 to i64, !dbg !16574
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !16574
  store i8* %add.ptr, i8** %data, align 8, !dbg !16574
  %3 = load i32, i32* %len.addr, align 4, !dbg !16575
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16576
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !16577
  %5 = load i32, i32* %tail, align 8, !dbg !16578
  %add = add i32 %5, %3, !dbg !16578
  store i32 %add, i32* %tail, align 8, !dbg !16578
  ret void, !dbg !16579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_put_data(%struct.sk_buff* %skb, i8* %data, i32 %len) #2 !dbg !16580 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16583, metadata !DIExpression()), !dbg !16584
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16585, metadata !DIExpression()), !dbg !16586
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16587, metadata !DIExpression()), !dbg !16588
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !16589, metadata !DIExpression()), !dbg !16590
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16591
  %1 = load i32, i32* %len.addr, align 4, !dbg !16592
  %call = call i8* @skb_put(%struct.sk_buff* %0, i32 %1) #12, !dbg !16593
  store i8* %call, i8** %tmp, align 8, !dbg !16590
  %2 = load i8*, i8** %tmp, align 8, !dbg !16594
  %3 = load i8*, i8** %data.addr, align 8, !dbg !16595
  %4 = load i32, i32* %len.addr, align 4, !dbg !16596
  %conv = zext i32 %4 to i64, !dbg !16596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %conv, i1 false), !dbg !16597
  %5 = load i8*, i8** %tmp, align 8, !dbg !16598
  ret i8* %5, !dbg !16599
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csum_verified(%struct.sk_buff* %skb) #2 !dbg !16600 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %protocol = alloca i16, align 2
  %iph = alloca %struct.iphdr*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16601, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.declare(metadata i16* %protocol, metadata !16603, metadata !DIExpression()), !dbg !16604
  call void @llvm.dbg.declare(metadata %struct.iphdr** %iph, metadata !16605, metadata !DIExpression()), !dbg !16606
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16607
  %protocol1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 29, !dbg !16608
  %1 = load i16, i16* %protocol1, align 8, !dbg !16608
  store i16 %1, i16* %protocol, align 2, !dbg !16609
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16610
  call void @skb_reset_network_header(%struct.sk_buff* %2) #12, !dbg !16611
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16612
  %call = call i8* @skb_network_header(%struct.sk_buff* %3) #12, !dbg !16613
  %4 = bitcast i8* %call to %struct.iphdr*, !dbg !16614
  store %struct.iphdr* %4, %struct.iphdr** %iph, align 8, !dbg !16615
  %5 = load i16, i16* %protocol, align 2, !dbg !16616
  %conv = zext i16 %5 to i32, !dbg !16616
  %cmp = icmp eq i32 %conv, 129, !dbg !16618
  br i1 %cmp, label %if.then, label %if.end, !dbg !16619

if.then:                                          ; preds = %entry
  %6 = load %struct.iphdr*, %struct.iphdr** %iph, align 8, !dbg !16620
  %tot_len = getelementptr inbounds %struct.iphdr, %struct.iphdr* %6, i32 0, i32 2, !dbg !16622
  %7 = load i16, i16* %tot_len, align 2, !dbg !16622
  store i16 %7, i16* %protocol, align 2, !dbg !16623
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16624
  call void @skb_set_network_header(%struct.sk_buff* %8, i32 4) #12, !dbg !16625
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16626
  %call3 = call i8* @skb_network_header(%struct.sk_buff* %9) #12, !dbg !16627
  %10 = bitcast i8* %call3 to %struct.iphdr*, !dbg !16628
  store %struct.iphdr* %10, %struct.iphdr** %iph, align 8, !dbg !16629
  br label %if.end, !dbg !16630

if.end:                                           ; preds = %if.then, %entry
  %11 = load i16, i16* %protocol, align 2, !dbg !16631
  %conv4 = zext i16 %11 to i32, !dbg !16631
  %cmp5 = icmp eq i32 %conv4, 8, !dbg !16633
  br i1 %cmp5, label %if.then7, label %if.end14, !dbg !16634

if.then7:                                         ; preds = %if.end
  %12 = load %struct.iphdr*, %struct.iphdr** %iph, align 8, !dbg !16635
  %protocol8 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %12, i32 0, i32 6, !dbg !16638
  %13 = load i8, i8* %protocol8, align 1, !dbg !16638
  %conv9 = zext i8 %13 to i32, !dbg !16635
  %cmp10 = icmp eq i32 %conv9, 6, !dbg !16639
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !16640

if.then12:                                        ; preds = %if.then7
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16641
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 14, !dbg !16642
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !16643
  %bf.clear = and i16 %bf.load, -97, !dbg !16643
  %bf.set = or i16 %bf.clear, 32, !dbg !16643
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !16643
  br label %if.end13, !dbg !16641

if.end13:                                         ; preds = %if.then12, %if.then7
  br label %if.end14, !dbg !16644

if.end14:                                         ; preds = %if.end13, %if.end
  ret void, !dbg !16645
}

; Function Attrs: noredzone
declare dso_local i32 @netif_rx(%struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reset_network_header(%struct.sk_buff* %skb) #2 !dbg !16646 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16647, metadata !DIExpression()), !dbg !16648
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16649
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !16650
  %1 = load i8*, i8** %data, align 8, !dbg !16650
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16651
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !16652
  %3 = load i8*, i8** %head, align 8, !dbg !16652
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !16653
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !16653
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16653
  %conv = trunc i64 %sub.ptr.sub to i16, !dbg !16649
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16654
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 31, !dbg !16655
  store i16 %conv, i16* %network_header, align 4, !dbg !16656
  ret void, !dbg !16657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_network_header(%struct.sk_buff* %skb) #2 !dbg !16658 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16661, metadata !DIExpression()), !dbg !16662
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16663
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !16664
  %1 = load i8*, i8** %head, align 8, !dbg !16664
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16665
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 31, !dbg !16666
  %3 = load i16, i16* %network_header, align 4, !dbg !16666
  %conv = zext i16 %3 to i32, !dbg !16665
  %idx.ext = sext i32 %conv to i64, !dbg !16667
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !16667
  ret i8* %add.ptr, !dbg !16668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_set_network_header(%struct.sk_buff* %skb, i32 %offset) #2 !dbg !16669 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16673, metadata !DIExpression()), !dbg !16674
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !16675, metadata !DIExpression()), !dbg !16676
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16677
  call void @skb_reset_network_header(%struct.sk_buff* %0) #12, !dbg !16678
  %1 = load i32, i32* %offset.addr, align 4, !dbg !16679
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16680
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 31, !dbg !16681
  %3 = load i16, i16* %network_header, align 4, !dbg !16682
  %conv = zext i16 %3 to i32, !dbg !16682
  %add = add i32 %conv, %1, !dbg !16682
  %conv1 = trunc i32 %add to i16, !dbg !16682
  store i16 %conv1, i16* %network_header, align 4, !dbg !16682
  ret void, !dbg !16683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_rx_pkt(%struct.ksz_desc_info* %info, %struct.ksz_desc** %desc) #2 !dbg !16684 {
entry:
  %info.addr = alloca %struct.ksz_desc_info*, align 8
  %desc.addr = alloca %struct.ksz_desc**, align 8
  store %struct.ksz_desc_info* %info, %struct.ksz_desc_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info.addr, metadata !16688, metadata !DIExpression()), !dbg !16689
  store %struct.ksz_desc** %desc, %struct.ksz_desc*** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc*** %desc.addr, metadata !16690, metadata !DIExpression()), !dbg !16691
  %0 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !16692
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %0, i32 0, i32 0, !dbg !16693
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !16693
  %2 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !16694
  %last = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %2, i32 0, i32 7, !dbg !16695
  %3 = load i32, i32* %last, align 8, !dbg !16695
  %idxprom = sext i32 %3 to i64, !dbg !16692
  %arrayidx = getelementptr %struct.ksz_desc, %struct.ksz_desc* %1, i64 %idxprom, !dbg !16692
  %4 = load %struct.ksz_desc**, %struct.ksz_desc*** %desc.addr, align 8, !dbg !16696
  store %struct.ksz_desc* %arrayidx, %struct.ksz_desc** %4, align 8, !dbg !16697
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !16698
  %last1 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %5, i32 0, i32 7, !dbg !16699
  %6 = load i32, i32* %last1, align 8, !dbg !16700
  %inc = add i32 %6, 1, !dbg !16700
  store i32 %inc, i32* %last1, align 8, !dbg !16700
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !16701
  %mask = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 9, !dbg !16702
  %8 = load i32, i32* %mask, align 8, !dbg !16702
  %9 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !16703
  %last2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %9, i32 0, i32 7, !dbg !16704
  %10 = load i32, i32* %last2, align 8, !dbg !16705
  %and = and i32 %10, %8, !dbg !16705
  store i32 %and, i32* %last2, align 8, !dbg !16705
  %11 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !16706
  %avail = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %11, i32 0, i32 6, !dbg !16707
  %12 = load i32, i32* %avail, align 4, !dbg !16708
  %dec = add i32 %12, -1, !dbg !16708
  store i32 %dec, i32* %avail, align 4, !dbg !16708
  %13 = load %struct.ksz_desc**, %struct.ksz_desc*** %desc.addr, align 8, !dbg !16709
  %14 = load %struct.ksz_desc*, %struct.ksz_desc** %13, align 8, !dbg !16710
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %14, i32 0, i32 1, !dbg !16711
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !16712
  %data = bitcast %union.desc_buf* %buf to i32*, !dbg !16713
  %15 = load i32, i32* %data, align 4, !dbg !16714
  %and3 = and i32 %15, -2048, !dbg !16714
  store i32 %and3, i32* %data, align 4, !dbg !16714
  ret void, !dbg !16715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_dma_buf(%struct.dev_info* %adapter, %struct.ksz_dma_buf* %dma_buf, i32 %direction) #2 !dbg !16716 {
entry:
  %adapter.addr = alloca %struct.dev_info*, align 8
  %dma_buf.addr = alloca %struct.ksz_dma_buf*, align 8
  %direction.addr = alloca i32, align 4
  store %struct.dev_info* %adapter, %struct.dev_info** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %adapter.addr, metadata !16719, metadata !DIExpression()), !dbg !16720
  store %struct.ksz_dma_buf* %dma_buf, %struct.ksz_dma_buf** %dma_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_dma_buf** %dma_buf.addr, metadata !16721, metadata !DIExpression()), !dbg !16722
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !16723, metadata !DIExpression()), !dbg !16724
  %0 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !16725
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 1, !dbg !16725
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16725
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !16725
  %2 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf.addr, align 8, !dbg !16725
  %dma = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %2, i32 0, i32 1, !dbg !16725
  %3 = load i64, i64* %dma, align 8, !dbg !16725
  %4 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf.addr, align 8, !dbg !16725
  %len = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %4, i32 0, i32 2, !dbg !16725
  %5 = load i32, i32* %len, align 8, !dbg !16725
  %conv = sext i32 %5 to i64, !dbg !16725
  %6 = load i32, i32* %direction.addr, align 4, !dbg !16725
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %3, i64 %conv, i32 %6, i64 0) #12, !dbg !16725
  %7 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf.addr, align 8, !dbg !16726
  %skb = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %7, i32 0, i32 0, !dbg !16726
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16726
  call void @consume_skb(%struct.sk_buff* %8) #12, !dbg !16726
  %9 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf.addr, align 8, !dbg !16727
  %skb1 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %9, i32 0, i32 0, !dbg !16728
  store %struct.sk_buff* null, %struct.sk_buff** %skb1, align 8, !dbg !16729
  %10 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf.addr, align 8, !dbg !16730
  %dma2 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %10, i32 0, i32 1, !dbg !16731
  store i64 0, i64* %dma2, align 8, !dbg !16732
  ret void, !dbg !16733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @alloc_skb(i32 %size, i32 %priority) #2 !dbg !16734 {
entry:
  %size.addr = alloca i32, align 4
  %priority.addr = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16737, metadata !DIExpression()), !dbg !16738
  store i32 %priority, i32* %priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %priority.addr, metadata !16739, metadata !DIExpression()), !dbg !16740
  %0 = load i32, i32* %size.addr, align 4, !dbg !16741
  %1 = load i32, i32* %priority.addr, align 4, !dbg !16742
  %call = call %struct.sk_buff* @__alloc_skb(i32 %0, i32 %1, i32 0, i32 -1) #12, !dbg !16743
  ret %struct.sk_buff* %call, !dbg !16744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !8265 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16745, metadata !DIExpression()), !dbg !16746
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16747, metadata !DIExpression()), !dbg !16748
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16749, metadata !DIExpression()), !dbg !16750
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16751, metadata !DIExpression()), !dbg !16752
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !16753, metadata !DIExpression()), !dbg !16754
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !16755, metadata !DIExpression()), !dbg !16758
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !16758
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !16758
  %lnot = xor i1 %call, true, !dbg !16758
  %lnot1 = xor i1 %lnot, true, !dbg !16758
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16758
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !16758
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !16759
  %tobool = icmp ne i32 %1, 0, !dbg !16759
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16759

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !16759
  %tobool2 = trunc i8 %2 to i1, !dbg !16759
  %lnot3 = xor i1 %tobool2, true, !dbg !16759
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !16761
  %lnot5 = xor i1 %3, true, !dbg !16759
  %lnot7 = xor i1 %lnot5, true, !dbg !16759
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !16759
  %conv = sext i32 %lnot.ext8 to i64, !dbg !16759
  %tobool9 = icmp ne i64 %conv, 0, !dbg !16759
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !16758

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !16762
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16764, metadata !DIExpression()), !dbg !16766
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !16766
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !16767
  %tobool10 = icmp ne i32 %4, 0, !dbg !16767
  %lnot11 = xor i1 %tobool10, true, !dbg !16767
  %lnot13 = xor i1 %lnot11, true, !dbg !16767
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !16767
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !16767
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !16767
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !16766

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !16767

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !16769

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !16771

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16769
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !16769
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16769
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !16769
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !16769
  br label %do.body21, !dbg !16769

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !16773

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !16775

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !16773

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), i32 276, i32 2313, i64 12) #10, !dbg !16777, !srcloc !16779
  br label %do.end25, !dbg !16777

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #10, !dbg !16780, !srcloc !16782
  br label %do.body26, !dbg !16773

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !16783

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !16773

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !16769

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !16785

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !16769

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !16769

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !16766
  %tobool32 = icmp ne i32 %7, 0, !dbg !16766
  %lnot33 = xor i1 %tobool32, true, !dbg !16766
  %lnot35 = xor i1 %lnot33, true, !dbg !16766
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !16766
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !16766
  store i64 %conv37, i64* %tmp, align 8, !dbg !16767
  %8 = load i64, i64* %tmp, align 8, !dbg !16766
  br label %if.end38, !dbg !16762

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !16758
  %tobool40 = icmp ne i32 %9, 0, !dbg !16758
  %lnot41 = xor i1 %tobool40, true, !dbg !16758
  %lnot43 = xor i1 %lnot41, true, !dbg !16758
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !16758
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !16758
  store i64 %conv45, i64* %tmp39, align 8, !dbg !16759
  %10 = load i64, i64* %tmp39, align 8, !dbg !16758
  %tobool46 = icmp ne i64 %10, 0, !dbg !16787
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !16788

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !16789
  br label %return, !dbg !16789

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16790
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !16791
  %13 = load i64, i64* %size.addr, align 8, !dbg !16792
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !16793
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16794
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !16795
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !16795
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !16795
  %18 = ptrtoint i8* %17 to i64, !dbg !16795
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !16795
  %shr = lshr i64 %call49, 12, !dbg !16795
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !16795
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !16796
  %20 = ptrtoint i8* %19 to i64, !dbg !16796
  %and = and i64 %20, 4095, !dbg !16796
  %21 = load i64, i64* %size.addr, align 8, !dbg !16797
  %22 = load i32, i32* %dir.addr, align 4, !dbg !16798
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !16799
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !16800
  store i64 %call50, i64* %retval, align 8, !dbg !16801
  br label %return, !dbg !16801

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !16802
  ret i64 %24, !dbg !16802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_tail_pointer(%struct.sk_buff* %skb) #2 !dbg !16803 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16804, metadata !DIExpression()), !dbg !16805
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16806
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !16807
  %1 = load i8*, i8** %head, align 8, !dbg !16807
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16808
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 34, !dbg !16809
  %3 = load i32, i32* %tail, align 8, !dbg !16809
  %idx.ext = zext i32 %3 to i64, !dbg !16810
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !16810
  ret i8* %add.ptr, !dbg !16811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_rx_buf(%struct.ksz_desc* %desc, i32 %addr) #2 !dbg !16812 {
entry:
  %desc.addr = alloca %struct.ksz_desc*, align 8
  %addr.addr = alloca i32, align 4
  store %struct.ksz_desc* %desc, %struct.ksz_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc.addr, metadata !16815, metadata !DIExpression()), !dbg !16816
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16817, metadata !DIExpression()), !dbg !16818
  %0 = load i32, i32* %addr.addr, align 4, !dbg !16819
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16820
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %1, i32 0, i32 0, !dbg !16821
  %2 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !16821
  %addr1 = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %2, i32 0, i32 2, !dbg !16822
  store i32 %0, i32* %addr1, align 4, !dbg !16823
  ret void, !dbg !16824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_rx_len(%struct.ksz_desc* %desc, i32 %len) #2 !dbg !16825 {
entry:
  %desc.addr = alloca %struct.ksz_desc*, align 8
  %len.addr = alloca i32, align 4
  store %struct.ksz_desc* %desc, %struct.ksz_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc.addr, metadata !16826, metadata !DIExpression()), !dbg !16827
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16828, metadata !DIExpression()), !dbg !16829
  %0 = load i32, i32* %len.addr, align 4, !dbg !16830
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !16831
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %1, i32 0, i32 1, !dbg !16832
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !16833
  %rx = bitcast %union.desc_buf* %buf to %struct.ksz_desc_rx_buf*, !dbg !16834
  %2 = bitcast %struct.ksz_desc_rx_buf* %rx to i32*, !dbg !16835
  %bf.load = load i32, i32* %2, align 4, !dbg !16836
  %bf.value = and i32 %0, 2047, !dbg !16836
  %bf.clear = and i32 %bf.load, -2048, !dbg !16836
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !16836
  store i32 %bf.set, i32* %2, align 4, !dbg !16836
  ret void, !dbg !16837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !16838 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16839, metadata !DIExpression()), !dbg !16840
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16841
  call void @kfree_skb(%struct.sk_buff* %0) #12, !dbg !16842
  ret void, !dbg !16843
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__alloc_skb(i32, i32, i32, i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !16844 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16847, metadata !DIExpression()), !dbg !16848
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16849
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !16851
  %1 = load i8*, i8** %init_name, align 8, !dbg !16851
  %tobool = icmp ne i8* %1, null, !dbg !16849
  br i1 %tobool, label %if.then, label %if.end, !dbg !16852

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16853
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !16854
  %3 = load i8*, i8** %init_name1, align 8, !dbg !16854
  store i8* %3, i8** %retval, align 8, !dbg !16855
  br label %return, !dbg !16855

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16856
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !16857
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !16858
  store i8* %call, i8** %retval, align 8, !dbg !16859
  br label %return, !dbg !16859

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !16860
  ret i8* %5, !dbg !16860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !16861 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16864, metadata !DIExpression()), !dbg !16865
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16866, metadata !DIExpression()), !dbg !16867
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16868, metadata !DIExpression()), !dbg !16869
  ret void, !dbg !16870
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !16871 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !16875, metadata !DIExpression()), !dbg !16876
  call void @llvm.dbg.declare(metadata i64* %y, metadata !16877, metadata !DIExpression()), !dbg !16878
  %0 = load i64, i64* %x.addr, align 8, !dbg !16879
  %sub = sub i64 %0, -2147483648, !dbg !16880
  store i64 %sub, i64* %y, align 8, !dbg !16878
  %1 = load i64, i64* %y, align 8, !dbg !16881
  %2 = load i64, i64* %x.addr, align 8, !dbg !16882
  %3 = load i64, i64* %y, align 8, !dbg !16883
  %cmp = icmp ugt i64 %2, %3, !dbg !16884
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16885

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !16886
  br label %cond.end, !dbg !16885

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !16887
  %sub1 = sub i64 -2147483648, %5, !dbg !16888
  br label %cond.end, !dbg !16885

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !16885
  %add = add i64 %1, %cond, !dbg !16889
  store i64 %add, i64* %x.addr, align 8, !dbg !16890
  %6 = load i64, i64* %x.addr, align 8, !dbg !16891
  ret i64 %6, !dbg !16892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !16893 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16898, metadata !DIExpression()), !dbg !16899
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16900
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !16901
  %1 = load i8*, i8** %name, align 8, !dbg !16901
  ret i8* %1, !dbg !16902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_wol_frame(%struct.ksz_hw* %hw, i32 %i, i32 %mask_size, i8* %mask, i32 %frame_size, i8* %pattern) #2 !dbg !16903 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i.addr = alloca i32, align 4
  %mask_size.addr = alloca i32, align 4
  %mask.addr = alloca i8*, align 8
  %frame_size.addr = alloca i32, align 4
  %pattern.addr = alloca i8*, align 8
  %bits = alloca i32, align 4
  %from = alloca i32, align 4
  %len = alloca i32, align 4
  %to = alloca i32, align 4
  %crc = alloca i32, align 4
  %data = alloca [64 x i8], align 16
  %val = alloca i8, align 1
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp77 = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !16906, metadata !DIExpression()), !dbg !16907
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !16908, metadata !DIExpression()), !dbg !16909
  store i32 %mask_size, i32* %mask_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask_size.addr, metadata !16910, metadata !DIExpression()), !dbg !16911
  store i8* %mask, i8** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mask.addr, metadata !16912, metadata !DIExpression()), !dbg !16913
  store i32 %frame_size, i32* %frame_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_size.addr, metadata !16914, metadata !DIExpression()), !dbg !16915
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !16916, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !16918, metadata !DIExpression()), !dbg !16919
  call void @llvm.dbg.declare(metadata i32* %from, metadata !16920, metadata !DIExpression()), !dbg !16921
  call void @llvm.dbg.declare(metadata i32* %len, metadata !16922, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.declare(metadata i32* %to, metadata !16924, metadata !DIExpression()), !dbg !16925
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !16926, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.declare(metadata [64 x i8]* %data, metadata !16928, metadata !DIExpression()), !dbg !16929
  call void @llvm.dbg.declare(metadata i8* %val, metadata !16930, metadata !DIExpression()), !dbg !16931
  store i8 0, i8* %val, align 1, !dbg !16931
  %0 = load i32, i32* %frame_size.addr, align 4, !dbg !16932
  %1 = load i32, i32* %mask_size.addr, align 4, !dbg !16934
  %mul = mul i32 %1, 8, !dbg !16935
  %cmp = icmp ugt i32 %0, %mul, !dbg !16936
  br i1 %cmp, label %if.then, label %if.end, !dbg !16937

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %mask_size.addr, align 4, !dbg !16938
  %mul1 = mul i32 %2, 8, !dbg !16939
  store i32 %mul1, i32* %frame_size.addr, align 4, !dbg !16940
  br label %if.end, !dbg !16941

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %frame_size.addr, align 4, !dbg !16942
  %cmp2 = icmp ugt i32 %3, 64, !dbg !16944
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !16945

if.then3:                                         ; preds = %if.end
  store i32 64, i32* %frame_size.addr, align 4, !dbg !16946
  br label %if.end4, !dbg !16947

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %i.addr, align 4, !dbg !16948
  %mul5 = mul i32 %4, 16, !dbg !16948
  store i32 %mul5, i32* %i.addr, align 4, !dbg !16948
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !16949
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 0, !dbg !16950
  %6 = load i8*, i8** %io, align 8, !dbg !16950
  %add.ptr = getelementptr i8, i8* %6, i64 548, !dbg !16951
  %7 = load i32, i32* %i.addr, align 4, !dbg !16952
  %idx.ext = sext i32 %7 to i64, !dbg !16953
  %add.ptr6 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !16953
  call void @writel(i32 0, i8* %add.ptr6) #12, !dbg !16954
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !16955
  %io7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 0, !dbg !16956
  %9 = load i8*, i8** %io7, align 8, !dbg !16956
  %add.ptr8 = getelementptr i8, i8* %9, i64 552, !dbg !16957
  %10 = load i32, i32* %i.addr, align 4, !dbg !16958
  %idx.ext9 = sext i32 %10 to i64, !dbg !16959
  %add.ptr10 = getelementptr i8, i8* %add.ptr8, i64 %idx.ext9, !dbg !16959
  call void @writel(i32 0, i8* %add.ptr10) #12, !dbg !16960
  store i32 0, i32* %to, align 4, !dbg !16961
  store i32 0, i32* %from, align 4, !dbg !16962
  store i32 0, i32* %len, align 4, !dbg !16963
  store i32 0, i32* %bits, align 4, !dbg !16964
  br label %do.body, !dbg !16965

do.body:                                          ; preds = %do.cond, %if.end4
  %11 = load i32, i32* %bits, align 4, !dbg !16966
  %tobool = icmp ne i32 %11, 0, !dbg !16966
  br i1 %tobool, label %if.then11, label %if.else, !dbg !16969

if.then11:                                        ; preds = %do.body
  %12 = load i8, i8* %val, align 1, !dbg !16970
  %conv = zext i8 %12 to i32, !dbg !16970
  %and = and i32 %conv, 1, !dbg !16973
  %tobool12 = icmp ne i32 %and, 0, !dbg !16973
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !16974

if.then13:                                        ; preds = %if.then11
  %13 = load i8*, i8** %pattern.addr, align 8, !dbg !16975
  %14 = load i32, i32* %from, align 4, !dbg !16976
  %idxprom = sext i32 %14 to i64, !dbg !16975
  %arrayidx = getelementptr i8, i8* %13, i64 %idxprom, !dbg !16975
  %15 = load i8, i8* %arrayidx, align 1, !dbg !16975
  %16 = load i32, i32* %to, align 4, !dbg !16977
  %inc = add i32 %16, 1, !dbg !16977
  store i32 %inc, i32* %to, align 4, !dbg !16977
  %idxprom14 = sext i32 %16 to i64, !dbg !16978
  %arrayidx15 = getelementptr [64 x i8], [64 x i8]* %data, i64 0, i64 %idxprom14, !dbg !16978
  store i8 %15, i8* %arrayidx15, align 1, !dbg !16979
  br label %if.end16, !dbg !16978

if.end16:                                         ; preds = %if.then13, %if.then11
  %17 = load i8, i8* %val, align 1, !dbg !16980
  %conv17 = zext i8 %17 to i32, !dbg !16980
  %shr = ashr i32 %conv17, 1, !dbg !16980
  %conv18 = trunc i32 %shr to i8, !dbg !16980
  store i8 %conv18, i8* %val, align 1, !dbg !16980
  %18 = load i32, i32* %from, align 4, !dbg !16981
  %inc19 = add i32 %18, 1, !dbg !16981
  store i32 %inc19, i32* %from, align 4, !dbg !16981
  %19 = load i32, i32* %bits, align 4, !dbg !16982
  %dec = add i32 %19, -1, !dbg !16982
  store i32 %dec, i32* %bits, align 4, !dbg !16982
  br label %if.end33, !dbg !16983

if.else:                                          ; preds = %do.body
  %20 = load i8*, i8** %mask.addr, align 8, !dbg !16984
  %21 = load i32, i32* %len, align 4, !dbg !16986
  %idxprom20 = sext i32 %21 to i64, !dbg !16984
  %arrayidx21 = getelementptr i8, i8* %20, i64 %idxprom20, !dbg !16984
  %22 = load i8, i8* %arrayidx21, align 1, !dbg !16984
  store i8 %22, i8* %val, align 1, !dbg !16987
  %23 = load i8, i8* %val, align 1, !dbg !16988
  %24 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !16989
  %io22 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %24, i32 0, i32 0, !dbg !16990
  %25 = load i8*, i8** %io22, align 8, !dbg !16990
  %add.ptr23 = getelementptr i8, i8* %25, i64 548, !dbg !16991
  %26 = load i32, i32* %i.addr, align 4, !dbg !16992
  %idx.ext24 = sext i32 %26 to i64, !dbg !16993
  %add.ptr25 = getelementptr i8, i8* %add.ptr23, i64 %idx.ext24, !dbg !16993
  %27 = load i32, i32* %len, align 4, !dbg !16994
  %idx.ext26 = sext i32 %27 to i64, !dbg !16995
  %add.ptr27 = getelementptr i8, i8* %add.ptr25, i64 %idx.ext26, !dbg !16995
  call void @writeb(i8 zeroext %23, i8* %add.ptr27) #12, !dbg !16996
  %28 = load i32, i32* %len, align 4, !dbg !16997
  %inc28 = add i32 %28, 1, !dbg !16997
  store i32 %inc28, i32* %len, align 4, !dbg !16997
  %29 = load i8, i8* %val, align 1, !dbg !16998
  %tobool29 = icmp ne i8 %29, 0, !dbg !16998
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !17000

if.then30:                                        ; preds = %if.else
  store i32 8, i32* %bits, align 4, !dbg !17001
  br label %if.end32, !dbg !17002

if.else31:                                        ; preds = %if.else
  %30 = load i32, i32* %from, align 4, !dbg !17003
  %add = add i32 %30, 8, !dbg !17003
  store i32 %add, i32* %from, align 4, !dbg !17003
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end16
  br label %do.cond, !dbg !17004

do.cond:                                          ; preds = %if.end33
  %31 = load i32, i32* %from, align 4, !dbg !17005
  %32 = load i32, i32* %frame_size.addr, align 4, !dbg !17006
  %cmp34 = icmp slt i32 %31, %32, !dbg !17007
  br i1 %cmp34, label %do.body, label %do.end, !dbg !17004, !llvm.loop !17008

do.end:                                           ; preds = %do.cond
  %33 = load i8, i8* %val, align 1, !dbg !17010
  %tobool36 = icmp ne i8 %33, 0, !dbg !17010
  br i1 %tobool36, label %if.then37, label %if.end53, !dbg !17012

if.then37:                                        ; preds = %do.end
  %34 = load i8*, i8** %mask.addr, align 8, !dbg !17013
  %35 = load i32, i32* %len, align 4, !dbg !17015
  %sub = sub i32 %35, 1, !dbg !17016
  %idxprom38 = sext i32 %sub to i64, !dbg !17013
  %arrayidx39 = getelementptr i8, i8* %34, i64 %idxprom38, !dbg !17013
  %36 = load i8, i8* %arrayidx39, align 1, !dbg !17013
  %conv40 = zext i8 %36 to i32, !dbg !17013
  store i32 %conv40, i32* %bits, align 4, !dbg !17017
  %37 = load i32, i32* %from, align 4, !dbg !17018
  %rem = srem i32 %37, 8, !dbg !17019
  %38 = load i8, i8* %val, align 1, !dbg !17020
  %conv41 = zext i8 %38 to i32, !dbg !17020
  %shl = shl i32 %conv41, %rem, !dbg !17020
  %conv42 = trunc i32 %shl to i8, !dbg !17020
  store i8 %conv42, i8* %val, align 1, !dbg !17020
  %39 = load i8, i8* %val, align 1, !dbg !17021
  %conv43 = zext i8 %39 to i32, !dbg !17021
  %neg = xor i32 %conv43, -1, !dbg !17022
  %40 = load i32, i32* %bits, align 4, !dbg !17023
  %and44 = and i32 %40, %neg, !dbg !17023
  store i32 %and44, i32* %bits, align 4, !dbg !17023
  %41 = load i32, i32* %bits, align 4, !dbg !17024
  %conv45 = trunc i32 %41 to i8, !dbg !17024
  %42 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17025
  %io46 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %42, i32 0, i32 0, !dbg !17026
  %43 = load i8*, i8** %io46, align 8, !dbg !17026
  %add.ptr47 = getelementptr i8, i8* %43, i64 548, !dbg !17027
  %44 = load i32, i32* %i.addr, align 4, !dbg !17028
  %idx.ext48 = sext i32 %44 to i64, !dbg !17029
  %add.ptr49 = getelementptr i8, i8* %add.ptr47, i64 %idx.ext48, !dbg !17029
  %45 = load i32, i32* %len, align 4, !dbg !17030
  %idx.ext50 = sext i32 %45 to i64, !dbg !17031
  %add.ptr51 = getelementptr i8, i8* %add.ptr49, i64 %idx.ext50, !dbg !17031
  %add.ptr52 = getelementptr i8, i8* %add.ptr51, i64 -1, !dbg !17032
  call void @writeb(i8 zeroext %conv45, i8* %add.ptr52) #12, !dbg !17033
  br label %if.end53, !dbg !17034

if.end53:                                         ; preds = %if.then37, %do.end
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !17035, metadata !DIExpression()), !dbg !17037
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %data, i64 0, i64 0, !dbg !17037
  %46 = load i32, i32* %to, align 4, !dbg !17037
  %conv54 = sext i32 %46 to i64, !dbg !17037
  %call = call i32 @crc32_le(i32 -1, i8* %arraydecay, i64 %conv54) #16, !dbg !17037
  store i32 %call, i32* %__x, align 4, !dbg !17037
  %47 = load i32, i32* %__x, align 4, !dbg !17037
  %48 = call i1 @llvm.is.constant.i32(i32 %47), !dbg !17037
  br i1 %48, label %cond.true, label %cond.false, !dbg !17037

cond.true:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !17038, metadata !DIExpression()), !dbg !17040
  %49 = load i32, i32* %__x, align 4, !dbg !17040
  store i32 %49, i32* %___x, align 4, !dbg !17040
  %50 = load i32, i32* %___x, align 4, !dbg !17040
  %shr55 = lshr i32 %50, 16, !dbg !17040
  %51 = load i32, i32* %___x, align 4, !dbg !17040
  %shl56 = shl i32 %51, 16, !dbg !17040
  %or = or i32 %shr55, %shl56, !dbg !17040
  store i32 %or, i32* %___x, align 4, !dbg !17040
  %52 = load i32, i32* %___x, align 4, !dbg !17040
  %and57 = and i32 %52, -16711936, !dbg !17040
  %shr58 = lshr i32 %and57, 8, !dbg !17040
  %53 = load i32, i32* %___x, align 4, !dbg !17040
  %and59 = and i32 %53, 16711935, !dbg !17040
  %shl60 = shl i32 %and59, 8, !dbg !17040
  %or61 = or i32 %shr58, %shl60, !dbg !17040
  store i32 %or61, i32* %___x, align 4, !dbg !17040
  %54 = load i32, i32* %___x, align 4, !dbg !17040
  %and62 = and i32 %54, -252645136, !dbg !17040
  %shr63 = lshr i32 %and62, 4, !dbg !17040
  %55 = load i32, i32* %___x, align 4, !dbg !17040
  %and64 = and i32 %55, 252645135, !dbg !17040
  %shl65 = shl i32 %and64, 4, !dbg !17040
  %or66 = or i32 %shr63, %shl65, !dbg !17040
  store i32 %or66, i32* %___x, align 4, !dbg !17040
  %56 = load i32, i32* %___x, align 4, !dbg !17040
  %and67 = and i32 %56, -858993460, !dbg !17040
  %shr68 = lshr i32 %and67, 2, !dbg !17040
  %57 = load i32, i32* %___x, align 4, !dbg !17040
  %and69 = and i32 %57, 858993459, !dbg !17040
  %shl70 = shl i32 %and69, 2, !dbg !17040
  %or71 = or i32 %shr68, %shl70, !dbg !17040
  store i32 %or71, i32* %___x, align 4, !dbg !17040
  %58 = load i32, i32* %___x, align 4, !dbg !17040
  %and72 = and i32 %58, -1431655766, !dbg !17040
  %shr73 = lshr i32 %and72, 1, !dbg !17040
  %59 = load i32, i32* %___x, align 4, !dbg !17040
  %and74 = and i32 %59, 1431655765, !dbg !17040
  %shl75 = shl i32 %and74, 1, !dbg !17040
  %or76 = or i32 %shr73, %shl75, !dbg !17040
  store i32 %or76, i32* %___x, align 4, !dbg !17040
  %60 = load i32, i32* %___x, align 4, !dbg !17040
  store i32 %60, i32* %tmp77, align 4, !dbg !17040
  %61 = load i32, i32* %tmp77, align 4, !dbg !17040
  br label %cond.end, !dbg !17037

cond.false:                                       ; preds = %if.end53
  %62 = load i32, i32* %__x, align 4, !dbg !17037
  %call78 = call i32 @__bitrev32(i32 %62) #12, !dbg !17037
  br label %cond.end, !dbg !17037

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %61, %cond.true ], [ %call78, %cond.false ], !dbg !17037
  store i32 %cond, i32* %tmp, align 4, !dbg !17037
  %63 = load i32, i32* %tmp, align 4, !dbg !17037
  store i32 %63, i32* %crc, align 4, !dbg !17041
  %64 = load i32, i32* %crc, align 4, !dbg !17042
  %65 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17043
  %io79 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %65, i32 0, i32 0, !dbg !17044
  %66 = load i8*, i8** %io79, align 8, !dbg !17044
  %add.ptr80 = getelementptr i8, i8* %66, i64 544, !dbg !17045
  %67 = load i32, i32* %i.addr, align 4, !dbg !17046
  %idx.ext81 = sext i32 %67 to i64, !dbg !17047
  %add.ptr82 = getelementptr i8, i8* %add.ptr80, i64 %idx.ext81, !dbg !17047
  call void @writel(i32 %64, i8* %add.ptr82) #12, !dbg !17048
  ret void, !dbg !17049
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #11

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__bitrev32(i32 %x) #2 !dbg !17050 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !17054, metadata !DIExpression()), !dbg !17055
  %0 = load i32, i32* %x.addr, align 4, !dbg !17056
  %and = and i32 %0, 65535, !dbg !17057
  %conv = trunc i32 %and to i16, !dbg !17056
  %call = call zeroext i16 @__bitrev16(i16 zeroext %conv) #12, !dbg !17058
  %conv1 = zext i16 %call to i32, !dbg !17058
  %shl = shl i32 %conv1, 16, !dbg !17059
  %1 = load i32, i32* %x.addr, align 4, !dbg !17060
  %shr = lshr i32 %1, 16, !dbg !17061
  %conv2 = trunc i32 %shr to i16, !dbg !17060
  %call3 = call zeroext i16 @__bitrev16(i16 zeroext %conv2) #12, !dbg !17062
  %conv4 = zext i16 %call3 to i32, !dbg !17062
  %or = or i32 %shl, %conv4, !dbg !17063
  ret i32 %or, !dbg !17064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__bitrev16(i16 zeroext %x) #2 !dbg !17065 {
entry:
  %x.addr = alloca i16, align 2
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !17068, metadata !DIExpression()), !dbg !17069
  %0 = load i16, i16* %x.addr, align 2, !dbg !17070
  %conv = zext i16 %0 to i32, !dbg !17070
  %and = and i32 %conv, 255, !dbg !17071
  %conv1 = trunc i32 %and to i8, !dbg !17070
  %call = call zeroext i8 @__bitrev8(i8 zeroext %conv1) #12, !dbg !17072
  %conv2 = zext i8 %call to i32, !dbg !17072
  %shl = shl i32 %conv2, 8, !dbg !17073
  %1 = load i16, i16* %x.addr, align 2, !dbg !17074
  %conv3 = zext i16 %1 to i32, !dbg !17074
  %shr = ashr i32 %conv3, 8, !dbg !17075
  %conv4 = trunc i32 %shr to i8, !dbg !17074
  %call5 = call zeroext i8 @__bitrev8(i8 zeroext %conv4) #12, !dbg !17076
  %conv6 = zext i8 %call5 to i32, !dbg !17076
  %or = or i32 %shl, %conv6, !dbg !17077
  %conv7 = trunc i32 %or to i16, !dbg !17078
  ret i16 %conv7, !dbg !17079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @__bitrev8(i8 zeroext %byte) #2 !dbg !17080 {
entry:
  %byte.addr = alloca i8, align 1
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !17083, metadata !DIExpression()), !dbg !17084
  %0 = load i8, i8* %byte.addr, align 1, !dbg !17085
  %idxprom = zext i8 %0 to i64, !dbg !17086
  %arrayidx = getelementptr [256 x i8], [256 x i8]* @byte_rev_table, i64 0, i64 %idxprom, !dbg !17086
  %1 = load i8, i8* %arrayidx, align 1, !dbg !17086
  ret i8 %1, !dbg !17087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_ena_add_addr(%struct.ksz_hw* %hw, i32 %index, i8* %mac_addr) #2 !dbg !17088 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %index.addr = alloca i32, align 4
  %mac_addr.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %mac_addr_lo = alloca i32, align 4
  %mac_addr_hi = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17091, metadata !DIExpression()), !dbg !17092
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !17093, metadata !DIExpression()), !dbg !17094
  store i8* %mac_addr, i8** %mac_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac_addr.addr, metadata !17095, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17097, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.declare(metadata i32* %mac_addr_lo, metadata !17099, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.declare(metadata i32* %mac_addr_hi, metadata !17101, metadata !DIExpression()), !dbg !17102
  store i32 0, i32* %mac_addr_hi, align 4, !dbg !17103
  store i32 0, i32* %i, align 4, !dbg !17104
  br label %for.cond, !dbg !17106

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17107
  %cmp = icmp slt i32 %0, 2, !dbg !17109
  br i1 %cmp, label %for.body, label %for.end, !dbg !17110

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %mac_addr_hi, align 4, !dbg !17111
  %shl = shl i32 %1, 8, !dbg !17111
  store i32 %shl, i32* %mac_addr_hi, align 4, !dbg !17111
  %2 = load i8*, i8** %mac_addr.addr, align 8, !dbg !17113
  %3 = load i32, i32* %i, align 4, !dbg !17114
  %idxprom = sext i32 %3 to i64, !dbg !17113
  %arrayidx = getelementptr i8, i8* %2, i64 %idxprom, !dbg !17113
  %4 = load i8, i8* %arrayidx, align 1, !dbg !17113
  %conv = zext i8 %4 to i32, !dbg !17113
  %5 = load i32, i32* %mac_addr_hi, align 4, !dbg !17115
  %or = or i32 %5, %conv, !dbg !17115
  store i32 %or, i32* %mac_addr_hi, align 4, !dbg !17115
  br label %for.inc, !dbg !17116

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !17117
  %inc = add i32 %6, 1, !dbg !17117
  store i32 %inc, i32* %i, align 4, !dbg !17117
  br label %for.cond, !dbg !17118, !llvm.loop !17119

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %mac_addr_hi, align 4, !dbg !17121
  %or1 = or i32 %7, -2147483648, !dbg !17121
  store i32 %or1, i32* %mac_addr_hi, align 4, !dbg !17121
  store i32 0, i32* %mac_addr_lo, align 4, !dbg !17122
  store i32 2, i32* %i, align 4, !dbg !17123
  br label %for.cond2, !dbg !17125

for.cond2:                                        ; preds = %for.inc11, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !17126
  %cmp3 = icmp slt i32 %8, 6, !dbg !17128
  br i1 %cmp3, label %for.body5, label %for.end13, !dbg !17129

for.body5:                                        ; preds = %for.cond2
  %9 = load i32, i32* %mac_addr_lo, align 4, !dbg !17130
  %shl6 = shl i32 %9, 8, !dbg !17130
  store i32 %shl6, i32* %mac_addr_lo, align 4, !dbg !17130
  %10 = load i8*, i8** %mac_addr.addr, align 8, !dbg !17132
  %11 = load i32, i32* %i, align 4, !dbg !17133
  %idxprom7 = sext i32 %11 to i64, !dbg !17132
  %arrayidx8 = getelementptr i8, i8* %10, i64 %idxprom7, !dbg !17132
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !17132
  %conv9 = zext i8 %12 to i32, !dbg !17132
  %13 = load i32, i32* %mac_addr_lo, align 4, !dbg !17134
  %or10 = or i32 %13, %conv9, !dbg !17134
  store i32 %or10, i32* %mac_addr_lo, align 4, !dbg !17134
  br label %for.inc11, !dbg !17135

for.inc11:                                        ; preds = %for.body5
  %14 = load i32, i32* %i, align 4, !dbg !17136
  %inc12 = add i32 %14, 1, !dbg !17136
  store i32 %inc12, i32* %i, align 4, !dbg !17136
  br label %for.cond2, !dbg !17137, !llvm.loop !17138

for.end13:                                        ; preds = %for.cond2
  %15 = load i32, i32* %index.addr, align 4, !dbg !17140
  %mul = mul i32 %15, 8, !dbg !17140
  store i32 %mul, i32* %index.addr, align 4, !dbg !17140
  %16 = load i32, i32* %mac_addr_lo, align 4, !dbg !17141
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17142
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 0, !dbg !17143
  %18 = load i8*, i8** %io, align 8, !dbg !17143
  %19 = load i32, i32* %index.addr, align 4, !dbg !17144
  %idx.ext = sext i32 %19 to i64, !dbg !17145
  %add.ptr = getelementptr i8, i8* %18, i64 %idx.ext, !dbg !17145
  %add.ptr14 = getelementptr i8, i8* %add.ptr, i64 128, !dbg !17146
  call void @writel(i32 %16, i8* %add.ptr14) #12, !dbg !17147
  %20 = load i32, i32* %mac_addr_hi, align 4, !dbg !17148
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17149
  %io15 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %21, i32 0, i32 0, !dbg !17150
  %22 = load i8*, i8** %io15, align 8, !dbg !17150
  %23 = load i32, i32* %index.addr, align 4, !dbg !17151
  %idx.ext16 = sext i32 %23 to i64, !dbg !17152
  %add.ptr17 = getelementptr i8, i8* %22, i64 %idx.ext16, !dbg !17152
  %add.ptr18 = getelementptr i8, i8* %add.ptr17, i64 132, !dbg !17153
  call void @writel(i32 %20, i8* %add.ptr18) #12, !dbg !17154
  ret void, !dbg !17155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_r_phy_ctrl(%struct.ksz_hw* %hw, i32 %phy, i16* %data) #2 !dbg !17156 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %phy.addr = alloca i32, align 4
  %data.addr = alloca i16*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17157, metadata !DIExpression()), !dbg !17158
  store i32 %phy, i32* %phy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy.addr, metadata !17159, metadata !DIExpression()), !dbg !17160
  store i16* %data, i16** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %data.addr, metadata !17161, metadata !DIExpression()), !dbg !17162
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17163
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !17164
  %1 = load i8*, i8** %io, align 8, !dbg !17164
  %2 = load i32, i32* %phy.addr, align 4, !dbg !17165
  %idx.ext = sext i32 %2 to i64, !dbg !17166
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !17166
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 0, !dbg !17167
  %call = call zeroext i16 @readw(i8* %add.ptr1) #12, !dbg !17168
  %3 = load i16*, i16** %data.addr, align 8, !dbg !17169
  store i16 %call, i16* %3, align 2, !dbg !17170
  ret void, !dbg !17171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_w_phy_ctrl(%struct.ksz_hw* %hw, i32 %phy, i16 zeroext %data) #2 !dbg !17172 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %phy.addr = alloca i32, align 4
  %data.addr = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17175, metadata !DIExpression()), !dbg !17176
  store i32 %phy, i32* %phy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy.addr, metadata !17177, metadata !DIExpression()), !dbg !17178
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !17179, metadata !DIExpression()), !dbg !17180
  %0 = load i16, i16* %data.addr, align 2, !dbg !17181
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17182
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 0, !dbg !17183
  %2 = load i8*, i8** %io, align 8, !dbg !17183
  %3 = load i32, i32* %phy.addr, align 4, !dbg !17184
  %idx.ext = sext i32 %3 to i64, !dbg !17185
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !17185
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 0, !dbg !17186
  call void @writew(i16 zeroext %0, i8* %add.ptr1) #12, !dbg !17187
  ret void, !dbg !17188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @port_r8(%struct.ksz_hw* %hw, i32 %port, i32 %offset, i8* %data) #2 !dbg !17189 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17192, metadata !DIExpression()), !dbg !17193
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !17194, metadata !DIExpression()), !dbg !17195
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !17196, metadata !DIExpression()), !dbg !17197
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17198, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !17200, metadata !DIExpression()), !dbg !17201
  %0 = load i32, i32* %port.addr, align 4, !dbg !17202
  %mul = mul i32 %0, 32, !dbg !17202
  %add = add i32 1280, %mul, !dbg !17202
  store i32 %add, i32* %addr, align 4, !dbg !17202
  %1 = load i32, i32* %offset.addr, align 4, !dbg !17203
  %2 = load i32, i32* %addr, align 4, !dbg !17204
  %add1 = add i32 %2, %1, !dbg !17204
  store i32 %add1, i32* %addr, align 4, !dbg !17204
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17205
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !17206
  %4 = load i8*, i8** %io, align 8, !dbg !17206
  %5 = load i32, i32* %addr, align 4, !dbg !17207
  %idx.ext = zext i32 %5 to i64, !dbg !17208
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !17208
  %call = call zeroext i8 @readb(i8* %add.ptr) #12, !dbg !17209
  %6 = load i8*, i8** %data.addr, align 8, !dbg !17210
  store i8 %call, i8* %6, align 1, !dbg !17211
  ret void, !dbg !17212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @advertised_flow_ctrl(%struct.ksz_port* %port, i16 zeroext %ctrl) #2 !dbg !17213 {
entry:
  %port.addr = alloca %struct.ksz_port*, align 8
  %ctrl.addr = alloca i16, align 2
  store %struct.ksz_port* %port, %struct.ksz_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port.addr, metadata !17216, metadata !DIExpression()), !dbg !17217
  store i16 %ctrl, i16* %ctrl.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ctrl.addr, metadata !17218, metadata !DIExpression()), !dbg !17219
  %0 = load i16, i16* %ctrl.addr, align 2, !dbg !17220
  %conv = zext i16 %0 to i32, !dbg !17220
  %and = and i32 %conv, -17, !dbg !17220
  %conv1 = trunc i32 %and to i16, !dbg !17220
  store i16 %conv1, i16* %ctrl.addr, align 2, !dbg !17220
  %1 = load %struct.ksz_port*, %struct.ksz_port** %port.addr, align 8, !dbg !17221
  %flow_ctrl = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %1, i32 0, i32 3, !dbg !17222
  %2 = load i8, i8* %flow_ctrl, align 1, !dbg !17222
  %conv2 = zext i8 %2 to i32, !dbg !17221
  switch i32 %conv2, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
    i32 3, label %sw.bb5
  ], !dbg !17223

sw.bb:                                            ; preds = %entry
  %3 = load i16, i16* %ctrl.addr, align 2, !dbg !17224
  %conv3 = zext i16 %3 to i32, !dbg !17224
  %or = or i32 %conv3, 16, !dbg !17224
  %conv4 = trunc i32 %or to i16, !dbg !17224
  store i16 %conv4, i16* %ctrl.addr, align 2, !dbg !17224
  br label %sw.epilog, !dbg !17226

sw.bb5:                                           ; preds = %entry, %entry
  br label %sw.default, !dbg !17226

sw.default:                                       ; preds = %entry, %sw.bb5
  br label %sw.epilog, !dbg !17227

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %4 = load i16, i16* %ctrl.addr, align 2, !dbg !17228
  ret i16 %4, !dbg !17229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_start_tx(%struct.ksz_hw* %hw) #2 !dbg !17230 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17231, metadata !DIExpression()), !dbg !17232
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17233
  %tx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 9, !dbg !17234
  %1 = load i32, i32* %tx_cfg, align 4, !dbg !17234
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17235
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !17236
  %3 = load i8*, i8** %io, align 8, !dbg !17236
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !17237
  call void @writel(i32 %1, i8* %add.ptr) #12, !dbg !17238
  ret void, !dbg !17239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !17240 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !17243, metadata !DIExpression()), !dbg !17245
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !17247, metadata !DIExpression()), !dbg !17248
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !17249, metadata !DIExpression()), !dbg !17251
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !17253, metadata !DIExpression()), !dbg !17254
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !17255, metadata !DIExpression()), !dbg !17256
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !17257, metadata !DIExpression()), !dbg !17258
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !17259
  %1 = load i64, i64* %nr.addr, align 8, !dbg !17260
  %div = sdiv i64 %1, 64, !dbg !17260
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !17261
  %2 = bitcast i64* %add.ptr to i8*, !dbg !17259
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !17262
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17263
  %conv.i = trunc i64 %4 to i32, !dbg !17263
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !17264
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !17265
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !17265
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #15, !dbg !17265
  %7 = load i64, i64* %nr.addr, align 8, !dbg !17266
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !17267
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !17268
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !17270
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !17271

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !17272
  %12 = bitcast i64* %11 to i8*, !dbg !17272
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !17272
  %shr.i = ashr i64 %13, 3, !dbg !17272
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !17272
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !17274
  %and.i = and i64 %14, 7, !dbg !17274
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !17274
  %shl.i = shl i32 1, %sh_prom.i, !dbg !17274
  %neg.i = xor i32 %shl.i, -1, !dbg !17275
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !17276, !srcloc !17277
  br label %arch_clear_bit.exit, !dbg !17278

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !17279
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !17281
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !17282, !srcloc !17283
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !17284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #2 !dbg !17285 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !17286, metadata !DIExpression()), !dbg !17288
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17290, metadata !DIExpression()), !dbg !17291
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17292
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !17293
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !17294
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !17295
  call void @set_bit(i64 0, i64* %state.i) #15, !dbg !17296
  ret void, !dbg !17297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_stop_timer(%struct.ksz_timer_info* %info) #2 !dbg !17298 {
entry:
  %info.addr = alloca %struct.ksz_timer_info*, align 8
  store %struct.ksz_timer_info* %info, %struct.ksz_timer_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_timer_info** %info.addr, metadata !17299, metadata !DIExpression()), !dbg !17300
  %0 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !17301
  %max = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %0, i32 0, i32 2, !dbg !17303
  %1 = load i32, i32* %max, align 4, !dbg !17303
  %tobool = icmp ne i32 %1, 0, !dbg !17301
  br i1 %tobool, label %if.then, label %if.end, !dbg !17304

if.then:                                          ; preds = %entry
  %2 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !17305
  %max1 = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %2, i32 0, i32 2, !dbg !17307
  store i32 0, i32* %max1, align 4, !dbg !17308
  %3 = load %struct.ksz_timer_info*, %struct.ksz_timer_info** %info.addr, align 8, !dbg !17309
  %timer = getelementptr inbounds %struct.ksz_timer_info, %struct.ksz_timer_info* %3, i32 0, i32 0, !dbg !17309
  %call = call i32 @del_timer(%struct.timer_list* %timer) #12, !dbg !17309
  br label %if.end, !dbg !17310

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bridge_change(%struct.ksz_hw* %hw) #2 !dbg !17312 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %port = alloca i32, align 4
  %member = alloca i8, align 1
  %sw = alloca %struct.ksz_switch*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17313, metadata !DIExpression()), !dbg !17314
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17315, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.declare(metadata i8* %member, metadata !17317, metadata !DIExpression()), !dbg !17318
  call void @llvm.dbg.declare(metadata %struct.ksz_switch** %sw, metadata !17319, metadata !DIExpression()), !dbg !17320
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17321
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 1, !dbg !17322
  %1 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !17322
  store %struct.ksz_switch* %1, %struct.ksz_switch** %sw, align 8, !dbg !17320
  %2 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !17323
  %member1 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %2, i32 0, i32 8, !dbg !17325
  %3 = load i8, i8* %member1, align 1, !dbg !17325
  %tobool = icmp ne i8 %3, 0, !dbg !17323
  br i1 %tobool, label %if.end, label %if.then, !dbg !17326

if.then:                                          ; preds = %entry
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17327
  call void @port_set_stp_state(%struct.ksz_hw* %4, i32 2, i32 5) #12, !dbg !17329
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17330
  call void @sw_block_addr(%struct.ksz_hw* %5) #12, !dbg !17331
  br label %if.end, !dbg !17332

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %port, align 4, !dbg !17333
  br label %for.cond, !dbg !17335

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %port, align 4, !dbg !17336
  %cmp = icmp slt i32 %6, 2, !dbg !17338
  br i1 %cmp, label %for.body, label %for.end, !dbg !17339

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !17340
  %port_cfg = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %7, i32 0, i32 2, !dbg !17343
  %8 = load i32, i32* %port, align 4, !dbg !17344
  %idxprom = sext i32 %8 to i64, !dbg !17340
  %arrayidx = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg, i64 0, i64 %idxprom, !dbg !17340
  %stp_state = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx, i32 0, i32 5, !dbg !17345
  %9 = load i32, i32* %stp_state, align 4, !dbg !17345
  %cmp2 = icmp eq i32 3, %9, !dbg !17346
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !17347

if.then3:                                         ; preds = %for.body
  %10 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !17348
  %member4 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %10, i32 0, i32 8, !dbg !17349
  %11 = load i8, i8* %member4, align 1, !dbg !17349
  %conv = zext i8 %11 to i32, !dbg !17348
  %or = or i32 4, %conv, !dbg !17350
  %conv5 = trunc i32 %or to i8, !dbg !17351
  store i8 %conv5, i8* %member, align 1, !dbg !17352
  br label %if.end8, !dbg !17353

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %port, align 4, !dbg !17354
  %shl = shl i32 1, %12, !dbg !17355
  %or6 = or i32 4, %shl, !dbg !17356
  %conv7 = trunc i32 %or6 to i8, !dbg !17357
  store i8 %conv7, i8* %member, align 1, !dbg !17358
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then3
  %13 = load i8, i8* %member, align 1, !dbg !17359
  %conv9 = zext i8 %13 to i32, !dbg !17359
  %14 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !17361
  %port_cfg10 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %14, i32 0, i32 2, !dbg !17362
  %15 = load i32, i32* %port, align 4, !dbg !17363
  %idxprom11 = sext i32 %15 to i64, !dbg !17361
  %arrayidx12 = getelementptr [3 x %struct.ksz_port_cfg], [3 x %struct.ksz_port_cfg]* %port_cfg10, i64 0, i64 %idxprom11, !dbg !17361
  %member13 = getelementptr inbounds %struct.ksz_port_cfg, %struct.ksz_port_cfg* %arrayidx12, i32 0, i32 1, !dbg !17364
  %16 = load i8, i8* %member13, align 2, !dbg !17364
  %conv14 = zext i8 %16 to i32, !dbg !17361
  %cmp15 = icmp ne i32 %conv9, %conv14, !dbg !17365
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !17366

if.then17:                                        ; preds = %if.end8
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17367
  %18 = load i32, i32* %port, align 4, !dbg !17368
  %19 = load i8, i8* %member, align 1, !dbg !17369
  call void @sw_cfg_port_base_vlan(%struct.ksz_hw* %17, i32 %18, i8 zeroext %19) #12, !dbg !17370
  br label %if.end18, !dbg !17370

if.end18:                                         ; preds = %if.then17, %if.end8
  br label %for.inc, !dbg !17371

for.inc:                                          ; preds = %if.end18
  %20 = load i32, i32* %port, align 4, !dbg !17372
  %inc = add i32 %20, 1, !dbg !17372
  store i32 %inc, i32* %port, align 4, !dbg !17372
  br label %for.cond, !dbg !17373, !llvm.loop !17374

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_del_addr(%struct.ksz_hw* %hw, i8* %mac_addr) #2 !dbg !17377 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %mac_addr.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17378, metadata !DIExpression()), !dbg !17379
  store i8* %mac_addr, i8** %mac_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac_addr.addr, metadata !17380, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17382, metadata !DIExpression()), !dbg !17383
  store i32 0, i32* %i, align 4, !dbg !17384
  br label %for.cond, !dbg !17386

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17387
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17389
  %addr_list_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 22, !dbg !17390
  %2 = load i8, i8* %addr_list_size, align 8, !dbg !17390
  %conv = zext i8 %2 to i32, !dbg !17389
  %cmp = icmp slt i32 %0, %conv, !dbg !17391
  br i1 %cmp, label %for.body, label %for.end, !dbg !17392

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17393
  %address = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 21, !dbg !17396
  %4 = load i32, i32* %i, align 4, !dbg !17397
  %idxprom = sext i32 %4 to i64, !dbg !17393
  %arrayidx = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address, i64 0, i64 %idxprom, !dbg !17393
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx, i64 0, i64 0, !dbg !17393
  %5 = load i8*, i8** %mac_addr.addr, align 8, !dbg !17398
  %call = call zeroext i1 @ether_addr_equal(i8* %arraydecay, i8* %5) #12, !dbg !17399
  br i1 %call, label %if.then, label %if.end, !dbg !17400

if.then:                                          ; preds = %for.body
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17401
  %address2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 21, !dbg !17403
  %7 = load i32, i32* %i, align 4, !dbg !17404
  %idxprom3 = sext i32 %7 to i64, !dbg !17401
  %arrayidx4 = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address2, i64 0, i64 %idxprom3, !dbg !17401
  %arraydecay5 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx4, i64 0, i64 0, !dbg !17401
  call void @eth_zero_addr(i8* %arraydecay5) #12, !dbg !17405
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17406
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 0, !dbg !17407
  %9 = load i8*, i8** %io, align 8, !dbg !17407
  %10 = load i32, i32* %i, align 4, !dbg !17408
  %mul = mul i32 8, %10, !dbg !17409
  %idx.ext = sext i32 %mul to i64, !dbg !17410
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !17410
  %add.ptr6 = getelementptr i8, i8* %add.ptr, i64 132, !dbg !17411
  call void @writel(i32 0, i8* %add.ptr6) #12, !dbg !17412
  store i32 0, i32* %retval, align 4, !dbg !17413
  br label %return, !dbg !17413

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17414

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !17415
  %inc = add i32 %11, 1, !dbg !17415
  store i32 %inc, i32* %i, align 4, !dbg !17415
  br label %for.cond, !dbg !17416, !llvm.loop !17417

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !17419
  br label %return, !dbg !17419

return:                                           ; preds = %for.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !17420
  ret i32 %12, !dbg !17420
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @flush_work(%struct.work_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_disable(%struct.ksz_hw* %hw) #2 !dbg !17421 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17422, metadata !DIExpression()), !dbg !17423
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17424
  call void @hw_stop_rx(%struct.ksz_hw* %0) #12, !dbg !17425
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17426
  call void @hw_stop_tx(%struct.ksz_hw* %1) #12, !dbg !17427
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17428
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 29, !dbg !17429
  store i8 0, i8* %enabled, align 1, !dbg !17430
  ret void, !dbg !17431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_clr_multicast(%struct.ksz_hw* %hw) #2 !dbg !17432 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17433, metadata !DIExpression()), !dbg !17434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17435, metadata !DIExpression()), !dbg !17436
  store i32 0, i32* %i, align 4, !dbg !17437
  br label %for.cond, !dbg !17439

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17440
  %cmp = icmp slt i32 %0, 8, !dbg !17442
  br i1 %cmp, label %for.body, label %for.end, !dbg !17443

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17444
  %multi_bits = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 27, !dbg !17446
  %2 = load i32, i32* %i, align 4, !dbg !17447
  %idxprom = sext i32 %2 to i64, !dbg !17444
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %multi_bits, i64 0, i64 %idxprom, !dbg !17444
  store i8 0, i8* %arrayidx, align 1, !dbg !17448
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17449
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !17450
  %4 = load i8*, i8** %io, align 8, !dbg !17450
  %add.ptr = getelementptr i8, i8* %4, i64 32, !dbg !17451
  %5 = load i32, i32* %i, align 4, !dbg !17452
  %idx.ext = sext i32 %5 to i64, !dbg !17453
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !17453
  call void @writeb(i8 zeroext 0, i8* %add.ptr1) #12, !dbg !17454
  br label %for.inc, !dbg !17455

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !17456
  %inc = add i32 %6, 1, !dbg !17456
  store i32 %inc, i32* %i, align 4, !dbg !17456
  br label %for.cond, !dbg !17457, !llvm.loop !17458

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17460
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #1

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_reset_pkts(%struct.ksz_desc_info* %info) #2 !dbg !17461 {
entry:
  %info.addr = alloca %struct.ksz_desc_info*, align 8
  store %struct.ksz_desc_info* %info, %struct.ksz_desc_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info.addr, metadata !17462, metadata !DIExpression()), !dbg !17463
  %0 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17464
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %0, i32 0, i32 0, !dbg !17465
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !17465
  %2 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17466
  %cur = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %2, i32 0, i32 1, !dbg !17467
  store %struct.ksz_desc* %1, %struct.ksz_desc** %cur, align 8, !dbg !17468
  %3 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17469
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %3, i32 0, i32 5, !dbg !17470
  %4 = load i32, i32* %alloc, align 8, !dbg !17470
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17471
  %avail = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %5, i32 0, i32 6, !dbg !17472
  store i32 %4, i32* %avail, align 4, !dbg !17473
  %6 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17474
  %next = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %6, i32 0, i32 8, !dbg !17475
  store i32 0, i32* %next, align 4, !dbg !17476
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17477
  %last = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 7, !dbg !17478
  store i32 0, i32* %last, align 8, !dbg !17479
  ret void, !dbg !17480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_clr_sta_mac_table(%struct.ksz_hw* %hw) #2 !dbg !17481 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %entry1 = alloca %struct.ksz_mac_table*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17482, metadata !DIExpression()), !dbg !17483
  call void @llvm.dbg.declare(metadata %struct.ksz_mac_table** %entry1, metadata !17484, metadata !DIExpression()), !dbg !17485
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17486, metadata !DIExpression()), !dbg !17487
  store i32 0, i32* %i, align 4, !dbg !17488
  br label %for.cond, !dbg !17490

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17491
  %cmp = icmp slt i32 %0, 8, !dbg !17493
  br i1 %cmp, label %for.body, label %for.end, !dbg !17494

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17495
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 1, !dbg !17497
  %2 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !17497
  %mac_table = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %2, i32 0, i32 0, !dbg !17498
  %3 = load i32, i32* %i, align 4, !dbg !17499
  %idxprom = sext i32 %3 to i64, !dbg !17495
  %arrayidx = getelementptr [8 x %struct.ksz_mac_table], [8 x %struct.ksz_mac_table]* %mac_table, i64 0, i64 %idxprom, !dbg !17495
  store %struct.ksz_mac_table* %arrayidx, %struct.ksz_mac_table** %entry1, align 8, !dbg !17500
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17501
  %5 = load i32, i32* %i, align 4, !dbg !17502
  %conv = trunc i32 %5 to i16, !dbg !17502
  %6 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17503
  %mac_addr = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %6, i32 0, i32 0, !dbg !17504
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac_addr, i64 0, i64 0, !dbg !17503
  %7 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17505
  %ports = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %7, i32 0, i32 3, !dbg !17506
  %8 = load i8, i8* %ports, align 1, !dbg !17506
  %9 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17507
  %override = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %9, i32 0, i32 4, !dbg !17508
  %bf.load = load i8, i8* %override, align 2, !dbg !17508
  %bf.clear = and i8 %bf.load, 1, !dbg !17508
  %conv2 = zext i8 %bf.clear to i32, !dbg !17507
  %10 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17509
  %use_fid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %10, i32 0, i32 4, !dbg !17510
  %bf.load3 = load i8, i8* %use_fid, align 2, !dbg !17510
  %bf.lshr = lshr i8 %bf.load3, 1, !dbg !17510
  %bf.clear4 = and i8 %bf.lshr, 1, !dbg !17510
  %conv5 = zext i8 %bf.clear4 to i32, !dbg !17509
  %11 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17511
  %fid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %11, i32 0, i32 2, !dbg !17512
  %12 = load i8, i8* %fid, align 2, !dbg !17512
  call void @sw_w_sta_mac_table(%struct.ksz_hw* %4, i16 zeroext %conv, i8* %arraydecay, i8 zeroext %8, i32 %conv2, i32 0, i32 %conv5, i8 zeroext %12) #12, !dbg !17513
  br label %for.inc, !dbg !17514

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !17515
  %inc = add i32 %13, 1, !dbg !17515
  store i32 %inc, i32* %i, align 4, !dbg !17515
  br label %for.cond, !dbg !17516, !llvm.loop !17517

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !17520 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !17521, metadata !DIExpression()), !dbg !17523
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !17525, metadata !DIExpression()), !dbg !17526
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !17249, metadata !DIExpression()), !dbg !17527
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !17253, metadata !DIExpression()), !dbg !17529
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !17530, metadata !DIExpression()), !dbg !17531
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !17532, metadata !DIExpression()), !dbg !17533
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !17534
  %1 = load i64, i64* %nr.addr, align 8, !dbg !17535
  %div = sdiv i64 %1, 64, !dbg !17535
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !17536
  %2 = bitcast i64* %add.ptr to i8*, !dbg !17534
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !17537
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17538
  %conv.i = trunc i64 %4 to i32, !dbg !17538
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !17539
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !17540
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !17540
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #15, !dbg !17540
  %7 = load i64, i64* %nr.addr, align 8, !dbg !17541
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !17542
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !17543
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !17545
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !17546

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !17547
  %12 = bitcast i64* %11 to i8*, !dbg !17547
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !17547
  %shr.i = ashr i64 %13, 3, !dbg !17547
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !17547
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !17549
  %and.i = and i64 %14, 7, !dbg !17549
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !17549
  %shl.i = shl i32 1, %sh_prom.i, !dbg !17549
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !17550, !srcloc !17551
  br label %arch_set_bit.exit, !dbg !17552

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !17553
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !17555
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !17556, !srcloc !17557
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !17558
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sw_block_addr(%struct.ksz_hw* %hw) #2 !dbg !17559 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %entry1 = alloca %struct.ksz_mac_table*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17560, metadata !DIExpression()), !dbg !17561
  call void @llvm.dbg.declare(metadata %struct.ksz_mac_table** %entry1, metadata !17562, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17564, metadata !DIExpression()), !dbg !17565
  store i32 1, i32* %i, align 4, !dbg !17566
  br label %for.cond, !dbg !17568

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17569
  %cmp = icmp sle i32 %0, 3, !dbg !17571
  br i1 %cmp, label %for.body, label %for.end, !dbg !17572

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17573
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 1, !dbg !17575
  %2 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !17575
  %mac_table = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %2, i32 0, i32 0, !dbg !17576
  %3 = load i32, i32* %i, align 4, !dbg !17577
  %idxprom = sext i32 %3 to i64, !dbg !17573
  %arrayidx = getelementptr [8 x %struct.ksz_mac_table], [8 x %struct.ksz_mac_table]* %mac_table, i64 0, i64 %idxprom, !dbg !17573
  store %struct.ksz_mac_table* %arrayidx, %struct.ksz_mac_table** %entry1, align 8, !dbg !17578
  %4 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17579
  %valid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %4, i32 0, i32 4, !dbg !17580
  %bf.load = load i8, i8* %valid, align 2, !dbg !17581
  %bf.clear = and i8 %bf.load, -5, !dbg !17581
  store i8 %bf.clear, i8* %valid, align 2, !dbg !17581
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17582
  %6 = load i32, i32* %i, align 4, !dbg !17583
  %conv = trunc i32 %6 to i16, !dbg !17583
  %7 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17584
  %mac_addr = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %7, i32 0, i32 0, !dbg !17585
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mac_addr, i64 0, i64 0, !dbg !17584
  %8 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17586
  %ports = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %8, i32 0, i32 3, !dbg !17587
  %9 = load i8, i8* %ports, align 1, !dbg !17587
  %10 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17588
  %override = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %10, i32 0, i32 4, !dbg !17589
  %bf.load2 = load i8, i8* %override, align 2, !dbg !17589
  %bf.clear3 = and i8 %bf.load2, 1, !dbg !17589
  %conv4 = zext i8 %bf.clear3 to i32, !dbg !17588
  %11 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17590
  %valid5 = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %11, i32 0, i32 4, !dbg !17591
  %bf.load6 = load i8, i8* %valid5, align 2, !dbg !17591
  %bf.lshr = lshr i8 %bf.load6, 2, !dbg !17591
  %bf.clear7 = and i8 %bf.lshr, 1, !dbg !17591
  %conv8 = zext i8 %bf.clear7 to i32, !dbg !17590
  %12 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17592
  %use_fid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %12, i32 0, i32 4, !dbg !17593
  %bf.load9 = load i8, i8* %use_fid, align 2, !dbg !17593
  %bf.lshr10 = lshr i8 %bf.load9, 1, !dbg !17593
  %bf.clear11 = and i8 %bf.lshr10, 1, !dbg !17593
  %conv12 = zext i8 %bf.clear11 to i32, !dbg !17592
  %13 = load %struct.ksz_mac_table*, %struct.ksz_mac_table** %entry1, align 8, !dbg !17594
  %fid = getelementptr inbounds %struct.ksz_mac_table, %struct.ksz_mac_table* %13, i32 0, i32 2, !dbg !17595
  %14 = load i8, i8* %fid, align 2, !dbg !17595
  call void @sw_w_sta_mac_table(%struct.ksz_hw* %5, i16 zeroext %conv, i8* %arraydecay, i8 zeroext %9, i32 %conv4, i32 %conv8, i32 %conv12, i8 zeroext %14) #12, !dbg !17596
  br label %for.inc, !dbg !17597

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !17598
  %inc = add i32 %15, 1, !dbg !17598
  store i32 %inc, i32* %i, align 4, !dbg !17598
  br label %for.cond, !dbg !17599, !llvm.loop !17600

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_zero_addr(i8* %addr) #2 !dbg !17603 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17606, metadata !DIExpression()), !dbg !17607
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !17608
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 6, i1 false), !dbg !17609
  ret void, !dbg !17610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_stop_rx(%struct.ksz_hw* %hw) #2 !dbg !17611 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17612, metadata !DIExpression()), !dbg !17613
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17614
  %rx_stop = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 30, !dbg !17615
  store i8 0, i8* %rx_stop, align 2, !dbg !17616
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17617
  call void @hw_turn_off_intr(%struct.ksz_hw* %1, i32 33554432) #12, !dbg !17618
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17619
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 10, !dbg !17620
  %3 = load i32, i32* %rx_cfg, align 8, !dbg !17620
  %and = and i32 %3, -2, !dbg !17621
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17622
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 0, !dbg !17623
  %5 = load i8*, i8** %io, align 8, !dbg !17623
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !17624
  call void @writel(i32 %and, i8* %add.ptr) #12, !dbg !17625
  ret void, !dbg !17626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_stop_tx(%struct.ksz_hw* %hw) #2 !dbg !17627 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17628, metadata !DIExpression()), !dbg !17629
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17630
  %tx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 9, !dbg !17631
  %1 = load i32, i32* %tx_cfg, align 4, !dbg !17631
  %and = and i32 %1, -2, !dbg !17632
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17633
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 0, !dbg !17634
  %3 = load i8*, i8** %io, align 8, !dbg !17634
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !17635
  call void @writel(i32 %and, i8* %add.ptr) #12, !dbg !17636
  ret void, !dbg !17637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_turn_off_intr(%struct.ksz_hw* %hw, i32 %interrupt) #2 !dbg !17638 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %interrupt.addr = alloca i32, align 4
  %read_intr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17639, metadata !DIExpression()), !dbg !17640
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !17641, metadata !DIExpression()), !dbg !17642
  call void @llvm.dbg.declare(metadata i32* %read_intr, metadata !17643, metadata !DIExpression()), !dbg !17644
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17645
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !17646
  %1 = load i8*, i8** %io, align 8, !dbg !17646
  %add.ptr = getelementptr i8, i8* %1, i64 40, !dbg !17647
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !17648
  store i32 %call, i32* %read_intr, align 4, !dbg !17649
  %2 = load i32, i32* %read_intr, align 4, !dbg !17650
  %3 = load i32, i32* %interrupt.addr, align 4, !dbg !17651
  %neg = xor i32 %3, -1, !dbg !17652
  %and = and i32 %2, %neg, !dbg !17653
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17654
  %intr_set = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 12, !dbg !17655
  store i32 %and, i32* %intr_set, align 8, !dbg !17656
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17657
  %intr_set1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 12, !dbg !17658
  %6 = load i32, i32* %intr_set1, align 8, !dbg !17658
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17659
  %io2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 0, !dbg !17660
  %8 = load i8*, i8** %io2, align 8, !dbg !17660
  %add.ptr3 = getelementptr i8, i8* %8, i64 40, !dbg !17661
  call void @writel(i32 %6, i8* %add.ptr3) #12, !dbg !17662
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17663
  %10 = load i32, i32* %interrupt.addr, align 4, !dbg !17664
  call void @hw_dis_intr_bit(%struct.ksz_hw* %9, i32 %10) #12, !dbg !17665
  ret void, !dbg !17666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #2 !dbg !17667 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17668, metadata !DIExpression()), !dbg !17669
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17670
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !17671
  %1 = load i8*, i8** %head, align 8, !dbg !17671
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17672
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !17673
  %3 = load i32, i32* %end, align 4, !dbg !17673
  %idx.ext = zext i32 %3 to i64, !dbg !17674
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !17674
  ret i8* %add.ptr, !dbg !17675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_old_skb(%struct.sk_buff* %old, %struct.sk_buff* %skb) #2 !dbg !17676 {
entry:
  %old.addr = alloca %struct.sk_buff*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %old, %struct.sk_buff** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %old.addr, metadata !17679, metadata !DIExpression()), !dbg !17680
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17681, metadata !DIExpression()), !dbg !17682
  %0 = load %struct.sk_buff*, %struct.sk_buff** %old.addr, align 8, !dbg !17683
  %1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 0, !dbg !17684
  %2 = bitcast %union.anon.40* %1 to %struct.anon.41*, !dbg !17684
  %3 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %2, i32 0, i32 2, !dbg !17684
  %dev = bitcast %union.anon.42* %3 to %struct.net_device**, !dbg !17684
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17684
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17685
  %6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 0, !dbg !17686
  %7 = bitcast %union.anon.40* %6 to %struct.anon.41*, !dbg !17686
  %8 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %7, i32 0, i32 2, !dbg !17686
  %dev1 = bitcast %union.anon.42* %8 to %struct.net_device**, !dbg !17686
  store %struct.net_device* %4, %struct.net_device** %dev1, align 8, !dbg !17687
  %9 = load %struct.sk_buff*, %struct.sk_buff** %old.addr, align 8, !dbg !17688
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 29, !dbg !17689
  %10 = load i16, i16* %protocol, align 8, !dbg !17689
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17690
  %protocol2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 29, !dbg !17691
  store i16 %10, i16* %protocol2, align 8, !dbg !17692
  %12 = load %struct.sk_buff*, %struct.sk_buff** %old.addr, align 8, !dbg !17693
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %12, i32 0, i32 14, !dbg !17694
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !17694
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !17694
  %bf.clear = and i16 %bf.lshr, 3, !dbg !17694
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !17694
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17695
  %ip_summed3 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 14, !dbg !17696
  %14 = zext i8 %bf.cast to i16, !dbg !17697
  %bf.load4 = load i16, i16* %ip_summed3, align 8, !dbg !17697
  %bf.value = and i16 %14, 3, !dbg !17697
  %bf.shl = shl i16 %bf.value, 5, !dbg !17697
  %bf.clear5 = and i16 %bf.load4, -97, !dbg !17697
  %bf.set = or i16 %bf.clear5, %bf.shl, !dbg !17697
  store i16 %bf.set, i16* %ip_summed3, align 8, !dbg !17697
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !17697
  %15 = load %struct.sk_buff*, %struct.sk_buff** %old.addr, align 8, !dbg !17698
  %16 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %15, i32 0, i32 17, !dbg !17699
  %csum = bitcast %union.anon.47* %16 to i32*, !dbg !17699
  %17 = load i32, i32* %csum, align 4, !dbg !17699
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17700
  %19 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %18, i32 0, i32 17, !dbg !17701
  %csum6 = bitcast %union.anon.47* %19 to i32*, !dbg !17701
  store i32 %17, i32* %csum6, align 4, !dbg !17702
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17703
  call void @skb_set_network_header(%struct.sk_buff* %20, i32 14) #12, !dbg !17704
  %21 = load %struct.sk_buff*, %struct.sk_buff** %old.addr, align 8, !dbg !17705
  call void @dev_consume_skb_any(%struct.sk_buff* %21) #12, !dbg !17706
  ret void, !dbg !17707
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_alloc_pkt(%struct.ksz_hw* %hw, i32 %length, i32 %physical) #2 !dbg !17708 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %length.addr = alloca i32, align 4
  %physical.addr = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !17711, metadata !DIExpression()), !dbg !17712
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !17713, metadata !DIExpression()), !dbg !17714
  store i32 %physical, i32* %physical.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %physical.addr, metadata !17715, metadata !DIExpression()), !dbg !17716
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17717
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 15, !dbg !17719
  %avail = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info, i32 0, i32 6, !dbg !17720
  %1 = load i32, i32* %avail, align 4, !dbg !17720
  %cmp = icmp sle i32 %1, 1, !dbg !17721
  br i1 %cmp, label %if.then, label %if.end, !dbg !17722

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17723
  br label %return, !dbg !17723

if.end:                                           ; preds = %entry
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17724
  %tx_desc_info1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 15, !dbg !17725
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17726
  %tx_desc_info2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 15, !dbg !17727
  %cur = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info2, i32 0, i32 1, !dbg !17728
  call void @get_tx_pkt(%struct.ksz_desc_info* %tx_desc_info1, %struct.ksz_desc** %cur) #12, !dbg !17729
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17730
  %tx_desc_info3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 15, !dbg !17731
  %cur4 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info3, i32 0, i32 1, !dbg !17732
  %5 = load %struct.ksz_desc*, %struct.ksz_desc** %cur4, align 8, !dbg !17732
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %5, i32 0, i32 1, !dbg !17733
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !17734
  %tx = bitcast %union.desc_buf* %buf to %struct.ksz_desc_tx_buf*, !dbg !17735
  %6 = bitcast %struct.ksz_desc_tx_buf* %tx to i32*, !dbg !17736
  %bf.load = load i32, i32* %6, align 4, !dbg !17737
  %bf.clear = and i32 %bf.load, -1073741825, !dbg !17737
  %bf.set = or i32 %bf.clear, 1073741824, !dbg !17737
  store i32 %bf.set, i32* %6, align 4, !dbg !17737
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17738
  %tx_int_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 16, !dbg !17739
  %8 = load i32, i32* %tx_int_cnt, align 8, !dbg !17740
  %inc = add i32 %8, 1, !dbg !17740
  store i32 %inc, i32* %tx_int_cnt, align 8, !dbg !17740
  %9 = load i32, i32* %length.addr, align 4, !dbg !17741
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17742
  %tx_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 18, !dbg !17743
  %11 = load i32, i32* %tx_size, align 8, !dbg !17744
  %add = add i32 %11, %9, !dbg !17744
  store i32 %add, i32* %tx_size, align 8, !dbg !17744
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17745
  %tx_size5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 18, !dbg !17747
  %13 = load i32, i32* %tx_size5, align 8, !dbg !17747
  %cmp6 = icmp sge i32 %13, 52000, !dbg !17748
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !17749

if.then7:                                         ; preds = %if.end
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17750
  %tx_int_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %14, i32 0, i32 17, !dbg !17751
  %15 = load i32, i32* %tx_int_mask, align 4, !dbg !17751
  %add8 = add i32 %15, 1, !dbg !17752
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17753
  %tx_int_cnt9 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 16, !dbg !17754
  store i32 %add8, i32* %tx_int_cnt9, align 8, !dbg !17755
  br label %if.end10, !dbg !17753

if.end10:                                         ; preds = %if.then7, %if.end
  %17 = load i32, i32* %physical.addr, align 4, !dbg !17756
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17758
  %tx_desc_info11 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 15, !dbg !17759
  %avail12 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info11, i32 0, i32 6, !dbg !17760
  %19 = load i32, i32* %avail12, align 4, !dbg !17760
  %cmp13 = icmp sgt i32 %17, %19, !dbg !17761
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !17762

if.then14:                                        ; preds = %if.end10
  store i32 1, i32* %retval, align 4, !dbg !17763
  br label %return, !dbg !17763

if.end15:                                         ; preds = %if.end10
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !17764
  %tx_desc_info16 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %20, i32 0, i32 15, !dbg !17765
  %avail17 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info16, i32 0, i32 6, !dbg !17766
  %21 = load i32, i32* %avail17, align 4, !dbg !17766
  store i32 %21, i32* %retval, align 4, !dbg !17767
  br label %return, !dbg !17767

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !17768
  ret i32 %22, !dbg !17768
}

; Function Attrs: noredzone
declare dso_local void @skb_copy_and_csum_dev(%struct.sk_buff*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @send_packet(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !17769 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %desc = alloca %struct.ksz_desc*, align 8
  %first = alloca %struct.ksz_desc*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %info = alloca %struct.ksz_desc_info*, align 8
  %dma_buf = alloca %struct.ksz_dma_buf*, align 8
  %len = alloca i32, align 4
  %last_frag = alloca i32, align 4
  %frag = alloca i32, align 4
  %this_frag = alloca %struct.bio_vec*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17772, metadata !DIExpression()), !dbg !17773
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17774, metadata !DIExpression()), !dbg !17775
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc, metadata !17776, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %first, metadata !17778, metadata !DIExpression()), !dbg !17779
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !17780, metadata !DIExpression()), !dbg !17781
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17782
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !17783
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !17783
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !17781
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !17784, metadata !DIExpression()), !dbg !17785
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !17786
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !17787
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !17787
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !17785
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !17788, metadata !DIExpression()), !dbg !17789
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !17790
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !17791
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !17789
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info, metadata !17792, metadata !DIExpression()), !dbg !17793
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !17794
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 15, !dbg !17795
  store %struct.ksz_desc_info* %tx_desc_info, %struct.ksz_desc_info** %info, align 8, !dbg !17793
  call void @llvm.dbg.declare(metadata %struct.ksz_dma_buf** %dma_buf, metadata !17796, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.declare(metadata i32* %len, metadata !17798, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.declare(metadata i32* %last_frag, metadata !17800, metadata !DIExpression()), !dbg !17801
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17802
  %call2 = call i8* @skb_end_pointer(%struct.sk_buff* %6) #12, !dbg !17802
  %7 = bitcast i8* %call2 to %struct.skb_shared_info*, !dbg !17803
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %7, i32 0, i32 2, !dbg !17803
  %8 = load i8, i8* %nr_frags, align 2, !dbg !17803
  %conv = zext i8 %8 to i32, !dbg !17802
  store i32 %conv, i32* %last_frag, align 4, !dbg !17801
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !17804
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 4, !dbg !17806
  %10 = load i32, i32* %dev_count, align 8, !dbg !17806
  %cmp = icmp sgt i32 %10, 1, !dbg !17807
  br i1 %cmp, label %if.then, label %if.end, !dbg !17808

if.then:                                          ; preds = %entry
  %11 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !17809
  %port = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %11, i32 0, i32 1, !dbg !17810
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %port, i32 0, i32 4, !dbg !17811
  %12 = load i32, i32* %first_port, align 4, !dbg !17811
  %shl = shl i32 1, %12, !dbg !17812
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !17813
  %dst_ports = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %13, i32 0, i32 5, !dbg !17814
  store i32 %shl, i32* %dst_ports, align 4, !dbg !17815
  br label %if.end, !dbg !17813

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17816
  %len4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 5, !dbg !17817
  %15 = load i32, i32* %len4, align 8, !dbg !17817
  store i32 %15, i32* %len, align 4, !dbg !17818
  %16 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !17819
  %cur = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %16, i32 0, i32 1, !dbg !17820
  %17 = load %struct.ksz_desc*, %struct.ksz_desc** %cur, align 8, !dbg !17820
  store %struct.ksz_desc* %17, %struct.ksz_desc** %first, align 8, !dbg !17821
  %18 = load %struct.ksz_desc*, %struct.ksz_desc** %first, align 8, !dbg !17822
  store %struct.ksz_desc* %18, %struct.ksz_desc** %desc, align 8, !dbg !17823
  %19 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17824
  %dma_buf5 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %19, i32 0, i32 2, !dbg !17824
  store %struct.ksz_dma_buf* %dma_buf5, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17825
  %20 = load i32, i32* %last_frag, align 4, !dbg !17826
  %tobool = icmp ne i32 %20, 0, !dbg !17826
  br i1 %tobool, label %if.then6, label %if.else, !dbg !17828

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %frag, metadata !17829, metadata !DIExpression()), !dbg !17831
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %this_frag, metadata !17832, metadata !DIExpression()), !dbg !17834
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17835
  %call7 = call i32 @skb_headlen(%struct.sk_buff* %21) #12, !dbg !17836
  %22 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17837
  %len8 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %22, i32 0, i32 2, !dbg !17838
  store i32 %call7, i32* %len8, align 8, !dbg !17839
  %23 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !17840
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %23, i32 0, i32 1, !dbg !17840
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17840
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !17840
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17840
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %25, i32 0, i32 37, !dbg !17840
  %26 = load i8*, i8** %data, align 8, !dbg !17840
  %27 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17840
  %len10 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %27, i32 0, i32 2, !dbg !17840
  %28 = load i32, i32* %len10, align 8, !dbg !17840
  %conv11 = sext i32 %28 to i64, !dbg !17840
  %call12 = call i64 @dma_map_single_attrs(%struct.device* %dev9, i8* %26, i64 %conv11, i32 1, i64 0) #12, !dbg !17840
  %29 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17841
  %dma = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %29, i32 0, i32 1, !dbg !17842
  store i64 %call12, i64* %dma, align 8, !dbg !17843
  %30 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17844
  %31 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17845
  %dma13 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %31, i32 0, i32 1, !dbg !17846
  %32 = load i64, i64* %dma13, align 8, !dbg !17846
  %conv14 = trunc i64 %32 to i32, !dbg !17845
  call void @set_tx_buf(%struct.ksz_desc* %30, i32 %conv14) #12, !dbg !17847
  %33 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17848
  %34 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17849
  %len15 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %34, i32 0, i32 2, !dbg !17850
  %35 = load i32, i32* %len15, align 8, !dbg !17850
  call void @set_tx_len(%struct.ksz_desc* %33, i32 %35) #12, !dbg !17851
  store i32 0, i32* %frag, align 4, !dbg !17852
  br label %do.body, !dbg !17853

do.body:                                          ; preds = %do.cond, %if.then6
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17854
  %call16 = call i8* @skb_end_pointer(%struct.sk_buff* %36) #12, !dbg !17854
  %37 = bitcast i8* %call16 to %struct.skb_shared_info*, !dbg !17856
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %37, i32 0, i32 12, !dbg !17856
  %38 = load i32, i32* %frag, align 4, !dbg !17857
  %idxprom = sext i32 %38 to i64, !dbg !17854
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !17854
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %this_frag, align 8, !dbg !17858
  %39 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !17859
  call void @get_tx_pkt(%struct.ksz_desc_info* %39, %struct.ksz_desc** %desc) #12, !dbg !17860
  %40 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !17861
  %tx_int_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %40, i32 0, i32 16, !dbg !17862
  %41 = load i32, i32* %tx_int_cnt, align 8, !dbg !17863
  %inc = add i32 %41, 1, !dbg !17863
  store i32 %inc, i32* %tx_int_cnt, align 8, !dbg !17863
  %42 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17864
  %dma_buf17 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %42, i32 0, i32 2, !dbg !17864
  store %struct.ksz_dma_buf* %dma_buf17, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17865
  %43 = load %struct.bio_vec*, %struct.bio_vec** %this_frag, align 8, !dbg !17866
  %call18 = call i32 @skb_frag_size(%struct.bio_vec* %43) #12, !dbg !17867
  %44 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17868
  %len19 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %44, i32 0, i32 2, !dbg !17869
  store i32 %call18, i32* %len19, align 8, !dbg !17870
  %45 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !17871
  %pdev20 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %45, i32 0, i32 1, !dbg !17871
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev20, align 8, !dbg !17871
  %dev21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !17871
  %47 = load %struct.bio_vec*, %struct.bio_vec** %this_frag, align 8, !dbg !17871
  %call22 = call i8* @skb_frag_address(%struct.bio_vec* %47) #12, !dbg !17871
  %48 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17871
  %len23 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %48, i32 0, i32 2, !dbg !17871
  %49 = load i32, i32* %len23, align 8, !dbg !17871
  %conv24 = sext i32 %49 to i64, !dbg !17871
  %call25 = call i64 @dma_map_single_attrs(%struct.device* %dev21, i8* %call22, i64 %conv24, i32 1, i64 0) #12, !dbg !17871
  %50 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17872
  %dma26 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %50, i32 0, i32 1, !dbg !17873
  store i64 %call25, i64* %dma26, align 8, !dbg !17874
  %51 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17875
  %52 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17876
  %dma27 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %52, i32 0, i32 1, !dbg !17877
  %53 = load i64, i64* %dma27, align 8, !dbg !17877
  %conv28 = trunc i64 %53 to i32, !dbg !17876
  call void @set_tx_buf(%struct.ksz_desc* %51, i32 %conv28) #12, !dbg !17878
  %54 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17879
  %55 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17880
  %len29 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %55, i32 0, i32 2, !dbg !17881
  %56 = load i32, i32* %len29, align 8, !dbg !17881
  call void @set_tx_len(%struct.ksz_desc* %54, i32 %56) #12, !dbg !17882
  %57 = load i32, i32* %frag, align 4, !dbg !17883
  %inc30 = add i32 %57, 1, !dbg !17883
  store i32 %inc30, i32* %frag, align 4, !dbg !17883
  %58 = load i32, i32* %frag, align 4, !dbg !17884
  %59 = load i32, i32* %last_frag, align 4, !dbg !17886
  %cmp31 = icmp eq i32 %58, %59, !dbg !17887
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !17888

if.then33:                                        ; preds = %do.body
  br label %do.end, !dbg !17889

if.end34:                                         ; preds = %do.body
  %60 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17890
  call void @release_desc(%struct.ksz_desc* %60) #12, !dbg !17891
  br label %do.cond, !dbg !17892

do.cond:                                          ; preds = %if.end34
  br i1 true, label %do.body, label %do.end, !dbg !17892, !llvm.loop !17893

do.end:                                           ; preds = %do.cond, %if.then33
  %61 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17895
  %62 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info, align 8, !dbg !17896
  %cur35 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %62, i32 0, i32 1, !dbg !17897
  store %struct.ksz_desc* %61, %struct.ksz_desc** %cur35, align 8, !dbg !17898
  %63 = load %struct.ksz_desc*, %struct.ksz_desc** %first, align 8, !dbg !17899
  call void @release_desc(%struct.ksz_desc* %63) #12, !dbg !17900
  br label %if.end47, !dbg !17901

if.else:                                          ; preds = %if.end
  %64 = load i32, i32* %len, align 4, !dbg !17902
  %65 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17904
  %len36 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %65, i32 0, i32 2, !dbg !17905
  store i32 %64, i32* %len36, align 8, !dbg !17906
  %66 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !17907
  %pdev37 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %66, i32 0, i32 1, !dbg !17907
  %67 = load %struct.pci_dev*, %struct.pci_dev** %pdev37, align 8, !dbg !17907
  %dev38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %67, i32 0, i32 41, !dbg !17907
  %68 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17907
  %data39 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %68, i32 0, i32 37, !dbg !17907
  %69 = load i8*, i8** %data39, align 8, !dbg !17907
  %70 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17907
  %len40 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %70, i32 0, i32 2, !dbg !17907
  %71 = load i32, i32* %len40, align 8, !dbg !17907
  %conv41 = sext i32 %71 to i64, !dbg !17907
  %call42 = call i64 @dma_map_single_attrs(%struct.device* %dev38, i8* %69, i64 %conv41, i32 1, i64 0) #12, !dbg !17907
  %72 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17908
  %dma43 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %72, i32 0, i32 1, !dbg !17909
  store i64 %call42, i64* %dma43, align 8, !dbg !17910
  %73 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17911
  %74 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17912
  %dma44 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %74, i32 0, i32 1, !dbg !17913
  %75 = load i64, i64* %dma44, align 8, !dbg !17913
  %conv45 = trunc i64 %75 to i32, !dbg !17912
  call void @set_tx_buf(%struct.ksz_desc* %73, i32 %conv45) #12, !dbg !17914
  %76 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17915
  %77 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17916
  %len46 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %77, i32 0, i32 2, !dbg !17917
  %78 = load i32, i32* %len46, align 8, !dbg !17917
  call void @set_tx_len(%struct.ksz_desc* %76, i32 %78) #12, !dbg !17918
  br label %if.end47

if.end47:                                         ; preds = %if.else, %do.end
  %79 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17919
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %79, i32 0, i32 14, !dbg !17921
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !17921
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !17921
  %bf.clear = and i16 %bf.lshr, 3, !dbg !17921
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !17921
  %conv48 = zext i8 %bf.cast to i32, !dbg !17919
  %cmp49 = icmp eq i32 %conv48, 3, !dbg !17922
  br i1 %cmp49, label %if.then51, label %if.end60, !dbg !17923

if.then51:                                        ; preds = %if.end47
  %80 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17924
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %80, i32 0, i32 1, !dbg !17926
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !17927
  %tx = bitcast %union.desc_buf* %buf to %struct.ksz_desc_tx_buf*, !dbg !17928
  %81 = bitcast %struct.ksz_desc_tx_buf* %tx to i32*, !dbg !17929
  %bf.load52 = load i32, i32* %81, align 4, !dbg !17930
  %bf.clear53 = and i32 %bf.load52, -134217729, !dbg !17930
  %bf.set = or i32 %bf.clear53, 134217728, !dbg !17930
  store i32 %bf.set, i32* %81, align 4, !dbg !17930
  %82 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !17931
  %sw54 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %82, i32 0, i32 1, !dbg !17932
  %buf55 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw54, i32 0, i32 1, !dbg !17933
  %tx56 = bitcast %union.desc_buf* %buf55 to %struct.ksz_desc_tx_buf*, !dbg !17934
  %83 = bitcast %struct.ksz_desc_tx_buf* %tx56 to i32*, !dbg !17935
  %bf.load57 = load i32, i32* %83, align 4, !dbg !17936
  %bf.clear58 = and i32 %bf.load57, -67108865, !dbg !17936
  %bf.set59 = or i32 %bf.clear58, 67108864, !dbg !17936
  store i32 %bf.set59, i32* %83, align 4, !dbg !17936
  br label %if.end60, !dbg !17937

if.end60:                                         ; preds = %if.then51, %if.end47
  %84 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17938
  %85 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !17939
  %skb61 = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %85, i32 0, i32 0, !dbg !17940
  store %struct.sk_buff* %84, %struct.sk_buff** %skb61, align 8, !dbg !17941
  %86 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !17942
  call void @hw_send_pkt(%struct.ksz_hw* %86) #12, !dbg !17943
  %87 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17944
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %87, i32 0, i32 24, !dbg !17945
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 1, !dbg !17946
  %88 = load i64, i64* %tx_packets, align 8, !dbg !17947
  %inc62 = add i64 %88, 1, !dbg !17947
  store i64 %inc62, i64* %tx_packets, align 8, !dbg !17947
  %89 = load i32, i32* %len, align 4, !dbg !17948
  %conv63 = sext i32 %89 to i64, !dbg !17948
  %90 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17949
  %stats64 = getelementptr inbounds %struct.net_device, %struct.net_device* %90, i32 0, i32 24, !dbg !17950
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats64, i32 0, i32 3, !dbg !17951
  %91 = load i64, i64* %tx_bytes, align 8, !dbg !17952
  %add = add i64 %91, %conv63, !dbg !17952
  store i64 %add, i64* %tx_bytes, align 8, !dbg !17952
  ret void, !dbg !17953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_any(%struct.sk_buff* %skb) #2 !dbg !17954 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17955, metadata !DIExpression()), !dbg !17956
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17957
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 0) #12, !dbg !17958
  ret void, !dbg !17959
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_tx_pkt(%struct.ksz_desc_info* %info, %struct.ksz_desc** %desc) #2 !dbg !17960 {
entry:
  %info.addr = alloca %struct.ksz_desc_info*, align 8
  %desc.addr = alloca %struct.ksz_desc**, align 8
  store %struct.ksz_desc_info* %info, %struct.ksz_desc_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %info.addr, metadata !17961, metadata !DIExpression()), !dbg !17962
  store %struct.ksz_desc** %desc, %struct.ksz_desc*** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc*** %desc.addr, metadata !17963, metadata !DIExpression()), !dbg !17964
  %0 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17965
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %0, i32 0, i32 0, !dbg !17966
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !17966
  %2 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17967
  %next = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %2, i32 0, i32 8, !dbg !17968
  %3 = load i32, i32* %next, align 4, !dbg !17968
  %idxprom = sext i32 %3 to i64, !dbg !17965
  %arrayidx = getelementptr %struct.ksz_desc, %struct.ksz_desc* %1, i64 %idxprom, !dbg !17965
  %4 = load %struct.ksz_desc**, %struct.ksz_desc*** %desc.addr, align 8, !dbg !17969
  store %struct.ksz_desc* %arrayidx, %struct.ksz_desc** %4, align 8, !dbg !17970
  %5 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17971
  %next1 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %5, i32 0, i32 8, !dbg !17972
  %6 = load i32, i32* %next1, align 4, !dbg !17973
  %inc = add i32 %6, 1, !dbg !17973
  store i32 %inc, i32* %next1, align 4, !dbg !17973
  %7 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17974
  %mask = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %7, i32 0, i32 9, !dbg !17975
  %8 = load i32, i32* %mask, align 8, !dbg !17975
  %9 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17976
  %next2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %9, i32 0, i32 8, !dbg !17977
  %10 = load i32, i32* %next2, align 4, !dbg !17978
  %and = and i32 %10, %8, !dbg !17978
  store i32 %and, i32* %next2, align 4, !dbg !17978
  %11 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %info.addr, align 8, !dbg !17979
  %avail = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %11, i32 0, i32 6, !dbg !17980
  %12 = load i32, i32* %avail, align 4, !dbg !17981
  %dec = add i32 %12, -1, !dbg !17981
  store i32 %dec, i32* %avail, align 4, !dbg !17981
  %13 = load %struct.ksz_desc**, %struct.ksz_desc*** %desc.addr, align 8, !dbg !17982
  %14 = load %struct.ksz_desc*, %struct.ksz_desc** %13, align 8, !dbg !17983
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %14, i32 0, i32 1, !dbg !17984
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !17985
  %data = bitcast %union.desc_buf* %buf to i32*, !dbg !17986
  %15 = load i32, i32* %data, align 4, !dbg !17987
  %and3 = and i32 %15, 67106816, !dbg !17987
  store i32 %and3, i32* %data, align 4, !dbg !17987
  ret void, !dbg !17988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #2 !dbg !17989 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17992, metadata !DIExpression()), !dbg !17993
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17994
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !17995
  %1 = load i32, i32* %len, align 8, !dbg !17995
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17996
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !17997
  %3 = load i32, i32* %data_len, align 4, !dbg !17997
  %sub = sub i32 %1, %3, !dbg !17998
  ret i32 %sub, !dbg !17999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_tx_buf(%struct.ksz_desc* %desc, i32 %addr) #2 !dbg !18000 {
entry:
  %desc.addr = alloca %struct.ksz_desc*, align 8
  %addr.addr = alloca i32, align 4
  store %struct.ksz_desc* %desc, %struct.ksz_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc.addr, metadata !18001, metadata !DIExpression()), !dbg !18002
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !18003, metadata !DIExpression()), !dbg !18004
  %0 = load i32, i32* %addr.addr, align 4, !dbg !18005
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !18006
  %phw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %1, i32 0, i32 0, !dbg !18007
  %2 = load %struct.ksz_hw_desc*, %struct.ksz_hw_desc** %phw, align 8, !dbg !18007
  %addr1 = getelementptr inbounds %struct.ksz_hw_desc, %struct.ksz_hw_desc* %2, i32 0, i32 2, !dbg !18008
  store i32 %0, i32* %addr1, align 4, !dbg !18009
  ret void, !dbg !18010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_tx_len(%struct.ksz_desc* %desc, i32 %len) #2 !dbg !18011 {
entry:
  %desc.addr = alloca %struct.ksz_desc*, align 8
  %len.addr = alloca i32, align 4
  store %struct.ksz_desc* %desc, %struct.ksz_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc.addr, metadata !18012, metadata !DIExpression()), !dbg !18013
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !18014, metadata !DIExpression()), !dbg !18015
  %0 = load i32, i32* %len.addr, align 4, !dbg !18016
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %desc.addr, align 8, !dbg !18017
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %1, i32 0, i32 1, !dbg !18018
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !18019
  %tx = bitcast %union.desc_buf* %buf to %struct.ksz_desc_tx_buf*, !dbg !18020
  %2 = bitcast %struct.ksz_desc_tx_buf* %tx to i32*, !dbg !18021
  %bf.load = load i32, i32* %2, align 4, !dbg !18022
  %bf.value = and i32 %0, 2047, !dbg !18022
  %bf.clear = and i32 %bf.load, -2048, !dbg !18022
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !18022
  store i32 %bf.set, i32* %2, align 4, !dbg !18022
  ret void, !dbg !18023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #2 !dbg !18024 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !18029, metadata !DIExpression()), !dbg !18030
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !18031
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !18032
  %1 = load i32, i32* %bv_len, align 8, !dbg !18032
  ret i32 %1, !dbg !18033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_frag_address(%struct.bio_vec* %frag) #2 !dbg !18034 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !18037, metadata !DIExpression()), !dbg !18043
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !18045, metadata !DIExpression()), !dbg !18046
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !18047
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %0) #12, !dbg !18047
  store %struct.page* %call, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !18048
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !18048
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !18048
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !18048
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !18048
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !18048
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !18048
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !18048
  %add.i = add i64 %shl.i, %4, !dbg !18048
  %5 = inttoptr i64 %add.i to i8*, !dbg !18048
  %6 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !18049
  %call2 = call i32 @skb_frag_off(%struct.bio_vec* %6) #12, !dbg !18050
  %idx.ext = zext i32 %call2 to i64, !dbg !18051
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !18051
  ret i8* %add.ptr, !dbg !18052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_send_pkt(%struct.ksz_hw* %hw) #2 !dbg !18053 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %cur = alloca %struct.ksz_desc*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !18054, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %cur, metadata !18056, metadata !DIExpression()), !dbg !18057
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18058
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 15, !dbg !18059
  %cur1 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info, i32 0, i32 1, !dbg !18060
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %cur1, align 8, !dbg !18060
  store %struct.ksz_desc* %1, %struct.ksz_desc** %cur, align 8, !dbg !18057
  %2 = load %struct.ksz_desc*, %struct.ksz_desc** %cur, align 8, !dbg !18061
  %sw = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %2, i32 0, i32 1, !dbg !18062
  %buf = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw, i32 0, i32 1, !dbg !18063
  %tx = bitcast %union.desc_buf* %buf to %struct.ksz_desc_tx_buf*, !dbg !18064
  %3 = bitcast %struct.ksz_desc_tx_buf* %tx to i32*, !dbg !18065
  %bf.load = load i32, i32* %3, align 4, !dbg !18066
  %bf.clear = and i32 %bf.load, -536870913, !dbg !18066
  %bf.set = or i32 %bf.clear, 536870912, !dbg !18066
  store i32 %bf.set, i32* %3, align 4, !dbg !18066
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18067
  %tx_int_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 16, !dbg !18069
  %5 = load i32, i32* %tx_int_cnt, align 8, !dbg !18069
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18070
  %tx_int_mask = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 17, !dbg !18071
  %7 = load i32, i32* %tx_int_mask, align 4, !dbg !18071
  %cmp = icmp sgt i32 %5, %7, !dbg !18072
  br i1 %cmp, label %if.then, label %if.end, !dbg !18073

if.then:                                          ; preds = %entry
  %8 = load %struct.ksz_desc*, %struct.ksz_desc** %cur, align 8, !dbg !18074
  %sw2 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %8, i32 0, i32 1, !dbg !18076
  %buf3 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw2, i32 0, i32 1, !dbg !18077
  %tx4 = bitcast %union.desc_buf* %buf3 to %struct.ksz_desc_tx_buf*, !dbg !18078
  %9 = bitcast %struct.ksz_desc_tx_buf* %tx4 to i32*, !dbg !18079
  %bf.load5 = load i32, i32* %9, align 4, !dbg !18080
  %bf.clear6 = and i32 %bf.load5, 2147483647, !dbg !18080
  %bf.set7 = or i32 %bf.clear6, -2147483648, !dbg !18080
  store i32 %bf.set7, i32* %9, align 4, !dbg !18080
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18081
  %tx_int_cnt8 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 16, !dbg !18082
  store i32 0, i32* %tx_int_cnt8, align 8, !dbg !18083
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18084
  %tx_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 18, !dbg !18085
  store i32 0, i32* %tx_size, align 8, !dbg !18086
  br label %if.end, !dbg !18087

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18088
  %dst_ports = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 5, !dbg !18089
  %13 = load i32, i32* %dst_ports, align 4, !dbg !18089
  %14 = load %struct.ksz_desc*, %struct.ksz_desc** %cur, align 8, !dbg !18090
  %sw9 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %14, i32 0, i32 1, !dbg !18091
  %buf10 = getelementptr inbounds %struct.ksz_sw_desc, %struct.ksz_sw_desc* %sw9, i32 0, i32 1, !dbg !18092
  %tx11 = bitcast %union.desc_buf* %buf10 to %struct.ksz_desc_tx_buf*, !dbg !18093
  %15 = bitcast %struct.ksz_desc_tx_buf* %tx11 to i32*, !dbg !18094
  %bf.load12 = load i32, i32* %15, align 4, !dbg !18095
  %bf.value = and i32 %13, 15, !dbg !18095
  %bf.shl = shl i32 %bf.value, 20, !dbg !18095
  %bf.clear13 = and i32 %bf.load12, -15728641, !dbg !18095
  %bf.set14 = or i32 %bf.clear13, %bf.shl, !dbg !18095
  store i32 %bf.set14, i32* %15, align 4, !dbg !18095
  %16 = load %struct.ksz_desc*, %struct.ksz_desc** %cur, align 8, !dbg !18096
  call void @release_desc(%struct.ksz_desc* %16) #12, !dbg !18097
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18098
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 0, !dbg !18099
  %18 = load i8*, i8** %io, align 8, !dbg !18099
  %add.ptr = getelementptr i8, i8* %18, i64 8, !dbg !18100
  call void @writel(i32 0, i8* %add.ptr) #12, !dbg !18101
  ret void, !dbg !18102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #2 !dbg !18103 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !18106, metadata !DIExpression()), !dbg !18107
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !18108
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !18109
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !18109
  ret %struct.page* %1, !dbg !18110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #2 !dbg !18111 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !18112, metadata !DIExpression()), !dbg !18113
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !18114
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !18115
  %1 = load i32, i32* %bv_offset, align 4, !dbg !18115
  ret i32 %1, !dbg !18116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_promiscuous(%struct.net_device* %dev, %struct.dev_priv* %priv, %struct.ksz_hw* %hw, i32 %promiscuous) #2 !dbg !18117 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv.addr = alloca %struct.dev_priv*, align 8
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %promiscuous.addr = alloca i32, align 4
  %prev_state = alloca i8, align 1
  %sw = alloca %struct.ksz_switch*, align 8
  %port = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18120, metadata !DIExpression()), !dbg !18121
  store %struct.dev_priv* %priv, %struct.dev_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv.addr, metadata !18122, metadata !DIExpression()), !dbg !18123
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !18124, metadata !DIExpression()), !dbg !18125
  store i32 %promiscuous, i32* %promiscuous.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %promiscuous.addr, metadata !18126, metadata !DIExpression()), !dbg !18127
  %0 = load i32, i32* %promiscuous.addr, align 4, !dbg !18128
  %1 = load %struct.dev_priv*, %struct.dev_priv** %priv.addr, align 8, !dbg !18130
  %promiscuous1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %1, i32 0, i32 10, !dbg !18131
  %2 = load i32, i32* %promiscuous1, align 8, !dbg !18131
  %cmp = icmp ne i32 %0, %2, !dbg !18132
  br i1 %cmp, label %if.then, label %if.end33, !dbg !18133

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %prev_state, metadata !18134, metadata !DIExpression()), !dbg !18136
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18137
  %promiscuous2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 24, !dbg !18138
  %4 = load i8, i8* %promiscuous2, align 2, !dbg !18138
  store i8 %4, i8* %prev_state, align 1, !dbg !18136
  %5 = load i32, i32* %promiscuous.addr, align 4, !dbg !18139
  %tobool = icmp ne i32 %5, 0, !dbg !18139
  br i1 %tobool, label %if.then3, label %if.else, !dbg !18141

if.then3:                                         ; preds = %if.then
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18142
  %promiscuous4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 24, !dbg !18143
  %7 = load i8, i8* %promiscuous4, align 2, !dbg !18144
  %inc = add i8 %7, 1, !dbg !18144
  store i8 %inc, i8* %promiscuous4, align 2, !dbg !18144
  br label %if.end, !dbg !18144

if.else:                                          ; preds = %if.then
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18145
  %promiscuous5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 24, !dbg !18146
  %9 = load i8, i8* %promiscuous5, align 2, !dbg !18147
  %dec = add i8 %9, -1, !dbg !18147
  store i8 %dec, i8* %promiscuous5, align 2, !dbg !18147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %10 = load i32, i32* %promiscuous.addr, align 4, !dbg !18148
  %11 = load %struct.dev_priv*, %struct.dev_priv** %priv.addr, align 8, !dbg !18149
  %promiscuous6 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %11, i32 0, i32 10, !dbg !18150
  store i32 %10, i32* %promiscuous6, align 8, !dbg !18151
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18152
  %promiscuous7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 24, !dbg !18154
  %13 = load i8, i8* %promiscuous7, align 2, !dbg !18154
  %conv = zext i8 %13 to i32, !dbg !18152
  %cmp8 = icmp sle i32 %conv, 1, !dbg !18155
  br i1 %cmp8, label %land.lhs.true, label %if.end15, !dbg !18156

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8, i8* %prev_state, align 1, !dbg !18157
  %conv10 = zext i8 %14 to i32, !dbg !18157
  %cmp11 = icmp sle i32 %conv10, 1, !dbg !18158
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !18159

if.then13:                                        ; preds = %land.lhs.true
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18160
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18161
  %promiscuous14 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 24, !dbg !18162
  %17 = load i8, i8* %promiscuous14, align 2, !dbg !18162
  call void @hw_set_promiscuous(%struct.ksz_hw* %15, i8 zeroext %17) #12, !dbg !18163
  br label %if.end15, !dbg !18163

if.end15:                                         ; preds = %if.then13, %land.lhs.true, %if.end
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18164
  %features = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 32, !dbg !18166
  %19 = load i32, i32* %features, align 8, !dbg !18166
  %and = and i32 %19, 256, !dbg !18167
  %tobool16 = icmp ne i32 %and, 0, !dbg !18167
  br i1 %tobool16, label %land.lhs.true17, label %if.end32, !dbg !18168

land.lhs.true17:                                  ; preds = %if.end15
  %20 = load i32, i32* %promiscuous.addr, align 4, !dbg !18169
  %tobool18 = icmp ne i32 %20, 0, !dbg !18169
  br i1 %tobool18, label %if.end32, label %land.lhs.true19, !dbg !18170

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18171
  %call = call zeroext i1 @netif_is_bridge_port(%struct.net_device* %21) #12, !dbg !18172
  br i1 %call, label %if.then21, label %if.end32, !dbg !18173

if.then21:                                        ; preds = %land.lhs.true19
  call void @llvm.dbg.declare(metadata %struct.ksz_switch** %sw, metadata !18174, metadata !DIExpression()), !dbg !18176
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18177
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %22, i32 0, i32 1, !dbg !18178
  %23 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !18178
  store %struct.ksz_switch* %23, %struct.ksz_switch** %sw, align 8, !dbg !18176
  call void @llvm.dbg.declare(metadata i32* %port, metadata !18179, metadata !DIExpression()), !dbg !18180
  %24 = load %struct.dev_priv*, %struct.dev_priv** %priv.addr, align 8, !dbg !18181
  %port22 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %24, i32 0, i32 1, !dbg !18182
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %port22, i32 0, i32 4, !dbg !18183
  %25 = load i32, i32* %first_port, align 4, !dbg !18183
  store i32 %25, i32* %port, align 4, !dbg !18180
  %26 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18184
  %27 = load i32, i32* %port, align 4, !dbg !18185
  call void @port_set_stp_state(%struct.ksz_hw* %26, i32 %27, i32 0) #12, !dbg !18186
  %28 = load i32, i32* %port, align 4, !dbg !18187
  %shl = shl i32 1, %28, !dbg !18188
  store i32 %shl, i32* %port, align 4, !dbg !18189
  %29 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !18190
  %member = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %29, i32 0, i32 8, !dbg !18192
  %30 = load i8, i8* %member, align 1, !dbg !18192
  %conv23 = zext i8 %30 to i32, !dbg !18190
  %31 = load i32, i32* %port, align 4, !dbg !18193
  %and24 = and i32 %conv23, %31, !dbg !18194
  %tobool25 = icmp ne i32 %and24, 0, !dbg !18194
  br i1 %tobool25, label %if.then26, label %if.end31, !dbg !18195

if.then26:                                        ; preds = %if.then21
  %32 = load i32, i32* %port, align 4, !dbg !18196
  %neg = xor i32 %32, -1, !dbg !18198
  %33 = load %struct.ksz_switch*, %struct.ksz_switch** %sw, align 8, !dbg !18199
  %member27 = getelementptr inbounds %struct.ksz_switch, %struct.ksz_switch* %33, i32 0, i32 8, !dbg !18200
  %34 = load i8, i8* %member27, align 1, !dbg !18201
  %conv28 = zext i8 %34 to i32, !dbg !18201
  %and29 = and i32 %conv28, %neg, !dbg !18201
  %conv30 = trunc i32 %and29 to i8, !dbg !18201
  store i8 %conv30, i8* %member27, align 1, !dbg !18201
  %35 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18202
  call void @bridge_change(%struct.ksz_hw* %35) #12, !dbg !18203
  br label %if.end31, !dbg !18204

if.end31:                                         ; preds = %if.then26, %if.then21
  br label %if.end32, !dbg !18205

if.end32:                                         ; preds = %if.end31, %land.lhs.true19, %land.lhs.true17, %if.end15
  br label %if.end33, !dbg !18206

if.end33:                                         ; preds = %if.end32, %entry
  ret void, !dbg !18207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_multicast(%struct.dev_priv* %priv, %struct.ksz_hw* %hw, i32 %multicast) #2 !dbg !18208 {
entry:
  %priv.addr = alloca %struct.dev_priv*, align 8
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %multicast.addr = alloca i32, align 4
  %all_multi = alloca i8, align 1
  store %struct.dev_priv* %priv, %struct.dev_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv.addr, metadata !18211, metadata !DIExpression()), !dbg !18212
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !18213, metadata !DIExpression()), !dbg !18214
  store i32 %multicast, i32* %multicast.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %multicast.addr, metadata !18215, metadata !DIExpression()), !dbg !18216
  %0 = load i32, i32* %multicast.addr, align 4, !dbg !18217
  %1 = load %struct.dev_priv*, %struct.dev_priv** %priv.addr, align 8, !dbg !18219
  %multicast1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %1, i32 0, i32 9, !dbg !18220
  %2 = load i32, i32* %multicast1, align 4, !dbg !18220
  %cmp = icmp ne i32 %0, %2, !dbg !18221
  br i1 %cmp, label %if.then, label %if.end16, !dbg !18222

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_multi, metadata !18223, metadata !DIExpression()), !dbg !18225
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18226
  %all_multi2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 25, !dbg !18227
  %4 = load i8, i8* %all_multi2, align 1, !dbg !18227
  store i8 %4, i8* %all_multi, align 1, !dbg !18225
  %5 = load i32, i32* %multicast.addr, align 4, !dbg !18228
  %tobool = icmp ne i32 %5, 0, !dbg !18228
  br i1 %tobool, label %if.then3, label %if.else, !dbg !18230

if.then3:                                         ; preds = %if.then
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18231
  %all_multi4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 25, !dbg !18232
  %7 = load i8, i8* %all_multi4, align 1, !dbg !18233
  %inc = add i8 %7, 1, !dbg !18233
  store i8 %inc, i8* %all_multi4, align 1, !dbg !18233
  br label %if.end, !dbg !18233

if.else:                                          ; preds = %if.then
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18234
  %all_multi5 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 25, !dbg !18235
  %9 = load i8, i8* %all_multi5, align 1, !dbg !18236
  %dec = add i8 %9, -1, !dbg !18236
  store i8 %dec, i8* %all_multi5, align 1, !dbg !18236
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %10 = load i32, i32* %multicast.addr, align 4, !dbg !18237
  %11 = load %struct.dev_priv*, %struct.dev_priv** %priv.addr, align 8, !dbg !18238
  %multicast6 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %11, i32 0, i32 9, !dbg !18239
  store i32 %10, i32* %multicast6, align 4, !dbg !18240
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18241
  %all_multi7 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %12, i32 0, i32 25, !dbg !18243
  %13 = load i8, i8* %all_multi7, align 1, !dbg !18243
  %conv = zext i8 %13 to i32, !dbg !18241
  %cmp8 = icmp sle i32 %conv, 1, !dbg !18244
  br i1 %cmp8, label %land.lhs.true, label %if.end15, !dbg !18245

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8, i8* %all_multi, align 1, !dbg !18246
  %conv10 = zext i8 %14 to i32, !dbg !18246
  %cmp11 = icmp sle i32 %conv10, 1, !dbg !18247
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !18248

if.then13:                                        ; preds = %land.lhs.true
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18249
  %16 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18250
  %all_multi14 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %16, i32 0, i32 25, !dbg !18251
  %17 = load i8, i8* %all_multi14, align 1, !dbg !18251
  call void @hw_set_multicast(%struct.ksz_hw* %15, i8 zeroext %17) #12, !dbg !18252
  br label %if.end15, !dbg !18252

if.end15:                                         ; preds = %if.then13, %land.lhs.true, %if.end
  br label %if.end16, !dbg !18253

if.end16:                                         ; preds = %if.end15, %entry
  ret void, !dbg !18254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_multicast(%struct.ksz_hw* %hw, i8 zeroext %multicast) #2 !dbg !18255 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %multicast.addr = alloca i8, align 1
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !18256, metadata !DIExpression()), !dbg !18257
  store i8 %multicast, i8* %multicast.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %multicast.addr, metadata !18258, metadata !DIExpression()), !dbg !18259
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18260
  call void @hw_stop_rx(%struct.ksz_hw* %0) #12, !dbg !18261
  %1 = load i8, i8* %multicast.addr, align 1, !dbg !18262
  %tobool = icmp ne i8 %1, 0, !dbg !18262
  br i1 %tobool, label %if.then, label %if.else, !dbg !18264

if.then:                                          ; preds = %entry
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18265
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 10, !dbg !18266
  %3 = load i32, i32* %rx_cfg, align 8, !dbg !18267
  %or = or i32 %3, 32, !dbg !18267
  store i32 %or, i32* %rx_cfg, align 8, !dbg !18267
  br label %if.end, !dbg !18265

if.else:                                          ; preds = %entry
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18268
  %rx_cfg1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 10, !dbg !18269
  %5 = load i32, i32* %rx_cfg1, align 8, !dbg !18270
  %and = and i32 %5, -33, !dbg !18270
  store i32 %and, i32* %rx_cfg1, align 8, !dbg !18270
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18271
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 29, !dbg !18273
  %7 = load i8, i8* %enabled, align 1, !dbg !18273
  %tobool2 = icmp ne i8 %7, 0, !dbg !18271
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !18274

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18275
  call void @hw_start_rx(%struct.ksz_hw* %8) #12, !dbg !18276
  br label %if.end4, !dbg !18276

if.end4:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !18277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_grp_addr(%struct.ksz_hw* %hw) #2 !dbg !18278 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %position = alloca i32, align 4
  %value = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp22 = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !18279, metadata !DIExpression()), !dbg !18280
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18281, metadata !DIExpression()), !dbg !18282
  call void @llvm.dbg.declare(metadata i32* %index, metadata !18283, metadata !DIExpression()), !dbg !18284
  call void @llvm.dbg.declare(metadata i32* %position, metadata !18285, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.declare(metadata i32* %value, metadata !18287, metadata !DIExpression()), !dbg !18288
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18289
  %multi_bits = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 27, !dbg !18290
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %multi_bits, i64 0, i64 0, !dbg !18291
  call void @llvm.memset.p0i8.i64(i8* align 4 %arraydecay, i8 0, i64 8, i1 false), !dbg !18291
  store i32 0, i32* %i, align 4, !dbg !18292
  br label %for.cond, !dbg !18294

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !18295
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18297
  %multi_list_size = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 28, !dbg !18298
  %3 = load i8, i8* %multi_list_size, align 4, !dbg !18298
  %conv = zext i8 %3 to i32, !dbg !18297
  %cmp = icmp slt i32 %1, %conv, !dbg !18299
  br i1 %cmp, label %for.body, label %for.end, !dbg !18300

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !18301, metadata !DIExpression()), !dbg !18304
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18304
  %multi_list = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 26, !dbg !18304
  %5 = load i32, i32* %i, align 4, !dbg !18304
  %idxprom = sext i32 %5 to i64, !dbg !18304
  %arrayidx = getelementptr [32 x [6 x i8]], [32 x [6 x i8]]* %multi_list, i64 0, i64 %idxprom, !dbg !18304
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx, i64 0, i64 0, !dbg !18304
  %call = call i32 @crc32_le(i32 -1, i8* %arraydecay2, i64 6) #16, !dbg !18304
  store i32 %call, i32* %__x, align 4, !dbg !18304
  %6 = load i32, i32* %__x, align 4, !dbg !18304
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !18304
  br i1 %7, label %cond.true, label %cond.false, !dbg !18304

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !18305, metadata !DIExpression()), !dbg !18307
  %8 = load i32, i32* %__x, align 4, !dbg !18307
  store i32 %8, i32* %___x, align 4, !dbg !18307
  %9 = load i32, i32* %___x, align 4, !dbg !18307
  %shr = lshr i32 %9, 16, !dbg !18307
  %10 = load i32, i32* %___x, align 4, !dbg !18307
  %shl = shl i32 %10, 16, !dbg !18307
  %or = or i32 %shr, %shl, !dbg !18307
  store i32 %or, i32* %___x, align 4, !dbg !18307
  %11 = load i32, i32* %___x, align 4, !dbg !18307
  %and = and i32 %11, -16711936, !dbg !18307
  %shr3 = lshr i32 %and, 8, !dbg !18307
  %12 = load i32, i32* %___x, align 4, !dbg !18307
  %and4 = and i32 %12, 16711935, !dbg !18307
  %shl5 = shl i32 %and4, 8, !dbg !18307
  %or6 = or i32 %shr3, %shl5, !dbg !18307
  store i32 %or6, i32* %___x, align 4, !dbg !18307
  %13 = load i32, i32* %___x, align 4, !dbg !18307
  %and7 = and i32 %13, -252645136, !dbg !18307
  %shr8 = lshr i32 %and7, 4, !dbg !18307
  %14 = load i32, i32* %___x, align 4, !dbg !18307
  %and9 = and i32 %14, 252645135, !dbg !18307
  %shl10 = shl i32 %and9, 4, !dbg !18307
  %or11 = or i32 %shr8, %shl10, !dbg !18307
  store i32 %or11, i32* %___x, align 4, !dbg !18307
  %15 = load i32, i32* %___x, align 4, !dbg !18307
  %and12 = and i32 %15, -858993460, !dbg !18307
  %shr13 = lshr i32 %and12, 2, !dbg !18307
  %16 = load i32, i32* %___x, align 4, !dbg !18307
  %and14 = and i32 %16, 858993459, !dbg !18307
  %shl15 = shl i32 %and14, 2, !dbg !18307
  %or16 = or i32 %shr13, %shl15, !dbg !18307
  store i32 %or16, i32* %___x, align 4, !dbg !18307
  %17 = load i32, i32* %___x, align 4, !dbg !18307
  %and17 = and i32 %17, -1431655766, !dbg !18307
  %shr18 = lshr i32 %and17, 1, !dbg !18307
  %18 = load i32, i32* %___x, align 4, !dbg !18307
  %and19 = and i32 %18, 1431655765, !dbg !18307
  %shl20 = shl i32 %and19, 1, !dbg !18307
  %or21 = or i32 %shr18, %shl20, !dbg !18307
  store i32 %or21, i32* %___x, align 4, !dbg !18307
  %19 = load i32, i32* %___x, align 4, !dbg !18307
  store i32 %19, i32* %tmp22, align 4, !dbg !18307
  %20 = load i32, i32* %tmp22, align 4, !dbg !18307
  br label %cond.end, !dbg !18304

cond.false:                                       ; preds = %for.body
  %21 = load i32, i32* %__x, align 4, !dbg !18304
  %call23 = call i32 @__bitrev32(i32 %21) #12, !dbg !18304
  br label %cond.end, !dbg !18304

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %20, %cond.true ], [ %call23, %cond.false ], !dbg !18304
  store i32 %cond, i32* %tmp, align 4, !dbg !18304
  %22 = load i32, i32* %tmp, align 4, !dbg !18304
  %shr24 = lshr i32 %22, 26, !dbg !18308
  %and25 = and i32 %shr24, 63, !dbg !18309
  store i32 %and25, i32* %position, align 4, !dbg !18310
  %23 = load i32, i32* %position, align 4, !dbg !18311
  %shr26 = ashr i32 %23, 3, !dbg !18312
  store i32 %shr26, i32* %index, align 4, !dbg !18313
  %24 = load i32, i32* %position, align 4, !dbg !18314
  %and27 = and i32 %24, 7, !dbg !18315
  %shl28 = shl i32 1, %and27, !dbg !18316
  store i32 %shl28, i32* %value, align 4, !dbg !18317
  %25 = load i32, i32* %value, align 4, !dbg !18318
  %conv29 = trunc i32 %25 to i8, !dbg !18319
  %conv30 = zext i8 %conv29 to i32, !dbg !18319
  %26 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18320
  %multi_bits31 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %26, i32 0, i32 27, !dbg !18321
  %27 = load i32, i32* %index, align 4, !dbg !18322
  %idxprom32 = sext i32 %27 to i64, !dbg !18320
  %arrayidx33 = getelementptr [8 x i8], [8 x i8]* %multi_bits31, i64 0, i64 %idxprom32, !dbg !18320
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !18323
  %conv34 = zext i8 %28 to i32, !dbg !18323
  %or35 = or i32 %conv34, %conv30, !dbg !18323
  %conv36 = trunc i32 %or35 to i8, !dbg !18323
  store i8 %conv36, i8* %arrayidx33, align 1, !dbg !18323
  br label %for.inc, !dbg !18324

for.inc:                                          ; preds = %cond.end
  %29 = load i32, i32* %i, align 4, !dbg !18325
  %inc = add i32 %29, 1, !dbg !18325
  store i32 %inc, i32* %i, align 4, !dbg !18325
  br label %for.cond, !dbg !18326, !llvm.loop !18327

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !18329
  br label %for.cond37, !dbg !18331

for.cond37:                                       ; preds = %for.inc45, %for.end
  %30 = load i32, i32* %i, align 4, !dbg !18332
  %cmp38 = icmp slt i32 %30, 8, !dbg !18334
  br i1 %cmp38, label %for.body40, label %for.end47, !dbg !18335

for.body40:                                       ; preds = %for.cond37
  %31 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18336
  %multi_bits41 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %31, i32 0, i32 27, !dbg !18337
  %32 = load i32, i32* %i, align 4, !dbg !18338
  %idxprom42 = sext i32 %32 to i64, !dbg !18336
  %arrayidx43 = getelementptr [8 x i8], [8 x i8]* %multi_bits41, i64 0, i64 %idxprom42, !dbg !18336
  %33 = load i8, i8* %arrayidx43, align 1, !dbg !18336
  %34 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18339
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %34, i32 0, i32 0, !dbg !18340
  %35 = load i8*, i8** %io, align 8, !dbg !18340
  %add.ptr = getelementptr i8, i8* %35, i64 32, !dbg !18341
  %36 = load i32, i32* %i, align 4, !dbg !18342
  %idx.ext = sext i32 %36 to i64, !dbg !18343
  %add.ptr44 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !18343
  call void @writeb(i8 zeroext %33, i8* %add.ptr44) #12, !dbg !18344
  br label %for.inc45, !dbg !18344

for.inc45:                                        ; preds = %for.body40
  %37 = load i32, i32* %i, align 4, !dbg !18345
  %inc46 = add i32 %37, 1, !dbg !18345
  store i32 %inc46, i32* %i, align 4, !dbg !18345
  br label %for.cond37, !dbg !18346, !llvm.loop !18347

for.end47:                                        ; preds = %for.cond37
  ret void, !dbg !18349
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_promiscuous(%struct.ksz_hw* %hw, i8 zeroext %prom) #2 !dbg !18350 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %prom.addr = alloca i8, align 1
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !18351, metadata !DIExpression()), !dbg !18352
  store i8 %prom, i8* %prom.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prom.addr, metadata !18353, metadata !DIExpression()), !dbg !18354
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18355
  call void @hw_stop_rx(%struct.ksz_hw* %0) #12, !dbg !18356
  %1 = load i8, i8* %prom.addr, align 1, !dbg !18357
  %tobool = icmp ne i8 %1, 0, !dbg !18357
  br i1 %tobool, label %if.then, label %if.else, !dbg !18359

if.then:                                          ; preds = %entry
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18360
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 10, !dbg !18361
  %3 = load i32, i32* %rx_cfg, align 8, !dbg !18362
  %or = or i32 %3, 4, !dbg !18362
  store i32 %or, i32* %rx_cfg, align 8, !dbg !18362
  br label %if.end, !dbg !18360

if.else:                                          ; preds = %entry
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18363
  %rx_cfg1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 10, !dbg !18364
  %5 = load i32, i32* %rx_cfg1, align 8, !dbg !18365
  %and = and i32 %5, -5, !dbg !18365
  store i32 %and, i32* %rx_cfg1, align 8, !dbg !18365
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18366
  %enabled = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 29, !dbg !18368
  %7 = load i8, i8* %enabled, align 1, !dbg !18368
  %tobool2 = icmp ne i8 %7, 0, !dbg !18366
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !18369

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18370
  call void @hw_start_rx(%struct.ksz_hw* %8) #12, !dbg !18371
  br label %if.end4, !dbg !18371

if.end4:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !18372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_bridge_port(%struct.net_device* %dev) #2 !dbg !18373 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18374, metadata !DIExpression()), !dbg !18375
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18376
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !18377
  %1 = load i32, i32* %priv_flags, align 4, !dbg !18377
  %and = and i32 %1, 512, !dbg !18378
  %tobool = icmp ne i32 %and, 0, !dbg !18376
  ret i1 %tobool, !dbg !18379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %rq) #2 !dbg !18380 {
entry:
  %rq.addr = alloca %struct.ifreq*, align 8
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !18383, metadata !DIExpression()), !dbg !18384
  %0 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !18385
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !18386
  %1 = bitcast %union.anon.90* %ifr_ifru to %struct.mii_ioctl_data*, !dbg !18387
  ret %struct.mii_ioctl_data* %1, !dbg !18388
}

; Function Attrs: noredzone
declare dso_local i32 @down_interruptible(%struct.semaphore*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #1

; Function Attrs: noredzone
declare dso_local void @up(%struct.semaphore*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_set_add_addr(%struct.ksz_hw* %hw) #2 !dbg !18389 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !18390, metadata !DIExpression()), !dbg !18391
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18392, metadata !DIExpression()), !dbg !18393
  store i32 0, i32* %i, align 4, !dbg !18394
  br label %for.cond, !dbg !18396

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18397
  %cmp = icmp slt i32 %0, 16, !dbg !18399
  br i1 %cmp, label %for.body, label %for.end, !dbg !18400

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18401
  %address = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 21, !dbg !18404
  %2 = load i32, i32* %i, align 4, !dbg !18405
  %idxprom = sext i32 %2 to i64, !dbg !18401
  %arrayidx = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address, i64 0, i64 %idxprom, !dbg !18401
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx, i64 0, i64 0, !dbg !18401
  %call = call i32 @empty_addr(i8* %arraydecay) #12, !dbg !18406
  %tobool = icmp ne i32 %call, 0, !dbg !18406
  br i1 %tobool, label %if.then, label %if.else, !dbg !18407

if.then:                                          ; preds = %for.body
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18408
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 0, !dbg !18409
  %4 = load i8*, i8** %io, align 8, !dbg !18409
  %5 = load i32, i32* %i, align 4, !dbg !18410
  %mul = mul i32 8, %5, !dbg !18411
  %idx.ext = sext i32 %mul to i64, !dbg !18412
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !18412
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 132, !dbg !18413
  call void @writel(i32 0, i8* %add.ptr1) #12, !dbg !18414
  br label %if.end, !dbg !18414

if.else:                                          ; preds = %for.body
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18415
  %7 = load i32, i32* %i, align 4, !dbg !18416
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !18417
  %address2 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 21, !dbg !18418
  %9 = load i32, i32* %i, align 4, !dbg !18419
  %idxprom3 = sext i32 %9 to i64, !dbg !18417
  %arrayidx4 = getelementptr [16 x [6 x i8]], [16 x [6 x i8]]* %address2, i64 0, i64 %idxprom3, !dbg !18417
  %arraydecay5 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx4, i64 0, i64 0, !dbg !18417
  call void @hw_ena_add_addr(%struct.ksz_hw* %6, i32 %7, i8* %arraydecay5) #12, !dbg !18420
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !18421

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !18422
  %inc = add i32 %10, 1, !dbg !18422
  store i32 %inc, i32* %i, align 4, !dbg !18422
  br label %for.cond, !dbg !18423, !llvm.loop !18424

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18426
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_get_drvinfo(%struct.net_device* %dev, %struct.ethtool_drvinfo* %info) #2 !dbg !18427 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18428, metadata !DIExpression()), !dbg !18429
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !18430, metadata !DIExpression()), !dbg !18431
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18432, metadata !DIExpression()), !dbg !18433
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18434
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18435
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18435
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18433
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18436, metadata !DIExpression()), !dbg !18437
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18438
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18439
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18439
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18437
  %4 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !18440
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %4, i32 0, i32 1, !dbg !18441
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !18440
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 32) #12, !dbg !18442
  %5 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !18443
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %5, i32 0, i32 2, !dbg !18444
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !18443
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 32) #12, !dbg !18445
  %6 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !18446
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %6, i32 0, i32 4, !dbg !18447
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !18446
  %7 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18448
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %7, i32 0, i32 1, !dbg !18449
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18449
  %call5 = call i8* @pci_name(%struct.pci_dev* %8) #12, !dbg !18450
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %call5, i64 32) #12, !dbg !18451
  ret void, !dbg !18452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_get_regs_len(%struct.net_device* %dev) #2 !dbg !18453 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %range = alloca %struct.hw_regs*, align 8
  %regs_len = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18454, metadata !DIExpression()), !dbg !18455
  call void @llvm.dbg.declare(metadata %struct.hw_regs** %range, metadata !18456, metadata !DIExpression()), !dbg !18458
  store %struct.hw_regs* getelementptr inbounds ([7 x %struct.hw_regs], [7 x %struct.hw_regs]* @hw_regs_range, i64 0, i64 0), %struct.hw_regs** %range, align 8, !dbg !18458
  call void @llvm.dbg.declare(metadata i32* %regs_len, metadata !18459, metadata !DIExpression()), !dbg !18460
  store i32 64, i32* %regs_len, align 4, !dbg !18460
  br label %while.cond, !dbg !18461

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18462
  %end = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %0, i32 0, i32 1, !dbg !18463
  %1 = load i32, i32* %end, align 4, !dbg !18463
  %2 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18464
  %start = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %2, i32 0, i32 0, !dbg !18465
  %3 = load i32, i32* %start, align 4, !dbg !18465
  %cmp = icmp sgt i32 %1, %3, !dbg !18466
  br i1 %cmp, label %while.body, label %while.end, !dbg !18461

while.body:                                       ; preds = %while.cond
  %4 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18467
  %end1 = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %4, i32 0, i32 1, !dbg !18469
  %5 = load i32, i32* %end1, align 4, !dbg !18469
  %6 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18470
  %start2 = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %6, i32 0, i32 0, !dbg !18471
  %7 = load i32, i32* %start2, align 4, !dbg !18471
  %sub = sub i32 %5, %7, !dbg !18472
  %add = add i32 %sub, 3, !dbg !18473
  %div = sdiv i32 %add, 4, !dbg !18474
  %mul = mul i32 %div, 4, !dbg !18475
  %8 = load i32, i32* %regs_len, align 4, !dbg !18476
  %add3 = add i32 %8, %mul, !dbg !18476
  store i32 %add3, i32* %regs_len, align 4, !dbg !18476
  %9 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18477
  %incdec.ptr = getelementptr %struct.hw_regs, %struct.hw_regs* %9, i32 1, !dbg !18477
  store %struct.hw_regs* %incdec.ptr, %struct.hw_regs** %range, align 8, !dbg !18477
  br label %while.cond, !dbg !18461, !llvm.loop !18478

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %regs_len, align 4, !dbg !18480
  ret i32 %10, !dbg !18481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_get_regs(%struct.net_device* %dev, %struct.ethtool_regs* %regs, i8* %ptr) #2 !dbg !18482 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %regs.addr = alloca %struct.ethtool_regs*, align 8
  %ptr.addr = alloca i8*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %buf = alloca i32*, align 8
  %range = alloca %struct.hw_regs*, align 8
  %len = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18483, metadata !DIExpression()), !dbg !18484
  store %struct.ethtool_regs* %regs, %struct.ethtool_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_regs** %regs.addr, metadata !18485, metadata !DIExpression()), !dbg !18486
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !18487, metadata !DIExpression()), !dbg !18488
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18489, metadata !DIExpression()), !dbg !18490
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18491
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18492
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18492
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18490
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18493, metadata !DIExpression()), !dbg !18494
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18495
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18496
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18496
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18494
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !18497, metadata !DIExpression()), !dbg !18498
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18499
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !18500
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !18498
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !18501, metadata !DIExpression()), !dbg !18502
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !18503
  %6 = bitcast i8* %5 to i32*, !dbg !18504
  store i32* %6, i32** %buf, align 8, !dbg !18502
  call void @llvm.dbg.declare(metadata %struct.hw_regs** %range, metadata !18505, metadata !DIExpression()), !dbg !18506
  store %struct.hw_regs* getelementptr inbounds ([7 x %struct.hw_regs], [7 x %struct.hw_regs]* @hw_regs_range, i64 0, i64 0), %struct.hw_regs** %range, align 8, !dbg !18506
  call void @llvm.dbg.declare(metadata i32* %len, metadata !18507, metadata !DIExpression()), !dbg !18508
  %7 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18509
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %7, i32 0, i32 5, !dbg !18510
  call void @mutex_lock(%struct.mutex* %lock) #12, !dbg !18511
  %8 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !18512
  %version = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %8, i32 0, i32 1, !dbg !18513
  store i32 0, i32* %version, align 4, !dbg !18514
  store i32 0, i32* %len, align 4, !dbg !18515
  br label %for.cond, !dbg !18517

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %len, align 4, !dbg !18518
  %cmp = icmp slt i32 %9, 64, !dbg !18520
  br i1 %cmp, label %for.body, label %for.end, !dbg !18521

for.body:                                         ; preds = %for.cond
  %10 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18522
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %10, i32 0, i32 1, !dbg !18524
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18524
  %12 = load i32, i32* %len, align 4, !dbg !18525
  %13 = load i32*, i32** %buf, align 8, !dbg !18526
  %call2 = call i32 @pci_read_config_dword(%struct.pci_dev* %11, i32 %12, i32* %13) #12, !dbg !18527
  %14 = load i32*, i32** %buf, align 8, !dbg !18528
  %incdec.ptr = getelementptr i32, i32* %14, i32 1, !dbg !18528
  store i32* %incdec.ptr, i32** %buf, align 8, !dbg !18528
  br label %for.inc, !dbg !18529

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %len, align 4, !dbg !18530
  %add = add i32 %15, 4, !dbg !18530
  store i32 %add, i32* %len, align 4, !dbg !18530
  br label %for.cond, !dbg !18531, !llvm.loop !18532

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !18534

while.cond:                                       ; preds = %for.end13, %for.end
  %16 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18535
  %end = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %16, i32 0, i32 1, !dbg !18536
  %17 = load i32, i32* %end, align 4, !dbg !18536
  %18 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18537
  %start = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %18, i32 0, i32 0, !dbg !18538
  %19 = load i32, i32* %start, align 4, !dbg !18538
  %cmp3 = icmp sgt i32 %17, %19, !dbg !18539
  br i1 %cmp3, label %while.body, label %while.end, !dbg !18534

while.body:                                       ; preds = %while.cond
  %20 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18540
  %start4 = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %20, i32 0, i32 0, !dbg !18543
  %21 = load i32, i32* %start4, align 4, !dbg !18543
  store i32 %21, i32* %len, align 4, !dbg !18544
  br label %for.cond5, !dbg !18545

for.cond5:                                        ; preds = %for.inc11, %while.body
  %22 = load i32, i32* %len, align 4, !dbg !18546
  %23 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18548
  %end6 = getelementptr inbounds %struct.hw_regs, %struct.hw_regs* %23, i32 0, i32 1, !dbg !18549
  %24 = load i32, i32* %end6, align 4, !dbg !18549
  %cmp7 = icmp slt i32 %22, %24, !dbg !18550
  br i1 %cmp7, label %for.body8, label %for.end13, !dbg !18551

for.body8:                                        ; preds = %for.cond5
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18552
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %25, i32 0, i32 0, !dbg !18554
  %26 = load i8*, i8** %io, align 8, !dbg !18554
  %27 = load i32, i32* %len, align 4, !dbg !18555
  %idx.ext = sext i32 %27 to i64, !dbg !18556
  %add.ptr = getelementptr i8, i8* %26, i64 %idx.ext, !dbg !18556
  %call9 = call i32 @readl(i8* %add.ptr) #12, !dbg !18557
  %28 = load i32*, i32** %buf, align 8, !dbg !18558
  store i32 %call9, i32* %28, align 4, !dbg !18559
  %29 = load i32*, i32** %buf, align 8, !dbg !18560
  %incdec.ptr10 = getelementptr i32, i32* %29, i32 1, !dbg !18560
  store i32* %incdec.ptr10, i32** %buf, align 8, !dbg !18560
  br label %for.inc11, !dbg !18561

for.inc11:                                        ; preds = %for.body8
  %30 = load i32, i32* %len, align 4, !dbg !18562
  %add12 = add i32 %30, 4, !dbg !18562
  store i32 %add12, i32* %len, align 4, !dbg !18562
  br label %for.cond5, !dbg !18563, !llvm.loop !18564

for.end13:                                        ; preds = %for.cond5
  %31 = load %struct.hw_regs*, %struct.hw_regs** %range, align 8, !dbg !18566
  %incdec.ptr14 = getelementptr %struct.hw_regs, %struct.hw_regs* %31, i32 1, !dbg !18566
  store %struct.hw_regs* %incdec.ptr14, %struct.hw_regs** %range, align 8, !dbg !18566
  br label %while.cond, !dbg !18534, !llvm.loop !18567

while.end:                                        ; preds = %while.cond
  %32 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18569
  %lock15 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %32, i32 0, i32 5, !dbg !18570
  call void @mutex_unlock(%struct.mutex* %lock15) #12, !dbg !18571
  ret void, !dbg !18572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_get_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !18573 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18574, metadata !DIExpression()), !dbg !18575
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !18576, metadata !DIExpression()), !dbg !18577
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18578, metadata !DIExpression()), !dbg !18579
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18580
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18581
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18581
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18579
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18582, metadata !DIExpression()), !dbg !18583
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18584
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18585
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18585
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18583
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18586
  %wol_support = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 18, !dbg !18587
  %5 = load i32, i32* %wol_support, align 4, !dbg !18587
  %6 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18588
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %6, i32 0, i32 1, !dbg !18589
  store i32 %5, i32* %supported, align 4, !dbg !18590
  %7 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18591
  %wol_enable = getelementptr inbounds %struct.dev_info, %struct.dev_info* %7, i32 0, i32 17, !dbg !18592
  %8 = load i32, i32* %wol_enable, align 8, !dbg !18592
  %9 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18593
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %9, i32 0, i32 2, !dbg !18594
  store i32 %8, i32* %wolopts, align 4, !dbg !18595
  %10 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18596
  %sopass = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %10, i32 0, i32 3, !dbg !18597
  %11 = bitcast [6 x i8]* %sopass to i8*, !dbg !18598
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 6, i1 false), !dbg !18598
  ret void, !dbg !18599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_set_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !8292 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18600, metadata !DIExpression()), !dbg !18601
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !18602, metadata !DIExpression()), !dbg !18603
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18604, metadata !DIExpression()), !dbg !18605
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18606
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18607
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18607
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18605
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18608, metadata !DIExpression()), !dbg !18609
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18610
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18611
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18611
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18609
  %4 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18612
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %4, i32 0, i32 2, !dbg !18614
  %5 = load i32, i32* %wolopts, align 4, !dbg !18614
  %6 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18615
  %wol_support = getelementptr inbounds %struct.dev_info, %struct.dev_info* %6, i32 0, i32 18, !dbg !18616
  %7 = load i32, i32* %wol_support, align 4, !dbg !18616
  %neg = xor i32 %7, -1, !dbg !18617
  %and = and i32 %5, %neg, !dbg !18618
  %tobool = icmp ne i32 %and, 0, !dbg !18618
  br i1 %tobool, label %if.then, label %if.end, !dbg !18619

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !18620
  br label %return, !dbg !18620

if.end:                                           ; preds = %entry
  %8 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18621
  %wolopts1 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %8, i32 0, i32 2, !dbg !18622
  %9 = load i32, i32* %wolopts1, align 4, !dbg !18622
  %10 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18623
  %wol_enable = getelementptr inbounds %struct.dev_info, %struct.dev_info* %10, i32 0, i32 17, !dbg !18624
  store i32 %9, i32* %wol_enable, align 8, !dbg !18625
  %11 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18626
  %wolopts2 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %11, i32 0, i32 2, !dbg !18628
  %12 = load i32, i32* %wolopts2, align 4, !dbg !18628
  %tobool3 = icmp ne i32 %12, 0, !dbg !18626
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !18629

if.then4:                                         ; preds = %if.end
  %13 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18630
  %wol_enable5 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %13, i32 0, i32 17, !dbg !18631
  %14 = load i32, i32* %wol_enable5, align 8, !dbg !18632
  %or = or i32 %14, 1, !dbg !18632
  store i32 %or, i32* %wol_enable5, align 8, !dbg !18632
  br label %if.end6, !dbg !18630

if.end6:                                          ; preds = %if.then4, %if.end
  %15 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18633
  %hw = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 2, !dbg !18634
  %16 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18635
  %wol_enable7 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %16, i32 0, i32 17, !dbg !18636
  %17 = load i32, i32* %wol_enable7, align 8, !dbg !18636
  call void @hw_enable_wol(%struct.ksz_hw* %hw, i32 %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @netdev_set_wol.net_addr, i64 0, i64 0)) #12, !dbg !18637
  store i32 0, i32* %retval, align 4, !dbg !18638
  br label %return, !dbg !18638

return:                                           ; preds = %if.end6, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !18639
  ret i32 %18, !dbg !18639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_get_msglevel(%struct.net_device* %dev) #2 !dbg !18640 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18641, metadata !DIExpression()), !dbg !18642
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18643, metadata !DIExpression()), !dbg !18644
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18645
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18646
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18646
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18644
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18647
  %msg_enable = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 7, !dbg !18648
  %3 = load i32, i32* %msg_enable, align 4, !dbg !18648
  ret i32 %3, !dbg !18649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_set_msglevel(%struct.net_device* %dev, i32 %value) #2 !dbg !18650 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %value.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18651, metadata !DIExpression()), !dbg !18652
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !18653, metadata !DIExpression()), !dbg !18654
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18655, metadata !DIExpression()), !dbg !18656
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18657
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18658
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18658
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18656
  %2 = load i32, i32* %value.addr, align 4, !dbg !18659
  %3 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18660
  %msg_enable = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %3, i32 0, i32 7, !dbg !18661
  store i32 %2, i32* %msg_enable, align 4, !dbg !18662
  ret void, !dbg !18663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_nway_reset(%struct.net_device* %dev) #2 !dbg !18664 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %rc = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18665, metadata !DIExpression()), !dbg !18666
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18667, metadata !DIExpression()), !dbg !18668
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18669
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18670
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18670
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18668
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18671, metadata !DIExpression()), !dbg !18672
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18673
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18674
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18674
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18672
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18675, metadata !DIExpression()), !dbg !18676
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18677
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 5, !dbg !18678
  call void @mutex_lock(%struct.mutex* %lock) #12, !dbg !18679
  %5 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18680
  %mii_if = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %5, i32 0, i32 5, !dbg !18681
  %call1 = call i32 @mii_nway_restart(%struct.mii_if_info* %mii_if) #12, !dbg !18682
  store i32 %call1, i32* %rc, align 4, !dbg !18683
  %6 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18684
  %lock2 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %6, i32 0, i32 5, !dbg !18685
  call void @mutex_unlock(%struct.mutex* %lock2) #12, !dbg !18686
  %7 = load i32, i32* %rc, align 4, !dbg !18687
  ret i32 %7, !dbg !18688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_get_link(%struct.net_device* %dev) #2 !dbg !18689 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %rc = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18690, metadata !DIExpression()), !dbg !18691
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18692, metadata !DIExpression()), !dbg !18693
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18694
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18695
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18695
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18693
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18696, metadata !DIExpression()), !dbg !18697
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18698
  %mii_if = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 5, !dbg !18699
  %call1 = call i32 @mii_link_ok(%struct.mii_if_info* %mii_if) #12, !dbg !18700
  store i32 %call1, i32* %rc, align 4, !dbg !18701
  %3 = load i32, i32* %rc, align 4, !dbg !18702
  ret i32 %3, !dbg !18703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_get_eeprom_len(%struct.net_device* %dev) #2 !dbg !18704 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18705, metadata !DIExpression()), !dbg !18706
  ret i32 128, !dbg !18707
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_get_eeprom(%struct.net_device* %dev, %struct.ethtool_eeprom* %eeprom, i8* %data) #2 !dbg !18708 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %eeprom.addr = alloca %struct.ethtool_eeprom*, align 8
  %data.addr = alloca i8*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %eeprom_byte = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18709, metadata !DIExpression()), !dbg !18710
  store %struct.ethtool_eeprom* %eeprom, %struct.ethtool_eeprom** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eeprom** %eeprom.addr, metadata !18711, metadata !DIExpression()), !dbg !18712
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18713, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18715, metadata !DIExpression()), !dbg !18716
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18717
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18718
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18718
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18716
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18719, metadata !DIExpression()), !dbg !18720
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18721
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18722
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18722
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18720
  call void @llvm.dbg.declare(metadata i8** %eeprom_byte, metadata !18723, metadata !DIExpression()), !dbg !18724
  store i8* bitcast ([64 x i16]* @eeprom_data to i8*), i8** %eeprom_byte, align 8, !dbg !18724
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18725, metadata !DIExpression()), !dbg !18726
  call void @llvm.dbg.declare(metadata i32* %len, metadata !18727, metadata !DIExpression()), !dbg !18728
  %4 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18729
  %offset = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %4, i32 0, i32 2, !dbg !18730
  %5 = load i32, i32* %offset, align 4, !dbg !18730
  %6 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18731
  %len1 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %6, i32 0, i32 3, !dbg !18732
  %7 = load i32, i32* %len1, align 4, !dbg !18732
  %add = add i32 %5, %7, !dbg !18733
  %add2 = add i32 %add, 1, !dbg !18734
  %div = udiv i32 %add2, 2, !dbg !18735
  store i32 %div, i32* %len, align 4, !dbg !18736
  %8 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18737
  %offset3 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %8, i32 0, i32 2, !dbg !18739
  %9 = load i32, i32* %offset3, align 4, !dbg !18739
  %div4 = udiv i32 %9, 2, !dbg !18740
  store i32 %div4, i32* %i, align 4, !dbg !18741
  br label %for.cond, !dbg !18742

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !18743
  %11 = load i32, i32* %len, align 4, !dbg !18745
  %cmp = icmp slt i32 %10, %11, !dbg !18746
  br i1 %cmp, label %for.body, label %for.end, !dbg !18747

for.body:                                         ; preds = %for.cond
  %12 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18748
  %hw = getelementptr inbounds %struct.dev_info, %struct.dev_info* %12, i32 0, i32 2, !dbg !18749
  %13 = load i32, i32* %i, align 4, !dbg !18750
  %conv = trunc i32 %13 to i8, !dbg !18750
  %call5 = call zeroext i16 @eeprom_read(%struct.ksz_hw* %hw, i8 zeroext %conv) #12, !dbg !18751
  %14 = load i32, i32* %i, align 4, !dbg !18752
  %idxprom = sext i32 %14 to i64, !dbg !18753
  %arrayidx = getelementptr [64 x i16], [64 x i16]* @eeprom_data, i64 0, i64 %idxprom, !dbg !18753
  store i16 %call5, i16* %arrayidx, align 2, !dbg !18754
  br label %for.inc, !dbg !18753

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !18755
  %inc = add i32 %15, 1, !dbg !18755
  store i32 %inc, i32* %i, align 4, !dbg !18755
  br label %for.cond, !dbg !18756, !llvm.loop !18757

for.end:                                          ; preds = %for.cond
  %16 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18759
  %magic = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %16, i32 0, i32 1, !dbg !18760
  store i32 279021634, i32* %magic, align 4, !dbg !18761
  %17 = load i8*, i8** %data.addr, align 8, !dbg !18762
  %18 = load i8*, i8** %eeprom_byte, align 8, !dbg !18763
  %19 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18764
  %offset6 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %19, i32 0, i32 2, !dbg !18765
  %20 = load i32, i32* %offset6, align 4, !dbg !18765
  %idxprom7 = zext i32 %20 to i64, !dbg !18763
  %arrayidx8 = getelementptr i8, i8* %18, i64 %idxprom7, !dbg !18763
  %21 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18766
  %len9 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %21, i32 0, i32 3, !dbg !18767
  %22 = load i32, i32* %len9, align 4, !dbg !18767
  %conv10 = zext i32 %22 to i64, !dbg !18766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %arrayidx8, i64 %conv10, i1 false), !dbg !18768
  ret i32 0, !dbg !18769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_set_eeprom(%struct.net_device* %dev, %struct.ethtool_eeprom* %eeprom, i8* %data) #2 !dbg !18770 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %eeprom.addr = alloca %struct.ethtool_eeprom*, align 8
  %data.addr = alloca i8*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %eeprom_word = alloca [64 x i16], align 16
  %eeprom_byte = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18771, metadata !DIExpression()), !dbg !18772
  store %struct.ethtool_eeprom* %eeprom, %struct.ethtool_eeprom** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eeprom** %eeprom.addr, metadata !18773, metadata !DIExpression()), !dbg !18774
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18775, metadata !DIExpression()), !dbg !18776
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18777, metadata !DIExpression()), !dbg !18778
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18779
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18780
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18780
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18778
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18781, metadata !DIExpression()), !dbg !18782
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18783
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18784
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18784
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18782
  call void @llvm.dbg.declare(metadata [64 x i16]* %eeprom_word, metadata !18785, metadata !DIExpression()), !dbg !18786
  call void @llvm.dbg.declare(metadata i8** %eeprom_byte, metadata !18787, metadata !DIExpression()), !dbg !18788
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %eeprom_word, i64 0, i64 0, !dbg !18789
  %4 = bitcast i16* %arraydecay to i8*, !dbg !18790
  store i8* %4, i8** %eeprom_byte, align 8, !dbg !18788
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18791, metadata !DIExpression()), !dbg !18792
  call void @llvm.dbg.declare(metadata i32* %len, metadata !18793, metadata !DIExpression()), !dbg !18794
  %5 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18795
  %magic = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %5, i32 0, i32 1, !dbg !18797
  %6 = load i32, i32* %magic, align 4, !dbg !18797
  %cmp = icmp ne i32 %6, 279021634, !dbg !18798
  br i1 %cmp, label %if.then, label %if.end, !dbg !18799

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !18800
  br label %return, !dbg !18800

if.end:                                           ; preds = %entry
  %7 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18801
  %offset = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %7, i32 0, i32 2, !dbg !18802
  %8 = load i32, i32* %offset, align 4, !dbg !18802
  %9 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18803
  %len1 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %9, i32 0, i32 3, !dbg !18804
  %10 = load i32, i32* %len1, align 4, !dbg !18804
  %add = add i32 %8, %10, !dbg !18805
  %add2 = add i32 %add, 1, !dbg !18806
  %div = udiv i32 %add2, 2, !dbg !18807
  store i32 %div, i32* %len, align 4, !dbg !18808
  %11 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18809
  %offset3 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %11, i32 0, i32 2, !dbg !18811
  %12 = load i32, i32* %offset3, align 4, !dbg !18811
  %div4 = udiv i32 %12, 2, !dbg !18812
  store i32 %div4, i32* %i, align 4, !dbg !18813
  br label %for.cond, !dbg !18814

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !18815
  %14 = load i32, i32* %len, align 4, !dbg !18817
  %cmp5 = icmp slt i32 %13, %14, !dbg !18818
  br i1 %cmp5, label %for.body, label %for.end, !dbg !18819

for.body:                                         ; preds = %for.cond
  %15 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18820
  %hw = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 2, !dbg !18821
  %16 = load i32, i32* %i, align 4, !dbg !18822
  %conv = trunc i32 %16 to i8, !dbg !18822
  %call6 = call zeroext i16 @eeprom_read(%struct.ksz_hw* %hw, i8 zeroext %conv) #12, !dbg !18823
  %17 = load i32, i32* %i, align 4, !dbg !18824
  %idxprom = sext i32 %17 to i64, !dbg !18825
  %arrayidx = getelementptr [64 x i16], [64 x i16]* @eeprom_data, i64 0, i64 %idxprom, !dbg !18825
  store i16 %call6, i16* %arrayidx, align 2, !dbg !18826
  br label %for.inc, !dbg !18825

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !18827
  %inc = add i32 %18, 1, !dbg !18827
  store i32 %inc, i32* %i, align 4, !dbg !18827
  br label %for.cond, !dbg !18828, !llvm.loop !18829

for.end:                                          ; preds = %for.cond
  %arraydecay7 = getelementptr inbounds [64 x i16], [64 x i16]* %eeprom_word, i64 0, i64 0, !dbg !18831
  %19 = bitcast i16* %arraydecay7 to i8*, !dbg !18831
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %19, i8* align 16 bitcast ([64 x i16]* @eeprom_data to i8*), i64 128, i1 false), !dbg !18831
  %20 = load i8*, i8** %eeprom_byte, align 8, !dbg !18832
  %21 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18833
  %offset8 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %21, i32 0, i32 2, !dbg !18834
  %22 = load i32, i32* %offset8, align 4, !dbg !18834
  %idxprom9 = zext i32 %22 to i64, !dbg !18832
  %arrayidx10 = getelementptr i8, i8* %20, i64 %idxprom9, !dbg !18832
  %23 = load i8*, i8** %data.addr, align 8, !dbg !18835
  %24 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !18836
  %len11 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %24, i32 0, i32 3, !dbg !18837
  %25 = load i32, i32* %len11, align 4, !dbg !18837
  %conv12 = zext i32 %25 to i64, !dbg !18836
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx10, i8* align 1 %23, i64 %conv12, i1 false), !dbg !18838
  store i32 0, i32* %i, align 4, !dbg !18839
  br label %for.cond13, !dbg !18841

for.cond13:                                       ; preds = %for.inc35, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !18842
  %cmp14 = icmp slt i32 %26, 64, !dbg !18844
  br i1 %cmp14, label %for.body16, label %for.end37, !dbg !18845

for.body16:                                       ; preds = %for.cond13
  %27 = load i32, i32* %i, align 4, !dbg !18846
  %idxprom17 = sext i32 %27 to i64, !dbg !18848
  %arrayidx18 = getelementptr [64 x i16], [64 x i16]* %eeprom_word, i64 0, i64 %idxprom17, !dbg !18848
  %28 = load i16, i16* %arrayidx18, align 2, !dbg !18848
  %conv19 = zext i16 %28 to i32, !dbg !18848
  %29 = load i32, i32* %i, align 4, !dbg !18849
  %idxprom20 = sext i32 %29 to i64, !dbg !18850
  %arrayidx21 = getelementptr [64 x i16], [64 x i16]* @eeprom_data, i64 0, i64 %idxprom20, !dbg !18850
  %30 = load i16, i16* %arrayidx21, align 2, !dbg !18850
  %conv22 = zext i16 %30 to i32, !dbg !18850
  %cmp23 = icmp ne i32 %conv19, %conv22, !dbg !18851
  br i1 %cmp23, label %if.then25, label %if.end34, !dbg !18852

if.then25:                                        ; preds = %for.body16
  %31 = load i32, i32* %i, align 4, !dbg !18853
  %idxprom26 = sext i32 %31 to i64, !dbg !18855
  %arrayidx27 = getelementptr [64 x i16], [64 x i16]* %eeprom_word, i64 0, i64 %idxprom26, !dbg !18855
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !18855
  %33 = load i32, i32* %i, align 4, !dbg !18856
  %idxprom28 = sext i32 %33 to i64, !dbg !18857
  %arrayidx29 = getelementptr [64 x i16], [64 x i16]* @eeprom_data, i64 0, i64 %idxprom28, !dbg !18857
  store i16 %32, i16* %arrayidx29, align 2, !dbg !18858
  %34 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18859
  %hw30 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %34, i32 0, i32 2, !dbg !18860
  %35 = load i32, i32* %i, align 4, !dbg !18861
  %conv31 = trunc i32 %35 to i8, !dbg !18861
  %36 = load i32, i32* %i, align 4, !dbg !18862
  %idxprom32 = sext i32 %36 to i64, !dbg !18863
  %arrayidx33 = getelementptr [64 x i16], [64 x i16]* @eeprom_data, i64 0, i64 %idxprom32, !dbg !18863
  %37 = load i16, i16* %arrayidx33, align 2, !dbg !18863
  call void @eeprom_write(%struct.ksz_hw* %hw30, i8 zeroext %conv31, i16 zeroext %37) #12, !dbg !18864
  br label %if.end34, !dbg !18865

if.end34:                                         ; preds = %if.then25, %for.body16
  br label %for.inc35, !dbg !18866

for.inc35:                                        ; preds = %if.end34
  %38 = load i32, i32* %i, align 4, !dbg !18867
  %inc36 = add i32 %38, 1, !dbg !18867
  store i32 %inc36, i32* %i, align 4, !dbg !18867
  br label %for.cond13, !dbg !18868, !llvm.loop !18869

for.end37:                                        ; preds = %for.cond13
  store i32 0, i32* %retval, align 4, !dbg !18871
  br label %return, !dbg !18871

return:                                           ; preds = %for.end37, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !18872
  ret i32 %39, !dbg !18872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_get_ringparam(%struct.net_device* %dev, %struct.ethtool_ringparam* %ring) #2 !dbg !18873 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18874, metadata !DIExpression()), !dbg !18875
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !18876, metadata !DIExpression()), !dbg !18877
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18878, metadata !DIExpression()), !dbg !18879
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18880
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18881
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18881
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18879
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18882, metadata !DIExpression()), !dbg !18883
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18884
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18885
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18885
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18883
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !18886, metadata !DIExpression()), !dbg !18887
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18888
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !18889
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !18887
  %5 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !18890
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %5, i32 0, i32 4, !dbg !18891
  store i32 512, i32* %tx_max_pending, align 4, !dbg !18892
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18893
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 15, !dbg !18894
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info, i32 0, i32 5, !dbg !18895
  %7 = load i32, i32* %alloc, align 8, !dbg !18895
  %8 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !18896
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %8, i32 0, i32 8, !dbg !18897
  store i32 %7, i32* %tx_pending, align 4, !dbg !18898
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !18899
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 1, !dbg !18900
  store i32 512, i32* %rx_max_pending, align 4, !dbg !18901
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18902
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 14, !dbg !18903
  %alloc2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info, i32 0, i32 5, !dbg !18904
  %11 = load i32, i32* %alloc2, align 8, !dbg !18904
  %12 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !18905
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %12, i32 0, i32 5, !dbg !18906
  store i32 %11, i32* %rx_pending, align 4, !dbg !18907
  ret void, !dbg !18908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_get_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %pause) #2 !dbg !18909 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %pause.addr = alloca %struct.ethtool_pauseparam*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18910, metadata !DIExpression()), !dbg !18911
  store %struct.ethtool_pauseparam* %pause, %struct.ethtool_pauseparam** %pause.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %pause.addr, metadata !18912, metadata !DIExpression()), !dbg !18913
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18914, metadata !DIExpression()), !dbg !18915
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18916
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18917
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18917
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18915
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18918, metadata !DIExpression()), !dbg !18919
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18920
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18921
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18921
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18919
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !18922, metadata !DIExpression()), !dbg !18923
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18924
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !18925
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !18923
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18926
  %overrides = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 33, !dbg !18927
  %6 = load i32, i32* %overrides, align 4, !dbg !18927
  %and = and i32 %6, 1, !dbg !18928
  %tobool = icmp ne i32 %and, 0, !dbg !18929
  %7 = zext i1 %tobool to i64, !dbg !18929
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !18929
  %8 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !18930
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %8, i32 0, i32 1, !dbg !18931
  store i32 %cond, i32* %autoneg, align 4, !dbg !18932
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18933
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 1, !dbg !18935
  %10 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !18935
  %tobool2 = icmp ne %struct.ksz_switch* %10, null, !dbg !18933
  br i1 %tobool2, label %if.else, label %if.then, !dbg !18936

if.then:                                          ; preds = %entry
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18937
  %rx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %11, i32 0, i32 10, !dbg !18939
  %12 = load i32, i32* %rx_cfg, align 8, !dbg !18939
  %and3 = and i32 %12, 512, !dbg !18940
  %tobool4 = icmp ne i32 %and3, 0, !dbg !18941
  %13 = zext i1 %tobool4 to i64, !dbg !18941
  %cond5 = select i1 %tobool4, i32 1, i32 0, !dbg !18941
  %14 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !18942
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %14, i32 0, i32 2, !dbg !18943
  store i32 %cond5, i32* %rx_pause, align 4, !dbg !18944
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18945
  %tx_cfg = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %15, i32 0, i32 9, !dbg !18946
  %16 = load i32, i32* %tx_cfg, align 4, !dbg !18946
  %and6 = and i32 %16, 512, !dbg !18947
  %tobool7 = icmp ne i32 %and6, 0, !dbg !18948
  %17 = zext i1 %tobool7 to i64, !dbg !18948
  %cond8 = select i1 %tobool7, i32 1, i32 0, !dbg !18948
  %18 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !18949
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %18, i32 0, i32 3, !dbg !18950
  store i32 %cond8, i32* %tx_pause, align 4, !dbg !18951
  br label %if.end, !dbg !18952

if.else:                                          ; preds = %entry
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18953
  %call9 = call i32 @sw_chk(%struct.ksz_hw* %19, i32 1026, i16 zeroext 4096) #12, !dbg !18955
  %tobool10 = icmp ne i32 %call9, 0, !dbg !18956
  %20 = zext i1 %tobool10 to i64, !dbg !18956
  %cond11 = select i1 %tobool10, i32 1, i32 0, !dbg !18956
  %21 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !18957
  %rx_pause12 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %21, i32 0, i32 2, !dbg !18958
  store i32 %cond11, i32* %rx_pause12, align 4, !dbg !18959
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !18960
  %call13 = call i32 @sw_chk(%struct.ksz_hw* %22, i32 1026, i16 zeroext 8192) #12, !dbg !18961
  %tobool14 = icmp ne i32 %call13, 0, !dbg !18962
  %23 = zext i1 %tobool14 to i64, !dbg !18962
  %cond15 = select i1 %tobool14, i32 1, i32 0, !dbg !18962
  %24 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !18963
  %tx_pause16 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %24, i32 0, i32 3, !dbg !18964
  store i32 %cond15, i32* %tx_pause16, align 4, !dbg !18965
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !18966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_set_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %pause) #2 !dbg !18967 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %pause.addr = alloca %struct.ethtool_pauseparam*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca %struct.ksz_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18968, metadata !DIExpression()), !dbg !18969
  store %struct.ethtool_pauseparam* %pause, %struct.ethtool_pauseparam** %pause.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %pause.addr, metadata !18970, metadata !DIExpression()), !dbg !18971
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !18972, metadata !DIExpression()), !dbg !18973
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18974
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18975
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !18975
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !18973
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !18976, metadata !DIExpression()), !dbg !18977
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18978
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !18979
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !18979
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !18977
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !18980, metadata !DIExpression()), !dbg !18981
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18982
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !18983
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !18981
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !18984, metadata !DIExpression()), !dbg !18985
  %5 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !18986
  %port2 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %5, i32 0, i32 1, !dbg !18987
  store %struct.ksz_port* %port2, %struct.ksz_port** %port, align 8, !dbg !18985
  %6 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !18988
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %6, i32 0, i32 5, !dbg !18989
  call void @mutex_lock(%struct.mutex* %lock) #12, !dbg !18990
  %7 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !18991
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %7, i32 0, i32 1, !dbg !18993
  %8 = load i32, i32* %autoneg, align 4, !dbg !18993
  %tobool = icmp ne i32 %8, 0, !dbg !18991
  br i1 %tobool, label %if.then, label %if.else10, !dbg !18994

if.then:                                          ; preds = %entry
  %9 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !18995
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %9, i32 0, i32 2, !dbg !18998
  %10 = load i32, i32* %rx_pause, align 4, !dbg !18998
  %tobool3 = icmp ne i32 %10, 0, !dbg !18995
  br i1 %tobool3, label %if.else, label %land.lhs.true, !dbg !18999

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !19000
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %11, i32 0, i32 3, !dbg !19001
  %12 = load i32, i32* %tx_pause, align 4, !dbg !19001
  %tobool4 = icmp ne i32 %12, 0, !dbg !19000
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !19002

if.then5:                                         ; preds = %land.lhs.true
  %13 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19003
  %flow_ctrl = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %13, i32 0, i32 3, !dbg !19004
  store i8 0, i8* %flow_ctrl, align 1, !dbg !19005
  br label %if.end, !dbg !19003

if.else:                                          ; preds = %land.lhs.true, %if.then
  %14 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19006
  %flow_ctrl6 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %14, i32 0, i32 3, !dbg !19007
  store i8 1, i8* %flow_ctrl6, align 1, !dbg !19008
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19009
  %overrides = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %15, i32 0, i32 33, !dbg !19010
  %16 = load i32, i32* %overrides, align 4, !dbg !19011
  %and = and i32 %16, -2, !dbg !19011
  store i32 %and, i32* %overrides, align 4, !dbg !19011
  %17 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19012
  %force_link = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %17, i32 0, i32 2, !dbg !19013
  store i8 0, i8* %force_link, align 2, !dbg !19014
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19015
  %ksz_switch = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %18, i32 0, i32 1, !dbg !19017
  %19 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch, align 8, !dbg !19017
  %tobool7 = icmp ne %struct.ksz_switch* %19, null, !dbg !19015
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !19018

if.then8:                                         ; preds = %if.end
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19019
  call void @sw_cfg(%struct.ksz_hw* %20, i32 1026, i16 zeroext 4096, i32 1) #12, !dbg !19021
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19022
  call void @sw_cfg(%struct.ksz_hw* %21, i32 1026, i16 zeroext 8192, i32 1) #12, !dbg !19023
  br label %if.end9, !dbg !19024

if.end9:                                          ; preds = %if.then8, %if.end
  %22 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19025
  call void @port_set_link_speed(%struct.ksz_port* %22) #12, !dbg !19026
  br label %if.end21, !dbg !19027

if.else10:                                        ; preds = %entry
  %23 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19028
  %overrides11 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %23, i32 0, i32 33, !dbg !19030
  %24 = load i32, i32* %overrides11, align 4, !dbg !19031
  %or = or i32 %24, 1, !dbg !19031
  store i32 %or, i32* %overrides11, align 4, !dbg !19031
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19032
  %ksz_switch12 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %25, i32 0, i32 1, !dbg !19034
  %26 = load %struct.ksz_switch*, %struct.ksz_switch** %ksz_switch12, align 8, !dbg !19034
  %tobool13 = icmp ne %struct.ksz_switch* %26, null, !dbg !19032
  br i1 %tobool13, label %if.then14, label %if.else17, !dbg !19035

if.then14:                                        ; preds = %if.else10
  %27 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19036
  %28 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !19038
  %rx_pause15 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %28, i32 0, i32 2, !dbg !19039
  %29 = load i32, i32* %rx_pause15, align 4, !dbg !19039
  call void @sw_cfg(%struct.ksz_hw* %27, i32 1026, i16 zeroext 4096, i32 %29) #12, !dbg !19040
  %30 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19041
  %31 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !19042
  %tx_pause16 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %31, i32 0, i32 3, !dbg !19043
  %32 = load i32, i32* %tx_pause16, align 4, !dbg !19043
  call void @sw_cfg(%struct.ksz_hw* %30, i32 1026, i16 zeroext 8192, i32 %32) #12, !dbg !19044
  br label %if.end20, !dbg !19045

if.else17:                                        ; preds = %if.else10
  %33 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19046
  %34 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !19047
  %rx_pause18 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %34, i32 0, i32 2, !dbg !19048
  %35 = load i32, i32* %rx_pause18, align 4, !dbg !19048
  %36 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pause.addr, align 8, !dbg !19049
  %tx_pause19 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %36, i32 0, i32 3, !dbg !19050
  %37 = load i32, i32* %tx_pause19, align 4, !dbg !19050
  call void @set_flow_ctrl(%struct.ksz_hw* %33, i32 %35, i32 %37) #12, !dbg !19051
  br label %if.end20

if.end20:                                         ; preds = %if.else17, %if.then14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end9
  %38 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19052
  %lock22 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %38, i32 0, i32 5, !dbg !19053
  call void @mutex_unlock(%struct.mutex* %lock22) #12, !dbg !19054
  ret i32 0, !dbg !19055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_get_strings(%struct.net_device* %dev, i32 %stringset, i8* %buf) #2 !dbg !19056 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19057, metadata !DIExpression()), !dbg !19058
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !19059, metadata !DIExpression()), !dbg !19060
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19061, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !19063, metadata !DIExpression()), !dbg !19064
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19065
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19066
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !19066
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !19064
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !19067, metadata !DIExpression()), !dbg !19068
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19069
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !19070
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !19070
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !19068
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !19071, metadata !DIExpression()), !dbg !19072
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19073
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !19074
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !19072
  %5 = load i32, i32* %stringset.addr, align 4, !dbg !19075
  %cmp = icmp eq i32 1, %5, !dbg !19077
  br i1 %cmp, label %if.then, label %if.end, !dbg !19078

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !19079
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19080
  %mib_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %7, i32 0, i32 7, !dbg !19081
  %8 = load i32, i32* %mib_cnt, align 4, !dbg !19081
  %mul = mul i32 32, %8, !dbg !19082
  %conv = sext i32 %mul to i64, !dbg !19083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 16 getelementptr inbounds ([34 x %struct.anon.131], [34 x %struct.anon.131]* @ethtool_stats_keys, i32 0, i32 0, i32 0, i32 0), i64 %conv, i1 false), !dbg !19084
  br label %if.end, !dbg !19084

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %stats, i64* %data) #2 !dbg !19086 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %n_stats = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %p = alloca i32, align 4
  %counter = alloca [34 x i64], align 16
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret44 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond51 = alloca i8, align 1
  %tmp65 = alloca i32, align 4
  %tmp85 = alloca i64, align 8
  %tmp87 = alloca i64, align 8
  %__ret96 = alloca i64, align 8
  %__cond101 = alloca i8, align 1
  %tmp115 = alloca i32, align 4
  %__wq_entry125 = alloca %struct.wait_queue_entry, align 8
  %__ret126 = alloca i64, align 8
  %__int128 = alloca i64, align 8
  %__cond134 = alloca i8, align 1
  %tmp148 = alloca i32, align 4
  %tmp169 = alloca i64, align 8
  %tmp171 = alloca i64, align 8
  %__ret178 = alloca i64, align 8
  %__cond183 = alloca i8, align 1
  %tmp197 = alloca i32, align 4
  %__wq_entry207 = alloca %struct.wait_queue_entry, align 8
  %__ret208 = alloca i64, align 8
  %__int210 = alloca i64, align 8
  %__cond216 = alloca i8, align 1
  %tmp230 = alloca i32, align 4
  %tmp251 = alloca i64, align 8
  %tmp253 = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19087, metadata !DIExpression()), !dbg !19088
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !19089, metadata !DIExpression()), !dbg !19090
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !19091, metadata !DIExpression()), !dbg !19092
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !19093, metadata !DIExpression()), !dbg !19094
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19095
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19096
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !19096
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !19094
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !19097, metadata !DIExpression()), !dbg !19098
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19099
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !19100
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !19100
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !19098
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !19101, metadata !DIExpression()), !dbg !19102
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19103
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !19104
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !19102
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !19105, metadata !DIExpression()), !dbg !19106
  %5 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19107
  %port2 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %5, i32 0, i32 1, !dbg !19108
  store %struct.ksz_port* %port2, %struct.ksz_port** %port, align 8, !dbg !19106
  call void @llvm.dbg.declare(metadata i32* %n_stats, metadata !19109, metadata !DIExpression()), !dbg !19110
  %6 = load %struct.ethtool_stats*, %struct.ethtool_stats** %stats.addr, align 8, !dbg !19111
  %n_stats3 = getelementptr inbounds %struct.ethtool_stats, %struct.ethtool_stats* %6, i32 0, i32 1, !dbg !19112
  %7 = load i32, i32* %n_stats3, align 4, !dbg !19112
  store i32 %7, i32* %n_stats, align 4, !dbg !19110
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19113, metadata !DIExpression()), !dbg !19114
  call void @llvm.dbg.declare(metadata i32* %n, metadata !19115, metadata !DIExpression()), !dbg !19116
  call void @llvm.dbg.declare(metadata i32* %p, metadata !19117, metadata !DIExpression()), !dbg !19118
  call void @llvm.dbg.declare(metadata [34 x i64]* %counter, metadata !19119, metadata !DIExpression()), !dbg !19120
  %8 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19121
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %8, i32 0, i32 5, !dbg !19122
  call void @mutex_lock(%struct.mutex* %lock) #12, !dbg !19123
  store i32 2, i32* %n, align 4, !dbg !19124
  store i32 0, i32* %i, align 4, !dbg !19125
  %9 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19127
  %first_port = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %9, i32 0, i32 4, !dbg !19128
  %10 = load i32, i32* %first_port, align 4, !dbg !19128
  store i32 %10, i32* %p, align 4, !dbg !19129
  br label %for.cond, !dbg !19130

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !19131
  %12 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19133
  %mib_port_cnt = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %12, i32 0, i32 5, !dbg !19134
  %13 = load i32, i32* %mib_port_cnt, align 8, !dbg !19134
  %cmp = icmp slt i32 %11, %13, !dbg !19135
  br i1 %cmp, label %for.body, label %for.end, !dbg !19136

for.body:                                         ; preds = %for.cond
  %14 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19137
  %port_mib = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %14, i32 0, i32 3, !dbg !19140
  %15 = load i32, i32* %p, align 4, !dbg !19141
  %idxprom = sext i32 %15 to i64, !dbg !19137
  %arrayidx = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib, i64 0, i64 %idxprom, !dbg !19137
  %state = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %arrayidx, i32 0, i32 2, !dbg !19142
  %16 = load i8, i8* %state, align 2, !dbg !19142
  %conv = zext i8 %16 to i32, !dbg !19137
  %cmp4 = icmp eq i32 0, %conv, !dbg !19143
  br i1 %cmp4, label %if.then, label %if.end12, !dbg !19144

if.then:                                          ; preds = %for.body
  %17 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19145
  %counter6 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %17, i32 0, i32 12, !dbg !19147
  %18 = load i32, i32* %p, align 4, !dbg !19148
  %idxprom7 = sext i32 %18 to i64, !dbg !19145
  %arrayidx8 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter6, i64 0, i64 %idxprom7, !dbg !19145
  %read = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx8, i32 0, i32 2, !dbg !19149
  store i32 1, i32* %read, align 8, !dbg !19150
  %19 = load i32, i32* %n, align 4, !dbg !19151
  %cmp9 = icmp eq i32 %19, 2, !dbg !19153
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !19154

if.then11:                                        ; preds = %if.then
  %20 = load i32, i32* %p, align 4, !dbg !19155
  store i32 %20, i32* %n, align 4, !dbg !19156
  br label %if.end, !dbg !19157

if.end:                                           ; preds = %if.then11, %if.then
  br label %if.end12, !dbg !19158

if.end12:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !19159

for.inc:                                          ; preds = %if.end12
  %21 = load i32, i32* %i, align 4, !dbg !19160
  %inc = add i32 %21, 1, !dbg !19160
  store i32 %inc, i32* %i, align 4, !dbg !19160
  %22 = load i32, i32* %p, align 4, !dbg !19161
  %inc13 = add i32 %22, 1, !dbg !19161
  store i32 %inc13, i32* %p, align 4, !dbg !19161
  br label %for.cond, !dbg !19162, !llvm.loop !19163

for.end:                                          ; preds = %for.cond
  %23 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19165
  %lock14 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %23, i32 0, i32 5, !dbg !19166
  call void @mutex_unlock(%struct.mutex* %lock14) #12, !dbg !19167
  %24 = load i32, i32* %n, align 4, !dbg !19168
  %cmp15 = icmp slt i32 %24, 2, !dbg !19170
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !19171

if.then17:                                        ; preds = %for.end
  %25 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19172
  %mib_read = getelementptr inbounds %struct.dev_info, %struct.dev_info* %25, i32 0, i32 10, !dbg !19173
  %call18 = call zeroext i1 @schedule_work(%struct.work_struct* %mib_read) #12, !dbg !19174
  br label %if.end19, !dbg !19174

if.end19:                                         ; preds = %if.then17, %for.end
  %26 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19175
  %mib_port_cnt20 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %26, i32 0, i32 5, !dbg !19177
  %27 = load i32, i32* %mib_port_cnt20, align 8, !dbg !19177
  %cmp21 = icmp eq i32 1, %27, !dbg !19178
  br i1 %cmp21, label %land.lhs.true, label %if.else, !dbg !19179

land.lhs.true:                                    ; preds = %if.end19
  %28 = load i32, i32* %n, align 4, !dbg !19180
  %cmp23 = icmp slt i32 %28, 2, !dbg !19181
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !19182

if.then25:                                        ; preds = %land.lhs.true
  %29 = load i32, i32* %n, align 4, !dbg !19183
  store i32 %29, i32* %p, align 4, !dbg !19185
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !19186, metadata !DIExpression()), !dbg !19188
  store i64 250, i64* %__ret, align 8, !dbg !19188
  br label %do.body, !dbg !19188

do.body:                                          ; preds = %if.then25
  br label %do.body26, !dbg !19189

do.body26:                                        ; preds = %do.body
  br label %do.end, !dbg !19191

do.end:                                           ; preds = %do.body26
  br label %do.end27, !dbg !19189

do.end27:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !19193, metadata !DIExpression()), !dbg !19196
  %30 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19196
  %counter28 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %30, i32 0, i32 12, !dbg !19196
  %31 = load i32, i32* %p, align 4, !dbg !19196
  %idxprom29 = sext i32 %31 to i64, !dbg !19196
  %arrayidx30 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter28, i64 0, i64 %idxprom29, !dbg !19196
  %read31 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx30, i32 0, i32 2, !dbg !19196
  %32 = load i32, i32* %read31, align 8, !dbg !19196
  %cmp32 = icmp eq i32 2, %32, !dbg !19196
  %frombool = zext i1 %cmp32 to i8, !dbg !19196
  store i8 %frombool, i8* %__cond, align 1, !dbg !19196
  %33 = load i8, i8* %__cond, align 1, !dbg !19197
  %tobool = trunc i8 %33 to i1, !dbg !19197
  br i1 %tobool, label %land.lhs.true35, label %if.end38, !dbg !19197

land.lhs.true35:                                  ; preds = %do.end27
  %34 = load i64, i64* %__ret, align 8, !dbg !19197
  %tobool36 = icmp ne i64 %34, 0, !dbg !19197
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !19196

if.then37:                                        ; preds = %land.lhs.true35
  store i64 1, i64* %__ret, align 8, !dbg !19197
  br label %if.end38, !dbg !19197

if.end38:                                         ; preds = %if.then37, %land.lhs.true35, %do.end27
  %35 = load i8, i8* %__cond, align 1, !dbg !19196
  %tobool39 = trunc i8 %35 to i1, !dbg !19196
  br i1 %tobool39, label %lor.end, label %lor.rhs, !dbg !19196

lor.rhs:                                          ; preds = %if.end38
  %36 = load i64, i64* %__ret, align 8, !dbg !19196
  %tobool41 = icmp ne i64 %36, 0, !dbg !19196
  %lnot = xor i1 %tobool41, true, !dbg !19196
  br label %lor.end, !dbg !19196

lor.end:                                          ; preds = %lor.rhs, %if.end38
  %37 = phi i1 [ true, %if.end38 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %37 to i32, !dbg !19196
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !19197
  %38 = load i32, i32* %tmp, align 4, !dbg !19196
  %tobool42 = icmp ne i32 %38, 0, !dbg !19199
  br i1 %tobool42, label %if.end86, label %if.then43, !dbg !19188

if.then43:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !19200, metadata !DIExpression()), !dbg !19213
  call void @llvm.dbg.declare(metadata i64* %__ret44, metadata !19214, metadata !DIExpression()), !dbg !19213
  store i64 250, i64* %__ret44, align 8, !dbg !19213
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #12, !dbg !19213
  br label %for.cond45, !dbg !19213

for.cond45:                                       ; preds = %if.end78, %if.then43
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !19215, metadata !DIExpression()), !dbg !19219
  %39 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19219
  %counter46 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %39, i32 0, i32 12, !dbg !19219
  %40 = load i32, i32* %p, align 4, !dbg !19219
  %idxprom47 = sext i32 %40 to i64, !dbg !19219
  %arrayidx48 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter46, i64 0, i64 %idxprom47, !dbg !19219
  %counter49 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx48, i32 0, i32 0, !dbg !19219
  %call50 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %counter49, %struct.wait_queue_entry* %__wq_entry, i32 1) #12, !dbg !19219
  store i64 %call50, i64* %__int, align 8, !dbg !19219
  call void @llvm.dbg.declare(metadata i8* %__cond51, metadata !19220, metadata !DIExpression()), !dbg !19223
  %41 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19223
  %counter52 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %41, i32 0, i32 12, !dbg !19223
  %42 = load i32, i32* %p, align 4, !dbg !19223
  %idxprom53 = sext i32 %42 to i64, !dbg !19223
  %arrayidx54 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter52, i64 0, i64 %idxprom53, !dbg !19223
  %read55 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx54, i32 0, i32 2, !dbg !19223
  %43 = load i32, i32* %read55, align 8, !dbg !19223
  %cmp56 = icmp eq i32 2, %43, !dbg !19223
  %frombool58 = zext i1 %cmp56 to i8, !dbg !19223
  store i8 %frombool58, i8* %__cond51, align 1, !dbg !19223
  %44 = load i8, i8* %__cond51, align 1, !dbg !19224
  %tobool59 = trunc i8 %44 to i1, !dbg !19224
  br i1 %tobool59, label %land.lhs.true61, label %if.end64, !dbg !19224

land.lhs.true61:                                  ; preds = %for.cond45
  %45 = load i64, i64* %__ret44, align 8, !dbg !19224
  %tobool62 = icmp ne i64 %45, 0, !dbg !19224
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !19223

if.then63:                                        ; preds = %land.lhs.true61
  store i64 1, i64* %__ret44, align 8, !dbg !19224
  br label %if.end64, !dbg !19224

if.end64:                                         ; preds = %if.then63, %land.lhs.true61, %for.cond45
  %46 = load i8, i8* %__cond51, align 1, !dbg !19223
  %tobool66 = trunc i8 %46 to i1, !dbg !19223
  br i1 %tobool66, label %lor.end71, label %lor.rhs68, !dbg !19223

lor.rhs68:                                        ; preds = %if.end64
  %47 = load i64, i64* %__ret44, align 8, !dbg !19223
  %tobool69 = icmp ne i64 %47, 0, !dbg !19223
  %lnot70 = xor i1 %tobool69, true, !dbg !19223
  br label %lor.end71, !dbg !19223

lor.end71:                                        ; preds = %lor.rhs68, %if.end64
  %48 = phi i1 [ true, %if.end64 ], [ %lnot70, %lor.rhs68 ]
  %lor.ext72 = zext i1 %48 to i32, !dbg !19223
  store i32 %lor.ext72, i32* %tmp65, align 4, !dbg !19224
  %49 = load i32, i32* %tmp65, align 4, !dbg !19223
  %tobool73 = icmp ne i32 %49, 0, !dbg !19226
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !19219

if.then74:                                        ; preds = %lor.end71
  br label %for.end80, !dbg !19226

if.end75:                                         ; preds = %lor.end71
  %50 = load i64, i64* %__int, align 8, !dbg !19227
  %tobool76 = icmp ne i64 %50, 0, !dbg !19227
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !19219

if.then77:                                        ; preds = %if.end75
  %51 = load i64, i64* %__int, align 8, !dbg !19229
  store i64 %51, i64* %__ret44, align 8, !dbg !19229
  br label %__out, !dbg !19229

if.end78:                                         ; preds = %if.end75
  %52 = load i64, i64* %__ret44, align 8, !dbg !19219
  %call79 = call i64 @schedule_timeout(i64 %52) #12, !dbg !19219
  store i64 %call79, i64* %__ret44, align 8, !dbg !19219
  br label %for.cond45, !dbg !19231, !llvm.loop !19232

for.end80:                                        ; preds = %if.then74
  %53 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19213
  %counter81 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %53, i32 0, i32 12, !dbg !19213
  %54 = load i32, i32* %p, align 4, !dbg !19213
  %idxprom82 = sext i32 %54 to i64, !dbg !19213
  %arrayidx83 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter81, i64 0, i64 %idxprom82, !dbg !19213
  %counter84 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx83, i32 0, i32 0, !dbg !19213
  call void @finish_wait(%struct.wait_queue_head* %counter84, %struct.wait_queue_entry* %__wq_entry) #12, !dbg !19213
  br label %__out, !dbg !19213

__out:                                            ; preds = %for.end80, %if.then77
  call void @llvm.dbg.label(metadata !19234), !dbg !19213
  %55 = load i64, i64* %__ret44, align 8, !dbg !19213
  store i64 %55, i64* %tmp85, align 8, !dbg !19213
  %56 = load i64, i64* %tmp85, align 8, !dbg !19213
  store i64 %56, i64* %__ret, align 8, !dbg !19199
  br label %if.end86, !dbg !19199

if.end86:                                         ; preds = %__out, %lor.end
  %57 = load i64, i64* %__ret, align 8, !dbg !19188
  store i64 %57, i64* %tmp87, align 8, !dbg !19199
  %58 = load i64, i64* %tmp87, align 8, !dbg !19188
  br label %if.end260, !dbg !19235

if.else:                                          ; preds = %land.lhs.true, %if.end19
  store i32 0, i32* %i, align 4, !dbg !19236
  %59 = load i32, i32* %n, align 4, !dbg !19238
  store i32 %59, i32* %p, align 4, !dbg !19239
  br label %for.cond88, !dbg !19240

for.cond88:                                       ; preds = %for.inc256, %if.else
  %60 = load i32, i32* %i, align 4, !dbg !19241
  %61 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19243
  %mib_port_cnt89 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %61, i32 0, i32 5, !dbg !19244
  %62 = load i32, i32* %mib_port_cnt89, align 8, !dbg !19244
  %63 = load i32, i32* %n, align 4, !dbg !19245
  %sub = sub i32 %62, %63, !dbg !19246
  %cmp90 = icmp slt i32 %60, %sub, !dbg !19247
  br i1 %cmp90, label %for.body92, label %for.end259, !dbg !19248

for.body92:                                       ; preds = %for.cond88
  %64 = load i32, i32* %i, align 4, !dbg !19249
  %cmp93 = icmp eq i32 0, %64, !dbg !19252
  br i1 %cmp93, label %if.then95, label %if.else172, !dbg !19253

if.then95:                                        ; preds = %for.body92
  call void @llvm.dbg.declare(metadata i64* %__ret96, metadata !19254, metadata !DIExpression()), !dbg !19257
  store i64 500, i64* %__ret96, align 8, !dbg !19257
  br label %do.body97, !dbg !19257

do.body97:                                        ; preds = %if.then95
  br label %do.body98, !dbg !19258

do.body98:                                        ; preds = %do.body97
  br label %do.end99, !dbg !19260

do.end99:                                         ; preds = %do.body98
  br label %do.end100, !dbg !19258

do.end100:                                        ; preds = %do.end99
  call void @llvm.dbg.declare(metadata i8* %__cond101, metadata !19262, metadata !DIExpression()), !dbg !19265
  %65 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19265
  %counter102 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %65, i32 0, i32 12, !dbg !19265
  %66 = load i32, i32* %p, align 4, !dbg !19265
  %idxprom103 = sext i32 %66 to i64, !dbg !19265
  %arrayidx104 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter102, i64 0, i64 %idxprom103, !dbg !19265
  %read105 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx104, i32 0, i32 2, !dbg !19265
  %67 = load i32, i32* %read105, align 8, !dbg !19265
  %cmp106 = icmp eq i32 2, %67, !dbg !19265
  %frombool108 = zext i1 %cmp106 to i8, !dbg !19265
  store i8 %frombool108, i8* %__cond101, align 1, !dbg !19265
  %68 = load i8, i8* %__cond101, align 1, !dbg !19266
  %tobool109 = trunc i8 %68 to i1, !dbg !19266
  br i1 %tobool109, label %land.lhs.true111, label %if.end114, !dbg !19266

land.lhs.true111:                                 ; preds = %do.end100
  %69 = load i64, i64* %__ret96, align 8, !dbg !19266
  %tobool112 = icmp ne i64 %69, 0, !dbg !19266
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !19265

if.then113:                                       ; preds = %land.lhs.true111
  store i64 1, i64* %__ret96, align 8, !dbg !19266
  br label %if.end114, !dbg !19266

if.end114:                                        ; preds = %if.then113, %land.lhs.true111, %do.end100
  %70 = load i8, i8* %__cond101, align 1, !dbg !19265
  %tobool116 = trunc i8 %70 to i1, !dbg !19265
  br i1 %tobool116, label %lor.end121, label %lor.rhs118, !dbg !19265

lor.rhs118:                                       ; preds = %if.end114
  %71 = load i64, i64* %__ret96, align 8, !dbg !19265
  %tobool119 = icmp ne i64 %71, 0, !dbg !19265
  %lnot120 = xor i1 %tobool119, true, !dbg !19265
  br label %lor.end121, !dbg !19265

lor.end121:                                       ; preds = %lor.rhs118, %if.end114
  %72 = phi i1 [ true, %if.end114 ], [ %lnot120, %lor.rhs118 ]
  %lor.ext122 = zext i1 %72 to i32, !dbg !19265
  store i32 %lor.ext122, i32* %tmp115, align 4, !dbg !19266
  %73 = load i32, i32* %tmp115, align 4, !dbg !19265
  %tobool123 = icmp ne i32 %73, 0, !dbg !19268
  br i1 %tobool123, label %if.end170, label %if.then124, !dbg !19257

if.then124:                                       ; preds = %lor.end121
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry125, metadata !19269, metadata !DIExpression()), !dbg !19271
  call void @llvm.dbg.declare(metadata i64* %__ret126, metadata !19272, metadata !DIExpression()), !dbg !19271
  store i64 500, i64* %__ret126, align 8, !dbg !19271
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry125, i32 0) #12, !dbg !19271
  br label %for.cond127, !dbg !19271

for.cond127:                                      ; preds = %if.end161, %if.then124
  call void @llvm.dbg.declare(metadata i64* %__int128, metadata !19273, metadata !DIExpression()), !dbg !19277
  %74 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19277
  %counter129 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %74, i32 0, i32 12, !dbg !19277
  %75 = load i32, i32* %p, align 4, !dbg !19277
  %idxprom130 = sext i32 %75 to i64, !dbg !19277
  %arrayidx131 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter129, i64 0, i64 %idxprom130, !dbg !19277
  %counter132 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx131, i32 0, i32 0, !dbg !19277
  %call133 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %counter132, %struct.wait_queue_entry* %__wq_entry125, i32 1) #12, !dbg !19277
  store i64 %call133, i64* %__int128, align 8, !dbg !19277
  call void @llvm.dbg.declare(metadata i8* %__cond134, metadata !19278, metadata !DIExpression()), !dbg !19281
  %76 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19281
  %counter135 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %76, i32 0, i32 12, !dbg !19281
  %77 = load i32, i32* %p, align 4, !dbg !19281
  %idxprom136 = sext i32 %77 to i64, !dbg !19281
  %arrayidx137 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter135, i64 0, i64 %idxprom136, !dbg !19281
  %read138 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx137, i32 0, i32 2, !dbg !19281
  %78 = load i32, i32* %read138, align 8, !dbg !19281
  %cmp139 = icmp eq i32 2, %78, !dbg !19281
  %frombool141 = zext i1 %cmp139 to i8, !dbg !19281
  store i8 %frombool141, i8* %__cond134, align 1, !dbg !19281
  %79 = load i8, i8* %__cond134, align 1, !dbg !19282
  %tobool142 = trunc i8 %79 to i1, !dbg !19282
  br i1 %tobool142, label %land.lhs.true144, label %if.end147, !dbg !19282

land.lhs.true144:                                 ; preds = %for.cond127
  %80 = load i64, i64* %__ret126, align 8, !dbg !19282
  %tobool145 = icmp ne i64 %80, 0, !dbg !19282
  br i1 %tobool145, label %if.end147, label %if.then146, !dbg !19281

if.then146:                                       ; preds = %land.lhs.true144
  store i64 1, i64* %__ret126, align 8, !dbg !19282
  br label %if.end147, !dbg !19282

if.end147:                                        ; preds = %if.then146, %land.lhs.true144, %for.cond127
  %81 = load i8, i8* %__cond134, align 1, !dbg !19281
  %tobool149 = trunc i8 %81 to i1, !dbg !19281
  br i1 %tobool149, label %lor.end154, label %lor.rhs151, !dbg !19281

lor.rhs151:                                       ; preds = %if.end147
  %82 = load i64, i64* %__ret126, align 8, !dbg !19281
  %tobool152 = icmp ne i64 %82, 0, !dbg !19281
  %lnot153 = xor i1 %tobool152, true, !dbg !19281
  br label %lor.end154, !dbg !19281

lor.end154:                                       ; preds = %lor.rhs151, %if.end147
  %83 = phi i1 [ true, %if.end147 ], [ %lnot153, %lor.rhs151 ]
  %lor.ext155 = zext i1 %83 to i32, !dbg !19281
  store i32 %lor.ext155, i32* %tmp148, align 4, !dbg !19282
  %84 = load i32, i32* %tmp148, align 4, !dbg !19281
  %tobool156 = icmp ne i32 %84, 0, !dbg !19284
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !19277

if.then157:                                       ; preds = %lor.end154
  br label %for.end163, !dbg !19284

if.end158:                                        ; preds = %lor.end154
  %85 = load i64, i64* %__int128, align 8, !dbg !19285
  %tobool159 = icmp ne i64 %85, 0, !dbg !19285
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !19277

if.then160:                                       ; preds = %if.end158
  %86 = load i64, i64* %__int128, align 8, !dbg !19287
  store i64 %86, i64* %__ret126, align 8, !dbg !19287
  br label %__out168, !dbg !19287

if.end161:                                        ; preds = %if.end158
  %87 = load i64, i64* %__ret126, align 8, !dbg !19277
  %call162 = call i64 @schedule_timeout(i64 %87) #12, !dbg !19277
  store i64 %call162, i64* %__ret126, align 8, !dbg !19277
  br label %for.cond127, !dbg !19289, !llvm.loop !19290

for.end163:                                       ; preds = %if.then157
  %88 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19271
  %counter164 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %88, i32 0, i32 12, !dbg !19271
  %89 = load i32, i32* %p, align 4, !dbg !19271
  %idxprom165 = sext i32 %89 to i64, !dbg !19271
  %arrayidx166 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter164, i64 0, i64 %idxprom165, !dbg !19271
  %counter167 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx166, i32 0, i32 0, !dbg !19271
  call void @finish_wait(%struct.wait_queue_head* %counter167, %struct.wait_queue_entry* %__wq_entry125) #12, !dbg !19271
  br label %__out168, !dbg !19271

__out168:                                         ; preds = %for.end163, %if.then160
  call void @llvm.dbg.label(metadata !19292), !dbg !19271
  %90 = load i64, i64* %__ret126, align 8, !dbg !19271
  store i64 %90, i64* %tmp169, align 8, !dbg !19271
  %91 = load i64, i64* %tmp169, align 8, !dbg !19271
  store i64 %91, i64* %__ret96, align 8, !dbg !19268
  br label %if.end170, !dbg !19268

if.end170:                                        ; preds = %__out168, %lor.end121
  %92 = load i64, i64* %__ret96, align 8, !dbg !19257
  store i64 %92, i64* %tmp171, align 8, !dbg !19268
  %93 = load i64, i64* %tmp171, align 8, !dbg !19257
  br label %if.end255, !dbg !19293

if.else172:                                       ; preds = %for.body92
  %94 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19294
  %port_mib173 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %94, i32 0, i32 3, !dbg !19296
  %95 = load i32, i32* %p, align 4, !dbg !19297
  %idxprom174 = sext i32 %95 to i64, !dbg !19294
  %arrayidx175 = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib173, i64 0, i64 %idxprom174, !dbg !19294
  %cnt_ptr = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %arrayidx175, i32 0, i32 0, !dbg !19298
  %96 = load i8, i8* %cnt_ptr, align 8, !dbg !19298
  %tobool176 = icmp ne i8 %96, 0, !dbg !19294
  br i1 %tobool176, label %if.then177, label %if.end254, !dbg !19299

if.then177:                                       ; preds = %if.else172
  call void @llvm.dbg.declare(metadata i64* %__ret178, metadata !19300, metadata !DIExpression()), !dbg !19303
  store i64 250, i64* %__ret178, align 8, !dbg !19303
  br label %do.body179, !dbg !19303

do.body179:                                       ; preds = %if.then177
  br label %do.body180, !dbg !19304

do.body180:                                       ; preds = %do.body179
  br label %do.end181, !dbg !19306

do.end181:                                        ; preds = %do.body180
  br label %do.end182, !dbg !19304

do.end182:                                        ; preds = %do.end181
  call void @llvm.dbg.declare(metadata i8* %__cond183, metadata !19308, metadata !DIExpression()), !dbg !19311
  %97 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19311
  %counter184 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %97, i32 0, i32 12, !dbg !19311
  %98 = load i32, i32* %p, align 4, !dbg !19311
  %idxprom185 = sext i32 %98 to i64, !dbg !19311
  %arrayidx186 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter184, i64 0, i64 %idxprom185, !dbg !19311
  %read187 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx186, i32 0, i32 2, !dbg !19311
  %99 = load i32, i32* %read187, align 8, !dbg !19311
  %cmp188 = icmp eq i32 2, %99, !dbg !19311
  %frombool190 = zext i1 %cmp188 to i8, !dbg !19311
  store i8 %frombool190, i8* %__cond183, align 1, !dbg !19311
  %100 = load i8, i8* %__cond183, align 1, !dbg !19312
  %tobool191 = trunc i8 %100 to i1, !dbg !19312
  br i1 %tobool191, label %land.lhs.true193, label %if.end196, !dbg !19312

land.lhs.true193:                                 ; preds = %do.end182
  %101 = load i64, i64* %__ret178, align 8, !dbg !19312
  %tobool194 = icmp ne i64 %101, 0, !dbg !19312
  br i1 %tobool194, label %if.end196, label %if.then195, !dbg !19311

if.then195:                                       ; preds = %land.lhs.true193
  store i64 1, i64* %__ret178, align 8, !dbg !19312
  br label %if.end196, !dbg !19312

if.end196:                                        ; preds = %if.then195, %land.lhs.true193, %do.end182
  %102 = load i8, i8* %__cond183, align 1, !dbg !19311
  %tobool198 = trunc i8 %102 to i1, !dbg !19311
  br i1 %tobool198, label %lor.end203, label %lor.rhs200, !dbg !19311

lor.rhs200:                                       ; preds = %if.end196
  %103 = load i64, i64* %__ret178, align 8, !dbg !19311
  %tobool201 = icmp ne i64 %103, 0, !dbg !19311
  %lnot202 = xor i1 %tobool201, true, !dbg !19311
  br label %lor.end203, !dbg !19311

lor.end203:                                       ; preds = %lor.rhs200, %if.end196
  %104 = phi i1 [ true, %if.end196 ], [ %lnot202, %lor.rhs200 ]
  %lor.ext204 = zext i1 %104 to i32, !dbg !19311
  store i32 %lor.ext204, i32* %tmp197, align 4, !dbg !19312
  %105 = load i32, i32* %tmp197, align 4, !dbg !19311
  %tobool205 = icmp ne i32 %105, 0, !dbg !19314
  br i1 %tobool205, label %if.end252, label %if.then206, !dbg !19303

if.then206:                                       ; preds = %lor.end203
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry207, metadata !19315, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.declare(metadata i64* %__ret208, metadata !19318, metadata !DIExpression()), !dbg !19317
  store i64 250, i64* %__ret208, align 8, !dbg !19317
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry207, i32 0) #12, !dbg !19317
  br label %for.cond209, !dbg !19317

for.cond209:                                      ; preds = %if.end243, %if.then206
  call void @llvm.dbg.declare(metadata i64* %__int210, metadata !19319, metadata !DIExpression()), !dbg !19323
  %106 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19323
  %counter211 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %106, i32 0, i32 12, !dbg !19323
  %107 = load i32, i32* %p, align 4, !dbg !19323
  %idxprom212 = sext i32 %107 to i64, !dbg !19323
  %arrayidx213 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter211, i64 0, i64 %idxprom212, !dbg !19323
  %counter214 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx213, i32 0, i32 0, !dbg !19323
  %call215 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %counter214, %struct.wait_queue_entry* %__wq_entry207, i32 1) #12, !dbg !19323
  store i64 %call215, i64* %__int210, align 8, !dbg !19323
  call void @llvm.dbg.declare(metadata i8* %__cond216, metadata !19324, metadata !DIExpression()), !dbg !19327
  %108 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19327
  %counter217 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %108, i32 0, i32 12, !dbg !19327
  %109 = load i32, i32* %p, align 4, !dbg !19327
  %idxprom218 = sext i32 %109 to i64, !dbg !19327
  %arrayidx219 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter217, i64 0, i64 %idxprom218, !dbg !19327
  %read220 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx219, i32 0, i32 2, !dbg !19327
  %110 = load i32, i32* %read220, align 8, !dbg !19327
  %cmp221 = icmp eq i32 2, %110, !dbg !19327
  %frombool223 = zext i1 %cmp221 to i8, !dbg !19327
  store i8 %frombool223, i8* %__cond216, align 1, !dbg !19327
  %111 = load i8, i8* %__cond216, align 1, !dbg !19328
  %tobool224 = trunc i8 %111 to i1, !dbg !19328
  br i1 %tobool224, label %land.lhs.true226, label %if.end229, !dbg !19328

land.lhs.true226:                                 ; preds = %for.cond209
  %112 = load i64, i64* %__ret208, align 8, !dbg !19328
  %tobool227 = icmp ne i64 %112, 0, !dbg !19328
  br i1 %tobool227, label %if.end229, label %if.then228, !dbg !19327

if.then228:                                       ; preds = %land.lhs.true226
  store i64 1, i64* %__ret208, align 8, !dbg !19328
  br label %if.end229, !dbg !19328

if.end229:                                        ; preds = %if.then228, %land.lhs.true226, %for.cond209
  %113 = load i8, i8* %__cond216, align 1, !dbg !19327
  %tobool231 = trunc i8 %113 to i1, !dbg !19327
  br i1 %tobool231, label %lor.end236, label %lor.rhs233, !dbg !19327

lor.rhs233:                                       ; preds = %if.end229
  %114 = load i64, i64* %__ret208, align 8, !dbg !19327
  %tobool234 = icmp ne i64 %114, 0, !dbg !19327
  %lnot235 = xor i1 %tobool234, true, !dbg !19327
  br label %lor.end236, !dbg !19327

lor.end236:                                       ; preds = %lor.rhs233, %if.end229
  %115 = phi i1 [ true, %if.end229 ], [ %lnot235, %lor.rhs233 ]
  %lor.ext237 = zext i1 %115 to i32, !dbg !19327
  store i32 %lor.ext237, i32* %tmp230, align 4, !dbg !19328
  %116 = load i32, i32* %tmp230, align 4, !dbg !19327
  %tobool238 = icmp ne i32 %116, 0, !dbg !19330
  br i1 %tobool238, label %if.then239, label %if.end240, !dbg !19323

if.then239:                                       ; preds = %lor.end236
  br label %for.end245, !dbg !19330

if.end240:                                        ; preds = %lor.end236
  %117 = load i64, i64* %__int210, align 8, !dbg !19331
  %tobool241 = icmp ne i64 %117, 0, !dbg !19331
  br i1 %tobool241, label %if.then242, label %if.end243, !dbg !19323

if.then242:                                       ; preds = %if.end240
  %118 = load i64, i64* %__int210, align 8, !dbg !19333
  store i64 %118, i64* %__ret208, align 8, !dbg !19333
  br label %__out250, !dbg !19333

if.end243:                                        ; preds = %if.end240
  %119 = load i64, i64* %__ret208, align 8, !dbg !19323
  %call244 = call i64 @schedule_timeout(i64 %119) #12, !dbg !19323
  store i64 %call244, i64* %__ret208, align 8, !dbg !19323
  br label %for.cond209, !dbg !19335, !llvm.loop !19336

for.end245:                                       ; preds = %if.then239
  %120 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19317
  %counter246 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %120, i32 0, i32 12, !dbg !19317
  %121 = load i32, i32* %p, align 4, !dbg !19317
  %idxprom247 = sext i32 %121 to i64, !dbg !19317
  %arrayidx248 = getelementptr [3 x %struct.ksz_counter_info], [3 x %struct.ksz_counter_info]* %counter246, i64 0, i64 %idxprom247, !dbg !19317
  %counter249 = getelementptr inbounds %struct.ksz_counter_info, %struct.ksz_counter_info* %arrayidx248, i32 0, i32 0, !dbg !19317
  call void @finish_wait(%struct.wait_queue_head* %counter249, %struct.wait_queue_entry* %__wq_entry207) #12, !dbg !19317
  br label %__out250, !dbg !19317

__out250:                                         ; preds = %for.end245, %if.then242
  call void @llvm.dbg.label(metadata !19338), !dbg !19317
  %122 = load i64, i64* %__ret208, align 8, !dbg !19317
  store i64 %122, i64* %tmp251, align 8, !dbg !19317
  %123 = load i64, i64* %tmp251, align 8, !dbg !19317
  store i64 %123, i64* %__ret178, align 8, !dbg !19314
  br label %if.end252, !dbg !19314

if.end252:                                        ; preds = %__out250, %lor.end203
  %124 = load i64, i64* %__ret178, align 8, !dbg !19303
  store i64 %124, i64* %tmp253, align 8, !dbg !19314
  %125 = load i64, i64* %tmp253, align 8, !dbg !19303
  br label %if.end254, !dbg !19339

if.end254:                                        ; preds = %if.end252, %if.else172
  br label %if.end255

if.end255:                                        ; preds = %if.end254, %if.end170
  br label %for.inc256, !dbg !19340

for.inc256:                                       ; preds = %if.end255
  %126 = load i32, i32* %i, align 4, !dbg !19341
  %inc257 = add i32 %126, 1, !dbg !19341
  store i32 %inc257, i32* %i, align 4, !dbg !19341
  %127 = load i32, i32* %p, align 4, !dbg !19342
  %inc258 = add i32 %127, 1, !dbg !19342
  store i32 %inc258, i32* %p, align 4, !dbg !19342
  br label %for.cond88, !dbg !19343, !llvm.loop !19344

for.end259:                                       ; preds = %for.cond88
  br label %if.end260

if.end260:                                        ; preds = %for.end259, %if.end86
  %128 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19346
  %129 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19347
  %first_port261 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %129, i32 0, i32 4, !dbg !19348
  %130 = load i32, i32* %first_port261, align 4, !dbg !19348
  %131 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19349
  %mib_port_cnt262 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %131, i32 0, i32 5, !dbg !19350
  %132 = load i32, i32* %mib_port_cnt262, align 8, !dbg !19350
  %arraydecay = getelementptr inbounds [34 x i64], [34 x i64]* %counter, i64 0, i64 0, !dbg !19351
  call void @get_mib_counters(%struct.ksz_hw* %128, i32 %130, i32 %132, i64* %arraydecay) #12, !dbg !19352
  %133 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19353
  %mib_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %133, i32 0, i32 7, !dbg !19354
  %134 = load i32, i32* %mib_cnt, align 4, !dbg !19354
  store i32 %134, i32* %n, align 4, !dbg !19355
  %135 = load i32, i32* %n, align 4, !dbg !19356
  %136 = load i32, i32* %n_stats, align 4, !dbg !19358
  %cmp263 = icmp sgt i32 %135, %136, !dbg !19359
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !19360

if.then265:                                       ; preds = %if.end260
  %137 = load i32, i32* %n_stats, align 4, !dbg !19361
  store i32 %137, i32* %n, align 4, !dbg !19362
  br label %if.end266, !dbg !19363

if.end266:                                        ; preds = %if.then265, %if.end260
  %138 = load i32, i32* %n, align 4, !dbg !19364
  %139 = load i32, i32* %n_stats, align 4, !dbg !19365
  %sub267 = sub i32 %139, %138, !dbg !19365
  store i32 %sub267, i32* %n_stats, align 4, !dbg !19365
  store i32 0, i32* %i, align 4, !dbg !19366
  br label %for.cond268, !dbg !19368

for.cond268:                                      ; preds = %for.inc274, %if.end266
  %140 = load i32, i32* %i, align 4, !dbg !19369
  %141 = load i32, i32* %n, align 4, !dbg !19371
  %cmp269 = icmp slt i32 %140, %141, !dbg !19372
  br i1 %cmp269, label %for.body271, label %for.end276, !dbg !19373

for.body271:                                      ; preds = %for.cond268
  %142 = load i32, i32* %i, align 4, !dbg !19374
  %idxprom272 = sext i32 %142 to i64, !dbg !19375
  %arrayidx273 = getelementptr [34 x i64], [34 x i64]* %counter, i64 0, i64 %idxprom272, !dbg !19375
  %143 = load i64, i64* %arrayidx273, align 8, !dbg !19375
  %144 = load i64*, i64** %data.addr, align 8, !dbg !19376
  %incdec.ptr = getelementptr i64, i64* %144, i32 1, !dbg !19376
  store i64* %incdec.ptr, i64** %data.addr, align 8, !dbg !19376
  store i64 %143, i64* %144, align 8, !dbg !19377
  br label %for.inc274, !dbg !19378

for.inc274:                                       ; preds = %for.body271
  %145 = load i32, i32* %i, align 4, !dbg !19379
  %inc275 = add i32 %145, 1, !dbg !19379
  store i32 %inc275, i32* %i, align 4, !dbg !19379
  br label %for.cond268, !dbg !19380, !llvm.loop !19381

for.end276:                                       ; preds = %for.cond268
  ret void, !dbg !19383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_get_sset_count(%struct.net_device* %dev, i32 %sset) #2 !dbg !19384 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19385, metadata !DIExpression()), !dbg !19386
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !19387, metadata !DIExpression()), !dbg !19388
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !19389, metadata !DIExpression()), !dbg !19390
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19391
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19392
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !19392
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !19390
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !19393, metadata !DIExpression()), !dbg !19394
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19395
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !19396
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !19396
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !19394
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !19397, metadata !DIExpression()), !dbg !19398
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19399
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 2, !dbg !19400
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !19398
  %5 = load i32, i32* %sset.addr, align 4, !dbg !19401
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !19402

sw.bb:                                            ; preds = %entry
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !19403
  %mib_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %6, i32 0, i32 7, !dbg !19405
  %7 = load i32, i32* %mib_cnt, align 4, !dbg !19405
  store i32 %7, i32* %retval, align 4, !dbg !19406
  br label %return, !dbg !19406

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !19407
  br label %return, !dbg !19407

return:                                           ; preds = %sw.default, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !19408
  ret i32 %8, !dbg !19408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_get_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !19409 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19410, metadata !DIExpression()), !dbg !19411
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !19412, metadata !DIExpression()), !dbg !19413
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !19414, metadata !DIExpression()), !dbg !19415
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19416
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19417
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !19417
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !19415
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !19418, metadata !DIExpression()), !dbg !19419
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19420
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !19421
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !19421
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !19419
  %4 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19422
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %4, i32 0, i32 5, !dbg !19423
  call void @mutex_lock(%struct.mutex* %lock) #12, !dbg !19424
  %5 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19425
  %mii_if = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %5, i32 0, i32 5, !dbg !19426
  %6 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19427
  call void @mii_ethtool_get_link_ksettings(%struct.mii_if_info* %mii_if, %struct.ethtool_link_ksettings* %6) #12, !dbg !19428
  %7 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19429
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %7, i32 0, i32 1, !dbg !19429
  %advertising = getelementptr inbounds %struct.anon.127, %struct.anon.127* %link_modes, i32 0, i32 1, !dbg !19429
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !19429
  call void @__set_bit(i64 7, i64* %arraydecay) #12, !dbg !19429
  %8 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19430
  %lock1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %8, i32 0, i32 5, !dbg !19431
  call void @mutex_unlock(%struct.mutex* %lock1) #12, !dbg !19432
  %9 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19433
  %advertising2 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %9, i32 0, i32 6, !dbg !19434
  %10 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19435
  %link_modes3 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %10, i32 0, i32 1, !dbg !19436
  %advertising4 = getelementptr inbounds %struct.anon.127, %struct.anon.127* %link_modes3, i32 0, i32 1, !dbg !19437
  %arraydecay5 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising4, i64 0, i64 0, !dbg !19435
  %call6 = call zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32* %advertising2, i64* %arraydecay5) #12, !dbg !19438
  ret i32 0, !dbg !19439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netdev_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !19440 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %priv = alloca %struct.dev_priv*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %port = alloca %struct.ksz_port*, align 8
  %copy_cmd = alloca %struct.ethtool_link_ksettings, align 8
  %speed = alloca i32, align 4
  %advertising = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19441, metadata !DIExpression()), !dbg !19442
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !19443, metadata !DIExpression()), !dbg !19444
  call void @llvm.dbg.declare(metadata %struct.dev_priv** %priv, metadata !19445, metadata !DIExpression()), !dbg !19446
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19447
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19448
  %1 = bitcast i8* %call to %struct.dev_priv*, !dbg !19448
  store %struct.dev_priv* %1, %struct.dev_priv** %priv, align 8, !dbg !19446
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !19449, metadata !DIExpression()), !dbg !19450
  %2 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19451
  %adapter = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %2, i32 0, i32 0, !dbg !19452
  %3 = load %struct.dev_info*, %struct.dev_info** %adapter, align 8, !dbg !19452
  store %struct.dev_info* %3, %struct.dev_info** %hw_priv, align 8, !dbg !19450
  call void @llvm.dbg.declare(metadata %struct.ksz_port** %port, metadata !19453, metadata !DIExpression()), !dbg !19454
  %4 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19455
  %port1 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %4, i32 0, i32 1, !dbg !19456
  store %struct.ksz_port* %port1, %struct.ksz_port** %port, align 8, !dbg !19454
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings* %copy_cmd, metadata !19457, metadata !DIExpression()), !dbg !19458
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !19459, metadata !DIExpression()), !dbg !19460
  %5 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19461
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %5, i32 0, i32 0, !dbg !19462
  %speed2 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 1, !dbg !19463
  %6 = load i32, i32* %speed2, align 4, !dbg !19463
  store i32 %6, i32* %speed, align 4, !dbg !19460
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !19464, metadata !DIExpression()), !dbg !19465
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !19466, metadata !DIExpression()), !dbg !19467
  %7 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19468
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %7, i32 0, i32 1, !dbg !19469
  %advertising3 = getelementptr inbounds %struct.anon.127, %struct.anon.127* %link_modes, i32 0, i32 1, !dbg !19470
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising3, i64 0, i64 0, !dbg !19468
  %call4 = call zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32* %advertising, i64* %arraydecay) #12, !dbg !19471
  %8 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19472
  %base5 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %8, i32 0, i32 0, !dbg !19474
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base5, i32 0, i32 5, !dbg !19475
  %9 = load i8, i8* %autoneg, align 1, !dbg !19475
  %conv = zext i8 %9 to i32, !dbg !19472
  %tobool = icmp ne i32 %conv, 0, !dbg !19472
  br i1 %tobool, label %land.lhs.true, label %if.end42, !dbg !19476

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19477
  %advertising6 = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %10, i32 0, i32 6, !dbg !19478
  %11 = load i32, i32* %advertising6, align 8, !dbg !19478
  %12 = load i32, i32* %advertising, align 4, !dbg !19479
  %cmp = icmp eq i32 %11, %12, !dbg !19480
  br i1 %cmp, label %if.then, label %if.end42, !dbg !19481

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32, i32* %advertising, align 4, !dbg !19482
  %conv8 = zext i32 %13 to i64, !dbg !19482
  %or = or i64 %conv8, 15, !dbg !19482
  %conv9 = trunc i64 %or to i32, !dbg !19482
  store i32 %conv9, i32* %advertising, align 4, !dbg !19482
  %14 = load i32, i32* %speed, align 4, !dbg !19484
  %cmp10 = icmp eq i32 10, %14, !dbg !19486
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !19487

if.then12:                                        ; preds = %if.then
  %15 = load i32, i32* %advertising, align 4, !dbg !19488
  %conv13 = zext i32 %15 to i64, !dbg !19488
  %and = and i64 %conv13, -13, !dbg !19488
  %conv14 = trunc i64 %and to i32, !dbg !19488
  store i32 %conv14, i32* %advertising, align 4, !dbg !19488
  br label %if.end21, !dbg !19489

if.else:                                          ; preds = %if.then
  %16 = load i32, i32* %speed, align 4, !dbg !19490
  %cmp15 = icmp eq i32 100, %16, !dbg !19492
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !19493

if.then17:                                        ; preds = %if.else
  %17 = load i32, i32* %advertising, align 4, !dbg !19494
  %conv18 = zext i32 %17 to i64, !dbg !19494
  %and19 = and i64 %conv18, -4, !dbg !19494
  %conv20 = trunc i64 %and19 to i32, !dbg !19494
  store i32 %conv20, i32* %advertising, align 4, !dbg !19494
  br label %if.end, !dbg !19495

if.end:                                           ; preds = %if.then17, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then12
  %18 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19496
  %base22 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %18, i32 0, i32 0, !dbg !19498
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base22, i32 0, i32 2, !dbg !19499
  %19 = load i8, i8* %duplex, align 8, !dbg !19499
  %conv23 = zext i8 %19 to i32, !dbg !19496
  %cmp24 = icmp eq i32 0, %conv23, !dbg !19500
  br i1 %cmp24, label %if.then26, label %if.else30, !dbg !19501

if.then26:                                        ; preds = %if.end21
  %20 = load i32, i32* %advertising, align 4, !dbg !19502
  %conv27 = zext i32 %20 to i64, !dbg !19502
  %and28 = and i64 %conv27, -11, !dbg !19502
  %conv29 = trunc i64 %and28 to i32, !dbg !19502
  store i32 %conv29, i32* %advertising, align 4, !dbg !19502
  br label %if.end41, !dbg !19503

if.else30:                                        ; preds = %if.end21
  %21 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19504
  %base31 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %21, i32 0, i32 0, !dbg !19506
  %duplex32 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base31, i32 0, i32 2, !dbg !19507
  %22 = load i8, i8* %duplex32, align 8, !dbg !19507
  %conv33 = zext i8 %22 to i32, !dbg !19504
  %cmp34 = icmp eq i32 1, %conv33, !dbg !19508
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !19509

if.then36:                                        ; preds = %if.else30
  %23 = load i32, i32* %advertising, align 4, !dbg !19510
  %conv37 = zext i32 %23 to i64, !dbg !19510
  %and38 = and i64 %conv37, -6, !dbg !19510
  %conv39 = trunc i64 %and38 to i32, !dbg !19510
  store i32 %conv39, i32* %advertising, align 4, !dbg !19510
  br label %if.end40, !dbg !19511

if.end40:                                         ; preds = %if.then36, %if.else30
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then26
  br label %if.end42, !dbg !19512

if.end42:                                         ; preds = %if.end41, %land.lhs.true, %entry
  %24 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19513
  %lock = getelementptr inbounds %struct.dev_info, %struct.dev_info* %24, i32 0, i32 5, !dbg !19514
  call void @mutex_lock(%struct.mutex* %lock) #12, !dbg !19515
  %25 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19516
  %base43 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %25, i32 0, i32 0, !dbg !19518
  %autoneg44 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base43, i32 0, i32 5, !dbg !19519
  %26 = load i8, i8* %autoneg44, align 1, !dbg !19519
  %conv45 = zext i8 %26 to i32, !dbg !19516
  %tobool46 = icmp ne i32 %conv45, 0, !dbg !19516
  br i1 %tobool46, label %land.lhs.true47, label %if.else55, !dbg !19520

land.lhs.true47:                                  ; preds = %if.end42
  %27 = load i32, i32* %advertising, align 4, !dbg !19521
  %conv48 = zext i32 %27 to i64, !dbg !19521
  %and49 = and i64 %conv48, 15, !dbg !19522
  %cmp50 = icmp eq i64 %and49, 15, !dbg !19523
  br i1 %cmp50, label %if.then52, label %if.else55, !dbg !19524

if.then52:                                        ; preds = %land.lhs.true47
  %28 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19525
  %duplex53 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %28, i32 0, i32 0, !dbg !19527
  store i8 0, i8* %duplex53, align 8, !dbg !19528
  %29 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19529
  %speed54 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %29, i32 0, i32 1, !dbg !19530
  store i8 0, i8* %speed54, align 1, !dbg !19531
  %30 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19532
  %force_link = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %30, i32 0, i32 2, !dbg !19533
  store i8 0, i8* %force_link, align 2, !dbg !19534
  br label %if.end75, !dbg !19535

if.else55:                                        ; preds = %land.lhs.true47, %if.end42
  %31 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19536
  %base56 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %31, i32 0, i32 0, !dbg !19538
  %duplex57 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base56, i32 0, i32 2, !dbg !19539
  %32 = load i8, i8* %duplex57, align 8, !dbg !19539
  %conv58 = zext i8 %32 to i32, !dbg !19536
  %add = add i32 %conv58, 1, !dbg !19540
  %conv59 = trunc i32 %add to i8, !dbg !19536
  %33 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19541
  %duplex60 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %33, i32 0, i32 0, !dbg !19542
  store i8 %conv59, i8* %duplex60, align 8, !dbg !19543
  %34 = load i32, i32* %speed, align 4, !dbg !19544
  %cmp61 = icmp ne i32 1000, %34, !dbg !19546
  br i1 %cmp61, label %if.then63, label %if.end66, !dbg !19547

if.then63:                                        ; preds = %if.else55
  %35 = load i32, i32* %speed, align 4, !dbg !19548
  %conv64 = trunc i32 %35 to i8, !dbg !19548
  %36 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19549
  %speed65 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %36, i32 0, i32 1, !dbg !19550
  store i8 %conv64, i8* %speed65, align 1, !dbg !19551
  br label %if.end66, !dbg !19549

if.end66:                                         ; preds = %if.then63, %if.else55
  %37 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19552
  %base67 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %37, i32 0, i32 0, !dbg !19554
  %autoneg68 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base67, i32 0, i32 5, !dbg !19555
  %38 = load i8, i8* %autoneg68, align 1, !dbg !19555
  %tobool69 = icmp ne i8 %38, 0, !dbg !19552
  br i1 %tobool69, label %if.then70, label %if.else72, !dbg !19556

if.then70:                                        ; preds = %if.end66
  %39 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19557
  %force_link71 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %39, i32 0, i32 2, !dbg !19558
  store i8 0, i8* %force_link71, align 2, !dbg !19559
  br label %if.end74, !dbg !19557

if.else72:                                        ; preds = %if.end66
  %40 = load %struct.ksz_port*, %struct.ksz_port** %port, align 8, !dbg !19560
  %force_link73 = getelementptr inbounds %struct.ksz_port, %struct.ksz_port* %40, i32 0, i32 2, !dbg !19561
  store i8 1, i8* %force_link73, align 2, !dbg !19562
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then70
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then52
  %41 = bitcast %struct.ethtool_link_ksettings* %copy_cmd to i8*, !dbg !19563
  %42 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !19564
  %43 = bitcast %struct.ethtool_link_ksettings* %42 to i8*, !dbg !19563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %43, i64 96, i1 false), !dbg !19563
  %link_modes76 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %copy_cmd, i32 0, i32 1, !dbg !19565
  %advertising77 = getelementptr inbounds %struct.anon.127, %struct.anon.127* %link_modes76, i32 0, i32 1, !dbg !19566
  %arraydecay78 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising77, i64 0, i64 0, !dbg !19567
  %44 = load i32, i32* %advertising, align 4, !dbg !19568
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay78, i32 %44) #12, !dbg !19569
  %45 = load %struct.dev_priv*, %struct.dev_priv** %priv, align 8, !dbg !19570
  %mii_if = getelementptr inbounds %struct.dev_priv, %struct.dev_priv* %45, i32 0, i32 5, !dbg !19571
  %call79 = call i32 @mii_ethtool_set_link_ksettings(%struct.mii_if_info* %mii_if, %struct.ethtool_link_ksettings* %copy_cmd) #12, !dbg !19572
  store i32 %call79, i32* %rc, align 4, !dbg !19573
  %46 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !19574
  %lock80 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %46, i32 0, i32 5, !dbg !19575
  call void @mutex_unlock(%struct.mutex* %lock80) #12, !dbg !19576
  %47 = load i32, i32* %rc, align 4, !dbg !19577
  ret i32 %47, !dbg !19578
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #2 !dbg !19579 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !19584, metadata !DIExpression()), !dbg !19585
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !19586
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !19587
  %call = call i8* @dev_name(%struct.device* %dev) #12, !dbg !19588
  ret i8* %call, !dbg !19589
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_enable_wol(%struct.ksz_hw* %hw, i32 %wol_enable, i8* %net_addr) #2 !dbg !19590 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %wol_enable.addr = alloca i32, align 4
  %net_addr.addr = alloca i8*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19593, metadata !DIExpression()), !dbg !19594
  store i32 %wol_enable, i32* %wol_enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wol_enable.addr, metadata !19595, metadata !DIExpression()), !dbg !19596
  store i8* %net_addr, i8** %net_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %net_addr.addr, metadata !19597, metadata !DIExpression()), !dbg !19598
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19599
  %1 = load i32, i32* %wol_enable.addr, align 4, !dbg !19600
  %and = and i32 %1, 32, !dbg !19601
  call void @hw_cfg_wol(%struct.ksz_hw* %0, i16 zeroext 128, i32 %and) #12, !dbg !19602
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19603
  %3 = load i32, i32* %wol_enable.addr, align 4, !dbg !19604
  %and1 = and i32 %3, 2, !dbg !19605
  call void @hw_cfg_wol(%struct.ksz_hw* %2, i16 zeroext 1, i32 %and1) #12, !dbg !19606
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19607
  call void @hw_add_wol_ucast(%struct.ksz_hw* %4) #12, !dbg !19608
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19609
  %6 = load i32, i32* %wol_enable.addr, align 4, !dbg !19610
  %and2 = and i32 %6, 4, !dbg !19611
  call void @hw_cfg_wol(%struct.ksz_hw* %5, i16 zeroext 2, i32 %and2) #12, !dbg !19612
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19613
  call void @hw_add_wol_mcast(%struct.ksz_hw* %7) #12, !dbg !19614
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19615
  %9 = load i32, i32* %wol_enable.addr, align 4, !dbg !19616
  %and3 = and i32 %9, 8, !dbg !19617
  call void @hw_cfg_wol(%struct.ksz_hw* %8, i16 zeroext 4, i32 %and3) #12, !dbg !19618
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19619
  %11 = load i32, i32* %wol_enable.addr, align 4, !dbg !19620
  %and4 = and i32 %11, 16, !dbg !19621
  call void @hw_cfg_wol(%struct.ksz_hw* %10, i16 zeroext 8, i32 %and4) #12, !dbg !19622
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19623
  %13 = load i8*, i8** %net_addr.addr, align 8, !dbg !19624
  call void @hw_add_wol_arp(%struct.ksz_hw* %12, i8* %13) #12, !dbg !19625
  ret void, !dbg !19626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_cfg_wol(%struct.ksz_hw* %hw, i16 zeroext %frame, i32 %set) #2 !dbg !19627 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %frame.addr = alloca i16, align 2
  %set.addr = alloca i32, align 4
  %data = alloca i16, align 2
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19630, metadata !DIExpression()), !dbg !19631
  store i16 %frame, i16* %frame.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %frame.addr, metadata !19632, metadata !DIExpression()), !dbg !19633
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !19634, metadata !DIExpression()), !dbg !19635
  call void @llvm.dbg.declare(metadata i16* %data, metadata !19636, metadata !DIExpression()), !dbg !19637
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19638
  %io = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %0, i32 0, i32 0, !dbg !19639
  %1 = load i8*, i8** %io, align 8, !dbg !19639
  %add.ptr = getelementptr i8, i8* %1, i64 538, !dbg !19640
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !19641
  store i16 %call, i16* %data, align 2, !dbg !19642
  %2 = load i32, i32* %set.addr, align 4, !dbg !19643
  %tobool = icmp ne i32 %2, 0, !dbg !19643
  br i1 %tobool, label %if.then, label %if.else, !dbg !19645

if.then:                                          ; preds = %entry
  %3 = load i16, i16* %frame.addr, align 2, !dbg !19646
  %conv = zext i16 %3 to i32, !dbg !19646
  %4 = load i16, i16* %data, align 2, !dbg !19647
  %conv1 = zext i16 %4 to i32, !dbg !19647
  %or = or i32 %conv1, %conv, !dbg !19647
  %conv2 = trunc i32 %or to i16, !dbg !19647
  store i16 %conv2, i16* %data, align 2, !dbg !19647
  br label %if.end, !dbg !19648

if.else:                                          ; preds = %entry
  %5 = load i16, i16* %frame.addr, align 2, !dbg !19649
  %conv3 = zext i16 %5 to i32, !dbg !19649
  %neg = xor i32 %conv3, -1, !dbg !19650
  %6 = load i16, i16* %data, align 2, !dbg !19651
  %conv4 = zext i16 %6 to i32, !dbg !19651
  %and = and i32 %conv4, %neg, !dbg !19651
  %conv5 = trunc i32 %and to i16, !dbg !19651
  store i16 %conv5, i16* %data, align 2, !dbg !19651
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i16, i16* %data, align 2, !dbg !19652
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19653
  %io6 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %8, i32 0, i32 0, !dbg !19654
  %9 = load i8*, i8** %io6, align 8, !dbg !19654
  %add.ptr7 = getelementptr i8, i8* %9, i64 538, !dbg !19655
  call void @writew(i16 zeroext %7, i8* %add.ptr7) #12, !dbg !19656
  ret void, !dbg !19657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_add_wol_ucast(%struct.ksz_hw* %hw) #2 !dbg !8296 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19658, metadata !DIExpression()), !dbg !19659
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19660
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19661
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 20, !dbg !19662
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %override_addr, i64 0, i64 0, !dbg !19661
  call void @hw_set_wol_frame(%struct.ksz_hw* %0, i32 0, i32 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @hw_add_wol_ucast.mask, i64 0, i64 0), i32 6, i8* %arraydecay) #12, !dbg !19663
  ret void, !dbg !19664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_add_wol_mcast(%struct.ksz_hw* %hw) #2 !dbg !8299 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %pattern = alloca [6 x i8], align 1
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19665, metadata !DIExpression()), !dbg !19666
  call void @llvm.dbg.declare(metadata [6 x i8]* %pattern, metadata !19667, metadata !DIExpression()), !dbg !19668
  %0 = bitcast [6 x i8]* %pattern to i8*, !dbg !19668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @__const.hw_add_wol_mcast.pattern, i32 0, i32 0), i64 6, i1 false), !dbg !19668
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %pattern, i64 0, i64 3, !dbg !19669
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19670
  %override_addr = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 20, !dbg !19671
  %arrayidx1 = getelementptr [6 x i8], [6 x i8]* %override_addr, i64 0, i64 3, !dbg !19670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %arrayidx1, i64 3, i1 false), !dbg !19672
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19673
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %pattern, i64 0, i64 0, !dbg !19674
  call void @hw_set_wol_frame(%struct.ksz_hw* %2, i32 1, i32 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @hw_add_wol_mcast.mask, i64 0, i64 0), i32 6, i8* %arraydecay) #12, !dbg !19675
  ret void, !dbg !19676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_add_wol_arp(%struct.ksz_hw* %hw, i8* %ip_addr) #2 !dbg !8302 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %ip_addr.addr = alloca i8*, align 8
  %pattern = alloca [42 x i8], align 16
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19677, metadata !DIExpression()), !dbg !19678
  store i8* %ip_addr, i8** %ip_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ip_addr.addr, metadata !19679, metadata !DIExpression()), !dbg !19680
  call void @llvm.dbg.declare(metadata [42 x i8]* %pattern, metadata !19681, metadata !DIExpression()), !dbg !19685
  %0 = bitcast [42 x i8]* %pattern to i8*, !dbg !19685
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds (<{ [22 x i8], [20 x i8] }>, <{ [22 x i8], [20 x i8] }>* @__const.hw_add_wol_arp.pattern, i32 0, i32 0, i32 0), i64 42, i1 false), !dbg !19685
  %arrayidx = getelementptr [42 x i8], [42 x i8]* %pattern, i64 0, i64 38, !dbg !19686
  %1 = load i8*, i8** %ip_addr.addr, align 8, !dbg !19687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arrayidx, i8* align 1 %1, i64 4, i1 false), !dbg !19688
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19689
  %arraydecay = getelementptr inbounds [42 x i8], [42 x i8]* %pattern, i64 0, i64 0, !dbg !19690
  call void @hw_set_wol_frame(%struct.ksz_hw* %2, i32 3, i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @hw_add_wol_arp.mask, i64 0, i64 0), i32 42, i8* %arraydecay) #12, !dbg !19691
  ret void, !dbg !19692
}

; Function Attrs: noredzone
declare dso_local i32 @mii_nway_restart(%struct.mii_if_info*) #1

; Function Attrs: noredzone
declare dso_local i32 @mii_link_ok(%struct.mii_if_info*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eeprom_write(%struct.ksz_hw* %hw, i8 zeroext %reg, i16 zeroext %data) #2 !dbg !19693 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %reg.addr = alloca i8, align 1
  %data.addr = alloca i16, align 2
  %timeout = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19696, metadata !DIExpression()), !dbg !19697
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !19698, metadata !DIExpression()), !dbg !19699
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !19700, metadata !DIExpression()), !dbg !19701
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !19702, metadata !DIExpression()), !dbg !19703
  %0 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19704
  call void @raise_gpio(%struct.ksz_hw* %0, i8 zeroext 17) #12, !dbg !19705
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19706
  call void @spi_reg(%struct.ksz_hw* %1, i8 zeroext 0, i8 zeroext 48) #12, !dbg !19707
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19708
  call void @drop_gpio(%struct.ksz_hw* %2, i8 zeroext 1) #12, !dbg !19709
  call void @__const_udelay(i64 4295) #12, !dbg !19710
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19715
  call void @raise_gpio(%struct.ksz_hw* %3, i8 zeroext 1) #12, !dbg !19716
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19717
  %5 = load i8, i8* %reg.addr, align 1, !dbg !19718
  call void @spi_reg(%struct.ksz_hw* %4, i8 zeroext 3, i8 zeroext %5) #12, !dbg !19719
  %6 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19720
  call void @drop_gpio(%struct.ksz_hw* %6, i8 zeroext 1) #12, !dbg !19721
  call void @__const_udelay(i64 4295) #12, !dbg !19722
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19727
  call void @raise_gpio(%struct.ksz_hw* %7, i8 zeroext 1) #12, !dbg !19728
  store i32 8, i32* %timeout, align 4, !dbg !19729
  call void @__const_udelay(i64 8590000) #12, !dbg !19730
  br label %do.body, !dbg !19735

do.body:                                          ; preds = %land.end, %entry
  call void @__const_udelay(i64 4295000) #12, !dbg !19736
  br label %do.cond, !dbg !19742

do.cond:                                          ; preds = %do.body
  %8 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19743
  %call = call zeroext i8 @state_gpio(%struct.ksz_hw* %8, i8 zeroext 8) #12, !dbg !19744
  %tobool = icmp ne i8 %call, 0, !dbg !19744
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !19745

land.rhs:                                         ; preds = %do.cond
  %9 = load i32, i32* %timeout, align 4, !dbg !19746
  %dec = add i32 %9, -1, !dbg !19746
  store i32 %dec, i32* %timeout, align 4, !dbg !19746
  %tobool1 = icmp ne i32 %dec, 0, !dbg !19745
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %10 = phi i1 [ false, %do.cond ], [ %tobool1, %land.rhs ], !dbg !19747
  br i1 %10, label %do.body, label %do.end, !dbg !19742, !llvm.loop !19748

do.end:                                           ; preds = %land.end
  %11 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19750
  call void @drop_gpio(%struct.ksz_hw* %11, i8 zeroext 1) #12, !dbg !19751
  call void @__const_udelay(i64 4295) #12, !dbg !19752
  %12 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19757
  call void @raise_gpio(%struct.ksz_hw* %12, i8 zeroext 1) #12, !dbg !19758
  %13 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19759
  %14 = load i8, i8* %reg.addr, align 1, !dbg !19760
  call void @spi_reg(%struct.ksz_hw* %13, i8 zeroext 1, i8 zeroext %14) #12, !dbg !19761
  %15 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19762
  %16 = load i16, i16* %data.addr, align 2, !dbg !19763
  call void @spi_w(%struct.ksz_hw* %15, i16 zeroext %16) #12, !dbg !19764
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19765
  call void @drop_gpio(%struct.ksz_hw* %17, i8 zeroext 1) #12, !dbg !19766
  call void @__const_udelay(i64 4295) #12, !dbg !19767
  %18 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19772
  call void @raise_gpio(%struct.ksz_hw* %18, i8 zeroext 1) #12, !dbg !19773
  store i32 8, i32* %timeout, align 4, !dbg !19774
  call void @__const_udelay(i64 8590000) #12, !dbg !19775
  br label %do.body2, !dbg !19780

do.body2:                                         ; preds = %land.end9, %do.end
  call void @__const_udelay(i64 4295000) #12, !dbg !19781
  br label %do.cond3, !dbg !19787

do.cond3:                                         ; preds = %do.body2
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19788
  %call4 = call zeroext i8 @state_gpio(%struct.ksz_hw* %19, i8 zeroext 8) #12, !dbg !19789
  %tobool5 = icmp ne i8 %call4, 0, !dbg !19789
  br i1 %tobool5, label %land.end9, label %land.rhs6, !dbg !19790

land.rhs6:                                        ; preds = %do.cond3
  %20 = load i32, i32* %timeout, align 4, !dbg !19791
  %dec7 = add i32 %20, -1, !dbg !19791
  store i32 %dec7, i32* %timeout, align 4, !dbg !19791
  %tobool8 = icmp ne i32 %dec7, 0, !dbg !19790
  br label %land.end9

land.end9:                                        ; preds = %land.rhs6, %do.cond3
  %21 = phi i1 [ false, %do.cond3 ], [ %tobool8, %land.rhs6 ], !dbg !19747
  br i1 %21, label %do.body2, label %do.end10, !dbg !19787, !llvm.loop !19792

do.end10:                                         ; preds = %land.end9
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19794
  call void @drop_gpio(%struct.ksz_hw* %22, i8 zeroext 1) #12, !dbg !19795
  call void @__const_udelay(i64 4295) #12, !dbg !19796
  %23 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19801
  call void @raise_gpio(%struct.ksz_hw* %23, i8 zeroext 1) #12, !dbg !19802
  %24 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19803
  call void @spi_reg(%struct.ksz_hw* %24, i8 zeroext 0, i8 zeroext 0) #12, !dbg !19804
  %25 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19805
  call void @drop_gpio(%struct.ksz_hw* %25, i8 zeroext 17) #12, !dbg !19806
  ret void, !dbg !19807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_w(%struct.ksz_hw* %hw, i16 zeroext %data) #2 !dbg !19808 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %data.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19811, metadata !DIExpression()), !dbg !19812
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !19813, metadata !DIExpression()), !dbg !19814
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19815, metadata !DIExpression()), !dbg !19816
  store i32 15, i32* %i, align 4, !dbg !19817
  br label %for.cond, !dbg !19819

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !19820
  %cmp = icmp sge i32 %0, 0, !dbg !19822
  br i1 %cmp, label %for.body, label %for.end, !dbg !19823

for.body:                                         ; preds = %for.cond
  %1 = load i16, i16* %data.addr, align 2, !dbg !19824
  %conv = zext i16 %1 to i32, !dbg !19824
  %2 = load i32, i32* %i, align 4, !dbg !19826
  %shl = shl i32 1, %2, !dbg !19827
  %and = and i32 %conv, %shl, !dbg !19828
  %tobool = icmp ne i32 %and, 0, !dbg !19828
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19829

cond.true:                                        ; preds = %for.body
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19830
  call void @raise_gpio(%struct.ksz_hw* %3, i8 zeroext 4) #12, !dbg !19831
  br label %cond.end, !dbg !19829

cond.false:                                       ; preds = %for.body
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19832
  call void @drop_gpio(%struct.ksz_hw* %4, i8 zeroext 4) #12, !dbg !19833
  br label %cond.end, !dbg !19829

cond.end:                                         ; preds = %cond.false, %cond.true
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19834
  call void @eeprom_clk(%struct.ksz_hw* %5) #12, !dbg !19835
  br label %for.inc, !dbg !19836

for.inc:                                          ; preds = %cond.end
  %6 = load i32, i32* %i, align 4, !dbg !19837
  %dec = add i32 %6, -1, !dbg !19837
  store i32 %dec, i32* %i, align 4, !dbg !19837
  br label %for.cond, !dbg !19838, !llvm.loop !19839

for.end:                                          ; preds = %for.cond
  ret void, !dbg !19841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #2 !dbg !19842 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !19845, metadata !DIExpression()), !dbg !19846
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !19847
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !19848
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !19849
  ret i1 %call, !dbg !19850
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #1

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_mib_counters(%struct.ksz_hw* %hw, i32 %first, i32 %cnt, i64* %counter) #2 !dbg !19851 {
entry:
  %hw.addr = alloca %struct.ksz_hw*, align 8
  %first.addr = alloca i32, align 4
  %cnt.addr = alloca i32, align 4
  %counter.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  %mib = alloca i32, align 4
  %port = alloca i32, align 4
  %port_mib = alloca %struct.ksz_port_mib*, align 8
  store %struct.ksz_hw* %hw, %struct.ksz_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw.addr, metadata !19854, metadata !DIExpression()), !dbg !19855
  store i32 %first, i32* %first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first.addr, metadata !19856, metadata !DIExpression()), !dbg !19857
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !19858, metadata !DIExpression()), !dbg !19859
  store i64* %counter, i64** %counter.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %counter.addr, metadata !19860, metadata !DIExpression()), !dbg !19861
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19862, metadata !DIExpression()), !dbg !19863
  call void @llvm.dbg.declare(metadata i32* %mib, metadata !19864, metadata !DIExpression()), !dbg !19865
  call void @llvm.dbg.declare(metadata i32* %port, metadata !19866, metadata !DIExpression()), !dbg !19867
  call void @llvm.dbg.declare(metadata %struct.ksz_port_mib** %port_mib, metadata !19868, metadata !DIExpression()), !dbg !19869
  %0 = load i64*, i64** %counter.addr, align 8, !dbg !19870
  %1 = bitcast i64* %0 to i8*, !dbg !19871
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 272, i1 false), !dbg !19871
  store i32 0, i32* %i, align 4, !dbg !19872
  %2 = load i32, i32* %first.addr, align 4, !dbg !19874
  store i32 %2, i32* %port, align 4, !dbg !19875
  br label %for.cond, !dbg !19876

for.cond:                                         ; preds = %for.inc11, %entry
  %3 = load i32, i32* %i, align 4, !dbg !19877
  %4 = load i32, i32* %cnt.addr, align 4, !dbg !19879
  %cmp = icmp slt i32 %3, %4, !dbg !19880
  br i1 %cmp, label %for.body, label %for.end14, !dbg !19881

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19882
  %port_mib1 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 3, !dbg !19884
  %6 = load i32, i32* %port, align 4, !dbg !19885
  %idxprom = sext i32 %6 to i64, !dbg !19882
  %arrayidx = getelementptr [3 x %struct.ksz_port_mib], [3 x %struct.ksz_port_mib]* %port_mib1, i64 0, i64 %idxprom, !dbg !19882
  store %struct.ksz_port_mib* %arrayidx, %struct.ksz_port_mib** %port_mib, align 8, !dbg !19886
  %7 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %port_mib, align 8, !dbg !19887
  %mib_start = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %7, i32 0, i32 3, !dbg !19889
  %8 = load i8, i8* %mib_start, align 1, !dbg !19889
  %conv = zext i8 %8 to i32, !dbg !19887
  store i32 %conv, i32* %mib, align 4, !dbg !19890
  br label %for.cond2, !dbg !19891

for.cond2:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %mib, align 4, !dbg !19892
  %10 = load %struct.ksz_hw*, %struct.ksz_hw** %hw.addr, align 8, !dbg !19894
  %mib_cnt = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %10, i32 0, i32 7, !dbg !19895
  %11 = load i32, i32* %mib_cnt, align 4, !dbg !19895
  %cmp3 = icmp slt i32 %9, %11, !dbg !19896
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !19897

for.body5:                                        ; preds = %for.cond2
  %12 = load %struct.ksz_port_mib*, %struct.ksz_port_mib** %port_mib, align 8, !dbg !19898
  %counter6 = getelementptr inbounds %struct.ksz_port_mib, %struct.ksz_port_mib* %12, i32 0, i32 4, !dbg !19899
  %13 = load i32, i32* %mib, align 4, !dbg !19900
  %idxprom7 = sext i32 %13 to i64, !dbg !19898
  %arrayidx8 = getelementptr [34 x i64], [34 x i64]* %counter6, i64 0, i64 %idxprom7, !dbg !19898
  %14 = load i64, i64* %arrayidx8, align 8, !dbg !19898
  %15 = load i64*, i64** %counter.addr, align 8, !dbg !19901
  %16 = load i32, i32* %mib, align 4, !dbg !19902
  %idxprom9 = sext i32 %16 to i64, !dbg !19901
  %arrayidx10 = getelementptr i64, i64* %15, i64 %idxprom9, !dbg !19901
  %17 = load i64, i64* %arrayidx10, align 8, !dbg !19903
  %add = add i64 %17, %14, !dbg !19903
  store i64 %add, i64* %arrayidx10, align 8, !dbg !19903
  br label %for.inc, !dbg !19901

for.inc:                                          ; preds = %for.body5
  %18 = load i32, i32* %mib, align 4, !dbg !19904
  %inc = add i32 %18, 1, !dbg !19904
  store i32 %inc, i32* %mib, align 4, !dbg !19904
  br label %for.cond2, !dbg !19905, !llvm.loop !19906

for.end:                                          ; preds = %for.cond2
  br label %for.inc11, !dbg !19908

for.inc11:                                        ; preds = %for.end
  %19 = load i32, i32* %i, align 4, !dbg !19909
  %inc12 = add i32 %19, 1, !dbg !19909
  store i32 %inc12, i32* %i, align 4, !dbg !19909
  %20 = load i32, i32* %port, align 4, !dbg !19910
  %inc13 = add i32 %20, 1, !dbg !19910
  store i32 %inc13, i32* %port, align 4, !dbg !19910
  br label %for.cond, !dbg !19911, !llvm.loop !19912

for.end14:                                        ; preds = %for.cond
  ret void, !dbg !19914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #2 !dbg !19915 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !19918, metadata !DIExpression()), !dbg !19919
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !19920, metadata !DIExpression()), !dbg !19921
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !19922
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !19923
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !19924
  ret i1 %call, !dbg !19925
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local void @mii_ethtool_get_link_ksettings(%struct.mii_if_info*, %struct.ethtool_link_ksettings*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #2 !dbg !19926 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !19927, metadata !DIExpression()), !dbg !19929
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !19931, metadata !DIExpression()), !dbg !19932
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !19933, metadata !DIExpression()), !dbg !19935
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !19937, metadata !DIExpression()), !dbg !19938
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !19939, metadata !DIExpression()), !dbg !19940
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !19941, metadata !DIExpression()), !dbg !19942
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !19943
  %1 = load i64, i64* %nr.addr, align 8, !dbg !19944
  %div = sdiv i64 %1, 64, !dbg !19944
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !19945
  %2 = bitcast i64* %add.ptr to i8*, !dbg !19943
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !19946
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !19947
  %conv.i = trunc i64 %4 to i32, !dbg !19947
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !19948
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !19949
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !19949
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #15, !dbg !19949
  %7 = load i64, i64* %nr.addr, align 8, !dbg !19950
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !19951
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !19952
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !19953
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #10, !dbg !19954, !srcloc !19955
  ret void, !dbg !19956
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32*, i64*) #1

; Function Attrs: noredzone
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(i64*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @mii_ethtool_set_link_ksettings(%struct.mii_if_info*, %struct.ethtool_link_ksettings*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !19957 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19960, metadata !DIExpression()), !dbg !19961
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !19962, metadata !DIExpression()), !dbg !19963
  %0 = load i8*, i8** %data.addr, align 8, !dbg !19964
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19965
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !19966
  store i8* %0, i8** %driver_data, align 8, !dbg !19967
  ret void, !dbg !19968
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_free_buffers(%struct.dev_info* %adapter, %struct.ksz_desc_info* %desc_info, i32 %direction) #2 !dbg !19969 {
entry:
  %adapter.addr = alloca %struct.dev_info*, align 8
  %desc_info.addr = alloca %struct.ksz_desc_info*, align 8
  %direction.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dma_buf = alloca %struct.ksz_dma_buf*, align 8
  %desc = alloca %struct.ksz_desc*, align 8
  store %struct.dev_info* %adapter, %struct.dev_info** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %adapter.addr, metadata !19972, metadata !DIExpression()), !dbg !19973
  store %struct.ksz_desc_info* %desc_info, %struct.ksz_desc_info** %desc_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ksz_desc_info** %desc_info.addr, metadata !19974, metadata !DIExpression()), !dbg !19975
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !19976, metadata !DIExpression()), !dbg !19977
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19978, metadata !DIExpression()), !dbg !19979
  call void @llvm.dbg.declare(metadata %struct.ksz_dma_buf** %dma_buf, metadata !19980, metadata !DIExpression()), !dbg !19981
  call void @llvm.dbg.declare(metadata %struct.ksz_desc** %desc, metadata !19982, metadata !DIExpression()), !dbg !19983
  %0 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !19984
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %0, i32 0, i32 0, !dbg !19985
  %1 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !19985
  store %struct.ksz_desc* %1, %struct.ksz_desc** %desc, align 8, !dbg !19983
  store i32 0, i32* %i, align 4, !dbg !19986
  br label %for.cond, !dbg !19988

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !19989
  %3 = load %struct.ksz_desc_info*, %struct.ksz_desc_info** %desc_info.addr, align 8, !dbg !19991
  %alloc = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %3, i32 0, i32 5, !dbg !19992
  %4 = load i32, i32* %alloc, align 8, !dbg !19992
  %cmp = icmp slt i32 %2, %4, !dbg !19993
  br i1 %cmp, label %for.body, label %for.end, !dbg !19994

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !19995
  %dma_buf1 = getelementptr inbounds %struct.ksz_desc, %struct.ksz_desc* %5, i32 0, i32 2, !dbg !19995
  store %struct.ksz_dma_buf* %dma_buf1, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !19997
  %6 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !19998
  %skb = getelementptr inbounds %struct.ksz_dma_buf, %struct.ksz_dma_buf* %6, i32 0, i32 0, !dbg !20000
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20000
  %tobool = icmp ne %struct.sk_buff* %7, null, !dbg !19998
  br i1 %tobool, label %if.then, label %if.end, !dbg !20001

if.then:                                          ; preds = %for.body
  %8 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20002
  %9 = load %struct.ksz_dma_buf*, %struct.ksz_dma_buf** %dma_buf, align 8, !dbg !20003
  %10 = load i32, i32* %direction.addr, align 4, !dbg !20004
  call void @free_dma_buf(%struct.dev_info* %8, %struct.ksz_dma_buf* %9, i32 %10) #12, !dbg !20005
  br label %if.end, !dbg !20005

if.end:                                           ; preds = %if.then, %for.body
  %11 = load %struct.ksz_desc*, %struct.ksz_desc** %desc, align 8, !dbg !20006
  %incdec.ptr = getelementptr %struct.ksz_desc, %struct.ksz_desc* %11, i32 1, !dbg !20006
  store %struct.ksz_desc* %incdec.ptr, %struct.ksz_desc** %desc, align 8, !dbg !20006
  br label %for.inc, !dbg !20007

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !20008
  %inc = add i32 %12, 1, !dbg !20008
  store i32 %inc, i32* %i, align 4, !dbg !20008
  br label %for.cond, !dbg !20009, !llvm.loop !20010

for.end:                                          ; preds = %for.cond
  ret void, !dbg !20012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ksz_free_desc(%struct.dev_info* %adapter) #2 !dbg !20013 {
entry:
  %adapter.addr = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  store %struct.dev_info* %adapter, %struct.dev_info** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_info** %adapter.addr, metadata !20014, metadata !DIExpression()), !dbg !20015
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !20016, metadata !DIExpression()), !dbg !20017
  %0 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20018
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %0, i32 0, i32 2, !dbg !20019
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !20017
  %1 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20020
  %rx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %1, i32 0, i32 14, !dbg !20021
  %ring_virt = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info, i32 0, i32 2, !dbg !20022
  store %struct.ksz_hw_desc* null, %struct.ksz_hw_desc** %ring_virt, align 8, !dbg !20023
  %2 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20024
  %tx_desc_info = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %2, i32 0, i32 15, !dbg !20025
  %ring_virt2 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info, i32 0, i32 2, !dbg !20026
  store %struct.ksz_hw_desc* null, %struct.ksz_hw_desc** %ring_virt2, align 8, !dbg !20027
  %3 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20028
  %rx_desc_info3 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %3, i32 0, i32 14, !dbg !20029
  %ring_phys = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info3, i32 0, i32 3, !dbg !20030
  store i32 0, i32* %ring_phys, align 8, !dbg !20031
  %4 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20032
  %tx_desc_info4 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %4, i32 0, i32 15, !dbg !20033
  %ring_phys5 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info4, i32 0, i32 3, !dbg !20034
  store i32 0, i32* %ring_phys5, align 8, !dbg !20035
  %5 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20036
  %desc_pool = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 3, !dbg !20038
  %alloc_virt = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool, i32 0, i32 3, !dbg !20039
  %6 = load i8*, i8** %alloc_virt, align 8, !dbg !20039
  %tobool = icmp ne i8* %6, null, !dbg !20036
  br i1 %tobool, label %if.then, label %if.end, !dbg !20040

if.then:                                          ; preds = %entry
  %7 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20041
  %pdev = getelementptr inbounds %struct.dev_info, %struct.dev_info* %7, i32 0, i32 1, !dbg !20042
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !20042
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !20043
  %9 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20044
  %desc_pool6 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %9, i32 0, i32 3, !dbg !20045
  %alloc_size = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool6, i32 0, i32 1, !dbg !20046
  %10 = load i32, i32* %alloc_size, align 8, !dbg !20046
  %conv = zext i32 %10 to i64, !dbg !20044
  %11 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20047
  %desc_pool7 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %11, i32 0, i32 3, !dbg !20048
  %alloc_virt8 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool7, i32 0, i32 3, !dbg !20049
  %12 = load i8*, i8** %alloc_virt8, align 8, !dbg !20049
  %13 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20050
  %desc_pool9 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %13, i32 0, i32 3, !dbg !20051
  %dma_addr = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool9, i32 0, i32 0, !dbg !20052
  %14 = load i64, i64* %dma_addr, align 8, !dbg !20052
  call void @dma_free_coherent(%struct.device* %dev, i64 %conv, i8* %12, i64 %14) #12, !dbg !20053
  br label %if.end, !dbg !20053

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20054
  %desc_pool10 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %15, i32 0, i32 3, !dbg !20055
  %alloc_size11 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool10, i32 0, i32 1, !dbg !20056
  store i32 0, i32* %alloc_size11, align 8, !dbg !20057
  %16 = load %struct.dev_info*, %struct.dev_info** %adapter.addr, align 8, !dbg !20058
  %desc_pool12 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %16, i32 0, i32 3, !dbg !20059
  %alloc_virt13 = getelementptr inbounds %struct.ksz_shared_mem, %struct.ksz_shared_mem* %desc_pool12, i32 0, i32 3, !dbg !20060
  store i8* null, i8** %alloc_virt13, align 8, !dbg !20061
  %17 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20062
  %rx_desc_info14 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %17, i32 0, i32 14, !dbg !20063
  %ring = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info14, i32 0, i32 0, !dbg !20064
  %18 = load %struct.ksz_desc*, %struct.ksz_desc** %ring, align 8, !dbg !20064
  %19 = bitcast %struct.ksz_desc* %18 to i8*, !dbg !20062
  call void @kfree(i8* %19) #12, !dbg !20065
  %20 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20066
  %rx_desc_info15 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %20, i32 0, i32 14, !dbg !20067
  %ring16 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %rx_desc_info15, i32 0, i32 0, !dbg !20068
  store %struct.ksz_desc* null, %struct.ksz_desc** %ring16, align 8, !dbg !20069
  %21 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20070
  %tx_desc_info17 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %21, i32 0, i32 15, !dbg !20071
  %ring18 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info17, i32 0, i32 0, !dbg !20072
  %22 = load %struct.ksz_desc*, %struct.ksz_desc** %ring18, align 8, !dbg !20072
  %23 = bitcast %struct.ksz_desc* %22 to i8*, !dbg !20070
  call void @kfree(i8* %23) #12, !dbg !20073
  %24 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20074
  %tx_desc_info19 = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %24, i32 0, i32 15, !dbg !20075
  %ring20 = getelementptr inbounds %struct.ksz_desc_info, %struct.ksz_desc_info* %tx_desc_info19, i32 0, i32 0, !dbg !20076
  store %struct.ksz_desc* null, %struct.ksz_desc** %ring20, align 8, !dbg !20077
  ret void, !dbg !20078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !20079 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !20082, metadata !DIExpression()), !dbg !20083
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20084, metadata !DIExpression()), !dbg !20085
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !20086, metadata !DIExpression()), !dbg !20087
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !20088, metadata !DIExpression()), !dbg !20089
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !20090
  %1 = load i64, i64* %size.addr, align 8, !dbg !20091
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !20092
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !20093
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #12, !dbg !20094
  ret void, !dbg !20095
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !20096 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !20099, metadata !DIExpression()), !dbg !20100
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !20101
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !20102
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !20103
  ret i8* %call, !dbg !20104
}

; Function Attrs: noredzone
declare dso_local void @pci_dev_put(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !20105 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !20108, metadata !DIExpression()), !dbg !20109
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !20110
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !20111
  %1 = load i8*, i8** %driver_data, align 8, !dbg !20111
  ret i8* %1, !dbg !20112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcidev_suspend(%struct.device* %dev_d) #2 !dbg !8318 {
entry:
  %dev_d.addr = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %info = alloca %struct.platform_info*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.device* %dev_d, %struct.device** %dev_d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev_d.addr, metadata !20113, metadata !DIExpression()), !dbg !20114
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20115, metadata !DIExpression()), !dbg !20116
  call void @llvm.dbg.declare(metadata %struct.platform_info** %info, metadata !20117, metadata !DIExpression()), !dbg !20118
  %0 = load %struct.device*, %struct.device** %dev_d.addr, align 8, !dbg !20119
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !20120
  %1 = bitcast i8* %call to %struct.platform_info*, !dbg !20120
  store %struct.platform_info* %1, %struct.platform_info** %info, align 8, !dbg !20118
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !20121, metadata !DIExpression()), !dbg !20122
  %2 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !20123
  %dev_info = getelementptr inbounds %struct.platform_info, %struct.platform_info* %2, i32 0, i32 0, !dbg !20124
  store %struct.dev_info* %dev_info, %struct.dev_info** %hw_priv, align 8, !dbg !20122
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !20125, metadata !DIExpression()), !dbg !20126
  %3 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !20127
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %3, i32 0, i32 2, !dbg !20128
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !20126
  store i32 0, i32* %i, align 4, !dbg !20129
  br label %for.cond, !dbg !20131

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !20132
  %5 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20134
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %5, i32 0, i32 4, !dbg !20135
  %6 = load i32, i32* %dev_count, align 8, !dbg !20135
  %cmp = icmp slt i32 %4, %6, !dbg !20136
  br i1 %cmp, label %for.body, label %for.end, !dbg !20137

for.body:                                         ; preds = %for.cond
  %7 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !20138
  %netdev = getelementptr inbounds %struct.platform_info, %struct.platform_info* %7, i32 0, i32 1, !dbg !20141
  %8 = load i32, i32* %i, align 4, !dbg !20142
  %idxprom = sext i32 %8 to i64, !dbg !20138
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev, i64 0, i64 %idxprom, !dbg !20138
  %9 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !20138
  %tobool = icmp ne %struct.net_device* %9, null, !dbg !20138
  br i1 %tobool, label %if.then, label %if.end8, !dbg !20143

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20144, metadata !DIExpression()), !dbg !20146
  %10 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !20147
  %netdev2 = getelementptr inbounds %struct.platform_info, %struct.platform_info* %10, i32 0, i32 1, !dbg !20148
  %11 = load i32, i32* %i, align 4, !dbg !20149
  %idxprom3 = sext i32 %11 to i64, !dbg !20147
  %arrayidx4 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev2, i64 0, i64 %idxprom3, !dbg !20147
  %12 = load %struct.net_device*, %struct.net_device** %arrayidx4, align 8, !dbg !20147
  store %struct.net_device* %12, %struct.net_device** %dev, align 8, !dbg !20146
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20150
  %call5 = call zeroext i1 @netif_running(%struct.net_device* %13) #12, !dbg !20152
  br i1 %call5, label %if.then6, label %if.end, !dbg !20153

if.then6:                                         ; preds = %if.then
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20154
  call void @netif_device_detach(%struct.net_device* %14) #12, !dbg !20156
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20157
  %call7 = call i32 @netdev_close(%struct.net_device* %15) #12, !dbg !20158
  br label %if.end, !dbg !20159

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end8, !dbg !20160

if.end8:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !20161

for.inc:                                          ; preds = %if.end8
  %16 = load i32, i32* %i, align 4, !dbg !20162
  %inc = add i32 %16, 1, !dbg !20162
  store i32 %inc, i32* %i, align 4, !dbg !20162
  br label %for.cond, !dbg !20163, !llvm.loop !20164

for.end:                                          ; preds = %for.cond
  %17 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !20166
  %wol_enable = getelementptr inbounds %struct.dev_info, %struct.dev_info* %17, i32 0, i32 17, !dbg !20168
  %18 = load i32, i32* %wol_enable, align 8, !dbg !20168
  %tobool9 = icmp ne i32 %18, 0, !dbg !20166
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !20169

if.then10:                                        ; preds = %for.end
  %19 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20170
  %20 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !20172
  %wol_enable11 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %20, i32 0, i32 17, !dbg !20173
  %21 = load i32, i32* %wol_enable11, align 8, !dbg !20173
  call void @hw_enable_wol(%struct.ksz_hw* %19, i32 %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @pcidev_suspend.net_addr, i64 0, i64 0)) #12, !dbg !20174
  %22 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20175
  call void @hw_cfg_wol_pme(%struct.ksz_hw* %22, i32 1) #12, !dbg !20176
  br label %if.end12, !dbg !20177

if.end12:                                         ; preds = %if.then10, %for.end
  %23 = load %struct.device*, %struct.device** %dev_d.addr, align 8, !dbg !20178
  %call13 = call i32 @device_wakeup_enable(%struct.device* %23) #12, !dbg !20179
  ret i32 0, !dbg !20180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcidev_resume(%struct.device* %dev_d) #2 !dbg !20181 {
entry:
  %dev_d.addr = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %info = alloca %struct.platform_info*, align 8
  %hw_priv = alloca %struct.dev_info*, align 8
  %hw = alloca %struct.ksz_hw*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.device* %dev_d, %struct.device** %dev_d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev_d.addr, metadata !20182, metadata !DIExpression()), !dbg !20183
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20184, metadata !DIExpression()), !dbg !20185
  call void @llvm.dbg.declare(metadata %struct.platform_info** %info, metadata !20186, metadata !DIExpression()), !dbg !20187
  %0 = load %struct.device*, %struct.device** %dev_d.addr, align 8, !dbg !20188
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !20189
  %1 = bitcast i8* %call to %struct.platform_info*, !dbg !20189
  store %struct.platform_info* %1, %struct.platform_info** %info, align 8, !dbg !20187
  call void @llvm.dbg.declare(metadata %struct.dev_info** %hw_priv, metadata !20190, metadata !DIExpression()), !dbg !20191
  %2 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !20192
  %dev_info = getelementptr inbounds %struct.platform_info, %struct.platform_info* %2, i32 0, i32 0, !dbg !20193
  store %struct.dev_info* %dev_info, %struct.dev_info** %hw_priv, align 8, !dbg !20191
  call void @llvm.dbg.declare(metadata %struct.ksz_hw** %hw, metadata !20194, metadata !DIExpression()), !dbg !20195
  %3 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !20196
  %hw1 = getelementptr inbounds %struct.dev_info, %struct.dev_info* %3, i32 0, i32 2, !dbg !20197
  store %struct.ksz_hw* %hw1, %struct.ksz_hw** %hw, align 8, !dbg !20195
  %4 = load %struct.device*, %struct.device** %dev_d.addr, align 8, !dbg !20198
  %call2 = call i32 @device_wakeup_disable(%struct.device* %4) #12, !dbg !20199
  %5 = load %struct.dev_info*, %struct.dev_info** %hw_priv, align 8, !dbg !20200
  %wol_enable = getelementptr inbounds %struct.dev_info, %struct.dev_info* %5, i32 0, i32 17, !dbg !20202
  %6 = load i32, i32* %wol_enable, align 8, !dbg !20202
  %tobool = icmp ne i32 %6, 0, !dbg !20200
  br i1 %tobool, label %if.then, label %if.end, !dbg !20203

if.then:                                          ; preds = %entry
  %7 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20204
  call void @hw_cfg_wol_pme(%struct.ksz_hw* %7, i32 0) #12, !dbg !20205
  br label %if.end, !dbg !20205

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !20206
  br label %for.cond, !dbg !20208

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !20209
  %9 = load %struct.ksz_hw*, %struct.ksz_hw** %hw, align 8, !dbg !20211
  %dev_count = getelementptr inbounds %struct.ksz_hw, %struct.ksz_hw* %9, i32 0, i32 4, !dbg !20212
  %10 = load i32, i32* %dev_count, align 8, !dbg !20212
  %cmp = icmp slt i32 %8, %10, !dbg !20213
  br i1 %cmp, label %for.body, label %for.end, !dbg !20214

for.body:                                         ; preds = %for.cond
  %11 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !20215
  %netdev = getelementptr inbounds %struct.platform_info, %struct.platform_info* %11, i32 0, i32 1, !dbg !20218
  %12 = load i32, i32* %i, align 4, !dbg !20219
  %idxprom = sext i32 %12 to i64, !dbg !20215
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev, i64 0, i64 %idxprom, !dbg !20215
  %13 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !20215
  %tobool3 = icmp ne %struct.net_device* %13, null, !dbg !20215
  br i1 %tobool3, label %if.then4, label %if.end12, !dbg !20220

if.then4:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20221, metadata !DIExpression()), !dbg !20223
  %14 = load %struct.platform_info*, %struct.platform_info** %info, align 8, !dbg !20224
  %netdev5 = getelementptr inbounds %struct.platform_info, %struct.platform_info* %14, i32 0, i32 1, !dbg !20225
  %15 = load i32, i32* %i, align 4, !dbg !20226
  %idxprom6 = sext i32 %15 to i64, !dbg !20224
  %arrayidx7 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %netdev5, i64 0, i64 %idxprom6, !dbg !20224
  %16 = load %struct.net_device*, %struct.net_device** %arrayidx7, align 8, !dbg !20224
  store %struct.net_device* %16, %struct.net_device** %dev, align 8, !dbg !20223
  %17 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20227
  %call8 = call zeroext i1 @netif_running(%struct.net_device* %17) #12, !dbg !20229
  br i1 %call8, label %if.then9, label %if.end11, !dbg !20230

if.then9:                                         ; preds = %if.then4
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20231
  %call10 = call i32 @netdev_open(%struct.net_device* %18) #12, !dbg !20233
  %19 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20234
  call void @netif_device_attach(%struct.net_device* %19) #12, !dbg !20235
  br label %if.end11, !dbg !20236

if.end11:                                         ; preds = %if.then9, %if.then4
  br label %if.end12, !dbg !20237

if.end12:                                         ; preds = %if.end11, %for.body
  br label %for.inc, !dbg !20238

for.inc:                                          ; preds = %if.end12
  %20 = load i32, i32* %i, align 4, !dbg !20239
  %inc = add i32 %20, 1, !dbg !20239
  store i32 %inc, i32* %i, align 4, !dbg !20239
  br label %for.cond, !dbg !20240, !llvm.loop !20241

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !20243
}

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @device_wakeup_enable(%struct.device*) #1

; Function Attrs: noredzone
declare dso_local i32 @device_wakeup_disable(%struct.device*) #1

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { noredzone nounwind }
attributes #16 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!8344}
!llvm.module.flags = !{!8345, !8346, !8347, !8348}
!llvm.ident = !{!8349}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_device_driver_init335", scope: !2, file: !3, line: 7227, type: !591, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7442, globals: !8096, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/micrel/ksz884x.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !6492, !4289, !4384, !5051, !5070, !6199, !6628, !6708, !6784, !6792, !7053, !7071, !7102, !7108, !7112, !7117, !7124, !7130, !7138, !7202, !7210, !7217, !7223, !7227, !7234, !7238, !7243, !7274, !7295, !7328, !7347}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7046)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !5520, !6036, !6040, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6111, !6112, !6113, !6393, !6394, !6395, !6396, !6399, !6402, !6405, !6408, !6411, !6412, !6425, !6426, !6427, !6428, !6429, !6430, !6437, !6438, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6480, !6483, !6484, !6485, !6486, !6487, !6488, !6489, !6490, !6491, !6496, !6497, !6498, !6503, !6540, !7001, !7003, !7004, !7008, !7009, !7010, !7011, !7017, !7019, !7022, !7025, !7027, !7028, !7029, !7030, !7031, !7035, !7038}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !5480, !5500, !5504, !5510, !5516}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 19, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !5473}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !5452, !5453, !5471, !5472}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !5097, !5101, !5105, !5106, !5110, !5116, !5117, !5118, !5119, !5120, !5124, !5128, !5132, !5133, !5134, !5138, !5139, !5151, !5155, !5159, !5171, !5360, !5364, !5368, !5373, !5377, !5381, !5385, !5391, !5395, !5402, !5406, !5408, !5409}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !5047, !5048, !5049, !5050, !5059, !5060, !5061, !5062, !5063, !5064, !5080, !5081, !5090, !5091, !5092, !5093, !5094, !5095, !5096}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !5016, !5017, !5029, !5030, !5031, !5032, !5033, !5039, !5040, !5041}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !4745, !4746, !4747, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4992, !5000, !5001, !5002, !5012, !5013, !5014, !5015}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1597, !4347, !4435, !4518, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4534, !4538, !4539, !4542, !4543, !4546, !4547, !4548, !4589, !4616, !4617, !4618, !4619, !4620, !4621, !4624, !4626, !4632, !4633, !4635, !4636, !4637, !4696, !4697, !4712, !4713, !4714, !4715, !4716, !4719, !4720, !4721, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1566, !1570, !1574, !1578, !1579, !1580, !1584, !1588, !1589, !1590, !1594, !1595, !1596}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1565, line: 28, flags: DIFlagFwdDecl)
!1565 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1338, !1554, !32, !292, !591}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1545}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1581, size: 64, offset: 512)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1581, file: !277, line: 183, baseType: !280, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1585, offset: 576)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1586, line: 187, elements: !1587)
!1586 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1587 = !{}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1585, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1585, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1591, offset: 576)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 3)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1585, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1585, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1585, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1598, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1601)
!1601 = !{!1602, !1606, !1610, !1611, !1615, !1621, !1625, !1626, !1627, !1631, !1635, !1636, !1637, !1638, !1644, !1648, !1649, !1712, !1713, !1714, !1715, !4331, !4346}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1600, file: !1317, line: 1936, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1375, !1545}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1600, file: !1317, line: 1937, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1375}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1600, file: !1317, line: 1938, baseType: !1607, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1600, file: !1317, line: 1940, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{null, !1375, !32}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1600, file: !1317, line: 1941, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!32, !1375, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1600, file: !1317, line: 1942, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!32, !1375}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1600, file: !1317, line: 1943, baseType: !1607, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1600, file: !1317, line: 1944, baseType: !1575, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1600, file: !1317, line: 1945, baseType: !1628, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!32, !1545, !32}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1600, file: !1317, line: 1946, baseType: !1632, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!32, !1545}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1600, file: !1317, line: 1947, baseType: !1632, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1600, file: !1317, line: 1948, baseType: !1632, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1600, file: !1317, line: 1949, baseType: !1632, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1600, file: !1317, line: 1950, baseType: !1639, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!32, !1338, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1600, file: !1317, line: 1951, baseType: !1645, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!32, !1545, !1001, !1038}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1600, file: !1317, line: 1952, baseType: !1575, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1600, file: !1317, line: 1954, baseType: !1650, size: 64, offset: 1024)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!32, !1653, !1338}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1655, line: 16, size: 896, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1685, !1707, !1708, !1711}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1654, file: !1655, line: 17, baseType: !1038, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1654, file: !1655, line: 18, baseType: !1039, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1654, file: !1655, line: 19, baseType: !1039, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1654, file: !1655, line: 20, baseType: !1039, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1654, file: !1655, line: 21, baseType: !1039, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !1655, line: 22, baseType: !1476, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1654, file: !1655, line: 23, baseType: !1476, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1655, line: 24, baseType: !1665, size: 192, offset: 448)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1666, line: 53, size: 192, elements: !1667)
!1666 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1667 = !{!1668, !1669, !1684}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1665, file: !1666, line: 54, baseType: !371, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1665, file: !1666, line: 55, baseType: !1670, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1671, line: 83, baseType: !1672)
!1671 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1671, line: 71, elements: !1673)
!1673 = !{!1674}
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1671, line: 72, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1671, line: 72, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1675, file: !1671, line: 73, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1671, line: 20, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1678, file: !1671, line: 21, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1682, line: 25, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 25, elements: !1587)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1665, file: !1666, line: 59, baseType: !284, size: 128, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1654, file: !1655, line: 25, baseType: !1686, size: 64, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1655, line: 31, size: 256, elements: !1689)
!1689 = !{!1690, !1695, !1699, !1703}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1688, file: !1655, line: 32, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!591, !1653, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1688, file: !1655, line: 33, baseType: !1696, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1653, !591}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1655, line: 34, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!591, !1653, !591, !1694}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1688, file: !1655, line: 35, baseType: !1704, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!32, !1653, !591}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1654, file: !1655, line: 26, baseType: !32, size: 32, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1654, file: !1655, line: 27, baseType: !1709, size: 64, offset: 768)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1654, file: !1655, line: 28, baseType: !591, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1600, file: !1317, line: 1955, baseType: !1650, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1600, file: !1317, line: 1956, baseType: !1650, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1600, file: !1317, line: 1957, baseType: !1650, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1600, file: !1317, line: 1963, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!32, !1545, !1719, !1742}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1721, line: 68, size: 512, align: 128, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !4323, !4330}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 69, baseType: !312, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 77, baseType: !1725, size: 320, offset: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 77, size: 320, elements: !1726)
!1726 = !{!1727, !2032, !2037, !2065, !2073, !2079, !4247, !4322}
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 78, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 78, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !2030, !2031}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1728, file: !1721, line: 84, baseType: !284, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1728, file: !1721, line: 86, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1744, !1745, !1746, !1754, !1763, !1764, !1765, !1766, !2023, !2024, !2027, !2028, !2029}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1733, file: !1317, line: 452, baseType: !1375, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1733, file: !1317, line: 453, baseType: !1737, size: 128, offset: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1738, line: 292, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1737, file: !1738, line: 293, baseType: !1670)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1737, file: !1738, line: 295, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1737, file: !1738, line: 296, baseType: !591, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1733, file: !1317, line: 454, baseType: !1742, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1733, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1733, file: !1317, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1748)
!1748 = !{!1749, !1753}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !434, line: 126, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1750, file: !434, line: 32, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1733, file: !1317, line: 461, baseType: !1755, size: 256, offset: 384)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1756, line: 35, size: 256, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 36, baseType: !371, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1755, file: !1756, line: 42, baseType: !371, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1755, file: !1756, line: 46, baseType: !1761, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1671, line: 29, baseType: !1678)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1755, file: !1756, line: 47, baseType: !284, size: 128, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1733, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1733, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1733, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1733, file: !1317, line: 465, baseType: !1767, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1770)
!1770 = !{!1771, !1775, !1779, !1783, !1787, !1791, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1987, !1991, !1997, !1998, !1999, !2003, !2008, !2012, !2019}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1769, file: !1317, line: 368, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!32, !1719, !1619}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1769, file: !1317, line: 369, baseType: !1776, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!32, !1315, !1719}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1769, file: !1317, line: 372, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!32, !1732, !1619}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1769, file: !1317, line: 375, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!32, !1719}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1769, file: !1317, line: 381, baseType: !1788, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!32, !1315, !1732, !287, !7}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1769, file: !1317, line: 383, baseType: !1792, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1769, file: !1317, line: 385, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!32, !1315, !1732, !1476, !7, !7, !1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1769, file: !1317, line: 388, baseType: !1804, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!32, !1315, !1732, !1476, !7, !7, !1719, !591}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1769, file: !1317, line: 393, baseType: !1808, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1732, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1769, file: !1317, line: 394, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1719, !7, !7}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1769, file: !1317, line: 395, baseType: !1817, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!32, !1719, !1742}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1769, file: !1317, line: 396, baseType: !1821, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1719}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1769, file: !1317, line: 397, baseType: !1825, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1521, !1828, !1848}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1837, !1838, !1839, !1840, !1841}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1829, file: !1317, line: 321, baseType: !1315, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1829, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1829, file: !1317, line: 327, baseType: !1834, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !1828, !998, !998}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1829, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1829, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1829, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1829, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !1317, line: 332, baseType: !1842, size: 64, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1829, file: !1317, line: 332, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1842, file: !1317, line: 333, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1842, file: !1317, line: 334, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1850, line: 29, size: 320, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854, !1855, !1978}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1850, line: 35, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1849, file: !1850, line: 36, baseType: !1039, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1850, line: 37, baseType: !1039, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 38, baseType: !1856, size: 64, offset: 192)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 38, size: 64, elements: !1857)
!1857 = !{!1858, !1866, !1873, !1882}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1856, file: !1850, line: 39, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1862, line: 17, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1861, file: !1862, line: 19, baseType: !591, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1861, file: !1862, line: 20, baseType: !1040, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1856, file: !1850, line: 40, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1850, line: 15, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1869, file: !1850, line: 16, baseType: !591, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1869, file: !1850, line: 17, baseType: !1039, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1856, file: !1850, line: 41, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1877, line: 31, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1876, file: !1877, line: 32, baseType: !1719, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1876, file: !1877, line: 33, baseType: !7, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1876, file: !1877, line: 34, baseType: !7, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1856, file: !1850, line: 42, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1885, line: 57, size: 1088, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1924, !1925, !1952}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1884, file: !1885, line: 58, baseType: !1665, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1890, line: 40, baseType: !1891)
!1890 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1890, line: 36, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1891, file: !1890, line: 37, baseType: !1670)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1890, line: 38, baseType: !284, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1884, file: !1885, line: 60, baseType: !7, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1884, file: !1885, line: 61, baseType: !7, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1884, file: !1885, line: 62, baseType: !7, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1884, file: !1885, line: 63, baseType: !7, size: 32, offset: 544)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1884, file: !1885, line: 67, baseType: !7, size: 32, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1884, file: !1885, line: 68, baseType: !7, size: 32, offset: 608)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1884, file: !1885, line: 69, baseType: !7, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1884, file: !1885, line: 70, baseType: !7, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1884, file: !1885, line: 71, baseType: !7, size: 32, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1884, file: !1885, line: 72, baseType: !7, size: 32, offset: 736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1884, file: !1885, line: 73, baseType: !1719, size: 64, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1884, file: !1885, line: 74, baseType: !1908, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1910)
!1910 = !{!1911, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1909, file: !1317, line: 1315, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1913, line: 20, baseType: !1914)
!1913 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1913, line: 11, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1914, file: !1913, line: 12, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1682, line: 33, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 31, elements: !1587)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1909, file: !1317, line: 1316, baseType: !32, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1909, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1909, file: !1317, line: 1318, baseType: !1908, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1909, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1909, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1884, file: !1885, line: 75, baseType: !1908, size: 64, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1884, file: !1885, line: 76, baseType: !1926, size: 64, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1885, line: 26, size: 320, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1950, !1951}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1927, file: !1885, line: 27, baseType: !1719, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1885, line: 29, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1885, line: 93, size: 256, elements: !1936)
!1936 = !{!1937, !1941, !1945, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1935, file: !1885, line: 101, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!32, !1883, !1926}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1935, file: !1885, line: 107, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1883, !1926}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1935, file: !1885, line: 117, baseType: !1946, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!771, !1883, !1926}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1935, file: !1885, line: 122, baseType: !1946, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1885, line: 30, baseType: !7, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1927, file: !1885, line: 31, baseType: !312, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1884, file: !1885, line: 77, baseType: !1953, size: 64, offset: 1024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1955, line: 13, size: 896, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1954, file: !1955, line: 14, baseType: !568, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1954, file: !1955, line: 15, baseType: !383, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1954, file: !1955, line: 16, baseType: !383, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1954, file: !1955, line: 21, baseType: !371, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1954, file: !1955, line: 27, baseType: !312, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1954, file: !1955, line: 28, baseType: !312, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1954, file: !1955, line: 29, baseType: !371, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1954, file: !1955, line: 32, baseType: !276, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1954, file: !1955, line: 33, baseType: !1382, size: 32, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1954, file: !1955, line: 37, baseType: !371, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1954, file: !1955, line: 44, baseType: !1968, size: 256, offset: 640)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1969, line: 15, size: 256, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1968, file: !1969, line: 16, baseType: !1761)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1968, file: !1969, line: 18, baseType: !32, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1968, file: !1969, line: 19, baseType: !32, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1968, file: !1969, line: 20, baseType: !32, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1968, file: !1969, line: 21, baseType: !32, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1968, file: !1969, line: 22, baseType: !312, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1968, file: !1969, line: 23, baseType: !312, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 44, baseType: !1979, size: 64, offset: 256)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 44, size: 64, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1979, file: !1850, line: 45, baseType: !312, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !1850, line: 46, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1850, line: 46, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1983, file: !1850, line: 47, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1983, file: !1850, line: 48, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1769, file: !1317, line: 402, baseType: !1988, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!32, !1732, !1719, !1719, !5}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1769, file: !1317, line: 404, baseType: !1992, size: 64, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!771, !1719, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1996, line: 305, baseType: !7)
!1996 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1769, file: !1317, line: 405, baseType: !1821, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1769, file: !1317, line: 406, baseType: !1784, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1769, file: !1317, line: 407, baseType: !2000, size: 64, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!32, !1719, !312, !312}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1769, file: !1317, line: 409, baseType: !2004, size: 64, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !1719, !2007, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1769, file: !1317, line: 410, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!32, !1732, !1719}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1769, file: !1317, line: 413, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!32, !2016, !1315, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1769, file: !1317, line: 415, baseType: !2020, size: 64, offset: 1344)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1315}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1733, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1733, file: !1317, line: 467, baseType: !2025, size: 32, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2026, line: 8, baseType: !987)
!2026 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1733, file: !1317, line: 468, baseType: !1670, offset: 992)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1733, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1733, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1728, file: !1721, line: 87, baseType: !312, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1728, file: !1721, line: 94, baseType: !312, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 96, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 96, size: 64, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2033, file: !1721, line: 101, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 103, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 103, size: 320, elements: !2039)
!2039 = !{!2040, !2050, !2053, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 104, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2041, file: !1721, line: 105, baseType: !284, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !1721, line: 106, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2041, file: !1721, line: 106, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1721, line: 107, baseType: !1719, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2045, file: !1721, line: 109, baseType: !32, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2045, file: !1721, line: 110, baseType: !32, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2038, file: !1721, line: 117, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1721, line: 117, flags: DIFlagFwdDecl)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2038, file: !1721, line: 119, baseType: !591, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 120, baseType: !2055, size: 64, offset: 256)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 120, size: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2055, file: !1721, line: 121, baseType: !591, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2055, file: !1721, line: 122, baseType: !312, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !1721, line: 123, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !1721, line: 123, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2060, file: !1721, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2060, file: !1721, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2060, file: !1721, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 130, baseType: !2066, size: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 130, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2066, file: !1721, line: 131, baseType: !312, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2066, file: !1721, line: 134, baseType: !482, size: 8, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2066, file: !1721, line: 135, baseType: !482, size: 8, offset: 72)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2066, file: !1721, line: 136, baseType: !383, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2066, file: !1721, line: 137, baseType: !7, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 139, baseType: !2074, size: 256)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 139, size: 256, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2074, file: !1721, line: 140, baseType: !312, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2074, file: !1721, line: 141, baseType: !383, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2074, file: !1721, line: 143, baseType: !284, size: 128, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 145, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 145, size: 256, elements: !2081)
!2081 = !{!2082, !2083, !2086, !2087, !4246}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2080, file: !1721, line: 146, baseType: !312, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2080, file: !1721, line: 147, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2085, line: 509, baseType: !1719)
!2085 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2080, file: !1721, line: 148, baseType: !312, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !1721, line: 149, baseType: !2088, size: 64, offset: 192)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !1721, line: 149, size: 64, elements: !2089)
!2089 = !{!2090, !4245}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2088, file: !1721, line: 150, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1721, line: 388, size: 7296, elements: !2093)
!2093 = !{!2094, !4243}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !1721, line: 389, baseType: !2095, size: 7296)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2092, file: !1721, line: 389, size: 7296, elements: !2096)
!2096 = !{!2097, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2274, !2277, !2316, !2317, !4227, !4228, !4231, !4232, !4233, !4236, !4237, !4238, !4241, !4242}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2095, file: !1721, line: 390, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1721, line: 305, size: 1472, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2115, !2116, !2121, !2122, !2125, !2209, !2210, !2211, !2212, !2213}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2099, file: !1721, line: 308, baseType: !312, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2099, file: !1721, line: 309, baseType: !312, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2099, file: !1721, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2099, file: !1721, line: 323, baseType: !312, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2099, file: !1721, line: 327, baseType: !2091, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2099, file: !1721, line: 333, baseType: !2109, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2085, line: 284, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2085, line: 284, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2110, file: !2085, line: 284, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2114, line: 19, baseType: !312)
!2114 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2099, file: !1721, line: 334, baseType: !312, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2099, file: !1721, line: 343, baseType: !2117, size: 256, offset: 704)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !1721, line: 340, size: 256, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !1721, line: 341, baseType: !433, size: 192, align: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2117, file: !1721, line: 342, baseType: !312, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2099, file: !1721, line: 351, baseType: !284, size: 128, offset: 960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2099, file: !1721, line: 353, baseType: !2123, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1721, line: 353, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2099, file: !1721, line: 356, baseType: !2126, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2129)
!2129 = !{!2130, !2134, !2135, !2139, !2143, !2183, !2187, !2191, !2195, !2196, !2197, !2201, !2205}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2128, file: !14, line: 558, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2098}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2128, file: !14, line: 559, baseType: !2131, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2128, file: !14, line: 560, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!32, !2098, !312}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2128, file: !14, line: 561, baseType: !2140, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!32, !2098}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2128, file: !14, line: 562, baseType: !2144, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1721, line: 682, baseType: !7)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2163, !2170, !2176, !2177, !2178, !2180, !2182}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2149, file: !14, line: 509, baseType: !2098, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2149, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2149, file: !14, line: 511, baseType: !1742, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2149, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2149, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2149, file: !14, line: 514, baseType: !2157, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2085, line: 385, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 385, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2159, file: !2085, line: 385, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2114, line: 15, baseType: !312)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2149, file: !14, line: 516, baseType: !2164, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2085, line: 359, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 359, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2166, file: !2085, line: 359, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2114, line: 16, baseType: !312)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2149, file: !14, line: 519, baseType: !2171, size: 64, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2114, line: 21, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2114, line: 21, size: 64, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2172, file: !2114, line: 21, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2114, line: 14, baseType: !312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2149, file: !14, line: 521, baseType: !1719, size: 64, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2149, file: !14, line: 522, baseType: !1719, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2149, file: !14, line: 528, baseType: !2179, size: 64, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2149, file: !14, line: 532, baseType: !2181, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2149, file: !14, line: 536, baseType: !2084, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2128, file: !14, line: 563, baseType: !2184, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2147, !2148, !13}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2128, file: !14, line: 565, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2148, !312, !312}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2128, file: !14, line: 567, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!312, !2098}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2128, file: !14, line: 571, baseType: !2144, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2128, file: !14, line: 574, baseType: !2144, size: 64, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2128, file: !14, line: 579, baseType: !2198, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!32, !2098, !312, !591, !32, !32}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !14, line: 585, baseType: !2202, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!292, !2098}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2128, file: !14, line: 615, baseType: !2206, size: 64, offset: 768)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!1719, !2098, !312}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2099, file: !1721, line: 359, baseType: !312, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2099, file: !1721, line: 361, baseType: !1315, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2099, file: !1721, line: 362, baseType: !591, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2099, file: !1721, line: 365, baseType: !371, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2099, file: !1721, line: 373, baseType: !2214, offset: 1472)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1721, line: 296, elements: !1587)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2095, file: !1721, line: 391, baseType: !1750, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2095, file: !1721, line: 392, baseType: !331, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2095, file: !1721, line: 394, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!312, !1315, !312, !312, !312, !312}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2095, file: !1721, line: 398, baseType: !312, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2095, file: !1721, line: 399, baseType: !312, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2095, file: !1721, line: 405, baseType: !312, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2095, file: !1721, line: 406, baseType: !312, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2095, file: !1721, line: 407, baseType: !2226, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2085, line: 286, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 286, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2228, file: !2085, line: 286, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2114, line: 18, baseType: !312)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2095, file: !1721, line: 416, baseType: !383, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2095, file: !1721, line: 428, baseType: !383, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2095, file: !1721, line: 437, baseType: !383, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2095, file: !1721, line: 447, baseType: !383, size: 32, offset: 672)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2095, file: !1721, line: 450, baseType: !371, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2095, file: !1721, line: 452, baseType: !32, size: 32, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2095, file: !1721, line: 454, baseType: !1670, offset: 800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2095, file: !1721, line: 457, baseType: !1755, size: 256, offset: 832)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2095, file: !1721, line: 459, baseType: !284, size: 128, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2095, file: !1721, line: 466, baseType: !312, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2095, file: !1721, line: 467, baseType: !312, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2095, file: !1721, line: 469, baseType: !312, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2095, file: !1721, line: 470, baseType: !312, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2095, file: !1721, line: 471, baseType: !373, size: 64, offset: 1472)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2095, file: !1721, line: 472, baseType: !312, size: 64, offset: 1536)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2095, file: !1721, line: 473, baseType: !312, size: 64, offset: 1600)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2095, file: !1721, line: 474, baseType: !312, size: 64, offset: 1664)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2095, file: !1721, line: 475, baseType: !312, size: 64, offset: 1728)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2095, file: !1721, line: 477, baseType: !1670, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1792)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1920)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1984)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2112)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2240)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2304)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2368)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2432)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2095, file: !1721, line: 482, baseType: !2263, size: 2816, offset: 2496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 44)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2095, file: !1721, line: 488, baseType: !2267, size: 256, offset: 5312)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2268, line: 60, size: 256, elements: !2269)
!2268 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !2268, line: 61, baseType: !2271, size: 256)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2095, file: !1721, line: 490, baseType: !2275, size: 64, offset: 5568)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1721, line: 490, flags: DIFlagFwdDecl)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2095, file: !1721, line: 493, baseType: !2278, size: 896, offset: 5632)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2279, line: 53, baseType: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2279, line: 13, size: 896, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2288, !2289, !2290, !2291, !2311, !2312, !2313}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2280, file: !2279, line: 18, baseType: !331, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2280, file: !2279, line: 28, baseType: !373, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2280, file: !2279, line: 31, baseType: !1755, size: 256, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2280, file: !2279, line: 32, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2279, line: 32, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2280, file: !2279, line: 37, baseType: !476, size: 16, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 40, baseType: !1665, size: 192, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2280, file: !2279, line: 41, baseType: !591, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2280, file: !2279, line: 42, baseType: !2292, size: 64, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2295, line: 13, size: 896, elements: !2296)
!2295 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2294, file: !2295, line: 14, baseType: !591, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2295, line: 15, baseType: !312, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2294, file: !2295, line: 19, baseType: !998, size: 64, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2294, file: !2295, line: 21, baseType: !998, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2294, file: !2295, line: 22, baseType: !998, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2294, file: !2295, line: 23, baseType: !998, size: 64, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2294, file: !2295, line: 24, baseType: !998, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2294, file: !2295, line: 25, baseType: !998, size: 64, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2294, file: !2295, line: 26, baseType: !998, size: 64, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2294, file: !2295, line: 27, baseType: !998, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2294, file: !2295, line: 28, baseType: !998, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2294, file: !2295, line: 29, baseType: !998, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2280, file: !2279, line: 44, baseType: !383, size: 32, offset: 832)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2280, file: !2279, line: 50, baseType: !581, size: 16, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2280, file: !2279, line: 51, baseType: !2314, size: 16, offset: 880)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2095, file: !1721, line: 495, baseType: !312, size: 64, offset: 6528)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2095, file: !1721, line: 497, baseType: !2318, size: 64, offset: 6592)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1721, line: 381, size: 384, elements: !2320)
!2320 = !{!2321, !2322, !4226}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2319, file: !1721, line: 382, baseType: !383, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2319, file: !1721, line: 383, baseType: !2323, size: 128, offset: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1721, line: 376, size: 128, elements: !2324)
!2324 = !{!2325, !4224}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2323, file: !1721, line: 377, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2328, line: 640, size: 48640, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2336, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2351, !2369, !2380, !2461, !2462, !2463, !2474, !2475, !2477, !2478, !2479, !2480, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2591, !2593, !2594, !2595, !2607, !2608, !2609, !2610, !2611, !2612, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2636, !2641, !2949, !2950, !2951, !2952, !2953, !2956, !2959, !2962, !2965, !3687, !3783, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3831, !3832, !3833, !3834, !3835, !3840, !3841, !3842, !3845, !3846, !3849, !3852, !3855, !3858, !3890, !3893, !3894, !3973, !3974, !3977, !3978, !3981, !3982, !3983, !3987, !3988, !3989, !4002, !4003, !4004, !4014, !4019, !4020, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2327, file: !2328, line: 646, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2332, line: 56, size: 128, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2331, file: !2332, line: 57, baseType: !312, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2331, file: !2332, line: 58, baseType: !987, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2327, file: !2328, line: 649, baseType: !2337, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2327, file: !2328, line: 657, baseType: !591, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2327, file: !2328, line: 658, baseType: !568, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2328, line: 660, baseType: !7, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2327, file: !2328, line: 661, baseType: !7, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2327, file: !2328, line: 684, baseType: !32, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !2328, line: 686, baseType: !32, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2327, file: !2328, line: 687, baseType: !32, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2327, file: !2328, line: 688, baseType: !32, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2327, file: !2328, line: 689, baseType: !7, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2327, file: !2328, line: 691, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2328, line: 691, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2327, file: !2328, line: 692, baseType: !2352, size: 832, offset: 576)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2328, line: 451, size: 832, elements: !2353)
!2353 = !{!2354, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2352, file: !2328, line: 453, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2328, line: 325, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2355, file: !2328, line: 326, baseType: !312, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2355, file: !2328, line: 327, baseType: !987, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2352, file: !2328, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2352, file: !2328, line: 455, baseType: !284, size: 128, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2352, file: !2328, line: 456, baseType: !7, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2352, file: !2328, line: 458, baseType: !331, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2352, file: !2328, line: 459, baseType: !331, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2352, file: !2328, line: 460, baseType: !331, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2352, file: !2328, line: 461, baseType: !331, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2352, file: !2328, line: 463, baseType: !331, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2352, file: !2328, line: 465, baseType: !2368, offset: 832)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2328, line: 415, elements: !1587)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2327, file: !2328, line: 693, baseType: !2370, size: 384, offset: 1408)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2328, line: 489, size: 384, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2370, file: !2328, line: 490, baseType: !284, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2370, file: !2328, line: 491, baseType: !312, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2370, file: !2328, line: 492, baseType: !312, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2370, file: !2328, line: 493, baseType: !7, size: 32, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2370, file: !2328, line: 494, baseType: !476, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2370, file: !2328, line: 495, baseType: !476, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2370, file: !2328, line: 497, baseType: !2379, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2327, file: !2328, line: 697, baseType: !2381, size: 1792, offset: 1792)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2328, line: 507, size: 1792, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2458, !2459}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2381, file: !2328, line: 508, baseType: !433, size: 192, align: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2381, file: !2328, line: 515, baseType: !331, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2381, file: !2328, line: 516, baseType: !331, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2381, file: !2328, line: 517, baseType: !331, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2381, file: !2328, line: 518, baseType: !331, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2381, file: !2328, line: 519, baseType: !331, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2381, file: !2328, line: 526, baseType: !377, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2381, file: !2328, line: 527, baseType: !331, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !2328, line: 528, baseType: !7, size: 32, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2381, file: !2328, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2381, file: !2328, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2381, file: !2328, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2381, file: !2328, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2381, file: !2328, line: 563, baseType: !2397, size: 512, offset: 704)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2398)
!2398 = !{!2399, !2405, !2406, !2411, !2454, !2455, !2456, !2457}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !20, line: 119, baseType: !2400, size: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2401, line: 9, size: 256, elements: !2402)
!2401 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2400, file: !2401, line: 10, baseType: !433, size: 192, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2400, file: !2401, line: 11, baseType: !453, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2397, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2397, file: !20, line: 121, baseType: !2407, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!19, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2397, file: !20, line: 122, baseType: !2412, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2414)
!2414 = !{!2415, !2435, !2436, !2439, !2444, !2445, !2449, !2453}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2413, file: !20, line: 160, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !20, line: 215, baseType: !1761)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2417, file: !20, line: 216, baseType: !7, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2417, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2417, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2417, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2417, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2417, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2417, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2417, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2417, file: !20, line: 234, baseType: !2410, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2417, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2417, file: !20, line: 236, baseType: !2410, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2417, file: !20, line: 237, baseType: !2432, size: 4096, offset: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 4096, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2413, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2413, file: !20, line: 162, baseType: !2437, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2413, file: !20, line: 163, baseType: !2440, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2441, file: !1344, line: 276, baseType: !1348, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2413, file: !20, line: 164, baseType: !2410, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2413, file: !20, line: 165, baseType: !2446, size: 128, offset: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2401, line: 14, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2446, file: !2401, line: 15, baseType: !1747, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2413, file: !20, line: 166, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2397, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2397, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2397, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2381, file: !2328, line: 572, baseType: !2397, size: 512, offset: 1216)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2381, file: !2328, line: 580, baseType: !2460, size: 64, offset: 1728)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2327, file: !2328, line: 721, baseType: !7, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2327, file: !2328, line: 722, baseType: !32, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2327, file: !2328, line: 723, baseType: !2464, size: 64, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2467, line: 17, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2467, line: 17, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2468, file: !2467, line: 17, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 1)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2327, file: !2328, line: 724, baseType: !2466, size: 64, offset: 3712)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2327, file: !2328, line: 749, baseType: !2476, offset: 3776)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2328, line: 290, elements: !1587)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2327, file: !2328, line: 751, baseType: !284, size: 128, offset: 3776)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2327, file: !2328, line: 757, baseType: !2091, size: 64, offset: 3904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2327, file: !2328, line: 758, baseType: !2091, size: 64, offset: 3968)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2327, file: !2328, line: 761, baseType: !2481, size: 320, offset: 4032)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2268, line: 34, size: 320, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2481, file: !2268, line: 35, baseType: !331, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2481, file: !2268, line: 36, baseType: !2485, size: 256, offset: 64)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 256, elements: !2272)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2327, file: !2328, line: 766, baseType: !32, size: 32, offset: 4352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2327, file: !2328, line: 767, baseType: !32, size: 32, offset: 4384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2327, file: !2328, line: 768, baseType: !32, size: 32, offset: 4416)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2327, file: !2328, line: 770, baseType: !32, size: 32, offset: 4448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2327, file: !2328, line: 772, baseType: !312, size: 64, offset: 4480)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2327, file: !2328, line: 775, baseType: !7, size: 32, offset: 4544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2327, file: !2328, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2327, file: !2328, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2327, file: !2328, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2327, file: !2328, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2327, file: !2328, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2327, file: !2328, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2327, file: !2328, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2327, file: !2328, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2327, file: !2328, line: 831, baseType: !312, size: 64, offset: 4672)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2327, file: !2328, line: 833, baseType: !2502, size: 384, offset: 4736)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2503)
!2503 = !{!2504, !2509}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2502, file: !25, line: 26, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!998, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !25, line: 27, baseType: !2510, size: 320, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !25, line: 27, size: 320, elements: !2511)
!2511 = !{!2512, !2522, !2548}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2510, file: !25, line: 36, baseType: !2513, size: 320)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 29, size: 320, elements: !2514)
!2514 = !{!2515, !2517, !2518, !2519, !2520, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2513, file: !25, line: 30, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2513, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2513, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2513, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2513, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2513, file: !25, line: 35, baseType: !2516, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2510, file: !25, line: 46, baseType: !2523, size: 192)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 38, size: 192, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2547}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2523, file: !25, line: 39, baseType: !2437, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2523, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !25, line: 41, baseType: !2528, size: 64, offset: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !25, line: 41, size: 64, elements: !2529)
!2529 = !{!2530, !2538}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2528, file: !25, line: 42, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2533, line: 7, size: 128, elements: !2534)
!2533 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2532, file: !2533, line: 8, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2532, file: !2533, line: 9, baseType: !379, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2528, file: !25, line: 43, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2541, line: 7, size: 64, elements: !2542)
!2541 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2540, file: !2541, line: 8, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2541, line: 5, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2540, file: !2541, line: 9, baseType: !2545, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2523, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2510, file: !25, line: 54, baseType: !2549, size: 256)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 48, size: 256, elements: !2550)
!2550 = !{!2551, !2554, !2555, !2556, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2549, file: !25, line: 49, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2549, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2549, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2549, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2549, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2327, file: !2328, line: 835, baseType: !2559, size: 32, offset: 5120)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2327, file: !2328, line: 836, baseType: !2559, size: 32, offset: 5152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2327, file: !2328, line: 840, baseType: !312, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2327, file: !2328, line: 849, baseType: !2326, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2327, file: !2328, line: 852, baseType: !2326, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !2328, line: 857, baseType: !284, size: 128, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2327, file: !2328, line: 858, baseType: !284, size: 128, offset: 5504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2327, file: !2328, line: 859, baseType: !2326, size: 64, offset: 5632)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2327, file: !2328, line: 867, baseType: !284, size: 128, offset: 5696)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2327, file: !2328, line: 868, baseType: !284, size: 128, offset: 5824)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2327, file: !2328, line: 871, baseType: !2571, size: 64, offset: 5952)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2573, line: 59, size: 768, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2572, file: !2573, line: 61, baseType: !568, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2572, file: !2573, line: 62, baseType: !7, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !2573, line: 63, baseType: !1670, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2572, file: !2573, line: 65, baseType: !2579, size: 256, offset: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2572, file: !2573, line: 66, baseType: !1581, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2572, file: !2573, line: 68, baseType: !1889, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2572, file: !2573, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2572, file: !2573, line: 70, baseType: !2584, size: 128, offset: 640)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 128, elements: !2472)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2573, line: 54, size: 128, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2585, file: !2573, line: 55, baseType: !32, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2585, file: !2573, line: 56, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2573, line: 56, flags: DIFlagFwdDecl)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2327, file: !2328, line: 872, baseType: !2592, size: 512, offset: 6016)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2272)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2327, file: !2328, line: 873, baseType: !284, size: 128, offset: 6528)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2327, file: !2328, line: 874, baseType: !284, size: 128, offset: 6656)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2327, file: !2328, line: 876, baseType: !2596, size: 64, offset: 6784)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2598, line: 26, size: 192, elements: !2599)
!2598 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2597, file: !2598, line: 27, baseType: !7, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2597, file: !2598, line: 28, baseType: !2602, size: 128, offset: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2603, line: 43, size: 128, elements: !2604)
!2603 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2604 = !{!2605, !2606}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2602, file: !2603, line: 44, baseType: !1761)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2602, file: !2603, line: 45, baseType: !284, size: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2327, file: !2328, line: 879, baseType: !1001, size: 64, offset: 6848)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2327, file: !2328, line: 882, baseType: !1001, size: 64, offset: 6912)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2328, line: 884, baseType: !331, size: 64, offset: 6976)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2328, line: 885, baseType: !331, size: 64, offset: 7040)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2327, file: !2328, line: 890, baseType: !331, size: 64, offset: 7104)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2327, file: !2328, line: 891, baseType: !2613, size: 128, offset: 7168)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2328, line: 242, size: 128, elements: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2613, file: !2328, line: 244, baseType: !331, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2613, file: !2328, line: 245, baseType: !331, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2613, file: !2328, line: 246, baseType: !1761, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2327, file: !2328, line: 900, baseType: !312, size: 64, offset: 7296)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2327, file: !2328, line: 901, baseType: !312, size: 64, offset: 7360)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2327, file: !2328, line: 904, baseType: !331, size: 64, offset: 7424)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2327, file: !2328, line: 907, baseType: !331, size: 64, offset: 7488)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2327, file: !2328, line: 910, baseType: !312, size: 64, offset: 7552)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2327, file: !2328, line: 911, baseType: !312, size: 64, offset: 7616)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2327, file: !2328, line: 914, baseType: !2625, size: 640, offset: 7680)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2626, line: 123, size: 640, elements: !2627)
!2626 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2627 = !{!2628, !2634, !2635}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2625, file: !2626, line: 124, baseType: !2629, size: 576)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2630, size: 576, elements: !1592)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2626, line: 108, size: 192, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2630, file: !2626, line: 109, baseType: !331, size: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2630, file: !2626, line: 110, baseType: !2446, size: 128, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2625, file: !2626, line: 125, baseType: !7, size: 32, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2625, file: !2626, line: 126, baseType: !7, size: 32, offset: 608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2327, file: !2328, line: 917, baseType: !2637, size: 192, offset: 8320)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2626, line: 134, size: 192, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2637, file: !2626, line: 135, baseType: !299, size: 128, align: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2637, file: !2626, line: 136, baseType: !7, size: 32, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2327, file: !2328, line: 923, baseType: !2642, size: 64, offset: 8512)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2645, line: 111, size: 1280, elements: !2646)
!2645 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2666, !2667, !2668, !2669, !2670, !2671, !2776, !2777, !2778, !2779, !2780, !2936, !2944}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2644, file: !2645, line: 112, baseType: !383, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2644, file: !2645, line: 120, baseType: !1382, size: 32, offset: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2644, file: !2645, line: 121, baseType: !1390, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2644, file: !2645, line: 122, baseType: !1382, size: 32, offset: 96)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2644, file: !2645, line: 123, baseType: !1390, size: 32, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2644, file: !2645, line: 124, baseType: !1382, size: 32, offset: 160)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2644, file: !2645, line: 125, baseType: !1390, size: 32, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2644, file: !2645, line: 126, baseType: !1382, size: 32, offset: 224)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2644, file: !2645, line: 127, baseType: !1390, size: 32, offset: 256)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2644, file: !2645, line: 128, baseType: !7, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2644, file: !2645, line: 129, baseType: !2658, size: 64, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2659, line: 26, baseType: !2660)
!2659 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2659, line: 24, size: 64, elements: !2661)
!2661 = !{!2662}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2660, file: !2659, line: 25, baseType: !2663, size: 64)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2664)
!2664 = !{!2665}
!2665 = !DISubrange(count: 2)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2644, file: !2645, line: 130, baseType: !2658, size: 64, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2644, file: !2645, line: 131, baseType: !2658, size: 64, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2644, file: !2645, line: 132, baseType: !2658, size: 64, offset: 512)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2644, file: !2645, line: 133, baseType: !2658, size: 64, offset: 576)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2644, file: !2645, line: 135, baseType: !482, size: 8, offset: 640)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2644, file: !2645, line: 137, baseType: !2672, size: 64, offset: 704)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2674, line: 189, size: 1664, elements: !2675)
!2674 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2675 = !{!2676, !2677, !2680, !2685, !2686, !2689, !2690, !2695, !2696, !2697, !2698, !2700, !2701, !2702, !2703, !2704, !2740, !2761}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2673, file: !2674, line: 190, baseType: !568, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2673, file: !2674, line: 191, baseType: !2678, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2674, line: 28, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2545)
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 192, baseType: !2681, size: 192, offset: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 192, size: 192, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2681, file: !2674, line: 193, baseType: !284, size: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2681, file: !2674, line: 194, baseType: !433, size: 192, align: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2673, file: !2674, line: 199, baseType: !1755, size: 256, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2673, file: !2674, line: 200, baseType: !2687, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2674, line: 200, flags: DIFlagFwdDecl)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2673, file: !2674, line: 201, baseType: !591, size: 64, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 202, baseType: !2691, size: 64, offset: 640)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 202, size: 64, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2691, file: !2674, line: 203, baseType: !1483, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2691, file: !2674, line: 204, baseType: !1483, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2673, file: !2674, line: 206, baseType: !1483, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2673, file: !2674, line: 207, baseType: !1382, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2673, file: !2674, line: 208, baseType: !1390, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2673, file: !2674, line: 209, baseType: !2699, size: 32, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2674, line: 31, baseType: !1502)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2673, file: !2674, line: 210, baseType: !476, size: 16, offset: 864)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2673, file: !2674, line: 211, baseType: !476, size: 16, offset: 880)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2673, file: !2674, line: 215, baseType: !625, size: 16, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2673, file: !2674, line: 222, baseType: !312, size: 64, offset: 960)
!2704 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 239, baseType: !2705, size: 320, offset: 1024)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 239, size: 320, elements: !2706)
!2706 = !{!2707, !2732}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2705, file: !2674, line: 240, baseType: !2708, size: 320)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2674, line: 108, size: 320, elements: !2709)
!2709 = !{!2710, !2711, !2721, !2724, !2731}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2708, file: !2674, line: 110, baseType: !312, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2708, file: !2674, line: 111, baseType: !2712, size: 64, offset: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2708, file: !2674, line: 111, size: 64, elements: !2713)
!2713 = !{!2714, !2720}
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2674, line: 112, baseType: !2715, size: 64)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2712, file: !2674, line: 112, size: 64, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2715, file: !2674, line: 114, baseType: !581, size: 16)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2715, file: !2674, line: 115, baseType: !2719, size: 48, offset: 16)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2712, file: !2674, line: 121, baseType: !312, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2708, file: !2674, line: 123, baseType: !2722, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2674, line: 96, flags: DIFlagFwdDecl)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2708, file: !2674, line: 124, baseType: !2725, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2674, line: 102, size: 192, elements: !2727)
!2727 = !{!2728, !2729, !2730}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2726, file: !2674, line: 103, baseType: !299, size: 128, align: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2726, file: !2674, line: 104, baseType: !568, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2726, file: !2674, line: 105, baseType: !771, size: 8, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2708, file: !2674, line: 125, baseType: !292, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !2674, line: 241, baseType: !2733, size: 320)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2674, line: 241, size: 320, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2739}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2733, file: !2674, line: 242, baseType: !312, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2733, file: !2674, line: 243, baseType: !312, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2733, file: !2674, line: 244, baseType: !2722, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2733, file: !2674, line: 245, baseType: !2725, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2733, file: !2674, line: 246, baseType: !1038, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 254, baseType: !2741, size: 256, offset: 1344)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 254, size: 256, elements: !2742)
!2742 = !{!2743, !2749}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2741, file: !2674, line: 255, baseType: !2744, size: 256)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2674, line: 128, size: 256, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2744, file: !2674, line: 129, baseType: !591, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2744, file: !2674, line: 130, baseType: !2748, size: 256)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2272)
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2674, line: 256, baseType: !2750, size: 256)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2741, file: !2674, line: 256, size: 256, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2750, file: !2674, line: 258, baseType: !284, size: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2750, file: !2674, line: 259, baseType: !2754, size: 128, offset: 128)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2755, line: 22, size: 128, elements: !2756)
!2755 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2756 = !{!2757, !2760}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2754, file: !2755, line: 23, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2755, line: 23, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2754, file: !2755, line: 24, baseType: !312, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2673, file: !2674, line: 274, baseType: !2762, size: 64, offset: 1600)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2674, line: 170, size: 192, elements: !2764)
!2764 = !{!2765, !2774, !2775}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2763, file: !2674, line: 171, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2674, line: 165, baseType: !2767)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!32, !2672, !2770, !2772, !2672}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2723)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2744)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2763, file: !2674, line: 172, baseType: !2672, size: 64, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2763, file: !2674, line: 173, baseType: !2722, size: 64, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2644, file: !2645, line: 138, baseType: !2672, size: 64, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2644, file: !2645, line: 139, baseType: !2672, size: 64, offset: 832)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2644, file: !2645, line: 140, baseType: !2672, size: 64, offset: 896)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2644, file: !2645, line: 145, baseType: !1953, size: 64, offset: 960)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2644, file: !2645, line: 146, baseType: !2781, size: 64, offset: 1024)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2783, line: 56, size: 4160, elements: !2784)
!2783 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2784 = !{!2785, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2824, !2825, !2826, !2827, !2828, !2840, !2921, !2922, !2934}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2782, file: !2783, line: 57, baseType: !2786, size: 576)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2783, line: 23, size: 576, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2786, file: !2783, line: 24, baseType: !987, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2783, line: 25, baseType: !2790, size: 512, offset: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2783, line: 25, size: 512, elements: !2791)
!2791 = !{!2792, !2801}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2790, file: !2783, line: 26, baseType: !2793, size: 480)
!2793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2794, size: 480, elements: !2799)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2783, line: 17, size: 96, elements: !2795)
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2794, file: !2783, line: 18, baseType: !987, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2794, file: !2783, line: 19, baseType: !987, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2794, file: !2783, line: 20, baseType: !987, size: 32, offset: 64)
!2799 = !{!2800}
!2800 = !DISubrange(count: 5)
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2790, file: !2783, line: 27, baseType: !2802, size: 128)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2790, file: !2783, line: 27, size: 128, elements: !2803)
!2803 = !{!2804, !2806}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2802, file: !2783, line: 28, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2802, file: !2783, line: 29, baseType: !2805, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2782, file: !2783, line: 58, baseType: !2786, size: 576, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2782, file: !2783, line: 59, baseType: !2786, size: 576, offset: 1152)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2782, file: !2783, line: 60, baseType: !383, size: 32, offset: 1728)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2782, file: !2783, line: 61, baseType: !2781, size: 64, offset: 1792)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2782, file: !2783, line: 62, baseType: !32, size: 32, offset: 1856)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2782, file: !2783, line: 63, baseType: !1382, size: 32, offset: 1888)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2782, file: !2783, line: 64, baseType: !1390, size: 32, offset: 1920)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2782, file: !2783, line: 65, baseType: !2815, size: 192, offset: 1984)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2816, line: 7, size: 192, elements: !2817)
!2816 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2819, !2823}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2815, file: !2816, line: 8, baseType: !371, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2815, file: !2816, line: 9, baseType: !2820, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2816, line: 5, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2815, file: !2816, line: 10, baseType: !7, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2782, file: !2783, line: 66, baseType: !312, size: 64, offset: 2176)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2782, file: !2783, line: 74, baseType: !284, size: 128, offset: 2240)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2782, file: !2783, line: 75, baseType: !2672, size: 64, offset: 2368)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2782, file: !2783, line: 76, baseType: !1755, size: 256, offset: 2432)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2782, file: !2783, line: 83, baseType: !2829, size: 256, offset: 2688)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2830, line: 102, size: 256, elements: !2831)
!2830 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2831 = !{!2832, !2833, !2834}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2829, file: !2830, line: 103, baseType: !371, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2829, file: !2830, line: 104, baseType: !284, size: 128, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2829, file: !2830, line: 105, baseType: !2835, size: 64, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2830, line: 21, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{null, !2839}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2782, file: !2783, line: 85, baseType: !2841, size: 768, offset: 2944)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2842, line: 156, size: 768, elements: !2843)
!2842 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2843 = !{!2844, !2849}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2841, file: !2842, line: 157, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!32, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2841, file: !2842, line: 158, baseType: !2850, size: 704, offset: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2842, line: 150, size: 704, elements: !2851)
!2851 = !{!2852, !2920}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2850, file: !2842, line: 152, baseType: !2853, size: 640)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2842, line: 131, size: 640, elements: !2854)
!2854 = !{!2855, !2888, !2889, !2890, !2910, !2911, !2913, !2919}
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2853, file: !2842, line: 132, baseType: !2856, size: 192)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2853, file: !2842, line: 132, size: 192, elements: !2857)
!2857 = !{!2858, !2887}
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !2842, line: 133, baseType: !2859, size: 192)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2856, file: !2842, line: 133, size: 192, elements: !2860)
!2860 = !{!2861, !2884, !2885, !2886}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2859, file: !2842, line: 134, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2842, line: 112, size: 512, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869, !2870, !2876, !2882, !2883}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2863, file: !2842, line: 113, baseType: !292, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2863, file: !2842, line: 114, baseType: !591, size: 64, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2863, file: !2842, line: 115, baseType: !32, size: 32, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2863, file: !2842, line: 116, baseType: !1379, size: 16, offset: 160)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2863, file: !2842, line: 117, baseType: !2862, size: 64, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2863, file: !2842, line: 118, baseType: !2871, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2842, line: 47, baseType: !2873)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!32, !2862, !32, !591, !2875, !1694}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2863, file: !2842, line: 119, baseType: !2877, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2842, line: 94, size: 192, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2878, file: !2842, line: 95, baseType: !383, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2878, file: !2842, line: 96, baseType: !1889, size: 128, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2863, file: !2842, line: 120, baseType: !591, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2863, file: !2842, line: 121, baseType: !591, size: 64, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2859, file: !2842, line: 135, baseType: !32, size: 32, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2859, file: !2842, line: 136, baseType: !32, size: 32, offset: 96)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2859, file: !2842, line: 137, baseType: !32, size: 32, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2856, file: !2842, line: 139, baseType: !299, size: 128, align: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2853, file: !2842, line: 141, baseType: !2596, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2853, file: !2842, line: 142, baseType: !2862, size: 64, offset: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2853, file: !2842, line: 143, baseType: !2891, size: 64, offset: 320)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2842, line: 161, size: 960, elements: !2893)
!2893 = !{!2894, !2895, !2899, !2906}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2892, file: !2842, line: 162, baseType: !2841, size: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2892, file: !2842, line: 163, baseType: !2896, size: 64, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!2848, !2891}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2892, file: !2842, line: 164, baseType: !2900, size: 64, offset: 832)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{null, !2903, !2862, !2904, !2905}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2892, file: !2842, line: 167, baseType: !2907, size: 64, offset: 896)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!32, !2903, !2862}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2853, file: !2842, line: 144, baseType: !2848, size: 64, offset: 384)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2853, file: !2842, line: 145, baseType: !2912, size: 64, offset: 448)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2853, file: !2842, line: 146, baseType: !2914, size: 64, offset: 512)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2842, line: 124, size: 256, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2915, file: !2842, line: 125, baseType: !433, size: 192, align: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2915, file: !2842, line: 126, baseType: !2903, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2853, file: !2842, line: 147, baseType: !1581, size: 64, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2850, file: !2842, line: 153, baseType: !1750, size: 64, offset: 640)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2782, file: !2783, line: 86, baseType: !2903, size: 64, offset: 3712)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2782, file: !2783, line: 88, baseType: !2923, size: 64, offset: 3776)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2783, line: 92, size: 576, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2924, file: !2783, line: 93, baseType: !276, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2924, file: !2783, line: 94, baseType: !2781, size: 64, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2924, file: !2783, line: 95, baseType: !1382, size: 32, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2924, file: !2783, line: 96, baseType: !32, size: 32, offset: 224)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2924, file: !2783, line: 97, baseType: !2931, size: 320, offset: 256)
!2931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2932)
!2932 = !{!2933}
!2933 = !DISubrange(count: 10)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2782, file: !2783, line: 89, baseType: !2935, size: 320, offset: 3840)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2932)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2644, file: !2645, line: 147, baseType: !2937, size: 64, offset: 1088)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2645, line: 25, size: 64, elements: !2939)
!2939 = !{!2940, !2941, !2942}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2938, file: !2645, line: 26, baseType: !383, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2938, file: !2645, line: 27, baseType: !32, size: 32, offset: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2938, file: !2645, line: 28, baseType: !2943, offset: 64)
!2943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2944 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 149, baseType: !2945, size: 128, offset: 1152)
!2945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 149, size: 128, elements: !2946)
!2946 = !{!2947, !2948}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2945, file: !2645, line: 150, baseType: !32, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2945, file: !2645, line: 151, baseType: !299, size: 128, align: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2327, file: !2328, line: 926, baseType: !2642, size: 64, offset: 8576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2327, file: !2328, line: 929, baseType: !2642, size: 64, offset: 8640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2327, file: !2328, line: 933, baseType: !2672, size: 64, offset: 8704)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2327, file: !2328, line: 943, baseType: !267, size: 128, offset: 8768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2327, file: !2328, line: 945, baseType: !2954, size: 64, offset: 8896)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2328, line: 49, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2327, file: !2328, line: 956, baseType: !2957, size: 64, offset: 8960)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2328, line: 45, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !2328, line: 959, baseType: !2960, size: 64, offset: 9024)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2328, line: 959, flags: DIFlagFwdDecl)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2327, file: !2328, line: 962, baseType: !2963, size: 64, offset: 9088)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2328, line: 66, flags: DIFlagFwdDecl)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2327, file: !2328, line: 966, baseType: !2966, size: 64, offset: 9152)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2968, line: 31, size: 576, elements: !2969)
!2968 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2969 = !{!2970, !2971, !2974, !2977, !2980, !2981, !3670, !3673, !3674}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2967, file: !2968, line: 32, baseType: !383, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2967, file: !2968, line: 33, baseType: !2972, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2968, line: 9, flags: DIFlagFwdDecl)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2967, file: !2968, line: 34, baseType: !2975, size: 64, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2968, line: 10, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2967, file: !2968, line: 35, baseType: !2978, size: 64, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2968, line: 8, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2967, file: !2968, line: 36, baseType: !2589, size: 64, offset: 256)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2967, file: !2968, line: 37, baseType: !2982, size: 64, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2984, line: 56, size: 16896, elements: !2985)
!2984 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3007, !3008, !3009, !3013, !3014, !3015, !3016, !3017, !3020, !3022, !3023, !3038, !3039, !3040, !3041, !3051, !3121, !3127, !3133, !3146, !3455, !3609, !3616, !3619, !3642, !3643, !3669}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2983, file: !2984, line: 60, baseType: !568, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2983, file: !2984, line: 63, baseType: !568, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2983, file: !2984, line: 66, baseType: !1670, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2983, file: !2984, line: 68, baseType: !7, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2983, file: !2984, line: 70, baseType: !7, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2983, file: !2984, line: 71, baseType: !32, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2983, file: !2984, line: 73, baseType: !1670, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2983, file: !2984, line: 74, baseType: !383, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2983, file: !2984, line: 76, baseType: !284, size: 128, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2983, file: !2984, line: 77, baseType: !284, size: 128, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2983, file: !2984, line: 83, baseType: !1323, size: 64, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2983, file: !2984, line: 86, baseType: !2725, size: 64, offset: 512)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2983, file: !2984, line: 88, baseType: !2781, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2983, file: !2984, line: 89, baseType: !2923, size: 64, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2983, file: !2984, line: 90, baseType: !3001, size: 192, offset: 704)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3002, line: 19, size: 192, elements: !3003)
!3002 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3003 = !{!3004, !3005, !3006}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3001, file: !3002, line: 20, baseType: !1737, size: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3001, file: !3002, line: 21, baseType: !7, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3001, file: !3002, line: 22, baseType: !7, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2983, file: !2984, line: 92, baseType: !2815, size: 192, offset: 896)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2983, file: !2984, line: 94, baseType: !284, size: 128, offset: 1088)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2983, file: !2984, line: 95, baseType: !3010, size: 64, offset: 1216)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3012, line: 123, flags: DIFlagFwdDecl)
!3012 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2983, file: !2984, line: 96, baseType: !3010, size: 64, offset: 1280)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2983, file: !2984, line: 99, baseType: !2841, size: 768, offset: 1344)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2983, file: !2984, line: 102, baseType: !445, size: 64, offset: 2112)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2983, file: !2984, line: 103, baseType: !445, size: 64, offset: 2176)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2983, file: !2984, line: 105, baseType: !3018, size: 64, offset: 2240)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2984, line: 48, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2983, file: !2984, line: 107, baseType: !3021, size: 64, offset: 2304)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2983, file: !2984, line: 108, baseType: !3021, size: 64, offset: 2368)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2983, file: !2984, line: 109, baseType: !3024, size: 64, offset: 2432)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3025, line: 70, size: 64, elements: !3026)
!3025 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3024, file: !3025, line: 71, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3025, line: 54, size: 192, elements: !3030)
!3030 = !{!3031, !3036, !3037}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3029, file: !3025, line: 55, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3025, line: 51, baseType: !3033)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!32, !3028, !312, !591}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3029, file: !3025, line: 56, baseType: !3028, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3029, file: !3025, line: 57, baseType: !32, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2983, file: !2984, line: 114, baseType: !987, size: 32, offset: 2496)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2983, file: !2984, line: 116, baseType: !290, size: 64, offset: 2560)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2983, file: !2984, line: 119, baseType: !284, size: 128, offset: 2624)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2983, file: !2984, line: 121, baseType: !3042, size: 256, offset: 2752)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3043, line: 8, size: 256, elements: !3044)
!3043 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !{!3045, !3046, !3047, !3048}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3042, file: !3043, line: 10, baseType: !2903, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3042, file: !3043, line: 12, baseType: !32, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3042, file: !3043, line: 15, baseType: !1001, size: 64, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3042, file: !3043, line: 16, baseType: !3049, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3043, line: 6, flags: DIFlagFwdDecl)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2983, file: !2984, line: 122, baseType: !3052, size: 832, offset: 3008)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3053, line: 7, size: 832, elements: !3054)
!3053 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3054 = !{!3055, !3062, !3073, !3081, !3089, !3090, !3098, !3106, !3107, !3108, !3109, !3110, !3116}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3052, file: !3053, line: 8, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3058, line: 92, size: 1024, elements: !3059)
!3058 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3059 = !{!3060}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3057, file: !3058, line: 93, baseType: !3061, size: 1024)
!3061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3052, file: !3053, line: 9, baseType: !3063, size: 64, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3058, line: 51, size: 2368, elements: !3065)
!3065 = !{!3066, !3070}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3064, file: !3058, line: 53, baseType: !3067, size: 2368)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3068)
!3068 = !{!3069}
!3069 = !DISubrange(count: 37)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3064, file: !3058, line: 54, baseType: !3071, offset: 2368)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3072, line: 68, elements: !1587)
!3072 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3052, file: !3053, line: 10, baseType: !3074, size: 64, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3058, line: 104, size: 7936, elements: !3076)
!3076 = !{!3077}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3075, file: !3058, line: 105, baseType: !3078, size: 7936)
!3078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3079)
!3079 = !{!3080}
!3080 = !DISubrange(count: 124)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3052, file: !3053, line: 11, baseType: !3082, size: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3058, line: 98, size: 576, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3083, file: !3058, line: 99, baseType: !3086, size: 576)
!3086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3087)
!3087 = !{!3088}
!3088 = !DISubrange(count: 9)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3052, file: !3053, line: 12, baseType: !3082, size: 64, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3052, file: !3053, line: 13, baseType: !3091, size: 64, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3058, line: 59, size: 1792, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3092, file: !3058, line: 60, baseType: !3095, size: 1792)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3096)
!3096 = !{!3097}
!3097 = !DISubrange(count: 28)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3052, file: !3053, line: 14, baseType: !3099, size: 64, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3058, line: 64, size: 32768, elements: !3101)
!3101 = !{!3102}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3100, file: !3058, line: 65, baseType: !3103, size: 32768)
!3103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3104)
!3104 = !{!3105}
!3105 = !DISubrange(count: 512)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3052, file: !3053, line: 17, baseType: !3010, size: 64, offset: 448)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3052, file: !3053, line: 18, baseType: !3082, size: 64, offset: 512)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3052, file: !3053, line: 19, baseType: !3082, size: 64, offset: 576)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3052, file: !3053, line: 20, baseType: !3063, size: 64, offset: 640)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3052, file: !3053, line: 21, baseType: !3111, size: 64, offset: 704)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3058, line: 71, size: 384, elements: !3113)
!3113 = !{!3114}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3112, file: !3058, line: 72, baseType: !3115, size: 384)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3052, file: !3053, line: 22, baseType: !3117, size: 64, offset: 768)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3058, line: 81, size: 32768, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3118, file: !3058, line: 82, baseType: !3103, size: 32768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2983, file: !2984, line: 123, baseType: !3122, size: 256, offset: 3840)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3123, line: 11, size: 256, elements: !3124)
!3123 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3124 = !{!3125, !3126}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3122, file: !3123, line: 12, baseType: !1665, size: 192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3122, file: !3123, line: 13, baseType: !1581, size: 64, offset: 192)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2983, file: !2984, line: 124, baseType: !3128, size: 128, offset: 4096)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3129, line: 9, size: 128, elements: !3130)
!3129 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3128, file: !3129, line: 10, baseType: !32, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3128, file: !3129, line: 11, baseType: !2903, size: 64, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2983, file: !2984, line: 125, baseType: !3134, size: 512, offset: 4224)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3135, line: 11, size: 512, elements: !3136)
!3135 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3136 = !{!3137, !3138, !3139, !3140, !3141}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3134, file: !3135, line: 12, baseType: !1750, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3134, file: !3135, line: 13, baseType: !3021, size: 64, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3134, file: !3135, line: 15, baseType: !7, size: 32, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3134, file: !3135, line: 16, baseType: !987, size: 32, offset: 160)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3134, file: !3135, line: 17, baseType: !3142, size: 320, offset: 192)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3025, line: 65, size: 320, elements: !3143)
!3143 = !{!3144, !3145}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3142, file: !3025, line: 66, baseType: !1755, size: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3142, file: !3025, line: 67, baseType: !3028, size: 64, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2983, file: !2984, line: 126, baseType: !3147, size: 5440, offset: 4736)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3148, line: 43, size: 5440, elements: !3149)
!3148 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3158, !3159, !3162, !3163, !3164, !3165, !3166, !3167, !3169, !3170, !3173, !3174, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3399, !3400, !3401, !3402, !3403, !3411, !3412, !3413, !3417, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3437, !3438, !3440, !3441, !3444, !3445, !3446, !3447, !3448}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3147, file: !3148, line: 45, baseType: !2903, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3147, file: !3148, line: 46, baseType: !2903, size: 64, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3147, file: !3148, line: 47, baseType: !2903, size: 64, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3147, file: !3148, line: 48, baseType: !2903, size: 64, offset: 192)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3147, file: !3148, line: 49, baseType: !2903, size: 64, offset: 256)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3147, file: !3148, line: 51, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3148, line: 16, flags: DIFlagFwdDecl)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3147, file: !3148, line: 52, baseType: !3156, size: 64, offset: 384)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3147, file: !3148, line: 53, baseType: !3160, size: 64, offset: 448)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3148, line: 53, flags: DIFlagFwdDecl)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3147, file: !3148, line: 54, baseType: !1665, size: 192, offset: 512)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3147, file: !3148, line: 62, baseType: !771, size: 8, offset: 704)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3147, file: !3148, line: 66, baseType: !3021, size: 64, offset: 768)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3147, file: !3148, line: 67, baseType: !771, size: 8, offset: 832)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3147, file: !3148, line: 68, baseType: !445, size: 64, offset: 896)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3147, file: !3148, line: 70, baseType: !3168, size: 64, offset: 960)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3147, file: !3148, line: 71, baseType: !445, size: 64, offset: 1024)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3147, file: !3148, line: 73, baseType: !3171, size: 64, offset: 1088)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3148, line: 73, flags: DIFlagFwdDecl)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3147, file: !3148, line: 74, baseType: !3168, size: 64, offset: 1152)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3147, file: !3148, line: 75, baseType: !3175, size: 64, offset: 1216)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3177, line: 9, size: 1728, elements: !3178)
!3177 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3310, !3311, !3312, !3313, !3314}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3176, file: !3177, line: 11, baseType: !998, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3176, file: !3177, line: 12, baseType: !998, size: 64, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3176, file: !3177, line: 13, baseType: !32, size: 32, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3176, file: !3177, line: 14, baseType: !32, size: 32, offset: 160)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3176, file: !3177, line: 15, baseType: !3184, size: 64, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3177, line: 98, size: 960, elements: !3186)
!3186 = !{!3187, !3188, !3260, !3264, !3265, !3266, !3267, !3308, !3309}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3185, file: !3177, line: 99, baseType: !7, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3185, file: !3177, line: 101, baseType: !3189, size: 64, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{null, !3192, !3258}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3177, line: 77, size: 1408, elements: !3194)
!3194 = !{!3195, !3201, !3234, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3193, file: !3177, line: 78, baseType: !3196, size: 64)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3197, line: 17, size: 64, elements: !3198)
!3197 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3198 = !{!3199}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3196, file: !3197, line: 18, baseType: !3200, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3193, file: !3177, line: 82, baseType: !3202, size: 352, offset: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3193, file: !3177, line: 79, size: 352, elements: !3203)
!3203 = !{!3204, !3214}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3202, file: !3177, line: 80, baseType: !3205, size: 160)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3177, line: 41, size: 160, elements: !3206)
!3206 = !{!3207, !3209, !3210, !3211, !3212, !3213}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3205, file: !3177, line: 42, baseType: !3208, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3205, file: !3177, line: 43, baseType: !3208, size: 32, offset: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3205, file: !3177, line: 44, baseType: !987, size: 32, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3205, file: !3177, line: 45, baseType: !987, size: 32, offset: 96)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3205, file: !3177, line: 46, baseType: !535, size: 16, offset: 128)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3205, file: !3177, line: 47, baseType: !581, size: 16, offset: 144)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3202, file: !3177, line: 81, baseType: !3215, size: 352)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3177, line: 50, size: 352, elements: !3216)
!3216 = !{!3217, !3230, !3231, !3232, !3233}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3215, file: !3177, line: 51, baseType: !3218, size: 128)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3219, line: 33, size: 128, elements: !3220)
!3219 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3220 = !{!3221}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3218, file: !3219, line: 40, baseType: !3222, size: 128)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3218, file: !3219, line: 34, size: 128, elements: !3223)
!3223 = !{!3224, !3226, !3228}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3222, file: !3219, line: 35, baseType: !3225, size: 128)
!3225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3222, file: !3219, line: 37, baseType: !3227, size: 128)
!3227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2433)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3222, file: !3219, line: 38, baseType: !3229, size: 128)
!3229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 128, elements: !2272)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3215, file: !3177, line: 52, baseType: !3218, size: 128, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3215, file: !3177, line: 53, baseType: !987, size: 32, offset: 256)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3215, file: !3177, line: 54, baseType: !3208, size: 32, offset: 288)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3215, file: !3177, line: 55, baseType: !987, size: 32, offset: 320)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3193, file: !3177, line: 83, baseType: !3235, size: 320, offset: 448)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3236, line: 11, size: 320, elements: !3237)
!3236 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3237 = !{!3238, !3239, !3240, !3245}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3235, file: !3236, line: 16, baseType: !276, size: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3235, file: !3236, line: 17, baseType: !312, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3235, file: !3236, line: 18, baseType: !3241, size: 64, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{null, !3244}
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3235, file: !3236, line: 19, baseType: !987, size: 32, offset: 256)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3193, file: !3177, line: 84, baseType: !1670, offset: 768)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3193, file: !3177, line: 85, baseType: !568, size: 32, offset: 768)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3193, file: !3177, line: 86, baseType: !1750, size: 64, offset: 832)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3193, file: !3177, line: 87, baseType: !415, size: 64, offset: 896)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3193, file: !3177, line: 88, baseType: !415, size: 64, offset: 960)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3193, file: !3177, line: 89, baseType: !453, size: 64, offset: 1024)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3193, file: !3177, line: 90, baseType: !32, size: 32, offset: 1088)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3193, file: !3177, line: 91, baseType: !32, size: 32, offset: 1120)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3193, file: !3177, line: 92, baseType: !481, size: 8, offset: 1152)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3193, file: !3177, line: 93, baseType: !581, size: 16, offset: 1168)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3193, file: !3177, line: 94, baseType: !3175, size: 64, offset: 1216)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3193, file: !3177, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3185, file: !3177, line: 103, baseType: !3261, size: 64, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{null, !3192}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3185, file: !3177, line: 104, baseType: !3241, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3185, file: !3177, line: 105, baseType: !2051, size: 64, offset: 256)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3185, file: !3177, line: 106, baseType: !292, size: 64, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3185, file: !3177, line: 107, baseType: !3268, size: 320, offset: 384)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3197, line: 56, size: 320, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3282, !3284}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3268, file: !3197, line: 57, baseType: !581, size: 16)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3268, file: !3197, line: 58, baseType: !581, size: 16, offset: 16)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3268, file: !3197, line: 59, baseType: !581, size: 16, offset: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3268, file: !3197, line: 60, baseType: !581, size: 16, offset: 48)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3268, file: !3197, line: 61, baseType: !7, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3268, file: !3197, line: 62, baseType: !581, size: 16, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3268, file: !3197, line: 63, baseType: !771, size: 8, offset: 112)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3268, file: !3197, line: 64, baseType: !3278, size: 64, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3197, line: 38, baseType: !3279)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!987, !3258, !987, !987}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3268, file: !3197, line: 65, baseType: !3283, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3197, line: 39, baseType: !3279)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3268, file: !3197, line: 66, baseType: !3285, size: 64, offset: 256)
!3285 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3197, line: 40, baseType: !3286)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!32, !3289, !3258}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3197, line: 33, size: 128, elements: !3291)
!3291 = !{!3292, !3307}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3290, file: !3197, line: 34, baseType: !3293, size: 64)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3197, line: 81, size: 1024, elements: !3295)
!3295 = !{!3296, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3294, file: !3197, line: 82, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3197, line: 26, flags: DIFlagFwdDecl)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3294, file: !3197, line: 83, baseType: !7, size: 32, offset: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3294, file: !3197, line: 84, baseType: !7, size: 32, offset: 96)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3294, file: !3197, line: 85, baseType: !3268, size: 320, offset: 128)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3294, file: !3197, line: 86, baseType: !771, size: 8, offset: 448)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3294, file: !3197, line: 87, baseType: !2829, size: 256, offset: 512)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3294, file: !3197, line: 88, baseType: !1665, size: 192, offset: 768)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3294, file: !3197, line: 89, baseType: !1670, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3294, file: !3197, line: 90, baseType: !383, size: 32, offset: 960)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3290, file: !3197, line: 35, baseType: !3258, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3185, file: !3177, line: 108, baseType: !568, size: 32, offset: 704)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3185, file: !3177, line: 109, baseType: !2597, size: 192, offset: 768)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3176, file: !3177, line: 16, baseType: !2982, size: 64, offset: 256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3176, file: !3177, line: 17, baseType: !771, size: 8, offset: 320)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3176, file: !3177, line: 19, baseType: !3294, size: 1024, offset: 384)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3176, file: !3177, line: 22, baseType: !371, size: 64, offset: 1408)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3176, file: !3177, line: 23, baseType: !2829, size: 256, offset: 1472)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3147, file: !3148, line: 87, baseType: !32, size: 32, offset: 1280)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3147, file: !3148, line: 88, baseType: !32, size: 32, offset: 1312)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3147, file: !3148, line: 89, baseType: !32, size: 32, offset: 1344)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3147, file: !3148, line: 90, baseType: !32, size: 32, offset: 1376)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3147, file: !3148, line: 91, baseType: !32, size: 32, offset: 1408)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3147, file: !3148, line: 92, baseType: !32, size: 32, offset: 1440)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3147, file: !3148, line: 94, baseType: !3322, size: 128, offset: 1472)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3148, line: 21, size: 128, elements: !3323)
!3323 = !{!3324, !3330, !3332}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3322, file: !3148, line: 22, baseType: !3325, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3326)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3327)
!3327 = !{!3328, !3329}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3326, file: !1344, line: 803, baseType: !1343, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3326, file: !1344, line: 804, baseType: !1670, offset: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3322, file: !3148, line: 23, baseType: !3331, size: 64, offset: 32)
!3331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2664)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3322, file: !3148, line: 24, baseType: !771, size: 8, offset: 96)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3147, file: !3148, line: 96, baseType: !32, size: 32, offset: 1600)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3147, file: !3148, line: 97, baseType: !32, size: 32, offset: 1632)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3147, file: !3148, line: 99, baseType: !32, size: 32, offset: 1664)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3147, file: !3148, line: 100, baseType: !32, size: 32, offset: 1696)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3147, file: !3148, line: 101, baseType: !32, size: 32, offset: 1728)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3147, file: !3148, line: 102, baseType: !32, size: 32, offset: 1760)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3147, file: !3148, line: 103, baseType: !32, size: 32, offset: 1792)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3147, file: !3148, line: 104, baseType: !32, size: 32, offset: 1824)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3147, file: !3148, line: 106, baseType: !32, size: 32, offset: 1856)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3147, file: !3148, line: 107, baseType: !32, size: 32, offset: 1888)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3147, file: !3148, line: 111, baseType: !32, size: 32, offset: 1920)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3147, file: !3148, line: 112, baseType: !32, size: 32, offset: 1952)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3147, file: !3148, line: 114, baseType: !32, size: 32, offset: 1984)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3147, file: !3148, line: 116, baseType: !32, size: 32, offset: 2016)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3147, file: !3148, line: 117, baseType: !32, size: 32, offset: 2048)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3147, file: !3148, line: 121, baseType: !32, size: 32, offset: 2080)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3147, file: !3148, line: 122, baseType: !32, size: 32, offset: 2112)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3147, file: !3148, line: 123, baseType: !32, size: 32, offset: 2144)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3147, file: !3148, line: 124, baseType: !32, size: 32, offset: 2176)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3147, file: !3148, line: 125, baseType: !32, size: 32, offset: 2208)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3147, file: !3148, line: 126, baseType: !987, size: 32, offset: 2240)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3147, file: !3148, line: 128, baseType: !32, size: 32, offset: 2272)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3147, file: !3148, line: 129, baseType: !32, size: 32, offset: 2304)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3147, file: !3148, line: 130, baseType: !32, size: 32, offset: 2336)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3147, file: !3148, line: 132, baseType: !32, size: 32, offset: 2368)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3147, file: !3148, line: 133, baseType: !32, size: 32, offset: 2400)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3147, file: !3148, line: 134, baseType: !32, size: 32, offset: 2432)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3147, file: !3148, line: 135, baseType: !32, size: 32, offset: 2464)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3147, file: !3148, line: 136, baseType: !32, size: 32, offset: 2496)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3147, file: !3148, line: 137, baseType: !32, size: 32, offset: 2528)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3147, file: !3148, line: 138, baseType: !32, size: 32, offset: 2560)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3147, file: !3148, line: 139, baseType: !32, size: 32, offset: 2592)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3147, file: !3148, line: 140, baseType: !7, size: 32, offset: 2624)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3147, file: !3148, line: 141, baseType: !32, size: 32, offset: 2656)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3147, file: !3148, line: 142, baseType: !32, size: 32, offset: 2688)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3147, file: !3148, line: 143, baseType: !32, size: 32, offset: 2720)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3147, file: !3148, line: 144, baseType: !32, size: 32, offset: 2752)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3147, file: !3148, line: 145, baseType: !32, size: 32, offset: 2784)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3147, file: !3148, line: 146, baseType: !32, size: 32, offset: 2816)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3147, file: !3148, line: 147, baseType: !32, size: 32, offset: 2848)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3147, file: !3148, line: 148, baseType: !32, size: 32, offset: 2880)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3147, file: !3148, line: 149, baseType: !32, size: 32, offset: 2912)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3147, file: !3148, line: 150, baseType: !32, size: 32, offset: 2944)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3147, file: !3148, line: 151, baseType: !32, size: 32, offset: 2976)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3147, file: !3148, line: 152, baseType: !32, size: 32, offset: 3008)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3147, file: !3148, line: 153, baseType: !32, size: 32, offset: 3040)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3147, file: !3148, line: 154, baseType: !32, size: 32, offset: 3072)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3147, file: !3148, line: 155, baseType: !32, size: 32, offset: 3104)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3147, file: !3148, line: 156, baseType: !32, size: 32, offset: 3136)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3147, file: !3148, line: 157, baseType: !32, size: 32, offset: 3168)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3147, file: !3148, line: 158, baseType: !32, size: 32, offset: 3200)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3147, file: !3148, line: 159, baseType: !32, size: 32, offset: 3232)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3147, file: !3148, line: 160, baseType: !32, size: 32, offset: 3264)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3147, file: !3148, line: 161, baseType: !32, size: 32, offset: 3296)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3147, file: !3148, line: 162, baseType: !32, size: 32, offset: 3328)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3147, file: !3148, line: 163, baseType: !32, size: 32, offset: 3360)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3147, file: !3148, line: 164, baseType: !32, size: 32, offset: 3392)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3147, file: !3148, line: 165, baseType: !32, size: 32, offset: 3424)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3147, file: !3148, line: 166, baseType: !32, size: 32, offset: 3456)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3147, file: !3148, line: 167, baseType: !32, size: 32, offset: 3488)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3147, file: !3148, line: 168, baseType: !32, size: 32, offset: 3520)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3147, file: !3148, line: 169, baseType: !32, size: 32, offset: 3552)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3147, file: !3148, line: 170, baseType: !32, size: 32, offset: 3584)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3147, file: !3148, line: 171, baseType: !32, size: 32, offset: 3616)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3147, file: !3148, line: 172, baseType: !3398, size: 96, offset: 3648)
!3398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1592)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3147, file: !3148, line: 173, baseType: !3398, size: 96, offset: 3744)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3147, file: !3148, line: 174, baseType: !32, size: 32, offset: 3840)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3147, file: !3148, line: 175, baseType: !312, size: 64, offset: 3904)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3147, file: !3148, line: 176, baseType: !312, size: 64, offset: 3968)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3147, file: !3148, line: 177, baseType: !3404, size: 192, offset: 4032)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3148, line: 34, size: 192, elements: !3405)
!3405 = !{!3406, !3407, !3410}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3404, file: !3148, line: 35, baseType: !383, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3404, file: !3148, line: 37, baseType: !3408, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3148, line: 32, flags: DIFlagFwdDecl)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3404, file: !3148, line: 38, baseType: !32, size: 32, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3147, file: !3148, line: 178, baseType: !32, size: 32, offset: 4224)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3147, file: !3148, line: 179, baseType: !32, size: 32, offset: 4256)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3147, file: !3148, line: 180, baseType: !3414, size: 64, offset: 4288)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3416)
!3416 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3148, line: 180, flags: DIFlagFwdDecl)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3147, file: !3148, line: 181, baseType: !3418, size: 64, offset: 4352)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3148, line: 41, flags: DIFlagFwdDecl)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3147, file: !3148, line: 182, baseType: !1670, offset: 4416)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3147, file: !3148, line: 183, baseType: !7, size: 32, offset: 4416)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3147, file: !3148, line: 184, baseType: !383, size: 32, offset: 4448)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3147, file: !3148, line: 185, baseType: !312, size: 64, offset: 4480)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3147, file: !3148, line: 186, baseType: !32, size: 32, offset: 4544)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3147, file: !3148, line: 188, baseType: !32, size: 32, offset: 4576)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3147, file: !3148, line: 189, baseType: !32, size: 32, offset: 4608)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3147, file: !3148, line: 195, baseType: !32, size: 32, offset: 4640)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3147, file: !3148, line: 196, baseType: !32, size: 32, offset: 4672)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3147, file: !3148, line: 197, baseType: !32, size: 32, offset: 4704)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3147, file: !3148, line: 198, baseType: !32, size: 32, offset: 4736)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3147, file: !3148, line: 200, baseType: !3432, size: 96, offset: 4768)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3148, line: 27, size: 96, elements: !3433)
!3433 = !{!3434, !3435}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3432, file: !3148, line: 28, baseType: !3325, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3432, file: !3148, line: 29, baseType: !3436, size: 64, offset: 32)
!3436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2664)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3147, file: !3148, line: 202, baseType: !383, size: 32, offset: 4864)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3147, file: !3148, line: 205, baseType: !3439, size: 64, offset: 4928)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3147, file: !3148, line: 206, baseType: !32, size: 32, offset: 4992)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3147, file: !3148, line: 222, baseType: !3442, size: 64, offset: 5056)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3148, line: 222, flags: DIFlagFwdDecl)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3147, file: !3148, line: 223, baseType: !7, size: 32, offset: 5120)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3147, file: !3148, line: 225, baseType: !3442, size: 64, offset: 5184)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3147, file: !3148, line: 226, baseType: !7, size: 32, offset: 5248)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3147, file: !3148, line: 228, baseType: !383, size: 32, offset: 5280)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3147, file: !3148, line: 229, baseType: !3449, size: 128, offset: 5312)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3450, line: 22, baseType: !3451)
!3450 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3450, line: 20, size: 128, elements: !3452)
!3452 = !{!3453}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3451, file: !3450, line: 21, baseType: !3454, size: 128)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2664)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2983, file: !2984, line: 128, baseType: !3456, size: 4608, offset: 10176)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3457, line: 56, size: 4608, elements: !3458)
!3457 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3458 = !{!3459, !3499, !3502, !3503, !3504, !3505, !3508, !3511, !3514, !3515, !3516, !3519, !3520, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3600, !3601, !3602, !3603}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3456, file: !3457, line: 57, baseType: !3460, size: 1600)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3457, line: 15, size: 1600, elements: !3461)
!3461 = !{!3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3460, file: !3457, line: 17, baseType: !2903, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3460, file: !3457, line: 18, baseType: !2903, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3460, file: !3457, line: 19, baseType: !2903, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3460, file: !3457, line: 20, baseType: !2903, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3460, file: !3457, line: 21, baseType: !2903, size: 64, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3460, file: !3457, line: 23, baseType: !32, size: 32, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3460, file: !3457, line: 24, baseType: !32, size: 32, offset: 352)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3460, file: !3457, line: 25, baseType: !32, size: 32, offset: 384)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3460, file: !3457, line: 26, baseType: !32, size: 32, offset: 416)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3460, file: !3457, line: 27, baseType: !32, size: 32, offset: 448)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3460, file: !3457, line: 28, baseType: !32, size: 32, offset: 480)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3460, file: !3457, line: 29, baseType: !32, size: 32, offset: 512)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3460, file: !3457, line: 30, baseType: !32, size: 32, offset: 544)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3460, file: !3457, line: 31, baseType: !32, size: 32, offset: 576)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3460, file: !3457, line: 32, baseType: !32, size: 32, offset: 608)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3460, file: !3457, line: 33, baseType: !32, size: 32, offset: 640)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3460, file: !3457, line: 34, baseType: !32, size: 32, offset: 672)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3460, file: !3457, line: 35, baseType: !32, size: 32, offset: 704)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3460, file: !3457, line: 36, baseType: !32, size: 32, offset: 736)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3460, file: !3457, line: 37, baseType: !32, size: 32, offset: 768)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3460, file: !3457, line: 38, baseType: !32, size: 32, offset: 800)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3460, file: !3457, line: 39, baseType: !3484, size: 256, offset: 832)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2272)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3460, file: !3457, line: 40, baseType: !3439, size: 64, offset: 1088)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3460, file: !3457, line: 41, baseType: !32, size: 32, offset: 1152)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3460, file: !3457, line: 42, baseType: !32, size: 32, offset: 1184)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3460, file: !3457, line: 43, baseType: !32, size: 32, offset: 1216)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3460, file: !3457, line: 44, baseType: !32, size: 32, offset: 1248)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3460, file: !3457, line: 45, baseType: !32, size: 32, offset: 1280)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3460, file: !3457, line: 46, baseType: !32, size: 32, offset: 1312)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3460, file: !3457, line: 47, baseType: !32, size: 32, offset: 1344)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3460, file: !3457, line: 48, baseType: !32, size: 32, offset: 1376)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3460, file: !3457, line: 49, baseType: !32, size: 32, offset: 1408)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3460, file: !3457, line: 50, baseType: !32, size: 32, offset: 1440)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3460, file: !3457, line: 51, baseType: !32, size: 32, offset: 1472)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3460, file: !3457, line: 52, baseType: !32, size: 32, offset: 1504)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3460, file: !3457, line: 53, baseType: !771, size: 8, offset: 1536)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3456, file: !3457, line: 58, baseType: !3500, size: 64, offset: 1600)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3457, line: 58, flags: DIFlagFwdDecl)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3456, file: !3457, line: 59, baseType: !3500, size: 64, offset: 1664)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3456, file: !3457, line: 60, baseType: !3171, size: 64, offset: 1728)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3456, file: !3457, line: 61, baseType: !3175, size: 64, offset: 1792)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3456, file: !3457, line: 71, baseType: !3506, size: 64, offset: 1856)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3457, line: 71, flags: DIFlagFwdDecl)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3456, file: !3457, line: 72, baseType: !3509, size: 64, offset: 1920)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3457, line: 72, flags: DIFlagFwdDecl)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3456, file: !3457, line: 73, baseType: !3512, size: 64, offset: 1984)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3457, line: 73, flags: DIFlagFwdDecl)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3456, file: !3457, line: 74, baseType: !3235, size: 320, offset: 2048)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3456, file: !3457, line: 75, baseType: !3021, size: 64, offset: 2368)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3456, file: !3457, line: 76, baseType: !3517, size: 64, offset: 2432)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3457, line: 76, flags: DIFlagFwdDecl)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3456, file: !3457, line: 77, baseType: !284, size: 128, offset: 2496)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3456, file: !3457, line: 78, baseType: !3521, size: 1088, offset: 2624)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3530, !3536, !3542, !3543, !3547, !3551, !3555, !3559, !3560, !3564, !3568, !3572, !3576, !3580, !3581}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3521, file: !925, line: 16, baseType: !476, size: 16)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3521, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3521, file: !925, line: 19, baseType: !3526, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!32, !3529}
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3521, file: !925, line: 20, baseType: !3531, size: 64, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!3534, !3534, !493}
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3521, file: !925, line: 21, baseType: !3537, size: 64, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!7, !3540}
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3535)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3521, file: !925, line: 22, baseType: !3537, size: 64, offset: 256)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3521, file: !925, line: 23, baseType: !3544, size: 64, offset: 320)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!2516, !3534, !312}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3521, file: !925, line: 24, baseType: !3548, size: 64, offset: 384)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !3534}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3521, file: !925, line: 25, baseType: !3552, size: 64, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !3534, !290, !32}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3521, file: !925, line: 27, baseType: !3556, size: 64, offset: 512)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!3534, !3534}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3521, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3521, file: !925, line: 29, baseType: !3561, size: 64, offset: 640)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3534, !445, !415, !987, !771}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3521, file: !925, line: 32, baseType: !3565, size: 64, offset: 704)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{null, !3534, !445, !415}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3521, file: !925, line: 34, baseType: !3569, size: 64, offset: 768)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!32, !2982, !445, !415}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3521, file: !925, line: 35, baseType: !3573, size: 64, offset: 832)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!923, !3540, !415, !3258}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3521, file: !925, line: 38, baseType: !3577, size: 64, offset: 896)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{null, !3540, !3258}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3521, file: !925, line: 41, baseType: !2051, size: 64, offset: 960)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3521, file: !925, line: 43, baseType: !3582, size: 64, offset: 1024)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3583, line: 97, size: 64, elements: !3584)
!3583 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3584 = !{!3585}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3582, file: !3583, line: 98, baseType: !377, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3456, file: !3457, line: 79, baseType: !1912, offset: 3712)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3456, file: !3457, line: 80, baseType: !1670, offset: 3712)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3456, file: !3457, line: 81, baseType: !7, size: 32, offset: 3712)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3456, file: !3457, line: 82, baseType: !312, size: 64, offset: 3776)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3456, file: !3457, line: 94, baseType: !3168, size: 64, offset: 3840)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3456, file: !3457, line: 95, baseType: !445, size: 64, offset: 3904)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3456, file: !3457, line: 96, baseType: !445, size: 64, offset: 3968)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3456, file: !3457, line: 97, baseType: !445, size: 64, offset: 4032)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3456, file: !3457, line: 98, baseType: !445, size: 64, offset: 4096)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3456, file: !3457, line: 107, baseType: !383, size: 32, offset: 4160)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3456, file: !3457, line: 108, baseType: !383, size: 32, offset: 4192)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3456, file: !3457, line: 109, baseType: !3598, size: 64, offset: 4224)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3457, line: 109, flags: DIFlagFwdDecl)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3456, file: !3457, line: 110, baseType: !3442, size: 64, offset: 4288)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3456, file: !3457, line: 111, baseType: !3442, size: 64, offset: 4352)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3456, file: !3457, line: 112, baseType: !7, size: 32, offset: 4416)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3456, file: !3457, line: 117, baseType: !3604, size: 128, offset: 4480)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3456, file: !3457, line: 113, size: 128, elements: !3605)
!3605 = !{!3606, !3607, !3608}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3604, file: !3457, line: 114, baseType: !1581, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3604, file: !3457, line: 115, baseType: !1670, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3604, file: !3457, line: 116, baseType: !987, size: 32, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2983, file: !2984, line: 162, baseType: !3610, size: 192, offset: 14784)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3611)
!3611 = !{!3612, !3613, !3614, !3615}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3610, file: !417, line: 293, baseType: !415, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3610, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3610, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3610, file: !417, line: 297, baseType: !1670, offset: 160)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2983, file: !2984, line: 164, baseType: !3617, size: 64, offset: 14976)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2984, line: 47, flags: DIFlagFwdDecl)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2983, file: !2984, line: 167, baseType: !3620, size: 512, offset: 15040)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3621, line: 14, size: 512, elements: !3622)
!3621 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3622 = !{!3623, !3638, !3640}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3620, file: !3621, line: 16, baseType: !3624, size: 128)
!3624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3625, size: 128, elements: !2664)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3627)
!3627 = !{!3628, !3629}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3626, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3626, file: !65, line: 1039, baseType: !3630, offset: 128)
!3630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3631, elements: !309)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3632)
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3631, file: !65, line: 1033, baseType: !1088, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3631, file: !65, line: 1034, baseType: !3635, size: 128, offset: 64)
!3635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3636, size: 128, elements: !2664)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3620, file: !3621, line: 17, baseType: !3639, size: 128, offset: 128)
!3639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3620, file: !3621, line: 18, baseType: !3641, size: 256, offset: 256)
!3641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2983, file: !2984, line: 174, baseType: !373, size: 64, offset: 15552)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2983, file: !2984, line: 183, baseType: !3644, size: 1216, offset: 15616)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3645, line: 15, size: 1216, elements: !3646)
!3645 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3660, !3661, !3662, !3665, !3668}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3644, file: !3645, line: 17, baseType: !3010, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3644, file: !3645, line: 18, baseType: !3010, size: 64, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3644, file: !3645, line: 19, baseType: !3010, size: 64, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3644, file: !3645, line: 20, baseType: !3010, size: 64, offset: 192)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3644, file: !3645, line: 21, baseType: !3010, size: 64, offset: 256)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3644, file: !3645, line: 22, baseType: !3010, size: 64, offset: 320)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3644, file: !3645, line: 23, baseType: !3010, size: 64, offset: 384)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3644, file: !3645, line: 24, baseType: !3010, size: 64, offset: 448)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3644, file: !3645, line: 25, baseType: !3010, size: 64, offset: 512)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3644, file: !3645, line: 26, baseType: !3010, size: 64, offset: 576)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3644, file: !3645, line: 30, baseType: !3658, size: 64, offset: 640)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3645, line: 11, flags: DIFlagFwdDecl)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3644, file: !3645, line: 31, baseType: !1670, offset: 704)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3644, file: !3645, line: 32, baseType: !3235, size: 320, offset: 704)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3644, file: !3645, line: 33, baseType: !3663, size: 64, offset: 1024)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3645, line: 12, flags: DIFlagFwdDecl)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3644, file: !3645, line: 34, baseType: !3666, size: 64, offset: 1088)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3645, line: 13, flags: DIFlagFwdDecl)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3644, file: !3645, line: 37, baseType: !1581, size: 64, offset: 1152)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2983, file: !2984, line: 191, baseType: !445, size: 64, offset: 16832)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2967, file: !2968, line: 38, baseType: !3671, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2968, line: 38, flags: DIFlagFwdDecl)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2967, file: !2968, line: 39, baseType: !3671, size: 64, offset: 448)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2967, file: !2968, line: 40, baseType: !3675, size: 64, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3677, line: 856, size: 448, elements: !3678)
!3677 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3678 = !{!3679, !3680, !3681, !3682, !3683}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3676, file: !3677, line: 857, baseType: !568, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3676, file: !3677, line: 858, baseType: !2815, size: 192, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3676, file: !3677, line: 859, baseType: !2781, size: 64, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3676, file: !3677, line: 860, baseType: !2923, size: 64, offset: 320)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3676, file: !3677, line: 861, baseType: !3684, size: 64, offset: 384)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3686, line: 16, flags: DIFlagFwdDecl)
!3686 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2327, file: !2328, line: 969, baseType: !3688, size: 64, offset: 9216)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3690, line: 82, size: 7296, elements: !3691)
!3690 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3691 = !{!3692, !3693, !3694, !3695, !3696, !3697, !3698, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3727, !3736, !3737, !3739, !3740, !3741, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3769, !3770, !3777, !3778, !3779, !3780, !3781, !3782}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3689, file: !3690, line: 83, baseType: !568, size: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3689, file: !3690, line: 84, baseType: !383, size: 32, offset: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3689, file: !3690, line: 85, baseType: !32, size: 32, offset: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3689, file: !3690, line: 86, baseType: !284, size: 128, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3689, file: !3690, line: 88, baseType: !1889, size: 128, offset: 256)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3689, file: !3690, line: 91, baseType: !2326, size: 64, offset: 384)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3689, file: !3690, line: 94, baseType: !3699, size: 192, offset: 448)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3700, line: 30, size: 192, elements: !3701)
!3700 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3701 = !{!3702, !3703}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3699, file: !3700, line: 31, baseType: !284, size: 128)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3699, file: !3700, line: 32, baseType: !3704, size: 64, offset: 128)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3705, line: 25, baseType: !3706)
!3705 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3705, line: 23, size: 64, elements: !3707)
!3707 = !{!3708}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3706, file: !3705, line: 24, baseType: !2471, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3689, file: !3690, line: 97, baseType: !1581, size: 64, offset: 640)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3689, file: !3690, line: 100, baseType: !32, size: 32, offset: 704)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3689, file: !3690, line: 106, baseType: !32, size: 32, offset: 736)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3689, file: !3690, line: 107, baseType: !2326, size: 64, offset: 768)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3689, file: !3690, line: 110, baseType: !32, size: 32, offset: 832)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3689, file: !3690, line: 111, baseType: !7, size: 32, offset: 864)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3689, file: !3690, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3689, file: !3690, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3689, file: !3690, line: 128, baseType: !32, size: 32, offset: 928)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3689, file: !3690, line: 129, baseType: !284, size: 128, offset: 960)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3689, file: !3690, line: 132, baseType: !2397, size: 512, offset: 1088)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3689, file: !3690, line: 133, baseType: !453, size: 64, offset: 1600)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3689, file: !3690, line: 140, baseType: !3722, size: 256, offset: 1664)
!3722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3723, size: 256, elements: !2664)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3690, line: 38, size: 128, elements: !3724)
!3724 = !{!3725, !3726}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3723, file: !3690, line: 39, baseType: !331, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3723, file: !3690, line: 40, baseType: !331, size: 64, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3689, file: !3690, line: 146, baseType: !3728, size: 192, offset: 1920)
!3728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3690, line: 66, size: 192, elements: !3729)
!3729 = !{!3730}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3728, file: !3690, line: 67, baseType: !3731, size: 192)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3690, line: 47, size: 192, elements: !3732)
!3732 = !{!3733, !3734, !3735}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3731, file: !3690, line: 48, baseType: !373, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3731, file: !3690, line: 49, baseType: !373, size: 64, offset: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3731, file: !3690, line: 50, baseType: !373, size: 64, offset: 128)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3689, file: !3690, line: 150, baseType: !2625, size: 640, offset: 2112)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3689, file: !3690, line: 153, baseType: !3738, size: 256, offset: 2752)
!3738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 256, elements: !2272)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3689, file: !3690, line: 159, baseType: !2571, size: 64, offset: 3008)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3689, file: !3690, line: 162, baseType: !32, size: 32, offset: 3072)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3689, file: !3690, line: 164, baseType: !3742, size: 64, offset: 3136)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3690, line: 164, flags: DIFlagFwdDecl)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3689, file: !3690, line: 175, baseType: !3325, size: 32, offset: 3200)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3264)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3328)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3392)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3456)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3689, file: !3690, line: 177, baseType: !331, size: 64, offset: 3520)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3689, file: !3690, line: 178, baseType: !331, size: 64, offset: 3584)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3689, file: !3690, line: 179, baseType: !2613, size: 128, offset: 3648)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3776)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3840)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3904)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3968)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4032)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4096)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4160)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4224)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4288)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4352)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4416)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4480)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4544)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4608)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3689, file: !3690, line: 184, baseType: !3767, offset: 4672)
!3767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3768, line: 12, elements: !1587)
!3768 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3689, file: !3690, line: 192, baseType: !335, size: 64, offset: 4672)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3689, file: !3690, line: 203, baseType: !3771, size: 2048, offset: 4736)
!3771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3772, size: 2048, elements: !269)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3773, line: 43, size: 128, elements: !3774)
!3773 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3774 = !{!3775, !3776}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3772, file: !3773, line: 44, baseType: !1042, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3772, file: !3773, line: 45, baseType: !1042, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3689, file: !3690, line: 220, baseType: !771, size: 8, offset: 6784)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3689, file: !3690, line: 221, baseType: !625, size: 16, offset: 6800)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3689, file: !3690, line: 222, baseType: !625, size: 16, offset: 6816)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3689, file: !3690, line: 224, baseType: !2091, size: 64, offset: 6848)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3689, file: !3690, line: 227, baseType: !1665, size: 192, offset: 6912)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3689, file: !3690, line: 233, baseType: !1665, size: 192, offset: 7104)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2327, file: !2328, line: 970, baseType: !3784, size: 64, offset: 9280)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3690, line: 20, size: 16576, elements: !3786)
!3786 = !{!3787, !3788, !3789, !3790}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3785, file: !3690, line: 21, baseType: !1670)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3785, file: !3690, line: 22, baseType: !568, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3785, file: !3690, line: 23, baseType: !1889, size: 128, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3785, file: !3690, line: 24, baseType: !3791, size: 16384, offset: 192)
!3791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3792, size: 16384, elements: !3812)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3700, line: 49, size: 256, elements: !3793)
!3793 = !{!3794}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3792, file: !3700, line: 50, baseType: !3795, size: 256)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3700, line: 35, size: 256, elements: !3796)
!3796 = !{!3797, !3804, !3805, !3811}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3795, file: !3700, line: 37, baseType: !3798, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3799, line: 19, baseType: !3800)
!3799 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3799, line: 18, baseType: !3802)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !32}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3795, file: !3700, line: 38, baseType: !312, size: 64, offset: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3795, file: !3700, line: 44, baseType: !3806, size: 64, offset: 128)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3799, line: 22, baseType: !3807)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3799, line: 21, baseType: !3809)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3795, file: !3700, line: 46, baseType: !3704, size: 64, offset: 192)
!3812 = !{!3813}
!3813 = !DISubrange(count: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2327, file: !2328, line: 971, baseType: !3704, size: 64, offset: 9344)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2327, file: !2328, line: 972, baseType: !3704, size: 64, offset: 9408)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2327, file: !2328, line: 974, baseType: !3704, size: 64, offset: 9472)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2327, file: !2328, line: 975, baseType: !3699, size: 192, offset: 9536)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2327, file: !2328, line: 976, baseType: !312, size: 64, offset: 9728)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2327, file: !2328, line: 977, baseType: !1039, size: 64, offset: 9792)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2327, file: !2328, line: 978, baseType: !7, size: 32, offset: 9856)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2327, file: !2328, line: 980, baseType: !302, size: 64, offset: 9920)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2327, file: !2328, line: 989, baseType: !3823, size: 128, offset: 9984)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3824, line: 35, size: 128, elements: !3825)
!3824 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3825 = !{!3826, !3827, !3828}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3823, file: !3824, line: 36, baseType: !32, size: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3823, file: !3824, line: 37, baseType: !383, size: 32, offset: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3823, file: !3824, line: 38, baseType: !3829, size: 64, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3824, line: 23, flags: DIFlagFwdDecl)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2327, file: !2328, line: 992, baseType: !331, size: 64, offset: 10112)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2327, file: !2328, line: 993, baseType: !331, size: 64, offset: 10176)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2327, file: !2328, line: 996, baseType: !1670, offset: 10240)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2327, file: !2328, line: 999, baseType: !1761, offset: 10240)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2327, file: !2328, line: 1001, baseType: !3836, size: 64, offset: 10240)
!3836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2328, line: 636, size: 64, elements: !3837)
!3837 = !{!3838}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3836, file: !2328, line: 637, baseType: !3839, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2327, file: !2328, line: 1005, baseType: !1747, size: 128, offset: 10304)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2327, file: !2328, line: 1007, baseType: !2326, size: 64, offset: 10432)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2327, file: !2328, line: 1009, baseType: !3843, size: 64, offset: 10496)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2328, line: 1009, flags: DIFlagFwdDecl)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2327, file: !2328, line: 1043, baseType: !591, size: 64, offset: 10560)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2327, file: !2328, line: 1046, baseType: !3847, size: 64, offset: 10624)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2328, line: 41, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2327, file: !2328, line: 1050, baseType: !3850, size: 64, offset: 10688)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2328, line: 42, flags: DIFlagFwdDecl)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2327, file: !2328, line: 1054, baseType: !3853, size: 64, offset: 10752)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2328, line: 55, flags: DIFlagFwdDecl)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2327, file: !2328, line: 1056, baseType: !3856, size: 64, offset: 10816)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2328, line: 40, flags: DIFlagFwdDecl)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2327, file: !2328, line: 1058, baseType: !3859, size: 64, offset: 10880)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3861, line: 99, size: 704, elements: !3862)
!3861 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3862 = !{!3863, !3864, !3865, !3866, !3867, !3868, !3869, !3888, !3889}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3860, file: !3861, line: 100, baseType: !371, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3860, file: !3861, line: 101, baseType: !383, size: 32, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3860, file: !3861, line: 102, baseType: !383, size: 32, offset: 96)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3860, file: !3861, line: 105, baseType: !1670, offset: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3860, file: !3861, line: 107, baseType: !476, size: 16, offset: 128)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3860, file: !3861, line: 109, baseType: !1737, size: 128, offset: 192)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3860, file: !3861, line: 110, baseType: !3870, size: 64, offset: 320)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3861, line: 73, size: 448, elements: !3872)
!3872 = !{!3873, !3876, !3877, !3882, !3887}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3871, file: !3861, line: 74, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3861, line: 74, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3871, file: !3861, line: 75, baseType: !3859, size: 64, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 83, baseType: !3878, size: 128, offset: 128)
!3878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 83, size: 128, elements: !3879)
!3879 = !{!3880, !3881}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3878, file: !3861, line: 84, baseType: !284, size: 128)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3878, file: !3861, line: 85, baseType: !2051, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 87, baseType: !3883, size: 128, offset: 256)
!3883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 87, size: 128, elements: !3884)
!3884 = !{!3885, !3886}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3883, file: !3861, line: 88, baseType: !276, size: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3883, file: !3861, line: 89, baseType: !299, size: 128, align: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3871, file: !3861, line: 92, baseType: !7, size: 32, offset: 384)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3860, file: !3861, line: 111, baseType: !1581, size: 64, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3860, file: !3861, line: 113, baseType: !2829, size: 256, offset: 448)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2327, file: !2328, line: 1061, baseType: !3891, size: 64, offset: 10944)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2328, line: 43, flags: DIFlagFwdDecl)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2327, file: !2328, line: 1064, baseType: !312, size: 64, offset: 11008)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2327, file: !2328, line: 1065, baseType: !3895, size: 64, offset: 11072)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3700, line: 14, baseType: !3897)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3700, line: 12, size: 384, elements: !3898)
!3898 = !{!3899}
!3899 = !DIDerivedType(tag: DW_TAG_member, scope: !3897, file: !3700, line: 13, baseType: !3900, size: 384)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3897, file: !3700, line: 13, size: 384, elements: !3901)
!3901 = !{!3902, !3903, !3904, !3905}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 32)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3900, file: !3700, line: 13, baseType: !3906, size: 256, offset: 128)
!3906 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3907, line: 32, size: 256, elements: !3908)
!3907 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3908 = !{!3909, !3914, !3927, !3933, !3942, !3962, !3967}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3906, file: !3907, line: 37, baseType: !3910, size: 64)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 34, size: 64, elements: !3911)
!3911 = !{!3912, !3913}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3910, file: !3907, line: 35, baseType: !2560, size: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3910, file: !3907, line: 36, baseType: !1388, size: 32, offset: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3906, file: !3907, line: 45, baseType: !3915, size: 192)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 40, size: 192, elements: !3916)
!3916 = !{!3917, !3919, !3920, !3926}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3915, file: !3907, line: 41, baseType: !3918, size: 32)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3915, file: !3907, line: 42, baseType: !32, size: 32, offset: 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3915, file: !3907, line: 43, baseType: !3921, size: 64, offset: 64)
!3921 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3907, line: 11, baseType: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3907, line: 8, size: 64, elements: !3923)
!3923 = !{!3924, !3925}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3922, file: !3907, line: 9, baseType: !32, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3922, file: !3907, line: 10, baseType: !591, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3915, file: !3907, line: 44, baseType: !32, size: 32, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3906, file: !3907, line: 52, baseType: !3928, size: 128)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 48, size: 128, elements: !3929)
!3929 = !{!3930, !3931, !3932}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3928, file: !3907, line: 49, baseType: !2560, size: 32)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3928, file: !3907, line: 50, baseType: !1388, size: 32, offset: 32)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3928, file: !3907, line: 51, baseType: !3921, size: 64, offset: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3906, file: !3907, line: 61, baseType: !3934, size: 256)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 55, size: 256, elements: !3935)
!3935 = !{!3936, !3937, !3938, !3939, !3941}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3934, file: !3907, line: 56, baseType: !2560, size: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3934, file: !3907, line: 57, baseType: !1388, size: 32, offset: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3934, file: !3907, line: 58, baseType: !32, size: 32, offset: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3934, file: !3907, line: 59, baseType: !3940, size: 64, offset: 128)
!3940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3934, file: !3907, line: 60, baseType: !3940, size: 64, offset: 192)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3906, file: !3907, line: 95, baseType: !3943, size: 256)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 64, size: 256, elements: !3944)
!3944 = !{!3945, !3946}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3943, file: !3907, line: 65, baseType: !591, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, scope: !3943, file: !3907, line: 77, baseType: !3947, size: 192, offset: 64)
!3947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3943, file: !3907, line: 77, size: 192, elements: !3948)
!3948 = !{!3949, !3950, !3957}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3947, file: !3907, line: 82, baseType: !625, size: 16)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3947, file: !3907, line: 88, baseType: !3951, size: 192)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 84, size: 192, elements: !3952)
!3952 = !{!3953, !3955, !3956}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3951, file: !3907, line: 85, baseType: !3954, size: 64)
!3954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2433)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3951, file: !3907, line: 86, baseType: !591, size: 64, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3951, file: !3907, line: 87, baseType: !591, size: 64, offset: 128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3947, file: !3907, line: 93, baseType: !3958, size: 96)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 90, size: 96, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3958, file: !3907, line: 91, baseType: !3954, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3958, file: !3907, line: 92, baseType: !493, size: 32, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3906, file: !3907, line: 101, baseType: !3963, size: 128)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 98, size: 128, elements: !3964)
!3964 = !{!3965, !3966}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3963, file: !3907, line: 99, baseType: !998, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3963, file: !3907, line: 100, baseType: !32, size: 32, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3906, file: !3907, line: 108, baseType: !3968, size: 128)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 104, size: 128, elements: !3969)
!3969 = !{!3970, !3971, !3972}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3968, file: !3907, line: 105, baseType: !591, size: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3968, file: !3907, line: 106, baseType: !32, size: 32, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3968, file: !3907, line: 107, baseType: !7, size: 32, offset: 96)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2327, file: !2328, line: 1067, baseType: !3767, offset: 11136)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2327, file: !2328, line: 1099, baseType: !3975, size: 64, offset: 11136)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2328, line: 56, flags: DIFlagFwdDecl)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2327, file: !2328, line: 1103, baseType: !284, size: 128, offset: 11200)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2327, file: !2328, line: 1104, baseType: !3979, size: 64, offset: 11328)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2328, line: 46, flags: DIFlagFwdDecl)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2327, file: !2328, line: 1105, baseType: !1665, size: 192, offset: 11392)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2327, file: !2328, line: 1106, baseType: !7, size: 32, offset: 11584)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2327, file: !2328, line: 1109, baseType: !3984, size: 128, offset: 11648)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3985, size: 128, elements: !2664)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2328, line: 51, flags: DIFlagFwdDecl)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2327, file: !2328, line: 1110, baseType: !1665, size: 192, offset: 11776)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2327, file: !2328, line: 1111, baseType: !284, size: 128, offset: 11968)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2327, file: !2328, line: 1173, baseType: !3990, size: 64, offset: 12096)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3992, line: 62, size: 256, align: 256, elements: !3993)
!3992 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3993 = !{!3994, !3995, !3996, !4001}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3991, file: !3992, line: 75, baseType: !493, size: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3991, file: !3992, line: 90, baseType: !493, size: 32, offset: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3991, file: !3992, line: 124, baseType: !3997, size: 64, offset: 64)
!3997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3991, file: !3992, line: 109, size: 64, elements: !3998)
!3998 = !{!3999, !4000}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3997, file: !3992, line: 110, baseType: !333, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3997, file: !3992, line: 112, baseType: !333, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3991, file: !3992, line: 144, baseType: !493, size: 32, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2327, file: !2328, line: 1174, baseType: !987, size: 32, offset: 12160)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2327, file: !2328, line: 1179, baseType: !312, size: 64, offset: 12224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2327, file: !2328, line: 1182, baseType: !4005, size: 128, offset: 12288)
!4005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2268, line: 76, size: 128, elements: !4006)
!4006 = !{!4007, !4012, !4013}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4005, file: !2268, line: 85, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4009, line: 7, size: 64, elements: !4010)
!4009 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !{!4011}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4008, file: !4009, line: 12, baseType: !2468, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4005, file: !2268, line: 88, baseType: !771, size: 8, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4005, file: !2268, line: 95, baseType: !771, size: 8, offset: 72)
!4014 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !2328, line: 1184, baseType: !4015, size: 128, offset: 12416)
!4015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !2328, line: 1184, size: 128, elements: !4016)
!4016 = !{!4017, !4018}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4015, file: !2328, line: 1185, baseType: !568, size: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4015, file: !2328, line: 1186, baseType: !299, size: 128, align: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2327, file: !2328, line: 1190, baseType: !1883, size: 64, offset: 12544)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2327, file: !2328, line: 1192, baseType: !4021, size: 128, offset: 12608)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2268, line: 64, size: 128, elements: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4021, file: !2268, line: 65, baseType: !1719, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4021, file: !2268, line: 67, baseType: !493, size: 32, offset: 64)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4021, file: !2268, line: 68, baseType: !493, size: 32, offset: 96)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2327, file: !2328, line: 1206, baseType: !32, size: 32, offset: 12736)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2327, file: !2328, line: 1207, baseType: !32, size: 32, offset: 12768)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2327, file: !2328, line: 1209, baseType: !312, size: 64, offset: 12800)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2327, file: !2328, line: 1219, baseType: !331, size: 64, offset: 12864)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2327, file: !2328, line: 1220, baseType: !331, size: 64, offset: 12928)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2327, file: !2328, line: 1317, baseType: !32, size: 32, offset: 12992)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2327, file: !2328, line: 1319, baseType: !2326, size: 64, offset: 13056)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2327, file: !2328, line: 1322, baseType: !4034, size: 64, offset: 13120)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4036, line: 56, size: 512, elements: !4037)
!4036 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4037 = !{!4038, !4039, !4040, !4041, !4042, !4043, !4044, !4046}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4035, file: !4036, line: 57, baseType: !4034, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4035, file: !4036, line: 58, baseType: !591, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4035, file: !4036, line: 59, baseType: !312, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4035, file: !4036, line: 60, baseType: !312, size: 64, offset: 192)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4035, file: !4036, line: 61, baseType: !1801, size: 64, offset: 256)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4035, file: !4036, line: 62, baseType: !7, size: 32, offset: 320)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4035, file: !4036, line: 63, baseType: !4045, size: 64, offset: 384)
!4045 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4035, file: !4036, line: 64, baseType: !3258, size: 64, offset: 448)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2327, file: !2328, line: 1326, baseType: !568, size: 32, offset: 13184)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2327, file: !2328, line: 1342, baseType: !591, size: 64, offset: 13248)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2327, file: !2328, line: 1343, baseType: !333, size: 64, offset: 13312)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2327, file: !2328, line: 1344, baseType: !331, size: 64, offset: 13376)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2327, file: !2328, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2327, file: !2328, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2327, file: !2328, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2327, file: !2328, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2327, file: !2328, line: 1358, baseType: !4056, size: 34816, offset: 13824)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4057, line: 485, size: 34816, elements: !4058)
!4057 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4058 = !{!4059, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4088, !4089, !4090, !4091, !4092, !4093, !4096, !4097, !4098}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4056, file: !4057, line: 487, baseType: !4060, size: 192)
!4060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4061, size: 192, elements: !1592)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4062, line: 16, size: 64, elements: !4063)
!4062 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4061, file: !4062, line: 17, baseType: !581, size: 16)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4061, file: !4062, line: 18, baseType: !581, size: 16, offset: 16)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4061, file: !4062, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4061, file: !4062, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4061, file: !4062, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4061, file: !4062, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4061, file: !4062, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4056, file: !4057, line: 491, baseType: !312, size: 64, offset: 192)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4056, file: !4057, line: 495, baseType: !476, size: 16, offset: 256)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4056, file: !4057, line: 496, baseType: !476, size: 16, offset: 272)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4056, file: !4057, line: 497, baseType: !476, size: 16, offset: 288)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4056, file: !4057, line: 498, baseType: !476, size: 16, offset: 304)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4056, file: !4057, line: 502, baseType: !312, size: 64, offset: 320)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4056, file: !4057, line: 503, baseType: !312, size: 64, offset: 384)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4056, file: !4057, line: 514, baseType: !4085, size: 256, offset: 448)
!4085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4086, size: 256, elements: !2272)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4057, line: 483, flags: DIFlagFwdDecl)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4056, file: !4057, line: 516, baseType: !312, size: 64, offset: 704)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4056, file: !4057, line: 518, baseType: !312, size: 64, offset: 768)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4056, file: !4057, line: 520, baseType: !312, size: 64, offset: 832)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4056, file: !4057, line: 521, baseType: !312, size: 64, offset: 896)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4056, file: !4057, line: 522, baseType: !312, size: 64, offset: 960)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4056, file: !4057, line: 528, baseType: !4094, size: 64, offset: 1024)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4057, line: 10, flags: DIFlagFwdDecl)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4056, file: !4057, line: 535, baseType: !312, size: 64, offset: 1088)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4056, file: !4057, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4056, file: !4057, line: 540, baseType: !4099, size: 33280, offset: 1536)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4100, line: 317, size: 33280, elements: !4101)
!4100 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4101 = !{!4102, !4103, !4104}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4099, file: !4100, line: 330, baseType: !7, size: 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4099, file: !4100, line: 337, baseType: !312, size: 64, offset: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4099, file: !4100, line: 348, baseType: !4105, size: 32768, offset: 512)
!4105 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4100, line: 304, size: 32768, elements: !4106)
!4106 = !{!4107, !4120, !4157, !4207, !4220}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4105, file: !4100, line: 305, baseType: !4108, size: 896)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4100, line: 12, size: 896, elements: !4109)
!4109 = !{!4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4119}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4108, file: !4100, line: 13, baseType: !987, size: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4108, file: !4100, line: 14, baseType: !987, size: 32, offset: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4108, file: !4100, line: 15, baseType: !987, size: 32, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4108, file: !4100, line: 16, baseType: !987, size: 32, offset: 96)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4108, file: !4100, line: 17, baseType: !987, size: 32, offset: 128)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4108, file: !4100, line: 18, baseType: !987, size: 32, offset: 160)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4108, file: !4100, line: 19, baseType: !987, size: 32, offset: 192)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4108, file: !4100, line: 22, baseType: !4118, size: 640, offset: 224)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4108, file: !4100, line: 25, baseType: !987, size: 32, offset: 864)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4105, file: !4100, line: 306, baseType: !4121, size: 4096, align: 128)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4100, line: 34, size: 4096, align: 128, elements: !4122)
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4142, !4143, !4144, !4146, !4148, !4152}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4121, file: !4100, line: 35, baseType: !581, size: 16)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4121, file: !4100, line: 36, baseType: !581, size: 16, offset: 16)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4121, file: !4100, line: 37, baseType: !581, size: 16, offset: 32)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4121, file: !4100, line: 38, baseType: !581, size: 16, offset: 48)
!4127 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 39, baseType: !4128, size: 128, offset: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 39, size: 128, elements: !4129)
!4129 = !{!4130, !4135}
!4130 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 40, baseType: !4131, size: 128)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 40, size: 128, elements: !4132)
!4132 = !{!4133, !4134}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4131, file: !4100, line: 41, baseType: !331, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4131, file: !4100, line: 42, baseType: !331, size: 64, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 44, baseType: !4136, size: 128)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 44, size: 128, elements: !4137)
!4137 = !{!4138, !4139, !4140, !4141}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4136, file: !4100, line: 45, baseType: !987, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4136, file: !4100, line: 46, baseType: !987, size: 32, offset: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4136, file: !4100, line: 47, baseType: !987, size: 32, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4136, file: !4100, line: 48, baseType: !987, size: 32, offset: 96)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4121, file: !4100, line: 51, baseType: !987, size: 32, offset: 192)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4121, file: !4100, line: 52, baseType: !987, size: 32, offset: 224)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4121, file: !4100, line: 55, baseType: !4145, size: 1024, offset: 256)
!4145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4121, file: !4100, line: 58, baseType: !4147, size: 2048, offset: 1280)
!4147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3812)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4121, file: !4100, line: 60, baseType: !4149, size: 384, offset: 3328)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !4150)
!4150 = !{!4151}
!4151 = !DISubrange(count: 12)
!4152 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 62, baseType: !4153, size: 384, offset: 3712)
!4153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 62, size: 384, elements: !4154)
!4154 = !{!4155, !4156}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4153, file: !4100, line: 63, baseType: !4149, size: 384)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4153, file: !4100, line: 64, baseType: !4149, size: 384)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4105, file: !4100, line: 307, baseType: !4158, size: 1088)
!4158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4100, line: 79, size: 1088, elements: !4159)
!4159 = !{!4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4206}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4158, file: !4100, line: 80, baseType: !987, size: 32)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4158, file: !4100, line: 81, baseType: !987, size: 32, offset: 32)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4158, file: !4100, line: 82, baseType: !987, size: 32, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4158, file: !4100, line: 83, baseType: !987, size: 32, offset: 96)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4158, file: !4100, line: 84, baseType: !987, size: 32, offset: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4158, file: !4100, line: 85, baseType: !987, size: 32, offset: 160)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4158, file: !4100, line: 86, baseType: !987, size: 32, offset: 192)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4158, file: !4100, line: 88, baseType: !4118, size: 640, offset: 224)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4158, file: !4100, line: 89, baseType: !794, size: 8, offset: 864)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4158, file: !4100, line: 90, baseType: !794, size: 8, offset: 872)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4158, file: !4100, line: 91, baseType: !794, size: 8, offset: 880)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4158, file: !4100, line: 92, baseType: !794, size: 8, offset: 888)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4158, file: !4100, line: 93, baseType: !794, size: 8, offset: 896)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4158, file: !4100, line: 94, baseType: !794, size: 8, offset: 904)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4158, file: !4100, line: 95, baseType: !4175, size: 64, offset: 960)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4177, line: 11, size: 128, elements: !4178)
!4177 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4178 = !{!4179, !4180}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4176, file: !4177, line: 12, baseType: !998, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4176, file: !4177, line: 13, baseType: !4181, size: 64, offset: 64)
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4183, line: 56, size: 1344, elements: !4184)
!4183 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4182, file: !4183, line: 61, baseType: !312, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4182, file: !4183, line: 62, baseType: !312, size: 64, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4182, file: !4183, line: 63, baseType: !312, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4182, file: !4183, line: 64, baseType: !312, size: 64, offset: 192)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4182, file: !4183, line: 65, baseType: !312, size: 64, offset: 256)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4182, file: !4183, line: 66, baseType: !312, size: 64, offset: 320)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4182, file: !4183, line: 68, baseType: !312, size: 64, offset: 384)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4182, file: !4183, line: 69, baseType: !312, size: 64, offset: 448)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4182, file: !4183, line: 70, baseType: !312, size: 64, offset: 512)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4182, file: !4183, line: 71, baseType: !312, size: 64, offset: 576)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4182, file: !4183, line: 72, baseType: !312, size: 64, offset: 640)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4182, file: !4183, line: 73, baseType: !312, size: 64, offset: 704)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4182, file: !4183, line: 74, baseType: !312, size: 64, offset: 768)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4182, file: !4183, line: 75, baseType: !312, size: 64, offset: 832)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4182, file: !4183, line: 76, baseType: !312, size: 64, offset: 896)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4182, file: !4183, line: 81, baseType: !312, size: 64, offset: 960)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4182, file: !4183, line: 83, baseType: !312, size: 64, offset: 1024)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4182, file: !4183, line: 84, baseType: !312, size: 64, offset: 1088)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4182, file: !4183, line: 85, baseType: !312, size: 64, offset: 1152)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4182, file: !4183, line: 86, baseType: !312, size: 64, offset: 1216)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4182, file: !4183, line: 87, baseType: !312, size: 64, offset: 1280)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4158, file: !4100, line: 96, baseType: !987, size: 32, offset: 1024)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4105, file: !4100, line: 308, baseType: !4208, size: 4608, align: 512)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4100, line: 289, size: 4608, align: 512, elements: !4209)
!4209 = !{!4210, !4211, !4218}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4208, file: !4100, line: 290, baseType: !4121, size: 4096, align: 128)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4208, file: !4100, line: 291, baseType: !4212, size: 512, offset: 4096)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4100, line: 268, size: 512, elements: !4213)
!4213 = !{!4214, !4215, !4216}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4212, file: !4100, line: 269, baseType: !331, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4212, file: !4100, line: 270, baseType: !331, size: 64, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4212, file: !4100, line: 271, baseType: !4217, size: 384, offset: 128)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4208, file: !4100, line: 292, baseType: !4219, offset: 4608)
!4219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4105, file: !4100, line: 309, baseType: !4221, size: 32768)
!4221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !4222)
!4222 = !{!4223}
!4223 = !DISubrange(count: 4096)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !1721, line: 378, baseType: !4225, size: 64, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2319, file: !1721, line: 384, baseType: !2597, size: 192, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2095, file: !1721, line: 500, baseType: !1670, offset: 6656)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2095, file: !1721, line: 501, baseType: !4229, size: 64, offset: 6656)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1721, line: 387, flags: DIFlagFwdDecl)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2095, file: !1721, line: 516, baseType: !2781, size: 64, offset: 6720)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2095, file: !1721, line: 519, baseType: !1315, size: 64, offset: 6784)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2095, file: !1721, line: 521, baseType: !4234, size: 64, offset: 6848)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1721, line: 521, flags: DIFlagFwdDecl)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2095, file: !1721, line: 545, baseType: !383, size: 32, offset: 6912)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2095, file: !1721, line: 548, baseType: !771, size: 8, offset: 6944)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2095, file: !1721, line: 550, baseType: !4239, offset: 6952)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4240, line: 142, elements: !1587)
!4240 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2095, file: !1721, line: 554, baseType: !2829, size: 256, offset: 6976)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2095, file: !1721, line: 557, baseType: !987, size: 32, offset: 7232)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2092, file: !1721, line: 565, baseType: !4244, offset: 7296)
!4244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2088, file: !1721, line: 151, baseType: !383, size: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2080, file: !1721, line: 156, baseType: !1670, offset: 256)
!4247 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 159, baseType: !4248, size: 128)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 159, size: 128, elements: !4249)
!4249 = !{!4250, !4321}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4248, file: !1721, line: 161, baseType: !4251, size: 64)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4253, line: 110, size: 1152, elements: !4254)
!4253 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4254 = !{!4255, !4265, !4286, !4287, !4288, !4295, !4296, !4308, !4309, !4310}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4252, file: !4253, line: 111, baseType: !4256, size: 384)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4253, line: 19, size: 384, elements: !4257)
!4257 = !{!4258, !4260, !4261, !4262, !4263, !4264}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4256, file: !4253, line: 20, baseType: !4259, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4256, file: !4253, line: 21, baseType: !4259, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4256, file: !4253, line: 22, baseType: !4259, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4256, file: !4253, line: 23, baseType: !312, size: 64, offset: 192)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4256, file: !4253, line: 24, baseType: !312, size: 64, offset: 256)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4256, file: !4253, line: 25, baseType: !312, size: 64, offset: 320)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4252, file: !4253, line: 112, baseType: !4266, size: 64, offset: 384)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4268, line: 105, size: 128, elements: !4269)
!4268 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4269 = !{!4270, !4271}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4267, file: !4268, line: 110, baseType: !312, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4267, file: !4268, line: 118, baseType: !4272, size: 64, offset: 64)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4268, line: 95, size: 448, elements: !4274)
!4274 = !{!4275, !4276, !4281, !4282, !4283, !4284, !4285}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4273, file: !4268, line: 96, baseType: !371, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4273, file: !4268, line: 97, baseType: !4277, size: 64, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4268, line: 60, baseType: !4279)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{null, !4266}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4273, file: !4268, line: 98, baseType: !4277, size: 64, offset: 128)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4273, file: !4268, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4273, file: !4268, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4273, file: !4268, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4273, file: !4268, line: 102, baseType: !4266, size: 64, offset: 384)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4252, file: !4253, line: 113, baseType: !4267, size: 128, offset: 448)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4252, file: !4253, line: 114, baseType: !2597, size: 192, offset: 576)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4252, file: !4253, line: 115, baseType: !4289, size: 32, offset: 768)
!4289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4253, line: 59, baseType: !7, size: 32, elements: !4290)
!4290 = !{!4291, !4292, !4293, !4294}
!4291 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4292 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4293 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4294 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4252, file: !4253, line: 116, baseType: !7, size: 32, offset: 800)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4252, file: !4253, line: 117, baseType: !4297, size: 64, offset: 832)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4253, line: 67, size: 256, elements: !4300)
!4300 = !{!4301, !4302, !4306, !4307}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4299, file: !4253, line: 73, baseType: !1821, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4299, file: !4253, line: 78, baseType: !4303, size: 64, offset: 64)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{null, !4251}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4299, file: !4253, line: 83, baseType: !4303, size: 64, offset: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4299, file: !4253, line: 89, baseType: !2144, size: 64, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4252, file: !4253, line: 118, baseType: !591, size: 64, offset: 896)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4252, file: !4253, line: 119, baseType: !32, size: 32, offset: 960)
!4310 = !DIDerivedType(tag: DW_TAG_member, scope: !4252, file: !4253, line: 120, baseType: !4311, size: 128, offset: 1024)
!4311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4252, file: !4253, line: 120, size: 128, elements: !4312)
!4312 = !{!4313, !4319}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4311, file: !4253, line: 121, baseType: !4314, size: 128)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4315, line: 6, size: 128, elements: !4316)
!4315 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4316 = !{!4317, !4318}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4314, file: !4315, line: 7, baseType: !331, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4314, file: !4315, line: 8, baseType: !331, size: 64, offset: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4311, file: !4253, line: 122, baseType: !4320)
!4320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4314, elements: !483)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4248, file: !1721, line: 162, baseType: !591, size: 64, offset: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1725, file: !1721, line: 176, baseType: !299, size: 128, align: 64)
!4323 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 179, baseType: !4324, size: 32, offset: 384)
!4324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 179, size: 32, elements: !4325)
!4325 = !{!4326, !4327, !4328, !4329}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4324, file: !1721, line: 184, baseType: !383, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4324, file: !1721, line: 192, baseType: !7, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4324, file: !1721, line: 194, baseType: !7, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4324, file: !1721, line: 195, baseType: !32, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1720, file: !1721, line: 199, baseType: !383, size: 32, offset: 416)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1600, file: !1317, line: 1964, baseType: !4332, size: 64, offset: 1344)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!998, !1545, !4335}
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4337, line: 12, size: 256, elements: !4338)
!4337 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4338 = !{!4339, !4340, !4341, !4342, !4343}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4336, file: !4337, line: 13, baseType: !1742, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4336, file: !4337, line: 16, baseType: !32, size: 32, offset: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4336, file: !4337, line: 23, baseType: !312, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4336, file: !4337, line: 30, baseType: !312, size: 64, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4336, file: !4337, line: 33, baseType: !4344, size: 64, offset: 192)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1721, line: 27, flags: DIFlagFwdDecl)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1600, file: !1317, line: 1966, baseType: !4332, size: 64, offset: 1408)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !4348, size: 64, offset: 448)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4350)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4351, line: 322, size: 704, elements: !4352)
!4351 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4352 = !{!4353, !4404, !4408, !4412, !4413, !4414, !4415, !4416, !4421, !4426, !4430}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4350, file: !4351, line: 323, baseType: !4354, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!32, !4357}
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4351, line: 294, size: 1600, elements: !4359)
!4359 = !{!4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4389, !4390, !4391}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4358, file: !4351, line: 295, baseType: !276, size: 128)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4358, file: !4351, line: 296, baseType: !284, size: 128, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4358, file: !4351, line: 297, baseType: !284, size: 128, offset: 256)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4358, file: !4351, line: 298, baseType: !284, size: 128, offset: 384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4358, file: !4351, line: 299, baseType: !1665, size: 192, offset: 512)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4358, file: !4351, line: 300, baseType: !1670, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4358, file: !4351, line: 301, baseType: !383, size: 32, offset: 704)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4358, file: !4351, line: 302, baseType: !1545, size: 64, offset: 768)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4358, file: !4351, line: 303, baseType: !4369, size: 64, offset: 832)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4351, line: 68, size: 64, elements: !4370)
!4370 = !{!4371, !4383}
!4371 = !DIDerivedType(tag: DW_TAG_member, scope: !4369, file: !4351, line: 69, baseType: !4372, size: 32)
!4372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4369, file: !4351, line: 69, size: 32, elements: !4373)
!4373 = !{!4374, !4375, !4376}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4372, file: !4351, line: 70, baseType: !1382, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4372, file: !4351, line: 71, baseType: !1390, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4372, file: !4351, line: 72, baseType: !4377, size: 32)
!4377 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4378, line: 24, baseType: !4379)
!4378 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4378, line: 22, size: 32, elements: !4380)
!4380 = !{!4381}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4379, file: !4378, line: 23, baseType: !4382, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4378, line: 20, baseType: !1388)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4369, file: !4351, line: 74, baseType: !4384, size: 32, offset: 32)
!4384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4351, line: 54, baseType: !7, size: 32, elements: !4385)
!4385 = !{!4386, !4387, !4388}
!4386 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4387 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4388 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4358, file: !4351, line: 304, baseType: !1476, size: 64, offset: 896)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4358, file: !4351, line: 305, baseType: !312, size: 64, offset: 960)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4358, file: !4351, line: 306, baseType: !4392, size: 576, offset: 1024)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4351, line: 205, size: 576, elements: !4393)
!4393 = !{!4394, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4392, file: !4351, line: 206, baseType: !4395, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4351, line: 66, baseType: !379)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4392, file: !4351, line: 207, baseType: !4395, size: 64, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4392, file: !4351, line: 208, baseType: !4395, size: 64, offset: 128)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4392, file: !4351, line: 209, baseType: !4395, size: 64, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4392, file: !4351, line: 210, baseType: !4395, size: 64, offset: 256)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4392, file: !4351, line: 211, baseType: !4395, size: 64, offset: 320)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4392, file: !4351, line: 212, baseType: !4395, size: 64, offset: 384)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4392, file: !4351, line: 213, baseType: !1483, size: 64, offset: 448)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4392, file: !4351, line: 214, baseType: !1483, size: 64, offset: 512)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4350, file: !4351, line: 324, baseType: !4405, size: 64, offset: 64)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4357, !1545, !32}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4350, file: !4351, line: 325, baseType: !4409, size: 64, offset: 128)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{null, !4357}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4350, file: !4351, line: 326, baseType: !4354, size: 64, offset: 192)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4350, file: !4351, line: 327, baseType: !4354, size: 64, offset: 256)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4350, file: !4351, line: 328, baseType: !4354, size: 64, offset: 320)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4350, file: !4351, line: 329, baseType: !1628, size: 64, offset: 384)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4350, file: !4351, line: 332, baseType: !4417, size: 64, offset: 448)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!4420, !1375}
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4350, file: !4351, line: 333, baseType: !4422, size: 64, offset: 512)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!32, !1375, !4425}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4350, file: !4351, line: 335, baseType: !4427, size: 64, offset: 576)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!32, !1375, !4420}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4350, file: !4351, line: 337, baseType: !4431, size: 64, offset: 640)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!32, !1545, !4434}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !4436, size: 64, offset: 512)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4438)
!4438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4351, line: 428, size: 704, elements: !4439)
!4439 = !{!4440, !4444, !4445, !4449, !4450, !4451, !4466, !4489, !4493, !4494, !4517}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4438, file: !4351, line: 429, baseType: !4441, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!32, !1545, !32, !32, !1492}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4438, file: !4351, line: 430, baseType: !1628, size: 64, offset: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4438, file: !4351, line: 431, baseType: !4446, size: 64, offset: 128)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!32, !1545, !7}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4438, file: !4351, line: 432, baseType: !4446, size: 64, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4438, file: !4351, line: 433, baseType: !1628, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4438, file: !4351, line: 434, baseType: !4452, size: 64, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!32, !1545, !32, !4455}
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4351, line: 415, size: 256, elements: !4457)
!4457 = !{!4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4456, file: !4351, line: 416, baseType: !32, size: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4456, file: !4351, line: 417, baseType: !7, size: 32, offset: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4456, file: !4351, line: 418, baseType: !7, size: 32, offset: 64)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4456, file: !4351, line: 420, baseType: !7, size: 32, offset: 96)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4456, file: !4351, line: 421, baseType: !7, size: 32, offset: 128)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4456, file: !4351, line: 422, baseType: !7, size: 32, offset: 160)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4456, file: !4351, line: 423, baseType: !7, size: 32, offset: 192)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4456, file: !4351, line: 424, baseType: !7, size: 32, offset: 224)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4438, file: !4351, line: 435, baseType: !4467, size: 64, offset: 384)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!32, !1545, !4369, !4470}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4351, line: 343, size: 960, elements: !4472)
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4471, file: !4351, line: 344, baseType: !32, size: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4471, file: !4351, line: 345, baseType: !331, size: 64, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4471, file: !4351, line: 346, baseType: !331, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4471, file: !4351, line: 347, baseType: !331, size: 64, offset: 192)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4471, file: !4351, line: 348, baseType: !331, size: 64, offset: 256)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4471, file: !4351, line: 349, baseType: !331, size: 64, offset: 320)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4471, file: !4351, line: 350, baseType: !331, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4471, file: !4351, line: 351, baseType: !377, size: 64, offset: 448)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4471, file: !4351, line: 353, baseType: !377, size: 64, offset: 512)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4471, file: !4351, line: 354, baseType: !32, size: 32, offset: 576)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4471, file: !4351, line: 355, baseType: !32, size: 32, offset: 608)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4471, file: !4351, line: 356, baseType: !331, size: 64, offset: 640)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4471, file: !4351, line: 357, baseType: !331, size: 64, offset: 704)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4471, file: !4351, line: 358, baseType: !331, size: 64, offset: 768)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4471, file: !4351, line: 359, baseType: !377, size: 64, offset: 832)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4471, file: !4351, line: 360, baseType: !32, size: 32, offset: 896)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4438, file: !4351, line: 436, baseType: !4490, size: 64, offset: 448)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!32, !1545, !4434, !4470}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4438, file: !4351, line: 438, baseType: !4467, size: 64, offset: 512)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4438, file: !4351, line: 439, baseType: !4495, size: 64, offset: 576)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!32, !1545, !4498}
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4351, line: 409, size: 1408, elements: !4500)
!4500 = !{!4501, !4502}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4499, file: !4351, line: 410, baseType: !7, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4499, file: !4351, line: 411, baseType: !4503, size: 1344, offset: 64)
!4503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4504, size: 1344, elements: !1592)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4351, line: 395, size: 448, elements: !4505)
!4505 = !{!4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4516}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4504, file: !4351, line: 396, baseType: !7, size: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4504, file: !4351, line: 397, baseType: !7, size: 32, offset: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4504, file: !4351, line: 399, baseType: !7, size: 32, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4504, file: !4351, line: 400, baseType: !7, size: 32, offset: 96)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4504, file: !4351, line: 401, baseType: !7, size: 32, offset: 128)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4504, file: !4351, line: 402, baseType: !7, size: 32, offset: 160)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4504, file: !4351, line: 403, baseType: !7, size: 32, offset: 192)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4504, file: !4351, line: 404, baseType: !335, size: 64, offset: 256)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4504, file: !4351, line: 405, baseType: !4515, size: 64, offset: 320)
!4515 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4504, file: !4351, line: 406, baseType: !4515, size: 64, offset: 384)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4438, file: !4351, line: 440, baseType: !4446, size: 64, offset: 640)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !4519, size: 64, offset: 576)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4521)
!4521 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1755, size: 256, offset: 896)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !4530, size: 64, offset: 1216)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!4533 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !4535, size: 64, offset: 1280)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !4536)
!4536 = !{!4537}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4535, file: !1354, line: 35, baseType: !1357, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !4540, size: 64, offset: 1472)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1317, line: 699, flags: DIFlagFwdDecl)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !3856, size: 64, offset: 1536)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !4544, size: 64, offset: 1600)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !4549, size: 2432, offset: 1856)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4351, line: 518, size: 2432, elements: !4550)
!4550 = !{!4551, !4552, !4553, !4555, !4587}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4549, file: !4351, line: 519, baseType: !7, size: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4549, file: !4351, line: 520, baseType: !1755, size: 256, offset: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4549, file: !4351, line: 521, baseType: !4554, size: 192, offset: 320)
!4554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1592)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4549, file: !4351, line: 522, baseType: !4556, size: 1728, offset: 512)
!4556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4557, size: 1728, elements: !1592)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4351, line: 222, size: 576, elements: !4558)
!4558 = !{!4559, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4557, file: !4351, line: 223, baseType: !4560, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4351, line: 443, size: 256, elements: !4562)
!4562 = !{!4563, !4564, !4577, !4578}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4561, file: !4351, line: 444, baseType: !32, size: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4561, file: !4351, line: 445, baseType: !4565, size: 64, offset: 64)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4567)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4351, line: 310, size: 512, elements: !4568)
!4568 = !{!4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4567, file: !4351, line: 311, baseType: !1628, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4567, file: !4351, line: 312, baseType: !1628, size: 64, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4567, file: !4351, line: 313, baseType: !1628, size: 64, offset: 128)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4567, file: !4351, line: 314, baseType: !1628, size: 64, offset: 192)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4567, file: !4351, line: 315, baseType: !4354, size: 64, offset: 256)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4567, file: !4351, line: 316, baseType: !4354, size: 64, offset: 320)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4567, file: !4351, line: 317, baseType: !4354, size: 64, offset: 384)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4567, file: !4351, line: 318, baseType: !4431, size: 64, offset: 448)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4561, file: !4351, line: 446, baseType: !980, size: 64, offset: 128)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4561, file: !4351, line: 447, baseType: !4560, size: 64, offset: 192)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4557, file: !4351, line: 224, baseType: !32, size: 32, offset: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4557, file: !4351, line: 226, baseType: !284, size: 128, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4557, file: !4351, line: 227, baseType: !312, size: 64, offset: 256)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4557, file: !4351, line: 228, baseType: !7, size: 32, offset: 320)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4557, file: !4351, line: 229, baseType: !7, size: 32, offset: 352)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4557, file: !4351, line: 230, baseType: !4395, size: 64, offset: 384)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4557, file: !4351, line: 231, baseType: !4395, size: 64, offset: 448)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4557, file: !4351, line: 232, baseType: !591, size: 64, offset: 512)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4549, file: !4351, line: 523, baseType: !4588, size: 192, offset: 2240)
!4588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4565, size: 192, elements: !1592)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !4590, size: 2112, offset: 4288)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !4591)
!4591 = !{!4592, !4593, !4594}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4590, file: !1317, line: 1411, baseType: !32, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4590, file: !1317, line: 1412, baseType: !1889, size: 128, offset: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4590, file: !1317, line: 1413, baseType: !4595, size: 1920, offset: 192)
!4595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4596, size: 1920, elements: !1592)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4597, line: 12, size: 640, elements: !4598)
!4597 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4598 = !{!4599, !4607, !4609, !4614, !4615}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4596, file: !4597, line: 13, baseType: !4600, size: 320)
!4600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4601, line: 17, size: 320, elements: !4602)
!4601 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4602 = !{!4603, !4604, !4605, !4606}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4600, file: !4601, line: 18, baseType: !32, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4600, file: !4601, line: 19, baseType: !32, size: 32, offset: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4600, file: !4601, line: 20, baseType: !1889, size: 128, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4600, file: !4601, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4596, file: !4597, line: 14, baseType: !4608, size: 64, offset: 320)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4596, file: !4597, line: 15, baseType: !4610, size: 64, offset: 384)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4611, line: 16, size: 64, elements: !4612)
!4611 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4612 = !{!4613}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4610, file: !4611, line: 17, baseType: !2326, size: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4596, file: !4597, line: 16, baseType: !1889, size: 128, offset: 448)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4596, file: !4597, line: 17, baseType: !383, size: 32, offset: 576)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !4622, size: 64, offset: 6720)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !4625, size: 256, offset: 6784)
!4625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !4627, size: 128, offset: 7040)
!4627 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4628, line: 18, baseType: !4629)
!4628 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4628, line: 16, size: 128, elements: !4630)
!4630 = !{!4631}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4629, file: !4628, line: 17, baseType: !3225, size: 128)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !4634, size: 32, offset: 7200)
!4634 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1665, size: 192, offset: 7232)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !4638, size: 64, offset: 7488)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4640)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !4641)
!4641 = !{!4642, !4646, !4647, !4654, !4660, !4664, !4668, !4672, !4673, !4677, !4681, !4686, !4690}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4640, file: !1336, line: 136, baseType: !4643, size: 64)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!32, !1338, !7}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4640, file: !1336, line: 137, baseType: !4643, size: 64, offset: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4640, file: !1336, line: 138, baseType: !4648, size: 64, offset: 128)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!32, !4651, !4653}
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4640, file: !1336, line: 139, baseType: !4655, size: 64, offset: 192)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!32, !4651, !7, !292, !4658}
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4640, file: !1336, line: 141, baseType: !4661, size: 64, offset: 256)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!32, !4651}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4640, file: !1336, line: 142, baseType: !4665, size: 64, offset: 320)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!32, !1338}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4640, file: !1336, line: 143, baseType: !4669, size: 64, offset: 384)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{null, !1338}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4640, file: !1336, line: 144, baseType: !4669, size: 64, offset: 448)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4640, file: !1336, line: 145, baseType: !4674, size: 64, offset: 512)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{null, !1338, !1375}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4640, file: !1336, line: 146, baseType: !4678, size: 64, offset: 576)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!1038, !1338, !1038, !32}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4640, file: !1336, line: 147, baseType: !4682, size: 64, offset: 640)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!1334, !4685}
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4640, file: !1336, line: 148, baseType: !4687, size: 64, offset: 704)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!32, !1492, !771}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4640, file: !1336, line: 149, baseType: !4691, size: 64, offset: 768)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!1338, !1338, !4694}
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !4698, size: 448, offset: 7616)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4337, line: 60, size: 448, elements: !4699)
!4699 = !{!4700, !4705, !4706, !4707, !4708, !4709, !4710}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4698, file: !4337, line: 61, baseType: !4701, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!312, !4704, !4335}
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4698, file: !4337, line: 63, baseType: !4701, size: 64, offset: 64)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4698, file: !4337, line: 66, baseType: !998, size: 64, offset: 128)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4698, file: !4337, line: 67, baseType: !32, size: 32, offset: 192)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4698, file: !4337, line: 68, baseType: !7, size: 32, offset: 224)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4698, file: !4337, line: 71, baseType: !284, size: 128, offset: 256)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4698, file: !4337, line: 77, baseType: !4711, size: 64, offset: 384)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2025, size: 32, offset: 8224)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !4717, size: 64, offset: 8256)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2830, line: 18, flags: DIFlagFwdDecl)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1581, size: 64, offset: 8320)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2781, size: 64, offset: 8384)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !4722, size: 64, offset: 8448)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4723, line: 52, size: 64, elements: !4724)
!4723 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4724 = !{!4725}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4722, file: !4723, line: 53, baseType: !4726, size: 64)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4723, line: 40, size: 256, elements: !4728)
!4728 = !{!4729, !4730, !4735}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4727, file: !4723, line: 42, baseType: !1670)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4727, file: !4723, line: 44, baseType: !4731, size: 192)
!4731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4723, line: 28, size: 192, elements: !4732)
!4732 = !{!4733, !4734}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4731, file: !4723, line: 29, baseType: !284, size: 128)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4731, file: !4723, line: 31, baseType: !998, size: 64, offset: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4727, file: !4723, line: 49, baseType: !998, size: 64, offset: 192)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !4722, size: 64, offset: 8512)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2829, size: 256, offset: 8704)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1665, size: 192, offset: 8960)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1670, offset: 9184)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1670, offset: 9344)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1732, size: 64, offset: 256)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!4747 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !4748, size: 32, offset: 384)
!4748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !4749)
!4749 = !{!4750, !4752}
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4748, file: !1317, line: 640, baseType: !4751, size: 32)
!4751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4748, file: !1317, line: 641, baseType: !7, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1670, offset: 896)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !4515, size: 64, offset: 960)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1755, size: 256, offset: 1088)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!4772 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !4773, size: 128, offset: 2112)
!4773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !4774)
!4774 = !{!4775, !4776}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4773, file: !1317, line: 679, baseType: !1581, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4773, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!4783 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !4784, size: 64, offset: 2496)
!4784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !4785)
!4785 = !{!4786, !4991}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4784, file: !1317, line: 691, baseType: !4787, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4789)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !4790)
!4790 = !{!4791, !4792, !4796, !4800, !4804, !4805, !4806, !4810, !4823, !4824, !4831, !4835, !4836, !4840, !4841, !4845, !4850, !4851, !4855, !4859, !4951, !4955, !4956, !4960, !4961, !4965, !4969, !4974, !4978, !4982, !4986, !4990}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4789, file: !1317, line: 1823, baseType: !980, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4789, file: !1317, line: 1824, baseType: !4793, size: 64, offset: 64)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!1476, !1315, !1476, !32}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4789, file: !1317, line: 1825, baseType: !4797, size: 64, offset: 128)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!1521, !1315, !1038, !1039, !1694}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4789, file: !1317, line: 1826, baseType: !4801, size: 64, offset: 192)
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!1521, !1315, !292, !1039, !1694}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4789, file: !1317, line: 1827, baseType: !1825, size: 64, offset: 256)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4789, file: !1317, line: 1828, baseType: !1825, size: 64, offset: 320)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4789, file: !1317, line: 1829, baseType: !4807, size: 64, offset: 384)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!32, !1828, !771}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4789, file: !1317, line: 1830, baseType: !4811, size: 64, offset: 448)
!4811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 64)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!32, !1315, !4814}
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !4816)
!4816 = !{!4817, !4822}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4815, file: !1317, line: 1777, baseType: !4818, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !4819)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!32, !4814, !292, !32, !1476, !331, !7}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4815, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4789, file: !1317, line: 1831, baseType: !4811, size: 64, offset: 512)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4789, file: !1317, line: 1832, baseType: !4825, size: 64, offset: 576)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!4828, !1315, !4829}
!4828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1565, line: 27, flags: DIFlagFwdDecl)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4789, file: !1317, line: 1833, baseType: !4832, size: 64, offset: 640)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!998, !1315, !7, !312}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4789, file: !1317, line: 1834, baseType: !4832, size: 64, offset: 704)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4789, file: !1317, line: 1835, baseType: !4837, size: 64, offset: 768)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!32, !1315, !2098}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4789, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4789, file: !1317, line: 1837, baseType: !4842, size: 64, offset: 896)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!32, !1375, !1315}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4789, file: !1317, line: 1838, baseType: !4846, size: 64, offset: 960)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!32, !1315, !4849}
!4849 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4789, file: !1317, line: 1839, baseType: !4842, size: 64, offset: 1024)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4789, file: !1317, line: 1840, baseType: !4852, size: 64, offset: 1088)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!32, !1315, !1476, !1476, !32}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4789, file: !1317, line: 1841, baseType: !4856, size: 64, offset: 1152)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!32, !32, !1315, !32}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4789, file: !1317, line: 1842, baseType: !4860, size: 64, offset: 1216)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!32, !1315, !32, !4863}
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !4865)
!4865 = !{!4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4896, !4927}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4864, file: !1317, line: 1063, baseType: !4863, size: 64)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4864, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4864, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4864, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4864, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4864, file: !1317, line: 1072, baseType: !4849, size: 64, offset: 576)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4864, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4864, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4864, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4864, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4864, file: !1317, line: 1077, baseType: !1889, size: 128, offset: 768)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4864, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4864, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4864, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4864, file: !1317, line: 1082, baseType: !1908, size: 64, offset: 1088)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4864, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4864, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4864, file: !1317, line: 1087, baseType: !4884, size: 64, offset: 1280)
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4886)
!4886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !4887)
!4887 = !{!4888, !4892}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4886, file: !1317, line: 1012, baseType: !4889, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{null, !4863, !4863}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4886, file: !1317, line: 1013, baseType: !4893, size: 64, offset: 64)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{null, !4863}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4864, file: !1317, line: 1088, baseType: !4897, size: 64, offset: 1344)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4899)
!4899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !4900)
!4900 = !{!4901, !4905, !4909, !4910, !4914, !4918, !4922, !4926}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4899, file: !1317, line: 1017, baseType: !4902, size: 64)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4903, size: 64)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!4849, !4849}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4899, file: !1317, line: 1018, baseType: !4906, size: 64, offset: 64)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{null, !4849}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4899, file: !1317, line: 1019, baseType: !4893, size: 64, offset: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4899, file: !1317, line: 1020, baseType: !4911, size: 64, offset: 192)
!4911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4912, size: 64)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!32, !4863, !32}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4899, file: !1317, line: 1021, baseType: !4915, size: 64, offset: 256)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!771, !4863}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4899, file: !1317, line: 1022, baseType: !4919, size: 64, offset: 320)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!32, !4863, !32, !287}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4899, file: !1317, line: 1023, baseType: !4923, size: 64, offset: 384)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{null, !4863, !1802}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4899, file: !1317, line: 1024, baseType: !4915, size: 64, offset: 448)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4864, file: !1317, line: 1097, baseType: !4928, size: 256, offset: 1408)
!4928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4864, file: !1317, line: 1089, size: 256, elements: !4929)
!4929 = !{!4930, !4939, !4945}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4928, file: !1317, line: 1090, baseType: !4931, size: 256)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4932, line: 10, size: 256, elements: !4933)
!4932 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4933 = !{!4934, !4935, !4938}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4931, file: !4932, line: 11, baseType: !987, size: 32)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4931, file: !4932, line: 12, baseType: !4936, size: 64, offset: 64)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4932, line: 5, flags: DIFlagFwdDecl)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4931, file: !4932, line: 13, baseType: !284, size: 128, offset: 128)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4928, file: !1317, line: 1091, baseType: !4940, size: 64)
!4940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4932, line: 17, size: 64, elements: !4941)
!4941 = !{!4942}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4940, file: !4932, line: 18, baseType: !4943, size: 64)
!4943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4944, size: 64)
!4944 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4932, line: 16, flags: DIFlagFwdDecl)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4928, file: !1317, line: 1096, baseType: !4946, size: 192)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4928, file: !1317, line: 1092, size: 192, elements: !4947)
!4947 = !{!4948, !4949, !4950}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4946, file: !1317, line: 1093, baseType: !284, size: 128)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4946, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4946, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4789, file: !1317, line: 1843, baseType: !4952, size: 64, offset: 1280)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!1521, !1315, !1719, !32, !1039, !1694, !32}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4789, file: !1317, line: 1844, baseType: !2218, size: 64, offset: 1344)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4789, file: !1317, line: 1845, baseType: !4957, size: 64, offset: 1408)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!32, !32}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4789, file: !1317, line: 1846, baseType: !4860, size: 64, offset: 1472)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4789, file: !1317, line: 1847, baseType: !4962, size: 64, offset: 1536)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!1521, !1883, !1315, !1694, !1039, !7}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4789, file: !1317, line: 1848, baseType: !4966, size: 64, offset: 1600)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!1521, !1315, !1694, !1883, !1039, !7}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4789, file: !1317, line: 1849, baseType: !4970, size: 64, offset: 1664)
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!32, !1315, !998, !4973, !1802}
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4789, file: !1317, line: 1850, baseType: !4975, size: 64, offset: 1728)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!998, !1315, !32, !1476, !1476}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4789, file: !1317, line: 1852, baseType: !4979, size: 64, offset: 1792)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !1653, !1315}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4789, file: !1317, line: 1856, baseType: !4983, size: 64, offset: 1856)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4789, file: !1317, line: 1858, baseType: !4987, size: 64, offset: 1920)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4789, file: !1317, line: 1861, baseType: !4852, size: 64, offset: 1984)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4784, file: !1317, line: 692, baseType: !1607, size: 64)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !4993, size: 64, offset: 2560)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !4995)
!4995 = !{!4996, !4997, !4998, !4999}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4994, file: !1317, line: 1101, baseType: !1670)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4994, file: !1317, line: 1102, baseType: !284, size: 128)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4994, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4994, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1733, size: 1216, align: 64, offset: 2624)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!5002 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !5003, size: 64, offset: 3968)
!5003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !5004)
!5004 = !{!5005, !5006, !5007, !5010, !5011}
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5003, file: !1317, line: 698, baseType: !1883, size: 64)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5003, file: !1317, line: 699, baseType: !4540, size: 64)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5003, file: !1317, line: 700, baseType: !5008, size: 64)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1317, line: 700, flags: DIFlagFwdDecl)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5003, file: !1317, line: 701, baseType: !1038, size: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5003, file: !1317, line: 702, baseType: !7, size: 32)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !4622, size: 64, offset: 4096)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !5018, size: 32, offset: 704)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5019, line: 25, size: 32, elements: !5020)
!5019 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5020 = !{!5021}
!5021 = !DIDerivedType(tag: DW_TAG_member, scope: !5018, file: !5019, line: 26, baseType: !5022, size: 32)
!5022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5018, file: !5019, line: 26, size: 32, elements: !5023)
!5023 = !{!5024}
!5024 = !DIDerivedType(tag: DW_TAG_member, scope: !5022, file: !5019, line: 30, baseType: !5025, size: 32)
!5025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5022, file: !5019, line: 30, size: 32, elements: !5026)
!5026 = !{!5027, !5028}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5025, file: !5019, line: 31, baseType: !1670)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5025, file: !5019, line: 32, baseType: !32, size: 32)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !4638, size: 64, offset: 768)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!5033 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !5034, size: 128, offset: 1024)
!5034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !5035)
!5035 = !{!5036, !5037}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5034, file: !1336, line: 108, baseType: !284, size: 128)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5034, file: !1336, line: 109, baseType: !5038, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !5042, size: 128, offset: 1408)
!5042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !5043)
!5043 = !{!5044, !5045, !5046}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5042, file: !1336, line: 117, baseType: !276, size: 128)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5042, file: !1336, line: 118, baseType: !1353, size: 128)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5042, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !4787, size: 64, offset: 320)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1670, offset: 384)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !5051, size: 32, offset: 384)
!5051 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !5052)
!5052 = !{!5053, !5054, !5055, !5056, !5057, !5058}
!5053 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!5054 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!5055 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!5056 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!5057 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!5058 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !4634, size: 32, offset: 544)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1665, size: 192, offset: 576)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !5065, size: 192, offset: 832)
!5065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !5066)
!5066 = !{!5067, !5068, !5069, !5077, !5078, !5079}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5065, file: !1317, line: 886, baseType: !1912)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5065, file: !1317, line: 887, baseType: !2571, size: 64)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5065, file: !1317, line: 888, baseType: !5070, size: 32, offset: 64)
!5070 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2573, line: 9, baseType: !7, size: 32, elements: !5071)
!5071 = !{!5072, !5073, !5074, !5075, !5076}
!5072 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!5073 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!5074 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!5075 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!5076 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5065, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5065, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5065, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2642, size: 64, offset: 1024)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !5082, size: 256, offset: 1088)
!5082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !5083)
!5083 = !{!5084, !5085, !5086, !5087, !5088, !5089}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5082, file: !1317, line: 897, baseType: !312, size: 64)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5082, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5082, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5082, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5082, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5082, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1732, size: 64, offset: 1728)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2025, size: 32, offset: 1792)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2025, size: 32, offset: 1824)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !5098, size: 64, offset: 192)
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{null, !1310}
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !5102, size: 64, offset: 256)
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!32, !1310, !591, !591}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !5098, size: 64, offset: 320)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !5107, size: 64, offset: 384)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!591, !1310, !591}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !5111, size: 64, offset: 448)
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!32, !1310, !5114, !1111}
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 64)
!5115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !5111, size: 64, offset: 512)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !5111, size: 64, offset: 576)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !5111, size: 64, offset: 640)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !5107, size: 64, offset: 704)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !5121, size: 64, offset: 768)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!32, !1310, !591, !591, !331}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !5125, size: 64, offset: 832)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!32, !1310, !591}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !5129, size: 64, offset: 896)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!32, !1310, !591, !331}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !5125, size: 64, offset: 960)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !5125, size: 64, offset: 1024)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !5135, size: 64, offset: 1088)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!591, !1310, !1315, !32}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !5140, size: 64, offset: 1216)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!32, !1310, !5143}
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !5145)
!5145 = !{!5146, !5147, !5148, !5149, !5150}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5144, file: !96, line: 66, baseType: !481, size: 8)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5144, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5144, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5144, file: !96, line: 69, baseType: !2315, size: 16, offset: 16)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5144, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !5152, size: 64, offset: 1280)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!987, !591}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !5156, size: 64, offset: 1344)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{null, !1310, !591, !1653}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !5160, size: 64, offset: 1408)
!5160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 64)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{!32, !5163, !5165, !5168, !5168}
!5163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 64)
!5164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5167)
!5167 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5170)
!5170 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !5172, size: 64, offset: 1472)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 64)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{!32, !1310, !5175}
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !5177)
!5177 = !{!5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5199, !5200, !5201, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5258, !5259, !5278, !5279, !5280, !5289, !5291, !5292, !5293, !5294, !5295, !5297, !5298, !5313, !5315, !5321, !5327, !5335, !5336, !5337, !5338, !5339, !5340, !5348, !5355}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5176, file: !65, line: 758, baseType: !373, size: 64)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5176, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5176, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5176, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5176, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5176, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5176, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5176, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5176, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5176, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5176, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5176, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5176, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5176, file: !65, line: 771, baseType: !5192, size: 64, offset: 448)
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5193, size: 64)
!5193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5194)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !5195)
!5195 = !{!5196, !5197, !5198}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5194, file: !65, line: 752, baseType: !987, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5194, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5194, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5176, file: !65, line: 772, baseType: !1665, size: 192, offset: 512)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5176, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5176, file: !65, line: 774, baseType: !5202, size: 64, offset: 768)
!5202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5203, size: 64)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !5204)
!5204 = !{!5205, !5206, !5207, !5208, !5209, !5221, !5222, !5224, !5225, !5226, !5227}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5203, file: !65, line: 588, baseType: !276, size: 128)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5203, file: !65, line: 590, baseType: !1665, size: 192, offset: 128)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5203, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5203, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5203, file: !65, line: 597, baseType: !5210, size: 256, offset: 448)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5203, file: !65, line: 593, size: 256, elements: !5211)
!5211 = !{!5212, !5219, !5220}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5210, file: !65, line: 594, baseType: !5213, size: 112)
!5213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !5214)
!5214 = !{!5215, !5216, !5217}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5213, file: !65, line: 510, baseType: !794, size: 8)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5213, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5213, file: !65, line: 512, baseType: !5218, size: 96, offset: 16)
!5218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !4150)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5210, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5210, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5203, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5203, file: !65, line: 604, baseType: !5223, size: 192, offset: 768)
!5223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 192, elements: !1592)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5203, file: !65, line: 606, baseType: !3398, size: 96, offset: 960)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5203, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5203, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5203, file: !65, line: 610, baseType: !5228, size: 1728, offset: 1216)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !5229)
!5229 = !{!5230, !5231, !5232, !5236, !5237, !5243}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5228, file: !65, line: 570, baseType: !312, size: 64)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5228, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5228, file: !65, line: 572, baseType: !5233, size: 1024, offset: 128)
!5233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !5234)
!5234 = !{!5235}
!5235 = !DISubrange(count: 128)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5228, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5228, file: !65, line: 574, baseType: !5238, size: 384, offset: 1280)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5239, line: 40, size: 384, elements: !5240)
!5239 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5240 = !{!5241}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5238, file: !5239, line: 41, baseType: !5242, size: 384)
!5242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2664)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5228, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5176, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5176, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5176, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5176, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5176, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5176, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5176, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5176, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5176, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5176, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5176, file: !65, line: 786, baseType: !5168, size: 64, offset: 1152)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5176, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5176, file: !65, line: 789, baseType: !5257, size: 64, offset: 1280)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5176, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5176, file: !65, line: 791, baseType: !5260, size: 64, offset: 1408)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !5262)
!5262 = !{!5263, !5264, !5265, !5266, !5274, !5275, !5276, !5277}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5261, file: !65, line: 735, baseType: !591, size: 64)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5261, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5261, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!5266 = !DIDerivedType(tag: DW_TAG_member, scope: !5261, file: !65, line: 738, baseType: !5267, size: 128, offset: 192)
!5267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5261, file: !65, line: 738, size: 128, elements: !5268)
!5268 = !{!5269}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5267, file: !65, line: 742, baseType: !5270, size: 128)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5267, file: !65, line: 739, size: 128, elements: !5271)
!5271 = !{!5272, !5273}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5270, file: !65, line: 740, baseType: !1310, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5270, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5261, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5261, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5261, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5261, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5176, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5176, file: !65, line: 793, baseType: !5228, size: 1728, offset: 1536)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5176, file: !65, line: 794, baseType: !5281, size: 64, offset: 3264)
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 64)
!5282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5283)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !5284)
!5284 = !{!5285}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5283, file: !65, line: 433, baseType: !5286, size: 64)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{!32, !1088, !5114, !1111}
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5176, file: !65, line: 795, baseType: !5290, size: 64, offset: 3328)
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5176, file: !65, line: 796, baseType: !1665, size: 192, offset: 3392)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5176, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5176, file: !65, line: 798, baseType: !1953, size: 64, offset: 3648)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5176, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5176, file: !65, line: 800, baseType: !5296, size: 128, offset: 3776)
!5296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2664)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5176, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5176, file: !65, line: 805, baseType: !5299, size: 64, offset: 4032)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !5301)
!5301 = !{!5302, !5303, !5304, !5307, !5308, !5309, !5310, !5311, !5312}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5300, file: !65, line: 479, baseType: !1088, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5300, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5300, file: !65, line: 481, baseType: !5305, size: 64, offset: 128)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5300, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5300, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5300, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5300, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5300, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5300, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5176, file: !65, line: 806, baseType: !5314, size: 64, offset: 4096)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5176, file: !65, line: 807, baseType: !5316, size: 64, offset: 4160)
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 64)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !5318)
!5318 = !{!5319, !5320}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5317, file: !96, line: 4964, baseType: !493, size: 32)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5317, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5176, file: !65, line: 808, baseType: !5322, size: 64, offset: 4224)
!5322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5323, size: 64)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !5324)
!5324 = !{!5325, !5326}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5323, file: !65, line: 725, baseType: !581, size: 16)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5323, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5176, file: !65, line: 815, baseType: !5328, size: 64, offset: 4288)
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5329, size: 64)
!5329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !5330)
!5330 = !{!5331, !5332, !5333, !5334}
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5329, file: !96, line: 4972, baseType: !493, size: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5329, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5329, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5329, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5176, file: !65, line: 823, baseType: !1802, size: 64, offset: 4352)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5176, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5176, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5176, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5176, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5176, file: !65, line: 832, baseType: !5341, size: 64, offset: 4544)
!5341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 64)
!5342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5343, line: 17, size: 96, elements: !5344)
!5343 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5344 = !{!5345, !5346, !5347}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32, offset: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32, offset: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5176, file: !65, line: 833, baseType: !5349, size: 64, offset: 4608)
!5349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 64)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !5351)
!5351 = !{!5352, !5353, !5354}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5350, file: !65, line: 504, baseType: !331, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5350, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5350, file: !65, line: 506, baseType: !3071, offset: 128)
!5355 = !DIDerivedType(tag: DW_TAG_member, scope: !5176, file: !65, line: 834, baseType: !5356, size: 256, offset: 4672)
!5356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5176, file: !65, line: 834, size: 256, elements: !5357)
!5357 = !{!5358, !5359}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5356, file: !65, line: 835, baseType: !2829, size: 256)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5356, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !5361, size: 64, offset: 1536)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{null, !1310, !5175}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !5365, size: 64, offset: 1600)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !1310, !987, !1088, !1088}
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !5369, size: 64, offset: 1664)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!32, !5163, !5372, !987}
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !5374, size: 64, offset: 1728)
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!32, !5163, !331, !2516}
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !5378, size: 64, offset: 1792)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!32, !1310, !2098}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !5382, size: 64, offset: 1856)
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5383, size: 64)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!4828, !1310, !1315, !4829}
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !5386, size: 64, offset: 1920)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 64)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!32, !5389, !591, !987}
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5390, size: 64)
!5390 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !5392, size: 64, offset: 1984)
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 64)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !5389, !591, !987}
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !5396, size: 64, offset: 2048)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!5399, !591}
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !5403, size: 64, offset: 2112)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!771, !5163, !5163}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !5407, size: 64, offset: 2176)
!5407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !5410, size: 64, offset: 2304)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5412)
!5412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !5413)
!5413 = !{!5414, !5415, !5423, !5425}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5412, file: !65, line: 47, baseType: !1686, size: 64)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5412, file: !65, line: 48, baseType: !5416, size: 64, offset: 64)
!5416 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !5417)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!32, !591, !5420}
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !5422, line: 137, flags: DIFlagFwdDecl)
!5422 = !DIFile(filename: "./include/linux/proc_fs.h", directory: "/home/lizy2001/genbc/linux")
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5412, file: !65, line: 49, baseType: !5424, size: 64, offset: 128)
!5424 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5412, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !5314, size: 64, offset: 448)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !5439, size: 128, offset: 512)
!5439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !5440)
!5440 = !{!5441, !5442}
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5439, file: !65, line: 137, baseType: !987, size: 32)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5439, file: !65, line: 138, baseType: !1953, size: 64, offset: 64)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2829, size: 256, offset: 1152)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1665, size: 192, offset: 1408)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !5454, size: 64, offset: 2112)
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5456)
!5456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !5457)
!5457 = !{!5458, !5462, !5463, !5467}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5456, file: !65, line: 213, baseType: !5459, size: 64)
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 64)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{!32, !1096, !591, !591}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5456, file: !65, line: 215, baseType: !5459, size: 64, offset: 64)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5456, file: !65, line: 217, baseType: !5464, size: 64, offset: 128)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5465, size: 64)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!32, !1096, !591, !591, !331}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5456, file: !65, line: 219, baseType: !5468, size: 64, offset: 192)
!5468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5469, size: 64)
!5469 = !DISubroutineType(types: !5470)
!5470 = !{!32, !1096, !591}
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !5474, size: 128)
!5474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !5475)
!5475 = !{!5476, !5479}
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5474, file: !31, line: 909, baseType: !5477, size: 64)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!5478 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5474, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !5481, size: 64, offset: 4096)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!32, !290, !32, !5484, !987}
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5487, line: 94, size: 256, elements: !5488)
!5487 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5488 = !{!5489, !5490, !5491, !5492, !5493, !5494, !5499}
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5486, file: !5487, line: 95, baseType: !591, size: 64)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5486, file: !5487, line: 96, baseType: !581, size: 16, offset: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5486, file: !5487, line: 97, baseType: !581, size: 16, offset: 80)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5486, file: !5487, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5486, file: !5487, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5486, file: !5487, line: 103, baseType: !5495, size: 64, offset: 128)
!5495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5487, line: 50, size: 64, elements: !5496)
!5496 = !{!5497, !5498}
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5495, file: !5487, line: 51, baseType: !987, size: 32)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5495, file: !5487, line: 52, baseType: !987, size: 32, offset: 32)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5486, file: !5487, line: 104, baseType: !290, size: 64, offset: 192)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !5501, size: 64, offset: 4160)
!5501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5502, size: 64)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{!32, !290, !987, !987}
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !5505, size: 64, offset: 4224)
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5506, size: 64)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!5508, !290}
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !5511, size: 64, offset: 4288)
!5511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5512, size: 64)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{!32, !290, !5514, !32}
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !5517, size: 64, offset: 4352)
!5517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5518, size: 64)
!5518 = !DISubroutineType(types: !5519)
!5519 = !{!290, !290}
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !5521, size: 64, offset: 4032)
!5521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5522, size: 64)
!5522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5523)
!5523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !5524)
!5524 = !{!5525, !5526, !5546, !5547, !5558, !5570, !5574, !5578, !5582, !5583, !5584, !5601, !5602, !5614, !5615, !5645, !5646, !5662, !5666, !5675, !5686, !5690, !5703, !5707, !5711, !5721, !5722, !5723, !5724, !5728, !5729, !5831, !5835, !5845, !5849, !5850, !5851, !5855, !5863, !5867, !5871, !5887, !5891, !5903, !5907, !5908, !5923, !5935, !5936, !5952, !5953, !5967, !5971, !5975, !5976, !6015, !6021, !6032, !6033, !6034, !6035}
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5523, file: !251, line: 422, baseType: !987, size: 32)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5523, file: !251, line: 423, baseType: !5527, size: 64, offset: 64)
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 64)
!5528 = !DISubroutineType(types: !5529)
!5529 = !{null, !290, !5530}
!5530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5531, size: 64)
!5531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !5532)
!5532 = !{!5533, !5534, !5535, !5536, !5537, !5538, !5539, !5541, !5542, !5543, !5544, !5545}
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5531, file: !209, line: 178, baseType: !493, size: 32)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5531, file: !209, line: 179, baseType: !4625, size: 256, offset: 32)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5531, file: !209, line: 180, baseType: !4625, size: 256, offset: 288)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5531, file: !209, line: 181, baseType: !4625, size: 256, offset: 544)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5531, file: !209, line: 182, baseType: !4625, size: 256, offset: 800)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5531, file: !209, line: 183, baseType: !4625, size: 256, offset: 1056)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5531, file: !209, line: 184, baseType: !5540, size: 96, offset: 1312)
!5540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !4150)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5531, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5531, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5531, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5531, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5531, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5523, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5523, file: !251, line: 425, baseType: !5548, size: 64, offset: 192)
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 64)
!5549 = !DISubroutineType(types: !5550)
!5550 = !{null, !290, !5551, !591}
!5551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5552, size: 64)
!5552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !5553)
!5553 = !{!5554, !5555, !5556, !5557}
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5552, file: !209, line: 311, baseType: !493, size: 32)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5552, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5552, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5552, file: !209, line: 314, baseType: !480, offset: 96)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5523, file: !251, line: 426, baseType: !5559, size: 64, offset: 256)
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{null, !290, !5562}
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5563, size: 64)
!5563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !5564)
!5564 = !{!5565, !5566, !5567, !5568}
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5563, file: !209, line: 204, baseType: !493, size: 32)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5563, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5563, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5563, file: !209, line: 207, baseType: !5569, size: 48, offset: 96)
!5569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5523, file: !251, line: 427, baseType: !5571, size: 64, offset: 320)
!5571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5572, size: 64)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{!32, !290, !5562}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5523, file: !251, line: 428, baseType: !5575, size: 64, offset: 384)
!5575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 64)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!987, !290}
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5523, file: !251, line: 429, baseType: !5579, size: 64, offset: 448)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{null, !290, !987}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5523, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5523, file: !251, line: 431, baseType: !5575, size: 64, offset: 576)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5523, file: !251, line: 432, baseType: !5585, size: 64, offset: 640)
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!5586 = !DISubroutineType(types: !5587)
!5587 = !{!32, !290, !5588}
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !5590)
!5590 = !{!5591, !5592}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5589, file: !251, line: 94, baseType: !208, size: 32)
!5592 = !DIDerivedType(tag: DW_TAG_member, scope: !5589, file: !251, line: 95, baseType: !5593, size: 32, offset: 32)
!5593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5589, file: !251, line: 95, size: 32, elements: !5594)
!5594 = !{!5595, !5596, !5597, !5598, !5599, !5600}
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5593, file: !251, line: 96, baseType: !221, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5593, file: !251, line: 97, baseType: !229, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5593, file: !251, line: 98, baseType: !235, size: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5593, file: !251, line: 99, baseType: !242, size: 32)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5593, file: !251, line: 100, baseType: !246, size: 32)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5593, file: !251, line: 101, baseType: !794, size: 8)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5523, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5523, file: !251, line: 435, baseType: !5603, size: 64, offset: 768)
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5604, size: 64)
!5604 = !DISubroutineType(types: !5605)
!5605 = !{!32, !290, !5606, !793}
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !5608)
!5608 = !{!5609, !5610, !5611, !5612, !5613}
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5607, file: !209, line: 336, baseType: !493, size: 32)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5607, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5607, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5607, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5607, file: !209, line: 340, baseType: !480, offset: 128)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5523, file: !251, line: 437, baseType: !5603, size: 64, offset: 832)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5523, file: !251, line: 439, baseType: !5616, size: 64, offset: 896)
!5616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5617, size: 64)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!32, !290, !5619}
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !5621)
!5621 = !{!5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643, !5644}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5620, file: !209, line: 463, baseType: !493, size: 32)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5620, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5620, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5620, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5620, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5620, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5620, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5620, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5620, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5620, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5620, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5620, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5620, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5620, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5620, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5620, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5620, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5620, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5620, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5620, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5620, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5620, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5620, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5523, file: !251, line: 440, baseType: !5616, size: 64, offset: 960)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5523, file: !251, line: 441, baseType: !5647, size: 64, offset: 1024)
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{null, !290, !5650}
!5650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5651, size: 64)
!5651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !5652)
!5652 = !{!5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660, !5661}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5651, file: !209, line: 514, baseType: !493, size: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5651, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5651, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5651, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5651, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5651, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5651, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5651, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5651, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5523, file: !251, line: 443, baseType: !5663, size: 64, offset: 1088)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!32, !290, !5650}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5523, file: !251, line: 445, baseType: !5667, size: 64, offset: 1152)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{null, !290, !5670}
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !5672)
!5672 = !{!5673, !5674}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5671, file: !251, line: 261, baseType: !331, size: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5671, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5523, file: !251, line: 447, baseType: !5676, size: 64, offset: 1216)
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 64)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{null, !290, !5679}
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !5681)
!5681 = !{!5682, !5683, !5684, !5685}
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5680, file: !209, line: 576, baseType: !493, size: 32)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5680, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5680, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5680, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5523, file: !251, line: 449, baseType: !5687, size: 64, offset: 1280)
!5687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5688, size: 64)
!5688 = !DISubroutineType(types: !5689)
!5689 = !{!32, !290, !5679}
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5523, file: !251, line: 451, baseType: !5691, size: 64, offset: 1344)
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5692, size: 64)
!5692 = !DISubroutineType(types: !5693)
!5693 = !{null, !290, !5694, !5372}
!5694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5695, size: 64)
!5695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !5696)
!5696 = !{!5697, !5698, !5699, !5700, !5701}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5695, file: !209, line: 771, baseType: !493, size: 32)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5695, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5695, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5695, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5695, file: !209, line: 775, baseType: !5702, offset: 128)
!5702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5523, file: !251, line: 452, baseType: !5704, size: 64, offset: 1408)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 64)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{null, !290, !987, !793}
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5523, file: !251, line: 453, baseType: !5708, size: 64, offset: 1472)
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 64)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{!32, !290, !250}
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5523, file: !251, line: 454, baseType: !5712, size: 64, offset: 1536)
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 64)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{null, !290, !5715, !5372}
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !5717)
!5717 = !{!5718, !5719, !5720}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5716, file: !209, line: 790, baseType: !493, size: 32)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5716, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5716, file: !209, line: 792, baseType: !5702, offset: 64)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5523, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5523, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5523, file: !251, line: 458, baseType: !5575, size: 64, offset: 1728)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5523, file: !251, line: 459, baseType: !5725, size: 64, offset: 1792)
!5725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5726, size: 64)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!32, !290, !987}
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5523, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5523, file: !251, line: 461, baseType: !5730, size: 64, offset: 1920)
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5731, size: 64)
!5731 = !DISubroutineType(types: !5732)
!5732 = !{!32, !290, !5733, !2516}
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 64)
!5734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !5735)
!5735 = !{!5736, !5737, !5738, !5739, !5825, !5830}
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5734, file: !209, line: 1089, baseType: !493, size: 32)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5734, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5734, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !5734, file: !209, line: 1092, baseType: !5740, size: 1344, offset: 128)
!5740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !5741)
!5741 = !{!5742, !5743, !5811, !5821, !5822, !5823, !5824}
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5740, file: !209, line: 993, baseType: !493, size: 32)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !5740, file: !209, line: 994, baseType: !5744, size: 416, offset: 32)
!5744 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !5745)
!5745 = !{!5746, !5754, !5755, !5756, !5763, !5764, !5773, !5781, !5782, !5783, !5790, !5791, !5799, !5807}
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !5744, file: !209, line: 940, baseType: !5747, size: 128)
!5747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !5748)
!5748 = !{!5749, !5750, !5751, !5752, !5753}
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5747, file: !209, line: 846, baseType: !3208, size: 32)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5747, file: !209, line: 847, baseType: !3208, size: 32, offset: 32)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5747, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5747, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5747, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !5744, file: !209, line: 941, baseType: !5747, size: 128)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !5744, file: !209, line: 942, baseType: !5747, size: 128)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !5744, file: !209, line: 943, baseType: !5757, size: 128)
!5757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !5758)
!5758 = !{!5759, !5760, !5761, !5762}
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5757, file: !209, line: 863, baseType: !3208, size: 32)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5757, file: !209, line: 864, baseType: !3208, size: 32, offset: 32)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5757, file: !209, line: 865, baseType: !3208, size: 32, offset: 64)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5757, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !5744, file: !209, line: 944, baseType: !5757, size: 128)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !5744, file: !209, line: 945, baseType: !5765, size: 128)
!5765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !5766)
!5766 = !{!5767, !5768, !5769, !5770, !5771, !5772}
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5765, file: !209, line: 881, baseType: !3208, size: 32)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5765, file: !209, line: 882, baseType: !3208, size: 32, offset: 32)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5765, file: !209, line: 883, baseType: !3208, size: 32, offset: 64)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5765, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !5765, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !5765, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !5744, file: !209, line: 946, baseType: !5774, size: 320)
!5774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !5775)
!5775 = !{!5776, !5777, !5778, !5779, !5780}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5774, file: !209, line: 900, baseType: !3229, size: 128)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5774, file: !209, line: 901, baseType: !3229, size: 128, offset: 128)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5774, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5774, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5774, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !5744, file: !209, line: 947, baseType: !5774, size: 320)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !5744, file: !209, line: 948, baseType: !5774, size: 320)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !5744, file: !209, line: 949, baseType: !5784, size: 320)
!5784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !5785)
!5785 = !{!5786, !5787, !5788, !5789}
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5784, file: !209, line: 917, baseType: !3229, size: 128)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5784, file: !209, line: 918, baseType: !3229, size: 128, offset: 128)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5784, file: !209, line: 919, baseType: !3208, size: 32, offset: 256)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5784, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !5744, file: !209, line: 950, baseType: !5784, size: 320)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !5744, file: !209, line: 951, baseType: !5792, size: 320)
!5792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !5793)
!5793 = !{!5794, !5795, !5796, !5797, !5798}
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5792, file: !209, line: 932, baseType: !3229, size: 128)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5792, file: !209, line: 933, baseType: !3229, size: 128, offset: 128)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5792, file: !209, line: 934, baseType: !3208, size: 32, offset: 256)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5792, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !5792, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !5744, file: !209, line: 952, baseType: !5800, size: 112)
!5800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !5801, line: 164, size: 112, elements: !5802)
!5801 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!5802 = !{!5803, !5805, !5806}
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5800, file: !5801, line: 165, baseType: !5804, size: 48)
!5804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !5800, file: !5801, line: 166, baseType: !5804, size: 48, offset: 48)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !5800, file: !5801, line: 167, baseType: !535, size: 16, offset: 96)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !5744, file: !209, line: 953, baseType: !5808, size: 416)
!5808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !5809)
!5809 = !{!5810}
!5810 = !DISubrange(count: 52)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !5740, file: !209, line: 995, baseType: !5812, size: 160, offset: 448)
!5812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !5813)
!5813 = !{!5814, !5816, !5817, !5818, !5819}
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5812, file: !209, line: 968, baseType: !5815, size: 16)
!5815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2664)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5812, file: !209, line: 969, baseType: !5804, size: 48, offset: 16)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !5812, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !5812, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5812, file: !209, line: 972, baseType: !5820, size: 64, offset: 96)
!5820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 64, elements: !2664)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !5740, file: !209, line: 996, baseType: !5744, size: 416, offset: 608)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !5740, file: !209, line: 997, baseType: !5812, size: 160, offset: 1024)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !5740, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !5740, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!5825 = !DIDerivedType(tag: DW_TAG_member, scope: !5734, file: !209, line: 1093, baseType: !5826, size: 32, offset: 1472)
!5826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5734, file: !209, line: 1093, size: 32, elements: !5827)
!5827 = !{!5828, !5829}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !5826, file: !209, line: 1094, baseType: !493, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !5826, file: !209, line: 1095, baseType: !493, size: 32)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !5734, file: !209, line: 1097, baseType: !492, offset: 1504)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5523, file: !251, line: 463, baseType: !5832, size: 64, offset: 1984)
!5832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5833, size: 64)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{!32, !290, !5733}
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5523, file: !251, line: 464, baseType: !5836, size: 64, offset: 2048)
!5836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5837, size: 64)
!5837 = !DISubroutineType(types: !5838)
!5838 = !{!32, !290, !5839}
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 64)
!5840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !5841)
!5841 = !{!5842, !5843, !5844}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5840, file: !209, line: 1218, baseType: !493, size: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !5840, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5840, file: !209, line: 1220, baseType: !5233, size: 1024, offset: 64)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5523, file: !251, line: 465, baseType: !5846, size: 64, offset: 2112)
!5846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5847, size: 64)
!5847 = !DISubroutineType(types: !5848)
!5848 = !{!32, !290, !2516}
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5523, file: !251, line: 466, baseType: !5575, size: 64, offset: 2176)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5523, file: !251, line: 467, baseType: !5575, size: 64, offset: 2240)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5523, file: !251, line: 468, baseType: !5852, size: 64, offset: 2304)
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5853, size: 64)
!5853 = !DISubroutineType(types: !5854)
!5854 = !{!32, !290, !2516, !793, !793}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5523, file: !251, line: 470, baseType: !5856, size: 64, offset: 2368)
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 64)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!32, !290, !5859, !5861, !5862}
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!5861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5862, size: 64)
!5862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5523, file: !251, line: 472, baseType: !5864, size: 64, offset: 2432)
!5864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 64)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{!32, !290, !2516, !793, !793, !987}
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5523, file: !251, line: 474, baseType: !5868, size: 64, offset: 2496)
!5868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5869, size: 64)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!32, !290, !5859, !5861, !5862, !2516, !771}
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5523, file: !251, line: 477, baseType: !5872, size: 64, offset: 2560)
!5872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 64)
!5873 = !DISubroutineType(types: !5874)
!5874 = !{null, !290, !5875}
!5875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5876, size: 64)
!5876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !5877)
!5877 = !{!5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886}
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5876, file: !209, line: 542, baseType: !493, size: 32)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !5876, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !5876, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !5876, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !5876, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !5876, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !5876, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !5876, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !5876, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5523, file: !251, line: 478, baseType: !5888, size: 64, offset: 2624)
!5888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5889, size: 64)
!5889 = !DISubroutineType(types: !5890)
!5890 = !{!32, !290, !5875}
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5523, file: !251, line: 479, baseType: !5892, size: 64, offset: 2688)
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 64)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!32, !290, !5895}
!5895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5896, size: 64)
!5896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !5897)
!5897 = !{!5898, !5899, !5900, !5901, !5902}
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5896, file: !209, line: 1238, baseType: !493, size: 32)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5896, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5896, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5896, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5896, file: !209, line: 1242, baseType: !480, offset: 128)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5523, file: !251, line: 480, baseType: !5904, size: 64, offset: 2752)
!5904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5905, size: 64)
!5905 = !DISubroutineType(types: !5906)
!5906 = !{!32, !290, !5895, !591}
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5523, file: !251, line: 482, baseType: !5892, size: 64, offset: 2816)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5523, file: !251, line: 483, baseType: !5909, size: 64, offset: 2880)
!5909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5910, size: 64)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!32, !290, !5912}
!5912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5913, size: 64)
!5913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !5914)
!5914 = !{!5915, !5916, !5917, !5918, !5919, !5921, !5922}
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5913, file: !209, line: 1318, baseType: !493, size: 32)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !5913, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !5913, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !5913, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !5913, file: !209, line: 1322, baseType: !5920, size: 96, offset: 128)
!5920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1592)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !5913, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !5913, file: !209, line: 1324, baseType: !5920, size: 96, offset: 256)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5523, file: !251, line: 484, baseType: !5924, size: 64, offset: 2944)
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64)
!5925 = !DISubroutineType(types: !5926)
!5926 = !{!32, !290, !5927}
!5927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5928, size: 64)
!5928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !5929)
!5929 = !{!5930, !5931, !5932, !5933}
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5928, file: !209, line: 383, baseType: !493, size: 32)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5928, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !5928, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5928, file: !209, line: 386, baseType: !5934, size: 256, offset: 96)
!5934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2433)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5523, file: !251, line: 486, baseType: !5603, size: 64, offset: 3008)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5523, file: !251, line: 488, baseType: !5937, size: 64, offset: 3072)
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!32, !290, !5940}
!5940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5941, size: 64)
!5941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !5942)
!5942 = !{!5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951}
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5941, file: !209, line: 361, baseType: !493, size: 32)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5941, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !5941, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !5941, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !5941, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !5941, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !5941, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !5941, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5941, file: !209, line: 369, baseType: !2663, size: 64, offset: 256)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5523, file: !251, line: 489, baseType: !5937, size: 64, offset: 3136)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5523, file: !251, line: 490, baseType: !5954, size: 64, offset: 3200)
!5954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5955, size: 64)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{!32, !290, !5957, !591}
!5957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5958, size: 64)
!5958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5959)
!5959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !5960)
!5960 = !{!5961, !5962, !5963, !5964, !5965}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5959, file: !209, line: 245, baseType: !493, size: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5959, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5959, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5959, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5959, file: !209, line: 249, baseType: !5966, offset: 128)
!5966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5523, file: !251, line: 492, baseType: !5968, size: 64, offset: 3264)
!5968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5969, size: 64)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{!32, !290, !5957, !3258}
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5523, file: !251, line: 494, baseType: !5972, size: 64, offset: 3328)
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 64)
!5973 = !DISubroutineType(types: !5974)
!5974 = !{!32, !290, !987, !5619}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5523, file: !251, line: 496, baseType: !5972, size: 64, offset: 3392)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5523, file: !251, line: 498, baseType: !5977, size: 64, offset: 3456)
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 64)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!32, !290, !5980}
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !5982)
!5982 = !{!5983, !6008}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5981, file: !251, line: 125, baseType: !5984, size: 384)
!5984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !5985)
!5985 = !{!5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5995, !5998, !5999, !6000, !6001, !6003, !6007}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5984, file: !209, line: 1997, baseType: !493, size: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5984, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !5984, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5984, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !5984, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5984, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !5984, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !5984, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !5984, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !5984, file: !209, line: 2006, baseType: !5996, size: 8, offset: 120)
!5996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !5997)
!5997 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !5984, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !5984, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !5984, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5984, file: !209, line: 2010, baseType: !6002, size: 8, offset: 152)
!6002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2472)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5984, file: !209, line: 2011, baseType: !6004, size: 224, offset: 160)
!6004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !6005)
!6005 = !{!6006}
!6006 = !DISubrange(count: 7)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !5984, file: !209, line: 2012, baseType: !492, offset: 384)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !5981, file: !251, line: 130, baseType: !6009, size: 384, offset: 384)
!6009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5981, file: !251, line: 126, size: 384, elements: !6010)
!6010 = !{!6011, !6013, !6014}
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6009, file: !251, line: 127, baseType: !6012, size: 128)
!6012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2664)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6009, file: !251, line: 128, baseType: !6012, size: 128, offset: 128)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6009, file: !251, line: 129, baseType: !6012, size: 128, offset: 256)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5523, file: !251, line: 500, baseType: !6016, size: 64, offset: 3520)
!6016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6017, size: 64)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!32, !290, !6019}
!6019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6020, size: 64)
!6020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5981)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5523, file: !251, line: 502, baseType: !6022, size: 64, offset: 3584)
!6022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6023, size: 64)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!32, !290, !6025}
!6025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6026, size: 64)
!6026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !6027)
!6027 = !{!6028, !6029, !6030, !6031}
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6026, file: !209, line: 1390, baseType: !493, size: 32)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6026, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6026, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6026, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5523, file: !251, line: 504, baseType: !6022, size: 64, offset: 3648)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5523, file: !251, line: 506, baseType: !5712, size: 64, offset: 3712)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5523, file: !251, line: 508, baseType: !5954, size: 64, offset: 3776)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5523, file: !251, line: 510, baseType: !5968, size: 64, offset: 3840)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !6037, size: 64, offset: 4096)
!6037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6038, size: 64)
!6038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6039)
!6039 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !6041, size: 64, offset: 4160)
!6041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6042, size: 64)
!6042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6043)
!6043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !6044)
!6044 = !{!6045, !6049, !6055, !6068, !6072, !6076}
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6043, file: !31, line: 271, baseType: !6046, size: 64)
!6046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6047, size: 64)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!32, !415, !290, !476, !3258, !3258, !7}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6043, file: !31, line: 274, baseType: !6050, size: 64, offset: 64)
!6050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 64)
!6051 = !DISubroutineType(types: !6052)
!6052 = !{!32, !6053, !564}
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6043, file: !31, line: 275, baseType: !6056, size: 64, offset: 128)
!6056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6057, size: 64)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!32, !6059, !6061, !535}
!6059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6060, size: 64)
!6060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!6061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6062, size: 64)
!6062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !6063)
!6063 = !{!6064, !6065, !6066}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6062, file: !31, line: 245, baseType: !7, size: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6062, file: !31, line: 246, baseType: !3325, size: 32, offset: 32)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6062, file: !31, line: 254, baseType: !6067, size: 768, offset: 64)
!6067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !4150)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6043, file: !31, line: 276, baseType: !6069, size: 64, offset: 192)
!6069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6070, size: 64)
!6070 = !DISubroutineType(types: !6071)
!6071 = !{null, !6061, !773, !946}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6043, file: !31, line: 279, baseType: !6073, size: 64, offset: 256)
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 64)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{!771, !292, !7}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6043, file: !31, line: 280, baseType: !6077, size: 64, offset: 320)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6078, size: 64)
!6078 = !DISubroutineType(types: !6079)
!6079 = !{!535, !6053}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1670, offset: 4864)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !6107, size: 192, offset: 4864)
!6107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !6108)
!6108 = !{!6109, !6110}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6107, file: !31, line: 225, baseType: !284, size: 128)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6107, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !6107, size: 192, offset: 5056)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !6107, size: 192, offset: 5248)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !6114, size: 64, offset: 5440)
!6114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6115, size: 64)
!6115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6116, line: 192, size: 704, elements: !6117)
!6116 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6117 = !{!6118, !6119, !6120, !6360}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6115, file: !6116, line: 193, baseType: !284, size: 128)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6115, file: !6116, line: 194, baseType: !1670, offset: 128)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6115, file: !6116, line: 195, baseType: !6121, size: 512, offset: 128)
!6121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6116, line: 64, size: 512, elements: !6122)
!6122 = !{!6123, !6124, !6125, !6127, !6128, !6229, !6350, !6355, !6356, !6357, !6358, !6359}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6121, file: !6116, line: 65, baseType: !292, size: 64)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6121, file: !6116, line: 66, baseType: !284, size: 128, offset: 64)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6121, file: !6116, line: 67, baseType: !6126, size: 64, offset: 192)
!6126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 64)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6121, file: !6116, line: 68, baseType: !6114, size: 64, offset: 256)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6121, file: !6116, line: 69, baseType: !6129, size: 64, offset: 320)
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6130, size: 64)
!6130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6116, line: 138, size: 448, elements: !6131)
!6131 = !{!6132, !6136, !6155, !6157, !6190, !6221, !6225}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6130, file: !6116, line: 139, baseType: !6133, size: 64)
!6133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6134, size: 64)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{null, !6126}
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6130, file: !6116, line: 140, baseType: !6137, size: 64, offset: 64)
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6138, size: 64)
!6138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6139)
!6139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6140, line: 230, size: 128, elements: !6141)
!6140 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6141 = !{!6142, !6151}
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6139, file: !6140, line: 231, baseType: !6143, size: 64)
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 64)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{!1521, !6126, !6146, !1038}
!6146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6147, size: 64)
!6147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6140, line: 30, size: 128, elements: !6148)
!6148 = !{!6149, !6150}
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6147, file: !6140, line: 31, baseType: !292, size: 64)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6147, file: !6140, line: 32, baseType: !1379, size: 16, offset: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6139, file: !6140, line: 232, baseType: !6152, size: 64, offset: 64)
!6152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6153, size: 64)
!6153 = !DISubroutineType(types: !6154)
!6154 = !{!1521, !6126, !6146, !292, !1039}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6130, file: !6116, line: 141, baseType: !6156, size: 64, offset: 128)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 64)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6130, file: !6116, line: 142, baseType: !6158, size: 64, offset: 192)
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6159, size: 64)
!6159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6160, size: 64)
!6160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6161)
!6161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6140, line: 84, size: 320, elements: !6162)
!6162 = !{!6163, !6164, !6168, !6187, !6188}
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6161, file: !6140, line: 85, baseType: !292, size: 64)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6161, file: !6140, line: 86, baseType: !6165, size: 64, offset: 64)
!6165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6166, size: 64)
!6166 = !DISubroutineType(types: !6167)
!6167 = !{!1379, !6126, !6146, !32}
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6161, file: !6140, line: 88, baseType: !6169, size: 64, offset: 128)
!6169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6170, size: 64)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{!1379, !6126, !6172, !32}
!6172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6173, size: 64)
!6173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6140, line: 168, size: 448, elements: !6174)
!6174 = !{!6175, !6176, !6177, !6178, !6182, !6183}
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6173, file: !6140, line: 169, baseType: !6147, size: 128)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6173, file: !6140, line: 170, baseType: !1039, size: 64, offset: 128)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6173, file: !6140, line: 171, baseType: !591, size: 64, offset: 192)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6173, file: !6140, line: 172, baseType: !6179, size: 64, offset: 256)
!6179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6180, size: 64)
!6180 = !DISubroutineType(types: !6181)
!6181 = !{!1521, !1315, !6126, !6172, !1038, !1476, !1039}
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6173, file: !6140, line: 174, baseType: !6179, size: 64, offset: 320)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6173, file: !6140, line: 176, baseType: !6184, size: 64, offset: 384)
!6184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6185, size: 64)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{!32, !1315, !6126, !6172, !2098}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6161, file: !6140, line: 90, baseType: !6156, size: 64, offset: 192)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6161, file: !6140, line: 91, baseType: !6189, size: 64, offset: 256)
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6172, size: 64)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6130, file: !6116, line: 143, baseType: !6191, size: 64, offset: 256)
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 64)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!6194, !6126}
!6194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6195, size: 64)
!6195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6196)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !447, line: 39, size: 384, elements: !6197)
!6197 = !{!6198, !6204, !6208, !6212, !6216, !6220}
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6196, file: !447, line: 40, baseType: !6199, size: 32)
!6199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !447, line: 26, baseType: !7, size: 32, elements: !6200)
!6200 = !{!6201, !6202, !6203}
!6201 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!6202 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!6203 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6196, file: !447, line: 41, baseType: !6205, size: 64, offset: 64)
!6205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6206, size: 64)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{!771}
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6196, file: !447, line: 42, baseType: !6209, size: 64, offset: 128)
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6210, size: 64)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!591}
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6196, file: !447, line: 43, baseType: !6213, size: 64, offset: 192)
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6214, size: 64)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!3258, !445}
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6196, file: !447, line: 44, baseType: !6217, size: 64, offset: 256)
!6217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6218, size: 64)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!3258}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6196, file: !447, line: 45, baseType: !1415, size: 64, offset: 320)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6130, file: !6116, line: 144, baseType: !6222, size: 64, offset: 320)
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6223, size: 64)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{!3258, !6126}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6130, file: !6116, line: 145, baseType: !6226, size: 64, offset: 384)
!6226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6227, size: 64)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{null, !6126, !2904, !2905}
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6121, file: !6116, line: 70, baseType: !6230, size: 64, offset: 384)
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1565, line: 123, size: 1024, elements: !6232)
!6232 = !{!6233, !6234, !6235, !6236, !6237, !6238, !6239, !6240, !6343, !6344, !6345, !6346, !6347}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6231, file: !1565, line: 124, baseType: !383, size: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6231, file: !1565, line: 125, baseType: !383, size: 32, offset: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6231, file: !1565, line: 135, baseType: !6230, size: 64, offset: 64)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6231, file: !1565, line: 136, baseType: !292, size: 64, offset: 128)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6231, file: !1565, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6231, file: !1565, line: 140, baseType: !3258, size: 64, offset: 384)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6231, file: !1565, line: 141, baseType: !7, size: 32, offset: 448)
!6240 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !1565, line: 142, baseType: !6241, size: 256, offset: 512)
!6241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !1565, line: 142, size: 256, elements: !6242)
!6242 = !{!6243, !6283, !6287}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6241, file: !1565, line: 143, baseType: !6244, size: 192)
!6244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1565, line: 91, size: 192, elements: !6245)
!6245 = !{!6246, !6247, !6248}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6244, file: !1565, line: 92, baseType: !312, size: 64)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6244, file: !1565, line: 94, baseType: !1750, size: 64, offset: 64)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6244, file: !1565, line: 100, baseType: !6249, size: 64, offset: 128)
!6249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6250, size: 64)
!6250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1565, line: 180, size: 704, elements: !6251)
!6251 = !{!6252, !6253, !6254, !6255, !6256, !6257, !6281, !6282}
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6250, file: !1565, line: 182, baseType: !6230, size: 64)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6250, file: !1565, line: 183, baseType: !7, size: 32, offset: 64)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6250, file: !1565, line: 186, baseType: !3001, size: 192, offset: 128)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6250, file: !1565, line: 187, baseType: !987, size: 32, offset: 320)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6250, file: !1565, line: 188, baseType: !987, size: 32, offset: 352)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6250, file: !1565, line: 189, baseType: !6258, size: 64, offset: 384)
!6258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6259, size: 64)
!6259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1565, line: 168, size: 320, elements: !6260)
!6260 = !{!6261, !6265, !6269, !6273, !6277}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6259, file: !1565, line: 169, baseType: !6262, size: 64)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!32, !1653, !6249}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6259, file: !1565, line: 171, baseType: !6266, size: 64, offset: 64)
!6266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6267, size: 64)
!6267 = !DISubroutineType(types: !6268)
!6268 = !{!32, !6230, !292, !1379}
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6259, file: !1565, line: 173, baseType: !6270, size: 64, offset: 128)
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6271, size: 64)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!32, !6230}
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6259, file: !1565, line: 174, baseType: !6274, size: 64, offset: 192)
!6274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6275, size: 64)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{!32, !6230, !6230, !292}
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6259, file: !1565, line: 176, baseType: !6278, size: 64, offset: 256)
!6278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6279, size: 64)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!32, !1653, !6230, !6249}
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6250, file: !1565, line: 192, baseType: !284, size: 128, offset: 448)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6250, file: !1565, line: 194, baseType: !1889, size: 128, offset: 576)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6241, file: !1565, line: 144, baseType: !6284, size: 64)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1565, line: 103, size: 64, elements: !6285)
!6285 = !{!6286}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6284, file: !1565, line: 104, baseType: !6230, size: 64)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6241, file: !1565, line: 145, baseType: !6288, size: 256)
!6288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1565, line: 107, size: 256, elements: !6289)
!6289 = !{!6290, !6338, !6341, !6342}
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6288, file: !1565, line: 108, baseType: !6291, size: 64)
!6291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6292, size: 64)
!6292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6293)
!6293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1565, line: 217, size: 768, elements: !6294)
!6294 = !{!6295, !6315, !6319, !6320, !6321, !6322, !6323, !6327, !6328, !6329, !6330, !6334}
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6293, file: !1565, line: 222, baseType: !6296, size: 64)
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6297, size: 64)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{!32, !6299}
!6299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6300, size: 64)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1565, line: 197, size: 1088, elements: !6301)
!6301 = !{!6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6300, file: !1565, line: 199, baseType: !6230, size: 64)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6300, file: !1565, line: 200, baseType: !1315, size: 64, offset: 64)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6300, file: !1565, line: 201, baseType: !1653, size: 64, offset: 128)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6300, file: !1565, line: 202, baseType: !591, size: 64, offset: 192)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6300, file: !1565, line: 205, baseType: !1665, size: 192, offset: 256)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6300, file: !1565, line: 206, baseType: !1665, size: 192, offset: 448)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6300, file: !1565, line: 207, baseType: !32, size: 32, offset: 640)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6300, file: !1565, line: 208, baseType: !284, size: 128, offset: 704)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6300, file: !1565, line: 209, baseType: !1038, size: 64, offset: 832)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6300, file: !1565, line: 211, baseType: !1039, size: 64, offset: 896)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6300, file: !1565, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6300, file: !1565, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6300, file: !1565, line: 214, baseType: !2126, size: 64, offset: 1024)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6293, file: !1565, line: 223, baseType: !6316, size: 64, offset: 64)
!6316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6317, size: 64)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{null, !6299}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6293, file: !1565, line: 236, baseType: !1704, size: 64, offset: 128)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6293, file: !1565, line: 238, baseType: !1691, size: 64, offset: 192)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6293, file: !1565, line: 239, baseType: !1700, size: 64, offset: 256)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6293, file: !1565, line: 240, baseType: !1696, size: 64, offset: 320)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6293, file: !1565, line: 242, baseType: !6324, size: 64, offset: 384)
!6324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6325, size: 64)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{!1521, !6299, !1038, !1039, !1476}
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6293, file: !1565, line: 252, baseType: !1039, size: 64, offset: 448)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6293, file: !1565, line: 259, baseType: !771, size: 8, offset: 512)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6293, file: !1565, line: 260, baseType: !6324, size: 64, offset: 576)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6293, file: !1565, line: 263, baseType: !6331, size: 64, offset: 640)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6332, size: 64)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{!4828, !6299, !4829}
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6293, file: !1565, line: 266, baseType: !6335, size: 64, offset: 704)
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{!32, !6299, !2098}
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6288, file: !1565, line: 109, baseType: !6339, size: 64, offset: 64)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 64)
!6340 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1565, line: 31, flags: DIFlagFwdDecl)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6288, file: !1565, line: 110, baseType: !1476, size: 64, offset: 128)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6288, file: !1565, line: 111, baseType: !6230, size: 64, offset: 192)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6231, file: !1565, line: 148, baseType: !591, size: 64, offset: 768)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6231, file: !1565, line: 154, baseType: !331, size: 64, offset: 832)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6231, file: !1565, line: 156, baseType: !476, size: 16, offset: 896)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6231, file: !1565, line: 157, baseType: !1379, size: 16, offset: 912)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6231, file: !1565, line: 158, baseType: !6348, size: 64, offset: 960)
!6348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6349, size: 64)
!6349 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1565, line: 32, flags: DIFlagFwdDecl)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6121, file: !6116, line: 71, baseType: !6351, size: 32, offset: 448)
!6351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6352, line: 19, size: 32, elements: !6353)
!6352 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6353 = !{!6354}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6351, file: !6352, line: 20, baseType: !568, size: 32)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6121, file: !6116, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6121, file: !6116, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6121, file: !6116, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6121, file: !6116, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6121, file: !6116, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6115, file: !6116, line: 196, baseType: !6361, size: 64, offset: 640)
!6361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6362, size: 64)
!6362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6363)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6116, line: 156, size: 192, elements: !6364)
!6364 = !{!6365, !6370, !6375}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6363, file: !6116, line: 157, baseType: !6366, size: 64)
!6366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6367)
!6367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6368, size: 64)
!6368 = !DISubroutineType(types: !6369)
!6369 = !{!32, !6114, !6126}
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6363, file: !6116, line: 158, baseType: !6371, size: 64, offset: 64)
!6371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6372)
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6373, size: 64)
!6373 = !DISubroutineType(types: !6374)
!6374 = !{!292, !6114, !6126}
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6363, file: !6116, line: 159, baseType: !6376, size: 64, offset: 128)
!6376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6377)
!6377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6378, size: 64)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{!32, !6114, !6126, !6380}
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6116, line: 148, size: 20736, elements: !6382)
!6382 = !{!6383, !6385, !6387, !6388, !6392}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6381, file: !6116, line: 149, baseType: !6384, size: 192)
!6384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1592)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6381, file: !6116, line: 150, baseType: !6386, size: 4096, offset: 192)
!6386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3812)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6381, file: !6116, line: 151, baseType: !32, size: 32, offset: 4288)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6381, file: !6116, line: 152, baseType: !6389, size: 16384, offset: 4320)
!6389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !6390)
!6390 = !{!6391}
!6391 = !DISubrange(count: 2048)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6381, file: !6116, line: 153, baseType: !32, size: 32, offset: 20704)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !6397, size: 64, offset: 5632)
!6397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 64)
!6398 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !6400, size: 64, offset: 5696)
!6400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 64)
!6401 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !6403, size: 64, offset: 5760)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6404, size: 64)
!6404 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !6406, size: 64, offset: 5824)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 64)
!6407 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !6409, size: 64, offset: 5888)
!6409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6410, size: 64)
!6410 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !6413, size: 64, offset: 6016)
!6413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6414, size: 64)
!6414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !6415)
!6415 = !{!6416, !6417, !6418}
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6414, file: !31, line: 741, baseType: !6121, size: 512)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6414, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !6414, file: !31, line: 743, baseType: !6419, size: 512, align: 512, offset: 1024)
!6419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5487, line: 57, size: 512, align: 512, elements: !6420)
!6420 = !{!6421, !6422, !6423, !6424}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6419, file: !5487, line: 58, baseType: !290, size: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !6419, file: !5487, line: 59, baseType: !987, size: 32, offset: 64)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !6419, file: !5487, line: 60, baseType: !987, size: 32, offset: 96)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6419, file: !5487, line: 61, baseType: !5495, size: 64, offset: 128)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !6431, size: 64, offset: 6336)
!6431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6432, size: 64)
!6432 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !6433)
!6433 = !DISubroutineType(types: !6434)
!6434 = !{!6435, !6436}
!6435 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !6439, size: 64, offset: 6464)
!6439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6440, size: 64)
!6440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !6441)
!6441 = !{!6442, !6443, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453, !6454, !6455}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6440, file: !31, line: 588, baseType: !290, size: 64)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !6440, file: !31, line: 589, baseType: !6444, size: 64, offset: 64)
!6444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6445, size: 64)
!6445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !6440, file: !31, line: 590, baseType: !6444, size: 64, offset: 128)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6440, file: !31, line: 592, baseType: !6121, size: 512, offset: 192)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !6440, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !6440, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !6440, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !6440, file: !31, line: 612, baseType: !1670, offset: 896)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !6440, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !6440, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6440, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !6440, file: !31, line: 622, baseType: !6456, size: 512, offset: 1088)
!6456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !6457, line: 43, size: 512, elements: !6458)
!6457 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!6458 = !{!6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470, !6471}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !6456, file: !6457, line: 45, baseType: !7, size: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !6456, file: !6457, line: 46, baseType: !7, size: 32, offset: 32)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !6456, file: !6457, line: 47, baseType: !7, size: 32, offset: 64)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6456, file: !6457, line: 51, baseType: !7, size: 32, offset: 96)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !6456, file: !6457, line: 52, baseType: !7, size: 32, offset: 128)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !6456, file: !6457, line: 54, baseType: !7, size: 32, offset: 160)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !6456, file: !6457, line: 55, baseType: !7, size: 32, offset: 192)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !6456, file: !6457, line: 56, baseType: !7, size: 32, offset: 224)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !6456, file: !6457, line: 58, baseType: !7, size: 32, offset: 256)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !6456, file: !6457, line: 59, baseType: !312, size: 64, offset: 320)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !6456, file: !6457, line: 62, baseType: !7, size: 32, offset: 384)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !6456, file: !6457, line: 63, baseType: !7, size: 32, offset: 416)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !6456, file: !6457, line: 64, baseType: !7, size: 32, offset: 448)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !6439, size: 64, offset: 6912)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !6444, size: 64, offset: 7040)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1670, offset: 7136)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !6481, size: 64, offset: 7168)
!6481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6482, size: 64)
!6482 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3235, size: 320, offset: 7232)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !6492, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!6492 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !6493)
!6493 = !{!6494, !6495}
!6494 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!6495 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !6499, size: 64, offset: 8064)
!6499 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2984, line: 318, baseType: !6500)
!6500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2984, line: 314, size: 64, elements: !6501)
!6501 = !{!6502}
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6500, file: !2984, line: 316, baseType: !2982, size: 64)
!6503 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !6504, size: 64, offset: 8128)
!6504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !6505)
!6505 = !{!6506, !6507, !6528, !6537}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !6504, file: !31, line: 2111, baseType: !591, size: 64)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !6504, file: !31, line: 2112, baseType: !6508, size: 64)
!6508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6509, size: 64)
!6509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !6510)
!6510 = !{!6511, !6526, !6527}
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !6509, file: !31, line: 2543, baseType: !6512, size: 64)
!6512 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3072, line: 79, baseType: !6513)
!6513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3072, line: 77, size: 64, elements: !6514)
!6514 = !{!6515}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6513, file: !3072, line: 78, baseType: !6516, size: 64)
!6516 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !6517, line: 26, baseType: !6518)
!6517 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!6518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6517, line: 24, size: 64, elements: !6519)
!6519 = !{!6520}
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6518, file: !6517, line: 25, baseType: !6521, size: 64)
!6521 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !6522, line: 12, baseType: !6523)
!6522 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!6523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6522, line: 10, size: 64, elements: !6524)
!6524 = !{!6525}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6523, file: !6522, line: 11, baseType: !371, size: 64)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6509, file: !31, line: 2544, baseType: !6512, size: 64, offset: 64)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6509, file: !31, line: 2545, baseType: !3071, offset: 128)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !6504, file: !31, line: 2113, baseType: !6529, size: 64)
!6529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6530, size: 64)
!6530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !6531)
!6531 = !{!6532, !6533, !6534, !6535, !6536}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6530, file: !31, line: 2535, baseType: !331, size: 64)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6530, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6530, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6530, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6530, file: !31, line: 2539, baseType: !3071, offset: 256)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !6504, file: !31, line: 2114, baseType: !6538, size: 64)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6539 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !6541, size: 5568, offset: 8192)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !6542, line: 461, size: 5568, elements: !6543)
!6542 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!6543 = !{!6544, !6545, !6547, !6550, !6551, !6603, !6695, !6696, !6697, !6698, !6699, !6714, !6821, !6834, !6837, !6838, !6842, !6843, !6844, !6845, !6849, !6855, !6856, !6859, !6863, !6953, !6954, !6955, !6956, !6957, !6989, !6990, !6991, !6994, !6997, !6998, !6999, !7000}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6541, file: !6542, line: 462, baseType: !6121, size: 512)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6541, file: !6542, line: 463, baseType: !6546, size: 64, offset: 512)
!6546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6541, size: 64)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6541, file: !6542, line: 465, baseType: !6548, size: 64, offset: 576)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 64)
!6549 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !6542, line: 36, flags: DIFlagFwdDecl)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !6541, file: !6542, line: 467, baseType: !292, size: 64, offset: 640)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6541, file: !6542, line: 468, baseType: !6552, size: 64, offset: 704)
!6552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6553, size: 64)
!6553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6554)
!6554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !6542, line: 87, size: 384, elements: !6555)
!6555 = !{!6556, !6557, !6558, !6562, !6567, !6571}
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6554, file: !6542, line: 88, baseType: !292, size: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6554, file: !6542, line: 89, baseType: !6158, size: 64, offset: 64)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6554, file: !6542, line: 90, baseType: !6559, size: 64, offset: 128)
!6559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6560, size: 64)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!32, !6546, !6380}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6554, file: !6542, line: 91, baseType: !6563, size: 64, offset: 192)
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6564, size: 64)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!1038, !6546, !6566, !2904, !2905}
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6554, file: !6542, line: 93, baseType: !6568, size: 64, offset: 256)
!6568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6569, size: 64)
!6569 = !DISubroutineType(types: !6570)
!6570 = !{null, !6546}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6554, file: !6542, line: 95, baseType: !6572, size: 64, offset: 320)
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6573, size: 64)
!6573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6574)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6575, line: 278, size: 1472, elements: !6576)
!6575 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6576 = !{!6577, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601, !6602}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6574, file: !6575, line: 279, baseType: !6578, size: 64)
!6578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6579, size: 64)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{!32, !6546}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6574, file: !6575, line: 280, baseType: !6568, size: 64, offset: 64)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6574, file: !6575, line: 281, baseType: !6578, size: 64, offset: 128)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6574, file: !6575, line: 282, baseType: !6578, size: 64, offset: 192)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6574, file: !6575, line: 283, baseType: !6578, size: 64, offset: 256)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6574, file: !6575, line: 284, baseType: !6578, size: 64, offset: 320)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6574, file: !6575, line: 285, baseType: !6578, size: 64, offset: 384)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6574, file: !6575, line: 286, baseType: !6578, size: 64, offset: 448)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6574, file: !6575, line: 287, baseType: !6578, size: 64, offset: 512)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6574, file: !6575, line: 288, baseType: !6578, size: 64, offset: 576)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6574, file: !6575, line: 289, baseType: !6578, size: 64, offset: 640)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6574, file: !6575, line: 290, baseType: !6578, size: 64, offset: 704)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6574, file: !6575, line: 291, baseType: !6578, size: 64, offset: 768)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6574, file: !6575, line: 292, baseType: !6578, size: 64, offset: 832)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6574, file: !6575, line: 293, baseType: !6578, size: 64, offset: 896)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6574, file: !6575, line: 294, baseType: !6578, size: 64, offset: 960)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6574, file: !6575, line: 295, baseType: !6578, size: 64, offset: 1024)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6574, file: !6575, line: 296, baseType: !6578, size: 64, offset: 1088)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6574, file: !6575, line: 297, baseType: !6578, size: 64, offset: 1152)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6574, file: !6575, line: 298, baseType: !6578, size: 64, offset: 1216)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6574, file: !6575, line: 299, baseType: !6578, size: 64, offset: 1280)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6574, file: !6575, line: 300, baseType: !6578, size: 64, offset: 1344)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6574, file: !6575, line: 301, baseType: !6578, size: 64, offset: 1408)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6541, file: !6542, line: 470, baseType: !6604, size: 64, offset: 768)
!6604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6605, size: 64)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6606, line: 82, size: 1408, elements: !6607)
!6606 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6607 = !{!6608, !6609, !6610, !6611, !6612, !6613, !6614, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6686, !6690, !6693, !6694}
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6605, file: !6606, line: 83, baseType: !292, size: 64)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6605, file: !6606, line: 84, baseType: !292, size: 64, offset: 64)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6605, file: !6606, line: 85, baseType: !6546, size: 64, offset: 128)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6605, file: !6606, line: 86, baseType: !6158, size: 64, offset: 192)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6605, file: !6606, line: 87, baseType: !6158, size: 64, offset: 256)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6605, file: !6606, line: 88, baseType: !6158, size: 64, offset: 320)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6605, file: !6606, line: 90, baseType: !6615, size: 64, offset: 384)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 64)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{!32, !6546, !6618}
!6618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6619, size: 64)
!6619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6620, line: 95, size: 1152, elements: !6621)
!6620 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6621 = !{!6622, !6623, !6624, !6625, !6626, !6627, !6633, !6643, !6654, !6655, !6656, !6657, !6658, !6666, !6667, !6668, !6669, !6670, !6671}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6619, file: !6620, line: 96, baseType: !292, size: 64)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6619, file: !6620, line: 97, baseType: !6604, size: 64, offset: 64)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6619, file: !6620, line: 99, baseType: !980, size: 64, offset: 128)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6619, file: !6620, line: 100, baseType: !292, size: 64, offset: 192)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6619, file: !6620, line: 102, baseType: !771, size: 8, offset: 256)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6619, file: !6620, line: 103, baseType: !6628, size: 32, offset: 288)
!6628 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6620, line: 44, baseType: !7, size: 32, elements: !6629)
!6629 = !{!6630, !6631, !6632}
!6630 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6631 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6632 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6619, file: !6620, line: 105, baseType: !6634, size: 64, offset: 320)
!6634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6635, size: 64)
!6635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6636)
!6636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6637, line: 262, size: 1600, elements: !6638)
!6637 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6638 = !{!6639, !6640, !6641, !6642}
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6636, file: !6637, line: 263, baseType: !4625, size: 256)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6636, file: !6637, line: 264, baseType: !4625, size: 256, offset: 256)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6636, file: !6637, line: 265, baseType: !5233, size: 1024, offset: 512)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6636, file: !6637, line: 266, baseType: !3258, size: 64, offset: 1536)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6619, file: !6620, line: 106, baseType: !6644, size: 64, offset: 384)
!6644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6645, size: 64)
!6645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6646)
!6646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6637, line: 210, size: 256, elements: !6647)
!6647 = !{!6648, !6650, !6652, !6653}
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6646, file: !6637, line: 211, baseType: !6649, size: 72)
!6649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3087)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6646, file: !6637, line: 212, baseType: !6651, size: 64, offset: 128)
!6651 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6637, line: 14, baseType: !312)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6646, file: !6637, line: 213, baseType: !493, size: 32, offset: 192)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6646, file: !6637, line: 214, baseType: !493, size: 32, offset: 224)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6619, file: !6620, line: 108, baseType: !6578, size: 64, offset: 448)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6619, file: !6620, line: 109, baseType: !6568, size: 64, offset: 512)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6619, file: !6620, line: 110, baseType: !6578, size: 64, offset: 576)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6619, file: !6620, line: 111, baseType: !6568, size: 64, offset: 640)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6619, file: !6620, line: 112, baseType: !6659, size: 64, offset: 704)
!6659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6660, size: 64)
!6660 = !DISubroutineType(types: !6661)
!6661 = !{!32, !6546, !6662}
!6662 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6575, line: 52, baseType: !6663)
!6663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6575, line: 50, size: 32, elements: !6664)
!6664 = !{!6665}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6663, file: !6575, line: 51, baseType: !32, size: 32)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6619, file: !6620, line: 113, baseType: !6578, size: 64, offset: 768)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6619, file: !6620, line: 114, baseType: !6158, size: 64, offset: 832)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6619, file: !6620, line: 115, baseType: !6158, size: 64, offset: 896)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6619, file: !6620, line: 117, baseType: !6572, size: 64, offset: 960)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6619, file: !6620, line: 118, baseType: !6568, size: 64, offset: 1024)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6619, file: !6620, line: 120, baseType: !6672, size: 64, offset: 1088)
!6672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6673, size: 64)
!6673 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6620, line: 120, flags: DIFlagFwdDecl)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6605, file: !6606, line: 91, baseType: !6559, size: 64, offset: 448)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6605, file: !6606, line: 92, baseType: !6578, size: 64, offset: 512)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6605, file: !6606, line: 93, baseType: !6568, size: 64, offset: 576)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6605, file: !6606, line: 94, baseType: !6578, size: 64, offset: 640)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6605, file: !6606, line: 95, baseType: !6568, size: 64, offset: 704)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6605, file: !6606, line: 97, baseType: !6578, size: 64, offset: 768)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6605, file: !6606, line: 98, baseType: !6578, size: 64, offset: 832)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6605, file: !6606, line: 100, baseType: !6659, size: 64, offset: 896)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6605, file: !6606, line: 101, baseType: !6578, size: 64, offset: 960)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6605, file: !6606, line: 103, baseType: !6578, size: 64, offset: 1024)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6605, file: !6606, line: 105, baseType: !6578, size: 64, offset: 1088)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6605, file: !6606, line: 107, baseType: !6572, size: 64, offset: 1152)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6605, file: !6606, line: 109, baseType: !6687, size: 64, offset: 1216)
!6687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6688, size: 64)
!6688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6689)
!6689 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6606, line: 109, flags: DIFlagFwdDecl)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6605, file: !6606, line: 111, baseType: !6691, size: 64, offset: 1280)
!6691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6692, size: 64)
!6692 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6606, line: 111, flags: DIFlagFwdDecl)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6605, file: !6606, line: 112, baseType: !1585, offset: 1344)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6605, file: !6606, line: 114, baseType: !771, size: 8, offset: 1344)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6541, file: !6542, line: 471, baseType: !6618, size: 64, offset: 832)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !6541, file: !6542, line: 473, baseType: !591, size: 64, offset: 896)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6541, file: !6542, line: 475, baseType: !591, size: 64, offset: 960)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6541, file: !6542, line: 480, baseType: !1665, size: 192, offset: 1024)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !6541, file: !6542, line: 484, baseType: !6700, size: 576, offset: 1216)
!6700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !6542, line: 361, size: 576, elements: !6701)
!6701 = !{!6702, !6703, !6704, !6705, !6706, !6707}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6700, file: !6542, line: 362, baseType: !284, size: 128)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6700, file: !6542, line: 363, baseType: !284, size: 128, offset: 128)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6700, file: !6542, line: 364, baseType: !284, size: 128, offset: 256)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6700, file: !6542, line: 365, baseType: !284, size: 128, offset: 384)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6700, file: !6542, line: 366, baseType: !771, size: 8, offset: 512)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6700, file: !6542, line: 367, baseType: !6708, size: 32, offset: 544)
!6708 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !6542, line: 343, baseType: !7, size: 32, elements: !6709)
!6709 = !{!6710, !6711, !6712, !6713}
!6710 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6711 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6712 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6713 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !6541, file: !6542, line: 485, baseType: !6715, size: 2304, offset: 1792)
!6715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6575, line: 565, size: 2304, elements: !6716)
!6716 = !{!6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6732, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781, !6782, !6783, !6791, !6798, !6799, !6800, !6801, !6802, !6803, !6804, !6814, !6818}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6715, file: !6575, line: 566, baseType: !6662, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6715, file: !6575, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6715, file: !6575, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6715, file: !6575, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6715, file: !6575, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6715, file: !6575, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6715, file: !6575, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6715, file: !6575, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6715, file: !6575, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6715, file: !6575, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6715, file: !6575, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6715, file: !6575, line: 577, baseType: !987, size: 32, offset: 64)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6715, file: !6575, line: 578, baseType: !1670, offset: 96)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6715, file: !6575, line: 580, baseType: !284, size: 128, offset: 128)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6715, file: !6575, line: 581, baseType: !2597, size: 192, offset: 256)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6715, file: !6575, line: 582, baseType: !6733, size: 64, offset: 448)
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6734, size: 64)
!6734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6735, line: 43, size: 1472, elements: !6736)
!6735 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6736 = !{!6737, !6738, !6739, !6740, !6741, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758}
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6734, file: !6735, line: 44, baseType: !292, size: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6734, file: !6735, line: 45, baseType: !32, size: 32, offset: 64)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6734, file: !6735, line: 46, baseType: !284, size: 128, offset: 128)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6734, file: !6735, line: 47, baseType: !1670, offset: 256)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6734, file: !6735, line: 48, baseType: !6742, size: 64, offset: 256)
!6742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6743, size: 64)
!6743 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6575, line: 533, flags: DIFlagFwdDecl)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6734, file: !6735, line: 49, baseType: !3235, size: 320, offset: 320)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6734, file: !6735, line: 50, baseType: !312, size: 64, offset: 640)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6734, file: !6735, line: 51, baseType: !453, size: 64, offset: 704)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6734, file: !6735, line: 52, baseType: !453, size: 64, offset: 768)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6734, file: !6735, line: 53, baseType: !453, size: 64, offset: 832)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6734, file: !6735, line: 54, baseType: !453, size: 64, offset: 896)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6734, file: !6735, line: 55, baseType: !453, size: 64, offset: 960)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6734, file: !6735, line: 56, baseType: !312, size: 64, offset: 1024)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6734, file: !6735, line: 57, baseType: !312, size: 64, offset: 1088)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6734, file: !6735, line: 58, baseType: !312, size: 64, offset: 1152)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6734, file: !6735, line: 59, baseType: !312, size: 64, offset: 1216)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6734, file: !6735, line: 60, baseType: !312, size: 64, offset: 1280)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6734, file: !6735, line: 61, baseType: !6546, size: 64, offset: 1344)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6734, file: !6735, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6734, file: !6735, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6715, file: !6575, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6715, file: !6575, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6715, file: !6575, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6715, file: !6575, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6715, file: !6575, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6715, file: !6575, line: 592, baseType: !2397, size: 512, offset: 576)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6715, file: !6575, line: 593, baseType: !331, size: 64, offset: 1088)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6715, file: !6575, line: 594, baseType: !2829, size: 256, offset: 1152)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6715, file: !6575, line: 595, baseType: !1889, size: 128, offset: 1408)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6715, file: !6575, line: 596, baseType: !6742, size: 64, offset: 1536)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6715, file: !6575, line: 597, baseType: !383, size: 32, offset: 1600)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6715, file: !6575, line: 598, baseType: !383, size: 32, offset: 1632)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6715, file: !6575, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6715, file: !6575, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6715, file: !6575, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6715, file: !6575, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6715, file: !6575, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6715, file: !6575, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6715, file: !6575, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6715, file: !6575, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6715, file: !6575, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6715, file: !6575, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6715, file: !6575, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6715, file: !6575, line: 610, baseType: !7, size: 32, offset: 1696)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6715, file: !6575, line: 611, baseType: !6784, size: 32, offset: 1728)
!6784 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6575, line: 524, baseType: !7, size: 32, elements: !6785)
!6785 = !{!6786, !6787, !6788, !6789, !6790}
!6786 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6787 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6788 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6789 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6790 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6715, file: !6575, line: 612, baseType: !6792, size: 32, offset: 1760)
!6792 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6575, line: 502, baseType: !7, size: 32, elements: !6793)
!6793 = !{!6794, !6795, !6796, !6797}
!6794 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6795 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6796 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6797 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6715, file: !6575, line: 613, baseType: !32, size: 32, offset: 1792)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6715, file: !6575, line: 614, baseType: !32, size: 32, offset: 1824)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6715, file: !6575, line: 615, baseType: !331, size: 64, offset: 1856)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6715, file: !6575, line: 616, baseType: !331, size: 64, offset: 1920)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6715, file: !6575, line: 617, baseType: !331, size: 64, offset: 1984)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6715, file: !6575, line: 618, baseType: !331, size: 64, offset: 2048)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6715, file: !6575, line: 620, baseType: !6805, size: 64, offset: 2112)
!6805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6806, size: 64)
!6806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6575, line: 536, size: 256, elements: !6807)
!6807 = !{!6808, !6809, !6810, !6811}
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6806, file: !6575, line: 537, baseType: !1670)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6806, file: !6575, line: 538, baseType: !7, size: 32)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6806, file: !6575, line: 540, baseType: !284, size: 128, offset: 64)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6806, file: !6575, line: 543, baseType: !6812, size: 64, offset: 192)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6575, line: 534, flags: DIFlagFwdDecl)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6715, file: !6575, line: 621, baseType: !6815, size: 64, offset: 2176)
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{null, !6546, !2545}
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6715, file: !6575, line: 622, baseType: !6819, size: 64, offset: 2240)
!6819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6820, size: 64)
!6820 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6575, line: 622, flags: DIFlagFwdDecl)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !6541, file: !6542, line: 486, baseType: !6822, size: 64, offset: 4096)
!6822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 64)
!6823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6575, line: 642, size: 1792, elements: !6824)
!6824 = !{!6825, !6826, !6827, !6831, !6832, !6833}
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6823, file: !6575, line: 643, baseType: !6574, size: 1472)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6823, file: !6575, line: 644, baseType: !6578, size: 64, offset: 1472)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6823, file: !6575, line: 645, baseType: !6828, size: 64, offset: 1536)
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6829, size: 64)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{null, !6546, !771}
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6823, file: !6575, line: 646, baseType: !6578, size: 64, offset: 1600)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6823, file: !6575, line: 647, baseType: !6568, size: 64, offset: 1664)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6823, file: !6575, line: 648, baseType: !6568, size: 64, offset: 1728)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !6541, file: !6542, line: 493, baseType: !6835, size: 64, offset: 4160)
!6835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6836, size: 64)
!6836 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !6542, line: 493, flags: DIFlagFwdDecl)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !6541, file: !6542, line: 499, baseType: !284, size: 128, offset: 4224)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6541, file: !6542, line: 502, baseType: !6839, size: 64, offset: 4352)
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6840, size: 64)
!6840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6841)
!6841 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !6542, line: 502, flags: DIFlagFwdDecl)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6541, file: !6542, line: 504, baseType: !5372, size: 64, offset: 4416)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !6541, file: !6542, line: 505, baseType: !331, size: 64, offset: 4480)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !6541, file: !6542, line: 510, baseType: !331, size: 64, offset: 4544)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !6541, file: !6542, line: 511, baseType: !6846, size: 64, offset: 4608)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 64)
!6847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6848)
!6848 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !6542, line: 511, flags: DIFlagFwdDecl)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6541, file: !6542, line: 513, baseType: !6850, size: 64, offset: 4672)
!6850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6851, size: 64)
!6851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !6542, line: 288, size: 128, elements: !6852)
!6852 = !{!6853, !6854}
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6851, file: !6542, line: 293, baseType: !7, size: 32)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6851, file: !6542, line: 294, baseType: !312, size: 64, offset: 64)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !6541, file: !6542, line: 515, baseType: !284, size: 128, offset: 4736)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6541, file: !6542, line: 526, baseType: !6857, offset: 4864)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6858, line: 5, elements: !1587)
!6858 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6541, file: !6542, line: 528, baseType: !6860, size: 64, offset: 4864)
!6860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6861, size: 64)
!6861 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6862, line: 14, flags: DIFlagFwdDecl)
!6862 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6541, file: !6542, line: 529, baseType: !6864, size: 64, offset: 4928)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6866, line: 17, size: 192, elements: !6867)
!6866 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6867 = !{!6868, !6869, !6952}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6865, file: !6866, line: 18, baseType: !6864, size: 64)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6865, file: !6866, line: 19, baseType: !6870, size: 64, offset: 64)
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6872)
!6872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6866, line: 110, size: 1152, elements: !6873)
!6873 = !{!6874, !6878, !6882, !6888, !6894, !6898, !6902, !6907, !6911, !6912, !6916, !6920, !6924, !6935, !6936, !6937, !6938, !6948}
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6872, file: !6866, line: 111, baseType: !6875, size: 64)
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6876, size: 64)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!6864, !6864}
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6872, file: !6866, line: 112, baseType: !6879, size: 64, offset: 64)
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6880, size: 64)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{null, !6864}
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6872, file: !6866, line: 113, baseType: !6883, size: 64, offset: 128)
!6883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6884, size: 64)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!771, !6886}
!6886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6887, size: 64)
!6887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6865)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6872, file: !6866, line: 114, baseType: !6889, size: 64, offset: 192)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!3258, !6886, !6892}
!6892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6893, size: 64)
!6893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6541)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6872, file: !6866, line: 116, baseType: !6895, size: 64, offset: 256)
!6895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6896, size: 64)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!771, !6886, !292}
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6872, file: !6866, line: 118, baseType: !6899, size: 64, offset: 320)
!6899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6900, size: 64)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{!32, !6886, !292, !7, !591, !1039}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6872, file: !6866, line: 123, baseType: !6903, size: 64, offset: 384)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6904, size: 64)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{!32, !6886, !292, !6906, !1039}
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6872, file: !6866, line: 126, baseType: !6908, size: 64, offset: 448)
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6909, size: 64)
!6909 = !DISubroutineType(types: !6910)
!6910 = !{!292, !6886}
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6872, file: !6866, line: 127, baseType: !6908, size: 64, offset: 512)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6872, file: !6866, line: 128, baseType: !6913, size: 64, offset: 576)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 64)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!6864, !6886}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6872, file: !6866, line: 130, baseType: !6917, size: 64, offset: 640)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 64)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!6864, !6886, !6864}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6872, file: !6866, line: 133, baseType: !6921, size: 64, offset: 704)
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!6864, !6886, !292}
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6872, file: !6866, line: 135, baseType: !6925, size: 64, offset: 768)
!6925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6926, size: 64)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!32, !6886, !292, !292, !7, !7, !6928}
!6928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6929, size: 64)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6866, line: 43, size: 640, elements: !6930)
!6930 = !{!6931, !6932, !6933}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6929, file: !6866, line: 44, baseType: !6864, size: 64)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6929, file: !6866, line: 45, baseType: !7, size: 32, offset: 64)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6929, file: !6866, line: 46, baseType: !6934, size: 512, offset: 128)
!6934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2433)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6872, file: !6866, line: 140, baseType: !6917, size: 64, offset: 832)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6872, file: !6866, line: 143, baseType: !6913, size: 64, offset: 896)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6872, file: !6866, line: 145, baseType: !6875, size: 64, offset: 960)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6872, file: !6866, line: 146, baseType: !6939, size: 64, offset: 1024)
!6939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6940, size: 64)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{!32, !6886, !6942}
!6942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6943, size: 64)
!6943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6866, line: 29, size: 128, elements: !6944)
!6944 = !{!6945, !6946, !6947}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6943, file: !6866, line: 30, baseType: !7, size: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6943, file: !6866, line: 31, baseType: !7, size: 32, offset: 32)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6943, file: !6866, line: 32, baseType: !6886, size: 64, offset: 64)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6872, file: !6866, line: 148, baseType: !6949, size: 64, offset: 1088)
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6950, size: 64)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!32, !6886, !6546}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6865, file: !6866, line: 20, baseType: !6546, size: 64, offset: 128)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !6541, file: !6542, line: 534, baseType: !1458, size: 32, offset: 4992)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6541, file: !6542, line: 535, baseType: !987, size: 32, offset: 5024)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !6541, file: !6542, line: 537, baseType: !1670, offset: 5056)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !6541, file: !6542, line: 538, baseType: !284, size: 128, offset: 5056)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6541, file: !6542, line: 540, baseType: !6958, size: 64, offset: 5184)
!6958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6959, size: 64)
!6959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6960, line: 54, size: 960, elements: !6961)
!6960 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6961 = !{!6962, !6963, !6964, !6965, !6966, !6967, !6968, !6972, !6976, !6977, !6978, !6979, !6983, !6987, !6988}
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6959, file: !6960, line: 55, baseType: !292, size: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6959, file: !6960, line: 56, baseType: !980, size: 64, offset: 64)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6959, file: !6960, line: 58, baseType: !6158, size: 64, offset: 128)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6959, file: !6960, line: 59, baseType: !6158, size: 64, offset: 192)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6959, file: !6960, line: 60, baseType: !6126, size: 64, offset: 256)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6959, file: !6960, line: 62, baseType: !6559, size: 64, offset: 320)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6959, file: !6960, line: 63, baseType: !6969, size: 64, offset: 384)
!6969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6970, size: 64)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!1038, !6546, !6566}
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6959, file: !6960, line: 65, baseType: !6973, size: 64, offset: 448)
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 64)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{null, !6958}
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6959, file: !6960, line: 66, baseType: !6568, size: 64, offset: 512)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6959, file: !6960, line: 68, baseType: !6578, size: 64, offset: 576)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6959, file: !6960, line: 70, baseType: !6194, size: 64, offset: 640)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6959, file: !6960, line: 71, baseType: !6980, size: 64, offset: 704)
!6980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6981, size: 64)
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!3258, !6546}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6959, file: !6960, line: 73, baseType: !6984, size: 64, offset: 768)
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 64)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{null, !6546, !2904, !2905}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6959, file: !6960, line: 75, baseType: !6572, size: 64, offset: 832)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6959, file: !6960, line: 77, baseType: !6691, size: 64, offset: 896)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6541, file: !6542, line: 541, baseType: !6158, size: 64, offset: 5248)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6541, file: !6542, line: 543, baseType: !6568, size: 64, offset: 5312)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !6541, file: !6542, line: 544, baseType: !6992, size: 64, offset: 5376)
!6992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6993, size: 64)
!6993 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !6542, line: 45, flags: DIFlagFwdDecl)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !6541, file: !6542, line: 545, baseType: !6995, size: 64, offset: 5440)
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 64)
!6996 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6542, line: 47, flags: DIFlagFwdDecl)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !6541, file: !6542, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6541, file: !6542, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !6541, file: !6542, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !6541, file: !6542, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7002, size: 256, offset: 13760)
!7002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6159, size: 256, elements: !2272)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !6159, size: 64, offset: 14016)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7005, size: 64, offset: 14080)
!7005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7006, size: 64)
!7006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7007)
!7007 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2314, size: 16, offset: 14192)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7012, size: 512, offset: 14208)
!7012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7013, size: 512, elements: !269)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7014)
!7014 = !{!7015, !7016}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7013, file: !31, line: 794, baseType: !581, size: 16)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7013, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7018, size: 128, offset: 14720)
!7018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7020, size: 64, offset: 14848)
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7021 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !251, line: 536, flags: DIFlagFwdDecl)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7023, size: 64, offset: 14912)
!7023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7024, size: 64)
!7024 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7026, size: 64, offset: 14976)
!7026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7026, size: 64, offset: 15040)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7032, size: 64, offset: 15296)
!7032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7033, size: 64)
!7033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7034)
!7034 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7036, size: 64, offset: 15360)
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 64)
!7037 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7039, size: 384, offset: 15424)
!7039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7040, size: 384, elements: !1592)
!7040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7041)
!7041 = !{!7042, !7043}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7040, file: !31, line: 890, baseType: !1088, size: 64)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7040, file: !31, line: 891, baseType: !7044, size: 64, offset: 64)
!7044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7045, size: 64)
!7045 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7046 = !{!7047, !7048, !7049, !7050, !7051, !7052}
!7047 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7048 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7049 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7050 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7051 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7052 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7053 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 4102, baseType: !7, size: 32, elements: !7054)
!7054 = !{!7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070}
!7055 = !DIEnumerator(name: "NETIF_MSG_DRV_BIT", value: 0, isUnsigned: true)
!7056 = !DIEnumerator(name: "NETIF_MSG_PROBE_BIT", value: 1, isUnsigned: true)
!7057 = !DIEnumerator(name: "NETIF_MSG_LINK_BIT", value: 2, isUnsigned: true)
!7058 = !DIEnumerator(name: "NETIF_MSG_TIMER_BIT", value: 3, isUnsigned: true)
!7059 = !DIEnumerator(name: "NETIF_MSG_IFDOWN_BIT", value: 4, isUnsigned: true)
!7060 = !DIEnumerator(name: "NETIF_MSG_IFUP_BIT", value: 5, isUnsigned: true)
!7061 = !DIEnumerator(name: "NETIF_MSG_RX_ERR_BIT", value: 6, isUnsigned: true)
!7062 = !DIEnumerator(name: "NETIF_MSG_TX_ERR_BIT", value: 7, isUnsigned: true)
!7063 = !DIEnumerator(name: "NETIF_MSG_TX_QUEUED_BIT", value: 8, isUnsigned: true)
!7064 = !DIEnumerator(name: "NETIF_MSG_INTR_BIT", value: 9, isUnsigned: true)
!7065 = !DIEnumerator(name: "NETIF_MSG_TX_DONE_BIT", value: 10, isUnsigned: true)
!7066 = !DIEnumerator(name: "NETIF_MSG_RX_STATUS_BIT", value: 11, isUnsigned: true)
!7067 = !DIEnumerator(name: "NETIF_MSG_PKTDATA_BIT", value: 12, isUnsigned: true)
!7068 = !DIEnumerator(name: "NETIF_MSG_HW_BIT", value: 13, isUnsigned: true)
!7069 = !DIEnumerator(name: "NETIF_MSG_WOL_BIT", value: 14, isUnsigned: true)
!7070 = !DIEnumerator(name: "NETIF_MSG_CLASS_COUNT", value: 15, isUnsigned: true)
!7071 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2830, line: 30, baseType: !998, size: 64, elements: !7072)
!7072 = !{!7073, !7074, !7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099, !7100, !7101}
!7073 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!7074 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!7075 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!7076 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!7077 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!7078 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!7079 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!7080 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!7081 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!7082 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!7083 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!7084 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!7085 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!7086 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!7087 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!7088 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!7089 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!7090 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!7091 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!7092 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!7093 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!7094 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!7095 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!7096 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!7097 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!7098 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!7099 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!7100 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!7101 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!7102 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1308, baseType: !7, size: 32, elements: !7103)
!7103 = !{!7104, !7105, !7106, !7107}
!7104 = !DIEnumerator(name: "PHY_NO_FLOW_CTRL", value: 0, isUnsigned: true)
!7105 = !DIEnumerator(name: "PHY_FLOW_CTRL", value: 1, isUnsigned: true)
!7106 = !DIEnumerator(name: "PHY_TX_ONLY", value: 2, isUnsigned: true)
!7107 = !DIEnumerator(name: "PHY_RX_ONLY", value: 3, isUnsigned: true)
!7108 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 756, baseType: !7, size: 32, elements: !7109)
!7109 = !{!7110, !7111}
!7110 = !DIEnumerator(name: "media_connected", value: 0, isUnsigned: true)
!7111 = !DIEnumerator(name: "media_disconnected", value: 1, isUnsigned: true)
!7112 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7113, line: 10, baseType: !7, size: 32, elements: !7114)
!7113 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7114 = !{!7115, !7116}
!7115 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7116 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7118, line: 305, baseType: !7, size: 32, elements: !7119)
!7118 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7119 = !{!7120, !7121, !7122, !7123}
!7120 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7121 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7122 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7123 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7124 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1016, baseType: !7, size: 32, elements: !7125)
!7125 = !{!7126, !7127, !7128, !7129}
!7126 = !DIEnumerator(name: "TABLE_STATIC_MAC", value: 0, isUnsigned: true)
!7127 = !DIEnumerator(name: "TABLE_VLAN", value: 1, isUnsigned: true)
!7128 = !DIEnumerator(name: "TABLE_DYNAMIC_MAC", value: 2, isUnsigned: true)
!7129 = !DIEnumerator(name: "TABLE_MIB", value: 3, isUnsigned: true)
!7130 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 2755, baseType: !7, size: 32, elements: !7131)
!7131 = !{!7132, !7133, !7134, !7135, !7136, !7137}
!7132 = !DIEnumerator(name: "STP_STATE_DISABLED", value: 0, isUnsigned: true)
!7133 = !DIEnumerator(name: "STP_STATE_LISTENING", value: 1, isUnsigned: true)
!7134 = !DIEnumerator(name: "STP_STATE_LEARNING", value: 2, isUnsigned: true)
!7135 = !DIEnumerator(name: "STP_STATE_FORWARDING", value: 3, isUnsigned: true)
!7136 = !DIEnumerator(name: "STP_STATE_BLOCKED", value: 4, isUnsigned: true)
!7137 = !DIEnumerator(name: "STP_STATE_SIMPLE", value: 5, isUnsigned: true)
!7138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !330, line: 14, baseType: !7, size: 32, elements: !7139)
!7139 = !{!7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7151, !7152, !7153, !7154, !7155, !7156, !7157, !7158, !7159, !7160, !7161, !7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7198, !7199, !7200, !7201}
!7140 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!7141 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!7142 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!7143 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!7144 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!7145 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!7146 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!7147 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!7148 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!7149 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!7150 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!7151 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!7152 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!7153 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!7154 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!7155 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!7156 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!7157 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!7158 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!7159 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!7160 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!7161 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!7162 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!7163 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!7164 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!7165 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!7166 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!7167 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!7168 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!7169 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!7170 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!7171 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!7172 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!7173 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!7174 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!7175 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!7176 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!7177 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!7178 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!7179 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!7180 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!7181 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!7182 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!7183 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!7184 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!7185 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!7186 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!7187 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!7188 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!7189 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!7190 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!7191 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!7192 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!7193 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!7194 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!7195 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!7196 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!7197 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!7198 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!7199 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!7200 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!7201 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!7202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !31, line: 288, baseType: !7, size: 32, elements: !7203)
!7203 = !{!7204, !7205, !7206, !7207, !7208, !7209}
!7204 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!7205 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!7206 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!7207 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!7208 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!7209 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!7210 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 761, baseType: !7, size: 32, elements: !7211)
!7211 = !{!7212, !7213, !7214, !7215, !7216}
!7212 = !DIEnumerator(name: "OID_COUNTER_UNKOWN", value: 0, isUnsigned: true)
!7213 = !DIEnumerator(name: "OID_COUNTER_FIRST", value: 1, isUnsigned: true)
!7214 = !DIEnumerator(name: "OID_COUNTER_XMIT_ERROR", value: 2, isUnsigned: true)
!7215 = !DIEnumerator(name: "OID_COUNTER_RCV_ERROR", value: 3, isUnsigned: true)
!7216 = !DIEnumerator(name: "OID_COUNTER_LAST", value: 4, isUnsigned: true)
!7217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7218, line: 11, baseType: !7, size: 32, elements: !7219)
!7218 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7219 = !{!7220, !7221, !7222}
!7220 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7221 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7222 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7223 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3012, line: 651, baseType: !7, size: 32, elements: !7224)
!7224 = !{!7225, !7226}
!7225 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!7226 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!7227 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !7228, line: 5, baseType: !7, size: 32, elements: !7229)
!7228 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!7229 = !{!7230, !7231, !7232, !7233}
!7230 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!7231 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!7232 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!7233 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!7234 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !31, line: 3780, baseType: !7, size: 32, elements: !7235)
!7235 = !{!7236, !7237}
!7236 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!7237 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!7238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !31, line: 558, baseType: !7, size: 32, elements: !7239)
!7239 = !{!7240, !7241, !7242}
!7240 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7241 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7242 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7244, line: 28, baseType: !7, size: 32, elements: !7245)
!7244 = !DIFile(filename: "./include/uapi/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!7245 = !{!7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271, !7272, !7273}
!7246 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!7247 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!7248 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!7249 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!7250 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!7251 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!7252 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!7253 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!7254 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!7255 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!7256 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!7257 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!7258 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!7259 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!7260 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!7261 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!7262 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!7263 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!7264 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!7265 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!7266 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!7267 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!7268 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!7269 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!7270 = !DIEnumerator(name: "IPPROTO_ETHERNET", value: 143, isUnsigned: true)
!7271 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!7272 = !DIEnumerator(name: "IPPROTO_MPTCP", value: 262, isUnsigned: true)
!7273 = !DIEnumerator(name: "IPPROTO_MAX", value: 263, isUnsigned: true)
!7274 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !599, line: 82, baseType: !7, size: 32, elements: !7275)
!7275 = !{!7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294}
!7276 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!7277 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!7278 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!7279 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!7280 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!7281 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!7282 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!7283 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!7284 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!7285 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!7286 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!7287 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!7288 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!7289 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!7290 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!7291 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!7292 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!7293 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!7294 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!7295 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_priv_flags", file: !31, line: 1538, baseType: !7, size: 32, elements: !7296)
!7296 = !{!7297, !7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318, !7319, !7320, !7321, !7322, !7323, !7324, !7325, !7326, !7327}
!7297 = !DIEnumerator(name: "IFF_802_1Q_VLAN", value: 1, isUnsigned: true)
!7298 = !DIEnumerator(name: "IFF_EBRIDGE", value: 2, isUnsigned: true)
!7299 = !DIEnumerator(name: "IFF_BONDING", value: 4, isUnsigned: true)
!7300 = !DIEnumerator(name: "IFF_ISATAP", value: 8, isUnsigned: true)
!7301 = !DIEnumerator(name: "IFF_WAN_HDLC", value: 16, isUnsigned: true)
!7302 = !DIEnumerator(name: "IFF_XMIT_DST_RELEASE", value: 32, isUnsigned: true)
!7303 = !DIEnumerator(name: "IFF_DONT_BRIDGE", value: 64, isUnsigned: true)
!7304 = !DIEnumerator(name: "IFF_DISABLE_NETPOLL", value: 128, isUnsigned: true)
!7305 = !DIEnumerator(name: "IFF_MACVLAN_PORT", value: 256, isUnsigned: true)
!7306 = !DIEnumerator(name: "IFF_BRIDGE_PORT", value: 512, isUnsigned: true)
!7307 = !DIEnumerator(name: "IFF_OVS_DATAPATH", value: 1024, isUnsigned: true)
!7308 = !DIEnumerator(name: "IFF_TX_SKB_SHARING", value: 2048, isUnsigned: true)
!7309 = !DIEnumerator(name: "IFF_UNICAST_FLT", value: 4096, isUnsigned: true)
!7310 = !DIEnumerator(name: "IFF_TEAM_PORT", value: 8192, isUnsigned: true)
!7311 = !DIEnumerator(name: "IFF_SUPP_NOFCS", value: 16384, isUnsigned: true)
!7312 = !DIEnumerator(name: "IFF_LIVE_ADDR_CHANGE", value: 32768, isUnsigned: true)
!7313 = !DIEnumerator(name: "IFF_MACVLAN", value: 65536, isUnsigned: true)
!7314 = !DIEnumerator(name: "IFF_XMIT_DST_RELEASE_PERM", value: 131072, isUnsigned: true)
!7315 = !DIEnumerator(name: "IFF_L3MDEV_MASTER", value: 262144, isUnsigned: true)
!7316 = !DIEnumerator(name: "IFF_NO_QUEUE", value: 524288, isUnsigned: true)
!7317 = !DIEnumerator(name: "IFF_OPENVSWITCH", value: 1048576, isUnsigned: true)
!7318 = !DIEnumerator(name: "IFF_L3MDEV_SLAVE", value: 2097152, isUnsigned: true)
!7319 = !DIEnumerator(name: "IFF_TEAM", value: 4194304, isUnsigned: true)
!7320 = !DIEnumerator(name: "IFF_RXFH_CONFIGURED", value: 8388608, isUnsigned: true)
!7321 = !DIEnumerator(name: "IFF_PHONY_HEADROOM", value: 16777216, isUnsigned: true)
!7322 = !DIEnumerator(name: "IFF_MACSEC", value: 33554432, isUnsigned: true)
!7323 = !DIEnumerator(name: "IFF_NO_RX_HANDLER", value: 67108864, isUnsigned: true)
!7324 = !DIEnumerator(name: "IFF_FAILOVER", value: 134217728, isUnsigned: true)
!7325 = !DIEnumerator(name: "IFF_FAILOVER_SLAVE", value: 268435456, isUnsigned: true)
!7326 = !DIEnumerator(name: "IFF_L3MDEV_RX_HANDLER", value: 536870912, isUnsigned: true)
!7327 = !DIEnumerator(name: "IFF_LIVE_RENAME_OK", value: 1073741824, isUnsigned: true)
!7328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_stringset", file: !209, line: 674, baseType: !7, size: 32, elements: !7329)
!7329 = !{!7330, !7331, !7332, !7333, !7334, !7335, !7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346}
!7330 = !DIEnumerator(name: "ETH_SS_TEST", value: 0, isUnsigned: true)
!7331 = !DIEnumerator(name: "ETH_SS_STATS", value: 1, isUnsigned: true)
!7332 = !DIEnumerator(name: "ETH_SS_PRIV_FLAGS", value: 2, isUnsigned: true)
!7333 = !DIEnumerator(name: "ETH_SS_NTUPLE_FILTERS", value: 3, isUnsigned: true)
!7334 = !DIEnumerator(name: "ETH_SS_FEATURES", value: 4, isUnsigned: true)
!7335 = !DIEnumerator(name: "ETH_SS_RSS_HASH_FUNCS", value: 5, isUnsigned: true)
!7336 = !DIEnumerator(name: "ETH_SS_TUNABLES", value: 6, isUnsigned: true)
!7337 = !DIEnumerator(name: "ETH_SS_PHY_STATS", value: 7, isUnsigned: true)
!7338 = !DIEnumerator(name: "ETH_SS_PHY_TUNABLES", value: 8, isUnsigned: true)
!7339 = !DIEnumerator(name: "ETH_SS_LINK_MODES", value: 9, isUnsigned: true)
!7340 = !DIEnumerator(name: "ETH_SS_MSG_CLASSES", value: 10, isUnsigned: true)
!7341 = !DIEnumerator(name: "ETH_SS_WOL_MODES", value: 11, isUnsigned: true)
!7342 = !DIEnumerator(name: "ETH_SS_SOF_TIMESTAMPING", value: 12, isUnsigned: true)
!7343 = !DIEnumerator(name: "ETH_SS_TS_TX_TYPES", value: 13, isUnsigned: true)
!7344 = !DIEnumerator(name: "ETH_SS_TS_RX_FILTERS", value: 14, isUnsigned: true)
!7345 = !DIEnumerator(name: "ETH_SS_UDP_TUNNEL_TYPES", value: 15, isUnsigned: true)
!7346 = !DIEnumerator(name: "ETH_SS_COUNT", value: 16, isUnsigned: true)
!7347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !209, line: 1521, baseType: !7, size: 32, elements: !7348)
!7348 = !{!7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366, !7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399, !7400, !7401, !7402, !7403, !7404, !7405, !7406, !7407, !7408, !7409, !7410, !7411, !7412, !7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7429, !7430, !7431, !7432, !7433, !7434, !7435, !7436, !7437, !7438, !7439, !7440, !7441}
!7349 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!7350 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!7351 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!7352 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!7353 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!7354 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!7355 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!7356 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!7357 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!7358 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!7359 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!7360 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!7361 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!7362 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!7363 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!7364 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!7365 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!7366 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!7367 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!7368 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!7369 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!7370 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!7371 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!7372 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!7373 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!7374 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!7375 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!7376 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!7377 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!7378 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!7379 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!7380 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!7381 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!7382 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!7383 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!7384 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!7385 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!7386 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!7387 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!7388 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!7389 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!7390 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!7391 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!7392 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!7393 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!7394 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!7395 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!7396 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!7397 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!7398 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!7399 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!7400 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!7401 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!7402 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!7403 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!7404 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!7405 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!7406 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!7407 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!7408 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!7409 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!7410 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!7411 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!7412 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!7413 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!7414 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!7415 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!7416 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!7417 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!7418 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!7419 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!7420 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!7421 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!7422 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!7423 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!7424 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!7425 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!7426 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!7427 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!7428 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!7429 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!7430 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!7431 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!7432 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!7433 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!7434 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!7435 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!7436 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!7437 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!7438 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!7439 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!7440 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!7441 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!7442 = !{!980, !1742, !987, !312, !591, !7443, !7445, !7446, !7504, !493, !794, !7505, !2516, !7507, !7508, !581, !7510, !7512, !998, !1038, !5859, !7983, !329, !7985, !3439, !290, !8036, !8037, !535, !475, !2036, !1719, !32, !7689, !8053, !8055, !8056, !4045, !8077, !8088, !1001, !793, !6019}
!7443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7444, size: 64)
!7444 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !476)
!7445 = !DIDerivedType(tag: DW_TAG_typedef, name: "ulong", file: !277, line: 88, baseType: !312)
!7446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7447, size: 64)
!7447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_hw_desc", file: !3, line: 939, size: 128, elements: !7448)
!7448 = !{!7449, !7477, !7502, !7503}
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !7447, file: !3, line: 940, baseType: !7450, size: 32)
!7450 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "desc_stat", file: !3, line: 920, size: 32, elements: !7451)
!7451 = !{!7452, !7471, !7476}
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !7450, file: !3, line: 921, baseType: !7453, size: 32)
!7453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_desc_rx_stat", file: !3, line: 830, size: 32, elements: !7454)
!7454 = !{!7455, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "frame_len", scope: !7453, file: !3, line: 849, baseType: !987, size: 11, flags: DIFlagBitField, extraData: i64 0)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7453, file: !3, line: 850, baseType: !987, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !7453, file: !3, line: 851, baseType: !987, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "err_crc", scope: !7453, file: !3, line: 852, baseType: !987, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "err_runt", scope: !7453, file: !3, line: 853, baseType: !987, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "err_too_long", scope: !7453, file: !3, line: 854, baseType: !987, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "err_phy", scope: !7453, file: !3, line: 855, baseType: !987, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "src_port", scope: !7453, file: !3, line: 856, baseType: !987, size: 4, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7453, file: !3, line: 857, baseType: !987, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7453, file: !3, line: 858, baseType: !987, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "csum_err_udp", scope: !7453, file: !3, line: 859, baseType: !987, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "csum_err_tcp", scope: !7453, file: !3, line: 860, baseType: !987, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "csum_err_ip", scope: !7453, file: !3, line: 861, baseType: !987, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "last_desc", scope: !7453, file: !3, line: 862, baseType: !987, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "first_desc", scope: !7453, file: !3, line: 863, baseType: !987, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "hw_owned", scope: !7453, file: !3, line: 864, baseType: !987, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !7450, file: !3, line: 922, baseType: !7472, size: 32)
!7472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_desc_tx_stat", file: !3, line: 868, size: 32, elements: !7473)
!7473 = !{!7474, !7475}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7472, file: !3, line: 873, baseType: !987, size: 31, flags: DIFlagBitField, extraData: i64 0)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "hw_owned", scope: !7472, file: !3, line: 874, baseType: !987, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7450, file: !3, line: 923, baseType: !987, size: 32)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7447, file: !3, line: 941, baseType: !7478, size: 32, offset: 32)
!7478 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "desc_buf", file: !3, line: 926, size: 32, elements: !7479)
!7479 = !{!7480, !7487, !7501}
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !7478, file: !3, line: 927, baseType: !7481, size: 32)
!7481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_desc_rx_buf", file: !3, line: 878, size: 32, elements: !7482)
!7482 = !{!7483, !7484, !7485, !7486}
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !7481, file: !3, line: 885, baseType: !987, size: 11, flags: DIFlagBitField, extraData: i64 0)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !7481, file: !3, line: 886, baseType: !987, size: 14, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_ring", scope: !7481, file: !3, line: 887, baseType: !987, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !7481, file: !3, line: 888, baseType: !987, size: 6, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !7478, file: !3, line: 928, baseType: !7488, size: 32)
!7488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_desc_tx_buf", file: !3, line: 892, size: 32, elements: !7489)
!7489 = !{!7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500}
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !7488, file: !3, line: 906, baseType: !987, size: 11, flags: DIFlagBitField, extraData: i64 0)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !7488, file: !3, line: 907, baseType: !987, size: 9, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "dest_port", scope: !7488, file: !3, line: 908, baseType: !987, size: 4, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !7488, file: !3, line: 909, baseType: !987, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_ring", scope: !7488, file: !3, line: 910, baseType: !987, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "csum_gen_udp", scope: !7488, file: !3, line: 911, baseType: !987, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "csum_gen_tcp", scope: !7488, file: !3, line: 912, baseType: !987, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "csum_gen_ip", scope: !7488, file: !3, line: 913, baseType: !987, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "last_seg", scope: !7488, file: !3, line: 914, baseType: !987, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "first_seg", scope: !7488, file: !3, line: 915, baseType: !987, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "intr", scope: !7488, file: !3, line: 916, baseType: !987, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7478, file: !3, line: 929, baseType: !987, size: 32)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7447, file: !3, line: 942, baseType: !987, size: 32, offset: 64)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7447, file: !3, line: 943, baseType: !987, size: 32, offset: 96)
!7504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !525, line: 31, baseType: !493)
!7505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7506, size: 64)
!7506 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !482)
!7507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!7508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7509, size: 64)
!7509 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!7510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7511, size: 64)
!7511 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!7512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7513, size: 64)
!7513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_info", file: !3, line: 1416, size: 14464, elements: !7514)
!7514 = !{!7515, !7516, !7789, !7925, !7933, !7934, !7935, !7939, !7940, !7941, !7942, !7943, !7950, !7957, !7958, !7959, !7979, !7980, !7981, !7982}
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7513, file: !3, line: 1417, baseType: !290, size: 64)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !7513, file: !3, line: 1418, baseType: !7517, size: 64, offset: 64)
!7517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7518, size: 64)
!7518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !7519, line: 309, size: 19264, elements: !7520)
!7519 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7520 = !{!7521, !7522, !7591, !7592, !7593, !7594, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7686, !7687, !7688, !7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7702, !7703, !7704, !7705, !7706, !7707, !7708, !7709, !7712, !7713, !7714, !7715, !7716, !7717, !7718, !7719, !7723, !7724, !7725, !7726, !7727, !7728, !7729, !7730, !7731, !7732, !7733, !7734, !7735, !7736, !7737, !7738, !7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7762, !7763, !7765, !7766, !7767, !7768, !7770, !7771, !7772, !7775, !7782, !7783, !7784, !7785, !7786, !7787, !7788}
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !7518, file: !7519, line: 310, baseType: !284, size: 128)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7518, file: !7519, line: 311, baseType: !7523, size: 64, offset: 128)
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 64)
!7524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !7519, line: 605, size: 8064, elements: !7525)
!7525 = !{!7526, !7527, !7528, !7529, !7530, !7531, !7532, !7547, !7548, !7549, !7573, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583, !7584, !7586, !7587, !7588, !7589, !7590}
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7524, file: !7519, line: 606, baseType: !284, size: 128)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7524, file: !7519, line: 607, baseType: !7523, size: 64, offset: 128)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7524, file: !7519, line: 608, baseType: !284, size: 128, offset: 192)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !7524, file: !7519, line: 609, baseType: !284, size: 128, offset: 320)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7524, file: !7519, line: 610, baseType: !7517, size: 64, offset: 448)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7524, file: !7519, line: 611, baseType: !284, size: 128, offset: 512)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7524, file: !7519, line: 613, baseType: !7533, size: 256, offset: 640)
!7533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7534, size: 256, elements: !2272)
!7534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7535, size: 64)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !7536, line: 20, size: 512, elements: !7537)
!7536 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!7537 = !{!7538, !7540, !7541, !7542, !7543, !7544, !7545, !7546}
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7535, file: !7536, line: 21, baseType: !7539, size: 64)
!7539 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !277, line: 158, baseType: !4045)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7535, file: !7536, line: 22, baseType: !7539, size: 64, offset: 64)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7535, file: !7536, line: 23, baseType: !292, size: 64, offset: 128)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7535, file: !7536, line: 24, baseType: !312, size: 64, offset: 192)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7535, file: !7536, line: 25, baseType: !312, size: 64, offset: 256)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7535, file: !7536, line: 26, baseType: !7534, size: 64, offset: 320)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !7535, file: !7536, line: 26, baseType: !7534, size: 64, offset: 384)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7535, file: !7536, line: 26, baseType: !7534, size: 64, offset: 448)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7524, file: !7519, line: 614, baseType: !284, size: 128, offset: 896)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !7524, file: !7519, line: 615, baseType: !7535, size: 512, offset: 1024)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7524, file: !7519, line: 617, baseType: !7550, size: 64, offset: 1536)
!7550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7551, size: 64)
!7551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !7519, line: 731, size: 320, elements: !7552)
!7552 = !{!7553, !7557, !7561, !7565, !7569}
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !7551, file: !7519, line: 732, baseType: !7554, size: 64)
!7554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7555, size: 64)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!32, !7523}
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !7551, file: !7519, line: 733, baseType: !7558, size: 64, offset: 64)
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7559, size: 64)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !7523}
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !7551, file: !7519, line: 734, baseType: !7562, size: 64, offset: 128)
!7562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7563, size: 64)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!591, !7523, !7, !32}
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7551, file: !7519, line: 735, baseType: !7566, size: 64, offset: 192)
!7566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7567, size: 64)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!32, !7523, !7, !32, !32, !2516}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7551, file: !7519, line: 736, baseType: !7570, size: 64, offset: 256)
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7571, size: 64)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{!32, !7523, !7, !32, !32, !987}
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !7524, file: !7519, line: 618, baseType: !7574, size: 64, offset: 1600)
!7574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7575, size: 64)
!7575 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !7519, line: 537, flags: DIFlagFwdDecl)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7524, file: !7519, line: 619, baseType: !591, size: 64, offset: 1664)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !7524, file: !7519, line: 620, baseType: !3010, size: 64, offset: 1728)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7524, file: !7519, line: 622, baseType: !482, size: 8, offset: 1792)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7524, file: !7519, line: 623, baseType: !482, size: 8, offset: 1800)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !7524, file: !7519, line: 624, baseType: !482, size: 8, offset: 1808)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !7524, file: !7519, line: 625, baseType: !482, size: 8, offset: 1816)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7524, file: !7519, line: 630, baseType: !457, size: 384, offset: 1824)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !7524, file: !7519, line: 632, baseType: !476, size: 16, offset: 2208)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !7524, file: !7519, line: 633, baseType: !7585, size: 16, offset: 2224)
!7585 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !7519, line: 237, baseType: !476)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !7524, file: !7519, line: 634, baseType: !6546, size: 64, offset: 2240)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7524, file: !7519, line: 635, baseType: !6541, size: 5568, offset: 2304)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !7524, file: !7519, line: 636, baseType: !6172, size: 64, offset: 7872)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !7524, file: !7519, line: 637, baseType: !6172, size: 64, offset: 7936)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !7524, file: !7519, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !7518, file: !7519, line: 312, baseType: !7523, size: 64, offset: 192)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7518, file: !7519, line: 314, baseType: !591, size: 64, offset: 256)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !7518, file: !7519, line: 315, baseType: !3010, size: 64, offset: 320)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7518, file: !7519, line: 316, baseType: !7595, size: 64, offset: 384)
!7595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 64)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !7519, line: 69, size: 832, elements: !7597)
!7597 = !{!7598, !7599, !7600, !7603, !7604}
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7596, file: !7519, line: 70, baseType: !7523, size: 64)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7596, file: !7519, line: 71, baseType: !284, size: 128, offset: 64)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7596, file: !7519, line: 72, baseType: !7601, size: 64, offset: 192)
!7601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7602, size: 64)
!7602 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !7519, line: 72, flags: DIFlagFwdDecl)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7596, file: !7519, line: 73, baseType: !482, size: 8, offset: 256)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7596, file: !7519, line: 74, baseType: !6121, size: 512, offset: 320)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !7518, file: !7519, line: 318, baseType: !7, size: 32, offset: 448)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7518, file: !7519, line: 319, baseType: !476, size: 16, offset: 480)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7518, file: !7519, line: 320, baseType: !476, size: 16, offset: 496)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !7518, file: !7519, line: 321, baseType: !476, size: 16, offset: 512)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !7518, file: !7519, line: 322, baseType: !476, size: 16, offset: 528)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7518, file: !7519, line: 323, baseType: !7, size: 32, offset: 544)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !7518, file: !7519, line: 324, baseType: !794, size: 8, offset: 576)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !7518, file: !7519, line: 325, baseType: !794, size: 8, offset: 584)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !7518, file: !7519, line: 330, baseType: !794, size: 8, offset: 592)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !7518, file: !7519, line: 331, baseType: !794, size: 8, offset: 600)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !7518, file: !7519, line: 332, baseType: !794, size: 8, offset: 608)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !7518, file: !7519, line: 333, baseType: !794, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !7518, file: !7519, line: 334, baseType: !794, size: 8, offset: 624)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7518, file: !7519, line: 335, baseType: !794, size: 8, offset: 632)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !7518, file: !7519, line: 336, baseType: !581, size: 16, offset: 640)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !7518, file: !7519, line: 337, baseType: !3439, size: 64, offset: 704)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7518, file: !7519, line: 339, baseType: !7622, size: 64, offset: 768)
!7622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7623, size: 64)
!7623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !7519, line: 858, size: 2048, elements: !7624)
!7624 = !{!7625, !7626, !7627, !7639, !7643, !7647, !7651, !7655, !7656, !7660, !7679, !7680, !7681}
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7623, file: !7519, line: 859, baseType: !284, size: 128)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7623, file: !7519, line: 860, baseType: !292, size: 64, offset: 128)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7623, file: !7519, line: 861, baseType: !7628, size: 64, offset: 192)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 64)
!7629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7630)
!7630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !6637, line: 38, size: 256, elements: !7631)
!7631 = !{!7632, !7633, !7634, !7635, !7636, !7637, !7638}
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7630, file: !6637, line: 39, baseType: !493, size: 32)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7630, file: !6637, line: 39, baseType: !493, size: 32, offset: 32)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !7630, file: !6637, line: 40, baseType: !493, size: 32, offset: 64)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !7630, file: !6637, line: 40, baseType: !493, size: 32, offset: 96)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7630, file: !6637, line: 41, baseType: !493, size: 32, offset: 128)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !7630, file: !6637, line: 41, baseType: !493, size: 32, offset: 160)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7630, file: !6637, line: 42, baseType: !6651, size: 64, offset: 192)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7623, file: !7519, line: 862, baseType: !7640, size: 64, offset: 256)
!7640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7641, size: 64)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{!32, !7517, !7628}
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7623, file: !7519, line: 863, baseType: !7644, size: 64, offset: 320)
!7644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7645, size: 64)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{null, !7517}
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7623, file: !7519, line: 864, baseType: !7648, size: 64, offset: 384)
!7648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7649, size: 64)
!7649 = !DISubroutineType(types: !7650)
!7650 = !{!32, !7517, !6662}
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7623, file: !7519, line: 865, baseType: !7652, size: 64, offset: 448)
!7652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7653, size: 64)
!7653 = !DISubroutineType(types: !7654)
!7654 = !{!32, !7517}
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7623, file: !7519, line: 866, baseType: !7644, size: 64, offset: 512)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !7623, file: !7519, line: 867, baseType: !7657, size: 64, offset: 576)
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7658, size: 64)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{!32, !7517, !32}
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !7623, file: !7519, line: 868, baseType: !7661, size: 64, offset: 640)
!7661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7662, size: 64)
!7662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7663)
!7663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !7519, line: 795, size: 384, elements: !7664)
!7664 = !{!7665, !7671, !7675, !7676, !7677, !7678}
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !7663, file: !7519, line: 797, baseType: !7666, size: 64)
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 64)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{!7669, !7517, !7670}
!7669 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !7519, line: 772, baseType: !7)
!7670 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !7519, line: 180, baseType: !7)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !7663, file: !7519, line: 801, baseType: !7672, size: 64, offset: 64)
!7672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7673, size: 64)
!7673 = !DISubroutineType(types: !7674)
!7674 = !{!7669, !7517}
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !7663, file: !7519, line: 804, baseType: !7672, size: 64, offset: 128)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !7663, file: !7519, line: 807, baseType: !7644, size: 64, offset: 192)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !7663, file: !7519, line: 808, baseType: !7644, size: 64, offset: 256)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7663, file: !7519, line: 811, baseType: !7644, size: 64, offset: 320)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7623, file: !7519, line: 869, baseType: !6158, size: 64, offset: 704)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7623, file: !7519, line: 870, baseType: !6619, size: 1152, offset: 768)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !7623, file: !7519, line: 871, baseType: !7682, size: 128, offset: 1920)
!7682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !7519, line: 759, size: 128, elements: !7683)
!7683 = !{!7684, !7685}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7682, file: !7519, line: 760, baseType: !1670)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7682, file: !7519, line: 761, baseType: !284, size: 128)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7518, file: !7519, line: 340, baseType: !331, size: 64, offset: 832)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7518, file: !7519, line: 346, baseType: !6851, size: 128, offset: 896)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !7518, file: !7519, line: 348, baseType: !7689, size: 32, offset: 1024)
!7689 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !7519, line: 155, baseType: !32)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !7518, file: !7519, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !7518, file: !7519, line: 352, baseType: !794, size: 8, offset: 1064)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !7518, file: !7519, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !7518, file: !7519, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !7518, file: !7519, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !7518, file: !7519, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !7518, file: !7519, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !7518, file: !7519, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !7518, file: !7519, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !7518, file: !7519, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !7518, file: !7519, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !7518, file: !7519, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !7518, file: !7519, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !7518, file: !7519, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !7518, file: !7519, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !7518, file: !7519, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !7518, file: !7519, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !7518, file: !7519, line: 376, baseType: !7, size: 32, offset: 1120)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !7518, file: !7519, line: 377, baseType: !7, size: 32, offset: 1152)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7518, file: !7519, line: 380, baseType: !7710, size: 64, offset: 1216)
!7710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7711, size: 64)
!7711 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !7519, line: 303, flags: DIFlagFwdDecl)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !7518, file: !7519, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !7518, file: !7519, line: 383, baseType: !32, size: 32, offset: 1312)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !7518, file: !7519, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !7518, file: !7519, line: 387, baseType: !7670, size: 32, offset: 1376)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7518, file: !7519, line: 388, baseType: !6541, size: 5568, offset: 1408)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !7518, file: !7519, line: 390, baseType: !32, size: 32, offset: 6976)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7518, file: !7519, line: 396, baseType: !7, size: 32, offset: 7008)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7518, file: !7519, line: 397, baseType: !7720, size: 8704, offset: 7040)
!7720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7535, size: 8704, elements: !7721)
!7721 = !{!7722}
!7722 = !DISubrange(count: 17)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7518, file: !7519, line: 399, baseType: !771, size: 8, offset: 15744)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !7518, file: !7519, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !7518, file: !7519, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !7518, file: !7519, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !7518, file: !7519, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !7518, file: !7519, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !7518, file: !7519, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !7518, file: !7519, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !7518, file: !7519, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !7518, file: !7519, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !7518, file: !7519, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !7518, file: !7519, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !7518, file: !7519, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !7518, file: !7519, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !7518, file: !7519, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !7518, file: !7519, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !7518, file: !7519, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !7518, file: !7519, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !7518, file: !7519, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !7518, file: !7519, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7518, file: !7519, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !7518, file: !7519, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !7518, file: !7519, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !7518, file: !7519, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !7518, file: !7519, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !7518, file: !7519, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !7518, file: !7519, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !7518, file: !7519, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !7518, file: !7519, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !7518, file: !7519, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !7518, file: !7519, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !7518, file: !7519, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !7518, file: !7519, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !7518, file: !7519, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !7518, file: !7519, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !7518, file: !7519, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !7518, file: !7519, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7518, file: !7519, line: 450, baseType: !7761, size: 16, offset: 15792)
!7761 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !7519, line: 206, baseType: !476)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !7518, file: !7519, line: 451, baseType: !383, size: 32, offset: 15808)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7518, file: !7519, line: 453, baseType: !7764, size: 512, offset: 15840)
!7764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !269)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !7518, file: !7519, line: 454, baseType: !1581, size: 64, offset: 16384)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !7518, file: !7519, line: 455, baseType: !6172, size: 64, offset: 16448)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !7518, file: !7519, line: 456, baseType: !32, size: 32, offset: 16512)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !7518, file: !7519, line: 457, baseType: !7769, size: 1088, offset: 16576)
!7769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6172, size: 1088, elements: !7721)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !7518, file: !7519, line: 458, baseType: !7769, size: 1088, offset: 17664)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !7518, file: !7519, line: 469, baseType: !6158, size: 64, offset: 18752)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !7518, file: !7519, line: 471, baseType: !7773, size: 64, offset: 18816)
!7773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7774, size: 64)
!7774 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !7519, line: 304, flags: DIFlagFwdDecl)
!7775 = !DIDerivedType(tag: DW_TAG_member, scope: !7518, file: !7519, line: 478, baseType: !7776, size: 64, offset: 18880)
!7776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7518, file: !7519, line: 478, size: 64, elements: !7777)
!7777 = !{!7778, !7781}
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !7776, file: !7519, line: 479, baseType: !7779, size: 64)
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7780, size: 64)
!7780 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !7519, line: 305, flags: DIFlagFwdDecl)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !7776, file: !7519, line: 480, baseType: !7517, size: 64)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !7518, file: !7519, line: 482, baseType: !581, size: 16, offset: 18944)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !7518, file: !7519, line: 483, baseType: !794, size: 8, offset: 18960)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !7518, file: !7519, line: 497, baseType: !581, size: 16, offset: 18976)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !7518, file: !7519, line: 498, baseType: !4045, size: 64, offset: 19008)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !7518, file: !7519, line: 499, baseType: !1039, size: 64, offset: 19072)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7518, file: !7519, line: 500, baseType: !1038, size: 64, offset: 19136)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !7518, file: !7519, line: 502, baseType: !312, size: 64, offset: 19200)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !7513, file: !3, line: 1420, baseType: !7790, size: 11392, offset: 128)
!7790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_hw", file: !3, line: 1262, size: 11392, elements: !7791)
!7791 = !{!7792, !7793, !7835, !7847, !7861, !7862, !7863, !7864, !7865, !7866, !7867, !7868, !7869, !7870, !7871, !7900, !7901, !7902, !7903, !7904, !7905, !7906, !7909, !7910, !7911, !7912, !7913, !7916, !7917, !7918, !7919, !7920, !7922, !7923, !7924}
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !7790, file: !3, line: 1263, baseType: !591, size: 64)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "ksz_switch", scope: !7790, file: !3, line: 1265, baseType: !7794, size: 64, offset: 64)
!7794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7795, size: 64)
!7795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_switch", file: !3, line: 1173, size: 2944, elements: !7796)
!7796 = !{!7797, !7809, !7816, !7827, !7829, !7831, !7832, !7833, !7834}
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "mac_table", scope: !7795, file: !3, line: 1174, baseType: !7798, size: 768)
!7798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7799, size: 768, elements: !2433)
!7799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_mac_table", file: !3, line: 1036, size: 96, elements: !7800)
!7800 = !{!7801, !7803, !7804, !7805, !7806, !7807, !7808}
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "mac_addr", scope: !7799, file: !3, line: 1037, baseType: !7802, size: 48)
!7802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 48, elements: !999)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !7799, file: !3, line: 1038, baseType: !581, size: 16, offset: 48)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "fid", scope: !7799, file: !3, line: 1039, baseType: !794, size: 8, offset: 64)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !7799, file: !3, line: 1040, baseType: !794, size: 8, offset: 72)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "override", scope: !7799, file: !3, line: 1041, baseType: !794, size: 1, offset: 80, flags: DIFlagBitField, extraData: i64 80)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "use_fid", scope: !7799, file: !3, line: 1042, baseType: !794, size: 1, offset: 81, flags: DIFlagBitField, extraData: i64 80)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !7799, file: !3, line: 1043, baseType: !794, size: 1, offset: 82, flags: DIFlagBitField, extraData: i64 80)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_table", scope: !7795, file: !3, line: 1175, baseType: !7810, size: 512, offset: 768)
!7810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7811, size: 512, elements: !269)
!7811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_vlan_table", file: !3, line: 1054, size: 32, elements: !7812)
!7812 = !{!7813, !7814, !7815}
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !7811, file: !3, line: 1055, baseType: !581, size: 16)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "fid", scope: !7811, file: !3, line: 1056, baseType: !794, size: 8, offset: 16)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "member", scope: !7811, file: !3, line: 1057, baseType: !794, size: 8, offset: 24)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "port_cfg", scope: !7795, file: !3, line: 1176, baseType: !7817, size: 960, offset: 1280)
!7817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7818, size: 960, elements: !1592)
!7818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_port_cfg", file: !3, line: 1150, size: 320, elements: !7819)
!7819 = !{!7820, !7821, !7822, !7823, !7825, !7826}
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !7818, file: !3, line: 1151, baseType: !581, size: 16)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "member", scope: !7818, file: !3, line: 1152, baseType: !794, size: 8, offset: 16)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "port_prio", scope: !7818, file: !3, line: 1153, baseType: !794, size: 8, offset: 24)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "rx_rate", scope: !7818, file: !3, line: 1154, baseType: !7824, size: 128, offset: 32)
!7824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 128, elements: !2272)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rate", scope: !7818, file: !3, line: 1155, baseType: !7824, size: 128, offset: 160)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "stp_state", scope: !7818, file: !3, line: 1156, baseType: !32, size: 32, offset: 288)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "diffserv", scope: !7795, file: !3, line: 1178, baseType: !7828, size: 512, offset: 2240)
!7828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 512, elements: !3812)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "p_802_1p", scope: !7795, file: !3, line: 1179, baseType: !7830, size: 64, offset: 2752)
!7830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 64, elements: !2433)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "br_addr", scope: !7795, file: !3, line: 1181, baseType: !7802, size: 48, offset: 2816)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "other_addr", scope: !7795, file: !3, line: 1182, baseType: !7802, size: 48, offset: 2864)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "broad_per", scope: !7795, file: !3, line: 1184, baseType: !794, size: 8, offset: 2912)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "member", scope: !7795, file: !3, line: 1185, baseType: !794, size: 8, offset: 2920)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "port_info", scope: !7790, file: !3, line: 1266, baseType: !7836, size: 384, offset: 128)
!7836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7837, size: 384, elements: !2664)
!7837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_port_info", file: !3, line: 1200, size: 192, elements: !7838)
!7838 = !{!7839, !7841, !7842, !7843, !7844, !7845, !7846}
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7837, file: !3, line: 1201, baseType: !7840, size: 32)
!7840 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !277, line: 87, baseType: !7)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rate", scope: !7837, file: !3, line: 1202, baseType: !7840, size: 32, offset: 32)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7837, file: !3, line: 1203, baseType: !794, size: 8, offset: 64)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !7837, file: !3, line: 1204, baseType: !794, size: 8, offset: 72)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "partner", scope: !7837, file: !3, line: 1205, baseType: !794, size: 8, offset: 80)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "port_id", scope: !7837, file: !3, line: 1206, baseType: !794, size: 8, offset: 88)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !7837, file: !3, line: 1207, baseType: !591, size: 64, offset: 128)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "port_mib", scope: !7790, file: !3, line: 1267, baseType: !7848, size: 6912, offset: 512)
!7848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7849, size: 6912, elements: !1592)
!7849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_port_mib", file: !3, line: 1131, size: 2304, elements: !7850)
!7850 = !{!7851, !7852, !7853, !7854, !7855, !7859}
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "cnt_ptr", scope: !7849, file: !3, line: 1132, baseType: !794, size: 8)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "link_down", scope: !7849, file: !3, line: 1133, baseType: !794, size: 8, offset: 8)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7849, file: !3, line: 1134, baseType: !794, size: 8, offset: 16)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "mib_start", scope: !7849, file: !3, line: 1135, baseType: !794, size: 8, offset: 24)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !7849, file: !3, line: 1137, baseType: !7856, size: 2176, offset: 64)
!7856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2176, elements: !7857)
!7857 = !{!7858}
!7858 = !DISubrange(count: 34)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "dropped", scope: !7849, file: !3, line: 1138, baseType: !7860, size: 64, offset: 2240)
!7860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 64, elements: !2664)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "dev_count", scope: !7790, file: !3, line: 1268, baseType: !32, size: 32, offset: 7424)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "dst_ports", scope: !7790, file: !3, line: 1269, baseType: !32, size: 32, offset: 7456)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7790, file: !3, line: 1270, baseType: !32, size: 32, offset: 7488)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "mib_cnt", scope: !7790, file: !3, line: 1271, baseType: !32, size: 32, offset: 7520)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "mib_port_cnt", scope: !7790, file: !3, line: 1272, baseType: !32, size: 32, offset: 7552)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "tx_cfg", scope: !7790, file: !3, line: 1274, baseType: !987, size: 32, offset: 7584)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "rx_cfg", scope: !7790, file: !3, line: 1275, baseType: !987, size: 32, offset: 7616)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "intr_mask", scope: !7790, file: !3, line: 1276, baseType: !987, size: 32, offset: 7648)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "intr_set", scope: !7790, file: !3, line: 1277, baseType: !987, size: 32, offset: 7680)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "intr_blocked", scope: !7790, file: !3, line: 1278, baseType: !7840, size: 32, offset: 7712)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_info", scope: !7790, file: !3, line: 1280, baseType: !7872, size: 448, offset: 7744)
!7872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_desc_info", file: !3, line: 999, size: 448, elements: !7873)
!7873 = !{!7874, !7891, !7892, !7893, !7894, !7895, !7896, !7897, !7898, !7899}
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !7872, file: !3, line: 1000, baseType: !7875, size: 64)
!7875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7876, size: 64)
!7876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_desc", file: !3, line: 978, size: 384, elements: !7877)
!7877 = !{!7878, !7879, !7885}
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "phw", scope: !7876, file: !3, line: 979, baseType: !7446, size: 64)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !7876, file: !3, line: 980, baseType: !7880, size: 96, offset: 64)
!7880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_sw_desc", file: !3, line: 952, size: 96, elements: !7881)
!7881 = !{!7882, !7883, !7884}
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !7880, file: !3, line: 953, baseType: !7450, size: 32)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7880, file: !3, line: 954, baseType: !7478, size: 32, offset: 32)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !7880, file: !3, line: 955, baseType: !987, size: 32, offset: 64)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "dma_buf", scope: !7876, file: !3, line: 981, baseType: !7886, size: 192, offset: 192)
!7886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_dma_buf", file: !3, line: 964, size: 192, elements: !7887)
!7887 = !{!7888, !7889, !7890}
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7886, file: !3, line: 965, baseType: !415, size: 64)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7886, file: !3, line: 966, baseType: !2036, size: 64, offset: 64)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7886, file: !3, line: 967, baseType: !32, size: 32, offset: 128)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !7872, file: !3, line: 1001, baseType: !7875, size: 64, offset: 64)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "ring_virt", scope: !7872, file: !3, line: 1002, baseType: !7446, size: 64, offset: 128)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "ring_phys", scope: !7872, file: !3, line: 1003, baseType: !987, size: 32, offset: 192)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7872, file: !3, line: 1004, baseType: !32, size: 32, offset: 224)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7872, file: !3, line: 1005, baseType: !32, size: 32, offset: 256)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !7872, file: !3, line: 1006, baseType: !32, size: 32, offset: 288)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !7872, file: !3, line: 1007, baseType: !32, size: 32, offset: 320)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7872, file: !3, line: 1008, baseType: !32, size: 32, offset: 352)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !7872, file: !3, line: 1009, baseType: !32, size: 32, offset: 384)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_info", scope: !7790, file: !3, line: 1281, baseType: !7872, size: 448, offset: 8192)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "tx_int_cnt", scope: !7790, file: !3, line: 1283, baseType: !32, size: 32, offset: 8640)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "tx_int_mask", scope: !7790, file: !3, line: 1284, baseType: !32, size: 32, offset: 8672)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "tx_size", scope: !7790, file: !3, line: 1285, baseType: !32, size: 32, offset: 8704)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !7790, file: !3, line: 1287, baseType: !7802, size: 48, offset: 8736)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "override_addr", scope: !7790, file: !3, line: 1288, baseType: !7802, size: 48, offset: 8784)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !7790, file: !3, line: 1289, baseType: !7907, size: 768, offset: 8832)
!7907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 768, elements: !7908)
!7908 = !{!270, !1000}
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_size", scope: !7790, file: !3, line: 1290, baseType: !794, size: 8, offset: 9600)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "mac_override", scope: !7790, file: !3, line: 1291, baseType: !794, size: 8, offset: 9608)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuous", scope: !7790, file: !3, line: 1292, baseType: !794, size: 8, offset: 9616)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "all_multi", scope: !7790, file: !3, line: 1293, baseType: !794, size: 8, offset: 9624)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "multi_list", scope: !7790, file: !3, line: 1294, baseType: !7914, size: 1536, offset: 9632)
!7914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 1536, elements: !7915)
!7915 = !{!820, !1000}
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "multi_bits", scope: !7790, file: !3, line: 1295, baseType: !7830, size: 64, offset: 11168)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "multi_list_size", scope: !7790, file: !3, line: 1296, baseType: !794, size: 8, offset: 11232)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !7790, file: !3, line: 1298, baseType: !794, size: 8, offset: 11240)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "rx_stop", scope: !7790, file: !3, line: 1299, baseType: !794, size: 8, offset: 11248)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !7790, file: !3, line: 1300, baseType: !7921, size: 8, offset: 11256)
!7921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 8, elements: !2472)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !7790, file: !3, line: 1302, baseType: !7840, size: 32, offset: 11264)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !7790, file: !3, line: 1303, baseType: !7840, size: 32, offset: 11296)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7790, file: !3, line: 1305, baseType: !591, size: 64, offset: 11328)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "desc_pool", scope: !7513, file: !3, line: 1421, baseType: !7926, size: 256, offset: 11520)
!7926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_shared_mem", file: !3, line: 1372, size: 256, elements: !7927)
!7927 = !{!7928, !7929, !7930, !7931, !7932}
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !7926, file: !3, line: 1373, baseType: !2036, size: 64)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !7926, file: !3, line: 1374, baseType: !7840, size: 32, offset: 64)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !7926, file: !3, line: 1375, baseType: !7840, size: 32, offset: 96)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_virt", scope: !7926, file: !3, line: 1376, baseType: !793, size: 64, offset: 128)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "virt", scope: !7926, file: !3, line: 1377, baseType: !793, size: 64, offset: 192)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "hwlock", scope: !7513, file: !3, line: 1423, baseType: !1670, offset: 11776)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7513, file: !3, line: 1424, baseType: !1665, size: 192, offset: 11776)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rcv", scope: !7513, file: !3, line: 1426, baseType: !7936, size: 64, offset: 11968)
!7936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7937, size: 64)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!32, !7512}
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "last_skb", scope: !7513, file: !3, line: 1428, baseType: !415, size: 64, offset: 12032)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "skb_index", scope: !7513, file: !3, line: 1429, baseType: !32, size: 32, offset: 12096)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "skb_len", scope: !7513, file: !3, line: 1430, baseType: !32, size: 32, offset: 12128)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "mib_read", scope: !7513, file: !3, line: 1432, baseType: !2829, size: 256, offset: 12160)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "mib_timer_info", scope: !7513, file: !3, line: 1433, baseType: !7944, size: 448, offset: 12416)
!7944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_timer_info", file: !3, line: 1357, size: 448, elements: !7945)
!7945 = !{!7946, !7947, !7948, !7949}
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7944, file: !3, line: 1358, baseType: !3235, size: 320)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !7944, file: !3, line: 1359, baseType: !32, size: 32, offset: 320)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !7944, file: !3, line: 1360, baseType: !32, size: 32, offset: 352)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !7944, file: !3, line: 1361, baseType: !32, size: 32, offset: 384)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !7513, file: !3, line: 1434, baseType: !7951, size: 768, offset: 12864)
!7951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7952, size: 768, elements: !1592)
!7952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_counter_info", file: !3, line: 1386, size: 256, elements: !7953)
!7953 = !{!7954, !7955, !7956}
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !7952, file: !3, line: 1387, baseType: !1889, size: 128)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !7952, file: !3, line: 1388, baseType: !312, size: 64, offset: 128)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7952, file: !3, line: 1389, baseType: !32, size: 32, offset: 192)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !7513, file: !3, line: 1436, baseType: !32, size: 32, offset: 13632)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "opened", scope: !7513, file: !3, line: 1437, baseType: !32, size: 32, offset: 13664)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "rx_tasklet", scope: !7513, file: !3, line: 1439, baseType: !7960, size: 320, offset: 13696)
!7960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !3012, line: 609, size: 320, elements: !7961)
!7961 = !{!7962, !7964, !7965, !7966, !7967, !7978}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7960, file: !3012, line: 611, baseType: !7963, size: 64)
!7963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7960, size: 64)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7960, file: !3012, line: 612, baseType: !312, size: 64, offset: 64)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7960, file: !3012, line: 613, baseType: !383, size: 32, offset: 128)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !7960, file: !3012, line: 614, baseType: !771, size: 8, offset: 160)
!7967 = !DIDerivedType(tag: DW_TAG_member, scope: !7960, file: !3012, line: 615, baseType: !7968, size: 64, offset: 192)
!7968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7960, file: !3012, line: 615, size: 64, elements: !7969)
!7969 = !{!7970, !7974}
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7968, file: !3012, line: 616, baseType: !7971, size: 64)
!7971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7972, size: 64)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{null, !312}
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !7968, file: !3012, line: 617, baseType: !7975, size: 64)
!7975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7976, size: 64)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{null, !7963}
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7960, file: !3012, line: 619, baseType: !312, size: 64, offset: 256)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "tx_tasklet", scope: !7513, file: !3, line: 1440, baseType: !7960, size: 320, offset: 14016)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enable", scope: !7513, file: !3, line: 1442, baseType: !32, size: 32, offset: 14336)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "wol_support", scope: !7513, file: !3, line: 1443, baseType: !32, size: 32, offset: 14368)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "pme_wait", scope: !7513, file: !3, line: 1444, baseType: !312, size: 64, offset: 14400)
!7983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7984, size: 64)
!7984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!7985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7986, size: 64)
!7986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_priv", file: !3, line: 1461, size: 1856, elements: !7987)
!7987 = !{!7988, !7989, !8005, !8006, !8013, !8014, !8031, !8032, !8033, !8034, !8035}
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "adapter", scope: !7986, file: !3, line: 1462, baseType: !7512, size: 64)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7986, file: !3, line: 1463, baseType: !7990, size: 512, offset: 64)
!7990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ksz_port", file: !3, line: 1335, size: 512, elements: !7991)
!7991 = !{!7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8001, !8003}
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7990, file: !3, line: 1336, baseType: !794, size: 8)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7990, file: !3, line: 1337, baseType: !794, size: 8, offset: 8)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "force_link", scope: !7990, file: !3, line: 1338, baseType: !794, size: 8, offset: 16)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !7990, file: !3, line: 1339, baseType: !794, size: 8, offset: 24)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "first_port", scope: !7990, file: !3, line: 1341, baseType: !32, size: 32, offset: 32)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "mib_port_cnt", scope: !7990, file: !3, line: 1342, baseType: !32, size: 32, offset: 64)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "port_cnt", scope: !7990, file: !3, line: 1343, baseType: !32, size: 32, offset: 96)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !7990, file: !3, line: 1344, baseType: !8000, size: 256, offset: 128)
!8000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 256, elements: !2272)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !7990, file: !3, line: 1346, baseType: !8002, size: 64, offset: 384)
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7790, size: 64)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "linked", scope: !7990, file: !3, line: 1347, baseType: !8004, size: 64, offset: 448)
!8004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7837, size: 64)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "monitor_timer_info", scope: !7986, file: !3, line: 1464, baseType: !7944, size: 448, offset: 576)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "proc_sem", scope: !7986, file: !3, line: 1466, baseType: !8007, size: 192, offset: 1024)
!8007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "semaphore", file: !8008, line: 15, size: 192, elements: !8009)
!8008 = !DIFile(filename: "./include/linux/semaphore.h", directory: "/home/lizy2001/genbc/linux")
!8009 = !{!8010, !8011, !8012}
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8007, file: !8008, line: 16, baseType: !1761)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8007, file: !8008, line: 17, baseType: !7, size: 32)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !8007, file: !8008, line: 18, baseType: !284, size: 128, offset: 64)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7986, file: !3, line: 1467, baseType: !32, size: 32, offset: 1216)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "mii_if", scope: !7986, file: !3, line: 1469, baseType: !8015, size: 384, offset: 1280)
!8015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_if_info", file: !8016, line: 18, size: 384, elements: !8017)
!8016 = !DIFile(filename: "./include/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!8017 = !{!8018, !8019, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027}
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !8015, file: !8016, line: 19, baseType: !32, size: 32)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8015, file: !8016, line: 20, baseType: !32, size: 32, offset: 32)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id_mask", scope: !8015, file: !8016, line: 21, baseType: !32, size: 32, offset: 64)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num_mask", scope: !8015, file: !8016, line: 22, baseType: !32, size: 32, offset: 96)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "full_duplex", scope: !8015, file: !8016, line: 24, baseType: !7, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "force_media", scope: !8015, file: !8016, line: 25, baseType: !7, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "supports_gmii", scope: !8015, file: !8016, line: 26, baseType: !7, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8015, file: !8016, line: 28, baseType: !290, size: 64, offset: 192)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_read", scope: !8015, file: !8016, line: 29, baseType: !831, size: 64, offset: 256)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_write", scope: !8015, file: !8016, line: 30, baseType: !8028, size: 64, offset: 320)
!8028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8029, size: 64)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{null, !290, !32, !32, !32}
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7986, file: !3, line: 1470, baseType: !987, size: 32, offset: 1664)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !7986, file: !3, line: 1472, baseType: !987, size: 32, offset: 1696)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "media_state", scope: !7986, file: !3, line: 1473, baseType: !32, size: 32, offset: 1728)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7986, file: !3, line: 1474, baseType: !32, size: 32, offset: 1760)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuous", scope: !7986, file: !3, line: 1475, baseType: !32, size: 32, offset: 1792)
!8036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7886, size: 64)
!8037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8038, size: 64)
!8038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !8039, line: 86, size: 160, elements: !8040)
!8039 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!8040 = !{!8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049, !8051, !8052}
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !8038, file: !8039, line: 88, baseType: !481, size: 4, flags: DIFlagBitField, extraData: i64 0)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8038, file: !8039, line: 89, baseType: !481, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8038, file: !8039, line: 96, baseType: !481, size: 8, offset: 8)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !8038, file: !8039, line: 97, baseType: !535, size: 16, offset: 16)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8038, file: !8039, line: 98, baseType: !535, size: 16, offset: 32)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !8038, file: !8039, line: 99, baseType: !535, size: 16, offset: 48)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !8038, file: !8039, line: 100, baseType: !481, size: 8, offset: 64)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8038, file: !8039, line: 101, baseType: !481, size: 8, offset: 72)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !8038, file: !8039, line: 102, baseType: !8050, size: 16, offset: 80)
!8050 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !525, line: 36, baseType: !475)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !8038, file: !8039, line: 103, baseType: !3208, size: 32, offset: 96)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !8038, file: !8039, line: 104, baseType: !3208, size: 32, offset: 128)
!8053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8054, size: 64)
!8054 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!8055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!8056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8057, size: 64)
!8057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !417, line: 512, size: 2560, elements: !8058)
!8058 = !{!8059, !8060, !8061, !8062, !8063, !8064, !8065, !8066, !8070, !8071, !8072, !8073, !8074}
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !8057, file: !417, line: 513, baseType: !481, size: 8)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !8057, file: !417, line: 514, baseType: !481, size: 8, offset: 8)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !8057, file: !417, line: 515, baseType: !481, size: 8, offset: 16)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !8057, file: !417, line: 516, baseType: !481, size: 8, offset: 24)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !8057, file: !417, line: 517, baseType: !476, size: 16, offset: 32)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !8057, file: !417, line: 519, baseType: !476, size: 16, offset: 48)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !8057, file: !417, line: 520, baseType: !415, size: 64, offset: 64)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !8057, file: !417, line: 521, baseType: !8067, size: 64, offset: 128)
!8067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !417, line: 418, size: 64, elements: !8068)
!8068 = !{!8069}
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !8067, file: !417, line: 419, baseType: !453, size: 64)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !8057, file: !417, line: 522, baseType: !7, size: 32, offset: 192)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !8057, file: !417, line: 523, baseType: !987, size: 32, offset: 224)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !8057, file: !417, line: 528, baseType: !383, size: 32, offset: 256)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !8057, file: !417, line: 532, baseType: !591, size: 64, offset: 320)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !8057, file: !417, line: 535, baseType: !8075, size: 2176, offset: 384)
!8075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8076, size: 2176, elements: !7721)
!8076 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !417, line: 321, baseType: !1876)
!8077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8078, size: 64)
!8078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !31, line: 209, size: 640, elements: !8079)
!8079 = !{!8080, !8081, !8082, !8083, !8084, !8085, !8086, !8087}
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8078, file: !31, line: 210, baseType: !284, size: 128)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !8078, file: !31, line: 211, baseType: !1031, size: 256, offset: 128)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8078, file: !31, line: 212, baseType: !482, size: 8, offset: 384)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !8078, file: !31, line: 217, baseType: !771, size: 8, offset: 392)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !8078, file: !31, line: 218, baseType: !32, size: 32, offset: 416)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !8078, file: !31, line: 219, baseType: !32, size: 32, offset: 448)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !8078, file: !31, line: 220, baseType: !32, size: 32, offset: 480)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !8078, file: !31, line: 221, baseType: !299, size: 128, align: 64, offset: 512)
!8088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8089, size: 64)
!8089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_ioctl_data", file: !8090, line: 178, size: 64, elements: !8091)
!8090 = !DIFile(filename: "./include/uapi/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!8091 = !{!8092, !8093, !8094, !8095}
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !8089, file: !8090, line: 179, baseType: !475, size: 16)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num", scope: !8089, file: !8090, line: 180, baseType: !475, size: 16, offset: 16)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "val_in", scope: !8089, file: !8090, line: 181, baseType: !475, size: 16, offset: 32)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "val_out", scope: !8089, file: !8090, line: 182, baseType: !475, size: 16, offset: 48)
!8096 = !{!0, !8097, !8102, !8107, !8110, !8112, !8115, !8164, !8169, !8174, !8176, !8181, !8183, !8186, !8188, !8190, !8192, !8194, !8196, !8201, !8206, !8211, !8216, !8221, !8223, !8225, !8227, !8229, !8231, !8233, !8236, !8239, !8242, !8244, !8249, !8251, !8253, !8255, !8257, !8263, !8269, !8275, !8278, !8281, !8283, !8290, !8294, !8297, !8300, !8305, !8308, !8314, !8316, !8319, !8322, !8324, !8326, !8329, !8331, !8336, !8341}
!8097 = !DIGlobalVariableExpression(var: !8098, expr: !DIExpression())
!8098 = distinct !DIGlobalVariable(name: "__exitcall_pci_device_driver_exit", scope: !2, file: !3, line: 7227, type: !8099, isLocal: true, isDefinition: true)
!8099 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !8100, line: 117, baseType: !8101)
!8100 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!8101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!8102 = !DIGlobalVariableExpression(var: !8103, expr: !DIExpression())
!8103 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description336", scope: !2, file: !3, line: 7229, type: !8104, isLocal: true, isDefinition: true, align: 8)
!8104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 392, elements: !8105)
!8105 = !{!8106}
!8106 = !DISubrange(count: 49)
!8107 = !DIGlobalVariableExpression(var: !8108, expr: !DIExpression())
!8108 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author337", scope: !2, file: !3, line: 7230, type: !8109, isLocal: true, isDefinition: true, align: 8)
!8109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 416, elements: !5809)
!8110 = !DIGlobalVariableExpression(var: !8111, expr: !DIExpression())
!8111 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file338", scope: !2, file: !3, line: 7231, type: !8104, isLocal: true, isDefinition: true, align: 8)
!8112 = !DIGlobalVariableExpression(var: !8113, expr: !DIExpression())
!8113 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license339", scope: !2, file: !3, line: 7231, type: !8114, isLocal: true, isDefinition: true, align: 8)
!8114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 160, elements: !900)
!8115 = !DIGlobalVariableExpression(var: !8116, expr: !DIExpression())
!8116 = distinct !DIGlobalVariable(name: "__param_message", scope: !2, file: !3, line: 7233, type: !8117, isLocal: true, isDefinition: true, align: 64)
!8117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8118)
!8118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !8119, line: 69, size: 320, elements: !8120)
!8119 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!8120 = !{!8121, !8122, !8123, !8139, !8140, !8142, !8143}
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8118, file: !8119, line: 70, baseType: !292, size: 64)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !8118, file: !8119, line: 71, baseType: !980, size: 64, offset: 64)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8118, file: !8119, line: 72, baseType: !8124, size: 64, offset: 128)
!8124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8125, size: 64)
!8125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8126)
!8126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !8119, line: 47, size: 256, elements: !8127)
!8127 = !{!8128, !8129, !8134, !8138}
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8126, file: !8119, line: 49, baseType: !7, size: 32)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !8126, file: !8119, line: 51, baseType: !8130, size: 64, offset: 64)
!8130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8131, size: 64)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{!32, !292, !8133}
!8133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8117, size: 64)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !8126, file: !8119, line: 53, baseType: !8135, size: 64, offset: 128)
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 64)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!32, !1038, !8133}
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !8126, file: !8119, line: 55, baseType: !1415, size: 64, offset: 192)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !8118, file: !8119, line: 73, baseType: !7984, size: 16, offset: 192)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !8118, file: !8119, line: 74, baseType: !8141, size: 8, offset: 208)
!8141 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !332, line: 16, baseType: !5996)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8118, file: !8119, line: 75, baseType: !794, size: 8, offset: 216)
!8143 = !DIDerivedType(tag: DW_TAG_member, scope: !8118, file: !8119, line: 76, baseType: !8144, size: 64, offset: 256)
!8144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8118, file: !8119, line: 76, size: 64, elements: !8145)
!8145 = !{!8146, !8147, !8154}
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !8144, file: !8119, line: 77, baseType: !591, size: 64)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !8144, file: !8119, line: 78, baseType: !8148, size: 64)
!8148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8149, size: 64)
!8149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8150)
!8150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !8119, line: 86, size: 128, elements: !8151)
!8151 = !{!8152, !8153}
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !8150, file: !8119, line: 87, baseType: !7, size: 32)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !8150, file: !8119, line: 88, baseType: !1038, size: 64, offset: 64)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !8144, file: !8119, line: 79, baseType: !8155, size: 64)
!8155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8156, size: 64)
!8156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8157)
!8157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !8119, line: 92, size: 256, elements: !8158)
!8158 = !{!8159, !8160, !8161, !8162, !8163}
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !8157, file: !8119, line: 94, baseType: !7, size: 32)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !8157, file: !8119, line: 95, baseType: !7, size: 32, offset: 32)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8157, file: !8119, line: 96, baseType: !4608, size: 64, offset: 64)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8157, file: !8119, line: 97, baseType: !8124, size: 64, offset: 128)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !8157, file: !8119, line: 98, baseType: !591, size: 64, offset: 192)
!8164 = !DIGlobalVariableExpression(var: !8165, expr: !DIExpression())
!8165 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_messagetype340", scope: !2, file: !3, line: 7233, type: !8166, isLocal: true, isDefinition: true, align: 8)
!8166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 232, elements: !8167)
!8167 = !{!8168}
!8168 = !DISubrange(count: 29)
!8169 = !DIGlobalVariableExpression(var: !8170, expr: !DIExpression())
!8170 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_message341", scope: !2, file: !3, line: 7234, type: !8171, isLocal: true, isDefinition: true, align: 8)
!8171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 496, elements: !8172)
!8172 = !{!8173}
!8173 = !DISubrange(count: 62)
!8174 = !DIGlobalVariableExpression(var: !8175, expr: !DIExpression())
!8175 = distinct !DIGlobalVariable(name: "__param_macaddr", scope: !2, file: !3, line: 7236, type: !8117, isLocal: true, isDefinition: true, align: 64)
!8176 = !DIGlobalVariableExpression(var: !8177, expr: !DIExpression())
!8177 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_macaddrtype342", scope: !2, file: !3, line: 7236, type: !8178, isLocal: true, isDefinition: true, align: 8)
!8178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 248, elements: !8179)
!8179 = !{!8180}
!8180 = !DISubrange(count: 31)
!8181 = !DIGlobalVariableExpression(var: !8182, expr: !DIExpression())
!8182 = distinct !DIGlobalVariable(name: "__param_mac1addr", scope: !2, file: !3, line: 7237, type: !8117, isLocal: true, isDefinition: true, align: 64)
!8183 = !DIGlobalVariableExpression(var: !8184, expr: !DIExpression())
!8184 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_mac1addrtype343", scope: !2, file: !3, line: 7237, type: !8185, isLocal: true, isDefinition: true, align: 8)
!8185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 256, elements: !819)
!8186 = !DIGlobalVariableExpression(var: !8187, expr: !DIExpression())
!8187 = distinct !DIGlobalVariable(name: "__param_fast_aging", scope: !2, file: !3, line: 7238, type: !8117, isLocal: true, isDefinition: true, align: 64)
!8188 = !DIGlobalVariableExpression(var: !8189, expr: !DIExpression())
!8189 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fast_agingtype344", scope: !2, file: !3, line: 7238, type: !8185, isLocal: true, isDefinition: true, align: 8)
!8190 = !DIGlobalVariableExpression(var: !8191, expr: !DIExpression())
!8191 = distinct !DIGlobalVariable(name: "__param_multi_dev", scope: !2, file: !3, line: 7239, type: !8117, isLocal: true, isDefinition: true, align: 64)
!8192 = !DIGlobalVariableExpression(var: !8193, expr: !DIExpression())
!8193 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_multi_devtype345", scope: !2, file: !3, line: 7239, type: !8178, isLocal: true, isDefinition: true, align: 8)
!8194 = !DIGlobalVariableExpression(var: !8195, expr: !DIExpression())
!8195 = distinct !DIGlobalVariable(name: "__param_stp", scope: !2, file: !3, line: 7240, type: !8117, isLocal: true, isDefinition: true, align: 64)
!8196 = !DIGlobalVariableExpression(var: !8197, expr: !DIExpression())
!8197 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_stptype346", scope: !2, file: !3, line: 7240, type: !8198, isLocal: true, isDefinition: true, align: 8)
!8198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 200, elements: !8199)
!8199 = !{!8200}
!8200 = !DISubrange(count: 25)
!8201 = !DIGlobalVariableExpression(var: !8202, expr: !DIExpression())
!8202 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_macaddr347", scope: !2, file: !3, line: 7241, type: !8203, isLocal: true, isDefinition: true, align: 8)
!8203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 264, elements: !8204)
!8204 = !{!8205}
!8205 = !DISubrange(count: 33)
!8206 = !DIGlobalVariableExpression(var: !8207, expr: !DIExpression())
!8207 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_mac1addr348", scope: !2, file: !3, line: 7242, type: !8208, isLocal: true, isDefinition: true, align: 8)
!8208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 328, elements: !8209)
!8209 = !{!8210}
!8210 = !DISubrange(count: 41)
!8211 = !DIGlobalVariableExpression(var: !8212, expr: !DIExpression())
!8212 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fast_aging349", scope: !2, file: !3, line: 7243, type: !8213, isLocal: true, isDefinition: true, align: 8)
!8213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 280, elements: !8214)
!8214 = !{!8215}
!8215 = !DISubrange(count: 35)
!8216 = !DIGlobalVariableExpression(var: !8217, expr: !DIExpression())
!8217 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_multi_dev350", scope: !2, file: !3, line: 7244, type: !8218, isLocal: true, isDefinition: true, align: 8)
!8218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 400, elements: !8219)
!8219 = !{!8220}
!8220 = !DISubrange(count: 50)
!8221 = !DIGlobalVariableExpression(var: !8222, expr: !DIExpression())
!8222 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_stp351", scope: !2, file: !3, line: 7245, type: !8166, isLocal: true, isDefinition: true, align: 8)
!8223 = !DIGlobalVariableExpression(var: !8224, expr: !DIExpression())
!8224 = distinct !DIGlobalVariable(name: "msg_enable", scope: !2, file: !3, line: 6723, type: !32, isLocal: true, isDefinition: true)
!8225 = !DIGlobalVariableExpression(var: !8226, expr: !DIExpression())
!8226 = distinct !DIGlobalVariable(name: "multi_dev", scope: !2, file: !3, line: 6737, type: !32, isLocal: true, isDefinition: true)
!8227 = !DIGlobalVariableExpression(var: !8228, expr: !DIExpression())
!8228 = distinct !DIGlobalVariable(name: "stp", scope: !2, file: !3, line: 6752, type: !32, isLocal: true, isDefinition: true)
!8229 = !DIGlobalVariableExpression(var: !8230, expr: !DIExpression())
!8230 = distinct !DIGlobalVariable(name: "fast_aging", scope: !2, file: !3, line: 6759, type: !32, isLocal: true, isDefinition: true)
!8231 = !DIGlobalVariableExpression(var: !8232, expr: !DIExpression())
!8232 = distinct !DIGlobalVariable(name: "pci_device_driver", scope: !2, file: !3, line: 7219, type: !7623, isLocal: true, isDefinition: true)
!8233 = !DIGlobalVariableExpression(var: !8234, expr: !DIExpression())
!8234 = distinct !DIGlobalVariable(name: "pcidev_name", scope: !2, file: !3, line: 7205, type: !8235, isLocal: true, isDefinition: true)
!8235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 72, elements: !3087)
!8236 = !DIGlobalVariableExpression(var: !8237, expr: !DIExpression())
!8237 = distinct !DIGlobalVariable(name: "pcidev_table", scope: !2, file: !3, line: 7207, type: !8238, isLocal: true, isDefinition: true)
!8238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7629, size: 768, elements: !1592)
!8239 = !DIGlobalVariableExpression(var: !8240, expr: !DIExpression())
!8240 = distinct !DIGlobalVariable(name: "__key", scope: !8241, file: !3, line: 7020, type: !1585, isLocal: true, isDefinition: true)
!8241 = distinct !DISubprogram(name: "pcidev_init", scope: !3, file: !3, line: 6907, type: !7641, scopeLine: 6908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8242 = !DIGlobalVariableExpression(var: !8243, expr: !DIExpression())
!8243 = distinct !DIGlobalVariable(name: "__key", scope: !8241, file: !3, line: 7023, type: !1585, isLocal: true, isDefinition: true)
!8244 = !DIGlobalVariableExpression(var: !8245, expr: !DIExpression())
!8245 = distinct !DIGlobalVariable(name: "version", scope: !2, file: !3, line: 1483, type: !8246, isLocal: true, isDefinition: true)
!8246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 312, elements: !8247)
!8247 = !{!8248}
!8248 = !DISubrange(count: 39)
!8249 = !DIGlobalVariableExpression(var: !8250, expr: !DIExpression())
!8250 = distinct !DIGlobalVariable(name: "net_device_present", scope: !2, file: !3, line: 6836, type: !32, isLocal: true, isDefinition: true)
!8251 = !DIGlobalVariableExpression(var: !8252, expr: !DIExpression())
!8252 = distinct !DIGlobalVariable(name: "DEFAULT_MAC_ADDRESS", scope: !2, file: !3, line: 1486, type: !7802, isLocal: true, isDefinition: true)
!8253 = !DIGlobalVariableExpression(var: !8254, expr: !DIExpression())
!8254 = distinct !DIGlobalVariable(name: "next_jiffies", scope: !2, file: !3, line: 5303, type: !312, isLocal: true, isDefinition: true)
!8255 = !DIGlobalVariableExpression(var: !8256, expr: !DIExpression())
!8256 = distinct !DIGlobalVariable(name: "netdev_ops", scope: !2, file: !3, line: 6805, type: !397, isLocal: true, isDefinition: true)
!8257 = !DIGlobalVariableExpression(var: !8258, expr: !DIExpression())
!8258 = distinct !DIGlobalVariable(name: "__key", scope: !8259, file: !8008, line: 33, type: !1585, isLocal: true, isDefinition: true)
!8259 = distinct !DISubprogram(name: "sema_init", scope: !8008, file: !8008, line: 31, type: !8260, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8260 = !DISubroutineType(types: !8261)
!8261 = !{null, !8262, !32}
!8262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8007, size: 64)
!8263 = !DIGlobalVariableExpression(var: !8264, expr: !DIExpression())
!8264 = distinct !DIGlobalVariable(name: "__warned", scope: !8265, file: !8266, line: 275, type: !771, isLocal: true, isDefinition: true)
!8265 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !8266, file: !8266, line: 271, type: !8267, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8266 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!8267 = !DISubroutineType(types: !8268)
!8268 = !{!2036, !6546, !591, !1039, !7227, !312}
!8269 = !DIGlobalVariableExpression(var: !8270, expr: !DIExpression())
!8270 = distinct !DIGlobalVariable(name: "mask", scope: !8271, file: !3, line: 3638, type: !8274, isLocal: true, isDefinition: true)
!8271 = distinct !DISubprogram(name: "hw_add_wol_bcast", scope: !3, file: !3, line: 3636, type: !8272, scopeLine: 3637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{null, !8002}
!8274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5862, size: 8, elements: !2472)
!8275 = !DIGlobalVariableExpression(var: !8276, expr: !DIExpression())
!8276 = distinct !DIGlobalVariable(name: "pattern", scope: !8271, file: !3, line: 3639, type: !8277, isLocal: true, isDefinition: true)
!8277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5862, size: 48, elements: !999)
!8278 = !DIGlobalVariableExpression(var: !8279, expr: !DIExpression())
!8279 = distinct !DIGlobalVariable(name: "last_reset", scope: !8280, file: !3, line: 4901, type: !312, isLocal: true, isDefinition: true)
!8280 = distinct !DISubprogram(name: "netdev_tx_timeout", scope: !3, file: !3, line: 4899, type: !733, scopeLine: 4900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8281 = !DIGlobalVariableExpression(var: !8282, expr: !DIExpression())
!8282 = distinct !DIGlobalVariable(name: "netdev_ethtool_ops", scope: !2, file: !3, line: 6595, type: !5522, isLocal: true, isDefinition: true)
!8283 = !DIGlobalVariableExpression(var: !8284, expr: !DIExpression())
!8284 = distinct !DIGlobalVariable(name: "hw_regs_range", scope: !2, file: !3, line: 6087, type: !8285, isLocal: true, isDefinition: true)
!8285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8286, size: 448, elements: !6005)
!8286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hw_regs", file: !3, line: 6084, size: 64, elements: !8287)
!8287 = !{!8288, !8289}
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8286, file: !3, line: 6085, baseType: !32, size: 32)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !8286, file: !3, line: 6086, baseType: !32, size: 32, offset: 32)
!8290 = !DIGlobalVariableExpression(var: !8291, expr: !DIExpression())
!8291 = distinct !DIGlobalVariable(name: "net_addr", scope: !8292, file: !3, line: 6190, type: !8293, isLocal: true, isDefinition: true)
!8292 = distinct !DISubprogram(name: "netdev_set_wol", scope: !3, file: !3, line: 6183, type: !5572, scopeLine: 6185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5862, size: 32, elements: !2272)
!8294 = !DIGlobalVariableExpression(var: !8295, expr: !DIExpression())
!8295 = distinct !DIGlobalVariable(name: "mask", scope: !8296, file: !3, line: 3674, type: !8274, isLocal: true, isDefinition: true)
!8296 = distinct !DISubprogram(name: "hw_add_wol_ucast", scope: !3, file: !3, line: 3672, type: !8272, scopeLine: 3673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8297 = !DIGlobalVariableExpression(var: !8298, expr: !DIExpression())
!8298 = distinct !DIGlobalVariable(name: "mask", scope: !8299, file: !3, line: 3656, type: !8274, isLocal: true, isDefinition: true)
!8299 = distinct !DISubprogram(name: "hw_add_wol_mcast", scope: !3, file: !3, line: 3654, type: !8272, scopeLine: 3655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8300 = !DIGlobalVariableExpression(var: !8301, expr: !DIExpression())
!8301 = distinct !DIGlobalVariable(name: "mask", scope: !8302, file: !3, line: 3615, type: !8277, isLocal: true, isDefinition: true)
!8302 = distinct !DISubprogram(name: "hw_add_wol_arp", scope: !3, file: !3, line: 3613, type: !8303, scopeLine: 3614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{null, !8002, !5861}
!8305 = !DIGlobalVariableExpression(var: !8306, expr: !DIExpression())
!8306 = distinct !DIGlobalVariable(name: "eeprom_data", scope: !2, file: !3, line: 5919, type: !8307, isLocal: true, isDefinition: true)
!8307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 1024, elements: !3812)
!8308 = !DIGlobalVariableExpression(var: !8309, expr: !DIExpression())
!8309 = distinct !DIGlobalVariable(name: "ethtool_stats_keys", scope: !2, file: !3, line: 6415, type: !8310, isLocal: true, isDefinition: true)
!8310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8311, size: 8704, elements: !7857)
!8311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 6413, size: 256, elements: !8312)
!8312 = !{!8313}
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !8311, file: !3, line: 6414, baseType: !4625, size: 256)
!8314 = !DIGlobalVariableExpression(var: !8315, expr: !DIExpression())
!8315 = distinct !DIGlobalVariable(name: "pcidev_pm_ops", scope: !2, file: !3, line: 7217, type: !6573, isLocal: true, isDefinition: true)
!8316 = !DIGlobalVariableExpression(var: !8317, expr: !DIExpression())
!8317 = distinct !DIGlobalVariable(name: "net_addr", scope: !8318, file: !3, line: 7184, type: !8293, isLocal: true, isDefinition: true)
!8318 = distinct !DISubprogram(name: "pcidev_suspend", scope: !3, file: !3, line: 7176, type: !6579, scopeLine: 7177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8319 = !DIGlobalVariableExpression(var: !8320, expr: !DIExpression())
!8320 = distinct !DIGlobalVariable(name: "__param_str_message", scope: !2, file: !3, line: 7233, type: !8321, isLocal: true, isDefinition: true)
!8321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 128, elements: !269)
!8322 = !DIGlobalVariableExpression(var: !8323, expr: !DIExpression())
!8323 = distinct !DIGlobalVariable(name: "__param_str_macaddr", scope: !2, file: !3, line: 7236, type: !8321, isLocal: true, isDefinition: true)
!8324 = !DIGlobalVariableExpression(var: !8325, expr: !DIExpression())
!8325 = distinct !DIGlobalVariable(name: "macaddr", scope: !2, file: !3, line: 6725, type: !1038, isLocal: true, isDefinition: true)
!8326 = !DIGlobalVariableExpression(var: !8327, expr: !DIExpression())
!8327 = distinct !DIGlobalVariable(name: "__param_str_mac1addr", scope: !2, file: !3, line: 7237, type: !8328, isLocal: true, isDefinition: true)
!8328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 136, elements: !7721)
!8329 = !DIGlobalVariableExpression(var: !8330, expr: !DIExpression())
!8330 = distinct !DIGlobalVariable(name: "mac1addr", scope: !2, file: !3, line: 6726, type: !1038, isLocal: true, isDefinition: true)
!8331 = !DIGlobalVariableExpression(var: !8332, expr: !DIExpression())
!8332 = distinct !DIGlobalVariable(name: "__param_str_fast_aging", scope: !2, file: !3, line: 7238, type: !8333, isLocal: true, isDefinition: true)
!8333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 152, elements: !8334)
!8334 = !{!8335}
!8335 = !DISubrange(count: 19)
!8336 = !DIGlobalVariableExpression(var: !8337, expr: !DIExpression())
!8337 = distinct !DIGlobalVariable(name: "__param_str_multi_dev", scope: !2, file: !3, line: 7239, type: !8338, isLocal: true, isDefinition: true)
!8338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 144, elements: !8339)
!8339 = !{!8340}
!8340 = !DISubrange(count: 18)
!8341 = !DIGlobalVariableExpression(var: !8342, expr: !DIExpression())
!8342 = distinct !DIGlobalVariable(name: "__param_str_stp", scope: !2, file: !3, line: 7240, type: !8343, isLocal: true, isDefinition: true)
!8343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 96, elements: !4150)
!8344 = !{!"rsp"}
!8345 = !{i32 7, !"Dwarf Version", i32 4}
!8346 = !{i32 2, !"Debug Info Version", i32 3}
!8347 = !{i32 1, !"wchar_size", i32 2}
!8348 = !{i32 1, !"Code Model", i32 2}
!8349 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!8350 = distinct !DISubprogram(name: "pci_device_driver_init", scope: !3, file: !3, line: 7227, type: !8351, scopeLine: 7227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8351 = !DISubroutineType(types: !8352)
!8352 = !{!32}
!8353 = !DILocation(line: 7227, column: 1, scope: !8350)
!8354 = distinct !DISubprogram(name: "pci_device_driver_exit", scope: !3, file: !3, line: 7227, type: !3809, scopeLine: 7227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8355 = !DILocation(line: 7227, column: 1, scope: !8354)
!8356 = !DILocalVariable(name: "lock", arg: 1, scope: !8357, file: !8358, line: 327, type: !2181)
!8357 = distinct !DISubprogram(name: "spinlock_check", scope: !8358, file: !8358, line: 327, type: !8359, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8358 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!8361, !2181}
!8361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!8362 = !DILocation(line: 327, column: 67, scope: !8357, inlinedAt: !8363)
!8363 = distinct !DILocation(line: 7019, column: 2, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7019, column: 2)
!8365 = !DILocalVariable(name: "pdev", arg: 1, scope: !8241, file: !3, line: 6907, type: !7517)
!8366 = !DILocation(line: 6907, column: 40, scope: !8241)
!8367 = !DILocalVariable(name: "id", arg: 2, scope: !8241, file: !3, line: 6907, type: !7628)
!8368 = !DILocation(line: 6907, column: 74, scope: !8241)
!8369 = !DILocalVariable(name: "dev", scope: !8241, file: !3, line: 6909, type: !290)
!8370 = !DILocation(line: 6909, column: 21, scope: !8241)
!8371 = !DILocalVariable(name: "priv", scope: !8241, file: !3, line: 6910, type: !7985)
!8372 = !DILocation(line: 6910, column: 19, scope: !8241)
!8373 = !DILocalVariable(name: "hw_priv", scope: !8241, file: !3, line: 6911, type: !7512)
!8374 = !DILocation(line: 6911, column: 19, scope: !8241)
!8375 = !DILocalVariable(name: "hw", scope: !8241, file: !3, line: 6912, type: !8002)
!8376 = !DILocation(line: 6912, column: 17, scope: !8241)
!8377 = !DILocalVariable(name: "info", scope: !8241, file: !3, line: 6913, type: !8378)
!8378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8379, size: 64)
!8379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_info", file: !3, line: 6831, size: 14592, elements: !8380)
!8380 = !{!8381, !8382}
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "dev_info", scope: !8379, file: !3, line: 6832, baseType: !7513, size: 14464)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8379, file: !3, line: 6833, baseType: !8383, size: 128, offset: 14464)
!8383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !290, size: 128, elements: !2664)
!8384 = !DILocation(line: 6913, column: 24, scope: !8241)
!8385 = !DILocalVariable(name: "port", scope: !8241, file: !3, line: 6914, type: !8386)
!8386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7990, size: 64)
!8387 = !DILocation(line: 6914, column: 19, scope: !8241)
!8388 = !DILocalVariable(name: "reg_base", scope: !8241, file: !3, line: 6915, type: !312)
!8389 = !DILocation(line: 6915, column: 16, scope: !8241)
!8390 = !DILocalVariable(name: "reg_len", scope: !8241, file: !3, line: 6916, type: !312)
!8391 = !DILocation(line: 6916, column: 16, scope: !8241)
!8392 = !DILocalVariable(name: "cnt", scope: !8241, file: !3, line: 6917, type: !32)
!8393 = !DILocation(line: 6917, column: 6, scope: !8241)
!8394 = !DILocalVariable(name: "i", scope: !8241, file: !3, line: 6918, type: !32)
!8395 = !DILocation(line: 6918, column: 6, scope: !8241)
!8396 = !DILocalVariable(name: "mib_port_count", scope: !8241, file: !3, line: 6919, type: !32)
!8397 = !DILocation(line: 6919, column: 6, scope: !8241)
!8398 = !DILocalVariable(name: "pi", scope: !8241, file: !3, line: 6920, type: !32)
!8399 = !DILocation(line: 6920, column: 6, scope: !8241)
!8400 = !DILocalVariable(name: "port_count", scope: !8241, file: !3, line: 6921, type: !32)
!8401 = !DILocation(line: 6921, column: 6, scope: !8241)
!8402 = !DILocalVariable(name: "result", scope: !8241, file: !3, line: 6922, type: !32)
!8403 = !DILocation(line: 6922, column: 6, scope: !8241)
!8404 = !DILocalVariable(name: "banner", scope: !8241, file: !3, line: 6923, type: !8246)
!8405 = !DILocation(line: 6923, column: 7, scope: !8241)
!8406 = !DILocalVariable(name: "sw", scope: !8241, file: !3, line: 6924, type: !7794)
!8407 = !DILocation(line: 6924, column: 21, scope: !8241)
!8408 = !DILocation(line: 6926, column: 29, scope: !8241)
!8409 = !DILocation(line: 6926, column: 11, scope: !8241)
!8410 = !DILocation(line: 6926, column: 9, scope: !8241)
!8411 = !DILocation(line: 6927, column: 6, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6927, column: 6)
!8413 = !DILocation(line: 6927, column: 6, scope: !8241)
!8414 = !DILocation(line: 6928, column: 10, scope: !8412)
!8415 = !DILocation(line: 6928, column: 3, scope: !8412)
!8416 = !DILocation(line: 6930, column: 9, scope: !8241)
!8417 = !DILocation(line: 6932, column: 20, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6932, column: 6)
!8419 = !DILocation(line: 6932, column: 26, scope: !8418)
!8420 = !DILocation(line: 6932, column: 6, scope: !8418)
!8421 = !DILocation(line: 6932, column: 49, scope: !8418)
!8422 = !DILocation(line: 6933, column: 29, scope: !8418)
!8423 = !DILocation(line: 6933, column: 35, scope: !8418)
!8424 = !DILocation(line: 6933, column: 6, scope: !8418)
!8425 = !DILocation(line: 6932, column: 6, scope: !8241)
!8426 = !DILocation(line: 6934, column: 10, scope: !8418)
!8427 = !DILocation(line: 6934, column: 3, scope: !8418)
!8428 = !DILocation(line: 6936, column: 13, scope: !8241)
!8429 = !DILocation(line: 6936, column: 11, scope: !8241)
!8430 = !DILocation(line: 6937, column: 12, scope: !8241)
!8431 = !DILocation(line: 6937, column: 10, scope: !8241)
!8432 = !DILocation(line: 6938, column: 7, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6938, column: 6)
!8434 = !DILocation(line: 6938, column: 35, scope: !8433)
!8435 = !DILocation(line: 6938, column: 52, scope: !8433)
!8436 = !DILocation(line: 6938, column: 6, scope: !8241)
!8437 = !DILocation(line: 6939, column: 10, scope: !8433)
!8438 = !DILocation(line: 6939, column: 3, scope: !8433)
!8439 = !DILocation(line: 6941, column: 7, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6941, column: 6)
!8441 = !DILocation(line: 6941, column: 6, scope: !8241)
!8442 = !DILocation(line: 6942, column: 10, scope: !8440)
!8443 = !DILocation(line: 6942, column: 3, scope: !8440)
!8444 = !DILocation(line: 6943, column: 17, scope: !8241)
!8445 = !DILocation(line: 6943, column: 2, scope: !8241)
!8446 = !DILocation(line: 6945, column: 9, scope: !8241)
!8447 = !DILocation(line: 6947, column: 9, scope: !8241)
!8448 = !DILocation(line: 6947, column: 7, scope: !8241)
!8449 = !DILocation(line: 6948, column: 7, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6948, column: 6)
!8451 = !DILocation(line: 6948, column: 6, scope: !8241)
!8452 = !DILocation(line: 6949, column: 3, scope: !8450)
!8453 = !DILocation(line: 6951, column: 13, scope: !8241)
!8454 = !DILocation(line: 6951, column: 19, scope: !8241)
!8455 = !DILocation(line: 6951, column: 10, scope: !8241)
!8456 = !DILocation(line: 6952, column: 18, scope: !8241)
!8457 = !DILocation(line: 6952, column: 2, scope: !8241)
!8458 = !DILocation(line: 6952, column: 11, scope: !8241)
!8459 = !DILocation(line: 6952, column: 16, scope: !8241)
!8460 = !DILocation(line: 6954, column: 8, scope: !8241)
!8461 = !DILocation(line: 6954, column: 17, scope: !8241)
!8462 = !DILocation(line: 6954, column: 5, scope: !8241)
!8463 = !DILocation(line: 6956, column: 19, scope: !8241)
!8464 = !DILocation(line: 6956, column: 29, scope: !8241)
!8465 = !DILocation(line: 6956, column: 11, scope: !8241)
!8466 = !DILocation(line: 6956, column: 2, scope: !8241)
!8467 = !DILocation(line: 6956, column: 6, scope: !8241)
!8468 = !DILocation(line: 6956, column: 9, scope: !8241)
!8469 = !DILocation(line: 6957, column: 7, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6957, column: 6)
!8471 = !DILocation(line: 6957, column: 11, scope: !8470)
!8472 = !DILocation(line: 6957, column: 6, scope: !8241)
!8473 = !DILocation(line: 6958, column: 3, scope: !8470)
!8474 = !DILocation(line: 6960, column: 16, scope: !8241)
!8475 = !DILocation(line: 6960, column: 8, scope: !8241)
!8476 = !DILocation(line: 6960, column: 6, scope: !8241)
!8477 = !DILocation(line: 6961, column: 7, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6961, column: 6)
!8479 = !DILocation(line: 6961, column: 6, scope: !8241)
!8480 = !DILocation(line: 6962, column: 7, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 6962, column: 7)
!8482 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 6961, column: 12)
!8483 = !DILocation(line: 6962, column: 18, scope: !8481)
!8484 = !DILocation(line: 6962, column: 7, scope: !8482)
!8485 = !DILocation(line: 6963, column: 4, scope: !8481)
!8486 = !DILocation(line: 6964, column: 10, scope: !8482)
!8487 = !DILocation(line: 6965, column: 3, scope: !8482)
!8488 = !DILocation(line: 6968, column: 11, scope: !8241)
!8489 = !DILocation(line: 6968, column: 2, scope: !8241)
!8490 = !DILocation(line: 6969, column: 15, scope: !8241)
!8491 = !DILocation(line: 6969, column: 19, scope: !8241)
!8492 = !DILocation(line: 6969, column: 2, scope: !8241)
!8493 = !DILocation(line: 6969, column: 13, scope: !8241)
!8494 = !DILocation(line: 6970, column: 2, scope: !8241)
!8495 = !DILocation(line: 6974, column: 2, scope: !8241)
!8496 = !DILocation(line: 6974, column: 6, scope: !8241)
!8497 = !DILocation(line: 6974, column: 16, scope: !8241)
!8498 = !DILocation(line: 6975, column: 13, scope: !8241)
!8499 = !DILocation(line: 6976, column: 17, scope: !8241)
!8500 = !DILocation(line: 6977, column: 2, scope: !8241)
!8501 = !DILocation(line: 6977, column: 6, scope: !8241)
!8502 = !DILocation(line: 6977, column: 21, scope: !8241)
!8503 = !DILocation(line: 6978, column: 2, scope: !8241)
!8504 = !DILocation(line: 6978, column: 6, scope: !8241)
!8505 = !DILocation(line: 6978, column: 14, scope: !8241)
!8506 = !DILocation(line: 6979, column: 2, scope: !8241)
!8507 = !DILocation(line: 6979, column: 6, scope: !8241)
!8508 = !DILocation(line: 6979, column: 19, scope: !8241)
!8509 = !DILocation(line: 6982, column: 11, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6982, column: 6)
!8511 = !DILocation(line: 6982, column: 8, scope: !8510)
!8512 = !DILocation(line: 6982, column: 6, scope: !8241)
!8513 = !DILocation(line: 6983, column: 7, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 6983, column: 7)
!8515 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 6982, column: 16)
!8516 = !DILocation(line: 6983, column: 7, scope: !8515)
!8517 = !DILocation(line: 6984, column: 4, scope: !8514)
!8518 = !DILocation(line: 6984, column: 8, scope: !8514)
!8519 = !DILocation(line: 6984, column: 18, scope: !8514)
!8520 = !DILocation(line: 6986, column: 3, scope: !8515)
!8521 = !DILocation(line: 6986, column: 7, scope: !8515)
!8522 = !DILocation(line: 6986, column: 15, scope: !8515)
!8523 = !DILocation(line: 6989, column: 7, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 6989, column: 7)
!8525 = !DILocation(line: 6989, column: 7, scope: !8515)
!8526 = !DILocation(line: 6990, column: 4, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 6989, column: 18)
!8528 = !DILocation(line: 6990, column: 8, scope: !8527)
!8529 = !DILocation(line: 6990, column: 18, scope: !8527)
!8530 = !DILocation(line: 6991, column: 4, scope: !8527)
!8531 = !DILocation(line: 6991, column: 8, scope: !8527)
!8532 = !DILocation(line: 6991, column: 23, scope: !8527)
!8533 = !DILocation(line: 6992, column: 3, scope: !8527)
!8534 = !DILocation(line: 6995, column: 12, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 6995, column: 7)
!8536 = !DILocation(line: 6995, column: 16, scope: !8535)
!8537 = !DILocation(line: 6995, column: 9, scope: !8535)
!8538 = !DILocation(line: 6995, column: 7, scope: !8515)
!8539 = !DILocation(line: 6996, column: 15, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 6995, column: 27)
!8541 = !DILocation(line: 6997, column: 19, scope: !8540)
!8542 = !DILocation(line: 6998, column: 3, scope: !8540)
!8543 = !DILocation(line: 6999, column: 3, scope: !8515)
!8544 = !DILocation(line: 6999, column: 7, scope: !8515)
!8545 = !DILocation(line: 6999, column: 20, scope: !8515)
!8546 = !DILocation(line: 7000, column: 20, scope: !8515)
!8547 = !DILocation(line: 7000, column: 3, scope: !8515)
!8548 = !DILocation(line: 7000, column: 7, scope: !8515)
!8549 = !DILocation(line: 7000, column: 18, scope: !8515)
!8550 = !DILocation(line: 7001, column: 8, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 7001, column: 7)
!8552 = !DILocation(line: 7001, column: 12, scope: !8551)
!8553 = !DILocation(line: 7001, column: 7, scope: !8515)
!8554 = !DILocation(line: 7002, column: 4, scope: !8551)
!8555 = !DILocation(line: 7004, column: 8, scope: !8515)
!8556 = !DILocation(line: 7004, column: 12, scope: !8515)
!8557 = !DILocation(line: 7004, column: 6, scope: !8515)
!8558 = !DILocation(line: 7005, column: 2, scope: !8515)
!8559 = !DILocation(line: 7006, column: 9, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7006, column: 2)
!8561 = !DILocation(line: 7006, column: 7, scope: !8560)
!8562 = !DILocation(line: 7006, column: 14, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 7006, column: 2)
!8564 = !DILocation(line: 7006, column: 18, scope: !8563)
!8565 = !DILocation(line: 7006, column: 22, scope: !8563)
!8566 = !DILocation(line: 7006, column: 16, scope: !8563)
!8567 = !DILocation(line: 7006, column: 2, scope: !8560)
!8568 = !DILocation(line: 7007, column: 3, scope: !8563)
!8569 = !DILocation(line: 7007, column: 7, scope: !8563)
!8570 = !DILocation(line: 7007, column: 16, scope: !8563)
!8571 = !DILocation(line: 7007, column: 19, scope: !8563)
!8572 = !DILocation(line: 7007, column: 29, scope: !8563)
!8573 = !DILocation(line: 7006, column: 37, scope: !8563)
!8574 = !DILocation(line: 7006, column: 2, scope: !8563)
!8575 = distinct !{!8575, !8567, !8576}
!8576 = !DILocation(line: 7007, column: 31, scope: !8560)
!8577 = !DILocation(line: 7009, column: 15, scope: !8241)
!8578 = !DILocation(line: 7009, column: 2, scope: !8241)
!8579 = !DILocation(line: 7009, column: 6, scope: !8241)
!8580 = !DILocation(line: 7009, column: 13, scope: !8241)
!8581 = !DILocation(line: 7012, column: 2, scope: !8241)
!8582 = !DILocation(line: 7012, column: 11, scope: !8241)
!8583 = !DILocation(line: 7012, column: 15, scope: !8241)
!8584 = !DILocation(line: 7014, column: 20, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7014, column: 6)
!8586 = !DILocation(line: 7014, column: 6, scope: !8585)
!8587 = !DILocation(line: 7014, column: 6, scope: !8241)
!8588 = !DILocation(line: 7015, column: 3, scope: !8585)
!8589 = !DILocation(line: 7017, column: 19, scope: !8241)
!8590 = !DILocation(line: 7017, column: 2, scope: !8241)
!8591 = !DILocation(line: 7017, column: 11, scope: !8241)
!8592 = !DILocation(line: 7017, column: 14, scope: !8241)
!8593 = !DILocation(line: 7017, column: 17, scope: !8241)
!8594 = !DILocation(line: 7019, column: 2, scope: !8241)
!8595 = !DILocation(line: 7019, column: 2, scope: !8364)
!8596 = !DILocation(line: 329, column: 10, scope: !8357, inlinedAt: !8363)
!8597 = !DILocation(line: 329, column: 16, scope: !8357, inlinedAt: !8363)
!8598 = !DILocation(line: 7020, column: 2, scope: !8241)
!8599 = !DILocation(line: 7020, column: 2, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7020, column: 2)
!8601 = !DILocation(line: 7022, column: 9, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7022, column: 2)
!8603 = !DILocation(line: 7022, column: 7, scope: !8602)
!8604 = !DILocation(line: 7022, column: 14, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 7022, column: 2)
!8606 = !DILocation(line: 7022, column: 16, scope: !8605)
!8607 = !DILocation(line: 7022, column: 2, scope: !8602)
!8608 = !DILocation(line: 7023, column: 3, scope: !8605)
!8609 = !DILocation(line: 7023, column: 3, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 7023, column: 3)
!8611 = !DILocation(line: 7022, column: 35, scope: !8605)
!8612 = !DILocation(line: 7022, column: 2, scope: !8605)
!8613 = distinct !{!8613, !8607, !8614}
!8614 = !DILocation(line: 7023, column: 3, scope: !8602)
!8615 = !DILocation(line: 7025, column: 6, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7025, column: 6)
!8617 = !DILocation(line: 7025, column: 17, scope: !8616)
!8618 = !DILocation(line: 7025, column: 6, scope: !8241)
!8619 = !DILocation(line: 7026, column: 16, scope: !8616)
!8620 = !DILocation(line: 7026, column: 25, scope: !8616)
!8621 = !DILocation(line: 7026, column: 3, scope: !8616)
!8622 = !DILocation(line: 7029, column: 15, scope: !8241)
!8623 = !DILocation(line: 7029, column: 2, scope: !8241)
!8624 = !DILocation(line: 7032, column: 6, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7032, column: 6)
!8626 = !DILocation(line: 7032, column: 10, scope: !8625)
!8627 = !DILocation(line: 7032, column: 20, scope: !8625)
!8628 = !DILocation(line: 7032, column: 6, scope: !8241)
!8629 = !DILocation(line: 7033, column: 10, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 7032, column: 25)
!8631 = !DILocation(line: 7033, column: 14, scope: !8630)
!8632 = !DILocation(line: 7033, column: 3, scope: !8630)
!8633 = !DILocation(line: 7033, column: 26, scope: !8630)
!8634 = !DILocation(line: 7033, column: 30, scope: !8630)
!8635 = !DILocation(line: 7034, column: 19, scope: !8630)
!8636 = !DILocation(line: 7034, column: 3, scope: !8630)
!8637 = !DILocation(line: 7035, column: 7, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 7035, column: 7)
!8639 = !DILocation(line: 7035, column: 19, scope: !8638)
!8640 = !DILocation(line: 7035, column: 7, scope: !8630)
!8641 = !DILocation(line: 7036, column: 17, scope: !8638)
!8642 = !DILocation(line: 7036, column: 26, scope: !8638)
!8643 = !DILocation(line: 7036, column: 4, scope: !8638)
!8644 = !DILocation(line: 7037, column: 2, scope: !8630)
!8645 = !DILocation(line: 7039, column: 11, scope: !8241)
!8646 = !DILocation(line: 7039, column: 2, scope: !8241)
!8647 = !DILocation(line: 7040, column: 6, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7040, column: 6)
!8649 = !DILocation(line: 7040, column: 10, scope: !8648)
!8650 = !DILocation(line: 7040, column: 6, scope: !8241)
!8651 = !DILocation(line: 7041, column: 12, scope: !8648)
!8652 = !DILocation(line: 7041, column: 3, scope: !8648)
!8653 = !DILocation(line: 7043, column: 3, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 7042, column: 7)
!8655 = !DILocation(line: 7043, column: 12, scope: !8654)
!8656 = !DILocation(line: 7043, column: 24, scope: !8654)
!8657 = !DILocation(line: 7044, column: 3, scope: !8654)
!8658 = !DILocation(line: 7044, column: 12, scope: !8654)
!8659 = !DILocation(line: 7044, column: 23, scope: !8654)
!8660 = !DILocation(line: 7047, column: 2, scope: !8241)
!8661 = !DILocation(line: 7047, column: 2, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7047, column: 2)
!8663 = !DILocation(line: 7050, column: 18, scope: !8241)
!8664 = !DILocation(line: 7050, column: 27, scope: !8241)
!8665 = !DILocation(line: 7050, column: 2, scope: !8241)
!8666 = !DILocation(line: 7053, column: 9, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7053, column: 2)
!8668 = !DILocation(line: 7053, column: 7, scope: !8667)
!8669 = !DILocation(line: 7053, column: 14, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 7053, column: 2)
!8671 = !DILocation(line: 7053, column: 18, scope: !8670)
!8672 = !DILocation(line: 7053, column: 22, scope: !8670)
!8673 = !DILocation(line: 7053, column: 16, scope: !8670)
!8674 = !DILocation(line: 7053, column: 2, scope: !8667)
!8675 = !DILocation(line: 7054, column: 9, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 7053, column: 38)
!8677 = !DILocation(line: 7054, column: 7, scope: !8676)
!8678 = !DILocation(line: 7055, column: 8, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 7055, column: 7)
!8680 = !DILocation(line: 7055, column: 7, scope: !8676)
!8681 = !DILocation(line: 7056, column: 4, scope: !8679)
!8682 = !DILocation(line: 7057, column: 3, scope: !8676)
!8683 = !DILocation(line: 7058, column: 21, scope: !8676)
!8684 = !DILocation(line: 7058, column: 3, scope: !8676)
!8685 = !DILocation(line: 7058, column: 9, scope: !8676)
!8686 = !DILocation(line: 7058, column: 16, scope: !8676)
!8687 = !DILocation(line: 7058, column: 19, scope: !8676)
!8688 = !DILocation(line: 7060, column: 22, scope: !8676)
!8689 = !DILocation(line: 7060, column: 10, scope: !8676)
!8690 = !DILocation(line: 7060, column: 8, scope: !8676)
!8691 = !DILocation(line: 7061, column: 19, scope: !8676)
!8692 = !DILocation(line: 7061, column: 3, scope: !8676)
!8693 = !DILocation(line: 7061, column: 9, scope: !8676)
!8694 = !DILocation(line: 7061, column: 17, scope: !8676)
!8695 = !DILocation(line: 7062, column: 32, scope: !8676)
!8696 = !DILocation(line: 7062, column: 3, scope: !8676)
!8697 = !DILocation(line: 7062, column: 9, scope: !8676)
!8698 = !DILocation(line: 7062, column: 12, scope: !8676)
!8699 = !DILocation(line: 7064, column: 11, scope: !8676)
!8700 = !DILocation(line: 7064, column: 17, scope: !8676)
!8701 = !DILocation(line: 7064, column: 8, scope: !8676)
!8702 = !DILocation(line: 7065, column: 20, scope: !8676)
!8703 = !DILocation(line: 7065, column: 3, scope: !8676)
!8704 = !DILocation(line: 7065, column: 9, scope: !8676)
!8705 = !DILocation(line: 7065, column: 18, scope: !8676)
!8706 = !DILocation(line: 7066, column: 24, scope: !8676)
!8707 = !DILocation(line: 7066, column: 3, scope: !8676)
!8708 = !DILocation(line: 7066, column: 9, scope: !8676)
!8709 = !DILocation(line: 7066, column: 22, scope: !8676)
!8710 = !DILocation(line: 7067, column: 22, scope: !8676)
!8711 = !DILocation(line: 7067, column: 3, scope: !8676)
!8712 = !DILocation(line: 7067, column: 9, scope: !8676)
!8713 = !DILocation(line: 7067, column: 20, scope: !8676)
!8714 = !DILocation(line: 7068, column: 3, scope: !8676)
!8715 = !DILocation(line: 7068, column: 9, scope: !8676)
!8716 = !DILocation(line: 7068, column: 19, scope: !8676)
!8717 = !DILocation(line: 7070, column: 14, scope: !8676)
!8718 = !DILocation(line: 7070, column: 3, scope: !8676)
!8719 = !DILocation(line: 7070, column: 9, scope: !8676)
!8720 = !DILocation(line: 7070, column: 12, scope: !8676)
!8721 = !DILocation(line: 7071, column: 19, scope: !8676)
!8722 = !DILocation(line: 7071, column: 23, scope: !8676)
!8723 = !DILocation(line: 7071, column: 33, scope: !8676)
!8724 = !DILocation(line: 7071, column: 39, scope: !8676)
!8725 = !DILocation(line: 7071, column: 3, scope: !8676)
!8726 = !DILocation(line: 7071, column: 9, scope: !8676)
!8727 = !DILocation(line: 7071, column: 16, scope: !8676)
!8728 = !DILocation(line: 7073, column: 12, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 7073, column: 3)
!8730 = !DILocation(line: 7073, column: 22, scope: !8729)
!8731 = !DILocation(line: 7073, column: 20, scope: !8729)
!8732 = !DILocation(line: 7073, column: 8, scope: !8729)
!8733 = !DILocation(line: 7073, column: 25, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 7073, column: 3)
!8735 = !DILocation(line: 7073, column: 31, scope: !8734)
!8736 = !DILocation(line: 7073, column: 29, scope: !8734)
!8737 = !DILocation(line: 7073, column: 3, scope: !8729)
!8738 = !DILocation(line: 7074, column: 32, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 7073, column: 56)
!8740 = !DILocation(line: 7074, column: 4, scope: !8739)
!8741 = !DILocation(line: 7074, column: 8, scope: !8739)
!8742 = !DILocation(line: 7074, column: 18, scope: !8739)
!8743 = !DILocation(line: 7074, column: 22, scope: !8739)
!8744 = !DILocation(line: 7074, column: 30, scope: !8739)
!8745 = !DILocation(line: 7075, column: 29, scope: !8739)
!8746 = !DILocation(line: 7075, column: 4, scope: !8739)
!8747 = !DILocation(line: 7075, column: 8, scope: !8739)
!8748 = !DILocation(line: 7075, column: 18, scope: !8739)
!8749 = !DILocation(line: 7075, column: 22, scope: !8739)
!8750 = !DILocation(line: 7075, column: 27, scope: !8739)
!8751 = !DILocation(line: 7076, column: 4, scope: !8739)
!8752 = !DILocation(line: 7076, column: 8, scope: !8739)
!8753 = !DILocation(line: 7076, column: 18, scope: !8739)
!8754 = !DILocation(line: 7076, column: 22, scope: !8739)
!8755 = !DILocation(line: 7076, column: 28, scope: !8739)
!8756 = !DILocation(line: 7077, column: 3, scope: !8739)
!8757 = !DILocation(line: 7073, column: 46, scope: !8734)
!8758 = !DILocation(line: 7073, column: 52, scope: !8734)
!8759 = !DILocation(line: 7073, column: 3, scope: !8734)
!8760 = distinct !{!8760, !8737, !8761}
!8761 = !DILocation(line: 7077, column: 3, scope: !8729)
!8762 = !DILocation(line: 7079, column: 36, scope: !8676)
!8763 = !DILocation(line: 7079, column: 40, scope: !8676)
!8764 = !DILocation(line: 7079, column: 20, scope: !8676)
!8765 = !DILocation(line: 7079, column: 3, scope: !8676)
!8766 = !DILocation(line: 7079, column: 8, scope: !8676)
!8767 = !DILocation(line: 7079, column: 18, scope: !8676)
!8768 = !DILocation(line: 7080, column: 18, scope: !8676)
!8769 = !DILocation(line: 7080, column: 23, scope: !8676)
!8770 = !DILocation(line: 7080, column: 35, scope: !8676)
!8771 = !DILocation(line: 7080, column: 33, scope: !8676)
!8772 = !DILocation(line: 7080, column: 43, scope: !8676)
!8773 = !DILocation(line: 7080, column: 3, scope: !8676)
!8774 = !DILocation(line: 7080, column: 8, scope: !8676)
!8775 = !DILocation(line: 7080, column: 16, scope: !8676)
!8776 = !DILocation(line: 7081, column: 14, scope: !8676)
!8777 = !DILocation(line: 7081, column: 20, scope: !8676)
!8778 = !DILocation(line: 7081, column: 3, scope: !8676)
!8779 = !DILocation(line: 7081, column: 8, scope: !8676)
!8780 = !DILocation(line: 7081, column: 12, scope: !8676)
!8781 = !DILocation(line: 7082, column: 20, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 7082, column: 7)
!8783 = !DILocation(line: 7082, column: 17, scope: !8782)
!8784 = !DILocation(line: 7082, column: 7, scope: !8676)
!8785 = !DILocation(line: 7083, column: 11, scope: !8782)
!8786 = !DILocation(line: 7083, column: 16, scope: !8782)
!8787 = !DILocation(line: 7083, column: 26, scope: !8782)
!8788 = !DILocation(line: 7083, column: 35, scope: !8782)
!8789 = !DILocation(line: 7083, column: 38, scope: !8782)
!8790 = !DILocation(line: 7083, column: 4, scope: !8782)
!8791 = !DILocation(line: 7086, column: 11, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 7085, column: 8)
!8793 = !DILocation(line: 7086, column: 16, scope: !8792)
!8794 = !DILocation(line: 7086, column: 26, scope: !8792)
!8795 = !DILocation(line: 7086, column: 30, scope: !8792)
!8796 = !DILocation(line: 7086, column: 4, scope: !8792)
!8797 = !DILocation(line: 7087, column: 25, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 7087, column: 8)
!8799 = !DILocation(line: 7087, column: 29, scope: !8798)
!8800 = !DILocation(line: 7087, column: 41, scope: !8798)
!8801 = !DILocation(line: 7087, column: 45, scope: !8798)
!8802 = !DILocation(line: 7087, column: 8, scope: !8798)
!8803 = !DILocation(line: 7087, column: 8, scope: !8792)
!8804 = !DILocation(line: 7088, column: 25, scope: !8798)
!8805 = !DILocation(line: 7088, column: 31, scope: !8798)
!8806 = !DILocation(line: 7088, column: 5, scope: !8798)
!8807 = !DILocation(line: 7088, column: 10, scope: !8798)
!8808 = !DILocation(line: 7088, column: 22, scope: !8798)
!8809 = !DILocation(line: 7091, column: 3, scope: !8676)
!8810 = !DILocation(line: 7091, column: 8, scope: !8676)
!8811 = !DILocation(line: 7091, column: 19, scope: !8676)
!8812 = !DILocation(line: 7092, column: 3, scope: !8676)
!8813 = !DILocation(line: 7092, column: 8, scope: !8676)
!8814 = !DILocation(line: 7092, column: 20, scope: !8676)
!8815 = !DILocation(line: 7095, column: 3, scope: !8676)
!8816 = !DILocation(line: 7095, column: 8, scope: !8676)
!8817 = !DILocation(line: 7095, column: 16, scope: !8676)
!8818 = !DILocation(line: 7096, column: 3, scope: !8676)
!8819 = !DILocation(line: 7096, column: 8, scope: !8676)
!8820 = !DILocation(line: 7096, column: 16, scope: !8676)
!8821 = !DILocation(line: 7099, column: 23, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 7099, column: 7)
!8823 = !DILocation(line: 7099, column: 7, scope: !8822)
!8824 = !DILocation(line: 7099, column: 7, scope: !8676)
!8825 = !DILocation(line: 7100, column: 4, scope: !8822)
!8826 = !DILocation(line: 7101, column: 25, scope: !8676)
!8827 = !DILocation(line: 7101, column: 3, scope: !8676)
!8828 = !DILocation(line: 7102, column: 2, scope: !8676)
!8829 = !DILocation(line: 7053, column: 34, scope: !8670)
!8830 = !DILocation(line: 7053, column: 2, scope: !8670)
!8831 = distinct !{!8831, !8674, !8832}
!8832 = !DILocation(line: 7102, column: 2, scope: !8667)
!8833 = !DILocation(line: 7104, column: 14, scope: !8241)
!8834 = !DILocation(line: 7104, column: 23, scope: !8241)
!8835 = !DILocation(line: 7104, column: 2, scope: !8241)
!8836 = !DILocation(line: 7105, column: 18, scope: !8241)
!8837 = !DILocation(line: 7105, column: 24, scope: !8241)
!8838 = !DILocation(line: 7105, column: 2, scope: !8241)
!8839 = !DILocation(line: 7106, column: 2, scope: !8241)
!8840 = !DILabel(scope: !8241, name: "pcidev_init_reg_err", file: !3, line: 7108)
!8841 = !DILocation(line: 7108, column: 1, scope: !8241)
!8842 = !DILocation(line: 7109, column: 9, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 7109, column: 2)
!8844 = !DILocation(line: 7109, column: 7, scope: !8843)
!8845 = !DILocation(line: 7109, column: 14, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 7109, column: 2)
!8847 = !DILocation(line: 7109, column: 18, scope: !8846)
!8848 = !DILocation(line: 7109, column: 22, scope: !8846)
!8849 = !DILocation(line: 7109, column: 16, scope: !8846)
!8850 = !DILocation(line: 7109, column: 2, scope: !8843)
!8851 = !DILocation(line: 7110, column: 7, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 7110, column: 7)
!8853 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 7109, column: 38)
!8854 = !DILocation(line: 7110, column: 13, scope: !8852)
!8855 = !DILocation(line: 7110, column: 20, scope: !8852)
!8856 = !DILocation(line: 7110, column: 7, scope: !8853)
!8857 = !DILocation(line: 7111, column: 16, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 7110, column: 24)
!8859 = !DILocation(line: 7111, column: 22, scope: !8858)
!8860 = !DILocation(line: 7111, column: 29, scope: !8858)
!8861 = !DILocation(line: 7111, column: 4, scope: !8858)
!8862 = !DILocation(line: 7112, column: 4, scope: !8858)
!8863 = !DILocation(line: 7112, column: 10, scope: !8858)
!8864 = !DILocation(line: 7112, column: 17, scope: !8858)
!8865 = !DILocation(line: 7112, column: 20, scope: !8858)
!8866 = !DILocation(line: 7113, column: 3, scope: !8858)
!8867 = !DILocation(line: 7114, column: 2, scope: !8853)
!8868 = !DILocation(line: 7109, column: 34, scope: !8846)
!8869 = !DILocation(line: 7109, column: 2, scope: !8846)
!8870 = distinct !{!8870, !8850, !8871}
!8871 = !DILocation(line: 7114, column: 2, scope: !8843)
!8872 = !DILabel(scope: !8241, name: "pcidev_init_mem_err", file: !3, line: 7116)
!8873 = !DILocation(line: 7116, column: 1, scope: !8241)
!8874 = !DILocation(line: 7117, column: 15, scope: !8241)
!8875 = !DILocation(line: 7117, column: 2, scope: !8241)
!8876 = !DILocation(line: 7118, column: 8, scope: !8241)
!8877 = !DILocation(line: 7118, column: 12, scope: !8241)
!8878 = !DILocation(line: 7118, column: 2, scope: !8241)
!8879 = !DILabel(scope: !8241, name: "pcidev_init_alloc_err", file: !3, line: 7120)
!8880 = !DILocation(line: 7120, column: 1, scope: !8241)
!8881 = !DILocation(line: 7121, column: 10, scope: !8241)
!8882 = !DILocation(line: 7121, column: 14, scope: !8241)
!8883 = !DILocation(line: 7121, column: 2, scope: !8241)
!8884 = !DILabel(scope: !8241, name: "pcidev_init_io_err", file: !3, line: 7123)
!8885 = !DILocation(line: 7123, column: 1, scope: !8241)
!8886 = !DILocation(line: 7124, column: 8, scope: !8241)
!8887 = !DILocation(line: 7124, column: 2, scope: !8241)
!8888 = !DILabel(scope: !8241, name: "pcidev_init_dev_err", file: !3, line: 7126)
!8889 = !DILocation(line: 7126, column: 1, scope: !8241)
!8890 = !DILocation(line: 7127, column: 2, scope: !8241)
!8891 = !DILocation(line: 7129, column: 9, scope: !8241)
!8892 = !DILocation(line: 7129, column: 2, scope: !8241)
!8893 = !DILocation(line: 7130, column: 1, scope: !8241)
!8894 = distinct !DISubprogram(name: "pcidev_exit", scope: !3, file: !3, line: 7132, type: !7645, scopeLine: 7133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8895 = !DILocalVariable(name: "pdev", arg: 1, scope: !8894, file: !3, line: 7132, type: !7517)
!8896 = !DILocation(line: 7132, column: 41, scope: !8894)
!8897 = !DILocalVariable(name: "i", scope: !8894, file: !3, line: 7134, type: !32)
!8898 = !DILocation(line: 7134, column: 6, scope: !8894)
!8899 = !DILocalVariable(name: "info", scope: !8894, file: !3, line: 7135, type: !8378)
!8900 = !DILocation(line: 7135, column: 24, scope: !8894)
!8901 = !DILocation(line: 7135, column: 47, scope: !8894)
!8902 = !DILocation(line: 7135, column: 31, scope: !8894)
!8903 = !DILocalVariable(name: "hw_priv", scope: !8894, file: !3, line: 7136, type: !7512)
!8904 = !DILocation(line: 7136, column: 19, scope: !8894)
!8905 = !DILocation(line: 7136, column: 30, scope: !8894)
!8906 = !DILocation(line: 7136, column: 36, scope: !8894)
!8907 = !DILocation(line: 7138, column: 2, scope: !8894)
!8908 = !DILocation(line: 7140, column: 9, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 7140, column: 2)
!8910 = !DILocation(line: 7140, column: 7, scope: !8909)
!8911 = !DILocation(line: 7140, column: 14, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 7140, column: 2)
!8913 = !DILocation(line: 7140, column: 18, scope: !8912)
!8914 = !DILocation(line: 7140, column: 27, scope: !8912)
!8915 = !DILocation(line: 7140, column: 30, scope: !8912)
!8916 = !DILocation(line: 7140, column: 16, scope: !8912)
!8917 = !DILocation(line: 7140, column: 2, scope: !8909)
!8918 = !DILocation(line: 7141, column: 7, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 7141, column: 7)
!8920 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 7140, column: 46)
!8921 = !DILocation(line: 7141, column: 13, scope: !8919)
!8922 = !DILocation(line: 7141, column: 20, scope: !8919)
!8923 = !DILocation(line: 7141, column: 7, scope: !8920)
!8924 = !DILocation(line: 7142, column: 16, scope: !8919)
!8925 = !DILocation(line: 7142, column: 22, scope: !8919)
!8926 = !DILocation(line: 7142, column: 29, scope: !8919)
!8927 = !DILocation(line: 7142, column: 4, scope: !8919)
!8928 = !DILocation(line: 7143, column: 2, scope: !8920)
!8929 = !DILocation(line: 7140, column: 42, scope: !8912)
!8930 = !DILocation(line: 7140, column: 2, scope: !8912)
!8931 = distinct !{!8931, !8917, !8932}
!8932 = !DILocation(line: 7143, column: 2, scope: !8909)
!8933 = !DILocation(line: 7144, column: 6, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 7144, column: 6)
!8935 = !DILocation(line: 7144, column: 15, scope: !8934)
!8936 = !DILocation(line: 7144, column: 18, scope: !8934)
!8937 = !DILocation(line: 7144, column: 6, scope: !8894)
!8938 = !DILocation(line: 7145, column: 11, scope: !8934)
!8939 = !DILocation(line: 7145, column: 20, scope: !8934)
!8940 = !DILocation(line: 7145, column: 23, scope: !8934)
!8941 = !DILocation(line: 7145, column: 3, scope: !8934)
!8942 = !DILocation(line: 7146, column: 15, scope: !8894)
!8943 = !DILocation(line: 7146, column: 2, scope: !8894)
!8944 = !DILocation(line: 7147, column: 8, scope: !8894)
!8945 = !DILocation(line: 7147, column: 17, scope: !8894)
!8946 = !DILocation(line: 7147, column: 20, scope: !8894)
!8947 = !DILocation(line: 7147, column: 2, scope: !8894)
!8948 = !DILocation(line: 7148, column: 14, scope: !8894)
!8949 = !DILocation(line: 7148, column: 23, scope: !8894)
!8950 = !DILocation(line: 7148, column: 2, scope: !8894)
!8951 = !DILocation(line: 7149, column: 8, scope: !8894)
!8952 = !DILocation(line: 7149, column: 2, scope: !8894)
!8953 = !DILocation(line: 7150, column: 1, scope: !8894)
!8954 = distinct !DISubprogram(name: "kzalloc", scope: !7118, file: !7118, line: 662, type: !8955, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!591, !1039, !1742}
!8957 = !DILocalVariable(name: "s", arg: 1, scope: !8958, file: !7118, line: 445, type: !2051)
!8958 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7118, file: !7118, line: 445, type: !8959, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8959 = !DISubroutineType(types: !8960)
!8960 = !{!591, !2051, !1742, !1039}
!8961 = !DILocation(line: 445, column: 72, scope: !8958, inlinedAt: !8962)
!8962 = distinct !DILocation(line: 552, column: 10, scope: !8963, inlinedAt: !8966)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !7118, line: 540, column: 34)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !7118, line: 540, column: 6)
!8965 = distinct !DISubprogram(name: "kmalloc", scope: !7118, file: !7118, line: 538, type: !8955, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8966 = distinct !DILocation(line: 664, column: 9, scope: !8954)
!8967 = !DILocalVariable(name: "flags", arg: 2, scope: !8958, file: !7118, line: 446, type: !1742)
!8968 = !DILocation(line: 446, column: 9, scope: !8958, inlinedAt: !8962)
!8969 = !DILocalVariable(name: "size", arg: 3, scope: !8958, file: !7118, line: 446, type: !1039)
!8970 = !DILocation(line: 446, column: 23, scope: !8958, inlinedAt: !8962)
!8971 = !DILocalVariable(name: "ret", scope: !8958, file: !7118, line: 448, type: !591)
!8972 = !DILocation(line: 448, column: 8, scope: !8958, inlinedAt: !8962)
!8973 = !DILocalVariable(name: "flags", arg: 1, scope: !8974, file: !7118, line: 318, type: !1742)
!8974 = distinct !DISubprogram(name: "kmalloc_type", scope: !7118, file: !7118, line: 318, type: !8975, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8975 = !DISubroutineType(types: !8976)
!8976 = !{!7117, !1742}
!8977 = !DILocation(line: 318, column: 67, scope: !8974, inlinedAt: !8978)
!8978 = distinct !DILocation(line: 553, column: 20, scope: !8963, inlinedAt: !8966)
!8979 = !DILocalVariable(name: "size", arg: 1, scope: !8980, file: !7118, line: 346, type: !1039)
!8980 = distinct !DISubprogram(name: "kmalloc_index", scope: !7118, file: !7118, line: 346, type: !8981, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8981 = !DISubroutineType(types: !8982)
!8982 = !{!7, !1039}
!8983 = !DILocation(line: 346, column: 58, scope: !8980, inlinedAt: !8984)
!8984 = distinct !DILocation(line: 547, column: 11, scope: !8963, inlinedAt: !8966)
!8985 = !DILocalVariable(name: "size", arg: 1, scope: !8986, file: !7118, line: 472, type: !1039)
!8986 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7118, file: !7118, line: 472, type: !8987, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!591, !1039, !1742, !7}
!8989 = !DILocation(line: 472, column: 28, scope: !8986, inlinedAt: !8990)
!8990 = distinct !DILocation(line: 481, column: 9, scope: !8991, inlinedAt: !8992)
!8991 = distinct !DISubprogram(name: "kmalloc_large", scope: !7118, file: !7118, line: 478, type: !8955, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8992 = distinct !DILocation(line: 545, column: 11, scope: !8993, inlinedAt: !8966)
!8993 = distinct !DILexicalBlock(scope: !8963, file: !7118, line: 544, column: 7)
!8994 = !DILocalVariable(name: "flags", arg: 2, scope: !8986, file: !7118, line: 472, type: !1742)
!8995 = !DILocation(line: 472, column: 40, scope: !8986, inlinedAt: !8990)
!8996 = !DILocalVariable(name: "order", arg: 3, scope: !8986, file: !7118, line: 472, type: !7)
!8997 = !DILocation(line: 472, column: 60, scope: !8986, inlinedAt: !8990)
!8998 = !DILocalVariable(name: "size", arg: 1, scope: !8991, file: !7118, line: 478, type: !1039)
!8999 = !DILocation(line: 478, column: 51, scope: !8991, inlinedAt: !8992)
!9000 = !DILocalVariable(name: "flags", arg: 2, scope: !8991, file: !7118, line: 478, type: !1742)
!9001 = !DILocation(line: 478, column: 63, scope: !8991, inlinedAt: !8992)
!9002 = !DILocalVariable(name: "order", scope: !8991, file: !7118, line: 480, type: !7)
!9003 = !DILocation(line: 480, column: 15, scope: !8991, inlinedAt: !8992)
!9004 = !DILocalVariable(name: "size", arg: 1, scope: !8965, file: !7118, line: 538, type: !1039)
!9005 = !DILocation(line: 538, column: 45, scope: !8965, inlinedAt: !8966)
!9006 = !DILocalVariable(name: "flags", arg: 2, scope: !8965, file: !7118, line: 538, type: !1742)
!9007 = !DILocation(line: 538, column: 57, scope: !8965, inlinedAt: !8966)
!9008 = !DILocalVariable(name: "index", scope: !8963, file: !7118, line: 542, type: !7)
!9009 = !DILocation(line: 542, column: 16, scope: !8963, inlinedAt: !8966)
!9010 = !DILocalVariable(name: "size", arg: 1, scope: !8954, file: !7118, line: 662, type: !1039)
!9011 = !DILocation(line: 662, column: 36, scope: !8954)
!9012 = !DILocalVariable(name: "flags", arg: 2, scope: !8954, file: !7118, line: 662, type: !1742)
!9013 = !DILocation(line: 662, column: 48, scope: !8954)
!9014 = !DILocation(line: 664, column: 17, scope: !8954)
!9015 = !DILocation(line: 664, column: 23, scope: !8954)
!9016 = !DILocation(line: 664, column: 29, scope: !8954)
!9017 = !DILocation(line: 540, column: 27, scope: !8964, inlinedAt: !8966)
!9018 = !DILocation(line: 540, column: 6, scope: !8964, inlinedAt: !8966)
!9019 = !DILocation(line: 540, column: 6, scope: !8965, inlinedAt: !8966)
!9020 = !DILocation(line: 544, column: 7, scope: !8993, inlinedAt: !8966)
!9021 = !DILocation(line: 544, column: 12, scope: !8993, inlinedAt: !8966)
!9022 = !DILocation(line: 544, column: 7, scope: !8963, inlinedAt: !8966)
!9023 = !DILocation(line: 545, column: 25, scope: !8993, inlinedAt: !8966)
!9024 = !DILocation(line: 545, column: 31, scope: !8993, inlinedAt: !8966)
!9025 = !DILocation(line: 480, column: 33, scope: !8991, inlinedAt: !8992)
!9026 = !DILocation(line: 480, column: 23, scope: !8991, inlinedAt: !8992)
!9027 = !DILocation(line: 481, column: 29, scope: !8991, inlinedAt: !8992)
!9028 = !DILocation(line: 481, column: 35, scope: !8991, inlinedAt: !8992)
!9029 = !DILocation(line: 481, column: 42, scope: !8991, inlinedAt: !8992)
!9030 = !DILocation(line: 474, column: 23, scope: !8986, inlinedAt: !8990)
!9031 = !DILocation(line: 474, column: 29, scope: !8986, inlinedAt: !8990)
!9032 = !DILocation(line: 474, column: 36, scope: !8986, inlinedAt: !8990)
!9033 = !DILocation(line: 474, column: 9, scope: !8986, inlinedAt: !8990)
!9034 = !DILocation(line: 545, column: 4, scope: !8993, inlinedAt: !8966)
!9035 = !DILocation(line: 547, column: 25, scope: !8963, inlinedAt: !8966)
!9036 = !DILocation(line: 348, column: 7, scope: !9037, inlinedAt: !8984)
!9037 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 348, column: 6)
!9038 = !DILocation(line: 348, column: 6, scope: !8980, inlinedAt: !8984)
!9039 = !DILocation(line: 349, column: 3, scope: !9037, inlinedAt: !8984)
!9040 = !DILocation(line: 351, column: 6, scope: !9041, inlinedAt: !8984)
!9041 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 351, column: 6)
!9042 = !DILocation(line: 351, column: 11, scope: !9041, inlinedAt: !8984)
!9043 = !DILocation(line: 351, column: 6, scope: !8980, inlinedAt: !8984)
!9044 = !DILocation(line: 352, column: 3, scope: !9041, inlinedAt: !8984)
!9045 = !DILocation(line: 354, column: 32, scope: !9046, inlinedAt: !8984)
!9046 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 354, column: 6)
!9047 = !DILocation(line: 354, column: 37, scope: !9046, inlinedAt: !8984)
!9048 = !DILocation(line: 354, column: 42, scope: !9046, inlinedAt: !8984)
!9049 = !DILocation(line: 354, column: 45, scope: !9046, inlinedAt: !8984)
!9050 = !DILocation(line: 354, column: 50, scope: !9046, inlinedAt: !8984)
!9051 = !DILocation(line: 354, column: 6, scope: !8980, inlinedAt: !8984)
!9052 = !DILocation(line: 355, column: 3, scope: !9046, inlinedAt: !8984)
!9053 = !DILocation(line: 356, column: 32, scope: !9054, inlinedAt: !8984)
!9054 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 356, column: 6)
!9055 = !DILocation(line: 356, column: 37, scope: !9054, inlinedAt: !8984)
!9056 = !DILocation(line: 356, column: 43, scope: !9054, inlinedAt: !8984)
!9057 = !DILocation(line: 356, column: 46, scope: !9054, inlinedAt: !8984)
!9058 = !DILocation(line: 356, column: 51, scope: !9054, inlinedAt: !8984)
!9059 = !DILocation(line: 356, column: 6, scope: !8980, inlinedAt: !8984)
!9060 = !DILocation(line: 357, column: 3, scope: !9054, inlinedAt: !8984)
!9061 = !DILocation(line: 358, column: 6, scope: !9062, inlinedAt: !8984)
!9062 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 358, column: 6)
!9063 = !DILocation(line: 358, column: 11, scope: !9062, inlinedAt: !8984)
!9064 = !DILocation(line: 358, column: 6, scope: !8980, inlinedAt: !8984)
!9065 = !DILocation(line: 358, column: 26, scope: !9062, inlinedAt: !8984)
!9066 = !DILocation(line: 359, column: 6, scope: !9067, inlinedAt: !8984)
!9067 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 359, column: 6)
!9068 = !DILocation(line: 359, column: 11, scope: !9067, inlinedAt: !8984)
!9069 = !DILocation(line: 359, column: 6, scope: !8980, inlinedAt: !8984)
!9070 = !DILocation(line: 359, column: 26, scope: !9067, inlinedAt: !8984)
!9071 = !DILocation(line: 360, column: 6, scope: !9072, inlinedAt: !8984)
!9072 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 360, column: 6)
!9073 = !DILocation(line: 360, column: 11, scope: !9072, inlinedAt: !8984)
!9074 = !DILocation(line: 360, column: 6, scope: !8980, inlinedAt: !8984)
!9075 = !DILocation(line: 360, column: 26, scope: !9072, inlinedAt: !8984)
!9076 = !DILocation(line: 361, column: 6, scope: !9077, inlinedAt: !8984)
!9077 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 361, column: 6)
!9078 = !DILocation(line: 361, column: 11, scope: !9077, inlinedAt: !8984)
!9079 = !DILocation(line: 361, column: 6, scope: !8980, inlinedAt: !8984)
!9080 = !DILocation(line: 361, column: 26, scope: !9077, inlinedAt: !8984)
!9081 = !DILocation(line: 362, column: 6, scope: !9082, inlinedAt: !8984)
!9082 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 362, column: 6)
!9083 = !DILocation(line: 362, column: 11, scope: !9082, inlinedAt: !8984)
!9084 = !DILocation(line: 362, column: 6, scope: !8980, inlinedAt: !8984)
!9085 = !DILocation(line: 362, column: 26, scope: !9082, inlinedAt: !8984)
!9086 = !DILocation(line: 363, column: 6, scope: !9087, inlinedAt: !8984)
!9087 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 363, column: 6)
!9088 = !DILocation(line: 363, column: 11, scope: !9087, inlinedAt: !8984)
!9089 = !DILocation(line: 363, column: 6, scope: !8980, inlinedAt: !8984)
!9090 = !DILocation(line: 363, column: 26, scope: !9087, inlinedAt: !8984)
!9091 = !DILocation(line: 364, column: 6, scope: !9092, inlinedAt: !8984)
!9092 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 364, column: 6)
!9093 = !DILocation(line: 364, column: 11, scope: !9092, inlinedAt: !8984)
!9094 = !DILocation(line: 364, column: 6, scope: !8980, inlinedAt: !8984)
!9095 = !DILocation(line: 364, column: 26, scope: !9092, inlinedAt: !8984)
!9096 = !DILocation(line: 365, column: 6, scope: !9097, inlinedAt: !8984)
!9097 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 365, column: 6)
!9098 = !DILocation(line: 365, column: 11, scope: !9097, inlinedAt: !8984)
!9099 = !DILocation(line: 365, column: 6, scope: !8980, inlinedAt: !8984)
!9100 = !DILocation(line: 365, column: 26, scope: !9097, inlinedAt: !8984)
!9101 = !DILocation(line: 366, column: 6, scope: !9102, inlinedAt: !8984)
!9102 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 366, column: 6)
!9103 = !DILocation(line: 366, column: 11, scope: !9102, inlinedAt: !8984)
!9104 = !DILocation(line: 366, column: 6, scope: !8980, inlinedAt: !8984)
!9105 = !DILocation(line: 366, column: 26, scope: !9102, inlinedAt: !8984)
!9106 = !DILocation(line: 367, column: 6, scope: !9107, inlinedAt: !8984)
!9107 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 367, column: 6)
!9108 = !DILocation(line: 367, column: 11, scope: !9107, inlinedAt: !8984)
!9109 = !DILocation(line: 367, column: 6, scope: !8980, inlinedAt: !8984)
!9110 = !DILocation(line: 367, column: 26, scope: !9107, inlinedAt: !8984)
!9111 = !DILocation(line: 368, column: 6, scope: !9112, inlinedAt: !8984)
!9112 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 368, column: 6)
!9113 = !DILocation(line: 368, column: 11, scope: !9112, inlinedAt: !8984)
!9114 = !DILocation(line: 368, column: 6, scope: !8980, inlinedAt: !8984)
!9115 = !DILocation(line: 368, column: 26, scope: !9112, inlinedAt: !8984)
!9116 = !DILocation(line: 369, column: 6, scope: !9117, inlinedAt: !8984)
!9117 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 369, column: 6)
!9118 = !DILocation(line: 369, column: 11, scope: !9117, inlinedAt: !8984)
!9119 = !DILocation(line: 369, column: 6, scope: !8980, inlinedAt: !8984)
!9120 = !DILocation(line: 369, column: 26, scope: !9117, inlinedAt: !8984)
!9121 = !DILocation(line: 370, column: 6, scope: !9122, inlinedAt: !8984)
!9122 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 370, column: 6)
!9123 = !DILocation(line: 370, column: 11, scope: !9122, inlinedAt: !8984)
!9124 = !DILocation(line: 370, column: 6, scope: !8980, inlinedAt: !8984)
!9125 = !DILocation(line: 370, column: 26, scope: !9122, inlinedAt: !8984)
!9126 = !DILocation(line: 371, column: 6, scope: !9127, inlinedAt: !8984)
!9127 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 371, column: 6)
!9128 = !DILocation(line: 371, column: 11, scope: !9127, inlinedAt: !8984)
!9129 = !DILocation(line: 371, column: 6, scope: !8980, inlinedAt: !8984)
!9130 = !DILocation(line: 371, column: 26, scope: !9127, inlinedAt: !8984)
!9131 = !DILocation(line: 372, column: 6, scope: !9132, inlinedAt: !8984)
!9132 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 372, column: 6)
!9133 = !DILocation(line: 372, column: 11, scope: !9132, inlinedAt: !8984)
!9134 = !DILocation(line: 372, column: 6, scope: !8980, inlinedAt: !8984)
!9135 = !DILocation(line: 372, column: 26, scope: !9132, inlinedAt: !8984)
!9136 = !DILocation(line: 373, column: 6, scope: !9137, inlinedAt: !8984)
!9137 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 373, column: 6)
!9138 = !DILocation(line: 373, column: 11, scope: !9137, inlinedAt: !8984)
!9139 = !DILocation(line: 373, column: 6, scope: !8980, inlinedAt: !8984)
!9140 = !DILocation(line: 373, column: 26, scope: !9137, inlinedAt: !8984)
!9141 = !DILocation(line: 374, column: 6, scope: !9142, inlinedAt: !8984)
!9142 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 374, column: 6)
!9143 = !DILocation(line: 374, column: 11, scope: !9142, inlinedAt: !8984)
!9144 = !DILocation(line: 374, column: 6, scope: !8980, inlinedAt: !8984)
!9145 = !DILocation(line: 374, column: 26, scope: !9142, inlinedAt: !8984)
!9146 = !DILocation(line: 375, column: 6, scope: !9147, inlinedAt: !8984)
!9147 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 375, column: 6)
!9148 = !DILocation(line: 375, column: 11, scope: !9147, inlinedAt: !8984)
!9149 = !DILocation(line: 375, column: 6, scope: !8980, inlinedAt: !8984)
!9150 = !DILocation(line: 375, column: 27, scope: !9147, inlinedAt: !8984)
!9151 = !DILocation(line: 376, column: 6, scope: !9152, inlinedAt: !8984)
!9152 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 376, column: 6)
!9153 = !DILocation(line: 376, column: 11, scope: !9152, inlinedAt: !8984)
!9154 = !DILocation(line: 376, column: 6, scope: !8980, inlinedAt: !8984)
!9155 = !DILocation(line: 376, column: 32, scope: !9152, inlinedAt: !8984)
!9156 = !DILocation(line: 377, column: 6, scope: !9157, inlinedAt: !8984)
!9157 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 377, column: 6)
!9158 = !DILocation(line: 377, column: 11, scope: !9157, inlinedAt: !8984)
!9159 = !DILocation(line: 377, column: 6, scope: !8980, inlinedAt: !8984)
!9160 = !DILocation(line: 377, column: 32, scope: !9157, inlinedAt: !8984)
!9161 = !DILocation(line: 378, column: 6, scope: !9162, inlinedAt: !8984)
!9162 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 378, column: 6)
!9163 = !DILocation(line: 378, column: 11, scope: !9162, inlinedAt: !8984)
!9164 = !DILocation(line: 378, column: 6, scope: !8980, inlinedAt: !8984)
!9165 = !DILocation(line: 378, column: 32, scope: !9162, inlinedAt: !8984)
!9166 = !DILocation(line: 379, column: 6, scope: !9167, inlinedAt: !8984)
!9167 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 379, column: 6)
!9168 = !DILocation(line: 379, column: 11, scope: !9167, inlinedAt: !8984)
!9169 = !DILocation(line: 379, column: 6, scope: !8980, inlinedAt: !8984)
!9170 = !DILocation(line: 379, column: 33, scope: !9167, inlinedAt: !8984)
!9171 = !DILocation(line: 380, column: 6, scope: !9172, inlinedAt: !8984)
!9172 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 380, column: 6)
!9173 = !DILocation(line: 380, column: 11, scope: !9172, inlinedAt: !8984)
!9174 = !DILocation(line: 380, column: 6, scope: !8980, inlinedAt: !8984)
!9175 = !DILocation(line: 380, column: 33, scope: !9172, inlinedAt: !8984)
!9176 = !DILocation(line: 381, column: 6, scope: !9177, inlinedAt: !8984)
!9177 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 381, column: 6)
!9178 = !DILocation(line: 381, column: 11, scope: !9177, inlinedAt: !8984)
!9179 = !DILocation(line: 381, column: 6, scope: !8980, inlinedAt: !8984)
!9180 = !DILocation(line: 381, column: 33, scope: !9177, inlinedAt: !8984)
!9181 = !DILocation(line: 382, column: 2, scope: !9182, inlinedAt: !8984)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !7118, line: 382, column: 2)
!9183 = distinct !DILexicalBlock(scope: !8980, file: !7118, line: 382, column: 2)
!9184 = !{i32 -2143101305, i32 -2143101276, i32 -2143101230, i32 -2143101172, i32 -2143101118, i32 -2143101064, i32 -2143101009, i32 -2143100978}
!9185 = !DILocation(line: 382, column: 2, scope: !9186, inlinedAt: !8984)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !7118, line: 382, column: 2)
!9187 = distinct !DILexicalBlock(scope: !9183, file: !7118, line: 382, column: 2)
!9188 = !{i32 -2143096474, i32 -2143096467, i32 -2143096413, i32 -2143096382, i32 -2143096352}
!9189 = !DILocation(line: 382, column: 2, scope: !9187, inlinedAt: !8984)
!9190 = !DILocation(line: 386, column: 1, scope: !8980, inlinedAt: !8984)
!9191 = !DILocation(line: 547, column: 9, scope: !8963, inlinedAt: !8966)
!9192 = !DILocation(line: 549, column: 8, scope: !9193, inlinedAt: !8966)
!9193 = distinct !DILexicalBlock(scope: !8963, file: !7118, line: 549, column: 7)
!9194 = !DILocation(line: 549, column: 7, scope: !8963, inlinedAt: !8966)
!9195 = !DILocation(line: 550, column: 4, scope: !9193, inlinedAt: !8966)
!9196 = !DILocation(line: 553, column: 33, scope: !8963, inlinedAt: !8966)
!9197 = !DILocation(line: 325, column: 6, scope: !9198, inlinedAt: !8978)
!9198 = distinct !DILexicalBlock(scope: !8974, file: !7118, line: 325, column: 6)
!9199 = !DILocation(line: 325, column: 6, scope: !8974, inlinedAt: !8978)
!9200 = !DILocation(line: 326, column: 3, scope: !9198, inlinedAt: !8978)
!9201 = !DILocation(line: 332, column: 9, scope: !8974, inlinedAt: !8978)
!9202 = !DILocation(line: 332, column: 15, scope: !8974, inlinedAt: !8978)
!9203 = !DILocation(line: 332, column: 2, scope: !8974, inlinedAt: !8978)
!9204 = !DILocation(line: 336, column: 1, scope: !8974, inlinedAt: !8978)
!9205 = !DILocation(line: 553, column: 5, scope: !8963, inlinedAt: !8966)
!9206 = !DILocation(line: 553, column: 41, scope: !8963, inlinedAt: !8966)
!9207 = !DILocation(line: 554, column: 5, scope: !8963, inlinedAt: !8966)
!9208 = !DILocation(line: 554, column: 12, scope: !8963, inlinedAt: !8966)
!9209 = !DILocation(line: 448, column: 31, scope: !8958, inlinedAt: !8962)
!9210 = !DILocation(line: 448, column: 34, scope: !8958, inlinedAt: !8962)
!9211 = !DILocation(line: 448, column: 14, scope: !8958, inlinedAt: !8962)
!9212 = !DILocation(line: 450, column: 22, scope: !8958, inlinedAt: !8962)
!9213 = !DILocation(line: 450, column: 25, scope: !8958, inlinedAt: !8962)
!9214 = !DILocation(line: 450, column: 30, scope: !8958, inlinedAt: !8962)
!9215 = !DILocation(line: 450, column: 36, scope: !8958, inlinedAt: !8962)
!9216 = !DILocation(line: 450, column: 8, scope: !8958, inlinedAt: !8962)
!9217 = !DILocation(line: 450, column: 6, scope: !8958, inlinedAt: !8962)
!9218 = !DILocation(line: 451, column: 9, scope: !8958, inlinedAt: !8962)
!9219 = !DILocation(line: 552, column: 3, scope: !8963, inlinedAt: !8966)
!9220 = !DILocation(line: 557, column: 19, scope: !8965, inlinedAt: !8966)
!9221 = !DILocation(line: 557, column: 25, scope: !8965, inlinedAt: !8966)
!9222 = !DILocation(line: 557, column: 9, scope: !8965, inlinedAt: !8966)
!9223 = !DILocation(line: 557, column: 2, scope: !8965, inlinedAt: !8966)
!9224 = !DILocation(line: 558, column: 1, scope: !8965, inlinedAt: !8966)
!9225 = !DILocation(line: 664, column: 2, scope: !8954)
!9226 = distinct !DISubprogram(name: "hw_init", scope: !3, file: !3, line: 3708, type: !9227, scopeLine: 3709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9227 = !DISubroutineType(types: !9228)
!9228 = !{!32, !8002}
!9229 = !DILocalVariable(name: "hw", arg: 1, scope: !9226, file: !3, line: 3708, type: !8002)
!9230 = !DILocation(line: 3708, column: 35, scope: !9226)
!9231 = !DILocalVariable(name: "rc", scope: !9226, file: !3, line: 3710, type: !32)
!9232 = !DILocation(line: 3710, column: 6, scope: !9226)
!9233 = !DILocalVariable(name: "data", scope: !9226, file: !3, line: 3711, type: !581)
!9234 = !DILocation(line: 3711, column: 6, scope: !9226)
!9235 = !DILocalVariable(name: "revision", scope: !9226, file: !3, line: 3712, type: !581)
!9236 = !DILocation(line: 3712, column: 6, scope: !9226)
!9237 = !DILocation(line: 3715, column: 28, scope: !9226)
!9238 = !DILocation(line: 3715, column: 32, scope: !9226)
!9239 = !DILocation(line: 3715, column: 35, scope: !9226)
!9240 = !DILocation(line: 3715, column: 2, scope: !9226)
!9241 = !DILocation(line: 3718, column: 15, scope: !9226)
!9242 = !DILocation(line: 3718, column: 19, scope: !9226)
!9243 = !DILocation(line: 3718, column: 22, scope: !9226)
!9244 = !DILocation(line: 3718, column: 9, scope: !9226)
!9245 = !DILocation(line: 3718, column: 7, scope: !9226)
!9246 = !DILocation(line: 3720, column: 14, scope: !9226)
!9247 = !DILocation(line: 3720, column: 19, scope: !9226)
!9248 = !DILocation(line: 3720, column: 43, scope: !9226)
!9249 = !DILocation(line: 3720, column: 13, scope: !9226)
!9250 = !DILocation(line: 3720, column: 11, scope: !9226)
!9251 = !DILocation(line: 3721, column: 7, scope: !9226)
!9252 = !DILocation(line: 3722, column: 24, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 3722, column: 6)
!9254 = !DILocation(line: 3722, column: 21, scope: !9253)
!9255 = !DILocation(line: 3722, column: 6, scope: !9226)
!9256 = !DILocation(line: 3723, column: 6, scope: !9253)
!9257 = !DILocation(line: 3723, column: 3, scope: !9253)
!9258 = !DILocation(line: 3724, column: 29, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 3724, column: 11)
!9260 = !DILocation(line: 3724, column: 26, scope: !9259)
!9261 = !DILocation(line: 3724, column: 11, scope: !9253)
!9262 = !DILocation(line: 3725, column: 6, scope: !9259)
!9263 = !DILocation(line: 3725, column: 3, scope: !9259)
!9264 = !DILocation(line: 3727, column: 3, scope: !9259)
!9265 = !DILocation(line: 3730, column: 6, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 3730, column: 6)
!9267 = !DILocation(line: 3730, column: 15, scope: !9266)
!9268 = !DILocation(line: 3730, column: 6, scope: !9226)
!9269 = !DILocation(line: 3731, column: 3, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 3730, column: 21)
!9271 = !DILocation(line: 3731, column: 7, scope: !9270)
!9272 = !DILocation(line: 3731, column: 16, scope: !9270)
!9273 = !DILocation(line: 3732, column: 12, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 3732, column: 7)
!9275 = !DILocation(line: 3732, column: 9, scope: !9274)
!9276 = !DILocation(line: 3732, column: 7, scope: !9270)
!9277 = !DILocation(line: 3733, column: 4, scope: !9274)
!9278 = !DILocation(line: 3733, column: 8, scope: !9274)
!9279 = !DILocation(line: 3733, column: 17, scope: !9274)
!9280 = !DILocation(line: 3734, column: 2, scope: !9270)
!9281 = !DILocation(line: 3735, column: 9, scope: !9226)
!9282 = !DILocation(line: 3735, column: 2, scope: !9226)
!9283 = !DILocation(line: 3736, column: 1, scope: !9226)
!9284 = distinct !DISubprogram(name: "ksz_alloc_mem", scope: !3, file: !3, line: 4490, type: !7937, scopeLine: 4491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9285 = !DILocalVariable(name: "adapter", arg: 1, scope: !9284, file: !3, line: 4490, type: !7512)
!9286 = !DILocation(line: 4490, column: 43, scope: !9284)
!9287 = !DILocalVariable(name: "hw", scope: !9284, file: !3, line: 4492, type: !8002)
!9288 = !DILocation(line: 4492, column: 17, scope: !9284)
!9289 = !DILocation(line: 4492, column: 23, scope: !9284)
!9290 = !DILocation(line: 4492, column: 32, scope: !9284)
!9291 = !DILocation(line: 4495, column: 2, scope: !9284)
!9292 = !DILocation(line: 4495, column: 6, scope: !9284)
!9293 = !DILocation(line: 4495, column: 19, scope: !9284)
!9294 = !DILocation(line: 4495, column: 25, scope: !9284)
!9295 = !DILocation(line: 4496, column: 2, scope: !9284)
!9296 = !DILocation(line: 4496, column: 6, scope: !9284)
!9297 = !DILocation(line: 4496, column: 19, scope: !9284)
!9298 = !DILocation(line: 4496, column: 25, scope: !9284)
!9299 = !DILocation(line: 4499, column: 2, scope: !9284)
!9300 = !DILocation(line: 4499, column: 6, scope: !9284)
!9301 = !DILocation(line: 4499, column: 17, scope: !9284)
!9302 = !DILocation(line: 4500, column: 2, scope: !9284)
!9303 = !DILocation(line: 4500, column: 6, scope: !9284)
!9304 = !DILocation(line: 4500, column: 18, scope: !9284)
!9305 = !DILocation(line: 4501, column: 6, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4501, column: 6)
!9307 = !DILocation(line: 4501, column: 10, scope: !9306)
!9308 = !DILocation(line: 4501, column: 22, scope: !9306)
!9309 = !DILocation(line: 4501, column: 6, scope: !9284)
!9310 = !DILocation(line: 4502, column: 3, scope: !9306)
!9311 = !DILocation(line: 4502, column: 7, scope: !9306)
!9312 = !DILocation(line: 4502, column: 19, scope: !9306)
!9313 = !DILocation(line: 4503, column: 2, scope: !9284)
!9314 = !DILocation(line: 4503, column: 9, scope: !9284)
!9315 = !DILocation(line: 4503, column: 13, scope: !9284)
!9316 = !DILocation(line: 4504, column: 3, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4503, column: 26)
!9318 = !DILocation(line: 4504, column: 7, scope: !9317)
!9319 = !DILocation(line: 4504, column: 17, scope: !9317)
!9320 = !DILocation(line: 4505, column: 3, scope: !9317)
!9321 = !DILocation(line: 4505, column: 7, scope: !9317)
!9322 = !DILocation(line: 4505, column: 19, scope: !9317)
!9323 = distinct !{!9323, !9313, !9324}
!9324 = !DILocation(line: 4506, column: 2, scope: !9284)
!9325 = !DILocation(line: 4507, column: 6, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4507, column: 6)
!9327 = !DILocation(line: 4507, column: 10, scope: !9326)
!9328 = !DILocation(line: 4507, column: 6, scope: !9284)
!9329 = !DILocation(line: 4508, column: 28, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 4507, column: 22)
!9331 = !DILocation(line: 4508, column: 32, scope: !9330)
!9332 = !DILocation(line: 4508, column: 43, scope: !9330)
!9333 = !DILocation(line: 4508, column: 24, scope: !9330)
!9334 = !DILocation(line: 4508, column: 49, scope: !9330)
!9335 = !DILocation(line: 4508, column: 3, scope: !9330)
!9336 = !DILocation(line: 4508, column: 7, scope: !9330)
!9337 = !DILocation(line: 4508, column: 19, scope: !9330)
!9338 = !DILocation(line: 4509, column: 3, scope: !9330)
!9339 = !DILocation(line: 4509, column: 7, scope: !9330)
!9340 = !DILocation(line: 4509, column: 18, scope: !9330)
!9341 = !DILocation(line: 4510, column: 2, scope: !9330)
!9342 = !DILocation(line: 4513, column: 2, scope: !9284)
!9343 = !DILocation(line: 4513, column: 6, scope: !9284)
!9344 = !DILocation(line: 4513, column: 19, scope: !9284)
!9345 = !DILocation(line: 4513, column: 24, scope: !9284)
!9346 = !DILocation(line: 4516, column: 2, scope: !9284)
!9347 = !DILocation(line: 4516, column: 6, scope: !9284)
!9348 = !DILocation(line: 4516, column: 19, scope: !9284)
!9349 = !DILocation(line: 4516, column: 24, scope: !9284)
!9350 = !DILocation(line: 4519, column: 6, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4519, column: 6)
!9352 = !DILocation(line: 4519, column: 10, scope: !9351)
!9353 = !DILocation(line: 4519, column: 23, scope: !9351)
!9354 = !DILocation(line: 4519, column: 28, scope: !9351)
!9355 = !DILocation(line: 4519, column: 6, scope: !9284)
!9356 = !DILocation(line: 4520, column: 3, scope: !9351)
!9357 = !DILocation(line: 4521, column: 22, scope: !9284)
!9358 = !DILocation(line: 4521, column: 26, scope: !9284)
!9359 = !DILocation(line: 4521, column: 2, scope: !9284)
!9360 = !DILocation(line: 4522, column: 22, scope: !9284)
!9361 = !DILocation(line: 4522, column: 26, scope: !9284)
!9362 = !DILocation(line: 4522, column: 2, scope: !9284)
!9363 = !DILocation(line: 4525, column: 21, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 4525, column: 6)
!9365 = !DILocation(line: 4525, column: 6, scope: !9364)
!9366 = !DILocation(line: 4525, column: 6, scope: !9284)
!9367 = !DILocation(line: 4526, column: 3, scope: !9364)
!9368 = !DILocation(line: 4528, column: 2, scope: !9284)
!9369 = !DILocation(line: 4529, column: 1, scope: !9284)
!9370 = distinct !DISubprogram(name: "get_mac_addr", scope: !3, file: !3, line: 6838, type: !9371, scopeLine: 6839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{null, !7512, !793, !32}
!9373 = !DILocalVariable(name: "hw_priv", arg: 1, scope: !9370, file: !3, line: 6838, type: !7512)
!9374 = !DILocation(line: 6838, column: 43, scope: !9370)
!9375 = !DILocalVariable(name: "macaddr", arg: 2, scope: !9370, file: !3, line: 6838, type: !793)
!9376 = !DILocation(line: 6838, column: 56, scope: !9370)
!9377 = !DILocalVariable(name: "port", arg: 3, scope: !9370, file: !3, line: 6838, type: !32)
!9378 = !DILocation(line: 6838, column: 69, scope: !9370)
!9379 = !DILocalVariable(name: "i", scope: !9370, file: !3, line: 6840, type: !32)
!9380 = !DILocation(line: 6840, column: 6, scope: !9370)
!9381 = !DILocalVariable(name: "j", scope: !9370, file: !3, line: 6841, type: !32)
!9382 = !DILocation(line: 6841, column: 6, scope: !9370)
!9383 = !DILocalVariable(name: "got_num", scope: !9370, file: !3, line: 6842, type: !32)
!9384 = !DILocation(line: 6842, column: 6, scope: !9370)
!9385 = !DILocalVariable(name: "num", scope: !9370, file: !3, line: 6843, type: !32)
!9386 = !DILocation(line: 6843, column: 6, scope: !9370)
!9387 = !DILocation(line: 6845, column: 24, scope: !9370)
!9388 = !DILocation(line: 6845, column: 14, scope: !9370)
!9389 = !DILocation(line: 6845, column: 8, scope: !9370)
!9390 = !DILocation(line: 6845, column: 4, scope: !9370)
!9391 = !DILocation(line: 6846, column: 2, scope: !9370)
!9392 = !DILocation(line: 6846, column: 9, scope: !9370)
!9393 = !DILocation(line: 6846, column: 11, scope: !9370)
!9394 = !DILocation(line: 6847, column: 7, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 6847, column: 7)
!9396 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 6846, column: 23)
!9397 = !DILocation(line: 6847, column: 15, scope: !9395)
!9398 = !DILocation(line: 6847, column: 7, scope: !9396)
!9399 = !DILocalVariable(name: "digit", scope: !9400, file: !3, line: 6848, type: !32)
!9400 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 6847, column: 19)
!9401 = !DILocation(line: 6848, column: 8, scope: !9400)
!9402 = !DILocation(line: 6850, column: 12, scope: !9400)
!9403 = !DILocation(line: 6851, column: 23, scope: !9400)
!9404 = !DILocation(line: 6851, column: 31, scope: !9400)
!9405 = !DILocation(line: 6851, column: 12, scope: !9400)
!9406 = !DILocation(line: 6851, column: 10, scope: !9400)
!9407 = !DILocation(line: 6852, column: 8, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 6852, column: 8)
!9409 = !DILocation(line: 6852, column: 14, scope: !9408)
!9410 = !DILocation(line: 6852, column: 8, scope: !9400)
!9411 = !DILocation(line: 6853, column: 11, scope: !9408)
!9412 = !DILocation(line: 6853, column: 15, scope: !9408)
!9413 = !DILocation(line: 6853, column: 22, scope: !9408)
!9414 = !DILocation(line: 6853, column: 20, scope: !9408)
!9415 = !DILocation(line: 6853, column: 9, scope: !9408)
!9416 = !DILocation(line: 6853, column: 5, scope: !9408)
!9417 = !DILocation(line: 6854, column: 20, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 6854, column: 13)
!9419 = !DILocation(line: 6854, column: 28, scope: !9418)
!9420 = !DILocation(line: 6854, column: 17, scope: !9418)
!9421 = !DILocation(line: 6854, column: 13, scope: !9408)
!9422 = !DILocation(line: 6855, column: 13, scope: !9418)
!9423 = !DILocation(line: 6855, column: 5, scope: !9418)
!9424 = !DILocation(line: 6857, column: 5, scope: !9418)
!9425 = !DILocation(line: 6858, column: 3, scope: !9400)
!9426 = !DILocation(line: 6858, column: 14, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 6858, column: 14)
!9428 = !DILocation(line: 6858, column: 14, scope: !9395)
!9429 = !DILocation(line: 6859, column: 12, scope: !9427)
!9430 = !DILocation(line: 6859, column: 4, scope: !9427)
!9431 = !DILocation(line: 6861, column: 4, scope: !9427)
!9432 = !DILocation(line: 6862, column: 12, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 6862, column: 7)
!9434 = !DILocation(line: 6862, column: 9, scope: !9433)
!9435 = !DILocation(line: 6862, column: 7, scope: !9396)
!9436 = !DILocation(line: 6863, column: 21, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 6863, column: 8)
!9438 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 6862, column: 21)
!9439 = !DILocation(line: 6863, column: 18, scope: !9437)
!9440 = !DILocation(line: 6863, column: 8, scope: !9438)
!9441 = !DILocation(line: 6864, column: 43, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 6863, column: 27)
!9443 = !DILocation(line: 6864, column: 38, scope: !9442)
!9444 = !DILocation(line: 6864, column: 5, scope: !9442)
!9445 = !DILocation(line: 6864, column: 14, scope: !9442)
!9446 = !DILocation(line: 6864, column: 17, scope: !9442)
!9447 = !DILocation(line: 6864, column: 32, scope: !9442)
!9448 = !DILocation(line: 6864, column: 36, scope: !9442)
!9449 = !DILocation(line: 6866, column: 6, scope: !9442)
!9450 = !DILocation(line: 6866, column: 15, scope: !9442)
!9451 = !DILocation(line: 6866, column: 18, scope: !9442)
!9452 = !DILocation(line: 6865, column: 5, scope: !9442)
!9453 = !DILocation(line: 6865, column: 14, scope: !9442)
!9454 = !DILocation(line: 6865, column: 17, scope: !9442)
!9455 = !DILocation(line: 6865, column: 34, scope: !9442)
!9456 = !DILocation(line: 6867, column: 4, scope: !9442)
!9457 = !DILocation(line: 6869, column: 11, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 6867, column: 11)
!9459 = !DILocation(line: 6869, column: 6, scope: !9458)
!9460 = !DILocation(line: 6868, column: 5, scope: !9458)
!9461 = !DILocation(line: 6868, column: 14, scope: !9458)
!9462 = !DILocation(line: 6868, column: 17, scope: !9458)
!9463 = !DILocation(line: 6868, column: 29, scope: !9458)
!9464 = !DILocation(line: 6868, column: 41, scope: !9458)
!9465 = !DILocation(line: 6868, column: 45, scope: !9458)
!9466 = !DILocation(line: 6871, column: 6, scope: !9458)
!9467 = !DILocation(line: 6871, column: 15, scope: !9458)
!9468 = !DILocation(line: 6871, column: 18, scope: !9458)
!9469 = !DILocation(line: 6870, column: 5, scope: !9458)
!9470 = !DILocation(line: 6870, column: 14, scope: !9458)
!9471 = !DILocation(line: 6870, column: 17, scope: !9458)
!9472 = !DILocation(line: 6870, column: 29, scope: !9458)
!9473 = !DILocation(line: 6870, column: 43, scope: !9458)
!9474 = !DILocation(line: 6873, column: 18, scope: !9438)
!9475 = !DILocation(line: 6873, column: 8, scope: !9438)
!9476 = !DILocation(line: 6874, column: 3, scope: !9438)
!9477 = !DILocation(line: 6875, column: 4, scope: !9396)
!9478 = distinct !{!9478, !9391, !9479}
!9479 = !DILocation(line: 6876, column: 2, scope: !9370)
!9480 = !DILocation(line: 6877, column: 18, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 6877, column: 6)
!9482 = !DILocation(line: 6877, column: 15, scope: !9481)
!9483 = !DILocation(line: 6877, column: 6, scope: !9370)
!9484 = !DILocation(line: 6878, column: 20, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 6878, column: 7)
!9486 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 6877, column: 21)
!9487 = !DILocation(line: 6878, column: 17, scope: !9485)
!9488 = !DILocation(line: 6878, column: 7, scope: !9486)
!9489 = !DILocation(line: 6879, column: 4, scope: !9485)
!9490 = !DILocation(line: 6879, column: 13, scope: !9485)
!9491 = !DILocation(line: 6879, column: 16, scope: !9485)
!9492 = !DILocation(line: 6879, column: 29, scope: !9485)
!9493 = !DILocation(line: 6880, column: 2, scope: !9486)
!9494 = !DILocation(line: 6881, column: 1, scope: !9370)
!9495 = distinct !DISubprogram(name: "hw_read_addr", scope: !3, file: !3, line: 4055, type: !8272, scopeLine: 4056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9496 = !DILocalVariable(name: "hw", arg: 1, scope: !9495, file: !3, line: 4055, type: !8002)
!9497 = !DILocation(line: 4055, column: 41, scope: !9495)
!9498 = !DILocalVariable(name: "i", scope: !9495, file: !3, line: 4057, type: !32)
!9499 = !DILocation(line: 4057, column: 6, scope: !9495)
!9500 = !DILocation(line: 4059, column: 9, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 4059, column: 2)
!9502 = !DILocation(line: 4059, column: 7, scope: !9501)
!9503 = !DILocation(line: 4059, column: 14, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 4059, column: 2)
!9505 = !DILocation(line: 4059, column: 16, scope: !9504)
!9506 = !DILocation(line: 4059, column: 2, scope: !9501)
!9507 = !DILocation(line: 4060, column: 44, scope: !9504)
!9508 = !DILocation(line: 4060, column: 48, scope: !9504)
!9509 = !DILocation(line: 4060, column: 51, scope: !9504)
!9510 = !DILocation(line: 4061, column: 27, scope: !9504)
!9511 = !DILocation(line: 4061, column: 25, scope: !9504)
!9512 = !DILocation(line: 4060, column: 38, scope: !9504)
!9513 = !DILocation(line: 4060, column: 3, scope: !9504)
!9514 = !DILocation(line: 4060, column: 7, scope: !9504)
!9515 = !DILocation(line: 4060, column: 17, scope: !9504)
!9516 = !DILocation(line: 4060, column: 36, scope: !9504)
!9517 = !DILocation(line: 4059, column: 29, scope: !9504)
!9518 = !DILocation(line: 4059, column: 2, scope: !9504)
!9519 = distinct !{!9519, !9506, !9520}
!9520 = !DILocation(line: 4061, column: 28, scope: !9501)
!9521 = !DILocation(line: 4063, column: 7, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 4063, column: 6)
!9523 = !DILocation(line: 4063, column: 11, scope: !9522)
!9524 = !DILocation(line: 4063, column: 6, scope: !9495)
!9525 = !DILocation(line: 4064, column: 10, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9522, file: !3, line: 4063, column: 25)
!9527 = !DILocation(line: 4064, column: 14, scope: !9526)
!9528 = !DILocation(line: 4064, column: 3, scope: !9526)
!9529 = !DILocation(line: 4064, column: 29, scope: !9526)
!9530 = !DILocation(line: 4064, column: 33, scope: !9526)
!9531 = !DILocation(line: 4065, column: 18, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9526, file: !3, line: 4065, column: 7)
!9533 = !DILocation(line: 4065, column: 22, scope: !9532)
!9534 = !DILocation(line: 4065, column: 7, scope: !9532)
!9535 = !DILocation(line: 4065, column: 7, scope: !9526)
!9536 = !DILocation(line: 4066, column: 11, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 4065, column: 38)
!9538 = !DILocation(line: 4066, column: 15, scope: !9537)
!9539 = !DILocation(line: 4066, column: 4, scope: !9537)
!9540 = !DILocation(line: 4067, column: 11, scope: !9537)
!9541 = !DILocation(line: 4067, column: 15, scope: !9537)
!9542 = !DILocation(line: 4067, column: 4, scope: !9537)
!9543 = !DILocation(line: 4069, column: 28, scope: !9537)
!9544 = !DILocation(line: 4069, column: 32, scope: !9537)
!9545 = !DILocation(line: 4069, column: 4, scope: !9537)
!9546 = !DILocation(line: 4069, column: 8, scope: !9537)
!9547 = !DILocation(line: 4069, column: 25, scope: !9537)
!9548 = !DILocation(line: 4070, column: 16, scope: !9537)
!9549 = !DILocation(line: 4070, column: 4, scope: !9537)
!9550 = !DILocation(line: 4071, column: 3, scope: !9537)
!9551 = !DILocation(line: 4072, column: 2, scope: !9526)
!9552 = !DILocation(line: 4073, column: 1, scope: !9495)
!9553 = distinct !DISubprogram(name: "read_other_addr", scope: !3, file: !3, line: 6885, type: !8272, scopeLine: 6886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9554 = !DILocalVariable(name: "hw", arg: 1, scope: !9553, file: !3, line: 6885, type: !8002)
!9555 = !DILocation(line: 6885, column: 44, scope: !9553)
!9556 = !DILocalVariable(name: "i", scope: !9553, file: !3, line: 6887, type: !32)
!9557 = !DILocation(line: 6887, column: 6, scope: !9553)
!9558 = !DILocalVariable(name: "data", scope: !9553, file: !3, line: 6888, type: !9559)
!9559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 48, elements: !1592)
!9560 = !DILocation(line: 6888, column: 6, scope: !9553)
!9561 = !DILocalVariable(name: "sw", scope: !9553, file: !3, line: 6889, type: !7794)
!9562 = !DILocation(line: 6889, column: 21, scope: !9553)
!9563 = !DILocation(line: 6889, column: 26, scope: !9553)
!9564 = !DILocation(line: 6889, column: 30, scope: !9553)
!9565 = !DILocation(line: 6891, column: 9, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 6891, column: 2)
!9567 = !DILocation(line: 6891, column: 7, scope: !9566)
!9568 = !DILocation(line: 6891, column: 14, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 6891, column: 2)
!9570 = !DILocation(line: 6891, column: 16, scope: !9569)
!9571 = !DILocation(line: 6891, column: 2, scope: !9566)
!9572 = !DILocation(line: 6892, column: 25, scope: !9569)
!9573 = !DILocation(line: 6892, column: 29, scope: !9569)
!9574 = !DILocation(line: 6892, column: 31, scope: !9569)
!9575 = !DILocation(line: 6892, column: 13, scope: !9569)
!9576 = !DILocation(line: 6892, column: 8, scope: !9569)
!9577 = !DILocation(line: 6892, column: 3, scope: !9569)
!9578 = !DILocation(line: 6892, column: 11, scope: !9569)
!9579 = !DILocation(line: 6891, column: 22, scope: !9569)
!9580 = !DILocation(line: 6891, column: 2, scope: !9569)
!9581 = distinct !{!9581, !9571, !9582}
!9582 = !DILocation(line: 6892, column: 59, scope: !9566)
!9583 = !DILocation(line: 6893, column: 7, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 6893, column: 6)
!9585 = !DILocation(line: 6893, column: 15, scope: !9584)
!9586 = !DILocation(line: 6893, column: 18, scope: !9584)
!9587 = !DILocation(line: 6893, column: 26, scope: !9584)
!9588 = !DILocation(line: 6893, column: 29, scope: !9584)
!9589 = !DILocation(line: 6893, column: 38, scope: !9584)
!9590 = !DILocation(line: 6893, column: 41, scope: !9584)
!9591 = !DILocation(line: 6893, column: 49, scope: !9584)
!9592 = !DILocation(line: 6893, column: 6, scope: !9553)
!9593 = !DILocation(line: 6894, column: 28, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 6893, column: 60)
!9595 = !DILocation(line: 6894, column: 23, scope: !9594)
!9596 = !DILocation(line: 6894, column: 3, scope: !9594)
!9597 = !DILocation(line: 6894, column: 7, scope: !9594)
!9598 = !DILocation(line: 6894, column: 21, scope: !9594)
!9599 = !DILocation(line: 6895, column: 28, scope: !9594)
!9600 = !DILocation(line: 6895, column: 36, scope: !9594)
!9601 = !DILocation(line: 6895, column: 23, scope: !9594)
!9602 = !DILocation(line: 6895, column: 3, scope: !9594)
!9603 = !DILocation(line: 6895, column: 7, scope: !9594)
!9604 = !DILocation(line: 6895, column: 21, scope: !9594)
!9605 = !DILocation(line: 6896, column: 28, scope: !9594)
!9606 = !DILocation(line: 6896, column: 23, scope: !9594)
!9607 = !DILocation(line: 6896, column: 3, scope: !9594)
!9608 = !DILocation(line: 6896, column: 7, scope: !9594)
!9609 = !DILocation(line: 6896, column: 21, scope: !9594)
!9610 = !DILocation(line: 6897, column: 28, scope: !9594)
!9611 = !DILocation(line: 6897, column: 36, scope: !9594)
!9612 = !DILocation(line: 6897, column: 23, scope: !9594)
!9613 = !DILocation(line: 6897, column: 3, scope: !9594)
!9614 = !DILocation(line: 6897, column: 7, scope: !9594)
!9615 = !DILocation(line: 6897, column: 21, scope: !9594)
!9616 = !DILocation(line: 6898, column: 28, scope: !9594)
!9617 = !DILocation(line: 6898, column: 23, scope: !9594)
!9618 = !DILocation(line: 6898, column: 3, scope: !9594)
!9619 = !DILocation(line: 6898, column: 7, scope: !9594)
!9620 = !DILocation(line: 6898, column: 21, scope: !9594)
!9621 = !DILocation(line: 6899, column: 28, scope: !9594)
!9622 = !DILocation(line: 6899, column: 36, scope: !9594)
!9623 = !DILocation(line: 6899, column: 23, scope: !9594)
!9624 = !DILocation(line: 6899, column: 3, scope: !9594)
!9625 = !DILocation(line: 6899, column: 7, scope: !9594)
!9626 = !DILocation(line: 6899, column: 21, scope: !9594)
!9627 = !DILocation(line: 6900, column: 2, scope: !9594)
!9628 = !DILocation(line: 6901, column: 1, scope: !9553)
!9629 = distinct !DISubprogram(name: "hw_setup", scope: !3, file: !3, line: 3761, type: !8272, scopeLine: 3762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9630 = !DILocalVariable(name: "hw", arg: 1, scope: !9629, file: !3, line: 3761, type: !8002)
!9631 = !DILocation(line: 3761, column: 37, scope: !9629)
!9632 = !DILocation(line: 3774, column: 2, scope: !9629)
!9633 = !DILocation(line: 3774, column: 6, scope: !9629)
!9634 = !DILocation(line: 3774, column: 13, scope: !9629)
!9635 = !DILocation(line: 3778, column: 2, scope: !9629)
!9636 = !DILocation(line: 3778, column: 6, scope: !9629)
!9637 = !DILocation(line: 3778, column: 13, scope: !9629)
!9638 = !DILocation(line: 3780, column: 2, scope: !9629)
!9639 = !DILocation(line: 3780, column: 6, scope: !9629)
!9640 = !DILocation(line: 3780, column: 13, scope: !9629)
!9641 = !DILocation(line: 3783, column: 2, scope: !9629)
!9642 = !DILocation(line: 3783, column: 6, scope: !9629)
!9643 = !DILocation(line: 3783, column: 13, scope: !9629)
!9644 = !DILocation(line: 3785, column: 6, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 3785, column: 6)
!9646 = !DILocation(line: 3785, column: 10, scope: !9645)
!9647 = !DILocation(line: 3785, column: 6, scope: !9629)
!9648 = !DILocation(line: 3786, column: 3, scope: !9645)
!9649 = !DILocation(line: 3786, column: 7, scope: !9645)
!9650 = !DILocation(line: 3786, column: 14, scope: !9645)
!9651 = !DILocation(line: 3787, column: 6, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 3787, column: 6)
!9653 = !DILocation(line: 3787, column: 10, scope: !9652)
!9654 = !DILocation(line: 3787, column: 6, scope: !9629)
!9655 = !DILocation(line: 3788, column: 3, scope: !9652)
!9656 = !DILocation(line: 3788, column: 7, scope: !9652)
!9657 = !DILocation(line: 3788, column: 14, scope: !9652)
!9658 = !DILocation(line: 3789, column: 1, scope: !9629)
!9659 = distinct !DISubprogram(name: "sw_setup", scope: !3, file: !3, line: 4272, type: !8272, scopeLine: 4273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9660 = !DILocalVariable(name: "hw", arg: 1, scope: !9659, file: !3, line: 4272, type: !8002)
!9661 = !DILocation(line: 4272, column: 37, scope: !9659)
!9662 = !DILocalVariable(name: "port", scope: !9659, file: !3, line: 4274, type: !32)
!9663 = !DILocation(line: 4274, column: 6, scope: !9659)
!9664 = !DILocation(line: 4276, column: 21, scope: !9659)
!9665 = !DILocation(line: 4276, column: 2, scope: !9659)
!9666 = !DILocation(line: 4279, column: 22, scope: !9659)
!9667 = !DILocation(line: 4279, column: 2, scope: !9659)
!9668 = !DILocation(line: 4280, column: 21, scope: !9659)
!9669 = !DILocation(line: 4280, column: 2, scope: !9659)
!9670 = !DILocation(line: 4281, column: 12, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 4281, column: 2)
!9672 = !DILocation(line: 4281, column: 7, scope: !9671)
!9673 = !DILocation(line: 4281, column: 17, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 4281, column: 2)
!9675 = !DILocation(line: 4281, column: 22, scope: !9674)
!9676 = !DILocation(line: 4281, column: 2, scope: !9671)
!9677 = !DILocation(line: 4282, column: 22, scope: !9674)
!9678 = !DILocation(line: 4282, column: 26, scope: !9674)
!9679 = !DILocation(line: 4282, column: 3, scope: !9674)
!9680 = !DILocation(line: 4281, column: 45, scope: !9674)
!9681 = !DILocation(line: 4281, column: 2, scope: !9674)
!9682 = distinct !{!9682, !9676, !9683}
!9683 = !DILocation(line: 4282, column: 30, scope: !9671)
!9684 = !DILocation(line: 4284, column: 15, scope: !9659)
!9685 = !DILocation(line: 4284, column: 2, scope: !9659)
!9686 = !DILocation(line: 4286, column: 17, scope: !9659)
!9687 = !DILocation(line: 4286, column: 2, scope: !9659)
!9688 = !DILocation(line: 4288, column: 20, scope: !9659)
!9689 = !DILocation(line: 4288, column: 2, scope: !9659)
!9690 = !DILocation(line: 4290, column: 15, scope: !9659)
!9691 = !DILocation(line: 4290, column: 2, scope: !9659)
!9692 = !DILocation(line: 4292, column: 6, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 4292, column: 6)
!9694 = !DILocation(line: 4292, column: 10, scope: !9693)
!9695 = !DILocation(line: 4292, column: 19, scope: !9693)
!9696 = !DILocation(line: 4292, column: 6, scope: !9659)
!9697 = !DILocation(line: 4293, column: 15, scope: !9693)
!9698 = !DILocation(line: 4293, column: 3, scope: !9693)
!9699 = !DILocation(line: 4294, column: 14, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 4294, column: 6)
!9701 = !DILocation(line: 4294, column: 7, scope: !9700)
!9702 = !DILocation(line: 4294, column: 6, scope: !9659)
!9703 = !DILocation(line: 4296, column: 3, scope: !9700)
!9704 = !DILocation(line: 4296, column: 7, scope: !9700)
!9705 = !DILocation(line: 4296, column: 17, scope: !9700)
!9706 = !DILocation(line: 4297, column: 12, scope: !9659)
!9707 = !DILocation(line: 4297, column: 2, scope: !9659)
!9708 = !DILocation(line: 4298, column: 1, scope: !9659)
!9709 = distinct !DISubprogram(name: "__init_work", scope: !2830, file: !2830, line: 215, type: !9710, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9710 = !DISubroutineType(types: !9711)
!9711 = !{null, !2839, !32}
!9712 = !DILocalVariable(name: "work", arg: 1, scope: !9709, file: !2830, line: 215, type: !2839)
!9713 = !DILocation(line: 215, column: 52, scope: !9709)
!9714 = !DILocalVariable(name: "onstack", arg: 2, scope: !9709, file: !2830, line: 215, type: !32)
!9715 = !DILocation(line: 215, column: 62, scope: !9709)
!9716 = !DILocation(line: 215, column: 73, scope: !9709)
!9717 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !9718, file: !9718, line: 33, type: !9719, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9718 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!9719 = !DISubroutineType(types: !9720)
!9720 = !{null, !287}
!9721 = !DILocalVariable(name: "list", arg: 1, scope: !9717, file: !9718, line: 33, type: !287)
!9722 = !DILocation(line: 33, column: 53, scope: !9717)
!9723 = !DILocation(line: 35, column: 2, scope: !9717)
!9724 = !DILocation(line: 35, column: 2, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9717, file: !9718, line: 35, column: 2)
!9726 = !DILocation(line: 35, column: 2, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9725, file: !9718, line: 35, column: 2)
!9728 = !DILocation(line: 35, column: 2, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !9718, line: 35, column: 2)
!9730 = !DILocation(line: 36, column: 15, scope: !9717)
!9731 = !DILocation(line: 36, column: 2, scope: !9717)
!9732 = !DILocation(line: 36, column: 8, scope: !9717)
!9733 = !DILocation(line: 36, column: 13, scope: !9717)
!9734 = !DILocation(line: 37, column: 1, scope: !9717)
!9735 = distinct !DISubprogram(name: "mib_read_work", scope: !3, file: !3, line: 6632, type: !2837, scopeLine: 6633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9736 = !DILocalVariable(name: "work", arg: 1, scope: !9735, file: !3, line: 6632, type: !2839)
!9737 = !DILocation(line: 6632, column: 47, scope: !9735)
!9738 = !DILocalVariable(name: "hw_priv", scope: !9735, file: !3, line: 6634, type: !7512)
!9739 = !DILocation(line: 6634, column: 19, scope: !9735)
!9740 = !DILocalVariable(name: "__mptr", scope: !9741, file: !3, line: 6635, type: !591)
!9741 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 6635, column: 3)
!9742 = !DILocation(line: 6635, column: 3, scope: !9741)
!9743 = !DILocation(line: 6635, column: 3, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 6635, column: 3)
!9745 = !DILocalVariable(name: "hw", scope: !9735, file: !3, line: 6636, type: !8002)
!9746 = !DILocation(line: 6636, column: 17, scope: !9735)
!9747 = !DILocation(line: 6636, column: 23, scope: !9735)
!9748 = !DILocation(line: 6636, column: 32, scope: !9735)
!9749 = !DILocalVariable(name: "mib", scope: !9735, file: !3, line: 6637, type: !9750)
!9750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7849, size: 64)
!9751 = !DILocation(line: 6637, column: 23, scope: !9735)
!9752 = !DILocalVariable(name: "i", scope: !9735, file: !3, line: 6638, type: !32)
!9753 = !DILocation(line: 6638, column: 6, scope: !9735)
!9754 = !DILocation(line: 6640, column: 17, scope: !9735)
!9755 = !DILocation(line: 6640, column: 15, scope: !9735)
!9756 = !DILocation(line: 6641, column: 9, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 6641, column: 2)
!9758 = !DILocation(line: 6641, column: 7, scope: !9757)
!9759 = !DILocation(line: 6641, column: 14, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 6641, column: 2)
!9761 = !DILocation(line: 6641, column: 18, scope: !9760)
!9762 = !DILocation(line: 6641, column: 22, scope: !9760)
!9763 = !DILocation(line: 6641, column: 16, scope: !9760)
!9764 = !DILocation(line: 6641, column: 2, scope: !9757)
!9765 = !DILocation(line: 6642, column: 10, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 6641, column: 41)
!9767 = !DILocation(line: 6642, column: 14, scope: !9766)
!9768 = !DILocation(line: 6642, column: 23, scope: !9766)
!9769 = !DILocation(line: 6642, column: 7, scope: !9766)
!9770 = !DILocation(line: 6645, column: 7, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 6645, column: 7)
!9772 = !DILocation(line: 6645, column: 12, scope: !9771)
!9773 = !DILocation(line: 6645, column: 20, scope: !9771)
!9774 = !DILocation(line: 6645, column: 28, scope: !9771)
!9775 = !DILocation(line: 6645, column: 37, scope: !9771)
!9776 = !DILocation(line: 6645, column: 45, scope: !9771)
!9777 = !DILocation(line: 6645, column: 48, scope: !9771)
!9778 = !DILocation(line: 6645, column: 25, scope: !9771)
!9779 = !DILocation(line: 6645, column: 7, scope: !9766)
!9780 = !DILocation(line: 6648, column: 19, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9782, file: !3, line: 6648, column: 8)
!9782 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 6645, column: 54)
!9783 = !DILocation(line: 6648, column: 23, scope: !9781)
!9784 = !DILocation(line: 6648, column: 8, scope: !9781)
!9785 = !DILocation(line: 6648, column: 8, scope: !9782)
!9786 = !DILocation(line: 6649, column: 5, scope: !9781)
!9787 = !DILocation(line: 6650, column: 4, scope: !9782)
!9788 = !DILocation(line: 6650, column: 13, scope: !9782)
!9789 = !DILocation(line: 6650, column: 21, scope: !9782)
!9790 = !DILocation(line: 6650, column: 24, scope: !9782)
!9791 = !DILocation(line: 6650, column: 29, scope: !9782)
!9792 = !DILocation(line: 6653, column: 13, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9782, file: !3, line: 6653, column: 8)
!9794 = !DILocation(line: 6653, column: 18, scope: !9793)
!9795 = !DILocation(line: 6653, column: 10, scope: !9793)
!9796 = !DILocation(line: 6653, column: 8, scope: !9782)
!9797 = !DILocation(line: 6654, column: 5, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9793, file: !3, line: 6653, column: 27)
!9799 = !DILocation(line: 6654, column: 14, scope: !9798)
!9800 = !DILocation(line: 6654, column: 22, scope: !9798)
!9801 = !DILocation(line: 6654, column: 25, scope: !9798)
!9802 = !DILocation(line: 6654, column: 30, scope: !9798)
!9803 = !DILocation(line: 6655, column: 5, scope: !9798)
!9804 = !DILocation(line: 6657, column: 4, scope: !9798)
!9805 = !DILocation(line: 6658, column: 3, scope: !9782)
!9806 = !DILocation(line: 6658, column: 14, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 6658, column: 14)
!9808 = !DILocation(line: 6658, column: 14, scope: !9771)
!9809 = !DILocation(line: 6660, column: 27, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 6660, column: 8)
!9811 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 6658, column: 64)
!9812 = !DILocation(line: 6660, column: 32, scope: !9810)
!9813 = !DILocation(line: 6660, column: 24, scope: !9810)
!9814 = !DILocation(line: 6660, column: 8, scope: !9811)
!9815 = !DILocation(line: 6661, column: 5, scope: !9810)
!9816 = !DILocation(line: 6661, column: 14, scope: !9810)
!9817 = !DILocation(line: 6661, column: 22, scope: !9810)
!9818 = !DILocation(line: 6661, column: 25, scope: !9810)
!9819 = !DILocation(line: 6661, column: 30, scope: !9810)
!9820 = !DILocation(line: 6662, column: 29, scope: !9811)
!9821 = !DILocation(line: 6662, column: 33, scope: !9811)
!9822 = !DILocation(line: 6662, column: 27, scope: !9811)
!9823 = !DILocation(line: 6662, column: 20, scope: !9811)
!9824 = !DILocation(line: 6662, column: 17, scope: !9811)
!9825 = !DILocation(line: 6663, column: 31, scope: !9811)
!9826 = !DILocation(line: 6663, column: 4, scope: !9811)
!9827 = !DILocation(line: 6663, column: 13, scope: !9811)
!9828 = !DILocation(line: 6663, column: 21, scope: !9811)
!9829 = !DILocation(line: 6663, column: 24, scope: !9811)
!9830 = !DILocation(line: 6663, column: 29, scope: !9811)
!9831 = !DILocation(line: 6666, column: 3, scope: !9811)
!9832 = !DILocation(line: 6666, column: 14, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 6666, column: 14)
!9834 = !DILocation(line: 6666, column: 19, scope: !9833)
!9835 = !DILocation(line: 6666, column: 14, scope: !9807)
!9836 = !DILocation(line: 6667, column: 4, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 6666, column: 30)
!9838 = !DILocation(line: 6667, column: 9, scope: !9837)
!9839 = !DILocation(line: 6667, column: 19, scope: !9837)
!9840 = !DILocation(line: 6670, column: 4, scope: !9837)
!9841 = !DILocation(line: 6670, column: 13, scope: !9837)
!9842 = !DILocation(line: 6670, column: 21, scope: !9837)
!9843 = !DILocation(line: 6670, column: 24, scope: !9837)
!9844 = !DILocation(line: 6670, column: 29, scope: !9837)
!9845 = !DILocation(line: 6671, column: 3, scope: !9837)
!9846 = !DILocation(line: 6672, column: 2, scope: !9766)
!9847 = !DILocation(line: 6641, column: 37, scope: !9760)
!9848 = !DILocation(line: 6641, column: 2, scope: !9760)
!9849 = distinct !{!9849, !9764, !9850}
!9850 = !DILocation(line: 6672, column: 2, scope: !9757)
!9851 = !DILocation(line: 6673, column: 1, scope: !9735)
!9852 = distinct !DISubprogram(name: "ksz_init_timer", scope: !3, file: !3, line: 4331, type: !9853, scopeLine: 4333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9853 = !DISubroutineType(types: !9854)
!9854 = !{null, !9855, !32, !3241}
!9855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7944, size: 64)
!9856 = !DILocalVariable(name: "info", arg: 1, scope: !9852, file: !3, line: 4331, type: !9855)
!9857 = !DILocation(line: 4331, column: 51, scope: !9852)
!9858 = !DILocalVariable(name: "period", arg: 2, scope: !9852, file: !3, line: 4331, type: !32)
!9859 = !DILocation(line: 4331, column: 61, scope: !9852)
!9860 = !DILocalVariable(name: "function", arg: 3, scope: !9852, file: !3, line: 4332, type: !3241)
!9861 = !DILocation(line: 4332, column: 9, scope: !9852)
!9862 = !DILocation(line: 4334, column: 2, scope: !9852)
!9863 = !DILocation(line: 4334, column: 8, scope: !9852)
!9864 = !DILocation(line: 4334, column: 12, scope: !9852)
!9865 = !DILocation(line: 4335, column: 17, scope: !9852)
!9866 = !DILocation(line: 4335, column: 2, scope: !9852)
!9867 = !DILocation(line: 4335, column: 8, scope: !9852)
!9868 = !DILocation(line: 4335, column: 15, scope: !9852)
!9869 = !DILocation(line: 4336, column: 2, scope: !9852)
!9870 = !DILocation(line: 4337, column: 1, scope: !9852)
!9871 = distinct !DISubprogram(name: "mib_monitor", scope: !3, file: !3, line: 6675, type: !3242, scopeLine: 6676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9872 = !DILocalVariable(name: "t", arg: 1, scope: !9871, file: !3, line: 6675, type: !3244)
!9873 = !DILocation(line: 6675, column: 44, scope: !9871)
!9874 = !DILocalVariable(name: "hw_priv", scope: !9871, file: !3, line: 6677, type: !7512)
!9875 = !DILocation(line: 6677, column: 19, scope: !9871)
!9876 = !DILocalVariable(name: "__mptr", scope: !9877, file: !3, line: 6677, type: !591)
!9877 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 6677, column: 29)
!9878 = !DILocation(line: 6677, column: 29, scope: !9877)
!9879 = !DILocation(line: 6677, column: 29, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 6677, column: 29)
!9881 = !DILocation(line: 6679, column: 17, scope: !9871)
!9882 = !DILocation(line: 6679, column: 26, scope: !9871)
!9883 = !DILocation(line: 6679, column: 2, scope: !9871)
!9884 = !DILocation(line: 6682, column: 6, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 6682, column: 6)
!9886 = !DILocation(line: 6682, column: 15, scope: !9885)
!9887 = !DILocation(line: 6682, column: 6, scope: !9871)
!9888 = !DILocation(line: 6683, column: 7, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 6683, column: 7)
!9890 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 6682, column: 25)
!9891 = !DILocation(line: 6683, column: 7, scope: !9890)
!9892 = !DILocation(line: 6684, column: 27, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 6683, column: 53)
!9894 = !DILocation(line: 6684, column: 36, scope: !9893)
!9895 = !DILocation(line: 6684, column: 4, scope: !9893)
!9896 = !DILocation(line: 6685, column: 4, scope: !9893)
!9897 = !DILocation(line: 6685, column: 13, scope: !9893)
!9898 = !DILocation(line: 6685, column: 22, scope: !9893)
!9899 = !DILocation(line: 6686, column: 3, scope: !9893)
!9900 = !DILocation(line: 6687, column: 2, scope: !9890)
!9901 = !DILocation(line: 6687, column: 36, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 6687, column: 13)
!9903 = !DILocation(line: 6687, column: 45, scope: !9902)
!9904 = !DILocation(line: 6687, column: 13, scope: !9902)
!9905 = !DILocation(line: 6687, column: 13, scope: !9885)
!9906 = !DILocation(line: 6690, column: 23, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 6687, column: 50)
!9908 = !DILocation(line: 6690, column: 31, scope: !9907)
!9909 = !DILocation(line: 6690, column: 3, scope: !9907)
!9910 = !DILocation(line: 6690, column: 12, scope: !9907)
!9911 = !DILocation(line: 6690, column: 21, scope: !9907)
!9912 = !DILocation(line: 6691, column: 2, scope: !9907)
!9913 = !DILocation(line: 6693, column: 20, scope: !9871)
!9914 = !DILocation(line: 6693, column: 29, scope: !9871)
!9915 = !DILocation(line: 6693, column: 2, scope: !9871)
!9916 = !DILocation(line: 6694, column: 1, scope: !9871)
!9917 = distinct !DISubprogram(name: "netdev_priv", scope: !31, file: !31, line: 2322, type: !9918, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9918 = !DISubroutineType(types: !9919)
!9919 = !{!591, !773}
!9920 = !DILocalVariable(name: "dev", arg: 1, scope: !9917, file: !31, line: 2322, type: !773)
!9921 = !DILocation(line: 2322, column: 58, scope: !9917)
!9922 = !DILocation(line: 2324, column: 17, scope: !9917)
!9923 = !DILocation(line: 2324, column: 9, scope: !9917)
!9924 = !DILocation(line: 2324, column: 21, scope: !9917)
!9925 = !DILocation(line: 2324, column: 2, scope: !9917)
!9926 = distinct !DISubprogram(name: "ether_addr_equal", scope: !9927, file: !9927, line: 326, type: !9928, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9927 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!9928 = !DISubroutineType(types: !9929)
!9929 = !{!771, !5861, !5861}
!9930 = !DILocalVariable(name: "addr1", arg: 1, scope: !9926, file: !9927, line: 326, type: !5861)
!9931 = !DILocation(line: 326, column: 47, scope: !9926)
!9932 = !DILocalVariable(name: "addr2", arg: 2, scope: !9926, file: !9927, line: 326, type: !5861)
!9933 = !DILocation(line: 326, column: 64, scope: !9926)
!9934 = !DILocalVariable(name: "fold", scope: !9926, file: !9927, line: 329, type: !987)
!9935 = !DILocation(line: 329, column: 6, scope: !9926)
!9936 = !DILocation(line: 329, column: 29, scope: !9926)
!9937 = !DILocation(line: 329, column: 15, scope: !9926)
!9938 = !DILocation(line: 329, column: 53, scope: !9926)
!9939 = !DILocation(line: 329, column: 39, scope: !9926)
!9940 = !DILocation(line: 329, column: 36, scope: !9926)
!9941 = !DILocation(line: 330, column: 23, scope: !9926)
!9942 = !DILocation(line: 330, column: 29, scope: !9926)
!9943 = !DILocation(line: 330, column: 8, scope: !9926)
!9944 = !DILocation(line: 330, column: 7, scope: !9926)
!9945 = !DILocation(line: 330, column: 53, scope: !9926)
!9946 = !DILocation(line: 330, column: 59, scope: !9926)
!9947 = !DILocation(line: 330, column: 38, scope: !9926)
!9948 = !DILocation(line: 330, column: 37, scope: !9926)
!9949 = !DILocation(line: 330, column: 35, scope: !9926)
!9950 = !DILocation(line: 329, column: 61, scope: !9926)
!9951 = !DILocation(line: 332, column: 9, scope: !9926)
!9952 = !DILocation(line: 332, column: 14, scope: !9926)
!9953 = !DILocation(line: 332, column: 2, scope: !9926)
!9954 = distinct !DISubprogram(name: "port_set_power_saving", scope: !3, file: !3, line: 3445, type: !9955, scopeLine: 3446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{null, !8386, !32}
!9957 = !DILocalVariable(name: "port", arg: 1, scope: !9954, file: !3, line: 3445, type: !8386)
!9958 = !DILocation(line: 3445, column: 52, scope: !9954)
!9959 = !DILocalVariable(name: "enable", arg: 2, scope: !9954, file: !3, line: 3445, type: !32)
!9960 = !DILocation(line: 3445, column: 62, scope: !9954)
!9961 = !DILocalVariable(name: "hw", scope: !9954, file: !3, line: 3447, type: !8002)
!9962 = !DILocation(line: 3447, column: 17, scope: !9954)
!9963 = !DILocation(line: 3447, column: 22, scope: !9954)
!9964 = !DILocation(line: 3447, column: 28, scope: !9954)
!9965 = !DILocalVariable(name: "i", scope: !9954, file: !3, line: 3448, type: !32)
!9966 = !DILocation(line: 3448, column: 6, scope: !9954)
!9967 = !DILocalVariable(name: "p", scope: !9954, file: !3, line: 3449, type: !32)
!9968 = !DILocation(line: 3449, column: 6, scope: !9954)
!9969 = !DILocation(line: 3451, column: 9, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 3451, column: 2)
!9971 = !DILocation(line: 3451, column: 18, scope: !9970)
!9972 = !DILocation(line: 3451, column: 24, scope: !9970)
!9973 = !DILocation(line: 3451, column: 16, scope: !9970)
!9974 = !DILocation(line: 3451, column: 7, scope: !9970)
!9975 = !DILocation(line: 3451, column: 36, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 3451, column: 2)
!9977 = !DILocation(line: 3451, column: 40, scope: !9976)
!9978 = !DILocation(line: 3451, column: 46, scope: !9976)
!9979 = !DILocation(line: 3451, column: 38, scope: !9976)
!9980 = !DILocation(line: 3451, column: 2, scope: !9970)
!9981 = !DILocation(line: 3452, column: 12, scope: !9976)
!9982 = !DILocation(line: 3452, column: 16, scope: !9976)
!9983 = !DILocation(line: 3453, column: 48, scope: !9976)
!9984 = !DILocation(line: 3452, column: 3, scope: !9976)
!9985 = !DILocation(line: 3451, column: 57, scope: !9976)
!9986 = !DILocation(line: 3451, column: 62, scope: !9976)
!9987 = !DILocation(line: 3451, column: 2, scope: !9976)
!9988 = distinct !{!9988, !9980, !9989}
!9989 = !DILocation(line: 3453, column: 54, scope: !9970)
!9990 = !DILocation(line: 3454, column: 1, scope: !9954)
!9991 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !7519, file: !7519, line: 1870, type: !9992, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{null, !7517, !591}
!9994 = !DILocalVariable(name: "pdev", arg: 1, scope: !9991, file: !7519, line: 1870, type: !7517)
!9995 = !DILocation(line: 1870, column: 52, scope: !9991)
!9996 = !DILocalVariable(name: "data", arg: 2, scope: !9991, file: !7519, line: 1870, type: !591)
!9997 = !DILocation(line: 1870, column: 64, scope: !9991)
!9998 = !DILocation(line: 1872, column: 19, scope: !9991)
!9999 = !DILocation(line: 1872, column: 25, scope: !9991)
!10000 = !DILocation(line: 1872, column: 30, scope: !9991)
!10001 = !DILocation(line: 1872, column: 2, scope: !9991)
!10002 = !DILocation(line: 1873, column: 1, scope: !9991)
!10003 = distinct !DISubprogram(name: "netdev_free", scope: !3, file: !3, line: 6823, type: !406, scopeLine: 6824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10004 = !DILocalVariable(name: "dev", arg: 1, scope: !10003, file: !3, line: 6823, type: !290)
!10005 = !DILocation(line: 6823, column: 44, scope: !10003)
!10006 = !DILocation(line: 6825, column: 6, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 6825, column: 6)
!10008 = !DILocation(line: 6825, column: 11, scope: !10007)
!10009 = !DILocation(line: 6825, column: 6, scope: !10003)
!10010 = !DILocation(line: 6826, column: 21, scope: !10007)
!10011 = !DILocation(line: 6826, column: 3, scope: !10007)
!10012 = !DILocation(line: 6828, column: 14, scope: !10003)
!10013 = !DILocation(line: 6828, column: 2, scope: !10003)
!10014 = !DILocation(line: 6829, column: 1, scope: !10003)
!10015 = distinct !DISubprogram(name: "ksz_free_mem", scope: !3, file: !3, line: 4594, type: !10016, scopeLine: 4595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10016 = !DISubroutineType(types: !10017)
!10017 = !{null, !7512}
!10018 = !DILocalVariable(name: "adapter", arg: 1, scope: !10015, file: !3, line: 4594, type: !7512)
!10019 = !DILocation(line: 4594, column: 43, scope: !10015)
!10020 = !DILocation(line: 4597, column: 19, scope: !10015)
!10021 = !DILocation(line: 4597, column: 29, scope: !10015)
!10022 = !DILocation(line: 4597, column: 38, scope: !10015)
!10023 = !DILocation(line: 4597, column: 41, scope: !10015)
!10024 = !DILocation(line: 4597, column: 2, scope: !10015)
!10025 = !DILocation(line: 4600, column: 19, scope: !10015)
!10026 = !DILocation(line: 4600, column: 29, scope: !10015)
!10027 = !DILocation(line: 4600, column: 38, scope: !10015)
!10028 = !DILocation(line: 4600, column: 41, scope: !10015)
!10029 = !DILocation(line: 4600, column: 2, scope: !10015)
!10030 = !DILocation(line: 4603, column: 16, scope: !10015)
!10031 = !DILocation(line: 4603, column: 2, scope: !10015)
!10032 = !DILocation(line: 4604, column: 1, scope: !10015)
!10033 = distinct !DISubprogram(name: "get_order", scope: !10034, file: !10034, line: 29, type: !10035, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10034 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10035 = !DISubroutineType(types: !10036)
!10036 = !{!32, !312}
!10037 = !DILocalVariable(name: "x", arg: 1, scope: !10038, file: !10039, line: 366, type: !333)
!10038 = distinct !DISubprogram(name: "fls64", scope: !10039, file: !10039, line: 366, type: !10040, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10039 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10040 = !DISubroutineType(types: !10041)
!10041 = !{!32, !333}
!10042 = !DILocation(line: 366, column: 40, scope: !10038, inlinedAt: !10043)
!10043 = distinct !DILocation(line: 46, column: 9, scope: !10033)
!10044 = !DILocalVariable(name: "bitpos", scope: !10038, file: !10039, line: 368, type: !32)
!10045 = !DILocation(line: 368, column: 6, scope: !10038, inlinedAt: !10043)
!10046 = !DILocalVariable(name: "size", arg: 1, scope: !10033, file: !10034, line: 29, type: !312)
!10047 = !DILocation(line: 29, column: 63, scope: !10033)
!10048 = !DILocation(line: 31, column: 27, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10033, file: !10034, line: 31, column: 6)
!10050 = !DILocation(line: 31, column: 6, scope: !10049)
!10051 = !DILocation(line: 31, column: 6, scope: !10033)
!10052 = !DILocation(line: 32, column: 8, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !10034, line: 32, column: 7)
!10054 = distinct !DILexicalBlock(scope: !10049, file: !10034, line: 31, column: 34)
!10055 = !DILocation(line: 32, column: 7, scope: !10054)
!10056 = !DILocation(line: 33, column: 4, scope: !10053)
!10057 = !DILocation(line: 35, column: 7, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !10034, line: 35, column: 7)
!10059 = !DILocation(line: 35, column: 12, scope: !10058)
!10060 = !DILocation(line: 35, column: 7, scope: !10054)
!10061 = !DILocation(line: 36, column: 4, scope: !10058)
!10062 = !DILocation(line: 38, column: 10, scope: !10054)
!10063 = !DILocation(line: 38, column: 28, scope: !10054)
!10064 = !DILocation(line: 38, column: 41, scope: !10054)
!10065 = !DILocation(line: 38, column: 3, scope: !10054)
!10066 = !DILocation(line: 41, column: 6, scope: !10033)
!10067 = !DILocation(line: 42, column: 7, scope: !10033)
!10068 = !DILocation(line: 46, column: 15, scope: !10033)
!10069 = !DILocation(line: 374, column: 2, scope: !10038, inlinedAt: !10043)
!10070 = !DILocation(line: 376, column: 14, scope: !10038, inlinedAt: !10043)
!10071 = !{i32 457116}
!10072 = !DILocation(line: 377, column: 9, scope: !10038, inlinedAt: !10043)
!10073 = !DILocation(line: 377, column: 16, scope: !10038, inlinedAt: !10043)
!10074 = !DILocation(line: 46, column: 2, scope: !10033)
!10075 = !DILocation(line: 48, column: 1, scope: !10033)
!10076 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10077, file: !10077, line: 30, type: !10078, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10077 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10078 = !DISubroutineType(types: !10079)
!10079 = !{!32, !331}
!10080 = !DILocation(line: 366, column: 40, scope: !10038, inlinedAt: !10081)
!10081 = distinct !DILocation(line: 32, column: 9, scope: !10076)
!10082 = !DILocation(line: 368, column: 6, scope: !10038, inlinedAt: !10081)
!10083 = !DILocalVariable(name: "n", arg: 1, scope: !10076, file: !10077, line: 30, type: !331)
!10084 = !DILocation(line: 30, column: 21, scope: !10076)
!10085 = !DILocation(line: 32, column: 15, scope: !10076)
!10086 = !DILocation(line: 374, column: 2, scope: !10038, inlinedAt: !10081)
!10087 = !DILocation(line: 376, column: 14, scope: !10038, inlinedAt: !10081)
!10088 = !DILocation(line: 377, column: 9, scope: !10038, inlinedAt: !10081)
!10089 = !DILocation(line: 377, column: 16, scope: !10038, inlinedAt: !10081)
!10090 = !DILocation(line: 32, column: 18, scope: !10076)
!10091 = !DILocation(line: 32, column: 2, scope: !10076)
!10092 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10093, file: !10093, line: 137, type: !10094, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10093 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10094 = !DISubroutineType(types: !10095)
!10095 = !{!591, !2051, !3258, !1039, !1742}
!10096 = !DILocalVariable(name: "s", arg: 1, scope: !10092, file: !10093, line: 137, type: !2051)
!10097 = !DILocation(line: 137, column: 54, scope: !10092)
!10098 = !DILocalVariable(name: "object", arg: 2, scope: !10092, file: !10093, line: 137, type: !3258)
!10099 = !DILocation(line: 137, column: 69, scope: !10092)
!10100 = !DILocalVariable(name: "size", arg: 3, scope: !10092, file: !10093, line: 138, type: !1039)
!10101 = !DILocation(line: 138, column: 12, scope: !10092)
!10102 = !DILocalVariable(name: "flags", arg: 4, scope: !10092, file: !10093, line: 138, type: !1742)
!10103 = !DILocation(line: 138, column: 24, scope: !10092)
!10104 = !DILocation(line: 140, column: 17, scope: !10092)
!10105 = !DILocation(line: 140, column: 2, scope: !10092)
!10106 = distinct !DISubprogram(name: "writew", scope: !10107, file: !10107, line: 66, type: !10108, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10107 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!10108 = !DISubroutineType(types: !10109)
!10109 = !{null, !476, !10110}
!10110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10111, size: 64)
!10111 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10112 = !DILocalVariable(name: "val", arg: 1, scope: !10106, file: !10107, line: 66, type: !476)
!10113 = !DILocation(line: 66, column: 1, scope: !10106)
!10114 = !DILocalVariable(name: "addr", arg: 2, scope: !10106, file: !10107, line: 66, type: !10110)
!10115 = !{i32 -2143251220}
!10116 = distinct !DISubprogram(name: "readw", scope: !10107, file: !10107, line: 58, type: !10117, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{!476, !10119}
!10119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10120, size: 64)
!10120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10111)
!10121 = !DILocalVariable(name: "addr", arg: 1, scope: !10116, file: !10107, line: 58, type: !10119)
!10122 = !DILocation(line: 58, column: 1, scope: !10116)
!10123 = !DILocalVariable(name: "ret", scope: !10116, file: !10107, line: 58, type: !476)
!10124 = !{i32 -2143253644}
!10125 = distinct !DISubprogram(name: "ksz_check_desc_num", scope: !3, file: !3, line: 3802, type: !10126, scopeLine: 3803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10126 = !DISubroutineType(types: !10127)
!10127 = !{null, !10128}
!10128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7872, size: 64)
!10129 = !DILocalVariable(name: "info", arg: 1, scope: !10125, file: !3, line: 3802, type: !10128)
!10130 = !DILocation(line: 3802, column: 54, scope: !10125)
!10131 = !DILocalVariable(name: "alloc", scope: !10125, file: !3, line: 3806, type: !32)
!10132 = !DILocation(line: 3806, column: 6, scope: !10125)
!10133 = !DILocation(line: 3806, column: 14, scope: !10125)
!10134 = !DILocation(line: 3806, column: 20, scope: !10125)
!10135 = !DILocalVariable(name: "shift", scope: !10125, file: !3, line: 3807, type: !32)
!10136 = !DILocation(line: 3807, column: 6, scope: !10125)
!10137 = !DILocation(line: 3809, column: 8, scope: !10125)
!10138 = !DILocation(line: 3810, column: 2, scope: !10125)
!10139 = !DILocation(line: 3810, column: 11, scope: !10125)
!10140 = !DILocation(line: 3810, column: 17, scope: !10125)
!10141 = !DILocation(line: 3810, column: 9, scope: !10125)
!10142 = !DILocation(line: 3811, column: 8, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 3810, column: 23)
!10144 = !DILocation(line: 3812, column: 9, scope: !10143)
!10145 = distinct !{!10145, !10138, !10146}
!10146 = !DILocation(line: 3813, column: 2, scope: !10125)
!10147 = !DILocation(line: 3814, column: 6, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 3814, column: 6)
!10149 = !DILocation(line: 3814, column: 12, scope: !10148)
!10150 = !DILocation(line: 3814, column: 17, scope: !10148)
!10151 = !DILocation(line: 3814, column: 20, scope: !10148)
!10152 = !DILocation(line: 3814, column: 26, scope: !10148)
!10153 = !DILocation(line: 3814, column: 6, scope: !10125)
!10154 = !DILocation(line: 3815, column: 3, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 3814, column: 44)
!10156 = !DILocation(line: 3816, column: 3, scope: !10155)
!10157 = !DILocation(line: 3816, column: 10, scope: !10155)
!10158 = !DILocation(line: 3817, column: 9, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 3816, column: 17)
!10160 = !DILocation(line: 3818, column: 10, scope: !10159)
!10161 = distinct !{!10161, !10156, !10162}
!10162 = !DILocation(line: 3819, column: 3, scope: !10155)
!10163 = !DILocation(line: 3820, column: 7, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 3820, column: 7)
!10165 = !DILocation(line: 3820, column: 13, scope: !10164)
!10166 = !DILocation(line: 3820, column: 7, scope: !10155)
!10167 = !DILocation(line: 3821, column: 10, scope: !10164)
!10168 = !DILocation(line: 3821, column: 4, scope: !10164)
!10169 = !DILocation(line: 3822, column: 16, scope: !10155)
!10170 = !DILocation(line: 3822, column: 13, scope: !10155)
!10171 = !DILocation(line: 3822, column: 9, scope: !10155)
!10172 = !DILocation(line: 3823, column: 17, scope: !10155)
!10173 = !DILocation(line: 3823, column: 3, scope: !10155)
!10174 = !DILocation(line: 3823, column: 9, scope: !10155)
!10175 = !DILocation(line: 3823, column: 15, scope: !10155)
!10176 = !DILocation(line: 3824, column: 2, scope: !10155)
!10177 = !DILocation(line: 3825, column: 15, scope: !10125)
!10178 = !DILocation(line: 3825, column: 21, scope: !10125)
!10179 = !DILocation(line: 3825, column: 27, scope: !10125)
!10180 = !DILocation(line: 3825, column: 2, scope: !10125)
!10181 = !DILocation(line: 3825, column: 8, scope: !10125)
!10182 = !DILocation(line: 3825, column: 13, scope: !10125)
!10183 = !DILocation(line: 3826, column: 1, scope: !10125)
!10184 = distinct !DISubprogram(name: "ksz_alloc_desc", scope: !3, file: !3, line: 4383, type: !7937, scopeLine: 4384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10185 = !DILocalVariable(name: "adapter", arg: 1, scope: !10184, file: !3, line: 4383, type: !7512)
!10186 = !DILocation(line: 4383, column: 44, scope: !10184)
!10187 = !DILocalVariable(name: "hw", scope: !10184, file: !3, line: 4385, type: !8002)
!10188 = !DILocation(line: 4385, column: 17, scope: !10184)
!10189 = !DILocation(line: 4385, column: 23, scope: !10184)
!10190 = !DILocation(line: 4385, column: 32, scope: !10184)
!10191 = !DILocalVariable(name: "offset", scope: !10184, file: !3, line: 4386, type: !32)
!10192 = !DILocation(line: 4386, column: 6, scope: !10184)
!10193 = !DILocation(line: 4390, column: 3, scope: !10184)
!10194 = !DILocation(line: 4390, column: 7, scope: !10184)
!10195 = !DILocation(line: 4390, column: 20, scope: !10184)
!10196 = !DILocation(line: 4390, column: 27, scope: !10184)
!10197 = !DILocation(line: 4390, column: 31, scope: !10184)
!10198 = !DILocation(line: 4390, column: 44, scope: !10184)
!10199 = !DILocation(line: 4390, column: 25, scope: !10184)
!10200 = !DILocation(line: 4391, column: 3, scope: !10184)
!10201 = !DILocation(line: 4391, column: 7, scope: !10184)
!10202 = !DILocation(line: 4391, column: 20, scope: !10184)
!10203 = !DILocation(line: 4391, column: 27, scope: !10184)
!10204 = !DILocation(line: 4391, column: 31, scope: !10184)
!10205 = !DILocation(line: 4391, column: 44, scope: !10184)
!10206 = !DILocation(line: 4391, column: 25, scope: !10184)
!10207 = !DILocation(line: 4390, column: 50, scope: !10184)
!10208 = !DILocation(line: 4391, column: 50, scope: !10184)
!10209 = !DILocation(line: 4389, column: 2, scope: !10184)
!10210 = !DILocation(line: 4389, column: 11, scope: !10184)
!10211 = !DILocation(line: 4389, column: 21, scope: !10184)
!10212 = !DILocation(line: 4389, column: 32, scope: !10184)
!10213 = !DILocation(line: 4395, column: 23, scope: !10184)
!10214 = !DILocation(line: 4395, column: 32, scope: !10184)
!10215 = !DILocation(line: 4395, column: 38, scope: !10184)
!10216 = !DILocation(line: 4396, column: 8, scope: !10184)
!10217 = !DILocation(line: 4396, column: 17, scope: !10184)
!10218 = !DILocation(line: 4396, column: 27, scope: !10184)
!10219 = !DILocation(line: 4397, column: 9, scope: !10184)
!10220 = !DILocation(line: 4397, column: 18, scope: !10184)
!10221 = !DILocation(line: 4397, column: 28, scope: !10184)
!10222 = !DILocation(line: 4395, column: 3, scope: !10184)
!10223 = !DILocation(line: 4394, column: 2, scope: !10184)
!10224 = !DILocation(line: 4394, column: 11, scope: !10184)
!10225 = !DILocation(line: 4394, column: 21, scope: !10184)
!10226 = !DILocation(line: 4394, column: 32, scope: !10184)
!10227 = !DILocation(line: 4398, column: 6, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 4398, column: 6)
!10229 = !DILocation(line: 4398, column: 15, scope: !10228)
!10230 = !DILocation(line: 4398, column: 25, scope: !10228)
!10231 = !DILocation(line: 4398, column: 36, scope: !10228)
!10232 = !DILocation(line: 4398, column: 6, scope: !10184)
!10233 = !DILocation(line: 4399, column: 3, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 4398, column: 45)
!10235 = !DILocation(line: 4399, column: 12, scope: !10234)
!10236 = !DILocation(line: 4399, column: 22, scope: !10234)
!10237 = !DILocation(line: 4399, column: 33, scope: !10234)
!10238 = !DILocation(line: 4400, column: 3, scope: !10234)
!10239 = !DILocation(line: 4404, column: 21, scope: !10184)
!10240 = !DILocation(line: 4404, column: 30, scope: !10184)
!10241 = !DILocation(line: 4404, column: 40, scope: !10184)
!10242 = !DILocation(line: 4404, column: 13, scope: !10184)
!10243 = !DILocation(line: 4404, column: 51, scope: !10184)
!10244 = !DILocation(line: 4404, column: 12, scope: !10184)
!10245 = !DILocation(line: 4406, column: 12, scope: !10184)
!10246 = !DILocation(line: 4406, column: 21, scope: !10184)
!10247 = !DILocation(line: 4406, column: 31, scope: !10184)
!10248 = !DILocation(line: 4406, column: 4, scope: !10184)
!10249 = !DILocation(line: 4406, column: 42, scope: !10184)
!10250 = !DILocation(line: 4405, column: 19, scope: !10184)
!10251 = !DILocation(line: 4404, column: 11, scope: !10184)
!10252 = !DILocation(line: 4404, column: 9, scope: !10184)
!10253 = !DILocation(line: 4407, column: 28, scope: !10184)
!10254 = !DILocation(line: 4407, column: 37, scope: !10184)
!10255 = !DILocation(line: 4407, column: 47, scope: !10184)
!10256 = !DILocation(line: 4407, column: 60, scope: !10184)
!10257 = !DILocation(line: 4407, column: 58, scope: !10184)
!10258 = !DILocation(line: 4407, column: 2, scope: !10184)
!10259 = !DILocation(line: 4407, column: 11, scope: !10184)
!10260 = !DILocation(line: 4407, column: 21, scope: !10184)
!10261 = !DILocation(line: 4407, column: 26, scope: !10184)
!10262 = !DILocation(line: 4408, column: 28, scope: !10184)
!10263 = !DILocation(line: 4408, column: 37, scope: !10184)
!10264 = !DILocation(line: 4408, column: 47, scope: !10184)
!10265 = !DILocation(line: 4408, column: 58, scope: !10184)
!10266 = !DILocation(line: 4408, column: 56, scope: !10184)
!10267 = !DILocation(line: 4408, column: 2, scope: !10184)
!10268 = !DILocation(line: 4408, column: 11, scope: !10184)
!10269 = !DILocation(line: 4408, column: 21, scope: !10184)
!10270 = !DILocation(line: 4408, column: 26, scope: !10184)
!10271 = !DILocation(line: 4412, column: 3, scope: !10184)
!10272 = !DILocation(line: 4412, column: 12, scope: !10184)
!10273 = !DILocation(line: 4412, column: 22, scope: !10184)
!10274 = !DILocation(line: 4411, column: 31, scope: !10184)
!10275 = !DILocation(line: 4411, column: 2, scope: !10184)
!10276 = !DILocation(line: 4411, column: 6, scope: !10184)
!10277 = !DILocation(line: 4411, column: 19, scope: !10184)
!10278 = !DILocation(line: 4411, column: 29, scope: !10184)
!10279 = !DILocation(line: 4413, column: 31, scope: !10184)
!10280 = !DILocation(line: 4413, column: 40, scope: !10184)
!10281 = !DILocation(line: 4413, column: 50, scope: !10184)
!10282 = !DILocation(line: 4413, column: 2, scope: !10184)
!10283 = !DILocation(line: 4413, column: 6, scope: !10184)
!10284 = !DILocation(line: 4413, column: 19, scope: !10184)
!10285 = !DILocation(line: 4413, column: 29, scope: !10184)
!10286 = !DILocation(line: 4414, column: 11, scope: !10184)
!10287 = !DILocation(line: 4414, column: 15, scope: !10184)
!10288 = !DILocation(line: 4414, column: 28, scope: !10184)
!10289 = !DILocation(line: 4414, column: 36, scope: !10184)
!10290 = !DILocation(line: 4414, column: 40, scope: !10184)
!10291 = !DILocation(line: 4414, column: 53, scope: !10184)
!10292 = !DILocation(line: 4414, column: 34, scope: !10184)
!10293 = !DILocation(line: 4414, column: 9, scope: !10184)
!10294 = !DILocation(line: 4416, column: 4, scope: !10184)
!10295 = !DILocation(line: 4416, column: 13, scope: !10184)
!10296 = !DILocation(line: 4416, column: 23, scope: !10184)
!10297 = !DILocation(line: 4416, column: 30, scope: !10184)
!10298 = !DILocation(line: 4416, column: 28, scope: !10184)
!10299 = !DILocation(line: 4415, column: 31, scope: !10184)
!10300 = !DILocation(line: 4415, column: 2, scope: !10184)
!10301 = !DILocation(line: 4415, column: 6, scope: !10184)
!10302 = !DILocation(line: 4415, column: 19, scope: !10184)
!10303 = !DILocation(line: 4415, column: 29, scope: !10184)
!10304 = !DILocation(line: 4417, column: 31, scope: !10184)
!10305 = !DILocation(line: 4417, column: 40, scope: !10184)
!10306 = !DILocation(line: 4417, column: 50, scope: !10184)
!10307 = !DILocation(line: 4417, column: 57, scope: !10184)
!10308 = !DILocation(line: 4417, column: 55, scope: !10184)
!10309 = !DILocation(line: 4417, column: 2, scope: !10184)
!10310 = !DILocation(line: 4417, column: 6, scope: !10184)
!10311 = !DILocation(line: 4417, column: 19, scope: !10184)
!10312 = !DILocation(line: 4417, column: 29, scope: !10184)
!10313 = !DILocation(line: 4419, column: 27, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 4419, column: 6)
!10315 = !DILocation(line: 4419, column: 31, scope: !10314)
!10316 = !DILocation(line: 4419, column: 6, scope: !10314)
!10317 = !DILocation(line: 4419, column: 6, scope: !10184)
!10318 = !DILocation(line: 4420, column: 3, scope: !10314)
!10319 = !DILocation(line: 4421, column: 27, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 4421, column: 6)
!10321 = !DILocation(line: 4421, column: 31, scope: !10320)
!10322 = !DILocation(line: 4421, column: 6, scope: !10320)
!10323 = !DILocation(line: 4421, column: 6, scope: !10184)
!10324 = !DILocation(line: 4422, column: 3, scope: !10320)
!10325 = !DILocation(line: 4424, column: 2, scope: !10184)
!10326 = !DILocation(line: 4425, column: 1, scope: !10184)
!10327 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !8266, file: !8266, line: 392, type: !10328, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10328 = !DISubroutineType(types: !10329)
!10329 = !{!591, !6546, !1039, !10330, !1742}
!10330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!10331 = !DILocalVariable(name: "dev", arg: 1, scope: !10327, file: !8266, line: 392, type: !6546)
!10332 = !DILocation(line: 392, column: 55, scope: !10327)
!10333 = !DILocalVariable(name: "size", arg: 2, scope: !10327, file: !8266, line: 392, type: !1039)
!10334 = !DILocation(line: 392, column: 67, scope: !10327)
!10335 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !10327, file: !8266, line: 393, type: !10330)
!10336 = !DILocation(line: 393, column: 15, scope: !10327)
!10337 = !DILocalVariable(name: "gfp", arg: 4, scope: !10327, file: !8266, line: 393, type: !1742)
!10338 = !DILocation(line: 393, column: 33, scope: !10327)
!10339 = !DILocation(line: 396, column: 25, scope: !10327)
!10340 = !DILocation(line: 396, column: 30, scope: !10327)
!10341 = !DILocation(line: 396, column: 36, scope: !10327)
!10342 = !DILocation(line: 396, column: 48, scope: !10327)
!10343 = !DILocation(line: 397, column: 5, scope: !10327)
!10344 = !DILocation(line: 397, column: 9, scope: !10327)
!10345 = !DILocation(line: 397, column: 4, scope: !10327)
!10346 = !DILocation(line: 396, column: 9, scope: !10327)
!10347 = !DILocation(line: 396, column: 2, scope: !10327)
!10348 = distinct !DISubprogram(name: "ksz_alloc_soft_desc", scope: !3, file: !3, line: 4364, type: !10349, scopeLine: 4365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10349 = !DISubroutineType(types: !10350)
!10350 = !{!32, !10128, !32}
!10351 = !DILocalVariable(name: "desc_info", arg: 1, scope: !10348, file: !3, line: 4364, type: !10128)
!10352 = !DILocation(line: 4364, column: 54, scope: !10348)
!10353 = !DILocalVariable(name: "transmit", arg: 2, scope: !10348, file: !3, line: 4364, type: !32)
!10354 = !DILocation(line: 4364, column: 69, scope: !10348)
!10355 = !DILocation(line: 4366, column: 28, scope: !10348)
!10356 = !DILocation(line: 4366, column: 39, scope: !10348)
!10357 = !DILocation(line: 4366, column: 20, scope: !10348)
!10358 = !DILocation(line: 4366, column: 2, scope: !10348)
!10359 = !DILocation(line: 4366, column: 13, scope: !10348)
!10360 = !DILocation(line: 4366, column: 18, scope: !10348)
!10361 = !DILocation(line: 4368, column: 7, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 4368, column: 6)
!10363 = !DILocation(line: 4368, column: 18, scope: !10362)
!10364 = !DILocation(line: 4368, column: 6, scope: !10348)
!10365 = !DILocation(line: 4369, column: 3, scope: !10362)
!10366 = !DILocation(line: 4370, column: 15, scope: !10348)
!10367 = !DILocation(line: 4370, column: 26, scope: !10348)
!10368 = !DILocation(line: 4370, column: 2, scope: !10348)
!10369 = !DILocation(line: 4371, column: 2, scope: !10348)
!10370 = !DILocation(line: 4372, column: 1, scope: !10348)
!10371 = distinct !DISubprogram(name: "kcalloc", scope: !7118, file: !7118, line: 601, type: !10372, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{!591, !1039, !1039, !1742}
!10374 = !DILocalVariable(name: "n", arg: 1, scope: !10371, file: !7118, line: 601, type: !1039)
!10375 = !DILocation(line: 601, column: 36, scope: !10371)
!10376 = !DILocalVariable(name: "size", arg: 2, scope: !10371, file: !7118, line: 601, type: !1039)
!10377 = !DILocation(line: 601, column: 46, scope: !10371)
!10378 = !DILocalVariable(name: "flags", arg: 3, scope: !10371, file: !7118, line: 601, type: !1742)
!10379 = !DILocation(line: 601, column: 58, scope: !10371)
!10380 = !DILocation(line: 603, column: 23, scope: !10371)
!10381 = !DILocation(line: 603, column: 26, scope: !10371)
!10382 = !DILocation(line: 603, column: 32, scope: !10371)
!10383 = !DILocation(line: 603, column: 38, scope: !10371)
!10384 = !DILocation(line: 603, column: 9, scope: !10371)
!10385 = !DILocation(line: 603, column: 2, scope: !10371)
!10386 = distinct !DISubprogram(name: "hw_init_desc", scope: !3, file: !3, line: 3828, type: !10387, scopeLine: 3829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{null, !10128, !32}
!10389 = !DILocalVariable(name: "desc_info", arg: 1, scope: !10386, file: !3, line: 3828, type: !10128)
!10390 = !DILocation(line: 3828, column: 48, scope: !10386)
!10391 = !DILocalVariable(name: "transmit", arg: 2, scope: !10386, file: !3, line: 3828, type: !32)
!10392 = !DILocation(line: 3828, column: 63, scope: !10386)
!10393 = !DILocalVariable(name: "i", scope: !10386, file: !3, line: 3830, type: !32)
!10394 = !DILocation(line: 3830, column: 6, scope: !10386)
!10395 = !DILocalVariable(name: "phys", scope: !10386, file: !3, line: 3831, type: !987)
!10396 = !DILocation(line: 3831, column: 6, scope: !10386)
!10397 = !DILocation(line: 3831, column: 13, scope: !10386)
!10398 = !DILocation(line: 3831, column: 24, scope: !10386)
!10399 = !DILocalVariable(name: "desc", scope: !10386, file: !3, line: 3832, type: !7446)
!10400 = !DILocation(line: 3832, column: 22, scope: !10386)
!10401 = !DILocation(line: 3832, column: 29, scope: !10386)
!10402 = !DILocation(line: 3832, column: 40, scope: !10386)
!10403 = !DILocalVariable(name: "cur", scope: !10386, file: !3, line: 3833, type: !7875)
!10404 = !DILocation(line: 3833, column: 19, scope: !10386)
!10405 = !DILocation(line: 3833, column: 25, scope: !10386)
!10406 = !DILocation(line: 3833, column: 36, scope: !10386)
!10407 = !DILocalVariable(name: "previous", scope: !10386, file: !3, line: 3834, type: !7875)
!10408 = !DILocation(line: 3834, column: 19, scope: !10386)
!10409 = !DILocation(line: 3836, column: 9, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 3836, column: 2)
!10411 = !DILocation(line: 3836, column: 7, scope: !10410)
!10412 = !DILocation(line: 3836, column: 14, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10410, file: !3, line: 3836, column: 2)
!10414 = !DILocation(line: 3836, column: 18, scope: !10413)
!10415 = !DILocation(line: 3836, column: 29, scope: !10413)
!10416 = !DILocation(line: 3836, column: 16, scope: !10413)
!10417 = !DILocation(line: 3836, column: 2, scope: !10410)
!10418 = !DILocation(line: 3837, column: 18, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 3836, column: 41)
!10420 = !DILocation(line: 3837, column: 3, scope: !10419)
!10421 = !DILocation(line: 3837, column: 8, scope: !10419)
!10422 = !DILocation(line: 3837, column: 12, scope: !10419)
!10423 = !DILocation(line: 3838, column: 11, scope: !10419)
!10424 = !DILocation(line: 3838, column: 22, scope: !10419)
!10425 = !DILocation(line: 3838, column: 8, scope: !10419)
!10426 = !DILocation(line: 3839, column: 17, scope: !10419)
!10427 = !DILocation(line: 3839, column: 12, scope: !10419)
!10428 = !DILocation(line: 3840, column: 25, scope: !10419)
!10429 = !DILocation(line: 3840, column: 3, scope: !10419)
!10430 = !DILocation(line: 3840, column: 13, scope: !10419)
!10431 = !DILocation(line: 3840, column: 18, scope: !10419)
!10432 = !DILocation(line: 3840, column: 23, scope: !10419)
!10433 = !DILocation(line: 3841, column: 2, scope: !10419)
!10434 = !DILocation(line: 3836, column: 37, scope: !10413)
!10435 = !DILocation(line: 3836, column: 2, scope: !10413)
!10436 = distinct !{!10436, !10417, !10437}
!10437 = !DILocation(line: 3841, column: 2, scope: !10410)
!10438 = !DILocation(line: 3842, column: 24, scope: !10386)
!10439 = !DILocation(line: 3842, column: 2, scope: !10386)
!10440 = !DILocation(line: 3842, column: 12, scope: !10386)
!10441 = !DILocation(line: 3842, column: 17, scope: !10386)
!10442 = !DILocation(line: 3842, column: 22, scope: !10386)
!10443 = !DILocation(line: 3843, column: 2, scope: !10386)
!10444 = !DILocation(line: 3843, column: 12, scope: !10386)
!10445 = !DILocation(line: 3843, column: 15, scope: !10386)
!10446 = !DILocation(line: 3843, column: 19, scope: !10386)
!10447 = !DILocation(line: 3843, column: 22, scope: !10386)
!10448 = !DILocation(line: 3843, column: 34, scope: !10386)
!10449 = !DILocation(line: 3844, column: 28, scope: !10386)
!10450 = !DILocation(line: 3844, column: 2, scope: !10386)
!10451 = !DILocation(line: 3844, column: 12, scope: !10386)
!10452 = !DILocation(line: 3844, column: 17, scope: !10386)
!10453 = !DILocation(line: 3844, column: 21, scope: !10386)
!10454 = !DILocation(line: 3844, column: 26, scope: !10386)
!10455 = !DILocation(line: 3846, column: 21, scope: !10386)
!10456 = !DILocation(line: 3846, column: 32, scope: !10386)
!10457 = !DILocation(line: 3846, column: 2, scope: !10386)
!10458 = !DILocation(line: 3846, column: 13, scope: !10386)
!10459 = !DILocation(line: 3846, column: 19, scope: !10386)
!10460 = !DILocation(line: 3847, column: 20, scope: !10386)
!10461 = !DILocation(line: 3847, column: 31, scope: !10386)
!10462 = !DILocation(line: 3847, column: 36, scope: !10386)
!10463 = !DILocation(line: 3847, column: 2, scope: !10386)
!10464 = !DILocation(line: 3847, column: 13, scope: !10386)
!10465 = !DILocation(line: 3847, column: 18, scope: !10386)
!10466 = !DILocation(line: 3849, column: 19, scope: !10386)
!10467 = !DILocation(line: 3849, column: 30, scope: !10386)
!10468 = !DILocation(line: 3849, column: 2, scope: !10386)
!10469 = !DILocation(line: 3849, column: 13, scope: !10386)
!10470 = !DILocation(line: 3849, column: 17, scope: !10386)
!10471 = !DILocation(line: 3850, column: 1, scope: !10386)
!10472 = distinct !DISubprogram(name: "kmalloc_array", scope: !7118, file: !7118, line: 584, type: !10372, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10473 = !DILocation(line: 445, column: 72, scope: !8958, inlinedAt: !10474)
!10474 = distinct !DILocation(line: 552, column: 10, scope: !8963, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 591, column: 10, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10472, file: !7118, line: 590, column: 6)
!10477 = !DILocation(line: 446, column: 9, scope: !8958, inlinedAt: !10474)
!10478 = !DILocation(line: 446, column: 23, scope: !8958, inlinedAt: !10474)
!10479 = !DILocation(line: 448, column: 8, scope: !8958, inlinedAt: !10474)
!10480 = !DILocation(line: 318, column: 67, scope: !8974, inlinedAt: !10481)
!10481 = distinct !DILocation(line: 553, column: 20, scope: !8963, inlinedAt: !10475)
!10482 = !DILocation(line: 346, column: 58, scope: !8980, inlinedAt: !10483)
!10483 = distinct !DILocation(line: 547, column: 11, scope: !8963, inlinedAt: !10475)
!10484 = !DILocation(line: 472, column: 28, scope: !8986, inlinedAt: !10485)
!10485 = distinct !DILocation(line: 481, column: 9, scope: !8991, inlinedAt: !10486)
!10486 = distinct !DILocation(line: 545, column: 11, scope: !8993, inlinedAt: !10475)
!10487 = !DILocation(line: 472, column: 40, scope: !8986, inlinedAt: !10485)
!10488 = !DILocation(line: 472, column: 60, scope: !8986, inlinedAt: !10485)
!10489 = !DILocation(line: 478, column: 51, scope: !8991, inlinedAt: !10486)
!10490 = !DILocation(line: 478, column: 63, scope: !8991, inlinedAt: !10486)
!10491 = !DILocation(line: 480, column: 15, scope: !8991, inlinedAt: !10486)
!10492 = !DILocation(line: 538, column: 45, scope: !8965, inlinedAt: !10475)
!10493 = !DILocation(line: 538, column: 57, scope: !8965, inlinedAt: !10475)
!10494 = !DILocation(line: 542, column: 16, scope: !8963, inlinedAt: !10475)
!10495 = !DILocalVariable(name: "n", arg: 1, scope: !10472, file: !7118, line: 584, type: !1039)
!10496 = !DILocation(line: 584, column: 42, scope: !10472)
!10497 = !DILocalVariable(name: "size", arg: 2, scope: !10472, file: !7118, line: 584, type: !1039)
!10498 = !DILocation(line: 584, column: 52, scope: !10472)
!10499 = !DILocalVariable(name: "flags", arg: 3, scope: !10472, file: !7118, line: 584, type: !1742)
!10500 = !DILocation(line: 584, column: 64, scope: !10472)
!10501 = !DILocalVariable(name: "bytes", scope: !10472, file: !7118, line: 586, type: !1039)
!10502 = !DILocation(line: 586, column: 9, scope: !10472)
!10503 = !DILocalVariable(name: "__a", scope: !10504, file: !7118, line: 588, type: !1039)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !7118, line: 588, column: 6)
!10505 = distinct !DILexicalBlock(scope: !10472, file: !7118, line: 588, column: 6)
!10506 = !DILocation(line: 588, column: 6, scope: !10504)
!10507 = !DILocalVariable(name: "__b", scope: !10504, file: !7118, line: 588, type: !1039)
!10508 = !DILocalVariable(name: "__d", scope: !10504, file: !7118, line: 588, type: !2875)
!10509 = !DILocation(line: 588, column: 6, scope: !10505)
!10510 = !DILocation(line: 588, column: 6, scope: !10472)
!10511 = !DILocation(line: 589, column: 3, scope: !10505)
!10512 = !DILocation(line: 590, column: 27, scope: !10476)
!10513 = !DILocation(line: 590, column: 6, scope: !10476)
!10514 = !DILocation(line: 590, column: 30, scope: !10476)
!10515 = !DILocation(line: 590, column: 54, scope: !10476)
!10516 = !DILocation(line: 590, column: 33, scope: !10476)
!10517 = !DILocation(line: 590, column: 6, scope: !10472)
!10518 = !DILocation(line: 591, column: 18, scope: !10476)
!10519 = !DILocation(line: 591, column: 25, scope: !10476)
!10520 = !DILocation(line: 540, column: 27, scope: !8964, inlinedAt: !10475)
!10521 = !DILocation(line: 540, column: 6, scope: !8964, inlinedAt: !10475)
!10522 = !DILocation(line: 540, column: 6, scope: !8965, inlinedAt: !10475)
!10523 = !DILocation(line: 544, column: 7, scope: !8993, inlinedAt: !10475)
!10524 = !DILocation(line: 544, column: 12, scope: !8993, inlinedAt: !10475)
!10525 = !DILocation(line: 544, column: 7, scope: !8963, inlinedAt: !10475)
!10526 = !DILocation(line: 545, column: 25, scope: !8993, inlinedAt: !10475)
!10527 = !DILocation(line: 545, column: 31, scope: !8993, inlinedAt: !10475)
!10528 = !DILocation(line: 480, column: 33, scope: !8991, inlinedAt: !10486)
!10529 = !DILocation(line: 480, column: 23, scope: !8991, inlinedAt: !10486)
!10530 = !DILocation(line: 481, column: 29, scope: !8991, inlinedAt: !10486)
!10531 = !DILocation(line: 481, column: 35, scope: !8991, inlinedAt: !10486)
!10532 = !DILocation(line: 481, column: 42, scope: !8991, inlinedAt: !10486)
!10533 = !DILocation(line: 474, column: 23, scope: !8986, inlinedAt: !10485)
!10534 = !DILocation(line: 474, column: 29, scope: !8986, inlinedAt: !10485)
!10535 = !DILocation(line: 474, column: 36, scope: !8986, inlinedAt: !10485)
!10536 = !DILocation(line: 474, column: 9, scope: !8986, inlinedAt: !10485)
!10537 = !DILocation(line: 545, column: 4, scope: !8993, inlinedAt: !10475)
!10538 = !DILocation(line: 547, column: 25, scope: !8963, inlinedAt: !10475)
!10539 = !DILocation(line: 348, column: 7, scope: !9037, inlinedAt: !10483)
!10540 = !DILocation(line: 348, column: 6, scope: !8980, inlinedAt: !10483)
!10541 = !DILocation(line: 349, column: 3, scope: !9037, inlinedAt: !10483)
!10542 = !DILocation(line: 351, column: 6, scope: !9041, inlinedAt: !10483)
!10543 = !DILocation(line: 351, column: 11, scope: !9041, inlinedAt: !10483)
!10544 = !DILocation(line: 351, column: 6, scope: !8980, inlinedAt: !10483)
!10545 = !DILocation(line: 352, column: 3, scope: !9041, inlinedAt: !10483)
!10546 = !DILocation(line: 354, column: 32, scope: !9046, inlinedAt: !10483)
!10547 = !DILocation(line: 354, column: 37, scope: !9046, inlinedAt: !10483)
!10548 = !DILocation(line: 354, column: 42, scope: !9046, inlinedAt: !10483)
!10549 = !DILocation(line: 354, column: 45, scope: !9046, inlinedAt: !10483)
!10550 = !DILocation(line: 354, column: 50, scope: !9046, inlinedAt: !10483)
!10551 = !DILocation(line: 354, column: 6, scope: !8980, inlinedAt: !10483)
!10552 = !DILocation(line: 355, column: 3, scope: !9046, inlinedAt: !10483)
!10553 = !DILocation(line: 356, column: 32, scope: !9054, inlinedAt: !10483)
!10554 = !DILocation(line: 356, column: 37, scope: !9054, inlinedAt: !10483)
!10555 = !DILocation(line: 356, column: 43, scope: !9054, inlinedAt: !10483)
!10556 = !DILocation(line: 356, column: 46, scope: !9054, inlinedAt: !10483)
!10557 = !DILocation(line: 356, column: 51, scope: !9054, inlinedAt: !10483)
!10558 = !DILocation(line: 356, column: 6, scope: !8980, inlinedAt: !10483)
!10559 = !DILocation(line: 357, column: 3, scope: !9054, inlinedAt: !10483)
!10560 = !DILocation(line: 358, column: 6, scope: !9062, inlinedAt: !10483)
!10561 = !DILocation(line: 358, column: 11, scope: !9062, inlinedAt: !10483)
!10562 = !DILocation(line: 358, column: 6, scope: !8980, inlinedAt: !10483)
!10563 = !DILocation(line: 358, column: 26, scope: !9062, inlinedAt: !10483)
!10564 = !DILocation(line: 359, column: 6, scope: !9067, inlinedAt: !10483)
!10565 = !DILocation(line: 359, column: 11, scope: !9067, inlinedAt: !10483)
!10566 = !DILocation(line: 359, column: 6, scope: !8980, inlinedAt: !10483)
!10567 = !DILocation(line: 359, column: 26, scope: !9067, inlinedAt: !10483)
!10568 = !DILocation(line: 360, column: 6, scope: !9072, inlinedAt: !10483)
!10569 = !DILocation(line: 360, column: 11, scope: !9072, inlinedAt: !10483)
!10570 = !DILocation(line: 360, column: 6, scope: !8980, inlinedAt: !10483)
!10571 = !DILocation(line: 360, column: 26, scope: !9072, inlinedAt: !10483)
!10572 = !DILocation(line: 361, column: 6, scope: !9077, inlinedAt: !10483)
!10573 = !DILocation(line: 361, column: 11, scope: !9077, inlinedAt: !10483)
!10574 = !DILocation(line: 361, column: 6, scope: !8980, inlinedAt: !10483)
!10575 = !DILocation(line: 361, column: 26, scope: !9077, inlinedAt: !10483)
!10576 = !DILocation(line: 362, column: 6, scope: !9082, inlinedAt: !10483)
!10577 = !DILocation(line: 362, column: 11, scope: !9082, inlinedAt: !10483)
!10578 = !DILocation(line: 362, column: 6, scope: !8980, inlinedAt: !10483)
!10579 = !DILocation(line: 362, column: 26, scope: !9082, inlinedAt: !10483)
!10580 = !DILocation(line: 363, column: 6, scope: !9087, inlinedAt: !10483)
!10581 = !DILocation(line: 363, column: 11, scope: !9087, inlinedAt: !10483)
!10582 = !DILocation(line: 363, column: 6, scope: !8980, inlinedAt: !10483)
!10583 = !DILocation(line: 363, column: 26, scope: !9087, inlinedAt: !10483)
!10584 = !DILocation(line: 364, column: 6, scope: !9092, inlinedAt: !10483)
!10585 = !DILocation(line: 364, column: 11, scope: !9092, inlinedAt: !10483)
!10586 = !DILocation(line: 364, column: 6, scope: !8980, inlinedAt: !10483)
!10587 = !DILocation(line: 364, column: 26, scope: !9092, inlinedAt: !10483)
!10588 = !DILocation(line: 365, column: 6, scope: !9097, inlinedAt: !10483)
!10589 = !DILocation(line: 365, column: 11, scope: !9097, inlinedAt: !10483)
!10590 = !DILocation(line: 365, column: 6, scope: !8980, inlinedAt: !10483)
!10591 = !DILocation(line: 365, column: 26, scope: !9097, inlinedAt: !10483)
!10592 = !DILocation(line: 366, column: 6, scope: !9102, inlinedAt: !10483)
!10593 = !DILocation(line: 366, column: 11, scope: !9102, inlinedAt: !10483)
!10594 = !DILocation(line: 366, column: 6, scope: !8980, inlinedAt: !10483)
!10595 = !DILocation(line: 366, column: 26, scope: !9102, inlinedAt: !10483)
!10596 = !DILocation(line: 367, column: 6, scope: !9107, inlinedAt: !10483)
!10597 = !DILocation(line: 367, column: 11, scope: !9107, inlinedAt: !10483)
!10598 = !DILocation(line: 367, column: 6, scope: !8980, inlinedAt: !10483)
!10599 = !DILocation(line: 367, column: 26, scope: !9107, inlinedAt: !10483)
!10600 = !DILocation(line: 368, column: 6, scope: !9112, inlinedAt: !10483)
!10601 = !DILocation(line: 368, column: 11, scope: !9112, inlinedAt: !10483)
!10602 = !DILocation(line: 368, column: 6, scope: !8980, inlinedAt: !10483)
!10603 = !DILocation(line: 368, column: 26, scope: !9112, inlinedAt: !10483)
!10604 = !DILocation(line: 369, column: 6, scope: !9117, inlinedAt: !10483)
!10605 = !DILocation(line: 369, column: 11, scope: !9117, inlinedAt: !10483)
!10606 = !DILocation(line: 369, column: 6, scope: !8980, inlinedAt: !10483)
!10607 = !DILocation(line: 369, column: 26, scope: !9117, inlinedAt: !10483)
!10608 = !DILocation(line: 370, column: 6, scope: !9122, inlinedAt: !10483)
!10609 = !DILocation(line: 370, column: 11, scope: !9122, inlinedAt: !10483)
!10610 = !DILocation(line: 370, column: 6, scope: !8980, inlinedAt: !10483)
!10611 = !DILocation(line: 370, column: 26, scope: !9122, inlinedAt: !10483)
!10612 = !DILocation(line: 371, column: 6, scope: !9127, inlinedAt: !10483)
!10613 = !DILocation(line: 371, column: 11, scope: !9127, inlinedAt: !10483)
!10614 = !DILocation(line: 371, column: 6, scope: !8980, inlinedAt: !10483)
!10615 = !DILocation(line: 371, column: 26, scope: !9127, inlinedAt: !10483)
!10616 = !DILocation(line: 372, column: 6, scope: !9132, inlinedAt: !10483)
!10617 = !DILocation(line: 372, column: 11, scope: !9132, inlinedAt: !10483)
!10618 = !DILocation(line: 372, column: 6, scope: !8980, inlinedAt: !10483)
!10619 = !DILocation(line: 372, column: 26, scope: !9132, inlinedAt: !10483)
!10620 = !DILocation(line: 373, column: 6, scope: !9137, inlinedAt: !10483)
!10621 = !DILocation(line: 373, column: 11, scope: !9137, inlinedAt: !10483)
!10622 = !DILocation(line: 373, column: 6, scope: !8980, inlinedAt: !10483)
!10623 = !DILocation(line: 373, column: 26, scope: !9137, inlinedAt: !10483)
!10624 = !DILocation(line: 374, column: 6, scope: !9142, inlinedAt: !10483)
!10625 = !DILocation(line: 374, column: 11, scope: !9142, inlinedAt: !10483)
!10626 = !DILocation(line: 374, column: 6, scope: !8980, inlinedAt: !10483)
!10627 = !DILocation(line: 374, column: 26, scope: !9142, inlinedAt: !10483)
!10628 = !DILocation(line: 375, column: 6, scope: !9147, inlinedAt: !10483)
!10629 = !DILocation(line: 375, column: 11, scope: !9147, inlinedAt: !10483)
!10630 = !DILocation(line: 375, column: 6, scope: !8980, inlinedAt: !10483)
!10631 = !DILocation(line: 375, column: 27, scope: !9147, inlinedAt: !10483)
!10632 = !DILocation(line: 376, column: 6, scope: !9152, inlinedAt: !10483)
!10633 = !DILocation(line: 376, column: 11, scope: !9152, inlinedAt: !10483)
!10634 = !DILocation(line: 376, column: 6, scope: !8980, inlinedAt: !10483)
!10635 = !DILocation(line: 376, column: 32, scope: !9152, inlinedAt: !10483)
!10636 = !DILocation(line: 377, column: 6, scope: !9157, inlinedAt: !10483)
!10637 = !DILocation(line: 377, column: 11, scope: !9157, inlinedAt: !10483)
!10638 = !DILocation(line: 377, column: 6, scope: !8980, inlinedAt: !10483)
!10639 = !DILocation(line: 377, column: 32, scope: !9157, inlinedAt: !10483)
!10640 = !DILocation(line: 378, column: 6, scope: !9162, inlinedAt: !10483)
!10641 = !DILocation(line: 378, column: 11, scope: !9162, inlinedAt: !10483)
!10642 = !DILocation(line: 378, column: 6, scope: !8980, inlinedAt: !10483)
!10643 = !DILocation(line: 378, column: 32, scope: !9162, inlinedAt: !10483)
!10644 = !DILocation(line: 379, column: 6, scope: !9167, inlinedAt: !10483)
!10645 = !DILocation(line: 379, column: 11, scope: !9167, inlinedAt: !10483)
!10646 = !DILocation(line: 379, column: 6, scope: !8980, inlinedAt: !10483)
!10647 = !DILocation(line: 379, column: 33, scope: !9167, inlinedAt: !10483)
!10648 = !DILocation(line: 380, column: 6, scope: !9172, inlinedAt: !10483)
!10649 = !DILocation(line: 380, column: 11, scope: !9172, inlinedAt: !10483)
!10650 = !DILocation(line: 380, column: 6, scope: !8980, inlinedAt: !10483)
!10651 = !DILocation(line: 380, column: 33, scope: !9172, inlinedAt: !10483)
!10652 = !DILocation(line: 381, column: 6, scope: !9177, inlinedAt: !10483)
!10653 = !DILocation(line: 381, column: 11, scope: !9177, inlinedAt: !10483)
!10654 = !DILocation(line: 381, column: 6, scope: !8980, inlinedAt: !10483)
!10655 = !DILocation(line: 381, column: 33, scope: !9177, inlinedAt: !10483)
!10656 = !DILocation(line: 382, column: 2, scope: !9182, inlinedAt: !10483)
!10657 = !DILocation(line: 382, column: 2, scope: !9186, inlinedAt: !10483)
!10658 = !DILocation(line: 382, column: 2, scope: !9187, inlinedAt: !10483)
!10659 = !DILocation(line: 386, column: 1, scope: !8980, inlinedAt: !10483)
!10660 = !DILocation(line: 547, column: 9, scope: !8963, inlinedAt: !10475)
!10661 = !DILocation(line: 549, column: 8, scope: !9193, inlinedAt: !10475)
!10662 = !DILocation(line: 549, column: 7, scope: !8963, inlinedAt: !10475)
!10663 = !DILocation(line: 550, column: 4, scope: !9193, inlinedAt: !10475)
!10664 = !DILocation(line: 553, column: 33, scope: !8963, inlinedAt: !10475)
!10665 = !DILocation(line: 325, column: 6, scope: !9198, inlinedAt: !10481)
!10666 = !DILocation(line: 325, column: 6, scope: !8974, inlinedAt: !10481)
!10667 = !DILocation(line: 326, column: 3, scope: !9198, inlinedAt: !10481)
!10668 = !DILocation(line: 332, column: 9, scope: !8974, inlinedAt: !10481)
!10669 = !DILocation(line: 332, column: 15, scope: !8974, inlinedAt: !10481)
!10670 = !DILocation(line: 332, column: 2, scope: !8974, inlinedAt: !10481)
!10671 = !DILocation(line: 336, column: 1, scope: !8974, inlinedAt: !10481)
!10672 = !DILocation(line: 553, column: 5, scope: !8963, inlinedAt: !10475)
!10673 = !DILocation(line: 553, column: 41, scope: !8963, inlinedAt: !10475)
!10674 = !DILocation(line: 554, column: 5, scope: !8963, inlinedAt: !10475)
!10675 = !DILocation(line: 554, column: 12, scope: !8963, inlinedAt: !10475)
!10676 = !DILocation(line: 448, column: 31, scope: !8958, inlinedAt: !10474)
!10677 = !DILocation(line: 448, column: 34, scope: !8958, inlinedAt: !10474)
!10678 = !DILocation(line: 448, column: 14, scope: !8958, inlinedAt: !10474)
!10679 = !DILocation(line: 450, column: 22, scope: !8958, inlinedAt: !10474)
!10680 = !DILocation(line: 450, column: 25, scope: !8958, inlinedAt: !10474)
!10681 = !DILocation(line: 450, column: 30, scope: !8958, inlinedAt: !10474)
!10682 = !DILocation(line: 450, column: 36, scope: !8958, inlinedAt: !10474)
!10683 = !DILocation(line: 450, column: 8, scope: !8958, inlinedAt: !10474)
!10684 = !DILocation(line: 450, column: 6, scope: !8958, inlinedAt: !10474)
!10685 = !DILocation(line: 451, column: 9, scope: !8958, inlinedAt: !10474)
!10686 = !DILocation(line: 552, column: 3, scope: !8963, inlinedAt: !10475)
!10687 = !DILocation(line: 557, column: 19, scope: !8965, inlinedAt: !10475)
!10688 = !DILocation(line: 557, column: 25, scope: !8965, inlinedAt: !10475)
!10689 = !DILocation(line: 557, column: 9, scope: !8965, inlinedAt: !10475)
!10690 = !DILocation(line: 557, column: 2, scope: !8965, inlinedAt: !10475)
!10691 = !DILocation(line: 558, column: 1, scope: !8965, inlinedAt: !10475)
!10692 = !DILocation(line: 591, column: 3, scope: !10476)
!10693 = !DILocation(line: 592, column: 19, scope: !10472)
!10694 = !DILocation(line: 592, column: 26, scope: !10472)
!10695 = !DILocation(line: 592, column: 9, scope: !10472)
!10696 = !DILocation(line: 592, column: 2, scope: !10472)
!10697 = !DILocation(line: 593, column: 1, scope: !10472)
!10698 = distinct !DISubprogram(name: "__must_check_overflow", scope: !10699, file: !10699, line: 52, type: !10700, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10699 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!10700 = !DISubroutineType(types: !10701)
!10701 = !{!771, !771}
!10702 = !DILocalVariable(name: "overflow", arg: 1, scope: !10698, file: !10699, line: 52, type: !771)
!10703 = !DILocation(line: 52, column: 60, scope: !10698)
!10704 = !DILocation(line: 54, column: 9, scope: !10698)
!10705 = !DILocation(line: 54, column: 2, scope: !10698)
!10706 = distinct !DISubprogram(name: "readb", scope: !10107, file: !10107, line: 57, type: !10707, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10707 = !DISubroutineType(types: !10708)
!10708 = !{!482, !10119}
!10709 = !DILocalVariable(name: "addr", arg: 1, scope: !10706, file: !10107, line: 57, type: !10119)
!10710 = !DILocation(line: 57, column: 1, scope: !10706)
!10711 = !DILocalVariable(name: "ret", scope: !10706, file: !10107, line: 57, type: !482)
!10712 = !{i32 -2143254058}
!10713 = distinct !DISubprogram(name: "empty_addr", scope: !3, file: !3, line: 4023, type: !10714, scopeLine: 4024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10714 = !DISubroutineType(types: !10715)
!10715 = !{!32, !793}
!10716 = !DILocalVariable(name: "addr", arg: 1, scope: !10713, file: !3, line: 4023, type: !793)
!10717 = !DILocation(line: 4023, column: 27, scope: !10713)
!10718 = !DILocalVariable(name: "addr1", scope: !10713, file: !3, line: 4025, type: !2516)
!10719 = !DILocation(line: 4025, column: 7, scope: !10713)
!10720 = !DILocation(line: 4025, column: 23, scope: !10713)
!10721 = !DILocation(line: 4025, column: 15, scope: !10713)
!10722 = !DILocalVariable(name: "addr2", scope: !10713, file: !3, line: 4026, type: !7507)
!10723 = !DILocation(line: 4026, column: 7, scope: !10713)
!10724 = !DILocation(line: 4026, column: 24, scope: !10713)
!10725 = !DILocation(line: 4026, column: 15, scope: !10713)
!10726 = !DILocation(line: 4028, column: 15, scope: !10713)
!10727 = !DILocation(line: 4028, column: 14, scope: !10713)
!10728 = !DILocation(line: 4028, column: 11, scope: !10713)
!10729 = !DILocation(line: 4028, column: 21, scope: !10713)
!10730 = !DILocation(line: 4028, column: 30, scope: !10713)
!10731 = !DILocation(line: 4028, column: 29, scope: !10713)
!10732 = !DILocation(line: 4028, column: 26, scope: !10713)
!10733 = !DILocation(line: 0, scope: !10713)
!10734 = !DILocation(line: 4028, column: 2, scope: !10713)
!10735 = distinct !DISubprogram(name: "hw_set_addr", scope: !3, file: !3, line: 4038, type: !8272, scopeLine: 4039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10736 = !DILocalVariable(name: "hw", arg: 1, scope: !10735, file: !3, line: 4038, type: !8002)
!10737 = !DILocation(line: 4038, column: 40, scope: !10735)
!10738 = !DILocalVariable(name: "i", scope: !10735, file: !3, line: 4040, type: !32)
!10739 = !DILocation(line: 4040, column: 6, scope: !10735)
!10740 = !DILocation(line: 4042, column: 9, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 4042, column: 2)
!10742 = !DILocation(line: 4042, column: 7, scope: !10741)
!10743 = !DILocation(line: 4042, column: 14, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 4042, column: 2)
!10745 = !DILocation(line: 4042, column: 16, scope: !10744)
!10746 = !DILocation(line: 4042, column: 2, scope: !10741)
!10747 = !DILocation(line: 4043, column: 10, scope: !10744)
!10748 = !DILocation(line: 4043, column: 14, scope: !10744)
!10749 = !DILocation(line: 4043, column: 28, scope: !10744)
!10750 = !DILocation(line: 4044, column: 4, scope: !10744)
!10751 = !DILocation(line: 4044, column: 8, scope: !10744)
!10752 = !DILocation(line: 4044, column: 11, scope: !10744)
!10753 = !DILocation(line: 4044, column: 36, scope: !10744)
!10754 = !DILocation(line: 4044, column: 34, scope: !10744)
!10755 = !DILocation(line: 4043, column: 3, scope: !10744)
!10756 = !DILocation(line: 4042, column: 29, scope: !10744)
!10757 = !DILocation(line: 4042, column: 2, scope: !10744)
!10758 = distinct !{!10758, !10746, !10759}
!10759 = !DILocation(line: 4044, column: 37, scope: !10741)
!10760 = !DILocation(line: 4046, column: 14, scope: !10735)
!10761 = !DILocation(line: 4046, column: 18, scope: !10735)
!10762 = !DILocation(line: 4046, column: 22, scope: !10735)
!10763 = !DILocation(line: 4046, column: 2, scope: !10735)
!10764 = !DILocation(line: 4047, column: 1, scope: !10735)
!10765 = distinct !DISubprogram(name: "writeb", scope: !10107, file: !10107, line: 65, type: !10766, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{null, !482, !10110}
!10768 = !DILocalVariable(name: "val", arg: 1, scope: !10765, file: !10107, line: 65, type: !482)
!10769 = !DILocation(line: 65, column: 1, scope: !10765)
!10770 = !DILocalVariable(name: "addr", arg: 2, scope: !10765, file: !10107, line: 65, type: !10110)
!10771 = !{i32 -2143251604}
!10772 = distinct !DISubprogram(name: "sw_set_addr", scope: !3, file: !3, line: 2708, type: !10773, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10773 = !DISubroutineType(types: !10774)
!10774 = !{null, !8002, !793}
!10775 = !DILocalVariable(name: "hw", arg: 1, scope: !10772, file: !3, line: 2708, type: !8002)
!10776 = !DILocation(line: 2708, column: 40, scope: !10772)
!10777 = !DILocalVariable(name: "mac_addr", arg: 2, scope: !10772, file: !3, line: 2708, type: !793)
!10778 = !DILocation(line: 2708, column: 48, scope: !10772)
!10779 = !DILocalVariable(name: "i", scope: !10772, file: !3, line: 2710, type: !32)
!10780 = !DILocation(line: 2710, column: 6, scope: !10772)
!10781 = !DILocation(line: 2712, column: 9, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 2712, column: 2)
!10783 = !DILocation(line: 2712, column: 7, scope: !10782)
!10784 = !DILocation(line: 2712, column: 14, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2712, column: 2)
!10786 = !DILocation(line: 2712, column: 16, scope: !10785)
!10787 = !DILocation(line: 2712, column: 2, scope: !10782)
!10788 = !DILocation(line: 2713, column: 10, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 2712, column: 29)
!10790 = !DILocation(line: 2713, column: 19, scope: !10789)
!10791 = !DILocation(line: 2713, column: 23, scope: !10789)
!10792 = !DILocation(line: 2713, column: 27, scope: !10789)
!10793 = !DILocation(line: 2713, column: 30, scope: !10789)
!10794 = !DILocation(line: 2713, column: 59, scope: !10789)
!10795 = !DILocation(line: 2713, column: 57, scope: !10789)
!10796 = !DILocation(line: 2713, column: 3, scope: !10789)
!10797 = !DILocation(line: 2714, column: 10, scope: !10789)
!10798 = !DILocation(line: 2714, column: 23, scope: !10789)
!10799 = !DILocation(line: 2714, column: 21, scope: !10789)
!10800 = !DILocation(line: 2714, column: 27, scope: !10789)
!10801 = !DILocation(line: 2714, column: 31, scope: !10789)
!10802 = !DILocation(line: 2714, column: 34, scope: !10789)
!10803 = !DILocation(line: 2714, column: 63, scope: !10789)
!10804 = !DILocation(line: 2714, column: 61, scope: !10789)
!10805 = !DILocation(line: 2714, column: 3, scope: !10789)
!10806 = !DILocation(line: 2715, column: 2, scope: !10789)
!10807 = !DILocation(line: 2712, column: 23, scope: !10785)
!10808 = !DILocation(line: 2712, column: 2, scope: !10785)
!10809 = distinct !{!10809, !10787, !10810}
!10810 = !DILocation(line: 2715, column: 2, scope: !10782)
!10811 = !DILocation(line: 2716, column: 1, scope: !10772)
!10812 = distinct !DISubprogram(name: "eeprom_read", scope: !3, file: !3, line: 3113, type: !10813, scopeLine: 3114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10813 = !DISubroutineType(types: !10814)
!10814 = !{!581, !8002, !794}
!10815 = !DILocalVariable(name: "hw", arg: 1, scope: !10812, file: !3, line: 3113, type: !8002)
!10816 = !DILocation(line: 3113, column: 39, scope: !10812)
!10817 = !DILocalVariable(name: "reg", arg: 2, scope: !10812, file: !3, line: 3113, type: !794)
!10818 = !DILocation(line: 3113, column: 46, scope: !10812)
!10819 = !DILocalVariable(name: "data", scope: !10812, file: !3, line: 3115, type: !581)
!10820 = !DILocation(line: 3115, column: 6, scope: !10812)
!10821 = !DILocation(line: 3117, column: 13, scope: !10812)
!10822 = !DILocation(line: 3117, column: 2, scope: !10812)
!10823 = !DILocation(line: 3119, column: 10, scope: !10812)
!10824 = !DILocation(line: 3119, column: 26, scope: !10812)
!10825 = !DILocation(line: 3119, column: 2, scope: !10812)
!10826 = !DILocation(line: 3120, column: 15, scope: !10812)
!10827 = !DILocation(line: 3120, column: 9, scope: !10812)
!10828 = !DILocation(line: 3120, column: 7, scope: !10812)
!10829 = !DILocation(line: 3122, column: 12, scope: !10812)
!10830 = !DILocation(line: 3122, column: 2, scope: !10812)
!10831 = !DILocation(line: 3124, column: 9, scope: !10812)
!10832 = !DILocation(line: 3124, column: 2, scope: !10812)
!10833 = distinct !DISubprogram(name: "raise_gpio", scope: !3, file: !3, line: 3017, type: !10834, scopeLine: 3018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{null, !8002, !794}
!10836 = !DILocalVariable(name: "hw", arg: 1, scope: !10833, file: !3, line: 3017, type: !8002)
!10837 = !DILocation(line: 3017, column: 46, scope: !10833)
!10838 = !DILocalVariable(name: "gpio", arg: 2, scope: !10833, file: !3, line: 3017, type: !794)
!10839 = !DILocation(line: 3017, column: 53, scope: !10833)
!10840 = !DILocalVariable(name: "data", scope: !10833, file: !3, line: 3019, type: !581)
!10841 = !DILocation(line: 3019, column: 6, scope: !10833)
!10842 = !DILocation(line: 3021, column: 15, scope: !10833)
!10843 = !DILocation(line: 3021, column: 19, scope: !10833)
!10844 = !DILocation(line: 3021, column: 22, scope: !10833)
!10845 = !DILocation(line: 3021, column: 9, scope: !10833)
!10846 = !DILocation(line: 3021, column: 7, scope: !10833)
!10847 = !DILocation(line: 3022, column: 10, scope: !10833)
!10848 = !DILocation(line: 3022, column: 7, scope: !10833)
!10849 = !DILocation(line: 3023, column: 9, scope: !10833)
!10850 = !DILocation(line: 3023, column: 15, scope: !10833)
!10851 = !DILocation(line: 3023, column: 19, scope: !10833)
!10852 = !DILocation(line: 3023, column: 22, scope: !10833)
!10853 = !DILocation(line: 3023, column: 2, scope: !10833)
!10854 = !DILocation(line: 3024, column: 1, scope: !10833)
!10855 = distinct !DISubprogram(name: "spi_reg", scope: !3, file: !3, line: 3070, type: !10856, scopeLine: 3071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{null, !8002, !794, !794}
!10858 = !DILocalVariable(name: "hw", arg: 1, scope: !10855, file: !3, line: 3070, type: !8002)
!10859 = !DILocation(line: 3070, column: 36, scope: !10855)
!10860 = !DILocalVariable(name: "data", arg: 2, scope: !10855, file: !3, line: 3070, type: !794)
!10861 = !DILocation(line: 3070, column: 43, scope: !10855)
!10862 = !DILocalVariable(name: "reg", arg: 3, scope: !10855, file: !3, line: 3070, type: !794)
!10863 = !DILocation(line: 3070, column: 52, scope: !10855)
!10864 = !DILocalVariable(name: "i", scope: !10855, file: !3, line: 3072, type: !32)
!10865 = !DILocation(line: 3072, column: 6, scope: !10855)
!10866 = !DILocation(line: 3075, column: 13, scope: !10855)
!10867 = !DILocation(line: 3075, column: 2, scope: !10855)
!10868 = !DILocation(line: 3076, column: 13, scope: !10855)
!10869 = !DILocation(line: 3076, column: 2, scope: !10855)
!10870 = !DILocation(line: 3079, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 3079, column: 2)
!10872 = !DILocation(line: 3079, column: 7, scope: !10871)
!10873 = !DILocation(line: 3079, column: 14, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 3079, column: 2)
!10875 = !DILocation(line: 3079, column: 16, scope: !10874)
!10876 = !DILocation(line: 3079, column: 2, scope: !10871)
!10877 = !DILocation(line: 3080, column: 4, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 3079, column: 27)
!10879 = !DILocation(line: 3080, column: 20, scope: !10878)
!10880 = !DILocation(line: 3080, column: 17, scope: !10878)
!10881 = !DILocation(line: 3080, column: 9, scope: !10878)
!10882 = !DILocation(line: 3080, column: 3, scope: !10878)
!10883 = !DILocation(line: 3080, column: 37, scope: !10878)
!10884 = !DILocation(line: 3080, column: 26, scope: !10878)
!10885 = !DILocation(line: 3081, column: 14, scope: !10878)
!10886 = !DILocation(line: 3081, column: 4, scope: !10878)
!10887 = !DILocation(line: 3082, column: 14, scope: !10878)
!10888 = !DILocation(line: 3082, column: 3, scope: !10878)
!10889 = !DILocation(line: 3083, column: 2, scope: !10878)
!10890 = !DILocation(line: 3079, column: 23, scope: !10874)
!10891 = !DILocation(line: 3079, column: 2, scope: !10874)
!10892 = distinct !{!10892, !10876, !10893}
!10893 = !DILocation(line: 3083, column: 2, scope: !10871)
!10894 = !DILocation(line: 3086, column: 9, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 3086, column: 2)
!10896 = !DILocation(line: 3086, column: 7, scope: !10895)
!10897 = !DILocation(line: 3086, column: 14, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 3086, column: 2)
!10899 = !DILocation(line: 3086, column: 16, scope: !10898)
!10900 = !DILocation(line: 3086, column: 2, scope: !10895)
!10901 = !DILocation(line: 3087, column: 4, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 3086, column: 27)
!10903 = !DILocation(line: 3087, column: 19, scope: !10902)
!10904 = !DILocation(line: 3087, column: 16, scope: !10902)
!10905 = !DILocation(line: 3087, column: 8, scope: !10902)
!10906 = !DILocation(line: 3087, column: 3, scope: !10902)
!10907 = !DILocation(line: 3087, column: 36, scope: !10902)
!10908 = !DILocation(line: 3087, column: 25, scope: !10902)
!10909 = !DILocation(line: 3088, column: 14, scope: !10902)
!10910 = !DILocation(line: 3088, column: 4, scope: !10902)
!10911 = !DILocation(line: 3089, column: 14, scope: !10902)
!10912 = !DILocation(line: 3089, column: 3, scope: !10902)
!10913 = !DILocation(line: 3090, column: 2, scope: !10902)
!10914 = !DILocation(line: 3086, column: 23, scope: !10898)
!10915 = !DILocation(line: 3086, column: 2, scope: !10898)
!10916 = distinct !{!10916, !10900, !10917}
!10917 = !DILocation(line: 3090, column: 2, scope: !10895)
!10918 = !DILocation(line: 3091, column: 1, scope: !10855)
!10919 = distinct !DISubprogram(name: "spi_r", scope: !3, file: !3, line: 3042, type: !10920, scopeLine: 3043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{!581, !8002}
!10922 = !DILocalVariable(name: "hw", arg: 1, scope: !10919, file: !3, line: 3042, type: !8002)
!10923 = !DILocation(line: 3042, column: 33, scope: !10919)
!10924 = !DILocalVariable(name: "i", scope: !10919, file: !3, line: 3044, type: !32)
!10925 = !DILocation(line: 3044, column: 6, scope: !10919)
!10926 = !DILocalVariable(name: "temp", scope: !10919, file: !3, line: 3045, type: !581)
!10927 = !DILocation(line: 3045, column: 6, scope: !10919)
!10928 = !DILocation(line: 3047, column: 9, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 3047, column: 2)
!10930 = !DILocation(line: 3047, column: 7, scope: !10929)
!10931 = !DILocation(line: 3047, column: 15, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 3047, column: 2)
!10933 = !DILocation(line: 3047, column: 17, scope: !10932)
!10934 = !DILocation(line: 3047, column: 2, scope: !10929)
!10935 = !DILocation(line: 3048, column: 14, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 3047, column: 28)
!10937 = !DILocation(line: 3048, column: 3, scope: !10936)
!10938 = !DILocation(line: 3049, column: 3, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 3049, column: 3)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !3, line: 3049, column: 3)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 3049, column: 3)
!10942 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3049, column: 3)
!10943 = !DILocation(line: 3051, column: 23, scope: !10936)
!10944 = !DILocation(line: 3051, column: 12, scope: !10936)
!10945 = !DILocation(line: 3051, column: 11, scope: !10936)
!10946 = !DILocation(line: 3051, column: 51, scope: !10936)
!10947 = !DILocation(line: 3051, column: 48, scope: !10936)
!10948 = !DILocation(line: 3051, column: 8, scope: !10936)
!10949 = !DILocation(line: 3053, column: 13, scope: !10936)
!10950 = !DILocation(line: 3053, column: 3, scope: !10936)
!10951 = !DILocation(line: 3054, column: 3, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 3054, column: 3)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 3054, column: 3)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 3054, column: 3)
!10955 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3054, column: 3)
!10956 = !DILocation(line: 3055, column: 2, scope: !10936)
!10957 = !DILocation(line: 3047, column: 24, scope: !10932)
!10958 = !DILocation(line: 3047, column: 2, scope: !10932)
!10959 = distinct !{!10959, !10934, !10960}
!10960 = !DILocation(line: 3055, column: 2, scope: !10929)
!10961 = !DILocation(line: 3056, column: 9, scope: !10919)
!10962 = !DILocation(line: 3056, column: 2, scope: !10919)
!10963 = distinct !DISubprogram(name: "drop_gpio", scope: !3, file: !3, line: 3008, type: !10834, scopeLine: 3009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10964 = !DILocalVariable(name: "hw", arg: 1, scope: !10963, file: !3, line: 3008, type: !8002)
!10965 = !DILocation(line: 3008, column: 45, scope: !10963)
!10966 = !DILocalVariable(name: "gpio", arg: 2, scope: !10963, file: !3, line: 3008, type: !794)
!10967 = !DILocation(line: 3008, column: 52, scope: !10963)
!10968 = !DILocalVariable(name: "data", scope: !10963, file: !3, line: 3010, type: !581)
!10969 = !DILocation(line: 3010, column: 6, scope: !10963)
!10970 = !DILocation(line: 3012, column: 15, scope: !10963)
!10971 = !DILocation(line: 3012, column: 19, scope: !10963)
!10972 = !DILocation(line: 3012, column: 22, scope: !10963)
!10973 = !DILocation(line: 3012, column: 9, scope: !10963)
!10974 = !DILocation(line: 3012, column: 7, scope: !10963)
!10975 = !DILocation(line: 3013, column: 11, scope: !10963)
!10976 = !DILocation(line: 3013, column: 10, scope: !10963)
!10977 = !DILocation(line: 3013, column: 7, scope: !10963)
!10978 = !DILocation(line: 3014, column: 9, scope: !10963)
!10979 = !DILocation(line: 3014, column: 15, scope: !10963)
!10980 = !DILocation(line: 3014, column: 19, scope: !10963)
!10981 = !DILocation(line: 3014, column: 22, scope: !10963)
!10982 = !DILocation(line: 3014, column: 2, scope: !10963)
!10983 = !DILocation(line: 3015, column: 1, scope: !10963)
!10984 = distinct !DISubprogram(name: "eeprom_clk", scope: !3, file: !3, line: 3034, type: !8272, scopeLine: 3035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10985 = !DILocalVariable(name: "hw", arg: 1, scope: !10984, file: !3, line: 3034, type: !8002)
!10986 = !DILocation(line: 3034, column: 39, scope: !10984)
!10987 = !DILocation(line: 3036, column: 13, scope: !10984)
!10988 = !DILocation(line: 3036, column: 2, scope: !10984)
!10989 = !DILocation(line: 3037, column: 2, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3037, column: 2)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 3037, column: 2)
!10992 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 3037, column: 2)
!10993 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 3037, column: 2)
!10994 = !DILocation(line: 3038, column: 12, scope: !10984)
!10995 = !DILocation(line: 3038, column: 2, scope: !10984)
!10996 = !DILocation(line: 3039, column: 2, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 3039, column: 2)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 3039, column: 2)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 3039, column: 2)
!11000 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 3039, column: 2)
!11001 = !DILocation(line: 3040, column: 1, scope: !10984)
!11002 = distinct !DISubprogram(name: "state_gpio", scope: !3, file: !3, line: 3026, type: !11003, scopeLine: 3027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{!794, !8002, !794}
!11005 = !DILocalVariable(name: "hw", arg: 1, scope: !11002, file: !3, line: 3026, type: !8002)
!11006 = !DILocation(line: 3026, column: 44, scope: !11002)
!11007 = !DILocalVariable(name: "gpio", arg: 2, scope: !11002, file: !3, line: 3026, type: !794)
!11008 = !DILocation(line: 3026, column: 51, scope: !11002)
!11009 = !DILocalVariable(name: "data", scope: !11002, file: !3, line: 3028, type: !581)
!11010 = !DILocation(line: 3028, column: 6, scope: !11002)
!11011 = !DILocation(line: 3030, column: 15, scope: !11002)
!11012 = !DILocation(line: 3030, column: 19, scope: !11002)
!11013 = !DILocation(line: 3030, column: 22, scope: !11002)
!11014 = !DILocation(line: 3030, column: 9, scope: !11002)
!11015 = !DILocation(line: 3030, column: 7, scope: !11002)
!11016 = !DILocation(line: 3031, column: 14, scope: !11002)
!11017 = !DILocation(line: 3031, column: 21, scope: !11002)
!11018 = !DILocation(line: 3031, column: 19, scope: !11002)
!11019 = !DILocation(line: 3031, column: 9, scope: !11002)
!11020 = !DILocation(line: 3031, column: 2, scope: !11002)
!11021 = distinct !DISubprogram(name: "sw_set_global_ctrl", scope: !3, file: !3, line: 2724, type: !8272, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11022 = !DILocalVariable(name: "hw", arg: 1, scope: !11021, file: !3, line: 2724, type: !8002)
!11023 = !DILocation(line: 2724, column: 47, scope: !11021)
!11024 = !DILocalVariable(name: "data", scope: !11021, file: !3, line: 2726, type: !581)
!11025 = !DILocation(line: 2726, column: 6, scope: !11021)
!11026 = !DILocation(line: 2729, column: 15, scope: !11021)
!11027 = !DILocation(line: 2729, column: 19, scope: !11021)
!11028 = !DILocation(line: 2729, column: 22, scope: !11021)
!11029 = !DILocation(line: 2729, column: 9, scope: !11021)
!11030 = !DILocation(line: 2729, column: 7, scope: !11021)
!11031 = !DILocation(line: 2730, column: 7, scope: !11021)
!11032 = !DILocation(line: 2731, column: 9, scope: !11021)
!11033 = !DILocation(line: 2731, column: 15, scope: !11021)
!11034 = !DILocation(line: 2731, column: 19, scope: !11021)
!11035 = !DILocation(line: 2731, column: 22, scope: !11021)
!11036 = !DILocation(line: 2731, column: 2, scope: !11021)
!11037 = !DILocation(line: 2733, column: 15, scope: !11021)
!11038 = !DILocation(line: 2733, column: 19, scope: !11021)
!11039 = !DILocation(line: 2733, column: 22, scope: !11021)
!11040 = !DILocation(line: 2733, column: 9, scope: !11021)
!11041 = !DILocation(line: 2733, column: 7, scope: !11021)
!11042 = !DILocation(line: 2736, column: 7, scope: !11021)
!11043 = !DILocation(line: 2739, column: 7, scope: !11021)
!11044 = !DILocation(line: 2740, column: 7, scope: !11021)
!11045 = !DILocation(line: 2742, column: 6, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 2742, column: 6)
!11047 = !DILocation(line: 2742, column: 10, scope: !11046)
!11048 = !DILocation(line: 2742, column: 20, scope: !11046)
!11049 = !DILocation(line: 2742, column: 6, scope: !11021)
!11050 = !DILocation(line: 2743, column: 8, scope: !11046)
!11051 = !DILocation(line: 2743, column: 3, scope: !11046)
!11052 = !DILocation(line: 2745, column: 8, scope: !11046)
!11053 = !DILocation(line: 2746, column: 9, scope: !11021)
!11054 = !DILocation(line: 2746, column: 15, scope: !11021)
!11055 = !DILocation(line: 2746, column: 19, scope: !11021)
!11056 = !DILocation(line: 2746, column: 22, scope: !11021)
!11057 = !DILocation(line: 2746, column: 2, scope: !11021)
!11058 = !DILocation(line: 2748, column: 15, scope: !11021)
!11059 = !DILocation(line: 2748, column: 19, scope: !11021)
!11060 = !DILocation(line: 2748, column: 22, scope: !11021)
!11061 = !DILocation(line: 2748, column: 9, scope: !11021)
!11062 = !DILocation(line: 2748, column: 7, scope: !11021)
!11063 = !DILocation(line: 2751, column: 7, scope: !11021)
!11064 = !DILocation(line: 2752, column: 9, scope: !11021)
!11065 = !DILocation(line: 2752, column: 15, scope: !11021)
!11066 = !DILocation(line: 2752, column: 19, scope: !11021)
!11067 = !DILocation(line: 2752, column: 22, scope: !11021)
!11068 = !DILocation(line: 2752, column: 2, scope: !11021)
!11069 = !DILocation(line: 2753, column: 1, scope: !11021)
!11070 = distinct !DISubprogram(name: "sw_init_broad_storm", scope: !3, file: !3, line: 2206, type: !8272, scopeLine: 2207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11071 = !DILocalVariable(name: "hw", arg: 1, scope: !11070, file: !3, line: 2206, type: !8002)
!11072 = !DILocation(line: 2206, column: 48, scope: !11070)
!11073 = !DILocalVariable(name: "port", scope: !11070, file: !3, line: 2208, type: !32)
!11074 = !DILocation(line: 2208, column: 6, scope: !11070)
!11075 = !DILocation(line: 2210, column: 2, scope: !11070)
!11076 = !DILocation(line: 2210, column: 6, scope: !11070)
!11077 = !DILocation(line: 2210, column: 18, scope: !11070)
!11078 = !DILocation(line: 2210, column: 28, scope: !11070)
!11079 = !DILocation(line: 2211, column: 21, scope: !11070)
!11080 = !DILocation(line: 2211, column: 25, scope: !11070)
!11081 = !DILocation(line: 2211, column: 29, scope: !11070)
!11082 = !DILocation(line: 2211, column: 41, scope: !11070)
!11083 = !DILocation(line: 2211, column: 2, scope: !11070)
!11084 = !DILocation(line: 2212, column: 12, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 2212, column: 2)
!11086 = !DILocation(line: 2212, column: 7, scope: !11085)
!11087 = !DILocation(line: 2212, column: 17, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 2212, column: 2)
!11089 = !DILocation(line: 2212, column: 22, scope: !11088)
!11090 = !DILocation(line: 2212, column: 2, scope: !11085)
!11091 = !DILocation(line: 2213, column: 22, scope: !11088)
!11092 = !DILocation(line: 2213, column: 26, scope: !11088)
!11093 = !DILocation(line: 2213, column: 3, scope: !11088)
!11094 = !DILocation(line: 2212, column: 44, scope: !11088)
!11095 = !DILocation(line: 2212, column: 2, scope: !11088)
!11096 = distinct !{!11096, !11090, !11097}
!11097 = !DILocation(line: 2213, column: 30, scope: !11085)
!11098 = !DILocation(line: 2214, column: 9, scope: !11070)
!11099 = !DILocation(line: 2214, column: 2, scope: !11070)
!11100 = !DILocation(line: 2215, column: 1, scope: !11070)
!11101 = distinct !DISubprogram(name: "hw_cfg_broad_storm", scope: !3, file: !3, line: 2225, type: !10834, scopeLine: 2226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11102 = !DILocalVariable(name: "hw", arg: 1, scope: !11101, file: !3, line: 2225, type: !8002)
!11103 = !DILocation(line: 2225, column: 47, scope: !11101)
!11104 = !DILocalVariable(name: "percent", arg: 2, scope: !11101, file: !3, line: 2225, type: !794)
!11105 = !DILocation(line: 2225, column: 54, scope: !11101)
!11106 = !DILocation(line: 2227, column: 6, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 2227, column: 6)
!11108 = !DILocation(line: 2227, column: 14, scope: !11107)
!11109 = !DILocation(line: 2227, column: 6, scope: !11101)
!11110 = !DILocation(line: 2228, column: 11, scope: !11107)
!11111 = !DILocation(line: 2228, column: 3, scope: !11107)
!11112 = !DILocation(line: 2230, column: 21, scope: !11101)
!11113 = !DILocation(line: 2230, column: 25, scope: !11101)
!11114 = !DILocation(line: 2230, column: 2, scope: !11101)
!11115 = !DILocation(line: 2231, column: 21, scope: !11101)
!11116 = !DILocation(line: 2231, column: 2, scope: !11101)
!11117 = !DILocation(line: 2232, column: 30, scope: !11101)
!11118 = !DILocation(line: 2232, column: 2, scope: !11101)
!11119 = !DILocation(line: 2232, column: 6, scope: !11101)
!11120 = !DILocation(line: 2232, column: 18, scope: !11101)
!11121 = !DILocation(line: 2232, column: 28, scope: !11101)
!11122 = !DILocation(line: 2233, column: 1, scope: !11101)
!11123 = distinct !DISubprogram(name: "sw_ena_broad_storm", scope: !3, file: !3, line: 2194, type: !11124, scopeLine: 2195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11124 = !DISubroutineType(types: !11125)
!11125 = !{null, !8002, !32}
!11126 = !DILocalVariable(name: "hw", arg: 1, scope: !11123, file: !3, line: 2194, type: !8002)
!11127 = !DILocation(line: 2194, column: 47, scope: !11123)
!11128 = !DILocalVariable(name: "port", arg: 2, scope: !11123, file: !3, line: 2194, type: !32)
!11129 = !DILocation(line: 2194, column: 55, scope: !11123)
!11130 = !DILocation(line: 2196, column: 21, scope: !11123)
!11131 = !DILocation(line: 2196, column: 25, scope: !11123)
!11132 = !DILocation(line: 2196, column: 29, scope: !11123)
!11133 = !DILocation(line: 2196, column: 41, scope: !11123)
!11134 = !DILocation(line: 2196, column: 2, scope: !11123)
!11135 = !DILocation(line: 2197, column: 23, scope: !11123)
!11136 = !DILocation(line: 2197, column: 27, scope: !11123)
!11137 = !DILocation(line: 2197, column: 2, scope: !11123)
!11138 = !DILocation(line: 2198, column: 1, scope: !11123)
!11139 = distinct !DISubprogram(name: "sw_init_prio", scope: !3, file: !3, line: 2578, type: !8272, scopeLine: 2579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11140 = !DILocalVariable(name: "hw", arg: 1, scope: !11139, file: !3, line: 2578, type: !8002)
!11141 = !DILocation(line: 2578, column: 41, scope: !11139)
!11142 = !DILocalVariable(name: "port", scope: !11139, file: !3, line: 2580, type: !32)
!11143 = !DILocation(line: 2580, column: 6, scope: !11139)
!11144 = !DILocalVariable(name: "tos", scope: !11139, file: !3, line: 2581, type: !32)
!11145 = !DILocation(line: 2581, column: 6, scope: !11139)
!11146 = !DILocalVariable(name: "sw", scope: !11139, file: !3, line: 2582, type: !7794)
!11147 = !DILocation(line: 2582, column: 21, scope: !11139)
!11148 = !DILocation(line: 2582, column: 26, scope: !11139)
!11149 = !DILocation(line: 2582, column: 30, scope: !11139)
!11150 = !DILocation(line: 2588, column: 2, scope: !11139)
!11151 = !DILocation(line: 2588, column: 6, scope: !11139)
!11152 = !DILocation(line: 2588, column: 18, scope: !11139)
!11153 = !DILocation(line: 2589, column: 2, scope: !11139)
!11154 = !DILocation(line: 2589, column: 6, scope: !11139)
!11155 = !DILocation(line: 2589, column: 18, scope: !11139)
!11156 = !DILocation(line: 2590, column: 2, scope: !11139)
!11157 = !DILocation(line: 2590, column: 6, scope: !11139)
!11158 = !DILocation(line: 2590, column: 18, scope: !11139)
!11159 = !DILocation(line: 2591, column: 2, scope: !11139)
!11160 = !DILocation(line: 2591, column: 6, scope: !11139)
!11161 = !DILocation(line: 2591, column: 18, scope: !11139)
!11162 = !DILocation(line: 2592, column: 2, scope: !11139)
!11163 = !DILocation(line: 2592, column: 6, scope: !11139)
!11164 = !DILocation(line: 2592, column: 18, scope: !11139)
!11165 = !DILocation(line: 2593, column: 2, scope: !11139)
!11166 = !DILocation(line: 2593, column: 6, scope: !11139)
!11167 = !DILocation(line: 2593, column: 18, scope: !11139)
!11168 = !DILocation(line: 2594, column: 2, scope: !11139)
!11169 = !DILocation(line: 2594, column: 6, scope: !11139)
!11170 = !DILocation(line: 2594, column: 18, scope: !11139)
!11171 = !DILocation(line: 2595, column: 2, scope: !11139)
!11172 = !DILocation(line: 2595, column: 6, scope: !11139)
!11173 = !DILocation(line: 2595, column: 18, scope: !11139)
!11174 = !DILocation(line: 2601, column: 11, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 2601, column: 2)
!11176 = !DILocation(line: 2601, column: 7, scope: !11175)
!11177 = !DILocation(line: 2601, column: 16, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 2601, column: 2)
!11179 = !DILocation(line: 2601, column: 20, scope: !11178)
!11180 = !DILocation(line: 2601, column: 2, scope: !11175)
!11181 = !DILocation(line: 2602, column: 3, scope: !11178)
!11182 = !DILocation(line: 2602, column: 7, scope: !11178)
!11183 = !DILocation(line: 2602, column: 16, scope: !11178)
!11184 = !DILocation(line: 2602, column: 21, scope: !11178)
!11185 = !DILocation(line: 2601, column: 43, scope: !11178)
!11186 = !DILocation(line: 2601, column: 2, scope: !11178)
!11187 = distinct !{!11187, !11180, !11188}
!11188 = !DILocation(line: 2602, column: 23, scope: !11175)
!11189 = !DILocation(line: 2605, column: 12, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 2605, column: 2)
!11191 = !DILocation(line: 2605, column: 7, scope: !11190)
!11192 = !DILocation(line: 2605, column: 17, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 2605, column: 2)
!11194 = !DILocation(line: 2605, column: 22, scope: !11193)
!11195 = !DILocation(line: 2605, column: 2, scope: !11190)
!11196 = !DILocation(line: 2606, column: 22, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 2605, column: 48)
!11198 = !DILocation(line: 2606, column: 26, scope: !11197)
!11199 = !DILocation(line: 2606, column: 3, scope: !11197)
!11200 = !DILocation(line: 2607, column: 19, scope: !11197)
!11201 = !DILocation(line: 2607, column: 23, scope: !11197)
!11202 = !DILocation(line: 2607, column: 3, scope: !11197)
!11203 = !DILocation(line: 2608, column: 17, scope: !11197)
!11204 = !DILocation(line: 2608, column: 21, scope: !11197)
!11205 = !DILocation(line: 2608, column: 3, scope: !11197)
!11206 = !DILocation(line: 2609, column: 22, scope: !11197)
!11207 = !DILocation(line: 2609, column: 26, scope: !11197)
!11208 = !DILocation(line: 2609, column: 3, scope: !11197)
!11209 = !DILocation(line: 2611, column: 3, scope: !11197)
!11210 = !DILocation(line: 2611, column: 7, scope: !11197)
!11211 = !DILocation(line: 2611, column: 16, scope: !11197)
!11212 = !DILocation(line: 2611, column: 22, scope: !11197)
!11213 = !DILocation(line: 2611, column: 32, scope: !11197)
!11214 = !DILocation(line: 2612, column: 21, scope: !11197)
!11215 = !DILocation(line: 2612, column: 25, scope: !11197)
!11216 = !DILocation(line: 2612, column: 31, scope: !11197)
!11217 = !DILocation(line: 2612, column: 35, scope: !11197)
!11218 = !DILocation(line: 2612, column: 44, scope: !11197)
!11219 = !DILocation(line: 2612, column: 50, scope: !11197)
!11220 = !DILocation(line: 2612, column: 3, scope: !11197)
!11221 = !DILocation(line: 2613, column: 2, scope: !11197)
!11222 = !DILocation(line: 2605, column: 44, scope: !11193)
!11223 = !DILocation(line: 2605, column: 2, scope: !11193)
!11224 = distinct !{!11224, !11195, !11225}
!11225 = !DILocation(line: 2613, column: 2, scope: !11190)
!11226 = !DILocation(line: 2614, column: 26, scope: !11139)
!11227 = !DILocation(line: 2614, column: 2, scope: !11139)
!11228 = !DILocation(line: 2615, column: 1, scope: !11139)
!11229 = distinct !DISubprogram(name: "sw_init_mirror", scope: !3, file: !3, line: 2401, type: !8272, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11230 = !DILocalVariable(name: "hw", arg: 1, scope: !11229, file: !3, line: 2401, type: !8002)
!11231 = !DILocation(line: 2401, column: 43, scope: !11229)
!11232 = !DILocalVariable(name: "port", scope: !11229, file: !3, line: 2403, type: !32)
!11233 = !DILocation(line: 2403, column: 6, scope: !11229)
!11234 = !DILocation(line: 2405, column: 12, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 2405, column: 2)
!11236 = !DILocation(line: 2405, column: 7, scope: !11235)
!11237 = !DILocation(line: 2405, column: 17, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11235, file: !3, line: 2405, column: 2)
!11239 = !DILocation(line: 2405, column: 22, scope: !11238)
!11240 = !DILocation(line: 2405, column: 2, scope: !11235)
!11241 = !DILocation(line: 2406, column: 27, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 2405, column: 48)
!11243 = !DILocation(line: 2406, column: 31, scope: !11242)
!11244 = !DILocation(line: 2406, column: 3, scope: !11242)
!11245 = !DILocation(line: 2407, column: 22, scope: !11242)
!11246 = !DILocation(line: 2407, column: 26, scope: !11242)
!11247 = !DILocation(line: 2407, column: 3, scope: !11242)
!11248 = !DILocation(line: 2408, column: 22, scope: !11242)
!11249 = !DILocation(line: 2408, column: 26, scope: !11242)
!11250 = !DILocation(line: 2408, column: 3, scope: !11242)
!11251 = !DILocation(line: 2409, column: 2, scope: !11242)
!11252 = !DILocation(line: 2405, column: 44, scope: !11238)
!11253 = !DILocation(line: 2405, column: 2, scope: !11238)
!11254 = distinct !{!11254, !11240, !11255}
!11255 = !DILocation(line: 2409, column: 2, scope: !11235)
!11256 = !DILocation(line: 2410, column: 22, scope: !11229)
!11257 = !DILocation(line: 2410, column: 2, scope: !11229)
!11258 = !DILocation(line: 2411, column: 1, scope: !11229)
!11259 = distinct !DISubprogram(name: "sw_init_prio_rate", scope: !3, file: !3, line: 2257, type: !8272, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11260 = !DILocalVariable(name: "hw", arg: 1, scope: !11259, file: !3, line: 2257, type: !8002)
!11261 = !DILocation(line: 2257, column: 46, scope: !11259)
!11262 = !DILocalVariable(name: "port", scope: !11259, file: !3, line: 2259, type: !32)
!11263 = !DILocation(line: 2259, column: 6, scope: !11259)
!11264 = !DILocalVariable(name: "prio", scope: !11259, file: !3, line: 2260, type: !32)
!11265 = !DILocation(line: 2260, column: 6, scope: !11259)
!11266 = !DILocalVariable(name: "sw", scope: !11259, file: !3, line: 2261, type: !7794)
!11267 = !DILocation(line: 2261, column: 21, scope: !11259)
!11268 = !DILocation(line: 2261, column: 26, scope: !11259)
!11269 = !DILocation(line: 2261, column: 30, scope: !11259)
!11270 = !DILocation(line: 2263, column: 12, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 2263, column: 2)
!11272 = !DILocation(line: 2263, column: 7, scope: !11271)
!11273 = !DILocation(line: 2263, column: 17, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11271, file: !3, line: 2263, column: 2)
!11275 = !DILocation(line: 2263, column: 22, scope: !11274)
!11276 = !DILocation(line: 2263, column: 2, scope: !11271)
!11277 = !DILocation(line: 2264, column: 13, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11279, file: !3, line: 2264, column: 3)
!11279 = distinct !DILexicalBlock(scope: !11274, file: !3, line: 2263, column: 48)
!11280 = !DILocation(line: 2264, column: 8, scope: !11278)
!11281 = !DILocation(line: 2264, column: 18, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 2264, column: 3)
!11283 = !DILocation(line: 2264, column: 23, scope: !11282)
!11284 = !DILocation(line: 2264, column: 3, scope: !11278)
!11285 = !DILocation(line: 2266, column: 4, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 2264, column: 46)
!11287 = !DILocation(line: 2266, column: 8, scope: !11286)
!11288 = !DILocation(line: 2266, column: 17, scope: !11286)
!11289 = !DILocation(line: 2266, column: 23, scope: !11286)
!11290 = !DILocation(line: 2266, column: 31, scope: !11286)
!11291 = !DILocation(line: 2266, column: 37, scope: !11286)
!11292 = !DILocation(line: 2265, column: 4, scope: !11286)
!11293 = !DILocation(line: 2265, column: 8, scope: !11286)
!11294 = !DILocation(line: 2265, column: 17, scope: !11286)
!11295 = !DILocation(line: 2265, column: 23, scope: !11286)
!11296 = !DILocation(line: 2265, column: 31, scope: !11286)
!11297 = !DILocation(line: 2265, column: 37, scope: !11286)
!11298 = !DILocation(line: 2267, column: 3, scope: !11286)
!11299 = !DILocation(line: 2264, column: 42, scope: !11282)
!11300 = !DILocation(line: 2264, column: 3, scope: !11282)
!11301 = distinct !{!11301, !11284, !11302}
!11302 = !DILocation(line: 2267, column: 3, scope: !11278)
!11303 = !DILocation(line: 2268, column: 20, scope: !11279)
!11304 = !DILocation(line: 2268, column: 24, scope: !11279)
!11305 = !DILocation(line: 2268, column: 3, scope: !11279)
!11306 = !DILocation(line: 2269, column: 2, scope: !11279)
!11307 = !DILocation(line: 2263, column: 44, scope: !11274)
!11308 = !DILocation(line: 2263, column: 2, scope: !11274)
!11309 = distinct !{!11309, !11276, !11310}
!11310 = !DILocation(line: 2269, column: 2, scope: !11271)
!11311 = !DILocation(line: 2270, column: 1, scope: !11259)
!11312 = distinct !DISubprogram(name: "sw_init_vlan", scope: !3, file: !3, line: 2640, type: !8272, scopeLine: 2641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11313 = !DILocalVariable(name: "hw", arg: 1, scope: !11312, file: !3, line: 2640, type: !8002)
!11314 = !DILocation(line: 2640, column: 41, scope: !11312)
!11315 = !DILocalVariable(name: "port", scope: !11312, file: !3, line: 2642, type: !32)
!11316 = !DILocation(line: 2642, column: 6, scope: !11312)
!11317 = !DILocalVariable(name: "entry", scope: !11312, file: !3, line: 2643, type: !32)
!11318 = !DILocation(line: 2643, column: 6, scope: !11312)
!11319 = !DILocalVariable(name: "sw", scope: !11312, file: !3, line: 2644, type: !7794)
!11320 = !DILocation(line: 2644, column: 21, scope: !11312)
!11321 = !DILocation(line: 2644, column: 26, scope: !11312)
!11322 = !DILocation(line: 2644, column: 30, scope: !11312)
!11323 = !DILocation(line: 2647, column: 13, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 2647, column: 2)
!11325 = !DILocation(line: 2647, column: 7, scope: !11324)
!11326 = !DILocation(line: 2647, column: 18, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 2647, column: 2)
!11328 = !DILocation(line: 2647, column: 24, scope: !11327)
!11329 = !DILocation(line: 2647, column: 2, scope: !11324)
!11330 = !DILocation(line: 2648, column: 19, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 2647, column: 55)
!11332 = !DILocation(line: 2648, column: 23, scope: !11331)
!11333 = !DILocation(line: 2649, column: 5, scope: !11331)
!11334 = !DILocation(line: 2649, column: 9, scope: !11331)
!11335 = !DILocation(line: 2649, column: 20, scope: !11331)
!11336 = !DILocation(line: 2649, column: 27, scope: !11331)
!11337 = !DILocation(line: 2650, column: 5, scope: !11331)
!11338 = !DILocation(line: 2650, column: 9, scope: !11331)
!11339 = !DILocation(line: 2650, column: 20, scope: !11331)
!11340 = !DILocation(line: 2650, column: 27, scope: !11331)
!11341 = !DILocation(line: 2651, column: 5, scope: !11331)
!11342 = !DILocation(line: 2651, column: 9, scope: !11331)
!11343 = !DILocation(line: 2651, column: 20, scope: !11331)
!11344 = !DILocation(line: 2651, column: 27, scope: !11331)
!11345 = !DILocation(line: 2648, column: 3, scope: !11331)
!11346 = !DILocation(line: 2652, column: 2, scope: !11331)
!11347 = !DILocation(line: 2647, column: 51, scope: !11327)
!11348 = !DILocation(line: 2647, column: 2, scope: !11327)
!11349 = distinct !{!11349, !11329, !11350}
!11350 = !DILocation(line: 2652, column: 2, scope: !11324)
!11351 = !DILocation(line: 2654, column: 12, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 2654, column: 2)
!11353 = !DILocation(line: 2654, column: 7, scope: !11352)
!11354 = !DILocation(line: 2654, column: 17, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 2654, column: 2)
!11356 = !DILocation(line: 2654, column: 22, scope: !11355)
!11357 = !DILocation(line: 2654, column: 2, scope: !11352)
!11358 = !DILocation(line: 2655, column: 20, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 2654, column: 48)
!11360 = !DILocation(line: 2655, column: 24, scope: !11359)
!11361 = !DILocation(line: 2655, column: 31, scope: !11359)
!11362 = !DILocation(line: 2655, column: 35, scope: !11359)
!11363 = !DILocation(line: 2655, column: 44, scope: !11359)
!11364 = !DILocation(line: 2655, column: 50, scope: !11359)
!11365 = !DILocation(line: 2655, column: 3, scope: !11359)
!11366 = !DILocation(line: 2656, column: 3, scope: !11359)
!11367 = !DILocation(line: 2656, column: 7, scope: !11359)
!11368 = !DILocation(line: 2656, column: 16, scope: !11359)
!11369 = !DILocation(line: 2656, column: 22, scope: !11359)
!11370 = !DILocation(line: 2656, column: 29, scope: !11359)
!11371 = !DILocation(line: 2657, column: 2, scope: !11359)
!11372 = !DILocation(line: 2654, column: 44, scope: !11355)
!11373 = !DILocation(line: 2654, column: 2, scope: !11355)
!11374 = distinct !{!11374, !11357, !11375}
!11375 = !DILocation(line: 2657, column: 2, scope: !11352)
!11376 = !DILocation(line: 2658, column: 1, scope: !11312)
!11377 = distinct !DISubprogram(name: "sw_init_stp", scope: !3, file: !3, line: 2848, type: !8272, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11378 = !DILocalVariable(name: "hw", arg: 1, scope: !11377, file: !3, line: 2848, type: !8002)
!11379 = !DILocation(line: 2848, column: 40, scope: !11377)
!11380 = !DILocalVariable(name: "entry", scope: !11377, file: !3, line: 2850, type: !11381)
!11381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7799, size: 64)
!11382 = !DILocation(line: 2850, column: 24, scope: !11377)
!11383 = !DILocation(line: 2852, column: 11, scope: !11377)
!11384 = !DILocation(line: 2852, column: 15, scope: !11377)
!11385 = !DILocation(line: 2852, column: 27, scope: !11377)
!11386 = !DILocation(line: 2852, column: 8, scope: !11377)
!11387 = !DILocation(line: 2853, column: 2, scope: !11377)
!11388 = !DILocation(line: 2853, column: 9, scope: !11377)
!11389 = !DILocation(line: 2853, column: 21, scope: !11377)
!11390 = !DILocation(line: 2854, column: 2, scope: !11377)
!11391 = !DILocation(line: 2854, column: 9, scope: !11377)
!11392 = !DILocation(line: 2854, column: 21, scope: !11377)
!11393 = !DILocation(line: 2855, column: 2, scope: !11377)
!11394 = !DILocation(line: 2855, column: 9, scope: !11377)
!11395 = !DILocation(line: 2855, column: 21, scope: !11377)
!11396 = !DILocation(line: 2856, column: 2, scope: !11377)
!11397 = !DILocation(line: 2856, column: 9, scope: !11377)
!11398 = !DILocation(line: 2856, column: 21, scope: !11377)
!11399 = !DILocation(line: 2857, column: 2, scope: !11377)
!11400 = !DILocation(line: 2857, column: 9, scope: !11377)
!11401 = !DILocation(line: 2857, column: 21, scope: !11377)
!11402 = !DILocation(line: 2858, column: 2, scope: !11377)
!11403 = !DILocation(line: 2858, column: 9, scope: !11377)
!11404 = !DILocation(line: 2858, column: 21, scope: !11377)
!11405 = !DILocation(line: 2859, column: 2, scope: !11377)
!11406 = !DILocation(line: 2859, column: 9, scope: !11377)
!11407 = !DILocation(line: 2859, column: 15, scope: !11377)
!11408 = !DILocation(line: 2860, column: 2, scope: !11377)
!11409 = !DILocation(line: 2860, column: 9, scope: !11377)
!11410 = !DILocation(line: 2860, column: 18, scope: !11377)
!11411 = !DILocation(line: 2861, column: 2, scope: !11377)
!11412 = !DILocation(line: 2861, column: 9, scope: !11377)
!11413 = !DILocation(line: 2861, column: 15, scope: !11377)
!11414 = !DILocation(line: 2862, column: 21, scope: !11377)
!11415 = !DILocation(line: 2863, column: 3, scope: !11377)
!11416 = !DILocation(line: 2863, column: 10, scope: !11377)
!11417 = !DILocation(line: 2863, column: 20, scope: !11377)
!11418 = !DILocation(line: 2863, column: 27, scope: !11377)
!11419 = !DILocation(line: 2864, column: 3, scope: !11377)
!11420 = !DILocation(line: 2864, column: 10, scope: !11377)
!11421 = !DILocation(line: 2864, column: 20, scope: !11377)
!11422 = !DILocation(line: 2864, column: 27, scope: !11377)
!11423 = !DILocation(line: 2865, column: 3, scope: !11377)
!11424 = !DILocation(line: 2865, column: 10, scope: !11377)
!11425 = !DILocation(line: 2865, column: 19, scope: !11377)
!11426 = !DILocation(line: 2865, column: 26, scope: !11377)
!11427 = !DILocation(line: 2862, column: 2, scope: !11377)
!11428 = !DILocation(line: 2866, column: 1, scope: !11377)
!11429 = distinct !DISubprogram(name: "sw_chk", scope: !3, file: !3, line: 2085, type: !11430, scopeLine: 2086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11430 = !DISubroutineType(types: !11431)
!11431 = !{!32, !8002, !987, !581}
!11432 = !DILocalVariable(name: "hw", arg: 1, scope: !11429, file: !3, line: 2085, type: !8002)
!11433 = !DILocation(line: 2085, column: 34, scope: !11429)
!11434 = !DILocalVariable(name: "addr", arg: 2, scope: !11429, file: !3, line: 2085, type: !987)
!11435 = !DILocation(line: 2085, column: 42, scope: !11429)
!11436 = !DILocalVariable(name: "bits", arg: 3, scope: !11429, file: !3, line: 2085, type: !581)
!11437 = !DILocation(line: 2085, column: 52, scope: !11429)
!11438 = !DILocalVariable(name: "data", scope: !11429, file: !3, line: 2087, type: !581)
!11439 = !DILocation(line: 2087, column: 6, scope: !11429)
!11440 = !DILocation(line: 2089, column: 15, scope: !11429)
!11441 = !DILocation(line: 2089, column: 19, scope: !11429)
!11442 = !DILocation(line: 2089, column: 24, scope: !11429)
!11443 = !DILocation(line: 2089, column: 22, scope: !11429)
!11444 = !DILocation(line: 2089, column: 9, scope: !11429)
!11445 = !DILocation(line: 2089, column: 7, scope: !11429)
!11446 = !DILocation(line: 2090, column: 10, scope: !11429)
!11447 = !DILocation(line: 2090, column: 17, scope: !11429)
!11448 = !DILocation(line: 2090, column: 15, scope: !11429)
!11449 = !DILocation(line: 2090, column: 26, scope: !11429)
!11450 = !DILocation(line: 2090, column: 23, scope: !11429)
!11451 = !DILocation(line: 2090, column: 2, scope: !11429)
!11452 = distinct !DISubprogram(name: "sw_enable", scope: !3, file: !3, line: 4241, type: !11124, scopeLine: 4242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11453 = !DILocalVariable(name: "hw", arg: 1, scope: !11452, file: !3, line: 4241, type: !8002)
!11454 = !DILocation(line: 4241, column: 38, scope: !11452)
!11455 = !DILocalVariable(name: "enable", arg: 2, scope: !11452, file: !3, line: 4241, type: !32)
!11456 = !DILocation(line: 4241, column: 46, scope: !11452)
!11457 = !DILocalVariable(name: "port", scope: !11452, file: !3, line: 4243, type: !32)
!11458 = !DILocation(line: 4243, column: 6, scope: !11452)
!11459 = !DILocation(line: 4245, column: 12, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 4245, column: 2)
!11461 = !DILocation(line: 4245, column: 7, scope: !11460)
!11462 = !DILocation(line: 4245, column: 17, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 4245, column: 2)
!11464 = !DILocation(line: 4245, column: 22, scope: !11463)
!11465 = !DILocation(line: 4245, column: 2, scope: !11460)
!11466 = !DILocation(line: 4246, column: 7, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 4246, column: 7)
!11468 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 4245, column: 49)
!11469 = !DILocation(line: 4246, column: 11, scope: !11467)
!11470 = !DILocation(line: 4246, column: 21, scope: !11467)
!11471 = !DILocation(line: 4246, column: 7, scope: !11468)
!11472 = !DILocation(line: 4248, column: 26, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 4246, column: 26)
!11474 = !DILocation(line: 4248, column: 30, scope: !11473)
!11475 = !DILocation(line: 4249, column: 23, scope: !11473)
!11476 = !DILocation(line: 4249, column: 20, scope: !11473)
!11477 = !DILocation(line: 4249, column: 15, scope: !11473)
!11478 = !DILocation(line: 4249, column: 5, scope: !11473)
!11479 = !DILocation(line: 4248, column: 4, scope: !11473)
!11480 = !DILocation(line: 4250, column: 23, scope: !11473)
!11481 = !DILocation(line: 4250, column: 27, scope: !11473)
!11482 = !DILocation(line: 4250, column: 4, scope: !11473)
!11483 = !DILocation(line: 4251, column: 3, scope: !11473)
!11484 = !DILocation(line: 4252, column: 26, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 4251, column: 10)
!11486 = !DILocation(line: 4252, column: 30, scope: !11485)
!11487 = !DILocation(line: 4252, column: 4, scope: !11485)
!11488 = !DILocation(line: 4253, column: 23, scope: !11485)
!11489 = !DILocation(line: 4253, column: 27, scope: !11485)
!11490 = !DILocation(line: 4253, column: 4, scope: !11485)
!11491 = !DILocation(line: 4255, column: 2, scope: !11468)
!11492 = !DILocation(line: 4245, column: 45, scope: !11463)
!11493 = !DILocation(line: 4245, column: 2, scope: !11463)
!11494 = distinct !{!11494, !11465, !11495}
!11495 = !DILocation(line: 4255, column: 2, scope: !11460)
!11496 = !DILocation(line: 4256, column: 6, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 4256, column: 6)
!11498 = !DILocation(line: 4256, column: 10, scope: !11497)
!11499 = !DILocation(line: 4256, column: 20, scope: !11497)
!11500 = !DILocation(line: 4256, column: 6, scope: !11452)
!11501 = !DILocation(line: 4257, column: 22, scope: !11497)
!11502 = !DILocation(line: 4257, column: 3, scope: !11497)
!11503 = !DILocation(line: 4259, column: 22, scope: !11497)
!11504 = !DILocation(line: 4259, column: 3, scope: !11497)
!11505 = !DILocation(line: 4261, column: 6, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 4261, column: 6)
!11507 = !DILocation(line: 4261, column: 6, scope: !11452)
!11508 = !DILocation(line: 4262, column: 10, scope: !11506)
!11509 = !DILocation(line: 4262, column: 3, scope: !11506)
!11510 = !DILocation(line: 4263, column: 9, scope: !11452)
!11511 = !DILocation(line: 4263, column: 17, scope: !11452)
!11512 = !DILocation(line: 4263, column: 21, scope: !11452)
!11513 = !DILocation(line: 4263, column: 24, scope: !11452)
!11514 = !DILocation(line: 4263, column: 2, scope: !11452)
!11515 = !DILocation(line: 4264, column: 1, scope: !11452)
!11516 = distinct !DISubprogram(name: "sw_cfg_broad_storm", scope: !3, file: !3, line: 2141, type: !10834, scopeLine: 2142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11517 = !DILocalVariable(name: "hw", arg: 1, scope: !11516, file: !3, line: 2141, type: !8002)
!11518 = !DILocation(line: 2141, column: 47, scope: !11516)
!11519 = !DILocalVariable(name: "percent", arg: 2, scope: !11516, file: !3, line: 2141, type: !794)
!11520 = !DILocation(line: 2141, column: 54, scope: !11516)
!11521 = !DILocalVariable(name: "data", scope: !11516, file: !3, line: 2143, type: !581)
!11522 = !DILocation(line: 2143, column: 6, scope: !11516)
!11523 = !DILocalVariable(name: "value", scope: !11516, file: !3, line: 2144, type: !987)
!11524 = !DILocation(line: 2144, column: 6, scope: !11516)
!11525 = !DILocation(line: 2144, column: 51, scope: !11516)
!11526 = !DILocation(line: 2144, column: 45, scope: !11516)
!11527 = !DILocation(line: 2144, column: 43, scope: !11516)
!11528 = !DILocation(line: 2144, column: 59, scope: !11516)
!11529 = !DILocation(line: 2146, column: 6, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11516, file: !3, line: 2146, column: 6)
!11531 = !DILocation(line: 2146, column: 12, scope: !11530)
!11532 = !DILocation(line: 2146, column: 6, scope: !11516)
!11533 = !DILocation(line: 2147, column: 9, scope: !11530)
!11534 = !DILocation(line: 2147, column: 3, scope: !11530)
!11535 = !DILocation(line: 2149, column: 15, scope: !11516)
!11536 = !DILocation(line: 2149, column: 19, scope: !11516)
!11537 = !DILocation(line: 2149, column: 22, scope: !11516)
!11538 = !DILocation(line: 2149, column: 9, scope: !11516)
!11539 = !DILocation(line: 2149, column: 7, scope: !11516)
!11540 = !DILocation(line: 2150, column: 7, scope: !11516)
!11541 = !DILocation(line: 2151, column: 12, scope: !11516)
!11542 = !DILocation(line: 2151, column: 18, scope: !11516)
!11543 = !DILocation(line: 2151, column: 28, scope: !11516)
!11544 = !DILocation(line: 2151, column: 38, scope: !11516)
!11545 = !DILocation(line: 2151, column: 44, scope: !11516)
!11546 = !DILocation(line: 2151, column: 54, scope: !11516)
!11547 = !DILocation(line: 2151, column: 34, scope: !11516)
!11548 = !DILocation(line: 2151, column: 7, scope: !11516)
!11549 = !DILocation(line: 2152, column: 9, scope: !11516)
!11550 = !DILocation(line: 2152, column: 15, scope: !11516)
!11551 = !DILocation(line: 2152, column: 19, scope: !11516)
!11552 = !DILocation(line: 2152, column: 22, scope: !11516)
!11553 = !DILocation(line: 2152, column: 2, scope: !11516)
!11554 = !DILocation(line: 2153, column: 1, scope: !11516)
!11555 = distinct !DISubprogram(name: "sw_dis_broad_storm", scope: !3, file: !3, line: 2182, type: !11124, scopeLine: 2183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11556 = !DILocalVariable(name: "hw", arg: 1, scope: !11555, file: !3, line: 2182, type: !8002)
!11557 = !DILocation(line: 2182, column: 47, scope: !11555)
!11558 = !DILocalVariable(name: "port", arg: 2, scope: !11555, file: !3, line: 2182, type: !32)
!11559 = !DILocation(line: 2182, column: 55, scope: !11555)
!11560 = !DILocation(line: 2184, column: 23, scope: !11555)
!11561 = !DILocation(line: 2184, column: 27, scope: !11555)
!11562 = !DILocation(line: 2184, column: 2, scope: !11555)
!11563 = !DILocation(line: 2185, column: 1, scope: !11555)
!11564 = distinct !DISubprogram(name: "sw_cfg", scope: !3, file: !3, line: 2102, type: !11565, scopeLine: 2103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11565 = !DISubroutineType(types: !11566)
!11566 = !{null, !8002, !987, !581, !32}
!11567 = !DILocalVariable(name: "hw", arg: 1, scope: !11564, file: !3, line: 2102, type: !8002)
!11568 = !DILocation(line: 2102, column: 35, scope: !11564)
!11569 = !DILocalVariable(name: "addr", arg: 2, scope: !11564, file: !3, line: 2102, type: !987)
!11570 = !DILocation(line: 2102, column: 43, scope: !11564)
!11571 = !DILocalVariable(name: "bits", arg: 3, scope: !11564, file: !3, line: 2102, type: !581)
!11572 = !DILocation(line: 2102, column: 53, scope: !11564)
!11573 = !DILocalVariable(name: "set", arg: 4, scope: !11564, file: !3, line: 2102, type: !32)
!11574 = !DILocation(line: 2102, column: 63, scope: !11564)
!11575 = !DILocalVariable(name: "data", scope: !11564, file: !3, line: 2104, type: !581)
!11576 = !DILocation(line: 2104, column: 6, scope: !11564)
!11577 = !DILocation(line: 2106, column: 15, scope: !11564)
!11578 = !DILocation(line: 2106, column: 19, scope: !11564)
!11579 = !DILocation(line: 2106, column: 24, scope: !11564)
!11580 = !DILocation(line: 2106, column: 22, scope: !11564)
!11581 = !DILocation(line: 2106, column: 9, scope: !11564)
!11582 = !DILocation(line: 2106, column: 7, scope: !11564)
!11583 = !DILocation(line: 2107, column: 6, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11564, file: !3, line: 2107, column: 6)
!11585 = !DILocation(line: 2107, column: 6, scope: !11564)
!11586 = !DILocation(line: 2108, column: 11, scope: !11584)
!11587 = !DILocation(line: 2108, column: 8, scope: !11584)
!11588 = !DILocation(line: 2108, column: 3, scope: !11584)
!11589 = !DILocation(line: 2110, column: 12, scope: !11584)
!11590 = !DILocation(line: 2110, column: 11, scope: !11584)
!11591 = !DILocation(line: 2110, column: 8, scope: !11584)
!11592 = !DILocation(line: 2111, column: 9, scope: !11564)
!11593 = !DILocation(line: 2111, column: 15, scope: !11564)
!11594 = !DILocation(line: 2111, column: 19, scope: !11564)
!11595 = !DILocation(line: 2111, column: 24, scope: !11564)
!11596 = !DILocation(line: 2111, column: 22, scope: !11564)
!11597 = !DILocation(line: 2111, column: 2, scope: !11564)
!11598 = !DILocation(line: 2112, column: 1, scope: !11564)
!11599 = distinct !DISubprogram(name: "port_cfg_broad_storm", scope: !3, file: !3, line: 2116, type: !11600, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11600 = !DISubroutineType(types: !11601)
!11601 = !{null, !8002, !32, !32}
!11602 = !DILocalVariable(name: "hw", arg: 1, scope: !11599, file: !3, line: 2116, type: !8002)
!11603 = !DILocation(line: 2116, column: 56, scope: !11599)
!11604 = !DILocalVariable(name: "p", arg: 2, scope: !11599, file: !3, line: 2116, type: !32)
!11605 = !DILocation(line: 2116, column: 64, scope: !11599)
!11606 = !DILocalVariable(name: "set", arg: 3, scope: !11599, file: !3, line: 2116, type: !32)
!11607 = !DILocation(line: 2116, column: 71, scope: !11599)
!11608 = !DILocation(line: 2118, column: 11, scope: !11599)
!11609 = !DILocation(line: 2118, column: 15, scope: !11599)
!11610 = !DILocation(line: 2119, column: 52, scope: !11599)
!11611 = !DILocation(line: 2118, column: 2, scope: !11599)
!11612 = !DILocation(line: 2120, column: 1, scope: !11599)
!11613 = distinct !DISubprogram(name: "port_cfg", scope: !3, file: !3, line: 1957, type: !11614, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{null, !8002, !32, !32, !581, !32}
!11616 = !DILocalVariable(name: "hw", arg: 1, scope: !11613, file: !3, line: 1957, type: !8002)
!11617 = !DILocation(line: 1957, column: 37, scope: !11613)
!11618 = !DILocalVariable(name: "port", arg: 2, scope: !11613, file: !3, line: 1957, type: !32)
!11619 = !DILocation(line: 1957, column: 45, scope: !11613)
!11620 = !DILocalVariable(name: "offset", arg: 3, scope: !11613, file: !3, line: 1957, type: !32)
!11621 = !DILocation(line: 1957, column: 55, scope: !11613)
!11622 = !DILocalVariable(name: "bits", arg: 4, scope: !11613, file: !3, line: 1957, type: !581)
!11623 = !DILocation(line: 1957, column: 67, scope: !11613)
!11624 = !DILocalVariable(name: "set", arg: 5, scope: !11613, file: !3, line: 1958, type: !32)
!11625 = !DILocation(line: 1958, column: 6, scope: !11613)
!11626 = !DILocalVariable(name: "addr", scope: !11613, file: !3, line: 1960, type: !987)
!11627 = !DILocation(line: 1960, column: 6, scope: !11613)
!11628 = !DILocalVariable(name: "data", scope: !11613, file: !3, line: 1961, type: !581)
!11629 = !DILocation(line: 1961, column: 6, scope: !11613)
!11630 = !DILocation(line: 1963, column: 2, scope: !11613)
!11631 = !DILocation(line: 1964, column: 10, scope: !11613)
!11632 = !DILocation(line: 1964, column: 7, scope: !11613)
!11633 = !DILocation(line: 1965, column: 15, scope: !11613)
!11634 = !DILocation(line: 1965, column: 19, scope: !11613)
!11635 = !DILocation(line: 1965, column: 24, scope: !11613)
!11636 = !DILocation(line: 1965, column: 22, scope: !11613)
!11637 = !DILocation(line: 1965, column: 9, scope: !11613)
!11638 = !DILocation(line: 1965, column: 7, scope: !11613)
!11639 = !DILocation(line: 1966, column: 6, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 1966, column: 6)
!11641 = !DILocation(line: 1966, column: 6, scope: !11613)
!11642 = !DILocation(line: 1967, column: 11, scope: !11640)
!11643 = !DILocation(line: 1967, column: 8, scope: !11640)
!11644 = !DILocation(line: 1967, column: 3, scope: !11640)
!11645 = !DILocation(line: 1969, column: 12, scope: !11640)
!11646 = !DILocation(line: 1969, column: 11, scope: !11640)
!11647 = !DILocation(line: 1969, column: 8, scope: !11640)
!11648 = !DILocation(line: 1970, column: 9, scope: !11613)
!11649 = !DILocation(line: 1970, column: 15, scope: !11613)
!11650 = !DILocation(line: 1970, column: 19, scope: !11613)
!11651 = !DILocation(line: 1970, column: 24, scope: !11613)
!11652 = !DILocation(line: 1970, column: 22, scope: !11613)
!11653 = !DILocation(line: 1970, column: 2, scope: !11613)
!11654 = !DILocation(line: 1971, column: 1, scope: !11613)
!11655 = distinct !DISubprogram(name: "sw_get_broad_storm", scope: !3, file: !3, line: 2162, type: !10773, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11656 = !DILocalVariable(name: "hw", arg: 1, scope: !11655, file: !3, line: 2162, type: !8002)
!11657 = !DILocation(line: 2162, column: 47, scope: !11655)
!11658 = !DILocalVariable(name: "percent", arg: 2, scope: !11655, file: !3, line: 2162, type: !793)
!11659 = !DILocation(line: 2162, column: 55, scope: !11655)
!11660 = !DILocalVariable(name: "num", scope: !11655, file: !3, line: 2164, type: !32)
!11661 = !DILocation(line: 2164, column: 6, scope: !11655)
!11662 = !DILocalVariable(name: "data", scope: !11655, file: !3, line: 2165, type: !581)
!11663 = !DILocation(line: 2165, column: 6, scope: !11655)
!11664 = !DILocation(line: 2167, column: 15, scope: !11655)
!11665 = !DILocation(line: 2167, column: 19, scope: !11655)
!11666 = !DILocation(line: 2167, column: 22, scope: !11655)
!11667 = !DILocation(line: 2167, column: 9, scope: !11655)
!11668 = !DILocation(line: 2167, column: 7, scope: !11655)
!11669 = !DILocation(line: 2168, column: 9, scope: !11655)
!11670 = !DILocation(line: 2168, column: 14, scope: !11655)
!11671 = !DILocation(line: 2168, column: 6, scope: !11655)
!11672 = !DILocation(line: 2169, column: 6, scope: !11655)
!11673 = !DILocation(line: 2170, column: 10, scope: !11655)
!11674 = !DILocation(line: 2170, column: 15, scope: !11655)
!11675 = !DILocation(line: 2170, column: 42, scope: !11655)
!11676 = !DILocation(line: 2170, column: 6, scope: !11655)
!11677 = !DILocalVariable(name: "__x", scope: !11678, file: !3, line: 2171, type: !32)
!11678 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 2171, column: 8)
!11679 = !DILocation(line: 2171, column: 8, scope: !11678)
!11680 = !DILocalVariable(name: "__d", scope: !11678, file: !3, line: 2171, type: !32)
!11681 = !DILocation(line: 2171, column: 6, scope: !11655)
!11682 = !DILocation(line: 2172, column: 18, scope: !11655)
!11683 = !DILocation(line: 2172, column: 13, scope: !11655)
!11684 = !DILocation(line: 2172, column: 3, scope: !11655)
!11685 = !DILocation(line: 2172, column: 11, scope: !11655)
!11686 = !DILocation(line: 2173, column: 1, scope: !11655)
!11687 = distinct !DISubprogram(name: "sw_dis_multi_queue", scope: !3, file: !3, line: 2567, type: !11124, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11688 = !DILocalVariable(name: "hw", arg: 1, scope: !11687, file: !3, line: 2567, type: !8002)
!11689 = !DILocation(line: 2567, column: 47, scope: !11687)
!11690 = !DILocalVariable(name: "port", arg: 2, scope: !11687, file: !3, line: 2567, type: !32)
!11691 = !DILocation(line: 2567, column: 55, scope: !11687)
!11692 = !DILocation(line: 2569, column: 16, scope: !11687)
!11693 = !DILocation(line: 2569, column: 20, scope: !11687)
!11694 = !DILocation(line: 2569, column: 2, scope: !11687)
!11695 = !DILocation(line: 2570, column: 1, scope: !11687)
!11696 = distinct !DISubprogram(name: "sw_dis_diffserv", scope: !3, file: !3, line: 2492, type: !11124, scopeLine: 2493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11697 = !DILocalVariable(name: "hw", arg: 1, scope: !11696, file: !3, line: 2492, type: !8002)
!11698 = !DILocation(line: 2492, column: 44, scope: !11696)
!11699 = !DILocalVariable(name: "port", arg: 2, scope: !11696, file: !3, line: 2492, type: !32)
!11700 = !DILocation(line: 2492, column: 52, scope: !11696)
!11701 = !DILocation(line: 2494, column: 20, scope: !11696)
!11702 = !DILocation(line: 2494, column: 24, scope: !11696)
!11703 = !DILocation(line: 2494, column: 2, scope: !11696)
!11704 = !DILocation(line: 2495, column: 1, scope: !11696)
!11705 = distinct !DISubprogram(name: "sw_dis_802_1p", scope: !3, file: !3, line: 2504, type: !11124, scopeLine: 2505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11706 = !DILocalVariable(name: "hw", arg: 1, scope: !11705, file: !3, line: 2504, type: !8002)
!11707 = !DILocation(line: 2504, column: 42, scope: !11705)
!11708 = !DILocalVariable(name: "port", arg: 2, scope: !11705, file: !3, line: 2504, type: !32)
!11709 = !DILocation(line: 2504, column: 50, scope: !11705)
!11710 = !DILocation(line: 2506, column: 18, scope: !11705)
!11711 = !DILocation(line: 2506, column: 22, scope: !11705)
!11712 = !DILocation(line: 2506, column: 2, scope: !11705)
!11713 = !DILocation(line: 2507, column: 1, scope: !11705)
!11714 = distinct !DISubprogram(name: "sw_cfg_replace_vid", scope: !3, file: !3, line: 2531, type: !11600, scopeLine: 2532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11715 = !DILocalVariable(name: "hw", arg: 1, scope: !11714, file: !3, line: 2531, type: !8002)
!11716 = !DILocation(line: 2531, column: 47, scope: !11714)
!11717 = !DILocalVariable(name: "port", arg: 2, scope: !11714, file: !3, line: 2531, type: !32)
!11718 = !DILocation(line: 2531, column: 55, scope: !11714)
!11719 = !DILocalVariable(name: "set", arg: 3, scope: !11714, file: !3, line: 2531, type: !32)
!11720 = !DILocation(line: 2531, column: 65, scope: !11714)
!11721 = !DILocation(line: 2533, column: 23, scope: !11714)
!11722 = !DILocation(line: 2533, column: 27, scope: !11714)
!11723 = !DILocation(line: 2533, column: 33, scope: !11714)
!11724 = !DILocation(line: 2533, column: 2, scope: !11714)
!11725 = !DILocation(line: 2534, column: 1, scope: !11714)
!11726 = distinct !DISubprogram(name: "sw_cfg_port_based", scope: !3, file: !3, line: 2544, type: !11727, scopeLine: 2545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11727 = !DISubroutineType(types: !11728)
!11728 = !{null, !8002, !32, !794}
!11729 = !DILocalVariable(name: "hw", arg: 1, scope: !11726, file: !3, line: 2544, type: !8002)
!11730 = !DILocation(line: 2544, column: 46, scope: !11726)
!11731 = !DILocalVariable(name: "port", arg: 2, scope: !11726, file: !3, line: 2544, type: !32)
!11732 = !DILocation(line: 2544, column: 54, scope: !11726)
!11733 = !DILocalVariable(name: "prio", arg: 3, scope: !11726, file: !3, line: 2544, type: !794)
!11734 = !DILocation(line: 2544, column: 63, scope: !11726)
!11735 = !DILocalVariable(name: "data", scope: !11726, file: !3, line: 2546, type: !581)
!11736 = !DILocation(line: 2546, column: 6, scope: !11726)
!11737 = !DILocation(line: 2548, column: 6, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 2548, column: 6)
!11739 = !DILocation(line: 2548, column: 11, scope: !11738)
!11740 = !DILocation(line: 2548, column: 6, scope: !11726)
!11741 = !DILocation(line: 2549, column: 8, scope: !11738)
!11742 = !DILocation(line: 2549, column: 3, scope: !11738)
!11743 = !DILocation(line: 2551, column: 45, scope: !11726)
!11744 = !DILocation(line: 2551, column: 2, scope: !11726)
!11745 = !DILocation(line: 2551, column: 6, scope: !11726)
!11746 = !DILocation(line: 2551, column: 18, scope: !11726)
!11747 = !DILocation(line: 2551, column: 27, scope: !11726)
!11748 = !DILocation(line: 2551, column: 33, scope: !11726)
!11749 = !DILocation(line: 2551, column: 43, scope: !11726)
!11750 = !DILocation(line: 2553, column: 11, scope: !11726)
!11751 = !DILocation(line: 2553, column: 15, scope: !11726)
!11752 = !DILocation(line: 2553, column: 2, scope: !11726)
!11753 = !DILocation(line: 2554, column: 7, scope: !11726)
!11754 = !DILocation(line: 2555, column: 10, scope: !11726)
!11755 = !DILocation(line: 2555, column: 15, scope: !11726)
!11756 = !DILocation(line: 2555, column: 7, scope: !11726)
!11757 = !DILocation(line: 2556, column: 11, scope: !11726)
!11758 = !DILocation(line: 2556, column: 15, scope: !11726)
!11759 = !DILocation(line: 2556, column: 48, scope: !11726)
!11760 = !DILocation(line: 2556, column: 2, scope: !11726)
!11761 = !DILocation(line: 2557, column: 1, scope: !11726)
!11762 = distinct !DISubprogram(name: "sw_cfg_replace_null_vid", scope: !3, file: !3, line: 2515, type: !11124, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11763 = !DILocalVariable(name: "hw", arg: 1, scope: !11762, file: !3, line: 2515, type: !8002)
!11764 = !DILocation(line: 2515, column: 52, scope: !11762)
!11765 = !DILocalVariable(name: "set", arg: 2, scope: !11762, file: !3, line: 2515, type: !32)
!11766 = !DILocation(line: 2515, column: 60, scope: !11762)
!11767 = !DILocation(line: 2517, column: 9, scope: !11762)
!11768 = !DILocation(line: 2517, column: 67, scope: !11762)
!11769 = !DILocation(line: 2517, column: 2, scope: !11762)
!11770 = !DILocation(line: 2518, column: 1, scope: !11762)
!11771 = distinct !DISubprogram(name: "port_cfg_prio", scope: !3, file: !3, line: 2455, type: !11600, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11772 = !DILocalVariable(name: "hw", arg: 1, scope: !11771, file: !3, line: 2455, type: !8002)
!11773 = !DILocation(line: 2455, column: 49, scope: !11771)
!11774 = !DILocalVariable(name: "p", arg: 2, scope: !11771, file: !3, line: 2455, type: !32)
!11775 = !DILocation(line: 2455, column: 57, scope: !11771)
!11776 = !DILocalVariable(name: "set", arg: 3, scope: !11771, file: !3, line: 2455, type: !32)
!11777 = !DILocation(line: 2455, column: 64, scope: !11771)
!11778 = !DILocation(line: 2457, column: 11, scope: !11771)
!11779 = !DILocation(line: 2457, column: 15, scope: !11771)
!11780 = !DILocation(line: 2458, column: 54, scope: !11771)
!11781 = !DILocation(line: 2457, column: 2, scope: !11771)
!11782 = !DILocation(line: 2459, column: 1, scope: !11771)
!11783 = distinct !DISubprogram(name: "port_cfg_diffserv", scope: !3, file: !3, line: 2437, type: !11600, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11784 = !DILocalVariable(name: "hw", arg: 1, scope: !11783, file: !3, line: 2437, type: !8002)
!11785 = !DILocation(line: 2437, column: 53, scope: !11783)
!11786 = !DILocalVariable(name: "p", arg: 2, scope: !11783, file: !3, line: 2437, type: !32)
!11787 = !DILocation(line: 2437, column: 61, scope: !11783)
!11788 = !DILocalVariable(name: "set", arg: 3, scope: !11783, file: !3, line: 2437, type: !32)
!11789 = !DILocation(line: 2437, column: 68, scope: !11783)
!11790 = !DILocation(line: 2439, column: 11, scope: !11783)
!11791 = !DILocation(line: 2439, column: 15, scope: !11783)
!11792 = !DILocation(line: 2440, column: 52, scope: !11783)
!11793 = !DILocation(line: 2439, column: 2, scope: !11783)
!11794 = !DILocation(line: 2441, column: 1, scope: !11783)
!11795 = distinct !DISubprogram(name: "port_cfg_802_1p", scope: !3, file: !3, line: 2443, type: !11600, scopeLine: 2444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11796 = !DILocalVariable(name: "hw", arg: 1, scope: !11795, file: !3, line: 2443, type: !8002)
!11797 = !DILocation(line: 2443, column: 51, scope: !11795)
!11798 = !DILocalVariable(name: "p", arg: 2, scope: !11795, file: !3, line: 2443, type: !32)
!11799 = !DILocation(line: 2443, column: 59, scope: !11795)
!11800 = !DILocalVariable(name: "set", arg: 3, scope: !11795, file: !3, line: 2443, type: !32)
!11801 = !DILocation(line: 2443, column: 66, scope: !11795)
!11802 = !DILocation(line: 2445, column: 11, scope: !11795)
!11803 = !DILocation(line: 2445, column: 15, scope: !11795)
!11804 = !DILocation(line: 2446, column: 50, scope: !11795)
!11805 = !DILocation(line: 2445, column: 2, scope: !11795)
!11806 = !DILocation(line: 2447, column: 1, scope: !11795)
!11807 = distinct !DISubprogram(name: "port_cfg_replace_vid", scope: !3, file: !3, line: 2449, type: !11600, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11808 = !DILocalVariable(name: "hw", arg: 1, scope: !11807, file: !3, line: 2449, type: !8002)
!11809 = !DILocation(line: 2449, column: 56, scope: !11807)
!11810 = !DILocalVariable(name: "p", arg: 2, scope: !11807, file: !3, line: 2449, type: !32)
!11811 = !DILocation(line: 2449, column: 64, scope: !11807)
!11812 = !DILocalVariable(name: "set", arg: 3, scope: !11807, file: !3, line: 2449, type: !32)
!11813 = !DILocation(line: 2449, column: 71, scope: !11807)
!11814 = !DILocation(line: 2451, column: 11, scope: !11807)
!11815 = !DILocation(line: 2451, column: 15, scope: !11807)
!11816 = !DILocation(line: 2452, column: 58, scope: !11807)
!11817 = !DILocation(line: 2451, column: 2, scope: !11807)
!11818 = !DILocation(line: 2453, column: 1, scope: !11807)
!11819 = distinct !DISubprogram(name: "port_r16", scope: !3, file: !3, line: 2047, type: !11820, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{null, !8002, !32, !32, !7507}
!11822 = !DILocalVariable(name: "hw", arg: 1, scope: !11819, file: !3, line: 2047, type: !8002)
!11823 = !DILocation(line: 2047, column: 37, scope: !11819)
!11824 = !DILocalVariable(name: "port", arg: 2, scope: !11819, file: !3, line: 2047, type: !32)
!11825 = !DILocation(line: 2047, column: 45, scope: !11819)
!11826 = !DILocalVariable(name: "offset", arg: 3, scope: !11819, file: !3, line: 2047, type: !32)
!11827 = !DILocation(line: 2047, column: 55, scope: !11819)
!11828 = !DILocalVariable(name: "data", arg: 4, scope: !11819, file: !3, line: 2047, type: !7507)
!11829 = !DILocation(line: 2047, column: 68, scope: !11819)
!11830 = !DILocalVariable(name: "addr", scope: !11819, file: !3, line: 2049, type: !987)
!11831 = !DILocation(line: 2049, column: 6, scope: !11819)
!11832 = !DILocation(line: 2051, column: 2, scope: !11819)
!11833 = !DILocation(line: 2052, column: 10, scope: !11819)
!11834 = !DILocation(line: 2052, column: 7, scope: !11819)
!11835 = !DILocation(line: 2053, column: 16, scope: !11819)
!11836 = !DILocation(line: 2053, column: 20, scope: !11819)
!11837 = !DILocation(line: 2053, column: 25, scope: !11819)
!11838 = !DILocation(line: 2053, column: 23, scope: !11819)
!11839 = !DILocation(line: 2053, column: 10, scope: !11819)
!11840 = !DILocation(line: 2053, column: 3, scope: !11819)
!11841 = !DILocation(line: 2053, column: 8, scope: !11819)
!11842 = !DILocation(line: 2054, column: 1, scope: !11819)
!11843 = distinct !DISubprogram(name: "port_w16", scope: !3, file: !3, line: 2065, type: !11844, scopeLine: 2066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{null, !8002, !32, !32, !581}
!11846 = !DILocalVariable(name: "hw", arg: 1, scope: !11843, file: !3, line: 2065, type: !8002)
!11847 = !DILocation(line: 2065, column: 37, scope: !11843)
!11848 = !DILocalVariable(name: "port", arg: 2, scope: !11843, file: !3, line: 2065, type: !32)
!11849 = !DILocation(line: 2065, column: 45, scope: !11843)
!11850 = !DILocalVariable(name: "offset", arg: 3, scope: !11843, file: !3, line: 2065, type: !32)
!11851 = !DILocation(line: 2065, column: 55, scope: !11843)
!11852 = !DILocalVariable(name: "data", arg: 4, scope: !11843, file: !3, line: 2065, type: !581)
!11853 = !DILocation(line: 2065, column: 67, scope: !11843)
!11854 = !DILocalVariable(name: "addr", scope: !11843, file: !3, line: 2067, type: !987)
!11855 = !DILocation(line: 2067, column: 6, scope: !11843)
!11856 = !DILocation(line: 2069, column: 2, scope: !11843)
!11857 = !DILocation(line: 2070, column: 10, scope: !11843)
!11858 = !DILocation(line: 2070, column: 7, scope: !11843)
!11859 = !DILocation(line: 2071, column: 9, scope: !11843)
!11860 = !DILocation(line: 2071, column: 15, scope: !11843)
!11861 = !DILocation(line: 2071, column: 19, scope: !11843)
!11862 = !DILocation(line: 2071, column: 24, scope: !11843)
!11863 = !DILocation(line: 2071, column: 22, scope: !11843)
!11864 = !DILocation(line: 2071, column: 2, scope: !11843)
!11865 = !DILocation(line: 2072, column: 1, scope: !11843)
!11866 = distinct !DISubprogram(name: "port_cfg_mirror_sniffer", scope: !3, file: !3, line: 2378, type: !11600, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11867 = !DILocalVariable(name: "hw", arg: 1, scope: !11866, file: !3, line: 2378, type: !8002)
!11868 = !DILocation(line: 2378, column: 59, scope: !11866)
!11869 = !DILocalVariable(name: "p", arg: 2, scope: !11866, file: !3, line: 2378, type: !32)
!11870 = !DILocation(line: 2378, column: 67, scope: !11866)
!11871 = !DILocalVariable(name: "set", arg: 3, scope: !11866, file: !3, line: 2378, type: !32)
!11872 = !DILocation(line: 2378, column: 74, scope: !11866)
!11873 = !DILocation(line: 2380, column: 11, scope: !11866)
!11874 = !DILocation(line: 2380, column: 15, scope: !11866)
!11875 = !DILocation(line: 2381, column: 51, scope: !11866)
!11876 = !DILocation(line: 2380, column: 2, scope: !11866)
!11877 = !DILocation(line: 2382, column: 1, scope: !11866)
!11878 = distinct !DISubprogram(name: "port_cfg_mirror_rx", scope: !3, file: !3, line: 2384, type: !11600, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11879 = !DILocalVariable(name: "hw", arg: 1, scope: !11878, file: !3, line: 2384, type: !8002)
!11880 = !DILocation(line: 2384, column: 54, scope: !11878)
!11881 = !DILocalVariable(name: "p", arg: 2, scope: !11878, file: !3, line: 2384, type: !32)
!11882 = !DILocation(line: 2384, column: 62, scope: !11878)
!11883 = !DILocalVariable(name: "set", arg: 3, scope: !11878, file: !3, line: 2384, type: !32)
!11884 = !DILocation(line: 2384, column: 69, scope: !11878)
!11885 = !DILocation(line: 2386, column: 11, scope: !11878)
!11886 = !DILocation(line: 2386, column: 15, scope: !11878)
!11887 = !DILocation(line: 2387, column: 46, scope: !11878)
!11888 = !DILocation(line: 2386, column: 2, scope: !11878)
!11889 = !DILocation(line: 2388, column: 1, scope: !11878)
!11890 = distinct !DISubprogram(name: "port_cfg_mirror_tx", scope: !3, file: !3, line: 2390, type: !11600, scopeLine: 2391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11891 = !DILocalVariable(name: "hw", arg: 1, scope: !11890, file: !3, line: 2390, type: !8002)
!11892 = !DILocation(line: 2390, column: 54, scope: !11890)
!11893 = !DILocalVariable(name: "p", arg: 2, scope: !11890, file: !3, line: 2390, type: !32)
!11894 = !DILocation(line: 2390, column: 62, scope: !11890)
!11895 = !DILocalVariable(name: "set", arg: 3, scope: !11890, file: !3, line: 2390, type: !32)
!11896 = !DILocation(line: 2390, column: 69, scope: !11890)
!11897 = !DILocation(line: 2392, column: 11, scope: !11890)
!11898 = !DILocation(line: 2392, column: 15, scope: !11890)
!11899 = !DILocation(line: 2393, column: 46, scope: !11890)
!11900 = !DILocation(line: 2392, column: 2, scope: !11890)
!11901 = !DILocation(line: 2394, column: 1, scope: !11890)
!11902 = distinct !DISubprogram(name: "sw_cfg_mirror_rx_tx", scope: !3, file: !3, line: 2396, type: !11124, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11903 = !DILocalVariable(name: "hw", arg: 1, scope: !11902, file: !3, line: 2396, type: !8002)
!11904 = !DILocation(line: 2396, column: 55, scope: !11902)
!11905 = !DILocalVariable(name: "set", arg: 2, scope: !11902, file: !3, line: 2396, type: !32)
!11906 = !DILocation(line: 2396, column: 63, scope: !11902)
!11907 = !DILocation(line: 2398, column: 9, scope: !11902)
!11908 = !DILocation(line: 2398, column: 63, scope: !11902)
!11909 = !DILocation(line: 2398, column: 2, scope: !11902)
!11910 = !DILocation(line: 2399, column: 1, scope: !11902)
!11911 = distinct !DISubprogram(name: "sw_dis_prio_rate", scope: !3, file: !3, line: 2242, type: !11124, scopeLine: 2243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11912 = !DILocalVariable(name: "hw", arg: 1, scope: !11911, file: !3, line: 2242, type: !8002)
!11913 = !DILocation(line: 2242, column: 45, scope: !11911)
!11914 = !DILocalVariable(name: "port", arg: 2, scope: !11911, file: !3, line: 2242, type: !32)
!11915 = !DILocation(line: 2242, column: 53, scope: !11911)
!11916 = !DILocalVariable(name: "addr", scope: !11911, file: !3, line: 2244, type: !987)
!11917 = !DILocation(line: 2244, column: 6, scope: !11911)
!11918 = !DILocation(line: 2246, column: 2, scope: !11911)
!11919 = !DILocation(line: 2247, column: 7, scope: !11911)
!11920 = !DILocation(line: 2248, column: 12, scope: !11911)
!11921 = !DILocation(line: 2248, column: 16, scope: !11911)
!11922 = !DILocation(line: 2248, column: 21, scope: !11911)
!11923 = !DILocation(line: 2248, column: 19, scope: !11911)
!11924 = !DILocation(line: 2248, column: 2, scope: !11911)
!11925 = !DILocation(line: 2249, column: 1, scope: !11911)
!11926 = distinct !DISubprogram(name: "writel", scope: !10107, file: !10107, line: 67, type: !11927, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{null, !7, !10110}
!11929 = !DILocalVariable(name: "val", arg: 1, scope: !11926, file: !10107, line: 67, type: !7)
!11930 = !DILocation(line: 67, column: 1, scope: !11926)
!11931 = !DILocalVariable(name: "addr", arg: 2, scope: !11926, file: !10107, line: 67, type: !10110)
!11932 = !{i32 -2143250834}
!11933 = distinct !DISubprogram(name: "sw_r_vlan_table", scope: !3, file: !3, line: 1764, type: !11934, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11934 = !DISubroutineType(types: !11935)
!11935 = !{!32, !8002, !581, !7507, !793, !793}
!11936 = !DILocalVariable(name: "hw", arg: 1, scope: !11933, file: !3, line: 1764, type: !8002)
!11937 = !DILocation(line: 1764, column: 43, scope: !11933)
!11938 = !DILocalVariable(name: "addr", arg: 2, scope: !11933, file: !3, line: 1764, type: !581)
!11939 = !DILocation(line: 1764, column: 51, scope: !11933)
!11940 = !DILocalVariable(name: "vid", arg: 3, scope: !11933, file: !3, line: 1764, type: !7507)
!11941 = !DILocation(line: 1764, column: 62, scope: !11933)
!11942 = !DILocalVariable(name: "fid", arg: 4, scope: !11933, file: !3, line: 1764, type: !793)
!11943 = !DILocation(line: 1764, column: 71, scope: !11933)
!11944 = !DILocalVariable(name: "member", arg: 5, scope: !11933, file: !3, line: 1765, type: !793)
!11945 = !DILocation(line: 1765, column: 6, scope: !11933)
!11946 = !DILocalVariable(name: "data", scope: !11933, file: !3, line: 1767, type: !987)
!11947 = !DILocation(line: 1767, column: 6, scope: !11933)
!11948 = !DILocation(line: 1769, column: 13, scope: !11933)
!11949 = !DILocation(line: 1769, column: 29, scope: !11933)
!11950 = !DILocation(line: 1769, column: 2, scope: !11933)
!11951 = !DILocation(line: 1770, column: 6, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 1770, column: 6)
!11953 = !DILocation(line: 1770, column: 11, scope: !11952)
!11954 = !DILocation(line: 1770, column: 6, scope: !11933)
!11955 = !DILocation(line: 1771, column: 16, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 1770, column: 31)
!11957 = !DILocation(line: 1771, column: 21, scope: !11956)
!11958 = !DILocation(line: 1771, column: 10, scope: !11956)
!11959 = !DILocation(line: 1771, column: 4, scope: !11956)
!11960 = !DILocation(line: 1771, column: 8, scope: !11956)
!11961 = !DILocation(line: 1772, column: 16, scope: !11956)
!11962 = !DILocation(line: 1772, column: 21, scope: !11956)
!11963 = !DILocation(line: 1772, column: 39, scope: !11956)
!11964 = !DILocation(line: 1772, column: 10, scope: !11956)
!11965 = !DILocation(line: 1772, column: 4, scope: !11956)
!11966 = !DILocation(line: 1772, column: 8, scope: !11956)
!11967 = !DILocation(line: 1773, column: 19, scope: !11956)
!11968 = !DILocation(line: 1773, column: 24, scope: !11956)
!11969 = !DILocation(line: 1773, column: 49, scope: !11956)
!11970 = !DILocation(line: 1773, column: 13, scope: !11956)
!11971 = !DILocation(line: 1773, column: 4, scope: !11956)
!11972 = !DILocation(line: 1773, column: 11, scope: !11956)
!11973 = !DILocation(line: 1775, column: 3, scope: !11956)
!11974 = !DILocation(line: 1777, column: 2, scope: !11933)
!11975 = !DILocation(line: 1778, column: 1, scope: !11933)
!11976 = distinct !DISubprogram(name: "port_get_def_vid", scope: !3, file: !3, line: 2625, type: !11977, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11977 = !DISubroutineType(types: !11978)
!11978 = !{null, !8002, !32, !7507}
!11979 = !DILocalVariable(name: "hw", arg: 1, scope: !11976, file: !3, line: 2625, type: !8002)
!11980 = !DILocation(line: 2625, column: 45, scope: !11976)
!11981 = !DILocalVariable(name: "port", arg: 2, scope: !11976, file: !3, line: 2625, type: !32)
!11982 = !DILocation(line: 2625, column: 53, scope: !11976)
!11983 = !DILocalVariable(name: "vid", arg: 3, scope: !11976, file: !3, line: 2625, type: !7507)
!11984 = !DILocation(line: 2625, column: 64, scope: !11976)
!11985 = !DILocalVariable(name: "addr", scope: !11976, file: !3, line: 2627, type: !987)
!11986 = !DILocation(line: 2627, column: 6, scope: !11976)
!11987 = !DILocation(line: 2629, column: 2, scope: !11976)
!11988 = !DILocation(line: 2630, column: 7, scope: !11976)
!11989 = !DILocation(line: 2631, column: 15, scope: !11976)
!11990 = !DILocation(line: 2631, column: 19, scope: !11976)
!11991 = !DILocation(line: 2631, column: 24, scope: !11976)
!11992 = !DILocation(line: 2631, column: 22, scope: !11976)
!11993 = !DILocation(line: 2631, column: 9, scope: !11976)
!11994 = !DILocation(line: 2631, column: 3, scope: !11976)
!11995 = !DILocation(line: 2631, column: 7, scope: !11976)
!11996 = !DILocation(line: 2632, column: 1, scope: !11976)
!11997 = distinct !DISubprogram(name: "sw_r_table", scope: !3, file: !3, line: 1667, type: !11998, scopeLine: 1668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11998 = !DISubroutineType(types: !11999)
!11999 = !{null, !8002, !32, !581, !2516}
!12000 = !DILocalVariable(name: "hw", arg: 1, scope: !11997, file: !3, line: 1667, type: !8002)
!12001 = !DILocation(line: 1667, column: 39, scope: !11997)
!12002 = !DILocalVariable(name: "table", arg: 2, scope: !11997, file: !3, line: 1667, type: !32)
!12003 = !DILocation(line: 1667, column: 47, scope: !11997)
!12004 = !DILocalVariable(name: "addr", arg: 3, scope: !11997, file: !3, line: 1667, type: !581)
!12005 = !DILocation(line: 1667, column: 58, scope: !11997)
!12006 = !DILocalVariable(name: "data", arg: 4, scope: !11997, file: !3, line: 1667, type: !2516)
!12007 = !DILocation(line: 1667, column: 69, scope: !11997)
!12008 = !DILocalVariable(name: "ctrl_addr", scope: !11997, file: !3, line: 1669, type: !581)
!12009 = !DILocation(line: 1669, column: 6, scope: !11997)
!12010 = !DILocalVariable(name: "interrupt", scope: !11997, file: !3, line: 1670, type: !7840)
!12011 = !DILocation(line: 1670, column: 7, scope: !11997)
!12012 = !DILocation(line: 1672, column: 17, scope: !11997)
!12013 = !DILocation(line: 1672, column: 23, scope: !11997)
!12014 = !DILocation(line: 1672, column: 43, scope: !11997)
!12015 = !DILocation(line: 1672, column: 57, scope: !11997)
!12016 = !DILocation(line: 1672, column: 65, scope: !11997)
!12017 = !DILocation(line: 1672, column: 63, scope: !11997)
!12018 = !DILocation(line: 1672, column: 14, scope: !11997)
!12019 = !DILocation(line: 1672, column: 12, scope: !11997)
!12020 = !DILocation(line: 1674, column: 28, scope: !11997)
!12021 = !DILocation(line: 1674, column: 14, scope: !11997)
!12022 = !DILocation(line: 1674, column: 12, scope: !11997)
!12023 = !DILocation(line: 1676, column: 9, scope: !11997)
!12024 = !DILocation(line: 1676, column: 20, scope: !11997)
!12025 = !DILocation(line: 1676, column: 24, scope: !11997)
!12026 = !DILocation(line: 1676, column: 27, scope: !11997)
!12027 = !DILocation(line: 1676, column: 2, scope: !11997)
!12028 = !DILocation(line: 1677, column: 2, scope: !11997)
!12029 = !DILocation(line: 1677, column: 2, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 1677, column: 2)
!12031 = !DILocation(line: 1678, column: 16, scope: !11997)
!12032 = !DILocation(line: 1678, column: 20, scope: !11997)
!12033 = !DILocation(line: 1678, column: 23, scope: !11997)
!12034 = !DILocation(line: 1678, column: 10, scope: !11997)
!12035 = !DILocation(line: 1678, column: 3, scope: !11997)
!12036 = !DILocation(line: 1678, column: 8, scope: !11997)
!12037 = !DILocation(line: 1680, column: 18, scope: !11997)
!12038 = !DILocation(line: 1680, column: 22, scope: !11997)
!12039 = !DILocation(line: 1680, column: 2, scope: !11997)
!12040 = !DILocation(line: 1681, column: 1, scope: !11997)
!12041 = distinct !DISubprogram(name: "hw_block_intr", scope: !3, file: !3, line: 1577, type: !12042, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12042 = !DISubroutineType(types: !12043)
!12043 = !{!7840, !8002}
!12044 = !DILocalVariable(name: "hw", arg: 1, scope: !12041, file: !3, line: 1577, type: !8002)
!12045 = !DILocation(line: 1577, column: 42, scope: !12041)
!12046 = !DILocalVariable(name: "interrupt", scope: !12041, file: !3, line: 1579, type: !7840)
!12047 = !DILocation(line: 1579, column: 7, scope: !12041)
!12048 = !DILocation(line: 1581, column: 7, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 1581, column: 6)
!12050 = !DILocation(line: 1581, column: 11, scope: !12049)
!12051 = !DILocation(line: 1581, column: 6, scope: !12041)
!12052 = !DILocation(line: 1582, column: 15, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 1581, column: 25)
!12054 = !DILocation(line: 1582, column: 3, scope: !12053)
!12055 = !DILocation(line: 1583, column: 15, scope: !12053)
!12056 = !DILocation(line: 1583, column: 19, scope: !12053)
!12057 = !DILocation(line: 1583, column: 13, scope: !12053)
!12058 = !DILocation(line: 1584, column: 2, scope: !12053)
!12059 = !DILocation(line: 1585, column: 9, scope: !12041)
!12060 = !DILocation(line: 1585, column: 2, scope: !12041)
!12061 = distinct !DISubprogram(name: "readl", scope: !10107, file: !10107, line: 59, type: !12062, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12062 = !DISubroutineType(types: !12063)
!12063 = !{!7, !10119}
!12064 = !DILocalVariable(name: "addr", arg: 1, scope: !12061, file: !10107, line: 59, type: !10119)
!12065 = !DILocation(line: 59, column: 1, scope: !12061)
!12066 = !DILocalVariable(name: "ret", scope: !12061, file: !10107, line: 59, type: !7)
!12067 = !{i32 -2143253227}
!12068 = distinct !DISubprogram(name: "hw_restore_intr", scope: !3, file: !3, line: 1562, type: !12069, scopeLine: 1563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12069 = !DISubroutineType(types: !12070)
!12070 = !{null, !8002, !7840}
!12071 = !DILocalVariable(name: "hw", arg: 1, scope: !12068, file: !3, line: 1562, type: !8002)
!12072 = !DILocation(line: 1562, column: 51, scope: !12068)
!12073 = !DILocalVariable(name: "interrupt", arg: 2, scope: !12068, file: !3, line: 1562, type: !7840)
!12074 = !DILocation(line: 1562, column: 60, scope: !12068)
!12075 = !DILocation(line: 1564, column: 6, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 1564, column: 6)
!12077 = !DILocation(line: 1564, column: 6, scope: !12068)
!12078 = !DILocation(line: 1565, column: 15, scope: !12076)
!12079 = !DILocation(line: 1565, column: 3, scope: !12076)
!12080 = !DILocation(line: 1566, column: 1, scope: !12068)
!12081 = distinct !DISubprogram(name: "hw_dis_intr", scope: !3, file: !3, line: 1497, type: !8272, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12082 = !DILocalVariable(name: "hw", arg: 1, scope: !12081, file: !3, line: 1497, type: !8002)
!12083 = !DILocation(line: 1497, column: 47, scope: !12081)
!12084 = !DILocation(line: 1499, column: 21, scope: !12081)
!12085 = !DILocation(line: 1499, column: 25, scope: !12081)
!12086 = !DILocation(line: 1499, column: 2, scope: !12081)
!12087 = !DILocation(line: 1499, column: 6, scope: !12081)
!12088 = !DILocation(line: 1499, column: 19, scope: !12081)
!12089 = !DILocation(line: 1500, column: 12, scope: !12081)
!12090 = !DILocation(line: 1500, column: 16, scope: !12081)
!12091 = !DILocation(line: 1500, column: 19, scope: !12081)
!12092 = !DILocation(line: 1500, column: 2, scope: !12081)
!12093 = !DILocation(line: 1501, column: 23, scope: !12081)
!12094 = !DILocation(line: 1501, column: 27, scope: !12081)
!12095 = !DILocation(line: 1501, column: 30, scope: !12081)
!12096 = !DILocation(line: 1501, column: 17, scope: !12081)
!12097 = !DILocation(line: 1501, column: 2, scope: !12081)
!12098 = !DILocation(line: 1501, column: 6, scope: !12081)
!12099 = !DILocation(line: 1501, column: 15, scope: !12081)
!12100 = !DILocation(line: 1502, column: 1, scope: !12081)
!12101 = distinct !DISubprogram(name: "hw_ena_intr", scope: !3, file: !3, line: 1510, type: !8272, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12102 = !DILocalVariable(name: "hw", arg: 1, scope: !12101, file: !3, line: 1510, type: !8002)
!12103 = !DILocation(line: 1510, column: 47, scope: !12101)
!12104 = !DILocation(line: 1512, column: 2, scope: !12101)
!12105 = !DILocation(line: 1512, column: 6, scope: !12101)
!12106 = !DILocation(line: 1512, column: 19, scope: !12101)
!12107 = !DILocation(line: 1513, column: 14, scope: !12101)
!12108 = !DILocation(line: 1513, column: 18, scope: !12101)
!12109 = !DILocation(line: 1513, column: 22, scope: !12101)
!12110 = !DILocation(line: 1513, column: 2, scope: !12101)
!12111 = !DILocation(line: 1514, column: 1, scope: !12101)
!12112 = distinct !DISubprogram(name: "hw_set_intr", scope: !3, file: !3, line: 1504, type: !12069, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12113 = !DILocalVariable(name: "hw", arg: 1, scope: !12112, file: !3, line: 1504, type: !8002)
!12114 = !DILocation(line: 1504, column: 47, scope: !12112)
!12115 = !DILocalVariable(name: "interrupt", arg: 2, scope: !12112, file: !3, line: 1504, type: !7840)
!12116 = !DILocation(line: 1504, column: 56, scope: !12112)
!12117 = !DILocation(line: 1506, column: 17, scope: !12112)
!12118 = !DILocation(line: 1506, column: 2, scope: !12112)
!12119 = !DILocation(line: 1506, column: 6, scope: !12112)
!12120 = !DILocation(line: 1506, column: 15, scope: !12112)
!12121 = !DILocation(line: 1507, column: 9, scope: !12112)
!12122 = !DILocation(line: 1507, column: 20, scope: !12112)
!12123 = !DILocation(line: 1507, column: 24, scope: !12112)
!12124 = !DILocation(line: 1507, column: 27, scope: !12112)
!12125 = !DILocation(line: 1507, column: 2, scope: !12112)
!12126 = !DILocation(line: 1508, column: 1, scope: !12112)
!12127 = distinct !DISubprogram(name: "sw_w_sta_mac_table", scope: !3, file: !3, line: 1727, type: !12128, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12128 = !DISubroutineType(types: !12129)
!12129 = !{null, !8002, !581, !793, !794, !32, !32, !32, !794}
!12130 = !DILocalVariable(name: "hw", arg: 1, scope: !12127, file: !3, line: 1727, type: !8002)
!12131 = !DILocation(line: 1727, column: 47, scope: !12127)
!12132 = !DILocalVariable(name: "addr", arg: 2, scope: !12127, file: !3, line: 1727, type: !581)
!12133 = !DILocation(line: 1727, column: 55, scope: !12127)
!12134 = !DILocalVariable(name: "mac_addr", arg: 3, scope: !12127, file: !3, line: 1727, type: !793)
!12135 = !DILocation(line: 1727, column: 65, scope: !12127)
!12136 = !DILocalVariable(name: "ports", arg: 4, scope: !12127, file: !3, line: 1728, type: !794)
!12137 = !DILocation(line: 1728, column: 5, scope: !12127)
!12138 = !DILocalVariable(name: "override", arg: 5, scope: !12127, file: !3, line: 1728, type: !32)
!12139 = !DILocation(line: 1728, column: 16, scope: !12127)
!12140 = !DILocalVariable(name: "valid", arg: 6, scope: !12127, file: !3, line: 1728, type: !32)
!12141 = !DILocation(line: 1728, column: 30, scope: !12127)
!12142 = !DILocalVariable(name: "use_fid", arg: 7, scope: !12127, file: !3, line: 1728, type: !32)
!12143 = !DILocation(line: 1728, column: 41, scope: !12127)
!12144 = !DILocalVariable(name: "fid", arg: 8, scope: !12127, file: !3, line: 1728, type: !794)
!12145 = !DILocation(line: 1728, column: 53, scope: !12127)
!12146 = !DILocalVariable(name: "data_hi", scope: !12127, file: !3, line: 1730, type: !987)
!12147 = !DILocation(line: 1730, column: 6, scope: !12127)
!12148 = !DILocalVariable(name: "data_lo", scope: !12127, file: !3, line: 1731, type: !987)
!12149 = !DILocation(line: 1731, column: 6, scope: !12127)
!12150 = !DILocation(line: 1733, column: 19, scope: !12127)
!12151 = !DILocation(line: 1733, column: 13, scope: !12127)
!12152 = !DILocation(line: 1733, column: 31, scope: !12127)
!12153 = !DILocation(line: 1734, column: 10, scope: !12127)
!12154 = !DILocation(line: 1734, column: 4, scope: !12127)
!12155 = !DILocation(line: 1734, column: 22, scope: !12127)
!12156 = !DILocation(line: 1733, column: 38, scope: !12127)
!12157 = !DILocation(line: 1735, column: 10, scope: !12127)
!12158 = !DILocation(line: 1735, column: 4, scope: !12127)
!12159 = !DILocation(line: 1735, column: 22, scope: !12127)
!12160 = !DILocation(line: 1734, column: 29, scope: !12127)
!12161 = !DILocation(line: 1735, column: 30, scope: !12127)
!12162 = !DILocation(line: 1735, column: 28, scope: !12127)
!12163 = !DILocation(line: 1733, column: 10, scope: !12127)
!12164 = !DILocation(line: 1736, column: 19, scope: !12127)
!12165 = !DILocation(line: 1736, column: 13, scope: !12127)
!12166 = !DILocation(line: 1736, column: 31, scope: !12127)
!12167 = !DILocation(line: 1736, column: 39, scope: !12127)
!12168 = !DILocation(line: 1736, column: 37, scope: !12127)
!12169 = !DILocation(line: 1736, column: 10, scope: !12127)
!12170 = !DILocation(line: 1737, column: 19, scope: !12127)
!12171 = !DILocation(line: 1737, column: 13, scope: !12127)
!12172 = !DILocation(line: 1737, column: 25, scope: !12127)
!12173 = !DILocation(line: 1737, column: 10, scope: !12127)
!12174 = !DILocation(line: 1739, column: 6, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12127, file: !3, line: 1739, column: 6)
!12176 = !DILocation(line: 1739, column: 6, scope: !12127)
!12177 = !DILocation(line: 1740, column: 11, scope: !12175)
!12178 = !DILocation(line: 1740, column: 3, scope: !12175)
!12179 = !DILocation(line: 1741, column: 6, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12127, file: !3, line: 1741, column: 6)
!12181 = !DILocation(line: 1741, column: 6, scope: !12127)
!12182 = !DILocation(line: 1742, column: 11, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12180, file: !3, line: 1741, column: 15)
!12184 = !DILocation(line: 1743, column: 20, scope: !12183)
!12185 = !DILocation(line: 1743, column: 14, scope: !12183)
!12186 = !DILocation(line: 1743, column: 24, scope: !12183)
!12187 = !DILocation(line: 1743, column: 11, scope: !12183)
!12188 = !DILocation(line: 1744, column: 2, scope: !12183)
!12189 = !DILocation(line: 1745, column: 6, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12127, file: !3, line: 1745, column: 6)
!12191 = !DILocation(line: 1745, column: 6, scope: !12127)
!12192 = !DILocation(line: 1746, column: 11, scope: !12190)
!12193 = !DILocation(line: 1746, column: 3, scope: !12190)
!12194 = !DILocation(line: 1748, column: 16, scope: !12127)
!12195 = !DILocation(line: 1748, column: 38, scope: !12127)
!12196 = !DILocation(line: 1748, column: 44, scope: !12127)
!12197 = !DILocation(line: 1748, column: 53, scope: !12127)
!12198 = !DILocation(line: 1748, column: 2, scope: !12127)
!12199 = !DILocation(line: 1749, column: 1, scope: !12127)
!12200 = distinct !DISubprogram(name: "sw_w_table_64", scope: !3, file: !3, line: 1694, type: !12201, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12201 = !DISubroutineType(types: !12202)
!12202 = !{null, !8002, !32, !581, !987, !987}
!12203 = !DILocalVariable(name: "hw", arg: 1, scope: !12200, file: !3, line: 1694, type: !8002)
!12204 = !DILocation(line: 1694, column: 42, scope: !12200)
!12205 = !DILocalVariable(name: "table", arg: 2, scope: !12200, file: !3, line: 1694, type: !32)
!12206 = !DILocation(line: 1694, column: 50, scope: !12200)
!12207 = !DILocalVariable(name: "addr", arg: 3, scope: !12200, file: !3, line: 1694, type: !581)
!12208 = !DILocation(line: 1694, column: 61, scope: !12200)
!12209 = !DILocalVariable(name: "data_hi", arg: 4, scope: !12200, file: !3, line: 1694, type: !987)
!12210 = !DILocation(line: 1694, column: 71, scope: !12200)
!12211 = !DILocalVariable(name: "data_lo", arg: 5, scope: !12200, file: !3, line: 1695, type: !987)
!12212 = !DILocation(line: 1695, column: 6, scope: !12200)
!12213 = !DILocalVariable(name: "ctrl_addr", scope: !12200, file: !3, line: 1697, type: !581)
!12214 = !DILocation(line: 1697, column: 6, scope: !12200)
!12215 = !DILocalVariable(name: "interrupt", scope: !12200, file: !3, line: 1698, type: !7840)
!12216 = !DILocation(line: 1698, column: 7, scope: !12200)
!12217 = !DILocation(line: 1700, column: 16, scope: !12200)
!12218 = !DILocation(line: 1700, column: 22, scope: !12200)
!12219 = !DILocation(line: 1700, column: 42, scope: !12200)
!12220 = !DILocation(line: 1700, column: 50, scope: !12200)
!12221 = !DILocation(line: 1700, column: 48, scope: !12200)
!12222 = !DILocation(line: 1700, column: 14, scope: !12200)
!12223 = !DILocation(line: 1700, column: 12, scope: !12200)
!12224 = !DILocation(line: 1702, column: 28, scope: !12200)
!12225 = !DILocation(line: 1702, column: 14, scope: !12200)
!12226 = !DILocation(line: 1702, column: 12, scope: !12200)
!12227 = !DILocation(line: 1704, column: 9, scope: !12200)
!12228 = !DILocation(line: 1704, column: 18, scope: !12200)
!12229 = !DILocation(line: 1704, column: 22, scope: !12200)
!12230 = !DILocation(line: 1704, column: 25, scope: !12200)
!12231 = !DILocation(line: 1704, column: 2, scope: !12200)
!12232 = !DILocation(line: 1705, column: 9, scope: !12200)
!12233 = !DILocation(line: 1705, column: 18, scope: !12200)
!12234 = !DILocation(line: 1705, column: 22, scope: !12200)
!12235 = !DILocation(line: 1705, column: 25, scope: !12200)
!12236 = !DILocation(line: 1705, column: 2, scope: !12200)
!12237 = !DILocation(line: 1707, column: 9, scope: !12200)
!12238 = !DILocation(line: 1707, column: 20, scope: !12200)
!12239 = !DILocation(line: 1707, column: 24, scope: !12200)
!12240 = !DILocation(line: 1707, column: 27, scope: !12200)
!12241 = !DILocation(line: 1707, column: 2, scope: !12200)
!12242 = !DILocation(line: 1708, column: 2, scope: !12200)
!12243 = !DILocation(line: 1708, column: 2, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1708, column: 2)
!12245 = !DILocation(line: 1710, column: 18, scope: !12200)
!12246 = !DILocation(line: 1710, column: 22, scope: !12200)
!12247 = !DILocation(line: 1710, column: 2, scope: !12200)
!12248 = !DILocation(line: 1711, column: 1, scope: !12200)
!12249 = distinct !DISubprogram(name: "sw_cfg_port_base_vlan", scope: !3, file: !3, line: 2668, type: !11727, scopeLine: 2669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12250 = !DILocalVariable(name: "hw", arg: 1, scope: !12249, file: !3, line: 2668, type: !8002)
!12251 = !DILocation(line: 2668, column: 50, scope: !12249)
!12252 = !DILocalVariable(name: "port", arg: 2, scope: !12249, file: !3, line: 2668, type: !32)
!12253 = !DILocation(line: 2668, column: 58, scope: !12249)
!12254 = !DILocalVariable(name: "member", arg: 3, scope: !12249, file: !3, line: 2668, type: !794)
!12255 = !DILocation(line: 2668, column: 67, scope: !12249)
!12256 = !DILocalVariable(name: "addr", scope: !12249, file: !3, line: 2670, type: !987)
!12257 = !DILocation(line: 2670, column: 6, scope: !12249)
!12258 = !DILocalVariable(name: "data", scope: !12249, file: !3, line: 2671, type: !794)
!12259 = !DILocation(line: 2671, column: 5, scope: !12249)
!12260 = !DILocation(line: 2673, column: 2, scope: !12249)
!12261 = !DILocation(line: 2674, column: 7, scope: !12249)
!12262 = !DILocation(line: 2676, column: 15, scope: !12249)
!12263 = !DILocation(line: 2676, column: 19, scope: !12249)
!12264 = !DILocation(line: 2676, column: 24, scope: !12249)
!12265 = !DILocation(line: 2676, column: 22, scope: !12249)
!12266 = !DILocation(line: 2676, column: 9, scope: !12249)
!12267 = !DILocation(line: 2676, column: 7, scope: !12249)
!12268 = !DILocation(line: 2677, column: 7, scope: !12249)
!12269 = !DILocation(line: 2678, column: 11, scope: !12249)
!12270 = !DILocation(line: 2678, column: 18, scope: !12249)
!12271 = !DILocation(line: 2678, column: 7, scope: !12249)
!12272 = !DILocation(line: 2679, column: 9, scope: !12249)
!12273 = !DILocation(line: 2679, column: 15, scope: !12249)
!12274 = !DILocation(line: 2679, column: 19, scope: !12249)
!12275 = !DILocation(line: 2679, column: 24, scope: !12249)
!12276 = !DILocation(line: 2679, column: 22, scope: !12249)
!12277 = !DILocation(line: 2679, column: 2, scope: !12249)
!12278 = !DILocation(line: 2681, column: 42, scope: !12249)
!12279 = !DILocation(line: 2681, column: 2, scope: !12249)
!12280 = !DILocation(line: 2681, column: 6, scope: !12249)
!12281 = !DILocation(line: 2681, column: 18, scope: !12249)
!12282 = !DILocation(line: 2681, column: 27, scope: !12249)
!12283 = !DILocation(line: 2681, column: 33, scope: !12249)
!12284 = !DILocation(line: 2681, column: 40, scope: !12249)
!12285 = !DILocation(line: 2682, column: 1, scope: !12249)
!12286 = distinct !DISubprogram(name: "port_set_stp_state", scope: !3, file: !3, line: 2772, type: !11600, scopeLine: 2773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12287 = !DILocalVariable(name: "hw", arg: 1, scope: !12286, file: !3, line: 2772, type: !8002)
!12288 = !DILocation(line: 2772, column: 47, scope: !12286)
!12289 = !DILocalVariable(name: "port", arg: 2, scope: !12286, file: !3, line: 2772, type: !32)
!12290 = !DILocation(line: 2772, column: 55, scope: !12286)
!12291 = !DILocalVariable(name: "state", arg: 3, scope: !12286, file: !3, line: 2772, type: !32)
!12292 = !DILocation(line: 2772, column: 65, scope: !12286)
!12293 = !DILocalVariable(name: "data", scope: !12286, file: !3, line: 2774, type: !581)
!12294 = !DILocation(line: 2774, column: 6, scope: !12286)
!12295 = !DILocation(line: 2776, column: 11, scope: !12286)
!12296 = !DILocation(line: 2776, column: 15, scope: !12286)
!12297 = !DILocation(line: 2776, column: 2, scope: !12286)
!12298 = !DILocation(line: 2777, column: 10, scope: !12286)
!12299 = !DILocation(line: 2777, column: 2, scope: !12286)
!12300 = !DILocation(line: 2779, column: 8, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12286, file: !3, line: 2777, column: 17)
!12302 = !DILocation(line: 2780, column: 8, scope: !12301)
!12303 = !DILocation(line: 2781, column: 3, scope: !12301)
!12304 = !DILocation(line: 2787, column: 8, scope: !12301)
!12305 = !DILocation(line: 2788, column: 8, scope: !12301)
!12306 = !DILocation(line: 2789, column: 8, scope: !12301)
!12307 = !DILocation(line: 2790, column: 3, scope: !12301)
!12308 = !DILocation(line: 2792, column: 8, scope: !12301)
!12309 = !DILocation(line: 2793, column: 8, scope: !12301)
!12310 = !DILocation(line: 2794, column: 8, scope: !12301)
!12311 = !DILocation(line: 2795, column: 3, scope: !12301)
!12312 = !DILocation(line: 2797, column: 8, scope: !12301)
!12313 = !DILocation(line: 2798, column: 8, scope: !12301)
!12314 = !DILocation(line: 2799, column: 3, scope: !12301)
!12315 = !DILocation(line: 2805, column: 8, scope: !12301)
!12316 = !DILocation(line: 2806, column: 8, scope: !12301)
!12317 = !DILocation(line: 2807, column: 3, scope: !12301)
!12318 = !DILocation(line: 2809, column: 8, scope: !12301)
!12319 = !DILocation(line: 2810, column: 8, scope: !12301)
!12320 = !DILocation(line: 2811, column: 3, scope: !12301)
!12321 = !DILocation(line: 2813, column: 11, scope: !12286)
!12322 = !DILocation(line: 2813, column: 15, scope: !12286)
!12323 = !DILocation(line: 2813, column: 48, scope: !12286)
!12324 = !DILocation(line: 2813, column: 2, scope: !12286)
!12325 = !DILocation(line: 2814, column: 45, scope: !12286)
!12326 = !DILocation(line: 2814, column: 2, scope: !12286)
!12327 = !DILocation(line: 2814, column: 6, scope: !12286)
!12328 = !DILocation(line: 2814, column: 18, scope: !12286)
!12329 = !DILocation(line: 2814, column: 27, scope: !12286)
!12330 = !DILocation(line: 2814, column: 33, scope: !12286)
!12331 = !DILocation(line: 2814, column: 43, scope: !12286)
!12332 = !DILocation(line: 2815, column: 1, scope: !12286)
!12333 = distinct !DISubprogram(name: "port_r_cnt", scope: !3, file: !3, line: 1877, type: !12334, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12334 = !DISubroutineType(types: !12335)
!12335 = !{!32, !8002, !32}
!12336 = !DILocalVariable(name: "hw", arg: 1, scope: !12333, file: !3, line: 1877, type: !8002)
!12337 = !DILocation(line: 1877, column: 38, scope: !12333)
!12338 = !DILocalVariable(name: "port", arg: 2, scope: !12333, file: !3, line: 1877, type: !32)
!12339 = !DILocation(line: 1877, column: 46, scope: !12333)
!12340 = !DILocalVariable(name: "mib", scope: !12333, file: !3, line: 1879, type: !9750)
!12341 = !DILocation(line: 1879, column: 23, scope: !12333)
!12342 = !DILocation(line: 1879, column: 30, scope: !12333)
!12343 = !DILocation(line: 1879, column: 34, scope: !12333)
!12344 = !DILocation(line: 1879, column: 43, scope: !12333)
!12345 = !DILocation(line: 1881, column: 6, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 1881, column: 6)
!12347 = !DILocation(line: 1881, column: 11, scope: !12346)
!12348 = !DILocation(line: 1881, column: 21, scope: !12346)
!12349 = !DILocation(line: 1881, column: 6, scope: !12333)
!12350 = !DILocation(line: 1882, column: 3, scope: !12346)
!12351 = !DILocation(line: 1882, column: 10, scope: !12346)
!12352 = !DILocation(line: 1882, column: 15, scope: !12346)
!12353 = !DILocation(line: 1882, column: 23, scope: !12346)
!12354 = !DILocation(line: 1883, column: 19, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 1882, column: 43)
!12356 = !DILocation(line: 1883, column: 23, scope: !12355)
!12357 = !DILocation(line: 1883, column: 29, scope: !12355)
!12358 = !DILocation(line: 1883, column: 34, scope: !12355)
!12359 = !DILocation(line: 1884, column: 6, scope: !12355)
!12360 = !DILocation(line: 1884, column: 11, scope: !12355)
!12361 = !DILocation(line: 1884, column: 19, scope: !12355)
!12362 = !DILocation(line: 1884, column: 24, scope: !12355)
!12363 = !DILocation(line: 1883, column: 4, scope: !12355)
!12364 = !DILocation(line: 1885, column: 6, scope: !12355)
!12365 = !DILocation(line: 1885, column: 11, scope: !12355)
!12366 = !DILocation(line: 1885, column: 4, scope: !12355)
!12367 = distinct !{!12367, !12350, !12368}
!12368 = !DILocation(line: 1886, column: 3, scope: !12346)
!12369 = !DILocation(line: 1887, column: 6, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 1887, column: 6)
!12371 = !DILocation(line: 1887, column: 10, scope: !12370)
!12372 = !DILocation(line: 1887, column: 18, scope: !12370)
!12373 = !DILocation(line: 1887, column: 6, scope: !12333)
!12374 = !DILocation(line: 1888, column: 18, scope: !12370)
!12375 = !DILocation(line: 1888, column: 22, scope: !12370)
!12376 = !DILocation(line: 1888, column: 28, scope: !12370)
!12377 = !DILocation(line: 1888, column: 33, scope: !12370)
!12378 = !DILocation(line: 1889, column: 5, scope: !12370)
!12379 = !DILocation(line: 1889, column: 10, scope: !12370)
!12380 = !DILocation(line: 1888, column: 3, scope: !12370)
!12381 = !DILocation(line: 1890, column: 2, scope: !12333)
!12382 = !DILocation(line: 1890, column: 7, scope: !12333)
!12383 = !DILocation(line: 1890, column: 15, scope: !12333)
!12384 = !DILocation(line: 1891, column: 2, scope: !12333)
!12385 = distinct !DISubprogram(name: "port_r_mib_cnt", scope: !3, file: !3, line: 1790, type: !12386, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12386 = !DISubroutineType(types: !12387)
!12387 = !{null, !8002, !32, !581, !5372}
!12388 = !DILocalVariable(name: "hw", arg: 1, scope: !12385, file: !3, line: 1790, type: !8002)
!12389 = !DILocation(line: 1790, column: 43, scope: !12385)
!12390 = !DILocalVariable(name: "port", arg: 2, scope: !12385, file: !3, line: 1790, type: !32)
!12391 = !DILocation(line: 1790, column: 51, scope: !12385)
!12392 = !DILocalVariable(name: "addr", arg: 3, scope: !12385, file: !3, line: 1790, type: !581)
!12393 = !DILocation(line: 1790, column: 61, scope: !12385)
!12394 = !DILocalVariable(name: "cnt", arg: 4, scope: !12385, file: !3, line: 1790, type: !5372)
!12395 = !DILocation(line: 1790, column: 72, scope: !12385)
!12396 = !DILocalVariable(name: "data", scope: !12385, file: !3, line: 1792, type: !987)
!12397 = !DILocation(line: 1792, column: 6, scope: !12385)
!12398 = !DILocalVariable(name: "ctrl_addr", scope: !12385, file: !3, line: 1793, type: !581)
!12399 = !DILocation(line: 1793, column: 6, scope: !12385)
!12400 = !DILocalVariable(name: "interrupt", scope: !12385, file: !3, line: 1794, type: !7840)
!12401 = !DILocation(line: 1794, column: 7, scope: !12385)
!12402 = !DILocalVariable(name: "timeout", scope: !12385, file: !3, line: 1795, type: !32)
!12403 = !DILocation(line: 1795, column: 6, scope: !12385)
!12404 = !DILocation(line: 1797, column: 14, scope: !12385)
!12405 = !DILocation(line: 1797, column: 40, scope: !12385)
!12406 = !DILocation(line: 1797, column: 38, scope: !12385)
!12407 = !DILocation(line: 1797, column: 19, scope: !12385)
!12408 = !DILocation(line: 1797, column: 12, scope: !12385)
!12409 = !DILocation(line: 1799, column: 28, scope: !12385)
!12410 = !DILocation(line: 1799, column: 14, scope: !12385)
!12411 = !DILocation(line: 1799, column: 12, scope: !12385)
!12412 = !DILocation(line: 1801, column: 12, scope: !12385)
!12413 = !DILocation(line: 1802, column: 9, scope: !12385)
!12414 = !DILocation(line: 1802, column: 20, scope: !12385)
!12415 = !DILocation(line: 1802, column: 24, scope: !12385)
!12416 = !DILocation(line: 1802, column: 27, scope: !12385)
!12417 = !DILocation(line: 1802, column: 2, scope: !12385)
!12418 = !DILocation(line: 1803, column: 2, scope: !12385)
!12419 = !DILocation(line: 1803, column: 2, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 1803, column: 2)
!12421 = !DILocation(line: 1805, column: 15, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 1805, column: 2)
!12423 = !DILocation(line: 1805, column: 7, scope: !12422)
!12424 = !DILocation(line: 1805, column: 22, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 1805, column: 2)
!12426 = !DILocation(line: 1805, column: 30, scope: !12425)
!12427 = !DILocation(line: 1805, column: 2, scope: !12422)
!12428 = !DILocation(line: 1806, column: 16, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12425, file: !3, line: 1805, column: 46)
!12430 = !DILocation(line: 1806, column: 20, scope: !12429)
!12431 = !DILocation(line: 1806, column: 23, scope: !12429)
!12432 = !DILocation(line: 1806, column: 10, scope: !12429)
!12433 = !DILocation(line: 1806, column: 8, scope: !12429)
!12434 = !DILocation(line: 1808, column: 7, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12429, file: !3, line: 1808, column: 7)
!12436 = !DILocation(line: 1808, column: 12, scope: !12435)
!12437 = !DILocation(line: 1808, column: 7, scope: !12429)
!12438 = !DILocation(line: 1809, column: 8, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !3, line: 1809, column: 8)
!12440 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 1808, column: 33)
!12441 = !DILocation(line: 1809, column: 13, scope: !12439)
!12442 = !DILocation(line: 1809, column: 8, scope: !12440)
!12443 = !DILocation(line: 1810, column: 6, scope: !12439)
!12444 = !DILocation(line: 1810, column: 10, scope: !12439)
!12445 = !DILocation(line: 1810, column: 5, scope: !12439)
!12446 = !DILocation(line: 1811, column: 12, scope: !12440)
!12447 = !DILocation(line: 1811, column: 17, scope: !12440)
!12448 = !DILocation(line: 1811, column: 5, scope: !12440)
!12449 = !DILocation(line: 1811, column: 9, scope: !12440)
!12450 = !DILocation(line: 1812, column: 4, scope: !12440)
!12451 = !DILocation(line: 1814, column: 2, scope: !12429)
!12452 = !DILocation(line: 1805, column: 42, scope: !12425)
!12453 = !DILocation(line: 1805, column: 2, scope: !12425)
!12454 = distinct !{!12454, !12427, !12455}
!12455 = !DILocation(line: 1814, column: 2, scope: !12422)
!12456 = !DILocation(line: 1816, column: 18, scope: !12385)
!12457 = !DILocation(line: 1816, column: 22, scope: !12385)
!12458 = !DILocation(line: 1816, column: 2, scope: !12385)
!12459 = !DILocation(line: 1817, column: 1, scope: !12385)
!12460 = distinct !DISubprogram(name: "port_r_mib_pkt", scope: !3, file: !3, line: 1829, type: !12461, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12461 = !DISubroutineType(types: !12462)
!12462 = !{null, !8002, !32, !2516, !5372}
!12463 = !DILocalVariable(name: "hw", arg: 1, scope: !12460, file: !3, line: 1829, type: !8002)
!12464 = !DILocation(line: 1829, column: 43, scope: !12460)
!12465 = !DILocalVariable(name: "port", arg: 2, scope: !12460, file: !3, line: 1829, type: !32)
!12466 = !DILocation(line: 1829, column: 51, scope: !12460)
!12467 = !DILocalVariable(name: "last", arg: 3, scope: !12460, file: !3, line: 1829, type: !2516)
!12468 = !DILocation(line: 1829, column: 62, scope: !12460)
!12469 = !DILocalVariable(name: "cnt", arg: 4, scope: !12460, file: !3, line: 1829, type: !5372)
!12470 = !DILocation(line: 1829, column: 73, scope: !12460)
!12471 = !DILocalVariable(name: "cur", scope: !12460, file: !3, line: 1831, type: !987)
!12472 = !DILocation(line: 1831, column: 6, scope: !12460)
!12473 = !DILocalVariable(name: "data", scope: !12460, file: !3, line: 1832, type: !987)
!12474 = !DILocation(line: 1832, column: 6, scope: !12460)
!12475 = !DILocalVariable(name: "ctrl_addr", scope: !12460, file: !3, line: 1833, type: !581)
!12476 = !DILocation(line: 1833, column: 6, scope: !12460)
!12477 = !DILocalVariable(name: "interrupt", scope: !12460, file: !3, line: 1834, type: !7840)
!12478 = !DILocation(line: 1834, column: 7, scope: !12460)
!12479 = !DILocalVariable(name: "index", scope: !12460, file: !3, line: 1835, type: !32)
!12480 = !DILocation(line: 1835, column: 6, scope: !12460)
!12481 = !DILocation(line: 1837, column: 39, scope: !12460)
!12482 = !DILocation(line: 1837, column: 37, scope: !12460)
!12483 = !DILocation(line: 1837, column: 8, scope: !12460)
!12484 = !DILocation(line: 1838, column: 2, scope: !12460)
!12485 = !DILocation(line: 1839, column: 29, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 1838, column: 5)
!12487 = !DILocation(line: 1839, column: 15, scope: !12486)
!12488 = !DILocation(line: 1839, column: 13, scope: !12486)
!12489 = !DILocation(line: 1841, column: 21, scope: !12486)
!12490 = !DILocation(line: 1841, column: 15, scope: !12486)
!12491 = !DILocation(line: 1841, column: 13, scope: !12486)
!12492 = !DILocation(line: 1842, column: 13, scope: !12486)
!12493 = !DILocation(line: 1844, column: 10, scope: !12486)
!12494 = !DILocation(line: 1844, column: 21, scope: !12486)
!12495 = !DILocation(line: 1844, column: 25, scope: !12486)
!12496 = !DILocation(line: 1844, column: 28, scope: !12486)
!12497 = !DILocation(line: 1844, column: 3, scope: !12486)
!12498 = !DILocation(line: 1845, column: 3, scope: !12486)
!12499 = !DILocation(line: 1845, column: 3, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1845, column: 3)
!12501 = !DILocation(line: 1846, column: 16, scope: !12486)
!12502 = !DILocation(line: 1846, column: 20, scope: !12486)
!12503 = !DILocation(line: 1846, column: 23, scope: !12486)
!12504 = !DILocation(line: 1846, column: 10, scope: !12486)
!12505 = !DILocation(line: 1846, column: 8, scope: !12486)
!12506 = !DILocation(line: 1848, column: 19, scope: !12486)
!12507 = !DILocation(line: 1848, column: 23, scope: !12486)
!12508 = !DILocation(line: 1848, column: 3, scope: !12486)
!12509 = !DILocation(line: 1850, column: 8, scope: !12486)
!12510 = !DILocation(line: 1851, column: 10, scope: !12486)
!12511 = !DILocation(line: 1851, column: 9, scope: !12486)
!12512 = !DILocation(line: 1851, column: 7, scope: !12486)
!12513 = !DILocation(line: 1852, column: 7, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1852, column: 7)
!12515 = !DILocation(line: 1852, column: 15, scope: !12514)
!12516 = !DILocation(line: 1852, column: 12, scope: !12514)
!12517 = !DILocation(line: 1852, column: 7, scope: !12486)
!12518 = !DILocation(line: 1853, column: 12, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12514, file: !3, line: 1852, column: 20)
!12520 = !DILocation(line: 1853, column: 5, scope: !12519)
!12521 = !DILocation(line: 1853, column: 10, scope: !12519)
!12522 = !DILocation(line: 1854, column: 8, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12519, file: !3, line: 1854, column: 8)
!12524 = !DILocation(line: 1854, column: 15, scope: !12523)
!12525 = !DILocation(line: 1854, column: 13, scope: !12523)
!12526 = !DILocation(line: 1854, column: 8, scope: !12519)
!12527 = !DILocation(line: 1855, column: 10, scope: !12523)
!12528 = !DILocation(line: 1855, column: 5, scope: !12523)
!12529 = !DILocation(line: 1856, column: 12, scope: !12519)
!12530 = !DILocation(line: 1856, column: 9, scope: !12519)
!12531 = !DILocation(line: 1857, column: 12, scope: !12519)
!12532 = !DILocation(line: 1857, column: 5, scope: !12519)
!12533 = !DILocation(line: 1857, column: 9, scope: !12519)
!12534 = !DILocation(line: 1858, column: 3, scope: !12519)
!12535 = !DILocation(line: 1859, column: 3, scope: !12486)
!12536 = !DILocation(line: 1860, column: 3, scope: !12486)
!12537 = !DILocation(line: 1861, column: 9, scope: !12486)
!12538 = !DILocation(line: 1863, column: 2, scope: !12486)
!12539 = !DILocation(line: 1863, column: 11, scope: !12460)
!12540 = !DILocation(line: 1863, column: 49, scope: !12460)
!12541 = !DILocation(line: 1863, column: 47, scope: !12460)
!12542 = !DILocation(line: 1863, column: 17, scope: !12460)
!12543 = distinct !{!12543, !12484, !12544}
!12544 = !DILocation(line: 1863, column: 53, scope: !12460)
!12545 = !DILocation(line: 1864, column: 1, scope: !12460)
!12546 = distinct !DISubprogram(name: "hw_clr_wol_pme_status", scope: !3, file: !3, line: 3486, type: !8272, scopeLine: 3487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12547 = !DILocalVariable(name: "hw", arg: 1, scope: !12546, file: !3, line: 3486, type: !8002)
!12548 = !DILocation(line: 3486, column: 50, scope: !12546)
!12549 = !DILocalVariable(name: "hw_priv", scope: !12546, file: !3, line: 3488, type: !7512)
!12550 = !DILocation(line: 3488, column: 19, scope: !12546)
!12551 = !DILocalVariable(name: "__mptr", scope: !12552, file: !3, line: 3488, type: !591)
!12552 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 3488, column: 29)
!12553 = !DILocation(line: 3488, column: 29, scope: !12552)
!12554 = !DILocation(line: 3488, column: 29, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12552, file: !3, line: 3488, column: 29)
!12556 = !DILocalVariable(name: "pdev", scope: !12546, file: !3, line: 3489, type: !7517)
!12557 = !DILocation(line: 3489, column: 18, scope: !12546)
!12558 = !DILocation(line: 3489, column: 25, scope: !12546)
!12559 = !DILocation(line: 3489, column: 34, scope: !12546)
!12560 = !DILocalVariable(name: "data", scope: !12546, file: !3, line: 3490, type: !581)
!12561 = !DILocation(line: 3490, column: 6, scope: !12546)
!12562 = !DILocation(line: 3492, column: 7, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 3492, column: 6)
!12564 = !DILocation(line: 3492, column: 13, scope: !12563)
!12565 = !DILocation(line: 3492, column: 6, scope: !12546)
!12566 = !DILocation(line: 3493, column: 3, scope: !12563)
!12567 = !DILocation(line: 3496, column: 23, scope: !12546)
!12568 = !DILocation(line: 3496, column: 29, scope: !12546)
!12569 = !DILocation(line: 3496, column: 35, scope: !12546)
!12570 = !DILocation(line: 3496, column: 42, scope: !12546)
!12571 = !DILocation(line: 3496, column: 2, scope: !12546)
!12572 = !DILocation(line: 3497, column: 7, scope: !12546)
!12573 = !DILocation(line: 3498, column: 24, scope: !12546)
!12574 = !DILocation(line: 3498, column: 30, scope: !12546)
!12575 = !DILocation(line: 3498, column: 36, scope: !12546)
!12576 = !DILocation(line: 3498, column: 43, scope: !12546)
!12577 = !DILocation(line: 3498, column: 58, scope: !12546)
!12578 = !DILocation(line: 3498, column: 2, scope: !12546)
!12579 = !DILocation(line: 3499, column: 1, scope: !12546)
!12580 = distinct !DISubprogram(name: "hw_chk_wol_pme_status", scope: !3, file: !3, line: 3468, type: !9227, scopeLine: 3469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12581 = !DILocalVariable(name: "hw", arg: 1, scope: !12580, file: !3, line: 3468, type: !8002)
!12582 = !DILocation(line: 3468, column: 49, scope: !12580)
!12583 = !DILocalVariable(name: "hw_priv", scope: !12580, file: !3, line: 3470, type: !7512)
!12584 = !DILocation(line: 3470, column: 19, scope: !12580)
!12585 = !DILocalVariable(name: "__mptr", scope: !12586, file: !3, line: 3470, type: !591)
!12586 = distinct !DILexicalBlock(scope: !12580, file: !3, line: 3470, column: 29)
!12587 = !DILocation(line: 3470, column: 29, scope: !12586)
!12588 = !DILocation(line: 3470, column: 29, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3470, column: 29)
!12590 = !DILocalVariable(name: "pdev", scope: !12580, file: !3, line: 3471, type: !7517)
!12591 = !DILocation(line: 3471, column: 18, scope: !12580)
!12592 = !DILocation(line: 3471, column: 25, scope: !12580)
!12593 = !DILocation(line: 3471, column: 34, scope: !12580)
!12594 = !DILocalVariable(name: "data", scope: !12580, file: !3, line: 3472, type: !581)
!12595 = !DILocation(line: 3472, column: 6, scope: !12580)
!12596 = !DILocation(line: 3474, column: 7, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12580, file: !3, line: 3474, column: 6)
!12598 = !DILocation(line: 3474, column: 13, scope: !12597)
!12599 = !DILocation(line: 3474, column: 6, scope: !12580)
!12600 = !DILocation(line: 3475, column: 3, scope: !12597)
!12601 = !DILocation(line: 3476, column: 23, scope: !12580)
!12602 = !DILocation(line: 3476, column: 29, scope: !12580)
!12603 = !DILocation(line: 3476, column: 35, scope: !12580)
!12604 = !DILocation(line: 3476, column: 42, scope: !12580)
!12605 = !DILocation(line: 3476, column: 2, scope: !12580)
!12606 = !DILocation(line: 3477, column: 10, scope: !12580)
!12607 = !DILocation(line: 3477, column: 15, scope: !12580)
!12608 = !DILocation(line: 3477, column: 41, scope: !12580)
!12609 = !DILocation(line: 3477, column: 2, scope: !12580)
!12610 = !DILocation(line: 3478, column: 1, scope: !12580)
!12611 = distinct !DISubprogram(name: "ksz_update_timer", scope: !3, file: !3, line: 4339, type: !12612, scopeLine: 4340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{null, !9855}
!12614 = !DILocalVariable(name: "info", arg: 1, scope: !12611, file: !3, line: 4339, type: !9855)
!12615 = !DILocation(line: 4339, column: 53, scope: !12611)
!12616 = !DILocation(line: 4341, column: 4, scope: !12611)
!12617 = !DILocation(line: 4341, column: 10, scope: !12611)
!12618 = !DILocation(line: 4341, column: 2, scope: !12611)
!12619 = !DILocation(line: 4342, column: 6, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12611, file: !3, line: 4342, column: 6)
!12621 = !DILocation(line: 4342, column: 12, scope: !12620)
!12622 = !DILocation(line: 4342, column: 16, scope: !12620)
!12623 = !DILocation(line: 4342, column: 6, scope: !12611)
!12624 = !DILocation(line: 4343, column: 7, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 4343, column: 7)
!12626 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 4342, column: 21)
!12627 = !DILocation(line: 4343, column: 13, scope: !12625)
!12628 = !DILocation(line: 4343, column: 19, scope: !12625)
!12629 = !DILocation(line: 4343, column: 25, scope: !12625)
!12630 = !DILocation(line: 4343, column: 17, scope: !12625)
!12631 = !DILocation(line: 4343, column: 7, scope: !12626)
!12632 = !DILocation(line: 4344, column: 26, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12625, file: !3, line: 4343, column: 30)
!12634 = !DILocation(line: 4344, column: 36, scope: !12633)
!12635 = !DILocation(line: 4344, column: 42, scope: !12633)
!12636 = !DILocation(line: 4344, column: 34, scope: !12633)
!12637 = !DILocation(line: 4344, column: 4, scope: !12633)
!12638 = !DILocation(line: 4344, column: 10, scope: !12633)
!12639 = !DILocation(line: 4344, column: 16, scope: !12633)
!12640 = !DILocation(line: 4344, column: 24, scope: !12633)
!12641 = !DILocation(line: 4345, column: 15, scope: !12633)
!12642 = !DILocation(line: 4345, column: 21, scope: !12633)
!12643 = !DILocation(line: 4345, column: 4, scope: !12633)
!12644 = !DILocation(line: 4346, column: 3, scope: !12633)
!12645 = !DILocation(line: 4347, column: 4, scope: !12625)
!12646 = !DILocation(line: 4347, column: 10, scope: !12625)
!12647 = !DILocation(line: 4347, column: 14, scope: !12625)
!12648 = !DILocation(line: 4348, column: 2, scope: !12626)
!12649 = !DILocation(line: 4348, column: 13, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 4348, column: 13)
!12651 = !DILocation(line: 4348, column: 19, scope: !12650)
!12652 = !DILocation(line: 4348, column: 23, scope: !12650)
!12653 = !DILocation(line: 4348, column: 13, scope: !12620)
!12654 = !DILocation(line: 4349, column: 25, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12650, file: !3, line: 4348, column: 28)
!12656 = !DILocation(line: 4349, column: 35, scope: !12655)
!12657 = !DILocation(line: 4349, column: 41, scope: !12655)
!12658 = !DILocation(line: 4349, column: 33, scope: !12655)
!12659 = !DILocation(line: 4349, column: 3, scope: !12655)
!12660 = !DILocation(line: 4349, column: 9, scope: !12655)
!12661 = !DILocation(line: 4349, column: 15, scope: !12655)
!12662 = !DILocation(line: 4349, column: 23, scope: !12655)
!12663 = !DILocation(line: 4350, column: 14, scope: !12655)
!12664 = !DILocation(line: 4350, column: 20, scope: !12655)
!12665 = !DILocation(line: 4350, column: 3, scope: !12655)
!12666 = !DILocation(line: 4351, column: 2, scope: !12655)
!12667 = !DILocation(line: 4352, column: 1, scope: !12611)
!12668 = distinct !DISubprogram(name: "netdev_init", scope: !3, file: !3, line: 6769, type: !402, scopeLine: 6770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12669 = !DILocalVariable(name: "dev", arg: 1, scope: !12668, file: !3, line: 6769, type: !290)
!12670 = !DILocation(line: 6769, column: 50, scope: !12668)
!12671 = !DILocalVariable(name: "priv", scope: !12668, file: !3, line: 6771, type: !7985)
!12672 = !DILocation(line: 6771, column: 19, scope: !12668)
!12673 = !DILocation(line: 6771, column: 38, scope: !12668)
!12674 = !DILocation(line: 6771, column: 26, scope: !12668)
!12675 = !DILocation(line: 6774, column: 18, scope: !12668)
!12676 = !DILocation(line: 6774, column: 24, scope: !12668)
!12677 = !DILocation(line: 6774, column: 2, scope: !12668)
!12678 = !DILocation(line: 6778, column: 2, scope: !12668)
!12679 = !DILocation(line: 6778, column: 7, scope: !12668)
!12680 = !DILocation(line: 6778, column: 22, scope: !12668)
!12681 = !DILocation(line: 6780, column: 2, scope: !12668)
!12682 = !DILocation(line: 6780, column: 7, scope: !12668)
!12683 = !DILocation(line: 6780, column: 19, scope: !12668)
!12684 = !DILocation(line: 6786, column: 2, scope: !12668)
!12685 = !DILocation(line: 6786, column: 7, scope: !12668)
!12686 = !DILocation(line: 6786, column: 19, scope: !12668)
!12687 = !DILocation(line: 6788, column: 19, scope: !12668)
!12688 = !DILocation(line: 6788, column: 24, scope: !12668)
!12689 = !DILocation(line: 6788, column: 2, scope: !12668)
!12690 = !DILocation(line: 6788, column: 7, scope: !12668)
!12691 = !DILocation(line: 6788, column: 16, scope: !12668)
!12692 = !DILocation(line: 6790, column: 13, scope: !12668)
!12693 = !DILocation(line: 6790, column: 19, scope: !12668)
!12694 = !DILocation(line: 6790, column: 2, scope: !12668)
!12695 = !DILocation(line: 6792, column: 2, scope: !12668)
!12696 = !DILocation(line: 6792, column: 8, scope: !12668)
!12697 = !DILocation(line: 6792, column: 15, scope: !12668)
!12698 = !DILocation(line: 6792, column: 27, scope: !12668)
!12699 = !DILocation(line: 6793, column: 2, scope: !12668)
!12700 = !DILocation(line: 6793, column: 8, scope: !12668)
!12701 = !DILocation(line: 6793, column: 15, scope: !12668)
!12702 = !DILocation(line: 6793, column: 28, scope: !12668)
!12703 = !DILocation(line: 6794, column: 21, scope: !12668)
!12704 = !DILocation(line: 6794, column: 2, scope: !12668)
!12705 = !DILocation(line: 6794, column: 8, scope: !12668)
!12706 = !DILocation(line: 6794, column: 15, scope: !12668)
!12707 = !DILocation(line: 6794, column: 19, scope: !12668)
!12708 = !DILocation(line: 6795, column: 2, scope: !12668)
!12709 = !DILocation(line: 6795, column: 8, scope: !12668)
!12710 = !DILocation(line: 6795, column: 15, scope: !12668)
!12711 = !DILocation(line: 6795, column: 25, scope: !12668)
!12712 = !DILocation(line: 6796, column: 2, scope: !12668)
!12713 = !DILocation(line: 6796, column: 8, scope: !12668)
!12714 = !DILocation(line: 6796, column: 15, scope: !12668)
!12715 = !DILocation(line: 6796, column: 26, scope: !12668)
!12716 = !DILocation(line: 6797, column: 24, scope: !12668)
!12717 = !DILocation(line: 6797, column: 30, scope: !12668)
!12718 = !DILocation(line: 6797, column: 35, scope: !12668)
!12719 = !DILocation(line: 6797, column: 46, scope: !12668)
!12720 = !DILocation(line: 6797, column: 2, scope: !12668)
!12721 = !DILocation(line: 6797, column: 8, scope: !12668)
!12722 = !DILocation(line: 6797, column: 15, scope: !12668)
!12723 = !DILocation(line: 6797, column: 22, scope: !12668)
!12724 = !DILocation(line: 6799, column: 36, scope: !12668)
!12725 = !DILocation(line: 6799, column: 21, scope: !12668)
!12726 = !DILocation(line: 6799, column: 2, scope: !12668)
!12727 = !DILocation(line: 6799, column: 8, scope: !12668)
!12728 = !DILocation(line: 6799, column: 19, scope: !12668)
!12729 = !DILocation(line: 6802, column: 2, scope: !12668)
!12730 = distinct !DISubprogram(name: "netdev_open", scope: !3, file: !3, line: 5483, type: !402, scopeLine: 5484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12731 = !DILocalVariable(name: "dev", arg: 1, scope: !12730, file: !3, line: 5483, type: !290)
!12732 = !DILocation(line: 5483, column: 43, scope: !12730)
!12733 = !DILocalVariable(name: "priv", scope: !12730, file: !3, line: 5485, type: !7985)
!12734 = !DILocation(line: 5485, column: 19, scope: !12730)
!12735 = !DILocation(line: 5485, column: 38, scope: !12730)
!12736 = !DILocation(line: 5485, column: 26, scope: !12730)
!12737 = !DILocalVariable(name: "hw_priv", scope: !12730, file: !3, line: 5486, type: !7512)
!12738 = !DILocation(line: 5486, column: 19, scope: !12730)
!12739 = !DILocation(line: 5486, column: 29, scope: !12730)
!12740 = !DILocation(line: 5486, column: 35, scope: !12730)
!12741 = !DILocalVariable(name: "hw", scope: !12730, file: !3, line: 5487, type: !8002)
!12742 = !DILocation(line: 5487, column: 17, scope: !12730)
!12743 = !DILocation(line: 5487, column: 23, scope: !12730)
!12744 = !DILocation(line: 5487, column: 32, scope: !12730)
!12745 = !DILocalVariable(name: "port", scope: !12730, file: !3, line: 5488, type: !8386)
!12746 = !DILocation(line: 5488, column: 19, scope: !12730)
!12747 = !DILocation(line: 5488, column: 27, scope: !12730)
!12748 = !DILocation(line: 5488, column: 33, scope: !12730)
!12749 = !DILocalVariable(name: "i", scope: !12730, file: !3, line: 5489, type: !32)
!12750 = !DILocation(line: 5489, column: 6, scope: !12730)
!12751 = !DILocalVariable(name: "p", scope: !12730, file: !3, line: 5490, type: !32)
!12752 = !DILocation(line: 5490, column: 6, scope: !12730)
!12753 = !DILocalVariable(name: "rc", scope: !12730, file: !3, line: 5491, type: !32)
!12754 = !DILocation(line: 5491, column: 6, scope: !12730)
!12755 = !DILocation(line: 5493, column: 2, scope: !12730)
!12756 = !DILocation(line: 5493, column: 8, scope: !12730)
!12757 = !DILocation(line: 5493, column: 18, scope: !12730)
!12758 = !DILocation(line: 5494, column: 2, scope: !12730)
!12759 = !DILocation(line: 5494, column: 8, scope: !12730)
!12760 = !DILocation(line: 5494, column: 20, scope: !12730)
!12761 = !DILocation(line: 5497, column: 10, scope: !12730)
!12762 = !DILocation(line: 5497, column: 15, scope: !12730)
!12763 = !DILocation(line: 5497, column: 2, scope: !12730)
!12764 = !DILocation(line: 5498, column: 18, scope: !12730)
!12765 = !DILocation(line: 5498, column: 24, scope: !12730)
!12766 = !DILocation(line: 5498, column: 2, scope: !12730)
!12767 = !DILocation(line: 5501, column: 8, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 5501, column: 6)
!12769 = !DILocation(line: 5501, column: 17, scope: !12768)
!12770 = !DILocation(line: 5501, column: 7, scope: !12768)
!12771 = !DILocation(line: 5501, column: 6, scope: !12730)
!12772 = !DILocation(line: 5502, column: 25, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 5501, column: 26)
!12774 = !DILocation(line: 5502, column: 8, scope: !12773)
!12775 = !DILocation(line: 5502, column: 6, scope: !12773)
!12776 = !DILocation(line: 5503, column: 7, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 5503, column: 7)
!12778 = !DILocation(line: 5503, column: 7, scope: !12773)
!12779 = !DILocation(line: 5504, column: 11, scope: !12777)
!12780 = !DILocation(line: 5504, column: 4, scope: !12777)
!12781 = !DILocation(line: 5505, column: 10, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 5505, column: 3)
!12783 = !DILocation(line: 5505, column: 8, scope: !12782)
!12784 = !DILocation(line: 5505, column: 15, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 5505, column: 3)
!12786 = !DILocation(line: 5505, column: 19, scope: !12785)
!12787 = !DILocation(line: 5505, column: 23, scope: !12785)
!12788 = !DILocation(line: 5505, column: 17, scope: !12785)
!12789 = !DILocation(line: 5505, column: 3, scope: !12782)
!12790 = !DILocation(line: 5506, column: 8, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12792, file: !3, line: 5506, column: 8)
!12792 = distinct !DILexicalBlock(scope: !12785, file: !3, line: 5505, column: 42)
!12793 = !DILocation(line: 5506, column: 23, scope: !12791)
!12794 = !DILocation(line: 5506, column: 21, scope: !12791)
!12795 = !DILocation(line: 5506, column: 8, scope: !12792)
!12796 = !DILocation(line: 5507, column: 20, scope: !12791)
!12797 = !DILocation(line: 5507, column: 28, scope: !12791)
!12798 = !DILocation(line: 5507, column: 18, scope: !12791)
!12799 = !DILocation(line: 5507, column: 5, scope: !12791)
!12800 = !DILocation(line: 5509, column: 18, scope: !12791)
!12801 = !DILocation(line: 5510, column: 31, scope: !12792)
!12802 = !DILocation(line: 5510, column: 4, scope: !12792)
!12803 = !DILocation(line: 5510, column: 13, scope: !12792)
!12804 = !DILocation(line: 5510, column: 21, scope: !12792)
!12805 = !DILocation(line: 5510, column: 24, scope: !12792)
!12806 = !DILocation(line: 5510, column: 29, scope: !12792)
!12807 = !DILocation(line: 5511, column: 4, scope: !12792)
!12808 = !DILocation(line: 5511, column: 8, scope: !12792)
!12809 = !DILocation(line: 5511, column: 17, scope: !12792)
!12810 = !DILocation(line: 5511, column: 20, scope: !12792)
!12811 = !DILocation(line: 5511, column: 26, scope: !12792)
!12812 = !DILocation(line: 5512, column: 18, scope: !12792)
!12813 = !DILocation(line: 5512, column: 22, scope: !12792)
!12814 = !DILocation(line: 5512, column: 4, scope: !12792)
!12815 = !DILocation(line: 5513, column: 3, scope: !12792)
!12816 = !DILocation(line: 5505, column: 38, scope: !12785)
!12817 = !DILocation(line: 5505, column: 3, scope: !12785)
!12818 = distinct !{!12818, !12789, !12819}
!12819 = !DILocation(line: 5513, column: 3, scope: !12782)
!12820 = !DILocation(line: 5514, column: 7, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 5514, column: 7)
!12822 = !DILocation(line: 5514, column: 11, scope: !12821)
!12823 = !DILocation(line: 5514, column: 7, scope: !12773)
!12824 = !DILocation(line: 5515, column: 4, scope: !12821)
!12825 = !DILocation(line: 5515, column: 8, scope: !12821)
!12826 = !DILocation(line: 5515, column: 28, scope: !12821)
!12827 = !DILocation(line: 5515, column: 34, scope: !12821)
!12828 = !DILocation(line: 5517, column: 21, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 5516, column: 8)
!12830 = !DILocation(line: 5517, column: 4, scope: !12829)
!12831 = !DILocation(line: 5518, column: 19, scope: !12829)
!12832 = !DILocation(line: 5518, column: 4, scope: !12829)
!12833 = !DILocation(line: 5519, column: 27, scope: !12829)
!12834 = !DILocation(line: 5519, column: 36, scope: !12829)
!12835 = !DILocation(line: 5519, column: 4, scope: !12829)
!12836 = !DILocation(line: 5521, column: 2, scope: !12773)
!12837 = !DILocation(line: 5522, column: 24, scope: !12730)
!12838 = !DILocation(line: 5522, column: 2, scope: !12730)
!12839 = !DILocation(line: 5524, column: 9, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 5524, column: 2)
!12841 = !DILocation(line: 5524, column: 18, scope: !12840)
!12842 = !DILocation(line: 5524, column: 24, scope: !12840)
!12843 = !DILocation(line: 5524, column: 16, scope: !12840)
!12844 = !DILocation(line: 5524, column: 7, scope: !12840)
!12845 = !DILocation(line: 5524, column: 36, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12840, file: !3, line: 5524, column: 2)
!12847 = !DILocation(line: 5524, column: 40, scope: !12846)
!12848 = !DILocation(line: 5524, column: 46, scope: !12846)
!12849 = !DILocation(line: 5524, column: 38, scope: !12846)
!12850 = !DILocation(line: 5524, column: 2, scope: !12840)
!12851 = !DILocation(line: 5529, column: 3, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 5524, column: 66)
!12853 = !DILocation(line: 5529, column: 7, scope: !12852)
!12854 = !DILocation(line: 5529, column: 17, scope: !12852)
!12855 = !DILocation(line: 5529, column: 20, scope: !12852)
!12856 = !DILocation(line: 5529, column: 28, scope: !12852)
!12857 = !DILocation(line: 5530, column: 3, scope: !12852)
!12858 = !DILocation(line: 5530, column: 7, scope: !12852)
!12859 = !DILocation(line: 5530, column: 17, scope: !12852)
!12860 = !DILocation(line: 5530, column: 20, scope: !12852)
!12861 = !DILocation(line: 5530, column: 26, scope: !12852)
!12862 = !DILocation(line: 5531, column: 2, scope: !12852)
!12863 = !DILocation(line: 5524, column: 57, scope: !12846)
!12864 = !DILocation(line: 5524, column: 62, scope: !12846)
!12865 = !DILocation(line: 5524, column: 2, scope: !12846)
!12866 = distinct !{!12866, !12850, !12867}
!12867 = !DILocation(line: 5531, column: 2, scope: !12840)
!12868 = !DILocation(line: 5534, column: 6, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 5534, column: 6)
!12870 = !DILocation(line: 5534, column: 10, scope: !12869)
!12871 = !DILocation(line: 5534, column: 20, scope: !12869)
!12872 = !DILocation(line: 5534, column: 6, scope: !12730)
!12873 = !DILocation(line: 5535, column: 22, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12869, file: !3, line: 5534, column: 25)
!12875 = !DILocation(line: 5535, column: 26, scope: !12874)
!12876 = !DILocation(line: 5535, column: 32, scope: !12874)
!12877 = !DILocation(line: 5535, column: 3, scope: !12874)
!12878 = !DILocation(line: 5536, column: 7, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 5536, column: 7)
!12880 = !DILocation(line: 5536, column: 13, scope: !12879)
!12881 = !DILocation(line: 5536, column: 24, scope: !12879)
!12882 = !DILocation(line: 5536, column: 7, scope: !12874)
!12883 = !DILocation(line: 5537, column: 16, scope: !12879)
!12884 = !DILocation(line: 5537, column: 20, scope: !12879)
!12885 = !DILocation(line: 5537, column: 25, scope: !12879)
!12886 = !DILocation(line: 5537, column: 4, scope: !12879)
!12887 = !DILocation(line: 5538, column: 2, scope: !12874)
!12888 = !DILocation(line: 5540, column: 22, scope: !12730)
!12889 = !DILocation(line: 5540, column: 2, scope: !12730)
!12890 = !DILocation(line: 5541, column: 6, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 5541, column: 6)
!12892 = !DILocation(line: 5541, column: 12, scope: !12891)
!12893 = !DILocation(line: 5541, column: 6, scope: !12730)
!12894 = !DILocation(line: 5542, column: 25, scope: !12891)
!12895 = !DILocation(line: 5542, column: 3, scope: !12891)
!12896 = !DILocation(line: 5544, column: 23, scope: !12891)
!12897 = !DILocation(line: 5544, column: 3, scope: !12891)
!12898 = !DILocation(line: 5546, column: 8, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 5546, column: 6)
!12900 = !DILocation(line: 5546, column: 17, scope: !12899)
!12901 = !DILocation(line: 5546, column: 7, scope: !12899)
!12902 = !DILocation(line: 5546, column: 6, scope: !12730)
!12903 = !DILocation(line: 5547, column: 17, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 5546, column: 26)
!12905 = !DILocation(line: 5547, column: 3, scope: !12904)
!12906 = !DILocation(line: 5548, column: 13, scope: !12904)
!12907 = !DILocation(line: 5548, column: 3, scope: !12904)
!12908 = !DILocation(line: 5549, column: 15, scope: !12904)
!12909 = !DILocation(line: 5549, column: 3, scope: !12904)
!12910 = !DILocation(line: 5551, column: 7, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12904, file: !3, line: 5551, column: 7)
!12912 = !DILocation(line: 5551, column: 11, scope: !12911)
!12913 = !DILocation(line: 5551, column: 7, scope: !12904)
!12914 = !DILocation(line: 5552, column: 21, scope: !12911)
!12915 = !DILocation(line: 5552, column: 30, scope: !12911)
!12916 = !DILocation(line: 5553, column: 5, scope: !12911)
!12917 = !DILocation(line: 5553, column: 14, scope: !12911)
!12918 = !DILocation(line: 5553, column: 29, scope: !12911)
!12919 = !DILocation(line: 5552, column: 4, scope: !12911)
!12920 = !DILocation(line: 5554, column: 2, scope: !12904)
!12921 = !DILocation(line: 5556, column: 2, scope: !12730)
!12922 = !DILocation(line: 5556, column: 11, scope: !12730)
!12923 = !DILocation(line: 5556, column: 17, scope: !12730)
!12924 = !DILocation(line: 5558, column: 19, scope: !12730)
!12925 = !DILocation(line: 5558, column: 25, scope: !12730)
!12926 = !DILocation(line: 5559, column: 3, scope: !12730)
!12927 = !DILocation(line: 5559, column: 9, scope: !12730)
!12928 = !DILocation(line: 5559, column: 28, scope: !12730)
!12929 = !DILocation(line: 5558, column: 2, scope: !12730)
!12930 = !DILocation(line: 5561, column: 22, scope: !12730)
!12931 = !DILocation(line: 5561, column: 28, scope: !12730)
!12932 = !DILocation(line: 5561, column: 36, scope: !12730)
!12933 = !DILocation(line: 5561, column: 2, scope: !12730)
!12934 = !DILocation(line: 5561, column: 8, scope: !12730)
!12935 = !DILocation(line: 5561, column: 20, scope: !12730)
!12936 = !DILocation(line: 5563, column: 18, scope: !12730)
!12937 = !DILocation(line: 5563, column: 2, scope: !12730)
!12938 = !DILocation(line: 5564, column: 20, scope: !12730)
!12939 = !DILocation(line: 5564, column: 2, scope: !12730)
!12940 = !DILocation(line: 5566, column: 2, scope: !12730)
!12941 = !DILocation(line: 5567, column: 1, scope: !12730)
!12942 = distinct !DISubprogram(name: "netdev_close", scope: !3, file: !3, line: 5346, type: !402, scopeLine: 5347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12943 = !DILocalVariable(name: "dev", arg: 1, scope: !12942, file: !3, line: 5346, type: !290)
!12944 = !DILocation(line: 5346, column: 44, scope: !12942)
!12945 = !DILocalVariable(name: "priv", scope: !12942, file: !3, line: 5348, type: !7985)
!12946 = !DILocation(line: 5348, column: 19, scope: !12942)
!12947 = !DILocation(line: 5348, column: 38, scope: !12942)
!12948 = !DILocation(line: 5348, column: 26, scope: !12942)
!12949 = !DILocalVariable(name: "hw_priv", scope: !12942, file: !3, line: 5349, type: !7512)
!12950 = !DILocation(line: 5349, column: 19, scope: !12942)
!12951 = !DILocation(line: 5349, column: 29, scope: !12942)
!12952 = !DILocation(line: 5349, column: 35, scope: !12942)
!12953 = !DILocalVariable(name: "port", scope: !12942, file: !3, line: 5350, type: !8386)
!12954 = !DILocation(line: 5350, column: 19, scope: !12942)
!12955 = !DILocation(line: 5350, column: 27, scope: !12942)
!12956 = !DILocation(line: 5350, column: 33, scope: !12942)
!12957 = !DILocalVariable(name: "hw", scope: !12942, file: !3, line: 5351, type: !8002)
!12958 = !DILocation(line: 5351, column: 17, scope: !12942)
!12959 = !DILocation(line: 5351, column: 23, scope: !12942)
!12960 = !DILocation(line: 5351, column: 32, scope: !12942)
!12961 = !DILocalVariable(name: "pi", scope: !12942, file: !3, line: 5352, type: !32)
!12962 = !DILocation(line: 5352, column: 6, scope: !12942)
!12963 = !DILocation(line: 5354, column: 19, scope: !12942)
!12964 = !DILocation(line: 5354, column: 2, scope: !12942)
!12965 = !DILocation(line: 5356, column: 18, scope: !12942)
!12966 = !DILocation(line: 5356, column: 24, scope: !12942)
!12967 = !DILocation(line: 5356, column: 2, scope: !12942)
!12968 = !DILocation(line: 5359, column: 6, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 5359, column: 6)
!12970 = !DILocation(line: 5359, column: 10, scope: !12969)
!12971 = !DILocation(line: 5359, column: 20, scope: !12969)
!12972 = !DILocation(line: 5359, column: 6, scope: !12942)
!12973 = !DILocation(line: 5360, column: 22, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 5359, column: 25)
!12975 = !DILocation(line: 5360, column: 26, scope: !12974)
!12976 = !DILocation(line: 5360, column: 32, scope: !12974)
!12977 = !DILocation(line: 5360, column: 3, scope: !12974)
!12978 = !DILocation(line: 5363, column: 7, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 5363, column: 7)
!12980 = !DILocation(line: 5363, column: 11, scope: !12979)
!12981 = !DILocation(line: 5363, column: 20, scope: !12979)
!12982 = !DILocation(line: 5363, column: 7, scope: !12974)
!12983 = !DILocation(line: 5364, column: 14, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12979, file: !3, line: 5363, column: 35)
!12985 = !DILocation(line: 5364, column: 20, scope: !12984)
!12986 = !DILocation(line: 5364, column: 11, scope: !12984)
!12987 = !DILocation(line: 5364, column: 7, scope: !12984)
!12988 = !DILocation(line: 5365, column: 8, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12984, file: !3, line: 5365, column: 8)
!12990 = !DILocation(line: 5365, column: 12, scope: !12989)
!12991 = !DILocation(line: 5365, column: 24, scope: !12989)
!12992 = !DILocation(line: 5365, column: 33, scope: !12989)
!12993 = !DILocation(line: 5365, column: 31, scope: !12989)
!12994 = !DILocation(line: 5365, column: 8, scope: !12984)
!12995 = !DILocation(line: 5366, column: 32, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 5365, column: 37)
!12997 = !DILocation(line: 5366, column: 31, scope: !12996)
!12998 = !DILocation(line: 5366, column: 5, scope: !12996)
!12999 = !DILocation(line: 5366, column: 9, scope: !12996)
!13000 = !DILocation(line: 5366, column: 21, scope: !12996)
!13001 = !DILocation(line: 5366, column: 28, scope: !12996)
!13002 = !DILocation(line: 5367, column: 19, scope: !12996)
!13003 = !DILocation(line: 5367, column: 5, scope: !12996)
!13004 = !DILocation(line: 5368, column: 4, scope: !12996)
!13005 = !DILocation(line: 5369, column: 3, scope: !12984)
!13006 = !DILocation(line: 5370, column: 2, scope: !12974)
!13007 = !DILocation(line: 5371, column: 6, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 5371, column: 6)
!13009 = !DILocation(line: 5371, column: 12, scope: !13008)
!13010 = !DILocation(line: 5371, column: 23, scope: !13008)
!13011 = !DILocation(line: 5371, column: 6, scope: !12942)
!13012 = !DILocation(line: 5372, column: 15, scope: !13008)
!13013 = !DILocation(line: 5372, column: 19, scope: !13008)
!13014 = !DILocation(line: 5372, column: 24, scope: !13008)
!13015 = !DILocation(line: 5372, column: 3, scope: !13008)
!13016 = !DILocation(line: 5373, column: 7, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 5373, column: 6)
!13018 = !DILocation(line: 5373, column: 16, scope: !13017)
!13019 = !DILocation(line: 5373, column: 6, scope: !12942)
!13020 = !DILocation(line: 5374, column: 25, scope: !13017)
!13021 = !DILocation(line: 5374, column: 3, scope: !13017)
!13022 = !DILocation(line: 5376, column: 6, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 5376, column: 6)
!13024 = !DILocation(line: 5376, column: 12, scope: !13023)
!13025 = !DILocation(line: 5376, column: 6, scope: !12942)
!13026 = !DILocation(line: 5377, column: 5, scope: !13023)
!13027 = !DILocation(line: 5377, column: 9, scope: !13023)
!13028 = !DILocation(line: 5377, column: 3, scope: !13023)
!13029 = !DILocation(line: 5378, column: 6, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 5378, column: 6)
!13031 = !DILocation(line: 5378, column: 12, scope: !13030)
!13032 = !DILocation(line: 5378, column: 6, scope: !12942)
!13033 = !DILocation(line: 5379, column: 5, scope: !13030)
!13034 = !DILocation(line: 5379, column: 9, scope: !13030)
!13035 = !DILocation(line: 5379, column: 3, scope: !13030)
!13036 = !DILocation(line: 5381, column: 2, scope: !12942)
!13037 = !DILocation(line: 5381, column: 11, scope: !12942)
!13038 = !DILocation(line: 5381, column: 17, scope: !12942)
!13039 = !DILocation(line: 5382, column: 8, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 5382, column: 6)
!13041 = !DILocation(line: 5382, column: 17, scope: !13040)
!13042 = !DILocation(line: 5382, column: 7, scope: !13040)
!13043 = !DILocation(line: 5382, column: 6, scope: !12942)
!13044 = !DILocation(line: 5383, column: 19, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 5382, column: 26)
!13046 = !DILocation(line: 5383, column: 28, scope: !13045)
!13047 = !DILocation(line: 5383, column: 3, scope: !13045)
!13048 = !DILocation(line: 5384, column: 15, scope: !13045)
!13049 = !DILocation(line: 5384, column: 24, scope: !13045)
!13050 = !DILocation(line: 5384, column: 3, scope: !13045)
!13051 = !DILocation(line: 5386, column: 15, scope: !13045)
!13052 = !DILocation(line: 5386, column: 3, scope: !13045)
!13053 = !DILocation(line: 5387, column: 14, scope: !13045)
!13054 = !DILocation(line: 5387, column: 3, scope: !13045)
!13055 = !DILocation(line: 5388, column: 20, scope: !13045)
!13056 = !DILocation(line: 5388, column: 3, scope: !13045)
!13057 = !DILocation(line: 5391, column: 3, scope: !13045)
!13058 = !DILocation(line: 5393, column: 17, scope: !13045)
!13059 = !DILocation(line: 5393, column: 26, scope: !13045)
!13060 = !DILocation(line: 5393, column: 3, scope: !13045)
!13061 = !DILocation(line: 5394, column: 17, scope: !13045)
!13062 = !DILocation(line: 5394, column: 26, scope: !13045)
!13063 = !DILocation(line: 5394, column: 3, scope: !13045)
!13064 = !DILocation(line: 5395, column: 12, scope: !13045)
!13065 = !DILocation(line: 5395, column: 17, scope: !13045)
!13066 = !DILocation(line: 5395, column: 22, scope: !13045)
!13067 = !DILocation(line: 5395, column: 31, scope: !13045)
!13068 = !DILocation(line: 5395, column: 3, scope: !13045)
!13069 = !DILocation(line: 5397, column: 20, scope: !13045)
!13070 = !DILocation(line: 5397, column: 3, scope: !13045)
!13071 = !DILocation(line: 5398, column: 18, scope: !13045)
!13072 = !DILocation(line: 5398, column: 22, scope: !13045)
!13073 = !DILocation(line: 5398, column: 3, scope: !13045)
!13074 = !DILocation(line: 5399, column: 18, scope: !13045)
!13075 = !DILocation(line: 5399, column: 22, scope: !13045)
!13076 = !DILocation(line: 5399, column: 3, scope: !13045)
!13077 = !DILocation(line: 5402, column: 7, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13045, file: !3, line: 5402, column: 7)
!13079 = !DILocation(line: 5402, column: 11, scope: !13078)
!13080 = !DILocation(line: 5402, column: 20, scope: !13078)
!13081 = !DILocation(line: 5402, column: 7, scope: !13045)
!13082 = !DILocation(line: 5403, column: 25, scope: !13078)
!13083 = !DILocation(line: 5403, column: 4, scope: !13078)
!13084 = !DILocation(line: 5404, column: 2, scope: !13045)
!13085 = !DILocation(line: 5406, column: 2, scope: !12942)
!13086 = distinct !DISubprogram(name: "netdev_tx", scope: !3, file: !3, line: 4826, type: !412, scopeLine: 4827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13087 = !DILocalVariable(name: "lock", arg: 1, scope: !13088, file: !8358, line: 402, type: !2181)
!13088 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !8358, file: !8358, line: 402, type: !13089, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{null, !2181}
!13091 = !DILocation(line: 402, column: 57, scope: !13088, inlinedAt: !13092)
!13092 = distinct !DILocation(line: 4884, column: 2, scope: !13086)
!13093 = !DILocalVariable(name: "lock", arg: 1, scope: !13094, file: !8358, line: 377, type: !2181)
!13094 = distinct !DISubprogram(name: "spin_lock_irq", scope: !8358, file: !8358, line: 377, type: !13089, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13095 = !DILocation(line: 377, column: 55, scope: !13094, inlinedAt: !13096)
!13096 = distinct !DILocation(line: 4855, column: 2, scope: !13086)
!13097 = !DILocalVariable(name: "skb", arg: 1, scope: !13086, file: !3, line: 4826, type: !415)
!13098 = !DILocation(line: 4826, column: 46, scope: !13086)
!13099 = !DILocalVariable(name: "dev", arg: 2, scope: !13086, file: !3, line: 4826, type: !290)
!13100 = !DILocation(line: 4826, column: 70, scope: !13086)
!13101 = !DILocalVariable(name: "priv", scope: !13086, file: !3, line: 4828, type: !7985)
!13102 = !DILocation(line: 4828, column: 19, scope: !13086)
!13103 = !DILocation(line: 4828, column: 38, scope: !13086)
!13104 = !DILocation(line: 4828, column: 26, scope: !13086)
!13105 = !DILocalVariable(name: "hw_priv", scope: !13086, file: !3, line: 4829, type: !7512)
!13106 = !DILocation(line: 4829, column: 19, scope: !13086)
!13107 = !DILocation(line: 4829, column: 29, scope: !13086)
!13108 = !DILocation(line: 4829, column: 35, scope: !13086)
!13109 = !DILocalVariable(name: "hw", scope: !13086, file: !3, line: 4830, type: !8002)
!13110 = !DILocation(line: 4830, column: 17, scope: !13086)
!13111 = !DILocation(line: 4830, column: 23, scope: !13086)
!13112 = !DILocation(line: 4830, column: 32, scope: !13086)
!13113 = !DILocalVariable(name: "left", scope: !13086, file: !3, line: 4831, type: !32)
!13114 = !DILocation(line: 4831, column: 6, scope: !13086)
!13115 = !DILocalVariable(name: "num", scope: !13086, file: !3, line: 4832, type: !32)
!13116 = !DILocation(line: 4832, column: 6, scope: !13086)
!13117 = !DILocalVariable(name: "rc", scope: !13086, file: !3, line: 4833, type: !32)
!13118 = !DILocation(line: 4833, column: 6, scope: !13086)
!13119 = !DILocation(line: 4835, column: 6, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 4835, column: 6)
!13121 = !DILocation(line: 4835, column: 10, scope: !13120)
!13122 = !DILocation(line: 4835, column: 19, scope: !13120)
!13123 = !DILocation(line: 4835, column: 6, scope: !13086)
!13124 = !DILocalVariable(name: "org_skb", scope: !13125, file: !3, line: 4836, type: !415)
!13125 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 4835, column: 42)
!13126 = !DILocation(line: 4836, column: 19, scope: !13125)
!13127 = !DILocation(line: 4836, column: 29, scope: !13125)
!13128 = !DILocation(line: 4838, column: 7, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 4838, column: 7)
!13130 = !DILocation(line: 4838, column: 12, scope: !13129)
!13131 = !DILocation(line: 4838, column: 16, scope: !13129)
!13132 = !DILocation(line: 4838, column: 7, scope: !13125)
!13133 = !DILocation(line: 4839, column: 24, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13135, file: !3, line: 4839, column: 8)
!13135 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 4838, column: 23)
!13136 = !DILocation(line: 4839, column: 8, scope: !13134)
!13137 = !DILocation(line: 4839, column: 31, scope: !13134)
!13138 = !DILocation(line: 4839, column: 36, scope: !13134)
!13139 = !DILocation(line: 4839, column: 29, scope: !13134)
!13140 = !DILocation(line: 4839, column: 41, scope: !13134)
!13141 = !DILocation(line: 4839, column: 8, scope: !13135)
!13142 = !DILocation(line: 4840, column: 13, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 4839, column: 48)
!13144 = !DILocation(line: 4840, column: 18, scope: !13143)
!13145 = !DILocation(line: 4840, column: 23, scope: !13143)
!13146 = !DILocation(line: 4840, column: 28, scope: !13143)
!13147 = !DILocation(line: 4840, column: 42, scope: !13143)
!13148 = !DILocation(line: 4840, column: 47, scope: !13143)
!13149 = !DILocation(line: 4840, column: 40, scope: !13143)
!13150 = !DILocation(line: 4840, column: 37, scope: !13143)
!13151 = !DILocation(line: 4840, column: 5, scope: !13143)
!13152 = !DILocation(line: 4841, column: 5, scope: !13143)
!13153 = !DILocation(line: 4841, column: 10, scope: !13143)
!13154 = !DILocation(line: 4841, column: 14, scope: !13143)
!13155 = !DILocation(line: 4842, column: 4, scope: !13143)
!13156 = !DILocation(line: 4843, column: 28, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 4842, column: 11)
!13158 = !DILocation(line: 4843, column: 11, scope: !13157)
!13159 = !DILocation(line: 4843, column: 9, scope: !13157)
!13160 = !DILocation(line: 4844, column: 10, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 4844, column: 9)
!13162 = !DILocation(line: 4844, column: 9, scope: !13157)
!13163 = !DILocation(line: 4845, column: 6, scope: !13161)
!13164 = !DILocation(line: 4846, column: 12, scope: !13157)
!13165 = !DILocation(line: 4846, column: 17, scope: !13157)
!13166 = !DILocation(line: 4846, column: 23, scope: !13157)
!13167 = !DILocation(line: 4846, column: 32, scope: !13157)
!13168 = !DILocation(line: 4846, column: 38, scope: !13157)
!13169 = !DILocation(line: 4846, column: 47, scope: !13157)
!13170 = !DILocation(line: 4846, column: 5, scope: !13157)
!13171 = !DILocation(line: 4847, column: 13, scope: !13157)
!13172 = !DILocation(line: 4847, column: 18, scope: !13157)
!13173 = !DILocation(line: 4847, column: 23, scope: !13157)
!13174 = !DILocation(line: 4847, column: 32, scope: !13157)
!13175 = !DILocation(line: 4848, column: 11, scope: !13157)
!13176 = !DILocation(line: 4848, column: 20, scope: !13157)
!13177 = !DILocation(line: 4848, column: 9, scope: !13157)
!13178 = !DILocation(line: 4848, column: 6, scope: !13157)
!13179 = !DILocation(line: 4847, column: 5, scope: !13157)
!13180 = !DILocation(line: 4849, column: 5, scope: !13157)
!13181 = !DILocation(line: 4849, column: 10, scope: !13157)
!13182 = !DILocation(line: 4849, column: 14, scope: !13157)
!13183 = !DILocation(line: 4850, column: 18, scope: !13157)
!13184 = !DILocation(line: 4850, column: 27, scope: !13157)
!13185 = !DILocation(line: 4850, column: 5, scope: !13157)
!13186 = !DILocation(line: 4852, column: 3, scope: !13135)
!13187 = !DILocation(line: 4853, column: 2, scope: !13125)
!13188 = !DILocation(line: 4855, column: 17, scope: !13086)
!13189 = !DILocation(line: 4855, column: 26, scope: !13086)
!13190 = !DILocation(line: 379, column: 2, scope: !13191, inlinedAt: !13096)
!13191 = distinct !DILexicalBlock(scope: !13192, file: !8358, line: 379, column: 2)
!13192 = distinct !DILexicalBlock(scope: !13094, file: !8358, line: 379, column: 2)
!13193 = !DILocation(line: 379, column: 2, scope: !13194, inlinedAt: !13096)
!13194 = distinct !DILexicalBlock(scope: !13192, file: !8358, line: 379, column: 2)
!13195 = !{i32 -2145177086}
!13196 = !DILocation(line: 379, column: 2, scope: !13197, inlinedAt: !13096)
!13197 = distinct !DILexicalBlock(scope: !13194, file: !8358, line: 379, column: 2)
!13198 = !DILocation(line: 4857, column: 8, scope: !13086)
!13199 = !DILocation(line: 4857, column: 25, scope: !13086)
!13200 = !DILocation(line: 4857, column: 34, scope: !13086)
!13201 = !DILocation(line: 4857, column: 6, scope: !13086)
!13202 = !DILocation(line: 4858, column: 22, scope: !13086)
!13203 = !DILocation(line: 4858, column: 26, scope: !13086)
!13204 = !DILocation(line: 4858, column: 31, scope: !13086)
!13205 = !DILocation(line: 4858, column: 36, scope: !13086)
!13206 = !DILocation(line: 4858, column: 9, scope: !13086)
!13207 = !DILocation(line: 4858, column: 7, scope: !13086)
!13208 = !DILocation(line: 4859, column: 6, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 4859, column: 6)
!13210 = !DILocation(line: 4859, column: 6, scope: !13086)
!13211 = !DILocation(line: 4860, column: 7, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13213, file: !3, line: 4860, column: 7)
!13213 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 4859, column: 12)
!13214 = !DILocation(line: 4860, column: 14, scope: !13212)
!13215 = !DILocation(line: 4860, column: 12, scope: !13212)
!13216 = !DILocation(line: 4860, column: 18, scope: !13212)
!13217 = !DILocation(line: 4861, column: 28, scope: !13212)
!13218 = !DILocation(line: 4861, column: 33, scope: !13212)
!13219 = !DILocation(line: 4861, column: 25, scope: !13212)
!13220 = !DILocation(line: 4861, column: 43, scope: !13212)
!13221 = !DILocation(line: 4862, column: 8, scope: !13212)
!13222 = !DILocation(line: 4862, column: 13, scope: !13212)
!13223 = !DILocation(line: 4862, column: 22, scope: !13212)
!13224 = !DILocation(line: 4860, column: 7, scope: !13213)
!13225 = !DILocalVariable(name: "org_skb", scope: !13226, file: !3, line: 4863, type: !415)
!13226 = distinct !DILexicalBlock(scope: !13212, file: !3, line: 4862, column: 45)
!13227 = !DILocation(line: 4863, column: 20, scope: !13226)
!13228 = !DILocation(line: 4863, column: 30, scope: !13226)
!13229 = !DILocation(line: 4865, column: 27, scope: !13226)
!13230 = !DILocation(line: 4865, column: 32, scope: !13226)
!13231 = !DILocation(line: 4865, column: 41, scope: !13226)
!13232 = !DILocation(line: 4865, column: 10, scope: !13226)
!13233 = !DILocation(line: 4865, column: 8, scope: !13226)
!13234 = !DILocation(line: 4866, column: 9, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 4866, column: 8)
!13236 = !DILocation(line: 4866, column: 8, scope: !13226)
!13237 = !DILocation(line: 4867, column: 8, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 4866, column: 14)
!13239 = !DILocation(line: 4868, column: 5, scope: !13238)
!13240 = !DILocation(line: 4870, column: 26, scope: !13226)
!13241 = !DILocation(line: 4870, column: 35, scope: !13226)
!13242 = !DILocation(line: 4870, column: 40, scope: !13226)
!13243 = !DILocation(line: 4870, column: 4, scope: !13226)
!13244 = !DILocation(line: 4871, column: 4, scope: !13226)
!13245 = !DILocation(line: 4871, column: 13, scope: !13226)
!13246 = !DILocation(line: 4871, column: 23, scope: !13226)
!13247 = !DILocation(line: 4872, column: 15, scope: !13226)
!13248 = !DILocation(line: 4872, column: 24, scope: !13226)
!13249 = !DILocation(line: 4872, column: 4, scope: !13226)
!13250 = !DILocation(line: 4872, column: 9, scope: !13226)
!13251 = !DILocation(line: 4872, column: 13, scope: !13226)
!13252 = !DILocation(line: 4873, column: 17, scope: !13226)
!13253 = !DILocation(line: 4873, column: 26, scope: !13226)
!13254 = !DILocation(line: 4873, column: 4, scope: !13226)
!13255 = !DILocation(line: 4874, column: 3, scope: !13226)
!13256 = !DILocation(line: 4875, column: 15, scope: !13213)
!13257 = !DILocation(line: 4875, column: 20, scope: !13213)
!13258 = !DILocation(line: 4875, column: 3, scope: !13213)
!13259 = !DILocation(line: 4876, column: 7, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13213, file: !3, line: 4876, column: 7)
!13261 = !DILocation(line: 4876, column: 15, scope: !13260)
!13262 = !DILocation(line: 4876, column: 12, scope: !13260)
!13263 = !DILocation(line: 4876, column: 7, scope: !13213)
!13264 = !DILocation(line: 4877, column: 21, scope: !13260)
!13265 = !DILocation(line: 4877, column: 4, scope: !13260)
!13266 = !DILocation(line: 4878, column: 2, scope: !13213)
!13267 = !DILocation(line: 4880, column: 20, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 4878, column: 9)
!13269 = !DILocation(line: 4880, column: 3, scope: !13268)
!13270 = !DILocation(line: 4881, column: 6, scope: !13268)
!13271 = !DILabel(scope: !13086, name: "unlock", file: !3, line: 4883)
!13272 = !DILocation(line: 4883, column: 1, scope: !13086)
!13273 = !DILocation(line: 4884, column: 19, scope: !13086)
!13274 = !DILocation(line: 4884, column: 28, scope: !13086)
!13275 = !DILocation(line: 404, column: 2, scope: !13276, inlinedAt: !13092)
!13276 = distinct !DILexicalBlock(scope: !13277, file: !8358, line: 404, column: 2)
!13277 = distinct !DILexicalBlock(scope: !13088, file: !8358, line: 404, column: 2)
!13278 = !DILocation(line: 404, column: 2, scope: !13279, inlinedAt: !13092)
!13279 = distinct !DILexicalBlock(scope: !13277, file: !8358, line: 404, column: 2)
!13280 = !{i32 -2145175338}
!13281 = !DILocation(line: 404, column: 2, scope: !13282, inlinedAt: !13092)
!13282 = distinct !DILexicalBlock(scope: !13279, file: !8358, line: 404, column: 2)
!13283 = !DILocation(line: 4886, column: 9, scope: !13086)
!13284 = !DILocation(line: 4886, column: 2, scope: !13086)
!13285 = !DILocation(line: 4887, column: 1, scope: !13086)
!13286 = distinct !DISubprogram(name: "netdev_set_rx_mode", scope: !3, file: !3, line: 5732, type: !406, scopeLine: 5733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13287 = !DILocalVariable(name: "dev", arg: 1, scope: !13286, file: !3, line: 5732, type: !290)
!13288 = !DILocation(line: 5732, column: 51, scope: !13286)
!13289 = !DILocalVariable(name: "priv", scope: !13286, file: !3, line: 5734, type: !7985)
!13290 = !DILocation(line: 5734, column: 19, scope: !13286)
!13291 = !DILocation(line: 5734, column: 38, scope: !13286)
!13292 = !DILocation(line: 5734, column: 26, scope: !13286)
!13293 = !DILocalVariable(name: "hw_priv", scope: !13286, file: !3, line: 5735, type: !7512)
!13294 = !DILocation(line: 5735, column: 19, scope: !13286)
!13295 = !DILocation(line: 5735, column: 29, scope: !13286)
!13296 = !DILocation(line: 5735, column: 35, scope: !13286)
!13297 = !DILocalVariable(name: "hw", scope: !13286, file: !3, line: 5736, type: !8002)
!13298 = !DILocation(line: 5736, column: 17, scope: !13286)
!13299 = !DILocation(line: 5736, column: 23, scope: !13286)
!13300 = !DILocation(line: 5736, column: 32, scope: !13286)
!13301 = !DILocalVariable(name: "ha", scope: !13286, file: !3, line: 5737, type: !8077)
!13302 = !DILocation(line: 5737, column: 25, scope: !13286)
!13303 = !DILocalVariable(name: "multicast", scope: !13286, file: !3, line: 5738, type: !32)
!13304 = !DILocation(line: 5738, column: 6, scope: !13286)
!13305 = !DILocation(line: 5738, column: 19, scope: !13286)
!13306 = !DILocation(line: 5738, column: 24, scope: !13286)
!13307 = !DILocation(line: 5738, column: 30, scope: !13286)
!13308 = !DILocation(line: 5740, column: 22, scope: !13286)
!13309 = !DILocation(line: 5740, column: 27, scope: !13286)
!13310 = !DILocation(line: 5740, column: 33, scope: !13286)
!13311 = !DILocation(line: 5740, column: 38, scope: !13286)
!13312 = !DILocation(line: 5740, column: 43, scope: !13286)
!13313 = !DILocation(line: 5740, column: 49, scope: !13286)
!13314 = !DILocation(line: 5740, column: 2, scope: !13286)
!13315 = !DILocation(line: 5742, column: 6, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 5742, column: 6)
!13317 = !DILocation(line: 5742, column: 15, scope: !13316)
!13318 = !DILocation(line: 5742, column: 18, scope: !13316)
!13319 = !DILocation(line: 5742, column: 28, scope: !13316)
!13320 = !DILocation(line: 5742, column: 6, scope: !13286)
!13321 = !DILocation(line: 5743, column: 17, scope: !13316)
!13322 = !DILocation(line: 5743, column: 22, scope: !13316)
!13323 = !DILocation(line: 5743, column: 28, scope: !13316)
!13324 = !DILocation(line: 5743, column: 13, scope: !13316)
!13325 = !DILocation(line: 5743, column: 3, scope: !13316)
!13326 = !DILocation(line: 5744, column: 20, scope: !13286)
!13327 = !DILocation(line: 5744, column: 26, scope: !13286)
!13328 = !DILocation(line: 5744, column: 30, scope: !13286)
!13329 = !DILocation(line: 5744, column: 2, scope: !13286)
!13330 = !DILocation(line: 5747, column: 6, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 5747, column: 6)
!13332 = !DILocation(line: 5747, column: 15, scope: !13331)
!13333 = !DILocation(line: 5747, column: 18, scope: !13331)
!13334 = !DILocation(line: 5747, column: 28, scope: !13331)
!13335 = !DILocation(line: 5747, column: 6, scope: !13286)
!13336 = !DILocation(line: 5748, column: 3, scope: !13331)
!13337 = !DILocation(line: 5750, column: 7, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 5750, column: 6)
!13339 = !DILocation(line: 5750, column: 12, scope: !13338)
!13340 = !DILocation(line: 5750, column: 18, scope: !13338)
!13341 = !DILocation(line: 5750, column: 35, scope: !13338)
!13342 = !DILocation(line: 5750, column: 39, scope: !13338)
!13343 = !DILocation(line: 5750, column: 6, scope: !13286)
!13344 = !DILocalVariable(name: "i", scope: !13345, file: !3, line: 5751, type: !32)
!13345 = distinct !DILexicalBlock(scope: !13338, file: !3, line: 5750, column: 61)
!13346 = !DILocation(line: 5751, column: 7, scope: !13345)
!13347 = !DILocation(line: 5754, column: 7, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13345, file: !3, line: 5754, column: 7)
!13349 = !DILocation(line: 5754, column: 28, scope: !13348)
!13350 = !DILocation(line: 5754, column: 7, scope: !13345)
!13351 = !DILocation(line: 5755, column: 30, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 5755, column: 8)
!13353 = distinct !DILexicalBlock(scope: !13348, file: !3, line: 5754, column: 50)
!13354 = !DILocation(line: 5755, column: 34, scope: !13352)
!13355 = !DILocation(line: 5755, column: 27, scope: !13352)
!13356 = !DILocation(line: 5755, column: 8, scope: !13353)
!13357 = !DILocation(line: 5756, column: 5, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13352, file: !3, line: 5755, column: 51)
!13359 = !DILocation(line: 5756, column: 9, scope: !13358)
!13360 = !DILocation(line: 5756, column: 25, scope: !13358)
!13361 = !DILocation(line: 5757, column: 7, scope: !13358)
!13362 = !DILocation(line: 5757, column: 11, scope: !13358)
!13363 = !DILocation(line: 5757, column: 5, scope: !13358)
!13364 = !DILocation(line: 5758, column: 22, scope: !13358)
!13365 = !DILocation(line: 5758, column: 26, scope: !13358)
!13366 = !DILocation(line: 5758, column: 30, scope: !13358)
!13367 = !DILocation(line: 5758, column: 5, scope: !13358)
!13368 = !DILocation(line: 5759, column: 4, scope: !13358)
!13369 = !DILocation(line: 5760, column: 4, scope: !13353)
!13370 = !DILocalVariable(name: "__mptr", scope: !13371, file: !3, line: 5763, type: !591)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 5763, column: 3)
!13372 = distinct !DILexicalBlock(scope: !13345, file: !3, line: 5763, column: 3)
!13373 = !DILocation(line: 5763, column: 3, scope: !13371)
!13374 = !DILocation(line: 5763, column: 3, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 5763, column: 3)
!13376 = !DILocation(line: 5763, column: 3, scope: !13372)
!13377 = !DILocation(line: 5763, column: 3, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 5763, column: 3)
!13379 = !DILocation(line: 5764, column: 8, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13381, file: !3, line: 5764, column: 8)
!13381 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 5763, column: 36)
!13382 = !DILocation(line: 5764, column: 10, scope: !13380)
!13383 = !DILocation(line: 5764, column: 8, scope: !13381)
!13384 = !DILocation(line: 5765, column: 5, scope: !13380)
!13385 = !DILocation(line: 5766, column: 11, scope: !13381)
!13386 = !DILocation(line: 5766, column: 15, scope: !13381)
!13387 = !DILocation(line: 5766, column: 27, scope: !13381)
!13388 = !DILocation(line: 5766, column: 4, scope: !13381)
!13389 = !DILocation(line: 5766, column: 32, scope: !13381)
!13390 = !DILocation(line: 5766, column: 36, scope: !13381)
!13391 = !DILocation(line: 5767, column: 3, scope: !13381)
!13392 = !DILocalVariable(name: "__mptr", scope: !13393, file: !3, line: 5763, type: !591)
!13393 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 5763, column: 3)
!13394 = !DILocation(line: 5763, column: 3, scope: !13393)
!13395 = !DILocation(line: 5763, column: 3, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13393, file: !3, line: 5763, column: 3)
!13397 = distinct !{!13397, !13376, !13398}
!13398 = !DILocation(line: 5767, column: 3, scope: !13372)
!13399 = !DILocation(line: 5768, column: 30, scope: !13345)
!13400 = !DILocation(line: 5768, column: 25, scope: !13345)
!13401 = !DILocation(line: 5768, column: 3, scope: !13345)
!13402 = !DILocation(line: 5768, column: 7, scope: !13345)
!13403 = !DILocation(line: 5768, column: 23, scope: !13345)
!13404 = !DILocation(line: 5769, column: 19, scope: !13345)
!13405 = !DILocation(line: 5769, column: 3, scope: !13345)
!13406 = !DILocation(line: 5770, column: 2, scope: !13345)
!13407 = !DILocation(line: 5771, column: 29, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13409, file: !3, line: 5771, column: 7)
!13409 = distinct !DILexicalBlock(scope: !13338, file: !3, line: 5770, column: 9)
!13410 = !DILocation(line: 5771, column: 33, scope: !13408)
!13411 = !DILocation(line: 5771, column: 26, scope: !13408)
!13412 = !DILocation(line: 5771, column: 7, scope: !13409)
!13413 = !DILocation(line: 5772, column: 6, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13408, file: !3, line: 5771, column: 50)
!13415 = !DILocation(line: 5772, column: 10, scope: !13414)
!13416 = !DILocation(line: 5772, column: 4, scope: !13414)
!13417 = !DILocation(line: 5773, column: 21, scope: !13414)
!13418 = !DILocation(line: 5773, column: 25, scope: !13414)
!13419 = !DILocation(line: 5773, column: 29, scope: !13414)
!13420 = !DILocation(line: 5773, column: 4, scope: !13414)
!13421 = !DILocation(line: 5774, column: 3, scope: !13414)
!13422 = !DILocation(line: 5775, column: 3, scope: !13409)
!13423 = !DILocation(line: 5775, column: 7, scope: !13409)
!13424 = !DILocation(line: 5775, column: 23, scope: !13409)
!13425 = !DILocation(line: 5776, column: 20, scope: !13409)
!13426 = !DILocation(line: 5776, column: 3, scope: !13409)
!13427 = !DILocation(line: 5778, column: 1, scope: !13286)
!13428 = distinct !DISubprogram(name: "netdev_set_mac_address", scope: !3, file: !3, line: 5644, type: !589, scopeLine: 5645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13429 = !DILocalVariable(name: "dev", arg: 1, scope: !13428, file: !3, line: 5644, type: !290)
!13430 = !DILocation(line: 5644, column: 54, scope: !13428)
!13431 = !DILocalVariable(name: "addr", arg: 2, scope: !13428, file: !3, line: 5644, type: !591)
!13432 = !DILocation(line: 5644, column: 65, scope: !13428)
!13433 = !DILocalVariable(name: "priv", scope: !13428, file: !3, line: 5646, type: !7985)
!13434 = !DILocation(line: 5646, column: 19, scope: !13428)
!13435 = !DILocation(line: 5646, column: 38, scope: !13428)
!13436 = !DILocation(line: 5646, column: 26, scope: !13428)
!13437 = !DILocalVariable(name: "hw_priv", scope: !13428, file: !3, line: 5647, type: !7512)
!13438 = !DILocation(line: 5647, column: 19, scope: !13428)
!13439 = !DILocation(line: 5647, column: 29, scope: !13428)
!13440 = !DILocation(line: 5647, column: 35, scope: !13428)
!13441 = !DILocalVariable(name: "hw", scope: !13428, file: !3, line: 5648, type: !8002)
!13442 = !DILocation(line: 5648, column: 17, scope: !13428)
!13443 = !DILocation(line: 5648, column: 23, scope: !13428)
!13444 = !DILocation(line: 5648, column: 32, scope: !13428)
!13445 = !DILocalVariable(name: "mac", scope: !13428, file: !3, line: 5649, type: !13446)
!13446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!13447 = !DILocation(line: 5649, column: 19, scope: !13428)
!13448 = !DILocation(line: 5649, column: 25, scope: !13428)
!13449 = !DILocalVariable(name: "interrupt", scope: !13428, file: !3, line: 5650, type: !7840)
!13450 = !DILocation(line: 5650, column: 7, scope: !13428)
!13451 = !DILocation(line: 5652, column: 6, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13428, file: !3, line: 5652, column: 6)
!13453 = !DILocation(line: 5652, column: 12, scope: !13452)
!13454 = !DILocation(line: 5652, column: 17, scope: !13452)
!13455 = !DILocation(line: 5652, column: 28, scope: !13452)
!13456 = !DILocation(line: 5652, column: 6, scope: !13428)
!13457 = !DILocation(line: 5653, column: 15, scope: !13452)
!13458 = !DILocation(line: 5653, column: 19, scope: !13452)
!13459 = !DILocation(line: 5653, column: 24, scope: !13452)
!13460 = !DILocation(line: 5653, column: 3, scope: !13452)
!13461 = !DILocation(line: 5655, column: 3, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 5654, column: 7)
!13463 = !DILocation(line: 5655, column: 7, scope: !13462)
!13464 = !DILocation(line: 5655, column: 20, scope: !13462)
!13465 = !DILocation(line: 5656, column: 10, scope: !13462)
!13466 = !DILocation(line: 5656, column: 14, scope: !13462)
!13467 = !DILocation(line: 5656, column: 3, scope: !13462)
!13468 = !DILocation(line: 5656, column: 29, scope: !13462)
!13469 = !DILocation(line: 5656, column: 34, scope: !13462)
!13470 = !DILocation(line: 5659, column: 9, scope: !13428)
!13471 = !DILocation(line: 5659, column: 14, scope: !13428)
!13472 = !DILocation(line: 5659, column: 24, scope: !13428)
!13473 = !DILocation(line: 5659, column: 29, scope: !13428)
!13474 = !DILocation(line: 5659, column: 2, scope: !13428)
!13475 = !DILocation(line: 5661, column: 28, scope: !13428)
!13476 = !DILocation(line: 5661, column: 14, scope: !13428)
!13477 = !DILocation(line: 5661, column: 12, scope: !13428)
!13478 = !DILocation(line: 5663, column: 6, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13428, file: !3, line: 5663, column: 6)
!13480 = !DILocation(line: 5663, column: 12, scope: !13479)
!13481 = !DILocation(line: 5663, column: 17, scope: !13479)
!13482 = !DILocation(line: 5663, column: 28, scope: !13479)
!13483 = !DILocation(line: 5663, column: 6, scope: !13428)
!13484 = !DILocation(line: 5664, column: 15, scope: !13479)
!13485 = !DILocation(line: 5664, column: 19, scope: !13479)
!13486 = !DILocation(line: 5664, column: 24, scope: !13479)
!13487 = !DILocation(line: 5664, column: 3, scope: !13479)
!13488 = !DILocation(line: 5666, column: 15, scope: !13479)
!13489 = !DILocation(line: 5666, column: 3, scope: !13479)
!13490 = !DILocation(line: 5667, column: 18, scope: !13428)
!13491 = !DILocation(line: 5667, column: 22, scope: !13428)
!13492 = !DILocation(line: 5667, column: 2, scope: !13428)
!13493 = !DILocation(line: 5669, column: 2, scope: !13428)
!13494 = distinct !DISubprogram(name: "netdev_ioctl", scope: !3, file: !3, line: 5820, type: !595, scopeLine: 5821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13495 = !DILocalVariable(name: "dev", arg: 1, scope: !13494, file: !3, line: 5820, type: !290)
!13496 = !DILocation(line: 5820, column: 44, scope: !13494)
!13497 = !DILocalVariable(name: "ifr", arg: 2, scope: !13494, file: !3, line: 5820, type: !597)
!13498 = !DILocation(line: 5820, column: 63, scope: !13494)
!13499 = !DILocalVariable(name: "cmd", arg: 3, scope: !13494, file: !3, line: 5820, type: !32)
!13500 = !DILocation(line: 5820, column: 72, scope: !13494)
!13501 = !DILocalVariable(name: "priv", scope: !13494, file: !3, line: 5822, type: !7985)
!13502 = !DILocation(line: 5822, column: 19, scope: !13494)
!13503 = !DILocation(line: 5822, column: 38, scope: !13494)
!13504 = !DILocation(line: 5822, column: 26, scope: !13494)
!13505 = !DILocalVariable(name: "hw_priv", scope: !13494, file: !3, line: 5823, type: !7512)
!13506 = !DILocation(line: 5823, column: 19, scope: !13494)
!13507 = !DILocation(line: 5823, column: 29, scope: !13494)
!13508 = !DILocation(line: 5823, column: 35, scope: !13494)
!13509 = !DILocalVariable(name: "hw", scope: !13494, file: !3, line: 5824, type: !8002)
!13510 = !DILocation(line: 5824, column: 17, scope: !13494)
!13511 = !DILocation(line: 5824, column: 23, scope: !13494)
!13512 = !DILocation(line: 5824, column: 32, scope: !13494)
!13513 = !DILocalVariable(name: "port", scope: !13494, file: !3, line: 5825, type: !8386)
!13514 = !DILocation(line: 5825, column: 19, scope: !13494)
!13515 = !DILocation(line: 5825, column: 27, scope: !13494)
!13516 = !DILocation(line: 5825, column: 33, scope: !13494)
!13517 = !DILocalVariable(name: "result", scope: !13494, file: !3, line: 5826, type: !32)
!13518 = !DILocation(line: 5826, column: 6, scope: !13494)
!13519 = !DILocalVariable(name: "data", scope: !13494, file: !3, line: 5827, type: !8088)
!13520 = !DILocation(line: 5827, column: 25, scope: !13494)
!13521 = !DILocation(line: 5827, column: 39, scope: !13494)
!13522 = !DILocation(line: 5827, column: 32, scope: !13494)
!13523 = !DILocation(line: 5829, column: 26, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 5829, column: 6)
!13525 = !DILocation(line: 5829, column: 32, scope: !13524)
!13526 = !DILocation(line: 5829, column: 6, scope: !13524)
!13527 = !DILocation(line: 5829, column: 6, scope: !13494)
!13528 = !DILocation(line: 5830, column: 3, scope: !13524)
!13529 = !DILocation(line: 5832, column: 10, scope: !13494)
!13530 = !DILocation(line: 5832, column: 2, scope: !13494)
!13531 = !DILocation(line: 5835, column: 18, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 5832, column: 15)
!13533 = !DILocation(line: 5835, column: 24, scope: !13532)
!13534 = !DILocation(line: 5835, column: 3, scope: !13532)
!13535 = !DILocation(line: 5835, column: 9, scope: !13532)
!13536 = !DILocation(line: 5835, column: 16, scope: !13532)
!13537 = !DILocation(line: 5840, column: 7, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13532, file: !3, line: 5840, column: 7)
!13539 = !DILocation(line: 5840, column: 13, scope: !13538)
!13540 = !DILocation(line: 5840, column: 23, scope: !13538)
!13541 = !DILocation(line: 5840, column: 29, scope: !13538)
!13542 = !DILocation(line: 5840, column: 20, scope: !13538)
!13543 = !DILocation(line: 5840, column: 32, scope: !13538)
!13544 = !DILocation(line: 5840, column: 35, scope: !13538)
!13545 = !DILocation(line: 5840, column: 41, scope: !13538)
!13546 = !DILocation(line: 5840, column: 49, scope: !13538)
!13547 = !DILocation(line: 5840, column: 7, scope: !13532)
!13548 = !DILocation(line: 5841, column: 11, scope: !13538)
!13549 = !DILocation(line: 5841, column: 4, scope: !13538)
!13550 = !DILocation(line: 5843, column: 13, scope: !13538)
!13551 = !DILocation(line: 5843, column: 17, scope: !13538)
!13552 = !DILocation(line: 5843, column: 23, scope: !13538)
!13553 = !DILocation(line: 5843, column: 31, scope: !13538)
!13554 = !DILocation(line: 5843, column: 40, scope: !13538)
!13555 = !DILocation(line: 5843, column: 46, scope: !13538)
!13556 = !DILocation(line: 5844, column: 6, scope: !13538)
!13557 = !DILocation(line: 5844, column: 12, scope: !13538)
!13558 = !DILocation(line: 5843, column: 4, scope: !13538)
!13559 = !DILocation(line: 5845, column: 3, scope: !13532)
!13560 = !DILocation(line: 5849, column: 8, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13532, file: !3, line: 5849, column: 7)
!13562 = !DILocation(line: 5849, column: 7, scope: !13532)
!13563 = !DILocation(line: 5850, column: 11, scope: !13561)
!13564 = !DILocation(line: 5850, column: 4, scope: !13561)
!13565 = !DILocation(line: 5851, column: 12, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13561, file: !3, line: 5851, column: 12)
!13567 = !DILocation(line: 5851, column: 18, scope: !13566)
!13568 = !DILocation(line: 5851, column: 28, scope: !13566)
!13569 = !DILocation(line: 5851, column: 34, scope: !13566)
!13570 = !DILocation(line: 5851, column: 25, scope: !13566)
!13571 = !DILocation(line: 5851, column: 37, scope: !13566)
!13572 = !DILocation(line: 5851, column: 40, scope: !13566)
!13573 = !DILocation(line: 5851, column: 46, scope: !13566)
!13574 = !DILocation(line: 5851, column: 54, scope: !13566)
!13575 = !DILocation(line: 5851, column: 12, scope: !13561)
!13576 = !DILocation(line: 5852, column: 11, scope: !13566)
!13577 = !DILocation(line: 5852, column: 4, scope: !13566)
!13578 = !DILocation(line: 5854, column: 13, scope: !13566)
!13579 = !DILocation(line: 5854, column: 17, scope: !13566)
!13580 = !DILocation(line: 5854, column: 23, scope: !13566)
!13581 = !DILocation(line: 5854, column: 31, scope: !13566)
!13582 = !DILocation(line: 5854, column: 40, scope: !13566)
!13583 = !DILocation(line: 5854, column: 46, scope: !13566)
!13584 = !DILocation(line: 5855, column: 5, scope: !13566)
!13585 = !DILocation(line: 5855, column: 11, scope: !13566)
!13586 = !DILocation(line: 5854, column: 4, scope: !13566)
!13587 = !DILocation(line: 5856, column: 3, scope: !13532)
!13588 = !DILocation(line: 5859, column: 10, scope: !13532)
!13589 = !DILocation(line: 5860, column: 2, scope: !13532)
!13590 = !DILocation(line: 5862, column: 6, scope: !13494)
!13591 = !DILocation(line: 5862, column: 12, scope: !13494)
!13592 = !DILocation(line: 5862, column: 2, scope: !13494)
!13593 = !DILocation(line: 5864, column: 9, scope: !13494)
!13594 = !DILocation(line: 5864, column: 2, scope: !13494)
!13595 = !DILocation(line: 5865, column: 1, scope: !13494)
!13596 = distinct !DISubprogram(name: "netdev_change_mtu", scope: !3, file: !3, line: 5780, type: !723, scopeLine: 5781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13597 = !DILocalVariable(name: "dev", arg: 1, scope: !13596, file: !3, line: 5780, type: !290)
!13598 = !DILocation(line: 5780, column: 49, scope: !13596)
!13599 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !13596, file: !3, line: 5780, type: !32)
!13600 = !DILocation(line: 5780, column: 58, scope: !13596)
!13601 = !DILocalVariable(name: "priv", scope: !13596, file: !3, line: 5782, type: !7985)
!13602 = !DILocation(line: 5782, column: 19, scope: !13596)
!13603 = !DILocation(line: 5782, column: 38, scope: !13596)
!13604 = !DILocation(line: 5782, column: 26, scope: !13596)
!13605 = !DILocalVariable(name: "hw_priv", scope: !13596, file: !3, line: 5783, type: !7512)
!13606 = !DILocation(line: 5783, column: 19, scope: !13596)
!13607 = !DILocation(line: 5783, column: 29, scope: !13596)
!13608 = !DILocation(line: 5783, column: 35, scope: !13596)
!13609 = !DILocalVariable(name: "hw", scope: !13596, file: !3, line: 5784, type: !8002)
!13610 = !DILocation(line: 5784, column: 17, scope: !13596)
!13611 = !DILocation(line: 5784, column: 23, scope: !13596)
!13612 = !DILocation(line: 5784, column: 32, scope: !13596)
!13613 = !DILocalVariable(name: "hw_mtu", scope: !13596, file: !3, line: 5785, type: !32)
!13614 = !DILocation(line: 5785, column: 6, scope: !13596)
!13615 = !DILocation(line: 5787, column: 20, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 5787, column: 6)
!13617 = !DILocation(line: 5787, column: 6, scope: !13616)
!13618 = !DILocation(line: 5787, column: 6, scope: !13596)
!13619 = !DILocation(line: 5788, column: 3, scope: !13616)
!13620 = !DILocation(line: 5791, column: 6, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 5791, column: 6)
!13622 = !DILocation(line: 5791, column: 10, scope: !13621)
!13623 = !DILocation(line: 5791, column: 20, scope: !13621)
!13624 = !DILocation(line: 5791, column: 6, scope: !13596)
!13625 = !DILocation(line: 5792, column: 7, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13621, file: !3, line: 5792, column: 7)
!13627 = !DILocation(line: 5792, column: 14, scope: !13626)
!13628 = !DILocation(line: 5792, column: 23, scope: !13626)
!13629 = !DILocation(line: 5792, column: 11, scope: !13626)
!13630 = !DILocation(line: 5792, column: 7, scope: !13621)
!13631 = !DILocation(line: 5793, column: 4, scope: !13626)
!13632 = !DILocation(line: 5795, column: 11, scope: !13596)
!13633 = !DILocation(line: 5795, column: 19, scope: !13596)
!13634 = !DILocation(line: 5795, column: 42, scope: !13596)
!13635 = !DILocation(line: 5795, column: 9, scope: !13596)
!13636 = !DILocation(line: 5796, column: 6, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 5796, column: 6)
!13638 = !DILocation(line: 5796, column: 13, scope: !13637)
!13639 = !DILocation(line: 5796, column: 6, scope: !13596)
!13640 = !DILocation(line: 5797, column: 3, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 5796, column: 36)
!13642 = !DILocation(line: 5797, column: 7, scope: !13641)
!13643 = !DILocation(line: 5797, column: 16, scope: !13641)
!13644 = !DILocation(line: 5798, column: 10, scope: !13641)
!13645 = !DILocation(line: 5799, column: 2, scope: !13641)
!13646 = !DILocation(line: 5800, column: 3, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 5799, column: 9)
!13648 = !DILocation(line: 5800, column: 7, scope: !13647)
!13649 = !DILocation(line: 5800, column: 16, scope: !13647)
!13650 = !DILocation(line: 5801, column: 10, scope: !13647)
!13651 = !DILocation(line: 5803, column: 12, scope: !13596)
!13652 = !DILocation(line: 5803, column: 19, scope: !13596)
!13653 = !DILocation(line: 5803, column: 24, scope: !13596)
!13654 = !DILocation(line: 5803, column: 9, scope: !13596)
!13655 = !DILocation(line: 5804, column: 17, scope: !13596)
!13656 = !DILocation(line: 5804, column: 2, scope: !13596)
!13657 = !DILocation(line: 5804, column: 11, scope: !13596)
!13658 = !DILocation(line: 5804, column: 15, scope: !13596)
!13659 = !DILocation(line: 5805, column: 13, scope: !13596)
!13660 = !DILocation(line: 5805, column: 2, scope: !13596)
!13661 = !DILocation(line: 5805, column: 7, scope: !13596)
!13662 = !DILocation(line: 5805, column: 11, scope: !13596)
!13663 = !DILocation(line: 5807, column: 2, scope: !13596)
!13664 = !DILocation(line: 5808, column: 1, scope: !13596)
!13665 = !DILocalVariable(name: "dev", arg: 1, scope: !8280, file: !3, line: 4899, type: !290)
!13666 = !DILocation(line: 4899, column: 50, scope: !8280)
!13667 = !DILocalVariable(name: "txqueue", arg: 2, scope: !8280, file: !3, line: 4899, type: !7)
!13668 = !DILocation(line: 4899, column: 68, scope: !8280)
!13669 = !DILocalVariable(name: "priv", scope: !8280, file: !3, line: 4903, type: !7985)
!13670 = !DILocation(line: 4903, column: 19, scope: !8280)
!13671 = !DILocation(line: 4903, column: 38, scope: !8280)
!13672 = !DILocation(line: 4903, column: 26, scope: !8280)
!13673 = !DILocalVariable(name: "hw_priv", scope: !8280, file: !3, line: 4904, type: !7512)
!13674 = !DILocation(line: 4904, column: 19, scope: !8280)
!13675 = !DILocation(line: 4904, column: 29, scope: !8280)
!13676 = !DILocation(line: 4904, column: 35, scope: !8280)
!13677 = !DILocalVariable(name: "hw", scope: !8280, file: !3, line: 4905, type: !8002)
!13678 = !DILocation(line: 4905, column: 17, scope: !8280)
!13679 = !DILocation(line: 4905, column: 23, scope: !8280)
!13680 = !DILocation(line: 4905, column: 32, scope: !8280)
!13681 = !DILocalVariable(name: "port", scope: !8280, file: !3, line: 4906, type: !32)
!13682 = !DILocation(line: 4906, column: 6, scope: !8280)
!13683 = !DILocation(line: 4908, column: 6, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 4908, column: 6)
!13685 = !DILocation(line: 4908, column: 10, scope: !13684)
!13686 = !DILocation(line: 4908, column: 20, scope: !13684)
!13687 = !DILocation(line: 4908, column: 6, scope: !8280)
!13688 = !DILocation(line: 4913, column: 7, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 4913, column: 7)
!13690 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 4908, column: 25)
!13691 = !DILocation(line: 4913, column: 7, scope: !13690)
!13692 = !DILocation(line: 4914, column: 12, scope: !13689)
!13693 = !DILocation(line: 4914, column: 4, scope: !13689)
!13694 = !DILocation(line: 4915, column: 2, scope: !13690)
!13695 = !DILocation(line: 4917, column: 15, scope: !8280)
!13696 = !DILocation(line: 4917, column: 13, scope: !8280)
!13697 = !DILocation(line: 4918, column: 6, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 4918, column: 6)
!13699 = !DILocation(line: 4918, column: 6, scope: !8280)
!13700 = !DILocation(line: 4919, column: 15, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13698, file: !3, line: 4918, column: 15)
!13702 = !DILocation(line: 4919, column: 3, scope: !13701)
!13703 = !DILocation(line: 4920, column: 14, scope: !13701)
!13704 = !DILocation(line: 4920, column: 3, scope: !13701)
!13705 = !DILocation(line: 4922, column: 20, scope: !13701)
!13706 = !DILocation(line: 4922, column: 3, scope: !13701)
!13707 = !DILocation(line: 4923, column: 18, scope: !13701)
!13708 = !DILocation(line: 4923, column: 22, scope: !13701)
!13709 = !DILocation(line: 4923, column: 3, scope: !13701)
!13710 = !DILocation(line: 4924, column: 18, scope: !13701)
!13711 = !DILocation(line: 4924, column: 22, scope: !13701)
!13712 = !DILocation(line: 4924, column: 3, scope: !13701)
!13713 = !DILocation(line: 4925, column: 23, scope: !13701)
!13714 = !DILocation(line: 4925, column: 3, scope: !13701)
!13715 = !DILocation(line: 4927, column: 12, scope: !13701)
!13716 = !DILocation(line: 4927, column: 3, scope: !13701)
!13717 = !DILocation(line: 4929, column: 20, scope: !13701)
!13718 = !DILocation(line: 4930, column: 4, scope: !13701)
!13719 = !DILocation(line: 4930, column: 8, scope: !13701)
!13720 = !DILocation(line: 4930, column: 21, scope: !13701)
!13721 = !DILocation(line: 4931, column: 4, scope: !13701)
!13722 = !DILocation(line: 4931, column: 8, scope: !13701)
!13723 = !DILocation(line: 4931, column: 21, scope: !13701)
!13724 = !DILocation(line: 4929, column: 3, scope: !13701)
!13725 = !DILocation(line: 4932, column: 15, scope: !13701)
!13726 = !DILocation(line: 4932, column: 3, scope: !13701)
!13727 = !DILocation(line: 4933, column: 7, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 4933, column: 7)
!13729 = !DILocation(line: 4933, column: 11, scope: !13728)
!13730 = !DILocation(line: 4933, column: 7, scope: !13701)
!13731 = !DILocation(line: 4934, column: 21, scope: !13728)
!13732 = !DILocation(line: 4934, column: 25, scope: !13728)
!13733 = !DILocation(line: 4934, column: 29, scope: !13728)
!13734 = !DILocation(line: 4934, column: 4, scope: !13728)
!13735 = !DILocation(line: 4935, column: 12, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13728, file: !3, line: 4935, column: 12)
!13737 = !DILocation(line: 4935, column: 16, scope: !13736)
!13738 = !DILocation(line: 4935, column: 12, scope: !13728)
!13739 = !DILocation(line: 4936, column: 20, scope: !13736)
!13740 = !DILocation(line: 4936, column: 4, scope: !13736)
!13741 = !DILocation(line: 4938, column: 7, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 4938, column: 7)
!13743 = !DILocation(line: 4938, column: 11, scope: !13742)
!13744 = !DILocation(line: 4938, column: 21, scope: !13742)
!13745 = !DILocation(line: 4938, column: 7, scope: !13701)
!13746 = !DILocation(line: 4939, column: 20, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13742, file: !3, line: 4938, column: 26)
!13748 = !DILocation(line: 4939, column: 4, scope: !13747)
!13749 = !DILocation(line: 4940, column: 14, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13747, file: !3, line: 4940, column: 4)
!13751 = !DILocation(line: 4940, column: 9, scope: !13750)
!13752 = !DILocation(line: 4940, column: 19, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13750, file: !3, line: 4940, column: 4)
!13754 = !DILocation(line: 4940, column: 24, scope: !13753)
!13755 = !DILocation(line: 4940, column: 4, scope: !13750)
!13756 = !DILocalVariable(name: "port_dev", scope: !13757, file: !3, line: 4941, type: !290)
!13757 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 4940, column: 51)
!13758 = !DILocation(line: 4941, column: 24, scope: !13757)
!13759 = !DILocation(line: 4943, column: 24, scope: !13757)
!13760 = !DILocation(line: 4943, column: 28, scope: !13757)
!13761 = !DILocation(line: 4943, column: 5, scope: !13757)
!13762 = !DILocation(line: 4946, column: 16, scope: !13757)
!13763 = !DILocation(line: 4946, column: 20, scope: !13757)
!13764 = !DILocation(line: 4946, column: 30, scope: !13757)
!13765 = !DILocation(line: 4946, column: 36, scope: !13757)
!13766 = !DILocation(line: 4946, column: 14, scope: !13757)
!13767 = !DILocation(line: 4947, column: 23, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13757, file: !3, line: 4947, column: 9)
!13769 = !DILocation(line: 4947, column: 9, scope: !13768)
!13770 = !DILocation(line: 4947, column: 9, scope: !13757)
!13771 = !DILocation(line: 4948, column: 25, scope: !13768)
!13772 = !DILocation(line: 4948, column: 29, scope: !13768)
!13773 = !DILocation(line: 4948, column: 6, scope: !13768)
!13774 = !DILocation(line: 4950, column: 4, scope: !13757)
!13775 = !DILocation(line: 4940, column: 47, scope: !13753)
!13776 = !DILocation(line: 4940, column: 4, scope: !13753)
!13777 = distinct !{!13777, !13755, !13778}
!13778 = !DILocation(line: 4950, column: 4, scope: !13750)
!13779 = !DILocation(line: 4951, column: 3, scope: !13747)
!13780 = !DILocation(line: 4953, column: 13, scope: !13701)
!13781 = !DILocation(line: 4953, column: 3, scope: !13701)
!13782 = !DILocation(line: 4954, column: 15, scope: !13701)
!13783 = !DILocation(line: 4954, column: 3, scope: !13701)
!13784 = !DILocation(line: 4955, column: 2, scope: !13701)
!13785 = !DILocation(line: 4957, column: 21, scope: !8280)
!13786 = !DILocation(line: 4957, column: 2, scope: !8280)
!13787 = !DILocation(line: 4958, column: 19, scope: !8280)
!13788 = !DILocation(line: 4958, column: 2, scope: !8280)
!13789 = !DILocation(line: 4959, column: 1, scope: !8280)
!13790 = distinct !DISubprogram(name: "netdev_query_statistics", scope: !3, file: !3, line: 5588, type: !781, scopeLine: 5589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13791 = !DILocalVariable(name: "dev", arg: 1, scope: !13790, file: !3, line: 5588, type: !290)
!13792 = !DILocation(line: 5588, column: 76, scope: !13790)
!13793 = !DILocalVariable(name: "priv", scope: !13790, file: !3, line: 5590, type: !7985)
!13794 = !DILocation(line: 5590, column: 19, scope: !13790)
!13795 = !DILocation(line: 5590, column: 38, scope: !13790)
!13796 = !DILocation(line: 5590, column: 26, scope: !13790)
!13797 = !DILocalVariable(name: "port", scope: !13790, file: !3, line: 5591, type: !8386)
!13798 = !DILocation(line: 5591, column: 19, scope: !13790)
!13799 = !DILocation(line: 5591, column: 27, scope: !13790)
!13800 = !DILocation(line: 5591, column: 33, scope: !13790)
!13801 = !DILocalVariable(name: "hw", scope: !13790, file: !3, line: 5592, type: !8002)
!13802 = !DILocation(line: 5592, column: 17, scope: !13790)
!13803 = !DILocation(line: 5592, column: 23, scope: !13790)
!13804 = !DILocation(line: 5592, column: 29, scope: !13790)
!13805 = !DILocation(line: 5592, column: 38, scope: !13790)
!13806 = !DILocalVariable(name: "mib", scope: !13790, file: !3, line: 5593, type: !9750)
!13807 = !DILocation(line: 5593, column: 23, scope: !13790)
!13808 = !DILocalVariable(name: "i", scope: !13790, file: !3, line: 5594, type: !32)
!13809 = !DILocation(line: 5594, column: 6, scope: !13790)
!13810 = !DILocalVariable(name: "p", scope: !13790, file: !3, line: 5595, type: !32)
!13811 = !DILocation(line: 5595, column: 6, scope: !13790)
!13812 = !DILocation(line: 5597, column: 25, scope: !13790)
!13813 = !DILocation(line: 5597, column: 31, scope: !13790)
!13814 = !DILocation(line: 5597, column: 2, scope: !13790)
!13815 = !DILocation(line: 5597, column: 7, scope: !13790)
!13816 = !DILocation(line: 5597, column: 13, scope: !13790)
!13817 = !DILocation(line: 5597, column: 23, scope: !13790)
!13818 = !DILocation(line: 5598, column: 25, scope: !13790)
!13819 = !DILocation(line: 5598, column: 31, scope: !13790)
!13820 = !DILocation(line: 5598, column: 2, scope: !13790)
!13821 = !DILocation(line: 5598, column: 7, scope: !13790)
!13822 = !DILocation(line: 5598, column: 13, scope: !13790)
!13823 = !DILocation(line: 5598, column: 23, scope: !13790)
!13824 = !DILocation(line: 5601, column: 2, scope: !13790)
!13825 = !DILocation(line: 5601, column: 7, scope: !13790)
!13826 = !DILocation(line: 5601, column: 13, scope: !13790)
!13827 = !DILocation(line: 5601, column: 23, scope: !13790)
!13828 = !DILocation(line: 5602, column: 2, scope: !13790)
!13829 = !DILocation(line: 5602, column: 7, scope: !13790)
!13830 = !DILocation(line: 5602, column: 13, scope: !13790)
!13831 = !DILocation(line: 5602, column: 24, scope: !13790)
!13832 = !DILocation(line: 5603, column: 2, scope: !13790)
!13833 = !DILocation(line: 5603, column: 7, scope: !13790)
!13834 = !DILocation(line: 5603, column: 13, scope: !13790)
!13835 = !DILocation(line: 5603, column: 30, scope: !13790)
!13836 = !DILocation(line: 5604, column: 2, scope: !13790)
!13837 = !DILocation(line: 5604, column: 7, scope: !13790)
!13838 = !DILocation(line: 5604, column: 13, scope: !13790)
!13839 = !DILocation(line: 5604, column: 27, scope: !13790)
!13840 = !DILocation(line: 5605, column: 2, scope: !13790)
!13841 = !DILocation(line: 5605, column: 7, scope: !13790)
!13842 = !DILocation(line: 5605, column: 13, scope: !13790)
!13843 = !DILocation(line: 5605, column: 29, scope: !13790)
!13844 = !DILocation(line: 5606, column: 2, scope: !13790)
!13845 = !DILocation(line: 5606, column: 7, scope: !13790)
!13846 = !DILocation(line: 5606, column: 13, scope: !13790)
!13847 = !DILocation(line: 5606, column: 30, scope: !13790)
!13848 = !DILocation(line: 5608, column: 9, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13790, file: !3, line: 5608, column: 2)
!13850 = !DILocation(line: 5608, column: 18, scope: !13849)
!13851 = !DILocation(line: 5608, column: 24, scope: !13849)
!13852 = !DILocation(line: 5608, column: 16, scope: !13849)
!13853 = !DILocation(line: 5608, column: 7, scope: !13849)
!13854 = !DILocation(line: 5608, column: 36, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 5608, column: 2)
!13856 = !DILocation(line: 5608, column: 40, scope: !13855)
!13857 = !DILocation(line: 5608, column: 46, scope: !13855)
!13858 = !DILocation(line: 5608, column: 38, scope: !13855)
!13859 = !DILocation(line: 5608, column: 2, scope: !13849)
!13860 = !DILocation(line: 5609, column: 10, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 5608, column: 70)
!13862 = !DILocation(line: 5609, column: 14, scope: !13861)
!13863 = !DILocation(line: 5609, column: 23, scope: !13861)
!13864 = !DILocation(line: 5609, column: 7, scope: !13861)
!13865 = !DILocation(line: 5612, column: 4, scope: !13861)
!13866 = !DILocation(line: 5612, column: 9, scope: !13861)
!13867 = !DILocation(line: 5611, column: 3, scope: !13861)
!13868 = !DILocation(line: 5611, column: 8, scope: !13861)
!13869 = !DILocation(line: 5611, column: 14, scope: !13861)
!13870 = !DILocation(line: 5611, column: 24, scope: !13861)
!13871 = !DILocation(line: 5615, column: 4, scope: !13861)
!13872 = !DILocation(line: 5615, column: 9, scope: !13861)
!13873 = !DILocation(line: 5614, column: 3, scope: !13861)
!13874 = !DILocation(line: 5614, column: 8, scope: !13861)
!13875 = !DILocation(line: 5614, column: 14, scope: !13861)
!13876 = !DILocation(line: 5614, column: 25, scope: !13861)
!13877 = !DILocation(line: 5618, column: 4, scope: !13861)
!13878 = !DILocation(line: 5618, column: 9, scope: !13861)
!13879 = !DILocation(line: 5619, column: 4, scope: !13861)
!13880 = !DILocation(line: 5619, column: 9, scope: !13861)
!13881 = !DILocation(line: 5618, column: 43, scope: !13861)
!13882 = !DILocation(line: 5620, column: 4, scope: !13861)
!13883 = !DILocation(line: 5620, column: 9, scope: !13861)
!13884 = !DILocation(line: 5619, column: 42, scope: !13861)
!13885 = !DILocation(line: 5621, column: 4, scope: !13861)
!13886 = !DILocation(line: 5621, column: 9, scope: !13861)
!13887 = !DILocation(line: 5620, column: 42, scope: !13861)
!13888 = !DILocation(line: 5617, column: 3, scope: !13861)
!13889 = !DILocation(line: 5617, column: 8, scope: !13861)
!13890 = !DILocation(line: 5617, column: 14, scope: !13861)
!13891 = !DILocation(line: 5617, column: 31, scope: !13861)
!13892 = !DILocation(line: 5623, column: 4, scope: !13861)
!13893 = !DILocation(line: 5623, column: 9, scope: !13861)
!13894 = !DILocation(line: 5622, column: 3, scope: !13861)
!13895 = !DILocation(line: 5622, column: 8, scope: !13861)
!13896 = !DILocation(line: 5622, column: 14, scope: !13861)
!13897 = !DILocation(line: 5622, column: 28, scope: !13861)
!13898 = !DILocation(line: 5625, column: 4, scope: !13861)
!13899 = !DILocation(line: 5625, column: 9, scope: !13861)
!13900 = !DILocation(line: 5626, column: 4, scope: !13861)
!13901 = !DILocation(line: 5626, column: 9, scope: !13861)
!13902 = !DILocation(line: 5625, column: 47, scope: !13861)
!13903 = !DILocation(line: 5624, column: 3, scope: !13861)
!13904 = !DILocation(line: 5624, column: 8, scope: !13861)
!13905 = !DILocation(line: 5624, column: 14, scope: !13861)
!13906 = !DILocation(line: 5624, column: 30, scope: !13861)
!13907 = !DILocation(line: 5629, column: 4, scope: !13861)
!13908 = !DILocation(line: 5629, column: 9, scope: !13861)
!13909 = !DILocation(line: 5628, column: 3, scope: !13861)
!13910 = !DILocation(line: 5628, column: 8, scope: !13861)
!13911 = !DILocation(line: 5628, column: 14, scope: !13861)
!13912 = !DILocation(line: 5628, column: 31, scope: !13861)
!13913 = !DILocation(line: 5630, column: 2, scope: !13861)
!13914 = !DILocation(line: 5608, column: 61, scope: !13855)
!13915 = !DILocation(line: 5608, column: 66, scope: !13855)
!13916 = !DILocation(line: 5608, column: 2, scope: !13855)
!13917 = distinct !{!13917, !13859, !13918}
!13918 = !DILocation(line: 5630, column: 2, scope: !13849)
!13919 = !DILocation(line: 5632, column: 10, scope: !13790)
!13920 = !DILocation(line: 5632, column: 15, scope: !13790)
!13921 = !DILocation(line: 5632, column: 2, scope: !13790)
!13922 = distinct !DISubprogram(name: "netdev_set_features", scope: !3, file: !3, line: 6572, type: !917, scopeLine: 6574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13923 = !DILocalVariable(name: "dev", arg: 1, scope: !13922, file: !3, line: 6572, type: !290)
!13924 = !DILocation(line: 6572, column: 51, scope: !13922)
!13925 = !DILocalVariable(name: "features", arg: 2, scope: !13922, file: !3, line: 6573, type: !329)
!13926 = !DILocation(line: 6573, column: 20, scope: !13922)
!13927 = !DILocalVariable(name: "priv", scope: !13922, file: !3, line: 6575, type: !7985)
!13928 = !DILocation(line: 6575, column: 19, scope: !13922)
!13929 = !DILocation(line: 6575, column: 38, scope: !13922)
!13930 = !DILocation(line: 6575, column: 26, scope: !13922)
!13931 = !DILocalVariable(name: "hw_priv", scope: !13922, file: !3, line: 6576, type: !7512)
!13932 = !DILocation(line: 6576, column: 19, scope: !13922)
!13933 = !DILocation(line: 6576, column: 29, scope: !13922)
!13934 = !DILocation(line: 6576, column: 35, scope: !13922)
!13935 = !DILocalVariable(name: "hw", scope: !13922, file: !3, line: 6577, type: !8002)
!13936 = !DILocation(line: 6577, column: 17, scope: !13922)
!13937 = !DILocation(line: 6577, column: 23, scope: !13922)
!13938 = !DILocation(line: 6577, column: 32, scope: !13922)
!13939 = !DILocation(line: 6579, column: 14, scope: !13922)
!13940 = !DILocation(line: 6579, column: 23, scope: !13922)
!13941 = !DILocation(line: 6579, column: 2, scope: !13922)
!13942 = !DILocation(line: 6582, column: 6, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13922, file: !3, line: 6582, column: 6)
!13944 = !DILocation(line: 6582, column: 15, scope: !13943)
!13945 = !DILocation(line: 6582, column: 6, scope: !13922)
!13946 = !DILocation(line: 6583, column: 3, scope: !13943)
!13947 = !DILocation(line: 6583, column: 7, scope: !13943)
!13948 = !DILocation(line: 6583, column: 14, scope: !13943)
!13949 = !DILocation(line: 6585, column: 3, scope: !13943)
!13950 = !DILocation(line: 6585, column: 7, scope: !13943)
!13951 = !DILocation(line: 6585, column: 14, scope: !13943)
!13952 = !DILocation(line: 6587, column: 6, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13922, file: !3, line: 6587, column: 6)
!13954 = !DILocation(line: 6587, column: 10, scope: !13953)
!13955 = !DILocation(line: 6587, column: 6, scope: !13922)
!13956 = !DILocation(line: 6588, column: 10, scope: !13953)
!13957 = !DILocation(line: 6588, column: 14, scope: !13953)
!13958 = !DILocation(line: 6588, column: 22, scope: !13953)
!13959 = !DILocation(line: 6588, column: 26, scope: !13953)
!13960 = !DILocation(line: 6588, column: 29, scope: !13953)
!13961 = !DILocation(line: 6588, column: 3, scope: !13953)
!13962 = !DILocation(line: 6590, column: 16, scope: !13922)
!13963 = !DILocation(line: 6590, column: 25, scope: !13922)
!13964 = !DILocation(line: 6590, column: 2, scope: !13922)
!13965 = !DILocation(line: 6592, column: 2, scope: !13922)
!13966 = distinct !DISubprogram(name: "dev_monitor", scope: !3, file: !3, line: 6702, type: !3242, scopeLine: 6703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13967 = !DILocalVariable(name: "t", arg: 1, scope: !13966, file: !3, line: 6702, type: !3244)
!13968 = !DILocation(line: 6702, column: 44, scope: !13966)
!13969 = !DILocalVariable(name: "priv", scope: !13966, file: !3, line: 6704, type: !7985)
!13970 = !DILocation(line: 6704, column: 19, scope: !13966)
!13971 = !DILocalVariable(name: "__mptr", scope: !13972, file: !3, line: 6704, type: !591)
!13972 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 6704, column: 26)
!13973 = !DILocation(line: 6704, column: 26, scope: !13972)
!13974 = !DILocation(line: 6704, column: 26, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13972, file: !3, line: 6704, column: 26)
!13976 = !DILocalVariable(name: "dev", scope: !13966, file: !3, line: 6705, type: !290)
!13977 = !DILocation(line: 6705, column: 21, scope: !13966)
!13978 = !DILocation(line: 6705, column: 27, scope: !13966)
!13979 = !DILocation(line: 6705, column: 33, scope: !13966)
!13980 = !DILocation(line: 6705, column: 40, scope: !13966)
!13981 = !DILocalVariable(name: "hw_priv", scope: !13966, file: !3, line: 6706, type: !7512)
!13982 = !DILocation(line: 6706, column: 19, scope: !13966)
!13983 = !DILocation(line: 6706, column: 29, scope: !13966)
!13984 = !DILocation(line: 6706, column: 35, scope: !13966)
!13985 = !DILocalVariable(name: "hw", scope: !13966, file: !3, line: 6707, type: !8002)
!13986 = !DILocation(line: 6707, column: 17, scope: !13966)
!13987 = !DILocation(line: 6707, column: 23, scope: !13966)
!13988 = !DILocation(line: 6707, column: 32, scope: !13966)
!13989 = !DILocalVariable(name: "port", scope: !13966, file: !3, line: 6708, type: !8386)
!13990 = !DILocation(line: 6708, column: 19, scope: !13966)
!13991 = !DILocation(line: 6708, column: 27, scope: !13966)
!13992 = !DILocation(line: 6708, column: 33, scope: !13966)
!13993 = !DILocation(line: 6710, column: 8, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 6710, column: 6)
!13995 = !DILocation(line: 6710, column: 12, scope: !13994)
!13996 = !DILocation(line: 6710, column: 21, scope: !13994)
!13997 = !DILocation(line: 6710, column: 6, scope: !13966)
!13998 = !DILocation(line: 6711, column: 23, scope: !13994)
!13999 = !DILocation(line: 6711, column: 3, scope: !13994)
!14000 = !DILocation(line: 6712, column: 14, scope: !13966)
!14001 = !DILocation(line: 6712, column: 19, scope: !13966)
!14002 = !DILocation(line: 6712, column: 25, scope: !13966)
!14003 = !DILocation(line: 6712, column: 2, scope: !13966)
!14004 = !DILocation(line: 6714, column: 20, scope: !13966)
!14005 = !DILocation(line: 6714, column: 26, scope: !13966)
!14006 = !DILocation(line: 6714, column: 2, scope: !13966)
!14007 = !DILocation(line: 6715, column: 1, scope: !13966)
!14008 = !DILocalVariable(name: "sem", arg: 1, scope: !8259, file: !8008, line: 31, type: !8262)
!14009 = !DILocation(line: 31, column: 48, scope: !8259)
!14010 = !DILocalVariable(name: "val", arg: 2, scope: !8259, file: !8008, line: 31, type: !32)
!14011 = !DILocation(line: 31, column: 57, scope: !8259)
!14012 = !DILocation(line: 34, column: 3, scope: !8259)
!14013 = !DILocation(line: 34, column: 28, scope: !8259)
!14014 = !DILocation(line: 34, column: 9, scope: !8259)
!14015 = !DILocation(line: 35, column: 2, scope: !8259)
!14016 = !DILocation(line: 35, column: 2, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !8259, file: !8008, line: 35, column: 2)
!14018 = !DILocation(line: 36, column: 1, scope: !8259)
!14019 = distinct !DISubprogram(name: "mdio_read", scope: !3, file: !3, line: 5881, type: !832, scopeLine: 5882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14020 = !DILocalVariable(name: "dev", arg: 1, scope: !14019, file: !3, line: 5881, type: !290)
!14021 = !DILocation(line: 5881, column: 41, scope: !14019)
!14022 = !DILocalVariable(name: "phy_id", arg: 2, scope: !14019, file: !3, line: 5881, type: !32)
!14023 = !DILocation(line: 5881, column: 50, scope: !14019)
!14024 = !DILocalVariable(name: "reg_num", arg: 3, scope: !14019, file: !3, line: 5881, type: !32)
!14025 = !DILocation(line: 5881, column: 62, scope: !14019)
!14026 = !DILocalVariable(name: "priv", scope: !14019, file: !3, line: 5883, type: !7985)
!14027 = !DILocation(line: 5883, column: 19, scope: !14019)
!14028 = !DILocation(line: 5883, column: 38, scope: !14019)
!14029 = !DILocation(line: 5883, column: 26, scope: !14019)
!14030 = !DILocalVariable(name: "port", scope: !14019, file: !3, line: 5884, type: !8386)
!14031 = !DILocation(line: 5884, column: 19, scope: !14019)
!14032 = !DILocation(line: 5884, column: 27, scope: !14019)
!14033 = !DILocation(line: 5884, column: 33, scope: !14019)
!14034 = !DILocalVariable(name: "hw", scope: !14019, file: !3, line: 5885, type: !8002)
!14035 = !DILocation(line: 5885, column: 17, scope: !14019)
!14036 = !DILocation(line: 5885, column: 22, scope: !14019)
!14037 = !DILocation(line: 5885, column: 28, scope: !14019)
!14038 = !DILocalVariable(name: "val_out", scope: !14019, file: !3, line: 5886, type: !581)
!14039 = !DILocation(line: 5886, column: 6, scope: !14019)
!14040 = !DILocation(line: 5888, column: 11, scope: !14019)
!14041 = !DILocation(line: 5888, column: 15, scope: !14019)
!14042 = !DILocation(line: 5888, column: 21, scope: !14019)
!14043 = !DILocation(line: 5888, column: 29, scope: !14019)
!14044 = !DILocation(line: 5888, column: 38, scope: !14019)
!14045 = !DILocation(line: 5888, column: 46, scope: !14019)
!14046 = !DILocation(line: 5888, column: 2, scope: !14019)
!14047 = !DILocation(line: 5889, column: 9, scope: !14019)
!14048 = !DILocation(line: 5889, column: 2, scope: !14019)
!14049 = distinct !DISubprogram(name: "mdio_write", scope: !3, file: !3, line: 5901, type: !8029, scopeLine: 5902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14050 = !DILocalVariable(name: "dev", arg: 1, scope: !14049, file: !3, line: 5901, type: !290)
!14051 = !DILocation(line: 5901, column: 43, scope: !14049)
!14052 = !DILocalVariable(name: "phy_id", arg: 2, scope: !14049, file: !3, line: 5901, type: !32)
!14053 = !DILocation(line: 5901, column: 52, scope: !14049)
!14054 = !DILocalVariable(name: "reg_num", arg: 3, scope: !14049, file: !3, line: 5901, type: !32)
!14055 = !DILocation(line: 5901, column: 64, scope: !14049)
!14056 = !DILocalVariable(name: "val", arg: 4, scope: !14049, file: !3, line: 5901, type: !32)
!14057 = !DILocation(line: 5901, column: 77, scope: !14049)
!14058 = !DILocalVariable(name: "priv", scope: !14049, file: !3, line: 5903, type: !7985)
!14059 = !DILocation(line: 5903, column: 19, scope: !14049)
!14060 = !DILocation(line: 5903, column: 38, scope: !14049)
!14061 = !DILocation(line: 5903, column: 26, scope: !14049)
!14062 = !DILocalVariable(name: "port", scope: !14049, file: !3, line: 5904, type: !8386)
!14063 = !DILocation(line: 5904, column: 19, scope: !14049)
!14064 = !DILocation(line: 5904, column: 27, scope: !14049)
!14065 = !DILocation(line: 5904, column: 33, scope: !14049)
!14066 = !DILocalVariable(name: "hw", scope: !14049, file: !3, line: 5905, type: !8002)
!14067 = !DILocation(line: 5905, column: 17, scope: !14049)
!14068 = !DILocation(line: 5905, column: 22, scope: !14049)
!14069 = !DILocation(line: 5905, column: 28, scope: !14049)
!14070 = !DILocalVariable(name: "i", scope: !14049, file: !3, line: 5906, type: !32)
!14071 = !DILocation(line: 5906, column: 6, scope: !14049)
!14072 = !DILocalVariable(name: "pi", scope: !14049, file: !3, line: 5907, type: !32)
!14073 = !DILocation(line: 5907, column: 6, scope: !14049)
!14074 = !DILocation(line: 5909, column: 9, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14049, file: !3, line: 5909, column: 2)
!14076 = !DILocation(line: 5909, column: 19, scope: !14075)
!14077 = !DILocation(line: 5909, column: 25, scope: !14075)
!14078 = !DILocation(line: 5909, column: 17, scope: !14075)
!14079 = !DILocation(line: 5909, column: 7, scope: !14075)
!14080 = !DILocation(line: 5909, column: 37, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 5909, column: 2)
!14082 = !DILocation(line: 5909, column: 41, scope: !14081)
!14083 = !DILocation(line: 5909, column: 47, scope: !14081)
!14084 = !DILocation(line: 5909, column: 39, scope: !14081)
!14085 = !DILocation(line: 5909, column: 2, scope: !14075)
!14086 = !DILocation(line: 5910, column: 12, scope: !14081)
!14087 = !DILocation(line: 5910, column: 16, scope: !14081)
!14088 = !DILocation(line: 5910, column: 20, scope: !14081)
!14089 = !DILocation(line: 5910, column: 28, scope: !14081)
!14090 = !DILocation(line: 5910, column: 34, scope: !14081)
!14091 = !DILocation(line: 5910, column: 3, scope: !14081)
!14092 = !DILocation(line: 5909, column: 58, scope: !14081)
!14093 = !DILocation(line: 5909, column: 64, scope: !14081)
!14094 = !DILocation(line: 5909, column: 2, scope: !14081)
!14095 = distinct !{!14095, !14085, !14096}
!14096 = !DILocation(line: 5910, column: 37, scope: !14075)
!14097 = !DILocation(line: 5911, column: 1, scope: !14049)
!14098 = distinct !DISubprogram(name: "netif_msg_init", scope: !31, file: !31, line: 4162, type: !14099, scopeLine: 4163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14099 = !DISubroutineType(types: !14100)
!14100 = !{!987, !32, !32}
!14101 = !DILocalVariable(name: "debug_value", arg: 1, scope: !14098, file: !31, line: 4162, type: !32)
!14102 = !DILocation(line: 4162, column: 38, scope: !14098)
!14103 = !DILocalVariable(name: "default_msg_enable_bits", arg: 2, scope: !14098, file: !31, line: 4162, type: !32)
!14104 = !DILocation(line: 4162, column: 55, scope: !14098)
!14105 = !DILocation(line: 4165, column: 6, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14098, file: !31, line: 4165, column: 6)
!14107 = !DILocation(line: 4165, column: 18, scope: !14106)
!14108 = !DILocation(line: 4165, column: 22, scope: !14106)
!14109 = !DILocation(line: 4165, column: 25, scope: !14106)
!14110 = !DILocation(line: 4165, column: 37, scope: !14106)
!14111 = !DILocation(line: 4165, column: 6, scope: !14098)
!14112 = !DILocation(line: 4166, column: 10, scope: !14106)
!14113 = !DILocation(line: 4166, column: 3, scope: !14106)
!14114 = !DILocation(line: 4167, column: 6, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14098, file: !31, line: 4167, column: 6)
!14116 = !DILocation(line: 4167, column: 18, scope: !14115)
!14117 = !DILocation(line: 4167, column: 6, scope: !14098)
!14118 = !DILocation(line: 4168, column: 3, scope: !14115)
!14119 = !DILocation(line: 4170, column: 16, scope: !14098)
!14120 = !DILocation(line: 4170, column: 13, scope: !14098)
!14121 = !DILocation(line: 4170, column: 29, scope: !14098)
!14122 = !DILocation(line: 4170, column: 2, scope: !14098)
!14123 = !DILocation(line: 4171, column: 1, scope: !14098)
!14124 = distinct !DISubprogram(name: "port_get_link_speed", scope: !3, file: !3, line: 3279, type: !14125, scopeLine: 3280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{null, !8386}
!14127 = !DILocalVariable(name: "port", arg: 1, scope: !14124, file: !3, line: 3279, type: !8386)
!14128 = !DILocation(line: 3279, column: 50, scope: !14124)
!14129 = !DILocalVariable(name: "interrupt", scope: !14124, file: !3, line: 3281, type: !7840)
!14130 = !DILocation(line: 3281, column: 7, scope: !14124)
!14131 = !DILocalVariable(name: "info", scope: !14124, file: !3, line: 3282, type: !8004)
!14132 = !DILocation(line: 3282, column: 24, scope: !14124)
!14133 = !DILocalVariable(name: "linked", scope: !14124, file: !3, line: 3283, type: !8004)
!14134 = !DILocation(line: 3283, column: 24, scope: !14124)
!14135 = !DILocalVariable(name: "hw", scope: !14124, file: !3, line: 3284, type: !8002)
!14136 = !DILocation(line: 3284, column: 17, scope: !14124)
!14137 = !DILocation(line: 3284, column: 22, scope: !14124)
!14138 = !DILocation(line: 3284, column: 28, scope: !14124)
!14139 = !DILocalVariable(name: "data", scope: !14124, file: !3, line: 3285, type: !581)
!14140 = !DILocation(line: 3285, column: 6, scope: !14124)
!14141 = !DILocalVariable(name: "status", scope: !14124, file: !3, line: 3286, type: !581)
!14142 = !DILocation(line: 3286, column: 6, scope: !14124)
!14143 = !DILocalVariable(name: "local", scope: !14124, file: !3, line: 3287, type: !794)
!14144 = !DILocation(line: 3287, column: 5, scope: !14124)
!14145 = !DILocalVariable(name: "remote", scope: !14124, file: !3, line: 3288, type: !794)
!14146 = !DILocation(line: 3288, column: 5, scope: !14124)
!14147 = !DILocalVariable(name: "i", scope: !14124, file: !3, line: 3289, type: !32)
!14148 = !DILocation(line: 3289, column: 6, scope: !14124)
!14149 = !DILocalVariable(name: "p", scope: !14124, file: !3, line: 3290, type: !32)
!14150 = !DILocation(line: 3290, column: 6, scope: !14124)
!14151 = !DILocalVariable(name: "change", scope: !14124, file: !3, line: 3291, type: !32)
!14152 = !DILocation(line: 3291, column: 6, scope: !14124)
!14153 = !DILocation(line: 3293, column: 28, scope: !14124)
!14154 = !DILocation(line: 3293, column: 14, scope: !14124)
!14155 = !DILocation(line: 3293, column: 12, scope: !14124)
!14156 = !DILocation(line: 3295, column: 9, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 3295, column: 2)
!14158 = !DILocation(line: 3295, column: 18, scope: !14157)
!14159 = !DILocation(line: 3295, column: 24, scope: !14157)
!14160 = !DILocation(line: 3295, column: 16, scope: !14157)
!14161 = !DILocation(line: 3295, column: 7, scope: !14157)
!14162 = !DILocation(line: 3295, column: 36, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 3295, column: 2)
!14164 = !DILocation(line: 3295, column: 40, scope: !14163)
!14165 = !DILocation(line: 3295, column: 46, scope: !14163)
!14166 = !DILocation(line: 3295, column: 38, scope: !14163)
!14167 = !DILocation(line: 3295, column: 2, scope: !14157)
!14168 = !DILocation(line: 3296, column: 11, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14163, file: !3, line: 3295, column: 66)
!14170 = !DILocation(line: 3296, column: 15, scope: !14169)
!14171 = !DILocation(line: 3296, column: 25, scope: !14169)
!14172 = !DILocation(line: 3296, column: 8, scope: !14169)
!14173 = !DILocation(line: 3297, column: 12, scope: !14169)
!14174 = !DILocation(line: 3297, column: 16, scope: !14169)
!14175 = !DILocation(line: 3297, column: 3, scope: !14169)
!14176 = !DILocation(line: 3298, column: 12, scope: !14169)
!14177 = !DILocation(line: 3298, column: 16, scope: !14169)
!14178 = !DILocation(line: 3298, column: 3, scope: !14169)
!14179 = !DILocation(line: 3304, column: 12, scope: !14169)
!14180 = !DILocation(line: 3304, column: 19, scope: !14169)
!14181 = !DILocation(line: 3304, column: 10, scope: !14169)
!14182 = !DILocation(line: 3306, column: 16, scope: !14169)
!14183 = !DILocation(line: 3306, column: 11, scope: !14169)
!14184 = !DILocation(line: 3306, column: 9, scope: !14169)
!14185 = !DILocation(line: 3309, column: 7, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 3309, column: 7)
!14187 = !DILocation(line: 3309, column: 16, scope: !14186)
!14188 = !DILocation(line: 3309, column: 22, scope: !14186)
!14189 = !DILocation(line: 3309, column: 13, scope: !14186)
!14190 = !DILocation(line: 3309, column: 33, scope: !14186)
!14191 = !DILocation(line: 3309, column: 36, scope: !14186)
!14192 = !DILocation(line: 3309, column: 46, scope: !14186)
!14193 = !DILocation(line: 3309, column: 52, scope: !14186)
!14194 = !DILocation(line: 3309, column: 43, scope: !14186)
!14195 = !DILocation(line: 3309, column: 7, scope: !14169)
!14196 = !DILocation(line: 3310, column: 4, scope: !14186)
!14197 = !DILocation(line: 3312, column: 22, scope: !14169)
!14198 = !DILocation(line: 3312, column: 3, scope: !14169)
!14199 = !DILocation(line: 3312, column: 9, scope: !14169)
!14200 = !DILocation(line: 3312, column: 20, scope: !14169)
!14201 = !DILocation(line: 3313, column: 19, scope: !14169)
!14202 = !DILocation(line: 3313, column: 3, scope: !14169)
!14203 = !DILocation(line: 3313, column: 9, scope: !14169)
!14204 = !DILocation(line: 3313, column: 17, scope: !14169)
!14205 = !DILocation(line: 3314, column: 7, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 3314, column: 7)
!14207 = !DILocation(line: 3314, column: 14, scope: !14206)
!14208 = !DILocation(line: 3314, column: 7, scope: !14169)
!14209 = !DILocation(line: 3317, column: 9, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 3317, column: 8)
!14211 = distinct !DILexicalBlock(scope: !14206, file: !3, line: 3314, column: 39)
!14212 = !DILocation(line: 3317, column: 8, scope: !14211)
!14213 = !DILocation(line: 3318, column: 14, scope: !14210)
!14214 = !DILocation(line: 3318, column: 12, scope: !14210)
!14215 = !DILocation(line: 3318, column: 5, scope: !14210)
!14216 = !DILocation(line: 3320, column: 4, scope: !14211)
!14217 = !DILocation(line: 3320, column: 10, scope: !14211)
!14218 = !DILocation(line: 3320, column: 18, scope: !14211)
!14219 = !DILocation(line: 3321, column: 8, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 3321, column: 8)
!14221 = !DILocation(line: 3321, column: 15, scope: !14220)
!14222 = !DILocation(line: 3321, column: 8, scope: !14211)
!14223 = !DILocation(line: 3322, column: 5, scope: !14220)
!14224 = !DILocation(line: 3322, column: 11, scope: !14220)
!14225 = !DILocation(line: 3322, column: 19, scope: !14220)
!14226 = !DILocation(line: 3324, column: 4, scope: !14211)
!14227 = !DILocation(line: 3324, column: 10, scope: !14211)
!14228 = !DILocation(line: 3324, column: 17, scope: !14211)
!14229 = !DILocation(line: 3325, column: 8, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 3325, column: 8)
!14231 = !DILocation(line: 3325, column: 15, scope: !14230)
!14232 = !DILocation(line: 3325, column: 8, scope: !14211)
!14233 = !DILocation(line: 3326, column: 5, scope: !14230)
!14234 = !DILocation(line: 3326, column: 11, scope: !14230)
!14235 = !DILocation(line: 3326, column: 18, scope: !14230)
!14236 = !DILocation(line: 3328, column: 27, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 3328, column: 8)
!14238 = !DILocation(line: 3328, column: 33, scope: !14237)
!14239 = !DILocation(line: 3328, column: 24, scope: !14237)
!14240 = !DILocation(line: 3328, column: 8, scope: !14211)
!14241 = !DILocation(line: 3329, column: 14, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 3328, column: 40)
!14243 = !DILocation(line: 3329, column: 18, scope: !14242)
!14244 = !DILocation(line: 3329, column: 5, scope: !14242)
!14245 = !DILocation(line: 3331, column: 14, scope: !14242)
!14246 = !DILocation(line: 3331, column: 18, scope: !14242)
!14247 = !DILocation(line: 3331, column: 5, scope: !14242)
!14248 = !DILocation(line: 3333, column: 25, scope: !14242)
!14249 = !DILocation(line: 3333, column: 29, scope: !14242)
!14250 = !DILocation(line: 3333, column: 35, scope: !14242)
!14251 = !DILocation(line: 3333, column: 41, scope: !14242)
!14252 = !DILocation(line: 3333, column: 5, scope: !14242)
!14253 = !DILocation(line: 3334, column: 9, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14242, file: !3, line: 3334, column: 9)
!14255 = !DILocation(line: 3334, column: 13, scope: !14254)
!14256 = !DILocation(line: 3334, column: 9, scope: !14242)
!14257 = !DILocation(line: 3335, column: 29, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14254, file: !3, line: 3334, column: 25)
!14259 = !DILocation(line: 3335, column: 33, scope: !14258)
!14260 = !DILocation(line: 3336, column: 13, scope: !14258)
!14261 = !DILocation(line: 3336, column: 19, scope: !14258)
!14262 = !DILocation(line: 3336, column: 10, scope: !14258)
!14263 = !DILocation(line: 3335, column: 6, scope: !14258)
!14264 = !DILocation(line: 3337, column: 5, scope: !14258)
!14265 = !DILocation(line: 3338, column: 20, scope: !14242)
!14266 = !DILocation(line: 3338, column: 17, scope: !14242)
!14267 = !DILocation(line: 3338, column: 12, scope: !14242)
!14268 = !DILocation(line: 3339, column: 21, scope: !14242)
!14269 = !DILocation(line: 3339, column: 25, scope: !14242)
!14270 = !DILocation(line: 3339, column: 31, scope: !14242)
!14271 = !DILocation(line: 3339, column: 37, scope: !14242)
!14272 = !DILocation(line: 3339, column: 5, scope: !14242)
!14273 = !DILocation(line: 3340, column: 4, scope: !14242)
!14274 = !DILocation(line: 3341, column: 4, scope: !14211)
!14275 = !DILocation(line: 3341, column: 10, scope: !14211)
!14276 = !DILocation(line: 3341, column: 16, scope: !14211)
!14277 = !DILocation(line: 3342, column: 3, scope: !14211)
!14278 = !DILocation(line: 3343, column: 30, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 3343, column: 8)
!14280 = distinct !DILexicalBlock(scope: !14206, file: !3, line: 3342, column: 10)
!14281 = !DILocation(line: 3343, column: 36, scope: !14279)
!14282 = !DILocation(line: 3343, column: 27, scope: !14279)
!14283 = !DILocation(line: 3343, column: 8, scope: !14280)
!14284 = !DILocation(line: 3344, column: 20, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 3343, column: 43)
!14286 = !DILocation(line: 3344, column: 17, scope: !14285)
!14287 = !DILocation(line: 3344, column: 12, scope: !14285)
!14288 = !DILocation(line: 3347, column: 5, scope: !14285)
!14289 = !DILocation(line: 3347, column: 9, scope: !14285)
!14290 = !DILocation(line: 3347, column: 18, scope: !14285)
!14291 = !DILocation(line: 3347, column: 21, scope: !14285)
!14292 = !DILocation(line: 3347, column: 31, scope: !14285)
!14293 = !DILocation(line: 3348, column: 4, scope: !14285)
!14294 = !DILocation(line: 3349, column: 4, scope: !14280)
!14295 = !DILocation(line: 3349, column: 10, scope: !14280)
!14296 = !DILocation(line: 3349, column: 16, scope: !14280)
!14297 = !DILocation(line: 3351, column: 32, scope: !14169)
!14298 = !DILocation(line: 3351, column: 38, scope: !14169)
!14299 = !DILocation(line: 3351, column: 27, scope: !14169)
!14300 = !DILocation(line: 3351, column: 3, scope: !14169)
!14301 = !DILocation(line: 3351, column: 7, scope: !14169)
!14302 = !DILocation(line: 3351, column: 16, scope: !14169)
!14303 = !DILocation(line: 3351, column: 19, scope: !14169)
!14304 = !DILocation(line: 3351, column: 25, scope: !14169)
!14305 = !DILocation(line: 3352, column: 2, scope: !14169)
!14306 = !DILocation(line: 3295, column: 57, scope: !14163)
!14307 = !DILocation(line: 3295, column: 62, scope: !14163)
!14308 = !DILocation(line: 3295, column: 2, scope: !14163)
!14309 = distinct !{!14309, !14167, !14310}
!14310 = !DILocation(line: 3352, column: 2, scope: !14157)
!14311 = !DILocation(line: 3354, column: 6, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 3354, column: 6)
!14313 = !DILocation(line: 3354, column: 13, scope: !14312)
!14314 = !DILocation(line: 3354, column: 38, scope: !14312)
!14315 = !DILocation(line: 3354, column: 44, scope: !14312)
!14316 = !DILocation(line: 3354, column: 52, scope: !14312)
!14317 = !DILocation(line: 3354, column: 35, scope: !14312)
!14318 = !DILocation(line: 3354, column: 6, scope: !14124)
!14319 = !DILocation(line: 3355, column: 18, scope: !14312)
!14320 = !DILocation(line: 3355, column: 3, scope: !14312)
!14321 = !DILocation(line: 3355, column: 9, scope: !14312)
!14322 = !DILocation(line: 3355, column: 16, scope: !14312)
!14323 = !DILocation(line: 3357, column: 18, scope: !14124)
!14324 = !DILocation(line: 3357, column: 22, scope: !14124)
!14325 = !DILocation(line: 3357, column: 2, scope: !14124)
!14326 = !DILocation(line: 3358, column: 1, scope: !14124)
!14327 = distinct !DISubprogram(name: "update_link", scope: !3, file: !3, line: 6622, type: !14328, scopeLine: 6624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14328 = !DISubroutineType(types: !14329)
!14329 = !{null, !290, !7985, !8386}
!14330 = !DILocalVariable(name: "dev", arg: 1, scope: !14327, file: !3, line: 6622, type: !290)
!14331 = !DILocation(line: 6622, column: 44, scope: !14327)
!14332 = !DILocalVariable(name: "priv", arg: 2, scope: !14327, file: !3, line: 6622, type: !7985)
!14333 = !DILocation(line: 6622, column: 66, scope: !14327)
!14334 = !DILocalVariable(name: "port", arg: 3, scope: !14327, file: !3, line: 6623, type: !8386)
!14335 = !DILocation(line: 6623, column: 19, scope: !14327)
!14336 = !DILocation(line: 6625, column: 6, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14327, file: !3, line: 6625, column: 6)
!14338 = !DILocation(line: 6625, column: 12, scope: !14337)
!14339 = !DILocation(line: 6625, column: 27, scope: !14337)
!14340 = !DILocation(line: 6625, column: 33, scope: !14337)
!14341 = !DILocation(line: 6625, column: 41, scope: !14337)
!14342 = !DILocation(line: 6625, column: 24, scope: !14337)
!14343 = !DILocation(line: 6625, column: 6, scope: !14327)
!14344 = !DILocation(line: 6626, column: 23, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 6625, column: 48)
!14346 = !DILocation(line: 6626, column: 29, scope: !14345)
!14347 = !DILocation(line: 6626, column: 37, scope: !14345)
!14348 = !DILocation(line: 6626, column: 3, scope: !14345)
!14349 = !DILocation(line: 6626, column: 9, scope: !14345)
!14350 = !DILocation(line: 6626, column: 21, scope: !14345)
!14351 = !DILocation(line: 6627, column: 21, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14345, file: !3, line: 6627, column: 7)
!14353 = !DILocation(line: 6627, column: 7, scope: !14352)
!14354 = !DILocation(line: 6627, column: 7, scope: !14345)
!14355 = !DILocation(line: 6628, column: 20, scope: !14352)
!14356 = !DILocation(line: 6628, column: 4, scope: !14352)
!14357 = !DILocation(line: 6629, column: 2, scope: !14345)
!14358 = !DILocation(line: 6630, column: 1, scope: !14327)
!14359 = distinct !DISubprogram(name: "hw_r_phy", scope: !3, file: !3, line: 2967, type: !14360, scopeLine: 2968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{null, !8002, !32, !581, !7507}
!14362 = !DILocalVariable(name: "hw", arg: 1, scope: !14359, file: !3, line: 2967, type: !8002)
!14363 = !DILocation(line: 2967, column: 37, scope: !14359)
!14364 = !DILocalVariable(name: "port", arg: 2, scope: !14359, file: !3, line: 2967, type: !32)
!14365 = !DILocation(line: 2967, column: 45, scope: !14359)
!14366 = !DILocalVariable(name: "reg", arg: 3, scope: !14359, file: !3, line: 2967, type: !581)
!14367 = !DILocation(line: 2967, column: 55, scope: !14359)
!14368 = !DILocalVariable(name: "val", arg: 4, scope: !14359, file: !3, line: 2967, type: !7507)
!14369 = !DILocation(line: 2967, column: 65, scope: !14359)
!14370 = !DILocalVariable(name: "phy", scope: !14359, file: !3, line: 2969, type: !32)
!14371 = !DILocation(line: 2969, column: 6, scope: !14359)
!14372 = !DILocation(line: 2971, column: 35, scope: !14359)
!14373 = !DILocation(line: 2971, column: 40, scope: !14359)
!14374 = !DILocation(line: 2971, column: 33, scope: !14359)
!14375 = !DILocation(line: 2971, column: 62, scope: !14359)
!14376 = !DILocation(line: 2971, column: 60, scope: !14359)
!14377 = !DILocation(line: 2971, column: 6, scope: !14359)
!14378 = !DILocation(line: 2972, column: 15, scope: !14359)
!14379 = !DILocation(line: 2972, column: 19, scope: !14359)
!14380 = !DILocation(line: 2972, column: 24, scope: !14359)
!14381 = !DILocation(line: 2972, column: 22, scope: !14359)
!14382 = !DILocation(line: 2972, column: 9, scope: !14359)
!14383 = !DILocation(line: 2972, column: 3, scope: !14359)
!14384 = !DILocation(line: 2972, column: 7, scope: !14359)
!14385 = !DILocation(line: 2973, column: 1, scope: !14359)
!14386 = distinct !DISubprogram(name: "determine_flow_ctrl", scope: !3, file: !3, line: 3229, type: !14387, scopeLine: 3231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14387 = !DISubroutineType(types: !14388)
!14388 = !{null, !8002, !8386, !581, !581}
!14389 = !DILocalVariable(name: "hw", arg: 1, scope: !14386, file: !3, line: 3229, type: !8002)
!14390 = !DILocation(line: 3229, column: 48, scope: !14386)
!14391 = !DILocalVariable(name: "port", arg: 2, scope: !14386, file: !3, line: 3229, type: !8386)
!14392 = !DILocation(line: 3229, column: 69, scope: !14386)
!14393 = !DILocalVariable(name: "local", arg: 3, scope: !14386, file: !3, line: 3230, type: !581)
!14394 = !DILocation(line: 3230, column: 6, scope: !14386)
!14395 = !DILocalVariable(name: "remote", arg: 4, scope: !14386, file: !3, line: 3230, type: !581)
!14396 = !DILocation(line: 3230, column: 17, scope: !14386)
!14397 = !DILocalVariable(name: "rx", scope: !14386, file: !3, line: 3232, type: !32)
!14398 = !DILocation(line: 3232, column: 6, scope: !14386)
!14399 = !DILocalVariable(name: "tx", scope: !14386, file: !3, line: 3233, type: !32)
!14400 = !DILocation(line: 3233, column: 6, scope: !14386)
!14401 = !DILocation(line: 3235, column: 6, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 3235, column: 6)
!14403 = !DILocation(line: 3235, column: 10, scope: !14402)
!14404 = !DILocation(line: 3235, column: 20, scope: !14402)
!14405 = !DILocation(line: 3235, column: 6, scope: !14386)
!14406 = !DILocation(line: 3236, column: 3, scope: !14402)
!14407 = !DILocation(line: 3238, column: 10, scope: !14386)
!14408 = !DILocation(line: 3238, column: 5, scope: !14386)
!14409 = !DILocation(line: 3239, column: 6, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 3239, column: 6)
!14411 = !DILocation(line: 3239, column: 12, scope: !14410)
!14412 = !DILocation(line: 3239, column: 6, scope: !14386)
!14413 = !DILocation(line: 3240, column: 11, scope: !14410)
!14414 = !DILocation(line: 3240, column: 6, scope: !14410)
!14415 = !DILocation(line: 3240, column: 3, scope: !14410)
!14416 = !DILocation(line: 3241, column: 6, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 3241, column: 6)
!14418 = !DILocation(line: 3241, column: 13, scope: !14417)
!14419 = !DILocation(line: 3241, column: 6, scope: !14386)
!14420 = !DILocation(line: 3242, column: 7, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 3242, column: 7)
!14422 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3241, column: 39)
!14423 = !DILocation(line: 3242, column: 13, scope: !14421)
!14424 = !DILocation(line: 3242, column: 7, scope: !14422)
!14425 = !DILocation(line: 3243, column: 12, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 3242, column: 39)
!14427 = !DILocation(line: 3243, column: 7, scope: !14426)
!14428 = !DILocation(line: 3244, column: 3, scope: !14426)
!14429 = !DILocation(line: 3244, column: 15, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 3244, column: 14)
!14431 = !DILocation(line: 3244, column: 22, scope: !14430)
!14432 = !DILocation(line: 3244, column: 49, scope: !14430)
!14433 = !DILocation(line: 3245, column: 6, scope: !14430)
!14434 = !DILocation(line: 3245, column: 12, scope: !14430)
!14435 = !DILocation(line: 3245, column: 34, scope: !14430)
!14436 = !DILocation(line: 3244, column: 14, scope: !14421)
!14437 = !DILocation(line: 3247, column: 7, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 3246, column: 30)
!14439 = !DILocation(line: 3248, column: 3, scope: !14438)
!14440 = !DILocation(line: 3249, column: 2, scope: !14422)
!14441 = !DILocation(line: 3249, column: 13, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3249, column: 13)
!14443 = !DILocation(line: 3249, column: 20, scope: !14442)
!14444 = !DILocation(line: 3249, column: 13, scope: !14417)
!14445 = !DILocation(line: 3250, column: 8, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14447, file: !3, line: 3250, column: 7)
!14447 = distinct !DILexicalBlock(scope: !14442, file: !3, line: 3249, column: 47)
!14448 = !DILocation(line: 3250, column: 14, scope: !14446)
!14449 = !DILocation(line: 3250, column: 36, scope: !14446)
!14450 = !DILocation(line: 3250, column: 7, scope: !14447)
!14451 = !DILocation(line: 3251, column: 7, scope: !14446)
!14452 = !DILocation(line: 3251, column: 4, scope: !14446)
!14453 = !DILocation(line: 3252, column: 2, scope: !14447)
!14454 = !DILocation(line: 3253, column: 7, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 3253, column: 6)
!14456 = !DILocation(line: 3253, column: 11, scope: !14455)
!14457 = !DILocation(line: 3253, column: 6, scope: !14386)
!14458 = !DILocation(line: 3254, column: 17, scope: !14455)
!14459 = !DILocation(line: 3254, column: 21, scope: !14455)
!14460 = !DILocation(line: 3254, column: 25, scope: !14455)
!14461 = !DILocation(line: 3254, column: 3, scope: !14455)
!14462 = !DILocation(line: 3255, column: 1, scope: !14386)
!14463 = distinct !DISubprogram(name: "port_cfg_back_pressure", scope: !3, file: !3, line: 2274, type: !11600, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14464 = !DILocalVariable(name: "hw", arg: 1, scope: !14463, file: !3, line: 2274, type: !8002)
!14465 = !DILocation(line: 2274, column: 58, scope: !14463)
!14466 = !DILocalVariable(name: "p", arg: 2, scope: !14463, file: !3, line: 2274, type: !32)
!14467 = !DILocation(line: 2274, column: 66, scope: !14463)
!14468 = !DILocalVariable(name: "set", arg: 3, scope: !14463, file: !3, line: 2274, type: !32)
!14469 = !DILocation(line: 2274, column: 73, scope: !14463)
!14470 = !DILocation(line: 2276, column: 11, scope: !14463)
!14471 = !DILocation(line: 2276, column: 15, scope: !14463)
!14472 = !DILocation(line: 2277, column: 50, scope: !14463)
!14473 = !DILocation(line: 2276, column: 2, scope: !14463)
!14474 = !DILocation(line: 2278, column: 1, scope: !14463)
!14475 = distinct !DISubprogram(name: "port_cfg_change", scope: !3, file: !3, line: 3257, type: !14476, scopeLine: 3259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14476 = !DISubroutineType(types: !14477)
!14477 = !{null, !8002, !8386, !8004, !581}
!14478 = !DILocalVariable(name: "hw", arg: 1, scope: !14475, file: !3, line: 3257, type: !8002)
!14479 = !DILocation(line: 3257, column: 51, scope: !14475)
!14480 = !DILocalVariable(name: "port", arg: 2, scope: !14475, file: !3, line: 3257, type: !8386)
!14481 = !DILocation(line: 3257, column: 72, scope: !14475)
!14482 = !DILocalVariable(name: "info", arg: 3, scope: !14475, file: !3, line: 3258, type: !8004)
!14483 = !DILocation(line: 3258, column: 24, scope: !14475)
!14484 = !DILocalVariable(name: "link_status", arg: 4, scope: !14475, file: !3, line: 3258, type: !581)
!14485 = !DILocation(line: 3258, column: 34, scope: !14475)
!14486 = !DILocation(line: 3260, column: 7, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14475, file: !3, line: 3260, column: 6)
!14488 = !DILocation(line: 3260, column: 11, scope: !14487)
!14489 = !DILocation(line: 3260, column: 20, scope: !14487)
!14490 = !DILocation(line: 3260, column: 46, scope: !14487)
!14491 = !DILocation(line: 3261, column: 6, scope: !14487)
!14492 = !DILocation(line: 3261, column: 10, scope: !14487)
!14493 = !DILocation(line: 3261, column: 20, scope: !14487)
!14494 = !DILocation(line: 3260, column: 6, scope: !14475)
!14495 = !DILocalVariable(name: "cfg", scope: !14496, file: !3, line: 3262, type: !987)
!14496 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 3261, column: 40)
!14497 = !DILocation(line: 3262, column: 7, scope: !14496)
!14498 = !DILocation(line: 3262, column: 13, scope: !14496)
!14499 = !DILocation(line: 3262, column: 17, scope: !14496)
!14500 = !DILocation(line: 3265, column: 12, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14496, file: !3, line: 3265, column: 7)
!14502 = !DILocation(line: 3265, column: 18, scope: !14501)
!14503 = !DILocation(line: 3265, column: 9, scope: !14501)
!14504 = !DILocation(line: 3265, column: 7, scope: !14496)
!14505 = !DILocation(line: 3266, column: 4, scope: !14501)
!14506 = !DILocation(line: 3266, column: 8, scope: !14501)
!14507 = !DILocation(line: 3266, column: 15, scope: !14501)
!14508 = !DILocation(line: 3267, column: 7, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !14496, file: !3, line: 3267, column: 7)
!14510 = !DILocation(line: 3267, column: 11, scope: !14509)
!14511 = !DILocation(line: 3267, column: 19, scope: !14509)
!14512 = !DILocation(line: 3267, column: 22, scope: !14509)
!14513 = !DILocation(line: 3267, column: 29, scope: !14509)
!14514 = !DILocation(line: 3267, column: 33, scope: !14509)
!14515 = !DILocation(line: 3267, column: 26, scope: !14509)
!14516 = !DILocation(line: 3267, column: 7, scope: !14496)
!14517 = !DILocation(line: 3268, column: 11, scope: !14509)
!14518 = !DILocation(line: 3268, column: 15, scope: !14509)
!14519 = !DILocation(line: 3268, column: 23, scope: !14509)
!14520 = !DILocation(line: 3268, column: 27, scope: !14509)
!14521 = !DILocation(line: 3268, column: 30, scope: !14509)
!14522 = !DILocation(line: 3268, column: 4, scope: !14509)
!14523 = !DILocation(line: 3269, column: 2, scope: !14496)
!14524 = !DILocation(line: 3270, column: 1, scope: !14475)
!14525 = distinct !DISubprogram(name: "set_flow_ctrl", scope: !3, file: !3, line: 3206, type: !11600, scopeLine: 3207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14526 = !DILocalVariable(name: "hw", arg: 1, scope: !14525, file: !3, line: 3206, type: !8002)
!14527 = !DILocation(line: 3206, column: 42, scope: !14525)
!14528 = !DILocalVariable(name: "rx", arg: 2, scope: !14525, file: !3, line: 3206, type: !32)
!14529 = !DILocation(line: 3206, column: 50, scope: !14525)
!14530 = !DILocalVariable(name: "tx", arg: 3, scope: !14525, file: !3, line: 3206, type: !32)
!14531 = !DILocation(line: 3206, column: 58, scope: !14525)
!14532 = !DILocalVariable(name: "rx_cfg", scope: !14525, file: !3, line: 3208, type: !987)
!14533 = !DILocation(line: 3208, column: 6, scope: !14525)
!14534 = !DILocalVariable(name: "tx_cfg", scope: !14525, file: !3, line: 3209, type: !987)
!14535 = !DILocation(line: 3209, column: 6, scope: !14525)
!14536 = !DILocation(line: 3211, column: 11, scope: !14525)
!14537 = !DILocation(line: 3211, column: 15, scope: !14525)
!14538 = !DILocation(line: 3211, column: 9, scope: !14525)
!14539 = !DILocation(line: 3212, column: 11, scope: !14525)
!14540 = !DILocation(line: 3212, column: 15, scope: !14525)
!14541 = !DILocation(line: 3212, column: 9, scope: !14525)
!14542 = !DILocation(line: 3213, column: 6, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 3213, column: 6)
!14544 = !DILocation(line: 3213, column: 6, scope: !14525)
!14545 = !DILocation(line: 3214, column: 3, scope: !14543)
!14546 = !DILocation(line: 3214, column: 7, scope: !14543)
!14547 = !DILocation(line: 3214, column: 14, scope: !14543)
!14548 = !DILocation(line: 3216, column: 3, scope: !14543)
!14549 = !DILocation(line: 3216, column: 7, scope: !14543)
!14550 = !DILocation(line: 3216, column: 14, scope: !14543)
!14551 = !DILocation(line: 3217, column: 6, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 3217, column: 6)
!14553 = !DILocation(line: 3217, column: 6, scope: !14525)
!14554 = !DILocation(line: 3218, column: 3, scope: !14552)
!14555 = !DILocation(line: 3218, column: 7, scope: !14552)
!14556 = !DILocation(line: 3218, column: 14, scope: !14552)
!14557 = !DILocation(line: 3220, column: 3, scope: !14552)
!14558 = !DILocation(line: 3220, column: 7, scope: !14552)
!14559 = !DILocation(line: 3220, column: 14, scope: !14552)
!14560 = !DILocation(line: 3221, column: 6, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 3221, column: 6)
!14562 = !DILocation(line: 3221, column: 10, scope: !14561)
!14563 = !DILocation(line: 3221, column: 6, scope: !14525)
!14564 = !DILocation(line: 3222, column: 7, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14566, file: !3, line: 3222, column: 7)
!14566 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 3221, column: 19)
!14567 = !DILocation(line: 3222, column: 17, scope: !14565)
!14568 = !DILocation(line: 3222, column: 21, scope: !14565)
!14569 = !DILocation(line: 3222, column: 14, scope: !14565)
!14570 = !DILocation(line: 3222, column: 7, scope: !14566)
!14571 = !DILocation(line: 3223, column: 11, scope: !14565)
!14572 = !DILocation(line: 3223, column: 15, scope: !14565)
!14573 = !DILocation(line: 3223, column: 23, scope: !14565)
!14574 = !DILocation(line: 3223, column: 27, scope: !14565)
!14575 = !DILocation(line: 3223, column: 30, scope: !14565)
!14576 = !DILocation(line: 3223, column: 4, scope: !14565)
!14577 = !DILocation(line: 3224, column: 7, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14566, file: !3, line: 3224, column: 7)
!14579 = !DILocation(line: 3224, column: 17, scope: !14578)
!14580 = !DILocation(line: 3224, column: 21, scope: !14578)
!14581 = !DILocation(line: 3224, column: 14, scope: !14578)
!14582 = !DILocation(line: 3224, column: 7, scope: !14566)
!14583 = !DILocation(line: 3225, column: 11, scope: !14578)
!14584 = !DILocation(line: 3225, column: 15, scope: !14578)
!14585 = !DILocation(line: 3225, column: 23, scope: !14578)
!14586 = !DILocation(line: 3225, column: 27, scope: !14578)
!14587 = !DILocation(line: 3225, column: 30, scope: !14578)
!14588 = !DILocation(line: 3225, column: 4, scope: !14578)
!14589 = !DILocation(line: 3226, column: 2, scope: !14566)
!14590 = !DILocation(line: 3227, column: 1, scope: !14525)
!14591 = distinct !DISubprogram(name: "netif_running", scope: !31, file: !31, line: 3556, type: !14592, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14592 = !DISubroutineType(types: !14593)
!14593 = !{!771, !773}
!14594 = !DILocalVariable(name: "dev", arg: 1, scope: !14591, file: !31, line: 3556, type: !773)
!14595 = !DILocation(line: 3556, column: 59, scope: !14591)
!14596 = !DILocation(line: 3558, column: 39, scope: !14591)
!14597 = !DILocation(line: 3558, column: 44, scope: !14591)
!14598 = !DILocation(line: 3558, column: 9, scope: !14591)
!14599 = !DILocation(line: 3558, column: 2, scope: !14591)
!14600 = distinct !DISubprogram(name: "set_media_state", scope: !3, file: !3, line: 5462, type: !584, scopeLine: 5463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14601 = !DILocalVariable(name: "dev", arg: 1, scope: !14600, file: !3, line: 5462, type: !290)
!14602 = !DILocation(line: 5462, column: 48, scope: !14600)
!14603 = !DILocalVariable(name: "media_state", arg: 2, scope: !14600, file: !3, line: 5462, type: !32)
!14604 = !DILocation(line: 5462, column: 57, scope: !14600)
!14605 = !DILocalVariable(name: "priv", scope: !14600, file: !3, line: 5464, type: !7985)
!14606 = !DILocation(line: 5464, column: 19, scope: !14600)
!14607 = !DILocation(line: 5464, column: 38, scope: !14600)
!14608 = !DILocation(line: 5464, column: 26, scope: !14600)
!14609 = !DILocation(line: 5466, column: 6, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14600, file: !3, line: 5466, column: 6)
!14611 = !DILocation(line: 5466, column: 21, scope: !14610)
!14612 = !DILocation(line: 5466, column: 27, scope: !14610)
!14613 = !DILocation(line: 5466, column: 18, scope: !14610)
!14614 = !DILocation(line: 5466, column: 6, scope: !14600)
!14615 = !DILocation(line: 5467, column: 20, scope: !14610)
!14616 = !DILocation(line: 5467, column: 3, scope: !14610)
!14617 = !DILocation(line: 5469, column: 21, scope: !14610)
!14618 = !DILocation(line: 5469, column: 3, scope: !14610)
!14619 = !DILocation(line: 5470, column: 2, scope: !14600)
!14620 = !DILocation(line: 5470, column: 2, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 5470, column: 2)
!14622 = distinct !DILexicalBlock(scope: !14600, file: !3, line: 5470, column: 2)
!14623 = !DILocation(line: 5470, column: 2, scope: !14622)
!14624 = !DILocation(line: 5472, column: 1, scope: !14600)
!14625 = distinct !DISubprogram(name: "test_bit", scope: !14626, file: !14626, line: 132, type: !14627, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14626 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!14627 = !DISubroutineType(types: !14628)
!14628 = !{!771, !998, !14629}
!14629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14630, size: 64)
!14630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14631)
!14631 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!14632 = !DILocalVariable(name: "nr", arg: 1, scope: !14633, file: !10039, line: 210, type: !998)
!14633 = distinct !DISubprogram(name: "variable_test_bit", scope: !10039, file: !10039, line: 210, type: !14627, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14634 = !DILocation(line: 210, column: 52, scope: !14633, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 135, column: 9, scope: !14625)
!14636 = !DILocalVariable(name: "addr", arg: 2, scope: !14633, file: !10039, line: 210, type: !14629)
!14637 = !DILocation(line: 210, column: 86, scope: !14633, inlinedAt: !14635)
!14638 = !DILocalVariable(name: "oldbit", scope: !14633, file: !10039, line: 212, type: !771)
!14639 = !DILocation(line: 212, column: 7, scope: !14633, inlinedAt: !14635)
!14640 = !DILocalVariable(name: "nr", arg: 1, scope: !14641, file: !10039, line: 204, type: !998)
!14641 = distinct !DISubprogram(name: "constant_test_bit", scope: !10039, file: !10039, line: 204, type: !14627, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14642 = !DILocation(line: 204, column: 52, scope: !14641, inlinedAt: !14643)
!14643 = distinct !DILocation(line: 135, column: 9, scope: !14625)
!14644 = !DILocalVariable(name: "addr", arg: 2, scope: !14641, file: !10039, line: 204, type: !14629)
!14645 = !DILocation(line: 204, column: 86, scope: !14641, inlinedAt: !14643)
!14646 = !DILocalVariable(name: "v", arg: 1, scope: !14647, file: !14648, line: 69, type: !10119)
!14647 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !14648, file: !14648, line: 69, type: !14649, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14648 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!14649 = !DISubroutineType(types: !14650)
!14650 = !{null, !10119, !1039}
!14651 = !DILocation(line: 69, column: 73, scope: !14647, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 134, column: 2, scope: !14625)
!14653 = !DILocalVariable(name: "size", arg: 2, scope: !14647, file: !14648, line: 69, type: !1039)
!14654 = !DILocation(line: 69, column: 83, scope: !14647, inlinedAt: !14652)
!14655 = !DILocalVariable(name: "nr", arg: 1, scope: !14625, file: !14626, line: 132, type: !998)
!14656 = !DILocation(line: 132, column: 34, scope: !14625)
!14657 = !DILocalVariable(name: "addr", arg: 2, scope: !14625, file: !14626, line: 132, type: !14629)
!14658 = !DILocation(line: 132, column: 68, scope: !14625)
!14659 = !DILocation(line: 134, column: 25, scope: !14625)
!14660 = !DILocation(line: 134, column: 32, scope: !14625)
!14661 = !DILocation(line: 134, column: 30, scope: !14625)
!14662 = !DILocation(line: 71, column: 19, scope: !14647, inlinedAt: !14652)
!14663 = !DILocation(line: 71, column: 22, scope: !14647, inlinedAt: !14652)
!14664 = !DILocation(line: 71, column: 2, scope: !14647, inlinedAt: !14652)
!14665 = !DILocation(line: 72, column: 2, scope: !14647, inlinedAt: !14652)
!14666 = !DILocation(line: 135, column: 9, scope: !14625)
!14667 = !DILocation(line: 206, column: 19, scope: !14641, inlinedAt: !14643)
!14668 = !DILocation(line: 206, column: 22, scope: !14641, inlinedAt: !14643)
!14669 = !DILocation(line: 206, column: 15, scope: !14641, inlinedAt: !14643)
!14670 = !DILocation(line: 207, column: 4, scope: !14641, inlinedAt: !14643)
!14671 = !DILocation(line: 207, column: 9, scope: !14641, inlinedAt: !14643)
!14672 = !DILocation(line: 207, column: 12, scope: !14641, inlinedAt: !14643)
!14673 = !DILocation(line: 206, column: 44, scope: !14641, inlinedAt: !14643)
!14674 = !DILocation(line: 207, column: 37, scope: !14641, inlinedAt: !14643)
!14675 = !DILocation(line: 217, column: 33, scope: !14633, inlinedAt: !14635)
!14676 = !DILocation(line: 217, column: 46, scope: !14633, inlinedAt: !14635)
!14677 = !DILocation(line: 214, column: 2, scope: !14633, inlinedAt: !14635)
!14678 = !{i32 -2146985857, i32 -2146985797}
!14679 = !DILocation(line: 219, column: 9, scope: !14633, inlinedAt: !14635)
!14680 = !DILocation(line: 135, column: 2, scope: !14625)
!14681 = distinct !DISubprogram(name: "kasan_check_read", scope: !14682, file: !14682, line: 34, type: !14683, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14682 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14683 = !DISubroutineType(types: !14684)
!14684 = !{!771, !10119, !7}
!14685 = !DILocalVariable(name: "p", arg: 1, scope: !14681, file: !14682, line: 34, type: !10119)
!14686 = !DILocation(line: 34, column: 58, scope: !14681)
!14687 = !DILocalVariable(name: "size", arg: 2, scope: !14681, file: !14682, line: 34, type: !7)
!14688 = !DILocation(line: 34, column: 74, scope: !14681)
!14689 = !DILocation(line: 36, column: 2, scope: !14681)
!14690 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14691, file: !14691, line: 178, type: !14692, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14691 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14692 = !DISubroutineType(types: !14693)
!14693 = !{null, !10119, !1039, !32}
!14694 = !DILocalVariable(name: "ptr", arg: 1, scope: !14690, file: !14691, line: 178, type: !10119)
!14695 = !DILocation(line: 178, column: 60, scope: !14690)
!14696 = !DILocalVariable(name: "size", arg: 2, scope: !14690, file: !14691, line: 178, type: !1039)
!14697 = !DILocation(line: 178, column: 72, scope: !14690)
!14698 = !DILocalVariable(name: "type", arg: 3, scope: !14690, file: !14691, line: 179, type: !32)
!14699 = !DILocation(line: 179, column: 15, scope: !14690)
!14700 = !DILocation(line: 179, column: 23, scope: !14690)
!14701 = distinct !DISubprogram(name: "hw_w_phy", scope: !3, file: !3, line: 2984, type: !14702, scopeLine: 2985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{null, !8002, !32, !581, !581}
!14704 = !DILocalVariable(name: "hw", arg: 1, scope: !14701, file: !3, line: 2984, type: !8002)
!14705 = !DILocation(line: 2984, column: 37, scope: !14701)
!14706 = !DILocalVariable(name: "port", arg: 2, scope: !14701, file: !3, line: 2984, type: !32)
!14707 = !DILocation(line: 2984, column: 45, scope: !14701)
!14708 = !DILocalVariable(name: "reg", arg: 3, scope: !14701, file: !3, line: 2984, type: !581)
!14709 = !DILocation(line: 2984, column: 55, scope: !14701)
!14710 = !DILocalVariable(name: "val", arg: 4, scope: !14701, file: !3, line: 2984, type: !581)
!14711 = !DILocation(line: 2984, column: 64, scope: !14701)
!14712 = !DILocalVariable(name: "phy", scope: !14701, file: !3, line: 2986, type: !32)
!14713 = !DILocation(line: 2986, column: 6, scope: !14701)
!14714 = !DILocation(line: 2988, column: 35, scope: !14701)
!14715 = !DILocation(line: 2988, column: 40, scope: !14701)
!14716 = !DILocation(line: 2988, column: 33, scope: !14701)
!14717 = !DILocation(line: 2988, column: 62, scope: !14701)
!14718 = !DILocation(line: 2988, column: 60, scope: !14701)
!14719 = !DILocation(line: 2988, column: 6, scope: !14701)
!14720 = !DILocation(line: 2989, column: 9, scope: !14701)
!14721 = !DILocation(line: 2989, column: 14, scope: !14701)
!14722 = !DILocation(line: 2989, column: 18, scope: !14701)
!14723 = !DILocation(line: 2989, column: 23, scope: !14701)
!14724 = !DILocation(line: 2989, column: 21, scope: !14701)
!14725 = !DILocation(line: 2989, column: 2, scope: !14701)
!14726 = !DILocation(line: 2990, column: 1, scope: !14701)
!14727 = distinct !DISubprogram(name: "prepare_hardware", scope: !3, file: !3, line: 5433, type: !402, scopeLine: 5434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14728 = !DILocalVariable(name: "dev", arg: 1, scope: !14727, file: !3, line: 5433, type: !290)
!14729 = !DILocation(line: 5433, column: 48, scope: !14727)
!14730 = !DILocalVariable(name: "priv", scope: !14727, file: !3, line: 5435, type: !7985)
!14731 = !DILocation(line: 5435, column: 19, scope: !14727)
!14732 = !DILocation(line: 5435, column: 38, scope: !14727)
!14733 = !DILocation(line: 5435, column: 26, scope: !14727)
!14734 = !DILocalVariable(name: "hw_priv", scope: !14727, file: !3, line: 5436, type: !7512)
!14735 = !DILocation(line: 5436, column: 19, scope: !14727)
!14736 = !DILocation(line: 5436, column: 29, scope: !14727)
!14737 = !DILocation(line: 5436, column: 35, scope: !14727)
!14738 = !DILocalVariable(name: "hw", scope: !14727, file: !3, line: 5437, type: !8002)
!14739 = !DILocation(line: 5437, column: 17, scope: !14727)
!14740 = !DILocation(line: 5437, column: 23, scope: !14727)
!14741 = !DILocation(line: 5437, column: 32, scope: !14727)
!14742 = !DILocalVariable(name: "rc", scope: !14727, file: !3, line: 5438, type: !32)
!14743 = !DILocation(line: 5438, column: 6, scope: !14727)
!14744 = !DILocation(line: 5441, column: 17, scope: !14727)
!14745 = !DILocation(line: 5441, column: 2, scope: !14727)
!14746 = !DILocation(line: 5441, column: 11, scope: !14727)
!14747 = !DILocation(line: 5441, column: 15, scope: !14727)
!14748 = !DILocation(line: 5442, column: 19, scope: !14727)
!14749 = !DILocation(line: 5442, column: 24, scope: !14727)
!14750 = !DILocation(line: 5442, column: 55, scope: !14727)
!14751 = !DILocation(line: 5442, column: 60, scope: !14727)
!14752 = !DILocation(line: 5442, column: 66, scope: !14727)
!14753 = !DILocation(line: 5442, column: 7, scope: !14727)
!14754 = !DILocation(line: 5442, column: 5, scope: !14727)
!14755 = !DILocation(line: 5443, column: 6, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14727, file: !3, line: 5443, column: 6)
!14757 = !DILocation(line: 5443, column: 6, scope: !14727)
!14758 = !DILocation(line: 5444, column: 10, scope: !14756)
!14759 = !DILocation(line: 5444, column: 3, scope: !14756)
!14760 = !DILocation(line: 5445, column: 17, scope: !14727)
!14761 = !DILocation(line: 5445, column: 26, scope: !14727)
!14762 = !DILocation(line: 5445, column: 2, scope: !14727)
!14763 = !DILocation(line: 5446, column: 17, scope: !14727)
!14764 = !DILocation(line: 5446, column: 26, scope: !14727)
!14765 = !DILocation(line: 5446, column: 2, scope: !14727)
!14766 = !DILocation(line: 5448, column: 2, scope: !14727)
!14767 = !DILocation(line: 5448, column: 6, scope: !14727)
!14768 = !DILocation(line: 5448, column: 18, scope: !14727)
!14769 = !DILocation(line: 5449, column: 2, scope: !14727)
!14770 = !DILocation(line: 5449, column: 6, scope: !14727)
!14771 = !DILocation(line: 5449, column: 16, scope: !14727)
!14772 = !DILocation(line: 5450, column: 2, scope: !14727)
!14773 = !DILocation(line: 5450, column: 6, scope: !14727)
!14774 = !DILocation(line: 5450, column: 22, scope: !14727)
!14775 = !DILocation(line: 5452, column: 11, scope: !14727)
!14776 = !DILocation(line: 5452, column: 2, scope: !14727)
!14777 = !DILocation(line: 5454, column: 19, scope: !14727)
!14778 = !DILocation(line: 5455, column: 3, scope: !14727)
!14779 = !DILocation(line: 5455, column: 7, scope: !14727)
!14780 = !DILocation(line: 5455, column: 20, scope: !14727)
!14781 = !DILocation(line: 5455, column: 31, scope: !14727)
!14782 = !DILocation(line: 5455, column: 35, scope: !14727)
!14783 = !DILocation(line: 5455, column: 48, scope: !14727)
!14784 = !DILocation(line: 5454, column: 2, scope: !14727)
!14785 = !DILocation(line: 5456, column: 14, scope: !14727)
!14786 = !DILocation(line: 5456, column: 2, scope: !14727)
!14787 = !DILocation(line: 5457, column: 20, scope: !14727)
!14788 = !DILocation(line: 5457, column: 29, scope: !14727)
!14789 = !DILocation(line: 5457, column: 2, scope: !14727)
!14790 = !DILocation(line: 5458, column: 22, scope: !14727)
!14791 = !DILocation(line: 5458, column: 2, scope: !14727)
!14792 = !DILocation(line: 5459, column: 2, scope: !14727)
!14793 = !DILocation(line: 5460, column: 1, scope: !14727)
!14794 = distinct !DISubprogram(name: "port_init_cnt", scope: !3, file: !3, line: 1902, type: !11124, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14795 = !DILocalVariable(name: "hw", arg: 1, scope: !14794, file: !3, line: 1902, type: !8002)
!14796 = !DILocation(line: 1902, column: 42, scope: !14794)
!14797 = !DILocalVariable(name: "port", arg: 2, scope: !14794, file: !3, line: 1902, type: !32)
!14798 = !DILocation(line: 1902, column: 50, scope: !14794)
!14799 = !DILocalVariable(name: "mib", scope: !14794, file: !3, line: 1904, type: !9750)
!14800 = !DILocation(line: 1904, column: 23, scope: !14794)
!14801 = !DILocation(line: 1904, column: 30, scope: !14794)
!14802 = !DILocation(line: 1904, column: 34, scope: !14794)
!14803 = !DILocation(line: 1904, column: 43, scope: !14794)
!14804 = !DILocation(line: 1906, column: 2, scope: !14794)
!14805 = !DILocation(line: 1906, column: 7, scope: !14794)
!14806 = !DILocation(line: 1906, column: 15, scope: !14794)
!14807 = !DILocation(line: 1907, column: 6, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14794, file: !3, line: 1907, column: 6)
!14809 = !DILocation(line: 1907, column: 11, scope: !14808)
!14810 = !DILocation(line: 1907, column: 21, scope: !14808)
!14811 = !DILocation(line: 1907, column: 6, scope: !14794)
!14812 = !DILocation(line: 1908, column: 3, scope: !14808)
!14813 = !DILocation(line: 1909, column: 19, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 1908, column: 6)
!14815 = !DILocation(line: 1909, column: 23, scope: !14814)
!14816 = !DILocation(line: 1909, column: 29, scope: !14814)
!14817 = !DILocation(line: 1909, column: 34, scope: !14814)
!14818 = !DILocation(line: 1910, column: 6, scope: !14814)
!14819 = !DILocation(line: 1910, column: 11, scope: !14814)
!14820 = !DILocation(line: 1910, column: 19, scope: !14814)
!14821 = !DILocation(line: 1910, column: 24, scope: !14814)
!14822 = !DILocation(line: 1909, column: 4, scope: !14814)
!14823 = !DILocation(line: 1911, column: 6, scope: !14814)
!14824 = !DILocation(line: 1911, column: 11, scope: !14814)
!14825 = !DILocation(line: 1911, column: 4, scope: !14814)
!14826 = !DILocation(line: 1912, column: 3, scope: !14814)
!14827 = !DILocation(line: 1912, column: 12, scope: !14808)
!14828 = !DILocation(line: 1912, column: 17, scope: !14808)
!14829 = !DILocation(line: 1912, column: 25, scope: !14808)
!14830 = distinct !{!14830, !14812, !14831}
!14831 = !DILocation(line: 1912, column: 43, scope: !14808)
!14832 = !DILocation(line: 1913, column: 6, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14794, file: !3, line: 1913, column: 6)
!14834 = !DILocation(line: 1913, column: 10, scope: !14833)
!14835 = !DILocation(line: 1913, column: 18, scope: !14833)
!14836 = !DILocation(line: 1913, column: 6, scope: !14794)
!14837 = !DILocation(line: 1914, column: 18, scope: !14833)
!14838 = !DILocation(line: 1914, column: 22, scope: !14833)
!14839 = !DILocation(line: 1914, column: 28, scope: !14833)
!14840 = !DILocation(line: 1914, column: 33, scope: !14833)
!14841 = !DILocation(line: 1915, column: 5, scope: !14833)
!14842 = !DILocation(line: 1915, column: 10, scope: !14833)
!14843 = !DILocation(line: 1914, column: 3, scope: !14833)
!14844 = !DILocation(line: 1916, column: 18, scope: !14794)
!14845 = !DILocation(line: 1916, column: 23, scope: !14794)
!14846 = !DILocation(line: 1916, column: 2, scope: !14794)
!14847 = !DILocation(line: 1917, column: 2, scope: !14794)
!14848 = !DILocation(line: 1917, column: 7, scope: !14794)
!14849 = !DILocation(line: 1917, column: 15, scope: !14794)
!14850 = !DILocation(line: 1918, column: 1, scope: !14794)
!14851 = !DILocalVariable(name: "hw", arg: 1, scope: !8271, file: !3, line: 3636, type: !8002)
!14852 = !DILocation(line: 3636, column: 45, scope: !8271)
!14853 = !DILocation(line: 3641, column: 19, scope: !8271)
!14854 = !DILocation(line: 3641, column: 2, scope: !8271)
!14855 = !DILocation(line: 3642, column: 1, scope: !8271)
!14856 = distinct !DISubprogram(name: "hw_cfg_wol_pme", scope: !3, file: !3, line: 3508, type: !11124, scopeLine: 3509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14857 = !DILocalVariable(name: "hw", arg: 1, scope: !14856, file: !3, line: 3508, type: !8002)
!14858 = !DILocation(line: 3508, column: 43, scope: !14856)
!14859 = !DILocalVariable(name: "set", arg: 2, scope: !14856, file: !3, line: 3508, type: !32)
!14860 = !DILocation(line: 3508, column: 51, scope: !14856)
!14861 = !DILocalVariable(name: "hw_priv", scope: !14856, file: !3, line: 3510, type: !7512)
!14862 = !DILocation(line: 3510, column: 19, scope: !14856)
!14863 = !DILocalVariable(name: "__mptr", scope: !14864, file: !3, line: 3510, type: !591)
!14864 = distinct !DILexicalBlock(scope: !14856, file: !3, line: 3510, column: 29)
!14865 = !DILocation(line: 3510, column: 29, scope: !14864)
!14866 = !DILocation(line: 3510, column: 29, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 3510, column: 29)
!14868 = !DILocalVariable(name: "pdev", scope: !14856, file: !3, line: 3511, type: !7517)
!14869 = !DILocation(line: 3511, column: 18, scope: !14856)
!14870 = !DILocation(line: 3511, column: 25, scope: !14856)
!14871 = !DILocation(line: 3511, column: 34, scope: !14856)
!14872 = !DILocalVariable(name: "data", scope: !14856, file: !3, line: 3512, type: !581)
!14873 = !DILocation(line: 3512, column: 6, scope: !14856)
!14874 = !DILocation(line: 3514, column: 7, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14856, file: !3, line: 3514, column: 6)
!14876 = !DILocation(line: 3514, column: 13, scope: !14875)
!14877 = !DILocation(line: 3514, column: 6, scope: !14856)
!14878 = !DILocation(line: 3515, column: 3, scope: !14875)
!14879 = !DILocation(line: 3516, column: 23, scope: !14856)
!14880 = !DILocation(line: 3516, column: 29, scope: !14856)
!14881 = !DILocation(line: 3516, column: 35, scope: !14856)
!14882 = !DILocation(line: 3516, column: 42, scope: !14856)
!14883 = !DILocation(line: 3516, column: 2, scope: !14856)
!14884 = !DILocation(line: 3517, column: 7, scope: !14856)
!14885 = !DILocation(line: 3518, column: 6, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14856, file: !3, line: 3518, column: 6)
!14887 = !DILocation(line: 3518, column: 6, scope: !14856)
!14888 = !DILocation(line: 3519, column: 8, scope: !14886)
!14889 = !DILocation(line: 3519, column: 3, scope: !14886)
!14890 = !DILocation(line: 3521, column: 8, scope: !14886)
!14891 = !DILocation(line: 3522, column: 24, scope: !14856)
!14892 = !DILocation(line: 3522, column: 30, scope: !14856)
!14893 = !DILocation(line: 3522, column: 36, scope: !14856)
!14894 = !DILocation(line: 3522, column: 43, scope: !14856)
!14895 = !DILocation(line: 3522, column: 58, scope: !14856)
!14896 = !DILocation(line: 3522, column: 2, scope: !14856)
!14897 = !DILocation(line: 3523, column: 1, scope: !14856)
!14898 = distinct !DISubprogram(name: "hw_add_addr", scope: !3, file: !3, line: 4111, type: !14899, scopeLine: 4112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{!32, !8002, !793}
!14901 = !DILocalVariable(name: "hw", arg: 1, scope: !14898, file: !3, line: 4111, type: !8002)
!14902 = !DILocation(line: 4111, column: 39, scope: !14898)
!14903 = !DILocalVariable(name: "mac_addr", arg: 2, scope: !14898, file: !3, line: 4111, type: !793)
!14904 = !DILocation(line: 4111, column: 47, scope: !14898)
!14905 = !DILocalVariable(name: "i", scope: !14898, file: !3, line: 4113, type: !32)
!14906 = !DILocation(line: 4113, column: 6, scope: !14898)
!14907 = !DILocalVariable(name: "j", scope: !14898, file: !3, line: 4114, type: !32)
!14908 = !DILocation(line: 4114, column: 6, scope: !14898)
!14909 = !DILocation(line: 4116, column: 23, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14898, file: !3, line: 4116, column: 6)
!14911 = !DILocation(line: 4116, column: 27, scope: !14910)
!14912 = !DILocation(line: 4116, column: 42, scope: !14910)
!14913 = !DILocation(line: 4116, column: 6, scope: !14910)
!14914 = !DILocation(line: 4116, column: 6, scope: !14898)
!14915 = !DILocation(line: 4117, column: 3, scope: !14910)
!14916 = !DILocation(line: 4118, column: 9, scope: !14917)
!14917 = distinct !DILexicalBlock(scope: !14898, file: !3, line: 4118, column: 2)
!14918 = !DILocation(line: 4118, column: 7, scope: !14917)
!14919 = !DILocation(line: 4118, column: 14, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14917, file: !3, line: 4118, column: 2)
!14921 = !DILocation(line: 4118, column: 18, scope: !14920)
!14922 = !DILocation(line: 4118, column: 22, scope: !14920)
!14923 = !DILocation(line: 4118, column: 16, scope: !14920)
!14924 = !DILocation(line: 4118, column: 2, scope: !14917)
!14925 = !DILocation(line: 4119, column: 24, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 4119, column: 7)
!14927 = distinct !DILexicalBlock(scope: !14920, file: !3, line: 4118, column: 43)
!14928 = !DILocation(line: 4119, column: 28, scope: !14926)
!14929 = !DILocation(line: 4119, column: 36, scope: !14926)
!14930 = !DILocation(line: 4119, column: 40, scope: !14926)
!14931 = !DILocation(line: 4119, column: 7, scope: !14926)
!14932 = !DILocation(line: 4119, column: 7, scope: !14927)
!14933 = !DILocation(line: 4120, column: 4, scope: !14926)
!14934 = !DILocation(line: 4121, column: 29, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 4121, column: 7)
!14936 = !DILocation(line: 4121, column: 26, scope: !14935)
!14937 = !DILocation(line: 4121, column: 31, scope: !14935)
!14938 = !DILocation(line: 4121, column: 45, scope: !14935)
!14939 = !DILocation(line: 4121, column: 49, scope: !14935)
!14940 = !DILocation(line: 4121, column: 57, scope: !14935)
!14941 = !DILocation(line: 4121, column: 34, scope: !14935)
!14942 = !DILocation(line: 4121, column: 7, scope: !14927)
!14943 = !DILocation(line: 4122, column: 8, scope: !14935)
!14944 = !DILocation(line: 4122, column: 6, scope: !14935)
!14945 = !DILocation(line: 4122, column: 4, scope: !14935)
!14946 = !DILocation(line: 4123, column: 2, scope: !14927)
!14947 = !DILocation(line: 4118, column: 39, scope: !14920)
!14948 = !DILocation(line: 4118, column: 2, scope: !14920)
!14949 = distinct !{!14949, !14924, !14950}
!14950 = !DILocation(line: 4123, column: 2, scope: !14917)
!14951 = !DILocation(line: 4124, column: 6, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14898, file: !3, line: 4124, column: 6)
!14953 = !DILocation(line: 4124, column: 8, scope: !14952)
!14954 = !DILocation(line: 4124, column: 6, scope: !14898)
!14955 = !DILocation(line: 4125, column: 10, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14952, file: !3, line: 4124, column: 30)
!14957 = !DILocation(line: 4125, column: 14, scope: !14956)
!14958 = !DILocation(line: 4125, column: 22, scope: !14956)
!14959 = !DILocation(line: 4125, column: 3, scope: !14956)
!14960 = !DILocation(line: 4125, column: 26, scope: !14956)
!14961 = !DILocation(line: 4126, column: 19, scope: !14956)
!14962 = !DILocation(line: 4126, column: 23, scope: !14956)
!14963 = !DILocation(line: 4126, column: 26, scope: !14956)
!14964 = !DILocation(line: 4126, column: 30, scope: !14956)
!14965 = !DILocation(line: 4126, column: 38, scope: !14956)
!14966 = !DILocation(line: 4126, column: 3, scope: !14956)
!14967 = !DILocation(line: 4127, column: 3, scope: !14956)
!14968 = !DILocation(line: 4129, column: 2, scope: !14898)
!14969 = !DILocation(line: 4130, column: 1, scope: !14898)
!14970 = distinct !DISubprogram(name: "port_force_link_speed", scope: !3, file: !3, line: 3419, type: !14125, scopeLine: 3420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14971 = !DILocalVariable(name: "port", arg: 1, scope: !14970, file: !3, line: 3419, type: !8386)
!14972 = !DILocation(line: 3419, column: 52, scope: !14970)
!14973 = !DILocalVariable(name: "hw", scope: !14970, file: !3, line: 3421, type: !8002)
!14974 = !DILocation(line: 3421, column: 17, scope: !14970)
!14975 = !DILocation(line: 3421, column: 22, scope: !14970)
!14976 = !DILocation(line: 3421, column: 28, scope: !14970)
!14977 = !DILocalVariable(name: "data", scope: !14970, file: !3, line: 3422, type: !581)
!14978 = !DILocation(line: 3422, column: 6, scope: !14970)
!14979 = !DILocalVariable(name: "i", scope: !14970, file: !3, line: 3423, type: !32)
!14980 = !DILocation(line: 3423, column: 6, scope: !14970)
!14981 = !DILocalVariable(name: "phy", scope: !14970, file: !3, line: 3424, type: !32)
!14982 = !DILocation(line: 3424, column: 6, scope: !14970)
!14983 = !DILocalVariable(name: "p", scope: !14970, file: !3, line: 3425, type: !32)
!14984 = !DILocation(line: 3425, column: 6, scope: !14970)
!14985 = !DILocation(line: 3427, column: 9, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 3427, column: 2)
!14987 = !DILocation(line: 3427, column: 18, scope: !14986)
!14988 = !DILocation(line: 3427, column: 24, scope: !14986)
!14989 = !DILocation(line: 3427, column: 16, scope: !14986)
!14990 = !DILocation(line: 3427, column: 7, scope: !14986)
!14991 = !DILocation(line: 3427, column: 36, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14986, file: !3, line: 3427, column: 2)
!14993 = !DILocation(line: 3427, column: 40, scope: !14992)
!14994 = !DILocation(line: 3427, column: 46, scope: !14992)
!14995 = !DILocation(line: 3427, column: 38, scope: !14992)
!14996 = !DILocation(line: 3427, column: 2, scope: !14986)
!14997 = !DILocation(line: 3428, column: 36, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14992, file: !3, line: 3427, column: 66)
!14999 = !DILocation(line: 3428, column: 38, scope: !14998)
!15000 = !DILocation(line: 3428, column: 34, scope: !14998)
!15001 = !DILocation(line: 3428, column: 7, scope: !14998)
!15002 = !DILocation(line: 3429, column: 17, scope: !14998)
!15003 = !DILocation(line: 3429, column: 21, scope: !14998)
!15004 = !DILocation(line: 3429, column: 3, scope: !14998)
!15005 = !DILocation(line: 3431, column: 8, scope: !14998)
!15006 = !DILocation(line: 3433, column: 13, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 3433, column: 7)
!15008 = !DILocation(line: 3433, column: 19, scope: !15007)
!15009 = !DILocation(line: 3433, column: 10, scope: !15007)
!15010 = !DILocation(line: 3433, column: 7, scope: !14998)
!15011 = !DILocation(line: 3434, column: 9, scope: !15007)
!15012 = !DILocation(line: 3434, column: 4, scope: !15007)
!15013 = !DILocation(line: 3435, column: 19, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15007, file: !3, line: 3435, column: 12)
!15015 = !DILocation(line: 3435, column: 25, scope: !15014)
!15016 = !DILocation(line: 3435, column: 16, scope: !15014)
!15017 = !DILocation(line: 3435, column: 12, scope: !15007)
!15018 = !DILocation(line: 3436, column: 9, scope: !15014)
!15019 = !DILocation(line: 3436, column: 4, scope: !15014)
!15020 = !DILocation(line: 3437, column: 12, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 3437, column: 7)
!15022 = !DILocation(line: 3437, column: 18, scope: !15021)
!15023 = !DILocation(line: 3437, column: 9, scope: !15021)
!15024 = !DILocation(line: 3437, column: 7, scope: !14998)
!15025 = !DILocation(line: 3438, column: 9, scope: !15021)
!15026 = !DILocation(line: 3438, column: 4, scope: !15021)
!15027 = !DILocation(line: 3439, column: 17, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 3439, column: 12)
!15029 = !DILocation(line: 3439, column: 23, scope: !15028)
!15030 = !DILocation(line: 3439, column: 14, scope: !15028)
!15031 = !DILocation(line: 3439, column: 12, scope: !15021)
!15032 = !DILocation(line: 3440, column: 9, scope: !15028)
!15033 = !DILocation(line: 3440, column: 4, scope: !15028)
!15034 = !DILocation(line: 3441, column: 17, scope: !14998)
!15035 = !DILocation(line: 3441, column: 21, scope: !14998)
!15036 = !DILocation(line: 3441, column: 26, scope: !14998)
!15037 = !DILocation(line: 3441, column: 3, scope: !14998)
!15038 = !DILocation(line: 3442, column: 2, scope: !14998)
!15039 = !DILocation(line: 3427, column: 57, scope: !14992)
!15040 = !DILocation(line: 3427, column: 62, scope: !14992)
!15041 = !DILocation(line: 3427, column: 2, scope: !14992)
!15042 = distinct !{!15042, !14996, !15043}
!15043 = !DILocation(line: 3442, column: 2, scope: !14986)
!15044 = !DILocation(line: 3443, column: 1, scope: !14970)
!15045 = distinct !DISubprogram(name: "port_set_link_speed", scope: !3, file: !3, line: 3368, type: !14125, scopeLine: 3369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15046 = !DILocalVariable(name: "port", arg: 1, scope: !15045, file: !3, line: 3368, type: !8386)
!15047 = !DILocation(line: 3368, column: 50, scope: !15045)
!15048 = !DILocalVariable(name: "hw", scope: !15045, file: !3, line: 3370, type: !8002)
!15049 = !DILocation(line: 3370, column: 17, scope: !15045)
!15050 = !DILocation(line: 3370, column: 22, scope: !15045)
!15051 = !DILocation(line: 3370, column: 28, scope: !15045)
!15052 = !DILocalVariable(name: "data", scope: !15045, file: !3, line: 3371, type: !581)
!15053 = !DILocation(line: 3371, column: 6, scope: !15045)
!15054 = !DILocalVariable(name: "cfg", scope: !15045, file: !3, line: 3372, type: !581)
!15055 = !DILocation(line: 3372, column: 6, scope: !15045)
!15056 = !DILocalVariable(name: "status", scope: !15045, file: !3, line: 3373, type: !794)
!15057 = !DILocation(line: 3373, column: 5, scope: !15045)
!15058 = !DILocalVariable(name: "i", scope: !15045, file: !3, line: 3374, type: !32)
!15059 = !DILocation(line: 3374, column: 6, scope: !15045)
!15060 = !DILocalVariable(name: "p", scope: !15045, file: !3, line: 3375, type: !32)
!15061 = !DILocation(line: 3375, column: 6, scope: !15045)
!15062 = !DILocation(line: 3377, column: 9, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 3377, column: 2)
!15064 = !DILocation(line: 3377, column: 18, scope: !15063)
!15065 = !DILocation(line: 3377, column: 24, scope: !15063)
!15066 = !DILocation(line: 3377, column: 16, scope: !15063)
!15067 = !DILocation(line: 3377, column: 7, scope: !15063)
!15068 = !DILocation(line: 3377, column: 36, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 3377, column: 2)
!15070 = !DILocation(line: 3377, column: 40, scope: !15069)
!15071 = !DILocation(line: 3377, column: 46, scope: !15069)
!15072 = !DILocation(line: 3377, column: 38, scope: !15069)
!15073 = !DILocation(line: 3377, column: 2, scope: !15063)
!15074 = !DILocation(line: 3378, column: 12, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15069, file: !3, line: 3377, column: 66)
!15076 = !DILocation(line: 3378, column: 16, scope: !15075)
!15077 = !DILocation(line: 3378, column: 3, scope: !15075)
!15078 = !DILocation(line: 3379, column: 11, scope: !15075)
!15079 = !DILocation(line: 3379, column: 15, scope: !15075)
!15080 = !DILocation(line: 3379, column: 3, scope: !15075)
!15081 = !DILocation(line: 3381, column: 7, scope: !15075)
!15082 = !DILocation(line: 3382, column: 7, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15075, file: !3, line: 3382, column: 7)
!15084 = !DILocation(line: 3382, column: 14, scope: !15083)
!15085 = !DILocation(line: 3382, column: 7, scope: !15075)
!15086 = !DILocation(line: 3383, column: 10, scope: !15083)
!15087 = !DILocation(line: 3383, column: 8, scope: !15083)
!15088 = !DILocation(line: 3383, column: 4, scope: !15083)
!15089 = !DILocation(line: 3385, column: 8, scope: !15075)
!15090 = !DILocation(line: 3386, column: 31, scope: !15075)
!15091 = !DILocation(line: 3386, column: 37, scope: !15075)
!15092 = !DILocation(line: 3386, column: 10, scope: !15075)
!15093 = !DILocation(line: 3386, column: 8, scope: !15075)
!15094 = !DILocation(line: 3388, column: 8, scope: !15075)
!15095 = !DILocation(line: 3392, column: 7, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15075, file: !3, line: 3392, column: 7)
!15097 = !DILocation(line: 3392, column: 13, scope: !15096)
!15098 = !DILocation(line: 3392, column: 19, scope: !15096)
!15099 = !DILocation(line: 3392, column: 22, scope: !15096)
!15100 = !DILocation(line: 3392, column: 28, scope: !15096)
!15101 = !DILocation(line: 3392, column: 7, scope: !15075)
!15102 = !DILocation(line: 3393, column: 14, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15104, file: !3, line: 3393, column: 8)
!15104 = distinct !DILexicalBlock(scope: !15096, file: !3, line: 3392, column: 36)
!15105 = !DILocation(line: 3393, column: 20, scope: !15103)
!15106 = !DILocation(line: 3393, column: 11, scope: !15103)
!15107 = !DILocation(line: 3393, column: 8, scope: !15104)
!15108 = !DILocation(line: 3394, column: 10, scope: !15103)
!15109 = !DILocation(line: 3394, column: 5, scope: !15103)
!15110 = !DILocation(line: 3396, column: 20, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 3396, column: 13)
!15112 = !DILocation(line: 3396, column: 26, scope: !15111)
!15113 = !DILocation(line: 3396, column: 17, scope: !15111)
!15114 = !DILocation(line: 3396, column: 13, scope: !15103)
!15115 = !DILocation(line: 3397, column: 10, scope: !15111)
!15116 = !DILocation(line: 3397, column: 5, scope: !15111)
!15117 = !DILocation(line: 3399, column: 13, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15104, file: !3, line: 3399, column: 8)
!15119 = !DILocation(line: 3399, column: 19, scope: !15118)
!15120 = !DILocation(line: 3399, column: 10, scope: !15118)
!15121 = !DILocation(line: 3399, column: 8, scope: !15104)
!15122 = !DILocation(line: 3400, column: 10, scope: !15118)
!15123 = !DILocation(line: 3400, column: 5, scope: !15118)
!15124 = !DILocation(line: 3402, column: 18, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15118, file: !3, line: 3402, column: 13)
!15126 = !DILocation(line: 3402, column: 24, scope: !15125)
!15127 = !DILocation(line: 3402, column: 15, scope: !15125)
!15128 = !DILocation(line: 3402, column: 13, scope: !15118)
!15129 = !DILocation(line: 3403, column: 10, scope: !15125)
!15130 = !DILocation(line: 3403, column: 5, scope: !15125)
!15131 = !DILocation(line: 3405, column: 3, scope: !15104)
!15132 = !DILocation(line: 3406, column: 7, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15075, file: !3, line: 3406, column: 7)
!15134 = !DILocation(line: 3406, column: 15, scope: !15133)
!15135 = !DILocation(line: 3406, column: 12, scope: !15133)
!15136 = !DILocation(line: 3406, column: 7, scope: !15075)
!15137 = !DILocation(line: 3407, column: 9, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 3406, column: 20)
!15139 = !DILocation(line: 3408, column: 13, scope: !15138)
!15140 = !DILocation(line: 3408, column: 17, scope: !15138)
!15141 = !DILocation(line: 3408, column: 47, scope: !15138)
!15142 = !DILocation(line: 3408, column: 4, scope: !15138)
!15143 = !DILocation(line: 3409, column: 3, scope: !15138)
!15144 = !DILocation(line: 3410, column: 2, scope: !15075)
!15145 = !DILocation(line: 3377, column: 57, scope: !15069)
!15146 = !DILocation(line: 3377, column: 62, scope: !15069)
!15147 = !DILocation(line: 3377, column: 2, scope: !15069)
!15148 = distinct !{!15148, !15073, !15149}
!15149 = !DILocation(line: 3410, column: 2, scope: !15063)
!15150 = !DILocation(line: 3411, column: 1, scope: !15045)
!15151 = distinct !DISubprogram(name: "hw_setup_intr", scope: !3, file: !3, line: 3797, type: !8272, scopeLine: 3798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15152 = !DILocalVariable(name: "hw", arg: 1, scope: !15151, file: !3, line: 3797, type: !8002)
!15153 = !DILocation(line: 3797, column: 42, scope: !15151)
!15154 = !DILocation(line: 3799, column: 2, scope: !15151)
!15155 = !DILocation(line: 3799, column: 6, scope: !15151)
!15156 = !DILocation(line: 3799, column: 16, scope: !15151)
!15157 = !DILocation(line: 3800, column: 1, scope: !15151)
!15158 = distinct !DISubprogram(name: "hw_enable", scope: !3, file: !3, line: 3955, type: !8272, scopeLine: 3956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15159 = !DILocalVariable(name: "hw", arg: 1, scope: !15158, file: !3, line: 3955, type: !8002)
!15160 = !DILocation(line: 3955, column: 38, scope: !15158)
!15161 = !DILocation(line: 3957, column: 14, scope: !15158)
!15162 = !DILocation(line: 3957, column: 2, scope: !15158)
!15163 = !DILocation(line: 3958, column: 14, scope: !15158)
!15164 = !DILocation(line: 3958, column: 2, scope: !15158)
!15165 = !DILocation(line: 3959, column: 2, scope: !15158)
!15166 = !DILocation(line: 3959, column: 6, scope: !15158)
!15167 = !DILocation(line: 3959, column: 14, scope: !15158)
!15168 = !DILocation(line: 3960, column: 1, scope: !15158)
!15169 = distinct !DISubprogram(name: "ksz_start_timer", scope: !3, file: !3, line: 4307, type: !15170, scopeLine: 4308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15170 = !DISubroutineType(types: !15171)
!15171 = !{null, !9855, !32}
!15172 = !DILocalVariable(name: "info", arg: 1, scope: !15169, file: !3, line: 4307, type: !9855)
!15173 = !DILocation(line: 4307, column: 52, scope: !15169)
!15174 = !DILocalVariable(name: "time", arg: 2, scope: !15169, file: !3, line: 4307, type: !32)
!15175 = !DILocation(line: 4307, column: 62, scope: !15169)
!15176 = !DILocation(line: 4309, column: 2, scope: !15169)
!15177 = !DILocation(line: 4309, column: 8, scope: !15169)
!15178 = !DILocation(line: 4309, column: 12, scope: !15169)
!15179 = !DILocation(line: 4310, column: 24, scope: !15169)
!15180 = !DILocation(line: 4310, column: 34, scope: !15169)
!15181 = !DILocation(line: 4310, column: 32, scope: !15169)
!15182 = !DILocation(line: 4310, column: 2, scope: !15169)
!15183 = !DILocation(line: 4310, column: 8, scope: !15169)
!15184 = !DILocation(line: 4310, column: 14, scope: !15169)
!15185 = !DILocation(line: 4310, column: 22, scope: !15169)
!15186 = !DILocation(line: 4311, column: 13, scope: !15169)
!15187 = !DILocation(line: 4311, column: 19, scope: !15169)
!15188 = !DILocation(line: 4311, column: 2, scope: !15169)
!15189 = !DILocation(line: 4314, column: 2, scope: !15169)
!15190 = !DILocation(line: 4314, column: 8, scope: !15169)
!15191 = !DILocation(line: 4314, column: 12, scope: !15169)
!15192 = !DILocation(line: 4315, column: 1, scope: !15169)
!15193 = distinct !DISubprogram(name: "netif_start_queue", scope: !31, file: !31, line: 3285, type: !406, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15194 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !15195, file: !31, line: 3274, type: !6439)
!15195 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !31, file: !31, line: 3274, type: !15196, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15196 = !DISubroutineType(types: !15197)
!15197 = !{null, !6439}
!15198 = !DILocation(line: 3274, column: 71, scope: !15195, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 3287, column: 2, scope: !15193)
!15200 = !DILocalVariable(name: "dev", arg: 1, scope: !15193, file: !31, line: 3285, type: !290)
!15201 = !DILocation(line: 3285, column: 57, scope: !15193)
!15202 = !DILocation(line: 3287, column: 43, scope: !15193)
!15203 = !DILocation(line: 3287, column: 23, scope: !15193)
!15204 = !DILocation(line: 3276, column: 37, scope: !15195, inlinedAt: !15199)
!15205 = !DILocation(line: 3276, column: 48, scope: !15195, inlinedAt: !15199)
!15206 = !DILocation(line: 3276, column: 2, scope: !15195, inlinedAt: !15199)
!15207 = !DILocation(line: 3288, column: 1, scope: !15193)
!15208 = distinct !DISubprogram(name: "request_irq", scope: !3012, file: !3012, line: 157, type: !15209, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15209 = !DISubroutineType(types: !15210)
!15210 = !{!32, !7, !15211, !312, !292, !591}
!15211 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3012, line: 92, baseType: !15212)
!15212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15213, size: 64)
!15213 = !DISubroutineType(types: !15214)
!15214 = !{!15215, !32, !591}
!15215 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7218, line: 17, baseType: !7217)
!15216 = !DILocalVariable(name: "irq", arg: 1, scope: !15208, file: !3012, line: 157, type: !7)
!15217 = !DILocation(line: 157, column: 26, scope: !15208)
!15218 = !DILocalVariable(name: "handler", arg: 2, scope: !15208, file: !3012, line: 157, type: !15211)
!15219 = !DILocation(line: 157, column: 45, scope: !15208)
!15220 = !DILocalVariable(name: "flags", arg: 3, scope: !15208, file: !3012, line: 157, type: !312)
!15221 = !DILocation(line: 157, column: 68, scope: !15208)
!15222 = !DILocalVariable(name: "name", arg: 4, scope: !15208, file: !3012, line: 158, type: !292)
!15223 = !DILocation(line: 158, column: 18, scope: !15208)
!15224 = !DILocalVariable(name: "dev", arg: 5, scope: !15208, file: !3012, line: 158, type: !591)
!15225 = !DILocation(line: 158, column: 30, scope: !15208)
!15226 = !DILocation(line: 160, column: 30, scope: !15208)
!15227 = !DILocation(line: 160, column: 35, scope: !15208)
!15228 = !DILocation(line: 160, column: 50, scope: !15208)
!15229 = !DILocation(line: 160, column: 57, scope: !15208)
!15230 = !DILocation(line: 160, column: 63, scope: !15208)
!15231 = !DILocation(line: 160, column: 9, scope: !15208)
!15232 = !DILocation(line: 160, column: 2, scope: !15208)
!15233 = distinct !DISubprogram(name: "netdev_intr", scope: !3, file: !3, line: 5231, type: !15213, scopeLine: 5232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15234 = !DILocalVariable(name: "lock", arg: 1, scope: !15235, file: !8358, line: 392, type: !2181)
!15235 = distinct !DISubprogram(name: "spin_unlock", scope: !8358, file: !8358, line: 392, type: !13089, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15236 = !DILocation(line: 392, column: 53, scope: !15235, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 5294, column: 2, scope: !15233)
!15238 = !DILocation(line: 392, column: 53, scope: !15235, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 5245, column: 3, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15241, file: !3, line: 5244, column: 19)
!15241 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 5244, column: 6)
!15242 = !DILocalVariable(name: "lock", arg: 1, scope: !15243, file: !8358, line: 352, type: !2181)
!15243 = distinct !DISubprogram(name: "spin_lock", scope: !8358, file: !8358, line: 352, type: !13089, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15244 = !DILocation(line: 352, column: 51, scope: !15243, inlinedAt: !15245)
!15245 = distinct !DILocation(line: 5239, column: 2, scope: !15233)
!15246 = !DILocalVariable(name: "irq", arg: 1, scope: !15233, file: !3, line: 5231, type: !32)
!15247 = !DILocation(line: 5231, column: 36, scope: !15233)
!15248 = !DILocalVariable(name: "dev_id", arg: 2, scope: !15233, file: !3, line: 5231, type: !591)
!15249 = !DILocation(line: 5231, column: 47, scope: !15233)
!15250 = !DILocalVariable(name: "int_enable", scope: !15233, file: !3, line: 5233, type: !7840)
!15251 = !DILocation(line: 5233, column: 7, scope: !15233)
!15252 = !DILocalVariable(name: "dev", scope: !15233, file: !3, line: 5234, type: !290)
!15253 = !DILocation(line: 5234, column: 21, scope: !15233)
!15254 = !DILocation(line: 5234, column: 49, scope: !15233)
!15255 = !DILocation(line: 5234, column: 27, scope: !15233)
!15256 = !DILocalVariable(name: "priv", scope: !15233, file: !3, line: 5235, type: !7985)
!15257 = !DILocation(line: 5235, column: 19, scope: !15233)
!15258 = !DILocation(line: 5235, column: 38, scope: !15233)
!15259 = !DILocation(line: 5235, column: 26, scope: !15233)
!15260 = !DILocalVariable(name: "hw_priv", scope: !15233, file: !3, line: 5236, type: !7512)
!15261 = !DILocation(line: 5236, column: 19, scope: !15233)
!15262 = !DILocation(line: 5236, column: 29, scope: !15233)
!15263 = !DILocation(line: 5236, column: 35, scope: !15233)
!15264 = !DILocalVariable(name: "hw", scope: !15233, file: !3, line: 5237, type: !8002)
!15265 = !DILocation(line: 5237, column: 17, scope: !15233)
!15266 = !DILocation(line: 5237, column: 23, scope: !15233)
!15267 = !DILocation(line: 5237, column: 32, scope: !15233)
!15268 = !DILocation(line: 5239, column: 13, scope: !15233)
!15269 = !DILocation(line: 5239, column: 22, scope: !15233)
!15270 = !DILocation(line: 354, column: 2, scope: !15271, inlinedAt: !15245)
!15271 = distinct !DILexicalBlock(scope: !15243, file: !8358, line: 354, column: 2)
!15272 = !{i32 -2145178981}
!15273 = !DILocation(line: 354, column: 2, scope: !15274, inlinedAt: !15245)
!15274 = distinct !DILexicalBlock(scope: !15271, file: !8358, line: 354, column: 2)
!15275 = !DILocation(line: 5241, column: 15, scope: !15233)
!15276 = !DILocation(line: 5241, column: 2, scope: !15233)
!15277 = !DILocation(line: 5244, column: 7, scope: !15241)
!15278 = !DILocation(line: 5244, column: 6, scope: !15233)
!15279 = !DILocation(line: 5245, column: 16, scope: !15240)
!15280 = !DILocation(line: 5245, column: 25, scope: !15240)
!15281 = !DILocation(line: 394, column: 2, scope: !15282, inlinedAt: !15239)
!15282 = distinct !DILexicalBlock(scope: !15235, file: !8358, line: 394, column: 2)
!15283 = !{i32 -2145176620}
!15284 = !DILocation(line: 394, column: 2, scope: !15285, inlinedAt: !15239)
!15285 = distinct !DILexicalBlock(scope: !15282, file: !8358, line: 394, column: 2)
!15286 = !DILocation(line: 5246, column: 3, scope: !15240)
!15287 = !DILocation(line: 5249, column: 2, scope: !15233)
!15288 = !DILocation(line: 5250, column: 15, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 5249, column: 5)
!15290 = !DILocation(line: 5250, column: 19, scope: !15289)
!15291 = !DILocation(line: 5250, column: 3, scope: !15289)
!15292 = !DILocation(line: 5251, column: 17, scope: !15289)
!15293 = !DILocation(line: 5251, column: 21, scope: !15289)
!15294 = !DILocation(line: 5251, column: 14, scope: !15289)
!15295 = !DILocation(line: 5253, column: 7, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 5253, column: 7)
!15297 = !DILocation(line: 5253, column: 7, scope: !15289)
!15298 = !DILocation(line: 5254, column: 20, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15296, file: !3, line: 5253, column: 50)
!15300 = !DILocation(line: 5254, column: 4, scope: !15299)
!15301 = !DILocation(line: 5255, column: 22, scope: !15299)
!15302 = !DILocation(line: 5255, column: 31, scope: !15299)
!15303 = !DILocation(line: 5255, column: 4, scope: !15299)
!15304 = !DILocation(line: 5256, column: 3, scope: !15299)
!15305 = !DILocation(line: 5258, column: 7, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 5258, column: 7)
!15307 = !DILocation(line: 5258, column: 7, scope: !15289)
!15308 = !DILocation(line: 5259, column: 20, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15306, file: !3, line: 5258, column: 43)
!15310 = !DILocation(line: 5259, column: 4, scope: !15309)
!15311 = !DILocation(line: 5260, column: 22, scope: !15309)
!15312 = !DILocation(line: 5260, column: 31, scope: !15309)
!15313 = !DILocation(line: 5260, column: 4, scope: !15309)
!15314 = !DILocation(line: 5261, column: 3, scope: !15309)
!15315 = !DILocation(line: 5263, column: 7, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 5263, column: 7)
!15317 = !DILocation(line: 5263, column: 7, scope: !15289)
!15318 = !DILocation(line: 5264, column: 4, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15316, file: !3, line: 5263, column: 53)
!15320 = !DILocation(line: 5264, column: 9, scope: !15319)
!15321 = !DILocation(line: 5264, column: 15, scope: !15319)
!15322 = !DILocation(line: 5264, column: 29, scope: !15319)
!15323 = !DILocation(line: 5265, column: 17, scope: !15319)
!15324 = !DILocation(line: 5265, column: 4, scope: !15319)
!15325 = !DILocation(line: 5266, column: 3, scope: !15319)
!15326 = !DILocation(line: 5268, column: 7, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 5268, column: 7)
!15328 = !DILocation(line: 5268, column: 7, scope: !15289)
!15329 = !DILocalVariable(name: "port", scope: !15330, file: !3, line: 5269, type: !8386)
!15330 = distinct !DILexicalBlock(scope: !15327, file: !3, line: 5268, column: 46)
!15331 = !DILocation(line: 5269, column: 21, scope: !15330)
!15332 = !DILocation(line: 5269, column: 29, scope: !15330)
!15333 = !DILocation(line: 5269, column: 35, scope: !15330)
!15334 = !DILocation(line: 5271, column: 4, scope: !15330)
!15335 = !DILocation(line: 5271, column: 8, scope: !15330)
!15336 = !DILocation(line: 5271, column: 17, scope: !15330)
!15337 = !DILocation(line: 5272, column: 24, scope: !15330)
!15338 = !DILocation(line: 5272, column: 4, scope: !15330)
!15339 = !DILocation(line: 5273, column: 3, scope: !15330)
!15340 = !DILocation(line: 5275, column: 7, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 5275, column: 7)
!15342 = !DILocation(line: 5275, column: 7, scope: !15289)
!15343 = !DILocation(line: 5276, column: 19, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15341, file: !3, line: 5275, column: 53)
!15345 = !DILocation(line: 5276, column: 4, scope: !15344)
!15346 = !DILocation(line: 5277, column: 4, scope: !15344)
!15347 = !DILocation(line: 5280, column: 7, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 5280, column: 7)
!15349 = !DILocation(line: 5280, column: 7, scope: !15289)
!15350 = !DILocalVariable(name: "data", scope: !15351, file: !3, line: 5281, type: !987)
!15351 = distinct !DILexicalBlock(scope: !15348, file: !3, line: 5280, column: 53)
!15352 = !DILocation(line: 5281, column: 8, scope: !15351)
!15353 = !DILocation(line: 5283, column: 4, scope: !15351)
!15354 = !DILocation(line: 5283, column: 8, scope: !15351)
!15355 = !DILocation(line: 5283, column: 18, scope: !15351)
!15356 = !DILocation(line: 5284, column: 4, scope: !15351)
!15357 = !DILocation(line: 5285, column: 17, scope: !15351)
!15358 = !DILocation(line: 5285, column: 21, scope: !15351)
!15359 = !DILocation(line: 5285, column: 24, scope: !15351)
!15360 = !DILocation(line: 5285, column: 11, scope: !15351)
!15361 = !DILocation(line: 5285, column: 9, scope: !15351)
!15362 = !DILocation(line: 5286, column: 10, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 5286, column: 8)
!15364 = !DILocation(line: 5286, column: 15, scope: !15363)
!15365 = !DILocation(line: 5286, column: 8, scope: !15351)
!15366 = !DILocation(line: 5287, column: 5, scope: !15363)
!15367 = !DILocation(line: 5288, column: 4, scope: !15351)
!15368 = !DILocation(line: 5290, column: 2, scope: !15289)
!15369 = !DILocation(line: 5292, column: 14, scope: !15233)
!15370 = !DILocation(line: 5292, column: 2, scope: !15233)
!15371 = !DILocation(line: 5294, column: 15, scope: !15233)
!15372 = !DILocation(line: 5294, column: 24, scope: !15233)
!15373 = !DILocation(line: 394, column: 2, scope: !15282, inlinedAt: !15237)
!15374 = !DILocation(line: 394, column: 2, scope: !15285, inlinedAt: !15237)
!15375 = !DILocation(line: 5296, column: 2, scope: !15233)
!15376 = !DILocation(line: 5297, column: 1, scope: !15233)
!15377 = distinct !DISubprogram(name: "rx_proc_task", scope: !3, file: !3, line: 5168, type: !7976, scopeLine: 5169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15378 = !DILocation(line: 402, column: 57, scope: !13088, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 5183, column: 3, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !3, line: 5175, column: 44)
!15381 = distinct !DILexicalBlock(scope: !15377, file: !3, line: 5175, column: 6)
!15382 = !DILocation(line: 377, column: 55, scope: !13094, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 5181, column: 3, scope: !15380)
!15384 = !DILocalVariable(name: "t", arg: 1, scope: !15377, file: !3, line: 5168, type: !7963)
!15385 = !DILocation(line: 5168, column: 49, scope: !15377)
!15386 = !DILocalVariable(name: "hw_priv", scope: !15377, file: !3, line: 5170, type: !7512)
!15387 = !DILocation(line: 5170, column: 19, scope: !15377)
!15388 = !DILocalVariable(name: "__mptr", scope: !15389, file: !3, line: 5170, type: !591)
!15389 = distinct !DILexicalBlock(scope: !15377, file: !3, line: 5170, column: 29)
!15390 = !DILocation(line: 5170, column: 29, scope: !15389)
!15391 = !DILocation(line: 5170, column: 29, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15389, file: !3, line: 5170, column: 29)
!15393 = !DILocalVariable(name: "hw", scope: !15377, file: !3, line: 5171, type: !8002)
!15394 = !DILocation(line: 5171, column: 17, scope: !15377)
!15395 = !DILocation(line: 5171, column: 23, scope: !15377)
!15396 = !DILocation(line: 5171, column: 32, scope: !15377)
!15397 = !DILocation(line: 5173, column: 7, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15377, file: !3, line: 5173, column: 6)
!15399 = !DILocation(line: 5173, column: 11, scope: !15398)
!15400 = !DILocation(line: 5173, column: 6, scope: !15377)
!15401 = !DILocation(line: 5174, column: 3, scope: !15398)
!15402 = !DILocation(line: 5175, column: 6, scope: !15381)
!15403 = !DILocation(line: 5175, column: 6, scope: !15377)
!15404 = !DILocation(line: 5178, column: 16, scope: !15380)
!15405 = !DILocation(line: 5178, column: 3, scope: !15380)
!15406 = !DILocation(line: 5181, column: 18, scope: !15380)
!15407 = !DILocation(line: 5181, column: 27, scope: !15380)
!15408 = !DILocation(line: 379, column: 2, scope: !13191, inlinedAt: !15383)
!15409 = !DILocation(line: 379, column: 2, scope: !13194, inlinedAt: !15383)
!15410 = !DILocation(line: 379, column: 2, scope: !13197, inlinedAt: !15383)
!15411 = !DILocation(line: 5182, column: 19, scope: !15380)
!15412 = !DILocation(line: 5182, column: 3, scope: !15380)
!15413 = !DILocation(line: 5183, column: 20, scope: !15380)
!15414 = !DILocation(line: 5183, column: 29, scope: !15380)
!15415 = !DILocation(line: 404, column: 2, scope: !13276, inlinedAt: !15379)
!15416 = !DILocation(line: 404, column: 2, scope: !13279, inlinedAt: !15379)
!15417 = !DILocation(line: 404, column: 2, scope: !13282, inlinedAt: !15379)
!15418 = !DILocation(line: 5184, column: 2, scope: !15380)
!15419 = !DILocation(line: 5185, column: 15, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15381, file: !3, line: 5184, column: 9)
!15421 = !DILocation(line: 5185, column: 3, scope: !15420)
!15422 = !DILocation(line: 5186, column: 21, scope: !15420)
!15423 = !DILocation(line: 5186, column: 30, scope: !15420)
!15424 = !DILocation(line: 5186, column: 3, scope: !15420)
!15425 = !DILocation(line: 5188, column: 1, scope: !15377)
!15426 = distinct !DISubprogram(name: "tx_proc_task", scope: !3, file: !3, line: 5190, type: !7976, scopeLine: 5191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15427 = !DILocation(line: 402, column: 57, scope: !13088, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 5202, column: 2, scope: !15426)
!15429 = !DILocation(line: 377, column: 55, scope: !13094, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 5200, column: 2, scope: !15426)
!15431 = !DILocalVariable(name: "t", arg: 1, scope: !15426, file: !3, line: 5190, type: !7963)
!15432 = !DILocation(line: 5190, column: 49, scope: !15426)
!15433 = !DILocalVariable(name: "hw_priv", scope: !15426, file: !3, line: 5192, type: !7512)
!15434 = !DILocation(line: 5192, column: 19, scope: !15426)
!15435 = !DILocalVariable(name: "__mptr", scope: !15436, file: !3, line: 5192, type: !591)
!15436 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 5192, column: 29)
!15437 = !DILocation(line: 5192, column: 29, scope: !15436)
!15438 = !DILocation(line: 5192, column: 29, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 5192, column: 29)
!15440 = !DILocalVariable(name: "hw", scope: !15426, file: !3, line: 5193, type: !8002)
!15441 = !DILocation(line: 5193, column: 17, scope: !15426)
!15442 = !DILocation(line: 5193, column: 23, scope: !15426)
!15443 = !DILocation(line: 5193, column: 32, scope: !15426)
!15444 = !DILocation(line: 5195, column: 14, scope: !15426)
!15445 = !DILocation(line: 5195, column: 2, scope: !15426)
!15446 = !DILocation(line: 5197, column: 10, scope: !15426)
!15447 = !DILocation(line: 5197, column: 2, scope: !15426)
!15448 = !DILocation(line: 5200, column: 17, scope: !15426)
!15449 = !DILocation(line: 5200, column: 26, scope: !15426)
!15450 = !DILocation(line: 379, column: 2, scope: !13191, inlinedAt: !15430)
!15451 = !DILocation(line: 379, column: 2, scope: !13194, inlinedAt: !15430)
!15452 = !DILocation(line: 379, column: 2, scope: !13197, inlinedAt: !15430)
!15453 = !DILocation(line: 5201, column: 18, scope: !15426)
!15454 = !DILocation(line: 5201, column: 2, scope: !15426)
!15455 = !DILocation(line: 5202, column: 19, scope: !15426)
!15456 = !DILocation(line: 5202, column: 28, scope: !15426)
!15457 = !DILocation(line: 404, column: 2, scope: !13276, inlinedAt: !15428)
!15458 = !DILocation(line: 404, column: 2, scope: !13279, inlinedAt: !15428)
!15459 = !DILocation(line: 404, column: 2, scope: !13282, inlinedAt: !15428)
!15460 = !DILocation(line: 5203, column: 1, scope: !15426)
!15461 = distinct !DISubprogram(name: "hw_reset", scope: !3, file: !3, line: 3744, type: !8272, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15462 = !DILocalVariable(name: "hw", arg: 1, scope: !15461, file: !3, line: 3744, type: !8002)
!15463 = !DILocation(line: 3744, column: 37, scope: !15461)
!15464 = !DILocation(line: 3746, column: 32, scope: !15461)
!15465 = !DILocation(line: 3746, column: 36, scope: !15461)
!15466 = !DILocation(line: 3746, column: 39, scope: !15461)
!15467 = !DILocation(line: 3746, column: 2, scope: !15461)
!15468 = !DILocalVariable(name: "__ms", scope: !15469, file: !3, line: 3749, type: !312)
!15469 = distinct !DILexicalBlock(scope: !15461, file: !3, line: 3749, column: 2)
!15470 = !DILocation(line: 3749, column: 2, scope: !15469)
!15471 = !DILocation(line: 3749, column: 2, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !3, line: 3749, column: 2)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 3749, column: 2)
!15474 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 3749, column: 2)
!15475 = distinct !DILexicalBlock(scope: !15469, file: !3, line: 3749, column: 2)
!15476 = distinct !{!15476, !15470, !15470}
!15477 = !DILocation(line: 3752, column: 12, scope: !15461)
!15478 = !DILocation(line: 3752, column: 16, scope: !15461)
!15479 = !DILocation(line: 3752, column: 19, scope: !15461)
!15480 = !DILocation(line: 3752, column: 2, scope: !15461)
!15481 = !DILocation(line: 3753, column: 1, scope: !15461)
!15482 = distinct !DISubprogram(name: "hw_set_desc_base", scope: !3, file: !3, line: 3860, type: !15483, scopeLine: 3861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15483 = !DISubroutineType(types: !15484)
!15484 = !{null, !8002, !987, !987}
!15485 = !DILocalVariable(name: "hw", arg: 1, scope: !15482, file: !3, line: 3860, type: !8002)
!15486 = !DILocation(line: 3860, column: 45, scope: !15482)
!15487 = !DILocalVariable(name: "tx_addr", arg: 2, scope: !15482, file: !3, line: 3860, type: !987)
!15488 = !DILocation(line: 3860, column: 53, scope: !15482)
!15489 = !DILocalVariable(name: "rx_addr", arg: 3, scope: !15482, file: !3, line: 3860, type: !987)
!15490 = !DILocation(line: 3860, column: 66, scope: !15482)
!15491 = !DILocation(line: 3863, column: 9, scope: !15482)
!15492 = !DILocation(line: 3863, column: 18, scope: !15482)
!15493 = !DILocation(line: 3863, column: 22, scope: !15482)
!15494 = !DILocation(line: 3863, column: 25, scope: !15482)
!15495 = !DILocation(line: 3863, column: 2, scope: !15482)
!15496 = !DILocation(line: 3864, column: 9, scope: !15482)
!15497 = !DILocation(line: 3864, column: 18, scope: !15482)
!15498 = !DILocation(line: 3864, column: 22, scope: !15482)
!15499 = !DILocation(line: 3864, column: 25, scope: !15482)
!15500 = !DILocation(line: 3864, column: 2, scope: !15482)
!15501 = !DILocation(line: 3865, column: 1, scope: !15482)
!15502 = distinct !DISubprogram(name: "hw_cfg_huge_frame", scope: !3, file: !3, line: 5409, type: !15503, scopeLine: 5410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{null, !7512, !8002}
!15505 = !DILocalVariable(name: "hw_priv", arg: 1, scope: !15502, file: !3, line: 5409, type: !7512)
!15506 = !DILocation(line: 5409, column: 48, scope: !15502)
!15507 = !DILocalVariable(name: "hw", arg: 2, scope: !15502, file: !3, line: 5409, type: !8002)
!15508 = !DILocation(line: 5409, column: 72, scope: !15502)
!15509 = !DILocation(line: 5411, column: 6, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15502, file: !3, line: 5411, column: 6)
!15511 = !DILocation(line: 5411, column: 10, scope: !15510)
!15512 = !DILocation(line: 5411, column: 6, scope: !15502)
!15513 = !DILocalVariable(name: "data", scope: !15514, file: !3, line: 5412, type: !987)
!15514 = distinct !DILexicalBlock(scope: !15510, file: !3, line: 5411, column: 22)
!15515 = !DILocation(line: 5412, column: 7, scope: !15514)
!15516 = !DILocation(line: 5414, column: 16, scope: !15514)
!15517 = !DILocation(line: 5414, column: 20, scope: !15514)
!15518 = !DILocation(line: 5414, column: 23, scope: !15514)
!15519 = !DILocation(line: 5414, column: 10, scope: !15514)
!15520 = !DILocation(line: 5414, column: 8, scope: !15514)
!15521 = !DILocation(line: 5415, column: 7, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15514, file: !3, line: 5415, column: 7)
!15523 = !DILocation(line: 5415, column: 11, scope: !15522)
!15524 = !DILocation(line: 5415, column: 20, scope: !15522)
!15525 = !DILocation(line: 5415, column: 7, scope: !15514)
!15526 = !DILocation(line: 5416, column: 9, scope: !15522)
!15527 = !DILocation(line: 5416, column: 4, scope: !15522)
!15528 = !DILocation(line: 5418, column: 9, scope: !15522)
!15529 = !DILocation(line: 5419, column: 10, scope: !15514)
!15530 = !DILocation(line: 5419, column: 16, scope: !15514)
!15531 = !DILocation(line: 5419, column: 20, scope: !15514)
!15532 = !DILocation(line: 5419, column: 23, scope: !15514)
!15533 = !DILocation(line: 5419, column: 3, scope: !15514)
!15534 = !DILocation(line: 5420, column: 2, scope: !15514)
!15535 = !DILocation(line: 5421, column: 6, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15502, file: !3, line: 5421, column: 6)
!15537 = !DILocation(line: 5421, column: 10, scope: !15536)
!15538 = !DILocation(line: 5421, column: 19, scope: !15536)
!15539 = !DILocation(line: 5421, column: 6, scope: !15502)
!15540 = !DILocation(line: 5422, column: 3, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15536, file: !3, line: 5421, column: 36)
!15542 = !DILocation(line: 5422, column: 7, scope: !15541)
!15543 = !DILocation(line: 5422, column: 14, scope: !15541)
!15544 = !DILocation(line: 5423, column: 3, scope: !15541)
!15545 = !DILocation(line: 5423, column: 12, scope: !15541)
!15546 = !DILocation(line: 5423, column: 20, scope: !15541)
!15547 = !DILocation(line: 5424, column: 2, scope: !15541)
!15548 = !DILocation(line: 5425, column: 3, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15536, file: !3, line: 5424, column: 9)
!15550 = !DILocation(line: 5425, column: 7, scope: !15549)
!15551 = !DILocation(line: 5425, column: 14, scope: !15549)
!15552 = !DILocation(line: 5426, column: 7, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !15549, file: !3, line: 5426, column: 7)
!15554 = !DILocation(line: 5426, column: 11, scope: !15553)
!15555 = !DILocation(line: 5426, column: 21, scope: !15553)
!15556 = !DILocation(line: 5426, column: 7, scope: !15549)
!15557 = !DILocation(line: 5427, column: 4, scope: !15553)
!15558 = !DILocation(line: 5427, column: 13, scope: !15553)
!15559 = !DILocation(line: 5427, column: 21, scope: !15553)
!15560 = !DILocation(line: 5429, column: 4, scope: !15553)
!15561 = !DILocation(line: 5429, column: 13, scope: !15553)
!15562 = !DILocation(line: 5429, column: 21, scope: !15553)
!15563 = !DILocation(line: 5431, column: 1, scope: !15502)
!15564 = distinct !DISubprogram(name: "ksz_init_rx_buffers", scope: !3, file: !3, line: 4451, type: !10016, scopeLine: 4452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15565 = !DILocalVariable(name: "adapter", arg: 1, scope: !15564, file: !3, line: 4451, type: !7512)
!15566 = !DILocation(line: 4451, column: 50, scope: !15564)
!15567 = !DILocalVariable(name: "i", scope: !15564, file: !3, line: 4453, type: !32)
!15568 = !DILocation(line: 4453, column: 6, scope: !15564)
!15569 = !DILocalVariable(name: "desc", scope: !15564, file: !3, line: 4454, type: !7875)
!15570 = !DILocation(line: 4454, column: 19, scope: !15564)
!15571 = !DILocalVariable(name: "dma_buf", scope: !15564, file: !3, line: 4455, type: !8036)
!15572 = !DILocation(line: 4455, column: 22, scope: !15564)
!15573 = !DILocalVariable(name: "hw", scope: !15564, file: !3, line: 4456, type: !8002)
!15574 = !DILocation(line: 4456, column: 17, scope: !15564)
!15575 = !DILocation(line: 4456, column: 23, scope: !15564)
!15576 = !DILocation(line: 4456, column: 32, scope: !15564)
!15577 = !DILocalVariable(name: "info", scope: !15564, file: !3, line: 4457, type: !10128)
!15578 = !DILocation(line: 4457, column: 24, scope: !15564)
!15579 = !DILocation(line: 4457, column: 32, scope: !15564)
!15580 = !DILocation(line: 4457, column: 36, scope: !15564)
!15581 = !DILocation(line: 4459, column: 9, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15564, file: !3, line: 4459, column: 2)
!15583 = !DILocation(line: 4459, column: 7, scope: !15582)
!15584 = !DILocation(line: 4459, column: 14, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 4459, column: 2)
!15586 = !DILocation(line: 4459, column: 18, scope: !15585)
!15587 = !DILocation(line: 4459, column: 22, scope: !15585)
!15588 = !DILocation(line: 4459, column: 35, scope: !15585)
!15589 = !DILocation(line: 4459, column: 16, scope: !15585)
!15590 = !DILocation(line: 4459, column: 2, scope: !15582)
!15591 = !DILocation(line: 4460, column: 14, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 4459, column: 47)
!15593 = !DILocation(line: 4460, column: 3, scope: !15592)
!15594 = !DILocation(line: 4462, column: 13, scope: !15592)
!15595 = !DILocation(line: 4462, column: 11, scope: !15592)
!15596 = !DILocation(line: 4463, column: 7, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15592, file: !3, line: 4463, column: 7)
!15598 = !DILocation(line: 4463, column: 16, scope: !15597)
!15599 = !DILocation(line: 4463, column: 20, scope: !15597)
!15600 = !DILocation(line: 4463, column: 23, scope: !15597)
!15601 = !DILocation(line: 4463, column: 32, scope: !15597)
!15602 = !DILocation(line: 4463, column: 39, scope: !15597)
!15603 = !DILocation(line: 4463, column: 48, scope: !15597)
!15604 = !DILocation(line: 4463, column: 36, scope: !15597)
!15605 = !DILocation(line: 4463, column: 7, scope: !15592)
!15606 = !DILocation(line: 4464, column: 17, scope: !15597)
!15607 = !DILocation(line: 4464, column: 26, scope: !15597)
!15608 = !DILocation(line: 4464, column: 4, scope: !15597)
!15609 = !DILocation(line: 4465, column: 18, scope: !15592)
!15610 = !DILocation(line: 4465, column: 27, scope: !15592)
!15611 = !DILocation(line: 4465, column: 3, scope: !15592)
!15612 = !DILocation(line: 4465, column: 12, scope: !15592)
!15613 = !DILocation(line: 4465, column: 16, scope: !15592)
!15614 = !DILocation(line: 4466, column: 8, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15592, file: !3, line: 4466, column: 7)
!15616 = !DILocation(line: 4466, column: 17, scope: !15615)
!15617 = !DILocation(line: 4466, column: 7, scope: !15592)
!15618 = !DILocation(line: 4467, column: 29, scope: !15615)
!15619 = !DILocation(line: 4467, column: 38, scope: !15615)
!15620 = !DILocation(line: 4467, column: 19, scope: !15615)
!15621 = !DILocation(line: 4467, column: 4, scope: !15615)
!15622 = !DILocation(line: 4467, column: 13, scope: !15615)
!15623 = !DILocation(line: 4467, column: 17, scope: !15615)
!15624 = !DILocation(line: 4468, column: 7, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15592, file: !3, line: 4468, column: 7)
!15626 = !DILocation(line: 4468, column: 16, scope: !15625)
!15627 = !DILocation(line: 4468, column: 20, scope: !15625)
!15628 = !DILocation(line: 4468, column: 24, scope: !15625)
!15629 = !DILocation(line: 4468, column: 33, scope: !15625)
!15630 = !DILocation(line: 4468, column: 7, scope: !15592)
!15631 = !DILocation(line: 4469, column: 19, scope: !15625)
!15632 = !DILocation(line: 4469, column: 4, scope: !15625)
!15633 = !DILocation(line: 4469, column: 13, scope: !15625)
!15634 = !DILocation(line: 4469, column: 17, scope: !15625)
!15635 = !DILocation(line: 4475, column: 14, scope: !15592)
!15636 = !DILocation(line: 4475, column: 20, scope: !15592)
!15637 = !DILocation(line: 4475, column: 29, scope: !15592)
!15638 = !DILocation(line: 4475, column: 3, scope: !15592)
!15639 = !DILocation(line: 4476, column: 14, scope: !15592)
!15640 = !DILocation(line: 4476, column: 20, scope: !15592)
!15641 = !DILocation(line: 4476, column: 29, scope: !15592)
!15642 = !DILocation(line: 4476, column: 3, scope: !15592)
!15643 = !DILocation(line: 4477, column: 16, scope: !15592)
!15644 = !DILocation(line: 4477, column: 3, scope: !15592)
!15645 = !DILocation(line: 4478, column: 2, scope: !15592)
!15646 = !DILocation(line: 4459, column: 43, scope: !15585)
!15647 = !DILocation(line: 4459, column: 2, scope: !15585)
!15648 = distinct !{!15648, !15590, !15649}
!15649 = !DILocation(line: 4478, column: 2, scope: !15582)
!15650 = !DILocation(line: 4479, column: 1, scope: !15564)
!15651 = distinct !DISubprogram(name: "hw_read_intr", scope: !3, file: !3, line: 1556, type: !15652, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15652 = !DISubroutineType(types: !15653)
!15653 = !{null, !8002, !15654}
!15654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7840, size: 64)
!15655 = !DILocalVariable(name: "hw", arg: 1, scope: !15651, file: !3, line: 1556, type: !8002)
!15656 = !DILocation(line: 1556, column: 48, scope: !15651)
!15657 = !DILocalVariable(name: "status", arg: 2, scope: !15651, file: !3, line: 1556, type: !15654)
!15658 = !DILocation(line: 1556, column: 58, scope: !15651)
!15659 = !DILocation(line: 1558, column: 18, scope: !15651)
!15660 = !DILocation(line: 1558, column: 22, scope: !15651)
!15661 = !DILocation(line: 1558, column: 25, scope: !15651)
!15662 = !DILocation(line: 1558, column: 12, scope: !15651)
!15663 = !DILocation(line: 1558, column: 3, scope: !15651)
!15664 = !DILocation(line: 1558, column: 10, scope: !15651)
!15665 = !DILocation(line: 1559, column: 13, scope: !15651)
!15666 = !DILocation(line: 1559, column: 12, scope: !15651)
!15667 = !DILocation(line: 1559, column: 22, scope: !15651)
!15668 = !DILocation(line: 1559, column: 26, scope: !15651)
!15669 = !DILocation(line: 1559, column: 20, scope: !15651)
!15670 = !DILocation(line: 1559, column: 3, scope: !15651)
!15671 = !DILocation(line: 1559, column: 10, scope: !15651)
!15672 = !DILocation(line: 1560, column: 1, scope: !15651)
!15673 = distinct !DISubprogram(name: "hw_ack_intr", scope: !3, file: !3, line: 1492, type: !12069, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15674 = !DILocalVariable(name: "hw", arg: 1, scope: !15673, file: !3, line: 1492, type: !8002)
!15675 = !DILocation(line: 1492, column: 47, scope: !15673)
!15676 = !DILocalVariable(name: "interrupt", arg: 2, scope: !15673, file: !3, line: 1492, type: !7840)
!15677 = !DILocation(line: 1492, column: 56, scope: !15673)
!15678 = !DILocation(line: 1494, column: 9, scope: !15673)
!15679 = !DILocation(line: 1494, column: 20, scope: !15673)
!15680 = !DILocation(line: 1494, column: 24, scope: !15673)
!15681 = !DILocation(line: 1494, column: 27, scope: !15673)
!15682 = !DILocation(line: 1494, column: 2, scope: !15673)
!15683 = !DILocation(line: 1495, column: 1, scope: !15673)
!15684 = distinct !DISubprogram(name: "hw_dis_intr_bit", scope: !3, file: !3, line: 1516, type: !12069, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15685 = !DILocalVariable(name: "hw", arg: 1, scope: !15684, file: !3, line: 1516, type: !8002)
!15686 = !DILocation(line: 1516, column: 51, scope: !15684)
!15687 = !DILocalVariable(name: "bit", arg: 2, scope: !15684, file: !3, line: 1516, type: !7840)
!15688 = !DILocation(line: 1516, column: 60, scope: !15684)
!15689 = !DILocation(line: 1518, column: 21, scope: !15684)
!15690 = !DILocation(line: 1518, column: 19, scope: !15684)
!15691 = !DILocation(line: 1518, column: 2, scope: !15684)
!15692 = !DILocation(line: 1518, column: 6, scope: !15684)
!15693 = !DILocation(line: 1518, column: 16, scope: !15684)
!15694 = !DILocation(line: 1519, column: 1, scope: !15684)
!15695 = distinct !DISubprogram(name: "tasklet_schedule", scope: !3012, file: !3012, line: 681, type: !7976, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15696 = !DILocalVariable(name: "t", arg: 1, scope: !15695, file: !3012, line: 681, type: !7963)
!15697 = !DILocation(line: 681, column: 60, scope: !15695)
!15698 = !DILocation(line: 683, column: 46, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15695, file: !3012, line: 683, column: 6)
!15700 = !DILocation(line: 683, column: 49, scope: !15699)
!15701 = !DILocation(line: 683, column: 7, scope: !15699)
!15702 = !DILocation(line: 683, column: 6, scope: !15695)
!15703 = !DILocation(line: 684, column: 22, scope: !15699)
!15704 = !DILocation(line: 684, column: 3, scope: !15699)
!15705 = !DILocation(line: 685, column: 1, scope: !15695)
!15706 = distinct !DISubprogram(name: "hw_resume_rx", scope: !3, file: !3, line: 3874, type: !8272, scopeLine: 3875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15707 = !DILocalVariable(name: "hw", arg: 1, scope: !15706, file: !3, line: 3874, type: !8002)
!15708 = !DILocation(line: 3874, column: 48, scope: !15706)
!15709 = !DILocation(line: 3876, column: 20, scope: !15706)
!15710 = !DILocation(line: 3876, column: 24, scope: !15706)
!15711 = !DILocation(line: 3876, column: 27, scope: !15706)
!15712 = !DILocation(line: 3876, column: 2, scope: !15706)
!15713 = !DILocation(line: 3877, column: 1, scope: !15706)
!15714 = distinct !DISubprogram(name: "handle_rx_stop", scope: !3, file: !3, line: 5205, type: !8272, scopeLine: 5206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15715 = !DILocalVariable(name: "hw", arg: 1, scope: !15714, file: !3, line: 5205, type: !8002)
!15716 = !DILocation(line: 5205, column: 50, scope: !15714)
!15717 = !DILocation(line: 5208, column: 11, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15714, file: !3, line: 5208, column: 6)
!15719 = !DILocation(line: 5208, column: 15, scope: !15718)
!15720 = !DILocation(line: 5208, column: 8, scope: !15718)
!15721 = !DILocation(line: 5208, column: 6, scope: !15714)
!15722 = !DILocation(line: 5209, column: 3, scope: !15718)
!15723 = !DILocation(line: 5209, column: 7, scope: !15718)
!15724 = !DILocation(line: 5209, column: 17, scope: !15718)
!15725 = !DILocation(line: 5210, column: 11, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15718, file: !3, line: 5210, column: 11)
!15727 = !DILocation(line: 5210, column: 15, scope: !15726)
!15728 = !DILocation(line: 5210, column: 23, scope: !15726)
!15729 = !DILocation(line: 5210, column: 11, scope: !15718)
!15730 = !DILocation(line: 5211, column: 7, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15732, file: !3, line: 5211, column: 7)
!15732 = distinct !DILexicalBlock(scope: !15726, file: !3, line: 5210, column: 28)
!15733 = !DILocation(line: 5211, column: 11, scope: !15731)
!15734 = !DILocation(line: 5211, column: 19, scope: !15731)
!15735 = !DILocation(line: 5211, column: 23, scope: !15731)
!15736 = !DILocation(line: 5211, column: 27, scope: !15731)
!15737 = !DILocation(line: 5211, column: 34, scope: !15731)
!15738 = !DILocation(line: 5211, column: 7, scope: !15732)
!15739 = !DILocation(line: 5212, column: 16, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 5211, column: 52)
!15741 = !DILocation(line: 5212, column: 4, scope: !15740)
!15742 = !DILocation(line: 5213, column: 3, scope: !15740)
!15743 = !DILocation(line: 5214, column: 4, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 5213, column: 10)
!15745 = !DILocation(line: 5214, column: 8, scope: !15744)
!15746 = !DILocation(line: 5214, column: 18, scope: !15744)
!15747 = !DILocation(line: 5215, column: 4, scope: !15744)
!15748 = !DILocation(line: 5215, column: 8, scope: !15744)
!15749 = !DILocation(line: 5215, column: 16, scope: !15744)
!15750 = !DILocation(line: 5217, column: 2, scope: !15732)
!15751 = !DILocation(line: 5219, column: 3, scope: !15726)
!15752 = !DILocation(line: 5219, column: 7, scope: !15726)
!15753 = !DILocation(line: 5219, column: 14, scope: !15726)
!15754 = !DILocation(line: 5220, column: 1, scope: !15714)
!15755 = distinct !DISubprogram(name: "test_and_set_bit", scope: !15756, file: !15756, line: 68, type: !15757, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15756 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!15757 = !DISubroutineType(types: !15758)
!15758 = !{!771, !998, !15759}
!15759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14631, size: 64)
!15760 = !DILocalVariable(name: "nr", arg: 1, scope: !15761, file: !10039, line: 136, type: !998)
!15761 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !10039, file: !10039, line: 136, type: !15757, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15762 = !DILocation(line: 136, column: 28, scope: !15761, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 71, column: 9, scope: !15755)
!15764 = !DILocalVariable(name: "addr", arg: 2, scope: !15761, file: !10039, line: 136, type: !15759)
!15765 = !DILocation(line: 136, column: 56, scope: !15761, inlinedAt: !15763)
!15766 = !DILocalVariable(name: "c", scope: !15767, file: !10039, line: 138, type: !771)
!15767 = distinct !DILexicalBlock(scope: !15761, file: !10039, line: 138, column: 9)
!15768 = !DILocation(line: 138, column: 9, scope: !15767, inlinedAt: !15763)
!15769 = !DILocalVariable(name: "v", arg: 1, scope: !15770, file: !14648, line: 99, type: !10119)
!15770 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !14648, file: !14648, line: 99, type: !14649, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15771 = !DILocation(line: 99, column: 79, scope: !15770, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 70, column: 2, scope: !15755)
!15773 = !DILocalVariable(name: "size", arg: 2, scope: !15770, file: !14648, line: 99, type: !1039)
!15774 = !DILocation(line: 99, column: 89, scope: !15770, inlinedAt: !15772)
!15775 = !DILocalVariable(name: "nr", arg: 1, scope: !15755, file: !15756, line: 68, type: !998)
!15776 = !DILocation(line: 68, column: 42, scope: !15755)
!15777 = !DILocalVariable(name: "addr", arg: 2, scope: !15755, file: !15756, line: 68, type: !15759)
!15778 = !DILocation(line: 68, column: 70, scope: !15755)
!15779 = !DILocation(line: 70, column: 31, scope: !15755)
!15780 = !DILocation(line: 70, column: 38, scope: !15755)
!15781 = !DILocation(line: 70, column: 36, scope: !15755)
!15782 = !DILocation(line: 101, column: 20, scope: !15770, inlinedAt: !15772)
!15783 = !DILocation(line: 101, column: 23, scope: !15770, inlinedAt: !15772)
!15784 = !DILocation(line: 101, column: 2, scope: !15770, inlinedAt: !15772)
!15785 = !DILocation(line: 102, column: 2, scope: !15770, inlinedAt: !15772)
!15786 = !DILocation(line: 71, column: 31, scope: !15755)
!15787 = !DILocation(line: 71, column: 35, scope: !15755)
!15788 = !{i32 -2146990619, i32 -2146990523}
!15789 = !DILocation(line: 71, column: 2, scope: !15755)
!15790 = distinct !DISubprogram(name: "kasan_check_write", scope: !14682, file: !14682, line: 38, type: !14683, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15791 = !DILocalVariable(name: "p", arg: 1, scope: !15790, file: !14682, line: 38, type: !10119)
!15792 = !DILocation(line: 38, column: 59, scope: !15790)
!15793 = !DILocalVariable(name: "size", arg: 2, scope: !15790, file: !14682, line: 38, type: !7)
!15794 = !DILocation(line: 38, column: 75, scope: !15790)
!15795 = !DILocation(line: 40, column: 2, scope: !15790)
!15796 = distinct !DISubprogram(name: "hw_start_rx", scope: !3, file: !3, line: 3885, type: !8272, scopeLine: 3886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15797 = !DILocalVariable(name: "hw", arg: 1, scope: !15796, file: !3, line: 3885, type: !8002)
!15798 = !DILocation(line: 3885, column: 40, scope: !15796)
!15799 = !DILocation(line: 3887, column: 9, scope: !15796)
!15800 = !DILocation(line: 3887, column: 13, scope: !15796)
!15801 = !DILocation(line: 3887, column: 21, scope: !15796)
!15802 = !DILocation(line: 3887, column: 25, scope: !15796)
!15803 = !DILocation(line: 3887, column: 28, scope: !15796)
!15804 = !DILocation(line: 3887, column: 2, scope: !15796)
!15805 = !DILocation(line: 3890, column: 2, scope: !15796)
!15806 = !DILocation(line: 3890, column: 6, scope: !15796)
!15807 = !DILocation(line: 3890, column: 16, scope: !15796)
!15808 = !DILocation(line: 3892, column: 20, scope: !15796)
!15809 = !DILocation(line: 3892, column: 24, scope: !15796)
!15810 = !DILocation(line: 3892, column: 27, scope: !15796)
!15811 = !DILocation(line: 3892, column: 2, scope: !15796)
!15812 = !DILocation(line: 3893, column: 14, scope: !15796)
!15813 = !DILocation(line: 3893, column: 2, scope: !15796)
!15814 = !DILocation(line: 3894, column: 2, scope: !15796)
!15815 = !DILocation(line: 3894, column: 6, scope: !15796)
!15816 = !DILocation(line: 3894, column: 13, scope: !15796)
!15817 = !DILocation(line: 3897, column: 11, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15796, file: !3, line: 3897, column: 6)
!15819 = !DILocation(line: 3897, column: 15, scope: !15818)
!15820 = !DILocation(line: 3897, column: 8, scope: !15818)
!15821 = !DILocation(line: 3897, column: 6, scope: !15796)
!15822 = !DILocation(line: 3898, column: 3, scope: !15818)
!15823 = !DILocation(line: 3898, column: 7, scope: !15818)
!15824 = !DILocation(line: 3898, column: 15, scope: !15818)
!15825 = !DILocation(line: 3899, column: 1, scope: !15796)
!15826 = distinct !DISubprogram(name: "hw_turn_on_intr", scope: !3, file: !3, line: 1539, type: !15827, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15827 = !DISubroutineType(types: !15828)
!15828 = !{null, !8002, !987}
!15829 = !DILocalVariable(name: "hw", arg: 1, scope: !15826, file: !3, line: 1539, type: !8002)
!15830 = !DILocation(line: 1539, column: 44, scope: !15826)
!15831 = !DILocalVariable(name: "bit", arg: 2, scope: !15826, file: !3, line: 1539, type: !987)
!15832 = !DILocation(line: 1539, column: 52, scope: !15826)
!15833 = !DILocation(line: 1541, column: 19, scope: !15826)
!15834 = !DILocation(line: 1541, column: 2, scope: !15826)
!15835 = !DILocation(line: 1541, column: 6, scope: !15826)
!15836 = !DILocation(line: 1541, column: 16, scope: !15826)
!15837 = !DILocation(line: 1543, column: 7, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15826, file: !3, line: 1543, column: 6)
!15839 = !DILocation(line: 1543, column: 11, scope: !15838)
!15840 = !DILocation(line: 1543, column: 6, scope: !15826)
!15841 = !DILocation(line: 1544, column: 15, scope: !15838)
!15842 = !DILocation(line: 1544, column: 19, scope: !15838)
!15843 = !DILocation(line: 1544, column: 23, scope: !15838)
!15844 = !DILocation(line: 1544, column: 3, scope: !15838)
!15845 = !DILocation(line: 1545, column: 1, scope: !15826)
!15846 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !15847, file: !15847, line: 656, type: !3809, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15847 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!15848 = !DILocalVariable(name: "__edi", scope: !15849, file: !15847, line: 658, type: !312)
!15849 = distinct !DILexicalBlock(scope: !15846, file: !15847, line: 658, column: 2)
!15850 = !DILocation(line: 658, column: 2, scope: !15849)
!15851 = !DILocalVariable(name: "__esi", scope: !15849, file: !15847, line: 658, type: !312)
!15852 = !DILocalVariable(name: "__edx", scope: !15849, file: !15847, line: 658, type: !312)
!15853 = !DILocalVariable(name: "__ecx", scope: !15849, file: !15847, line: 658, type: !312)
!15854 = !DILocalVariable(name: "__eax", scope: !15849, file: !15847, line: 658, type: !312)
!15855 = !{i32 -2145587589, i32 -2145586857, i32 -2145586623, i32 -2145586572, i32 -2145586544, i32 -2145586519, i32 -2145586835, i32 -2145586822, i32 -2145586384, i32 -2145586265, i32 -2145586730, i32 -2145586703, i32 -2145586675, i32 -2145586645}
!15856 = !DILocation(line: 659, column: 1, scope: !15846)
!15857 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !15847, file: !15847, line: 661, type: !3809, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15858 = !DILocalVariable(name: "__edi", scope: !15859, file: !15847, line: 663, type: !312)
!15859 = distinct !DILexicalBlock(scope: !15857, file: !15847, line: 663, column: 2)
!15860 = !DILocation(line: 663, column: 2, scope: !15859)
!15861 = !DILocalVariable(name: "__esi", scope: !15859, file: !15847, line: 663, type: !312)
!15862 = !DILocalVariable(name: "__edx", scope: !15859, file: !15847, line: 663, type: !312)
!15863 = !DILocalVariable(name: "__ecx", scope: !15859, file: !15847, line: 663, type: !312)
!15864 = !DILocalVariable(name: "__eax", scope: !15859, file: !15847, line: 663, type: !312)
!15865 = !{i32 -2145585005, i32 -2145584275, i32 -2145584041, i32 -2145583990, i32 -2145583962, i32 -2145583937, i32 -2145584253, i32 -2145584240, i32 -2145583802, i32 -2145583683, i32 -2145584148, i32 -2145584121, i32 -2145584093, i32 -2145584063}
!15866 = !DILocation(line: 664, column: 1, scope: !15857)
!15867 = distinct !DISubprogram(name: "tx_done", scope: !3, file: !3, line: 4791, type: !10016, scopeLine: 4792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15868 = !DILocalVariable(name: "hw_priv", arg: 1, scope: !15867, file: !3, line: 4791, type: !7512)
!15869 = !DILocation(line: 4791, column: 38, scope: !15867)
!15870 = !DILocalVariable(name: "hw", scope: !15867, file: !3, line: 4793, type: !8002)
!15871 = !DILocation(line: 4793, column: 17, scope: !15867)
!15872 = !DILocation(line: 4793, column: 23, scope: !15867)
!15873 = !DILocation(line: 4793, column: 32, scope: !15867)
!15874 = !DILocalVariable(name: "port", scope: !15867, file: !3, line: 4794, type: !32)
!15875 = !DILocation(line: 4794, column: 6, scope: !15867)
!15876 = !DILocation(line: 4796, column: 19, scope: !15867)
!15877 = !DILocation(line: 4796, column: 2, scope: !15867)
!15878 = !DILocation(line: 4798, column: 12, scope: !15879)
!15879 = distinct !DILexicalBlock(scope: !15867, file: !3, line: 4798, column: 2)
!15880 = !DILocation(line: 4798, column: 7, scope: !15879)
!15881 = !DILocation(line: 4798, column: 17, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15879, file: !3, line: 4798, column: 2)
!15883 = !DILocation(line: 4798, column: 24, scope: !15882)
!15884 = !DILocation(line: 4798, column: 28, scope: !15882)
!15885 = !DILocation(line: 4798, column: 22, scope: !15882)
!15886 = !DILocation(line: 4798, column: 2, scope: !15879)
!15887 = !DILocalVariable(name: "dev", scope: !15888, file: !3, line: 4799, type: !290)
!15888 = distinct !DILexicalBlock(scope: !15882, file: !3, line: 4798, column: 47)
!15889 = !DILocation(line: 4799, column: 22, scope: !15888)
!15890 = !DILocation(line: 4799, column: 28, scope: !15888)
!15891 = !DILocation(line: 4799, column: 32, scope: !15888)
!15892 = !DILocation(line: 4799, column: 42, scope: !15888)
!15893 = !DILocation(line: 4799, column: 48, scope: !15888)
!15894 = !DILocation(line: 4801, column: 21, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15888, file: !3, line: 4801, column: 7)
!15896 = !DILocation(line: 4801, column: 7, scope: !15895)
!15897 = !DILocation(line: 4801, column: 26, scope: !15895)
!15898 = !DILocation(line: 4801, column: 49, scope: !15895)
!15899 = !DILocation(line: 4801, column: 29, scope: !15895)
!15900 = !DILocation(line: 4801, column: 7, scope: !15888)
!15901 = !DILocation(line: 4802, column: 21, scope: !15895)
!15902 = !DILocation(line: 4802, column: 4, scope: !15895)
!15903 = !DILocation(line: 4803, column: 2, scope: !15888)
!15904 = !DILocation(line: 4798, column: 43, scope: !15882)
!15905 = !DILocation(line: 4798, column: 2, scope: !15882)
!15906 = distinct !{!15906, !15886, !15907}
!15907 = !DILocation(line: 4803, column: 2, scope: !15879)
!15908 = !DILocation(line: 4804, column: 1, scope: !15867)
!15909 = distinct !DISubprogram(name: "transmit_cleanup", scope: !3, file: !3, line: 4734, type: !15910, scopeLine: 4735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15910 = !DISubroutineType(types: !15911)
!15911 = !{null, !7512, !32}
!15912 = !DILocation(line: 402, column: 57, scope: !13088, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 4777, column: 2, scope: !15909)
!15914 = !DILocation(line: 377, column: 55, scope: !13094, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 4744, column: 2, scope: !15909)
!15916 = !DILocalVariable(name: "hw_priv", arg: 1, scope: !15909, file: !3, line: 4734, type: !7512)
!15917 = !DILocation(line: 4734, column: 47, scope: !15909)
!15918 = !DILocalVariable(name: "normal", arg: 2, scope: !15909, file: !3, line: 4734, type: !32)
!15919 = !DILocation(line: 4734, column: 60, scope: !15909)
!15920 = !DILocalVariable(name: "last", scope: !15909, file: !3, line: 4736, type: !32)
!15921 = !DILocation(line: 4736, column: 6, scope: !15909)
!15922 = !DILocalVariable(name: "status", scope: !15909, file: !3, line: 4737, type: !7450)
!15923 = !DILocation(line: 4737, column: 18, scope: !15909)
!15924 = !DILocalVariable(name: "hw", scope: !15909, file: !3, line: 4738, type: !8002)
!15925 = !DILocation(line: 4738, column: 17, scope: !15909)
!15926 = !DILocation(line: 4738, column: 23, scope: !15909)
!15927 = !DILocation(line: 4738, column: 32, scope: !15909)
!15928 = !DILocalVariable(name: "info", scope: !15909, file: !3, line: 4739, type: !10128)
!15929 = !DILocation(line: 4739, column: 24, scope: !15909)
!15930 = !DILocation(line: 4739, column: 32, scope: !15909)
!15931 = !DILocation(line: 4739, column: 36, scope: !15909)
!15932 = !DILocalVariable(name: "desc", scope: !15909, file: !3, line: 4740, type: !7875)
!15933 = !DILocation(line: 4740, column: 19, scope: !15909)
!15934 = !DILocalVariable(name: "dma_buf", scope: !15909, file: !3, line: 4741, type: !8036)
!15935 = !DILocation(line: 4741, column: 22, scope: !15909)
!15936 = !DILocalVariable(name: "dev", scope: !15909, file: !3, line: 4742, type: !290)
!15937 = !DILocation(line: 4742, column: 21, scope: !15909)
!15938 = !DILocation(line: 4744, column: 17, scope: !15909)
!15939 = !DILocation(line: 4744, column: 26, scope: !15909)
!15940 = !DILocation(line: 379, column: 2, scope: !13191, inlinedAt: !15915)
!15941 = !DILocation(line: 379, column: 2, scope: !13194, inlinedAt: !15915)
!15942 = !DILocation(line: 379, column: 2, scope: !13197, inlinedAt: !15915)
!15943 = !DILocation(line: 4745, column: 9, scope: !15909)
!15944 = !DILocation(line: 4745, column: 15, scope: !15909)
!15945 = !DILocation(line: 4745, column: 7, scope: !15909)
!15946 = !DILocation(line: 4747, column: 2, scope: !15909)
!15947 = !DILocation(line: 4747, column: 9, scope: !15909)
!15948 = !DILocation(line: 4747, column: 15, scope: !15909)
!15949 = !DILocation(line: 4747, column: 23, scope: !15909)
!15950 = !DILocation(line: 4747, column: 29, scope: !15909)
!15951 = !DILocation(line: 4747, column: 21, scope: !15909)
!15952 = !DILocation(line: 4749, column: 11, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15909, file: !3, line: 4747, column: 36)
!15954 = !DILocation(line: 4749, column: 17, scope: !15953)
!15955 = !DILocation(line: 4749, column: 22, scope: !15953)
!15956 = !DILocation(line: 4749, column: 8, scope: !15953)
!15957 = !DILocation(line: 4750, column: 17, scope: !15953)
!15958 = !DILocation(line: 4750, column: 10, scope: !15953)
!15959 = !DILocation(line: 4750, column: 15, scope: !15953)
!15960 = !DILocation(line: 4751, column: 14, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15953, file: !3, line: 4751, column: 7)
!15962 = !DILocation(line: 4751, column: 17, scope: !15961)
!15963 = !DILocation(line: 4751, column: 7, scope: !15961)
!15964 = !DILocation(line: 4751, column: 7, scope: !15953)
!15965 = !DILocation(line: 4752, column: 8, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15967, file: !3, line: 4752, column: 8)
!15967 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 4751, column: 27)
!15968 = !DILocation(line: 4752, column: 8, scope: !15967)
!15969 = !DILocation(line: 4753, column: 5, scope: !15966)
!15970 = !DILocation(line: 4755, column: 16, scope: !15966)
!15971 = !DILocation(line: 4755, column: 5, scope: !15966)
!15972 = !DILocation(line: 4756, column: 3, scope: !15967)
!15973 = !DILocation(line: 4758, column: 13, scope: !15953)
!15974 = !DILocation(line: 4758, column: 11, scope: !15953)
!15975 = !DILocation(line: 4759, column: 3, scope: !15953)
!15976 = !DILocation(line: 4763, column: 7, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15953, file: !3, line: 4763, column: 7)
!15978 = !DILocation(line: 4763, column: 16, scope: !15977)
!15979 = !DILocation(line: 4763, column: 7, scope: !15953)
!15980 = !DILocation(line: 4764, column: 10, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 4763, column: 21)
!15982 = !DILocation(line: 4764, column: 19, scope: !15981)
!15983 = !DILocation(line: 4764, column: 24, scope: !15981)
!15984 = !DILocation(line: 4764, column: 8, scope: !15981)
!15985 = !DILocation(line: 4767, column: 22, scope: !15981)
!15986 = !DILocation(line: 4767, column: 31, scope: !15981)
!15987 = !DILocation(line: 4767, column: 4, scope: !15981)
!15988 = !DILocation(line: 4768, column: 4, scope: !15981)
!15989 = !DILocation(line: 4768, column: 13, scope: !15981)
!15990 = !DILocation(line: 4768, column: 17, scope: !15981)
!15991 = !DILocation(line: 4769, column: 3, scope: !15981)
!15992 = !DILocation(line: 4772, column: 7, scope: !15953)
!15993 = !DILocation(line: 4773, column: 11, scope: !15953)
!15994 = !DILocation(line: 4773, column: 17, scope: !15953)
!15995 = !DILocation(line: 4773, column: 8, scope: !15953)
!15996 = !DILocation(line: 4774, column: 3, scope: !15953)
!15997 = !DILocation(line: 4774, column: 9, scope: !15953)
!15998 = !DILocation(line: 4774, column: 14, scope: !15953)
!15999 = distinct !{!15999, !15946, !16000}
!16000 = !DILocation(line: 4775, column: 2, scope: !15909)
!16001 = !DILocation(line: 4776, column: 15, scope: !15909)
!16002 = !DILocation(line: 4776, column: 2, scope: !15909)
!16003 = !DILocation(line: 4776, column: 8, scope: !15909)
!16004 = !DILocation(line: 4776, column: 13, scope: !15909)
!16005 = !DILocation(line: 4777, column: 19, scope: !15909)
!16006 = !DILocation(line: 4777, column: 28, scope: !15909)
!16007 = !DILocation(line: 404, column: 2, scope: !13276, inlinedAt: !15913)
!16008 = !DILocation(line: 404, column: 2, scope: !13279, inlinedAt: !15913)
!16009 = !DILocation(line: 404, column: 2, scope: !13282, inlinedAt: !15913)
!16010 = !DILocation(line: 4780, column: 6, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !15909, file: !3, line: 4780, column: 6)
!16012 = !DILocation(line: 4780, column: 6, scope: !15909)
!16013 = !DILocation(line: 4781, column: 22, scope: !16011)
!16014 = !DILocation(line: 4781, column: 3, scope: !16011)
!16015 = !DILocation(line: 4782, column: 1, scope: !15909)
!16016 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !31, file: !31, line: 3354, type: !14592, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16017 = !DILocalVariable(name: "dev", arg: 1, scope: !16016, file: !31, line: 3354, type: !773)
!16018 = !DILocation(line: 3354, column: 65, scope: !16016)
!16019 = !DILocation(line: 3356, column: 52, scope: !16016)
!16020 = !DILocation(line: 3356, column: 32, scope: !16016)
!16021 = !DILocation(line: 3356, column: 9, scope: !16016)
!16022 = !DILocation(line: 3356, column: 2, scope: !16016)
!16023 = distinct !DISubprogram(name: "netif_wake_queue", scope: !31, file: !31, line: 3309, type: !406, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16024 = !DILocalVariable(name: "dev", arg: 1, scope: !16023, file: !31, line: 3309, type: !290)
!16025 = !DILocation(line: 3309, column: 56, scope: !16023)
!16026 = !DILocation(line: 3311, column: 42, scope: !16023)
!16027 = !DILocation(line: 3311, column: 22, scope: !16023)
!16028 = !DILocation(line: 3311, column: 2, scope: !16023)
!16029 = !DILocation(line: 3312, column: 1, scope: !16023)
!16030 = distinct !DISubprogram(name: "reset_desc", scope: !3, file: !3, line: 1592, type: !16031, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16031 = !DISubroutineType(types: !16032)
!16032 = !{null, !7875, !7450}
!16033 = !DILocalVariable(name: "desc", arg: 1, scope: !16030, file: !3, line: 1592, type: !7875)
!16034 = !DILocation(line: 1592, column: 48, scope: !16030)
!16035 = !DILocalVariable(name: "status", arg: 2, scope: !16030, file: !3, line: 1592, type: !7450)
!16036 = !DILocation(line: 1592, column: 70, scope: !16030)
!16037 = !DILocation(line: 1594, column: 9, scope: !16030)
!16038 = !DILocation(line: 1594, column: 12, scope: !16030)
!16039 = !DILocation(line: 1594, column: 21, scope: !16030)
!16040 = !DILocation(line: 1595, column: 25, scope: !16030)
!16041 = !DILocation(line: 1595, column: 2, scope: !16030)
!16042 = !DILocation(line: 1595, column: 8, scope: !16030)
!16043 = !DILocation(line: 1595, column: 13, scope: !16030)
!16044 = !DILocation(line: 1595, column: 18, scope: !16030)
!16045 = !DILocation(line: 1595, column: 23, scope: !16030)
!16046 = !DILocation(line: 1596, column: 1, scope: !16030)
!16047 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !8266, file: !8266, line: 283, type: !16048, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16048 = !DISubroutineType(types: !16049)
!16049 = !{null, !6546, !2036, !1039, !7227, !312}
!16050 = !DILocalVariable(name: "dev", arg: 1, scope: !16047, file: !8266, line: 283, type: !6546)
!16051 = !DILocation(line: 283, column: 58, scope: !16047)
!16052 = !DILocalVariable(name: "addr", arg: 2, scope: !16047, file: !8266, line: 283, type: !2036)
!16053 = !DILocation(line: 283, column: 74, scope: !16047)
!16054 = !DILocalVariable(name: "size", arg: 3, scope: !16047, file: !8266, line: 284, type: !1039)
!16055 = !DILocation(line: 284, column: 10, scope: !16047)
!16056 = !DILocalVariable(name: "dir", arg: 4, scope: !16047, file: !8266, line: 284, type: !7227)
!16057 = !DILocation(line: 284, column: 40, scope: !16047)
!16058 = !DILocalVariable(name: "attrs", arg: 5, scope: !16047, file: !8266, line: 284, type: !312)
!16059 = !DILocation(line: 284, column: 59, scope: !16047)
!16060 = !DILocation(line: 286, column: 30, scope: !16047)
!16061 = !DILocation(line: 286, column: 35, scope: !16047)
!16062 = !DILocation(line: 286, column: 41, scope: !16047)
!16063 = !DILocation(line: 286, column: 47, scope: !16047)
!16064 = !DILocation(line: 286, column: 52, scope: !16047)
!16065 = !DILocation(line: 286, column: 9, scope: !16047)
!16066 = !DILocation(line: 286, column: 2, scope: !16047)
!16067 = distinct !DISubprogram(name: "dev_kfree_skb_irq", scope: !31, file: !31, line: 3807, type: !469, scopeLine: 3808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16068 = !DILocalVariable(name: "skb", arg: 1, scope: !16067, file: !31, line: 3807, type: !415)
!16069 = !DILocation(line: 3807, column: 54, scope: !16067)
!16070 = !DILocation(line: 3809, column: 22, scope: !16067)
!16071 = !DILocation(line: 3809, column: 2, scope: !16067)
!16072 = !DILocation(line: 3810, column: 1, scope: !16067)
!16073 = distinct !DISubprogram(name: "netif_trans_update", scope: !31, file: !31, line: 4223, type: !406, scopeLine: 4224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16074 = !DILocalVariable(name: "dev", arg: 1, scope: !16073, file: !31, line: 4223, type: !290)
!16075 = !DILocation(line: 4223, column: 58, scope: !16073)
!16076 = !DILocalVariable(name: "txq", scope: !16073, file: !31, line: 4225, type: !6439)
!16077 = !DILocation(line: 4225, column: 23, scope: !16073)
!16078 = !DILocation(line: 4225, column: 49, scope: !16073)
!16079 = !DILocation(line: 4225, column: 29, scope: !16073)
!16080 = !DILocation(line: 4227, column: 6, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16073, file: !31, line: 4227, column: 6)
!16082 = !DILocation(line: 4227, column: 11, scope: !16081)
!16083 = !DILocation(line: 4227, column: 26, scope: !16081)
!16084 = !DILocation(line: 4227, column: 23, scope: !16081)
!16085 = !DILocation(line: 4227, column: 6, scope: !16073)
!16086 = !DILocation(line: 4228, column: 22, scope: !16081)
!16087 = !DILocation(line: 4228, column: 3, scope: !16081)
!16088 = !DILocation(line: 4228, column: 8, scope: !16081)
!16089 = !DILocation(line: 4228, column: 20, scope: !16081)
!16090 = !DILocation(line: 4229, column: 1, scope: !16073)
!16091 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !31, file: !31, line: 2234, type: !16092, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16092 = !DISubroutineType(types: !16093)
!16093 = !{!6439, !773, !7}
!16094 = !DILocalVariable(name: "dev", arg: 1, scope: !16091, file: !31, line: 2234, type: !773)
!16095 = !DILocation(line: 2234, column: 67, scope: !16091)
!16096 = !DILocalVariable(name: "index", arg: 2, scope: !16091, file: !31, line: 2235, type: !7)
!16097 = !DILocation(line: 2235, column: 20, scope: !16091)
!16098 = !DILocation(line: 2237, column: 10, scope: !16091)
!16099 = !DILocation(line: 2237, column: 15, scope: !16091)
!16100 = !DILocation(line: 2237, column: 19, scope: !16091)
!16101 = !DILocation(line: 2237, column: 2, scope: !16091)
!16102 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !31, file: !31, line: 3343, type: !16103, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16103 = !DISubroutineType(types: !16104)
!16104 = !{!771, !16105}
!16105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16106, size: 64)
!16106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6440)
!16107 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !16102, file: !31, line: 3343, type: !16105)
!16108 = !DILocation(line: 3343, column: 70, scope: !16102)
!16109 = !DILocation(line: 3345, column: 43, scope: !16102)
!16110 = !DILocation(line: 3345, column: 54, scope: !16102)
!16111 = !DILocation(line: 3345, column: 9, scope: !16102)
!16112 = !DILocation(line: 3345, column: 2, scope: !16102)
!16113 = distinct !DISubprogram(name: "dev_rcv_special", scope: !3, file: !3, line: 5109, type: !7937, scopeLine: 5110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16114 = !DILocalVariable(name: "hw_priv", arg: 1, scope: !16113, file: !3, line: 5109, type: !7512)
!16115 = !DILocation(line: 5109, column: 45, scope: !16113)
!16116 = !DILocalVariable(name: "next", scope: !16113, file: !3, line: 5111, type: !32)
!16117 = !DILocation(line: 5111, column: 6, scope: !16113)
!16118 = !DILocalVariable(name: "status", scope: !16113, file: !3, line: 5112, type: !7450)
!16119 = !DILocation(line: 5112, column: 18, scope: !16113)
!16120 = !DILocalVariable(name: "hw", scope: !16113, file: !3, line: 5113, type: !8002)
!16121 = !DILocation(line: 5113, column: 17, scope: !16113)
!16122 = !DILocation(line: 5113, column: 23, scope: !16113)
!16123 = !DILocation(line: 5113, column: 32, scope: !16113)
!16124 = !DILocalVariable(name: "dev", scope: !16113, file: !3, line: 5114, type: !290)
!16125 = !DILocation(line: 5114, column: 21, scope: !16113)
!16126 = !DILocation(line: 5114, column: 27, scope: !16113)
!16127 = !DILocation(line: 5114, column: 31, scope: !16113)
!16128 = !DILocation(line: 5114, column: 44, scope: !16113)
!16129 = !DILocalVariable(name: "info", scope: !16113, file: !3, line: 5115, type: !10128)
!16130 = !DILocation(line: 5115, column: 24, scope: !16113)
!16131 = !DILocation(line: 5115, column: 32, scope: !16113)
!16132 = !DILocation(line: 5115, column: 36, scope: !16113)
!16133 = !DILocalVariable(name: "left", scope: !16113, file: !3, line: 5116, type: !32)
!16134 = !DILocation(line: 5116, column: 6, scope: !16113)
!16135 = !DILocation(line: 5116, column: 13, scope: !16113)
!16136 = !DILocation(line: 5116, column: 19, scope: !16113)
!16137 = !DILocalVariable(name: "desc", scope: !16113, file: !3, line: 5117, type: !7875)
!16138 = !DILocation(line: 5117, column: 19, scope: !16113)
!16139 = !DILocalVariable(name: "received", scope: !16113, file: !3, line: 5118, type: !32)
!16140 = !DILocation(line: 5118, column: 6, scope: !16113)
!16141 = !DILocation(line: 5120, column: 9, scope: !16113)
!16142 = !DILocation(line: 5120, column: 15, scope: !16113)
!16143 = !DILocation(line: 5120, column: 7, scope: !16113)
!16144 = !DILocation(line: 5121, column: 2, scope: !16113)
!16145 = !DILocation(line: 5121, column: 13, scope: !16113)
!16146 = !DILocation(line: 5123, column: 11, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16113, file: !3, line: 5121, column: 17)
!16148 = !DILocation(line: 5123, column: 17, scope: !16147)
!16149 = !DILocation(line: 5123, column: 22, scope: !16147)
!16150 = !DILocation(line: 5123, column: 8, scope: !16147)
!16151 = !DILocation(line: 5124, column: 17, scope: !16147)
!16152 = !DILocation(line: 5124, column: 10, scope: !16147)
!16153 = !DILocation(line: 5124, column: 15, scope: !16147)
!16154 = !DILocation(line: 5125, column: 14, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16147, file: !3, line: 5125, column: 7)
!16156 = !DILocation(line: 5125, column: 17, scope: !16155)
!16157 = !DILocation(line: 5125, column: 7, scope: !16155)
!16158 = !DILocation(line: 5125, column: 7, scope: !16147)
!16159 = !DILocation(line: 5126, column: 4, scope: !16155)
!16160 = !DILocation(line: 5128, column: 7, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16147, file: !3, line: 5128, column: 7)
!16162 = !DILocation(line: 5128, column: 11, scope: !16161)
!16163 = !DILocation(line: 5128, column: 21, scope: !16161)
!16164 = !DILocation(line: 5128, column: 7, scope: !16147)
!16165 = !DILocalVariable(name: "p", scope: !16166, file: !3, line: 5130, type: !32)
!16166 = distinct !DILexicalBlock(scope: !16161, file: !3, line: 5128, column: 26)
!16167 = !DILocation(line: 5130, column: 8, scope: !16166)
!16168 = !DILocation(line: 5130, column: 12, scope: !16166)
!16169 = !DILocation(line: 5132, column: 10, scope: !16166)
!16170 = !DILocation(line: 5132, column: 14, scope: !16166)
!16171 = !DILocation(line: 5132, column: 24, scope: !16166)
!16172 = !DILocation(line: 5132, column: 27, scope: !16166)
!16173 = !DILocation(line: 5132, column: 8, scope: !16166)
!16174 = !DILocation(line: 5133, column: 23, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16166, file: !3, line: 5133, column: 8)
!16176 = !DILocation(line: 5133, column: 9, scope: !16175)
!16177 = !DILocation(line: 5133, column: 8, scope: !16166)
!16178 = !DILocation(line: 5134, column: 5, scope: !16175)
!16179 = !DILocation(line: 5135, column: 3, scope: !16166)
!16180 = !DILocation(line: 5138, column: 14, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16147, file: !3, line: 5138, column: 7)
!16182 = !DILocation(line: 5138, column: 17, scope: !16181)
!16183 = !DILocation(line: 5138, column: 7, scope: !16181)
!16184 = !DILocation(line: 5138, column: 27, scope: !16181)
!16185 = !DILocation(line: 5138, column: 37, scope: !16181)
!16186 = !DILocation(line: 5138, column: 40, scope: !16181)
!16187 = !DILocation(line: 5138, column: 30, scope: !16181)
!16188 = !DILocation(line: 5138, column: 7, scope: !16147)
!16189 = !DILocation(line: 5144, column: 16, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16191, file: !3, line: 5144, column: 8)
!16191 = distinct !DILexicalBlock(scope: !16181, file: !3, line: 5138, column: 52)
!16192 = !DILocation(line: 5144, column: 19, scope: !16190)
!16193 = !DILocation(line: 5144, column: 9, scope: !16190)
!16194 = !DILocation(line: 5144, column: 25, scope: !16190)
!16195 = !DILocation(line: 5144, column: 36, scope: !16190)
!16196 = !DILocation(line: 5144, column: 41, scope: !16190)
!16197 = !DILocation(line: 5145, column: 29, scope: !16190)
!16198 = !DILocation(line: 5144, column: 8, scope: !16191)
!16199 = !DILocation(line: 5147, column: 17, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16201, file: !3, line: 5147, column: 9)
!16201 = distinct !DILexicalBlock(scope: !16190, file: !3, line: 5146, column: 33)
!16202 = !DILocation(line: 5147, column: 22, scope: !16200)
!16203 = !DILocation(line: 5147, column: 26, scope: !16200)
!16204 = !DILocation(line: 5147, column: 9, scope: !16200)
!16205 = !DILocation(line: 5147, column: 9, scope: !16201)
!16206 = !DILocation(line: 5148, column: 6, scope: !16200)
!16207 = !DILocation(line: 5149, column: 13, scope: !16201)
!16208 = !DILocation(line: 5150, column: 4, scope: !16201)
!16209 = !DILocalVariable(name: "priv", scope: !16210, file: !3, line: 5151, type: !7985)
!16210 = distinct !DILexicalBlock(scope: !16190, file: !3, line: 5150, column: 11)
!16211 = !DILocation(line: 5151, column: 22, scope: !16210)
!16212 = !DILocation(line: 5151, column: 41, scope: !16210)
!16213 = !DILocation(line: 5151, column: 29, scope: !16210)
!16214 = !DILocation(line: 5154, column: 5, scope: !16210)
!16215 = !DILocation(line: 5154, column: 11, scope: !16210)
!16216 = !DILocation(line: 5154, column: 16, scope: !16210)
!16217 = !DILocation(line: 5154, column: 46, scope: !16210)
!16218 = !DILocation(line: 5156, column: 3, scope: !16191)
!16219 = !DILabel(scope: !16147, name: "release_packet", file: !3, line: 5158)
!16220 = !DILocation(line: 5158, column: 1, scope: !16147)
!16221 = !DILocation(line: 5159, column: 16, scope: !16147)
!16222 = !DILocation(line: 5159, column: 3, scope: !16147)
!16223 = !DILocation(line: 5160, column: 7, scope: !16147)
!16224 = !DILocation(line: 5161, column: 11, scope: !16147)
!16225 = !DILocation(line: 5161, column: 17, scope: !16147)
!16226 = !DILocation(line: 5161, column: 8, scope: !16147)
!16227 = distinct !{!16227, !16144, !16228}
!16228 = !DILocation(line: 5162, column: 2, scope: !16113)
!16229 = !DILocation(line: 5163, column: 15, scope: !16113)
!16230 = !DILocation(line: 5163, column: 2, scope: !16113)
!16231 = !DILocation(line: 5163, column: 8, scope: !16113)
!16232 = !DILocation(line: 5163, column: 13, scope: !16113)
!16233 = !DILocation(line: 5165, column: 9, scope: !16113)
!16234 = !DILocation(line: 5165, column: 2, scope: !16113)
!16235 = distinct !DISubprogram(name: "port_rcv_packets", scope: !3, file: !3, line: 5064, type: !7937, scopeLine: 5065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16236 = !DILocalVariable(name: "hw_priv", arg: 1, scope: !16235, file: !3, line: 5064, type: !7512)
!16237 = !DILocation(line: 5064, column: 46, scope: !16235)
!16238 = !DILocalVariable(name: "next", scope: !16235, file: !3, line: 5066, type: !32)
!16239 = !DILocation(line: 5066, column: 6, scope: !16235)
!16240 = !DILocalVariable(name: "status", scope: !16235, file: !3, line: 5067, type: !7450)
!16241 = !DILocation(line: 5067, column: 18, scope: !16235)
!16242 = !DILocalVariable(name: "hw", scope: !16235, file: !3, line: 5068, type: !8002)
!16243 = !DILocation(line: 5068, column: 17, scope: !16235)
!16244 = !DILocation(line: 5068, column: 23, scope: !16235)
!16245 = !DILocation(line: 5068, column: 32, scope: !16235)
!16246 = !DILocalVariable(name: "dev", scope: !16235, file: !3, line: 5069, type: !290)
!16247 = !DILocation(line: 5069, column: 21, scope: !16235)
!16248 = !DILocation(line: 5069, column: 27, scope: !16235)
!16249 = !DILocation(line: 5069, column: 31, scope: !16235)
!16250 = !DILocation(line: 5069, column: 44, scope: !16235)
!16251 = !DILocalVariable(name: "info", scope: !16235, file: !3, line: 5070, type: !10128)
!16252 = !DILocation(line: 5070, column: 24, scope: !16235)
!16253 = !DILocation(line: 5070, column: 32, scope: !16235)
!16254 = !DILocation(line: 5070, column: 36, scope: !16235)
!16255 = !DILocalVariable(name: "left", scope: !16235, file: !3, line: 5071, type: !32)
!16256 = !DILocation(line: 5071, column: 6, scope: !16235)
!16257 = !DILocation(line: 5071, column: 13, scope: !16235)
!16258 = !DILocation(line: 5071, column: 19, scope: !16235)
!16259 = !DILocalVariable(name: "desc", scope: !16235, file: !3, line: 5072, type: !7875)
!16260 = !DILocation(line: 5072, column: 19, scope: !16235)
!16261 = !DILocalVariable(name: "received", scope: !16235, file: !3, line: 5073, type: !32)
!16262 = !DILocation(line: 5073, column: 6, scope: !16235)
!16263 = !DILocation(line: 5075, column: 9, scope: !16235)
!16264 = !DILocation(line: 5075, column: 15, scope: !16235)
!16265 = !DILocation(line: 5075, column: 7, scope: !16235)
!16266 = !DILocation(line: 5076, column: 2, scope: !16235)
!16267 = !DILocation(line: 5076, column: 13, scope: !16235)
!16268 = !DILocation(line: 5078, column: 11, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16235, file: !3, line: 5076, column: 17)
!16270 = !DILocation(line: 5078, column: 17, scope: !16269)
!16271 = !DILocation(line: 5078, column: 22, scope: !16269)
!16272 = !DILocation(line: 5078, column: 8, scope: !16269)
!16273 = !DILocation(line: 5079, column: 17, scope: !16269)
!16274 = !DILocation(line: 5079, column: 10, scope: !16269)
!16275 = !DILocation(line: 5079, column: 15, scope: !16269)
!16276 = !DILocation(line: 5080, column: 14, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 5080, column: 7)
!16278 = !DILocation(line: 5080, column: 17, scope: !16277)
!16279 = !DILocation(line: 5080, column: 7, scope: !16277)
!16280 = !DILocation(line: 5080, column: 7, scope: !16269)
!16281 = !DILocation(line: 5081, column: 4, scope: !16277)
!16282 = !DILocation(line: 5083, column: 7, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 5083, column: 7)
!16284 = !DILocation(line: 5083, column: 11, scope: !16283)
!16285 = !DILocation(line: 5083, column: 21, scope: !16283)
!16286 = !DILocation(line: 5083, column: 7, scope: !16269)
!16287 = !DILocalVariable(name: "p", scope: !16288, file: !3, line: 5085, type: !32)
!16288 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 5083, column: 26)
!16289 = !DILocation(line: 5085, column: 8, scope: !16288)
!16290 = !DILocation(line: 5085, column: 12, scope: !16288)
!16291 = !DILocation(line: 5087, column: 10, scope: !16288)
!16292 = !DILocation(line: 5087, column: 14, scope: !16288)
!16293 = !DILocation(line: 5087, column: 24, scope: !16288)
!16294 = !DILocation(line: 5087, column: 27, scope: !16288)
!16295 = !DILocation(line: 5087, column: 8, scope: !16288)
!16296 = !DILocation(line: 5088, column: 23, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16288, file: !3, line: 5088, column: 8)
!16298 = !DILocation(line: 5088, column: 9, scope: !16297)
!16299 = !DILocation(line: 5088, column: 8, scope: !16288)
!16300 = !DILocation(line: 5089, column: 5, scope: !16297)
!16301 = !DILocation(line: 5090, column: 3, scope: !16288)
!16302 = !DILocation(line: 5093, column: 14, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 5093, column: 7)
!16304 = !DILocation(line: 5093, column: 17, scope: !16303)
!16305 = !DILocation(line: 5093, column: 7, scope: !16303)
!16306 = !DILocation(line: 5093, column: 27, scope: !16303)
!16307 = !DILocation(line: 5093, column: 37, scope: !16303)
!16308 = !DILocation(line: 5093, column: 40, scope: !16303)
!16309 = !DILocation(line: 5093, column: 30, scope: !16303)
!16310 = !DILocation(line: 5093, column: 7, scope: !16269)
!16311 = !DILocation(line: 5094, column: 16, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16313, file: !3, line: 5094, column: 8)
!16313 = distinct !DILexicalBlock(scope: !16303, file: !3, line: 5093, column: 52)
!16314 = !DILocation(line: 5094, column: 21, scope: !16312)
!16315 = !DILocation(line: 5094, column: 25, scope: !16312)
!16316 = !DILocation(line: 5094, column: 8, scope: !16312)
!16317 = !DILocation(line: 5094, column: 8, scope: !16313)
!16318 = !DILocation(line: 5095, column: 5, scope: !16312)
!16319 = !DILocation(line: 5096, column: 12, scope: !16313)
!16320 = !DILocation(line: 5097, column: 3, scope: !16313)
!16321 = !DILabel(scope: !16269, name: "release_packet", file: !3, line: 5099)
!16322 = !DILocation(line: 5099, column: 1, scope: !16269)
!16323 = !DILocation(line: 5100, column: 16, scope: !16269)
!16324 = !DILocation(line: 5100, column: 3, scope: !16269)
!16325 = !DILocation(line: 5101, column: 7, scope: !16269)
!16326 = !DILocation(line: 5102, column: 11, scope: !16269)
!16327 = !DILocation(line: 5102, column: 17, scope: !16269)
!16328 = !DILocation(line: 5102, column: 8, scope: !16269)
!16329 = distinct !{!16329, !16266, !16330}
!16330 = !DILocation(line: 5103, column: 2, scope: !16235)
!16331 = !DILocation(line: 5104, column: 15, scope: !16235)
!16332 = !DILocation(line: 5104, column: 2, scope: !16235)
!16333 = !DILocation(line: 5104, column: 8, scope: !16235)
!16334 = !DILocation(line: 5104, column: 13, scope: !16235)
!16335 = !DILocation(line: 5106, column: 9, scope: !16235)
!16336 = !DILocation(line: 5106, column: 2, scope: !16235)
!16337 = distinct !DISubprogram(name: "dev_rcv_packets", scope: !3, file: !3, line: 5028, type: !7937, scopeLine: 5029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16338 = !DILocalVariable(name: "hw_priv", arg: 1, scope: !16337, file: !3, line: 5028, type: !7512)
!16339 = !DILocation(line: 5028, column: 45, scope: !16337)
!16340 = !DILocalVariable(name: "next", scope: !16337, file: !3, line: 5030, type: !32)
!16341 = !DILocation(line: 5030, column: 6, scope: !16337)
!16342 = !DILocalVariable(name: "status", scope: !16337, file: !3, line: 5031, type: !7450)
!16343 = !DILocation(line: 5031, column: 18, scope: !16337)
!16344 = !DILocalVariable(name: "hw", scope: !16337, file: !3, line: 5032, type: !8002)
!16345 = !DILocation(line: 5032, column: 17, scope: !16337)
!16346 = !DILocation(line: 5032, column: 23, scope: !16337)
!16347 = !DILocation(line: 5032, column: 32, scope: !16337)
!16348 = !DILocalVariable(name: "dev", scope: !16337, file: !3, line: 5033, type: !290)
!16349 = !DILocation(line: 5033, column: 21, scope: !16337)
!16350 = !DILocation(line: 5033, column: 27, scope: !16337)
!16351 = !DILocation(line: 5033, column: 31, scope: !16337)
!16352 = !DILocation(line: 5033, column: 44, scope: !16337)
!16353 = !DILocalVariable(name: "info", scope: !16337, file: !3, line: 5034, type: !10128)
!16354 = !DILocation(line: 5034, column: 24, scope: !16337)
!16355 = !DILocation(line: 5034, column: 32, scope: !16337)
!16356 = !DILocation(line: 5034, column: 36, scope: !16337)
!16357 = !DILocalVariable(name: "left", scope: !16337, file: !3, line: 5035, type: !32)
!16358 = !DILocation(line: 5035, column: 6, scope: !16337)
!16359 = !DILocation(line: 5035, column: 13, scope: !16337)
!16360 = !DILocation(line: 5035, column: 19, scope: !16337)
!16361 = !DILocalVariable(name: "desc", scope: !16337, file: !3, line: 5036, type: !7875)
!16362 = !DILocation(line: 5036, column: 19, scope: !16337)
!16363 = !DILocalVariable(name: "received", scope: !16337, file: !3, line: 5037, type: !32)
!16364 = !DILocation(line: 5037, column: 6, scope: !16337)
!16365 = !DILocation(line: 5039, column: 9, scope: !16337)
!16366 = !DILocation(line: 5039, column: 15, scope: !16337)
!16367 = !DILocation(line: 5039, column: 7, scope: !16337)
!16368 = !DILocation(line: 5040, column: 2, scope: !16337)
!16369 = !DILocation(line: 5040, column: 13, scope: !16337)
!16370 = !DILocation(line: 5042, column: 11, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16337, file: !3, line: 5040, column: 17)
!16372 = !DILocation(line: 5042, column: 17, scope: !16371)
!16373 = !DILocation(line: 5042, column: 22, scope: !16371)
!16374 = !DILocation(line: 5042, column: 8, scope: !16371)
!16375 = !DILocation(line: 5043, column: 17, scope: !16371)
!16376 = !DILocation(line: 5043, column: 10, scope: !16371)
!16377 = !DILocation(line: 5043, column: 15, scope: !16371)
!16378 = !DILocation(line: 5044, column: 14, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16371, file: !3, line: 5044, column: 7)
!16380 = !DILocation(line: 5044, column: 17, scope: !16379)
!16381 = !DILocation(line: 5044, column: 7, scope: !16379)
!16382 = !DILocation(line: 5044, column: 7, scope: !16371)
!16383 = !DILocation(line: 5045, column: 4, scope: !16379)
!16384 = !DILocation(line: 5048, column: 14, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16371, file: !3, line: 5048, column: 7)
!16386 = !DILocation(line: 5048, column: 17, scope: !16385)
!16387 = !DILocation(line: 5048, column: 7, scope: !16385)
!16388 = !DILocation(line: 5048, column: 27, scope: !16385)
!16389 = !DILocation(line: 5048, column: 37, scope: !16385)
!16390 = !DILocation(line: 5048, column: 40, scope: !16385)
!16391 = !DILocation(line: 5048, column: 30, scope: !16385)
!16392 = !DILocation(line: 5048, column: 7, scope: !16371)
!16393 = !DILocation(line: 5049, column: 16, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16395, file: !3, line: 5049, column: 8)
!16395 = distinct !DILexicalBlock(scope: !16385, file: !3, line: 5048, column: 52)
!16396 = !DILocation(line: 5049, column: 21, scope: !16394)
!16397 = !DILocation(line: 5049, column: 25, scope: !16394)
!16398 = !DILocation(line: 5049, column: 8, scope: !16394)
!16399 = !DILocation(line: 5049, column: 8, scope: !16395)
!16400 = !DILocation(line: 5050, column: 5, scope: !16394)
!16401 = !DILocation(line: 5051, column: 12, scope: !16395)
!16402 = !DILocation(line: 5052, column: 3, scope: !16395)
!16403 = !DILabel(scope: !16371, name: "release_packet", file: !3, line: 5054)
!16404 = !DILocation(line: 5054, column: 1, scope: !16371)
!16405 = !DILocation(line: 5055, column: 16, scope: !16371)
!16406 = !DILocation(line: 5055, column: 3, scope: !16371)
!16407 = !DILocation(line: 5056, column: 7, scope: !16371)
!16408 = !DILocation(line: 5057, column: 11, scope: !16371)
!16409 = !DILocation(line: 5057, column: 17, scope: !16371)
!16410 = !DILocation(line: 5057, column: 8, scope: !16371)
!16411 = distinct !{!16411, !16368, !16412}
!16412 = !DILocation(line: 5058, column: 2, scope: !16337)
!16413 = !DILocation(line: 5059, column: 15, scope: !16337)
!16414 = !DILocation(line: 5059, column: 2, scope: !16337)
!16415 = !DILocation(line: 5059, column: 8, scope: !16337)
!16416 = !DILocation(line: 5059, column: 13, scope: !16337)
!16417 = !DILocation(line: 5061, column: 9, scope: !16337)
!16418 = !DILocation(line: 5061, column: 2, scope: !16337)
!16419 = distinct !DISubprogram(name: "rx_proc", scope: !3, file: !3, line: 4980, type: !16420, scopeLine: 4982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16420 = !DISubroutineType(types: !16421)
!16421 = !{!32, !290, !8002, !7875, !7450}
!16422 = !DILocalVariable(name: "dev", arg: 1, scope: !16419, file: !3, line: 4980, type: !290)
!16423 = !DILocation(line: 4980, column: 46, scope: !16419)
!16424 = !DILocalVariable(name: "hw", arg: 2, scope: !16419, file: !3, line: 4980, type: !8002)
!16425 = !DILocation(line: 4980, column: 66, scope: !16419)
!16426 = !DILocalVariable(name: "desc", arg: 3, scope: !16419, file: !3, line: 4981, type: !7875)
!16427 = !DILocation(line: 4981, column: 19, scope: !16419)
!16428 = !DILocalVariable(name: "status", arg: 4, scope: !16419, file: !3, line: 4981, type: !7450)
!16429 = !DILocation(line: 4981, column: 41, scope: !16419)
!16430 = !DILocalVariable(name: "packet_len", scope: !16419, file: !3, line: 4983, type: !32)
!16431 = !DILocation(line: 4983, column: 6, scope: !16419)
!16432 = !DILocalVariable(name: "priv", scope: !16419, file: !3, line: 4984, type: !7985)
!16433 = !DILocation(line: 4984, column: 19, scope: !16419)
!16434 = !DILocation(line: 4984, column: 38, scope: !16419)
!16435 = !DILocation(line: 4984, column: 26, scope: !16419)
!16436 = !DILocalVariable(name: "hw_priv", scope: !16419, file: !3, line: 4985, type: !7512)
!16437 = !DILocation(line: 4985, column: 19, scope: !16419)
!16438 = !DILocation(line: 4985, column: 29, scope: !16419)
!16439 = !DILocation(line: 4985, column: 35, scope: !16419)
!16440 = !DILocalVariable(name: "dma_buf", scope: !16419, file: !3, line: 4986, type: !8036)
!16441 = !DILocation(line: 4986, column: 22, scope: !16419)
!16442 = !DILocalVariable(name: "skb", scope: !16419, file: !3, line: 4987, type: !415)
!16443 = !DILocation(line: 4987, column: 18, scope: !16419)
!16444 = !DILocation(line: 4990, column: 22, scope: !16419)
!16445 = !DILocation(line: 4990, column: 25, scope: !16419)
!16446 = !DILocation(line: 4990, column: 35, scope: !16419)
!16447 = !DILocation(line: 4990, column: 13, scope: !16419)
!16448 = !DILocation(line: 4992, column: 12, scope: !16419)
!16449 = !DILocation(line: 4992, column: 10, scope: !16419)
!16450 = !DILocation(line: 4993, column: 27, scope: !16419)
!16451 = !DILocation(line: 4993, column: 36, scope: !16419)
!16452 = !DILocation(line: 4993, column: 42, scope: !16419)
!16453 = !DILocation(line: 4993, column: 47, scope: !16419)
!16454 = !DILocation(line: 4993, column: 56, scope: !16419)
!16455 = !DILocation(line: 4994, column: 5, scope: !16419)
!16456 = !DILocation(line: 4994, column: 16, scope: !16419)
!16457 = !DILocation(line: 4993, column: 2, scope: !16419)
!16458 = !DILocation(line: 4996, column: 2, scope: !16419)
!16459 = !DILocation(line: 4998, column: 26, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !16419, file: !3, line: 4996, column: 5)
!16461 = !DILocation(line: 4998, column: 31, scope: !16460)
!16462 = !DILocation(line: 4998, column: 42, scope: !16460)
!16463 = !DILocation(line: 4998, column: 9, scope: !16460)
!16464 = !DILocation(line: 4998, column: 7, scope: !16460)
!16465 = !DILocation(line: 4999, column: 8, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16460, file: !3, line: 4999, column: 7)
!16467 = !DILocation(line: 4999, column: 7, scope: !16460)
!16468 = !DILocation(line: 5000, column: 4, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16466, file: !3, line: 4999, column: 13)
!16470 = !DILocation(line: 5000, column: 9, scope: !16469)
!16471 = !DILocation(line: 5000, column: 15, scope: !16469)
!16472 = !DILocation(line: 5000, column: 25, scope: !16469)
!16473 = !DILocation(line: 5001, column: 4, scope: !16469)
!16474 = !DILocation(line: 5008, column: 15, scope: !16460)
!16475 = !DILocation(line: 5008, column: 3, scope: !16460)
!16476 = !DILocation(line: 5010, column: 16, scope: !16460)
!16477 = !DILocation(line: 5010, column: 21, scope: !16460)
!16478 = !DILocation(line: 5010, column: 30, scope: !16460)
!16479 = !DILocation(line: 5010, column: 35, scope: !16460)
!16480 = !DILocation(line: 5010, column: 41, scope: !16460)
!16481 = !DILocation(line: 5010, column: 3, scope: !16460)
!16482 = !DILocation(line: 5011, column: 2, scope: !16460)
!16483 = !DILocation(line: 5013, column: 33, scope: !16419)
!16484 = !DILocation(line: 5013, column: 38, scope: !16419)
!16485 = !DILocation(line: 5013, column: 18, scope: !16419)
!16486 = !DILocation(line: 5013, column: 2, scope: !16419)
!16487 = !DILocation(line: 5013, column: 7, scope: !16419)
!16488 = !DILocation(line: 5013, column: 16, scope: !16419)
!16489 = !DILocation(line: 5015, column: 6, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16419, file: !3, line: 5015, column: 6)
!16491 = !DILocation(line: 5015, column: 10, scope: !16490)
!16492 = !DILocation(line: 5015, column: 17, scope: !16490)
!16493 = !DILocation(line: 5015, column: 6, scope: !16419)
!16494 = !DILocation(line: 5016, column: 17, scope: !16490)
!16495 = !DILocation(line: 5016, column: 3, scope: !16490)
!16496 = !DILocation(line: 5019, column: 2, scope: !16419)
!16497 = !DILocation(line: 5019, column: 7, scope: !16419)
!16498 = !DILocation(line: 5019, column: 13, scope: !16419)
!16499 = !DILocation(line: 5019, column: 23, scope: !16419)
!16500 = !DILocation(line: 5020, column: 25, scope: !16419)
!16501 = !DILocation(line: 5020, column: 2, scope: !16419)
!16502 = !DILocation(line: 5020, column: 7, scope: !16419)
!16503 = !DILocation(line: 5020, column: 13, scope: !16419)
!16504 = !DILocation(line: 5020, column: 22, scope: !16419)
!16505 = !DILocation(line: 5023, column: 11, scope: !16419)
!16506 = !DILocation(line: 5023, column: 2, scope: !16419)
!16507 = !DILocation(line: 5025, column: 2, scope: !16419)
!16508 = !DILocation(line: 5026, column: 1, scope: !16419)
!16509 = distinct !DISubprogram(name: "release_desc", scope: !3, file: !3, line: 1598, type: !16510, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16510 = !DISubroutineType(types: !16511)
!16511 = !{null, !7875}
!16512 = !DILocalVariable(name: "desc", arg: 1, scope: !16509, file: !3, line: 1598, type: !7875)
!16513 = !DILocation(line: 1598, column: 50, scope: !16509)
!16514 = !DILocation(line: 1600, column: 2, scope: !16509)
!16515 = !DILocation(line: 1600, column: 8, scope: !16509)
!16516 = !DILocation(line: 1600, column: 11, scope: !16509)
!16517 = !DILocation(line: 1600, column: 16, scope: !16509)
!16518 = !DILocation(line: 1600, column: 19, scope: !16509)
!16519 = !DILocation(line: 1600, column: 28, scope: !16509)
!16520 = !DILocation(line: 1601, column: 6, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16509, file: !3, line: 1601, column: 6)
!16522 = !DILocation(line: 1601, column: 12, scope: !16521)
!16523 = !DILocation(line: 1601, column: 15, scope: !16521)
!16524 = !DILocation(line: 1601, column: 27, scope: !16521)
!16525 = !DILocation(line: 1601, column: 33, scope: !16521)
!16526 = !DILocation(line: 1601, column: 36, scope: !16521)
!16527 = !DILocation(line: 1601, column: 40, scope: !16521)
!16528 = !DILocation(line: 1601, column: 24, scope: !16521)
!16529 = !DILocation(line: 1601, column: 6, scope: !16509)
!16530 = !DILocation(line: 1602, column: 23, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16521, file: !3, line: 1601, column: 46)
!16532 = !DILocation(line: 1602, column: 29, scope: !16531)
!16533 = !DILocation(line: 1602, column: 32, scope: !16531)
!16534 = !DILocation(line: 1602, column: 36, scope: !16531)
!16535 = !DILocation(line: 1602, column: 3, scope: !16531)
!16536 = !DILocation(line: 1602, column: 9, scope: !16531)
!16537 = !DILocation(line: 1602, column: 12, scope: !16531)
!16538 = !DILocation(line: 1602, column: 21, scope: !16531)
!16539 = !DILocation(line: 1603, column: 25, scope: !16531)
!16540 = !DILocation(line: 1603, column: 3, scope: !16531)
!16541 = !DILocation(line: 1603, column: 9, scope: !16531)
!16542 = !DILocation(line: 1603, column: 14, scope: !16531)
!16543 = !DILocation(line: 1603, column: 18, scope: !16531)
!16544 = !DILocation(line: 1603, column: 23, scope: !16531)
!16545 = !DILocation(line: 1604, column: 2, scope: !16531)
!16546 = !DILocation(line: 1605, column: 25, scope: !16509)
!16547 = !DILocation(line: 1605, column: 2, scope: !16509)
!16548 = !DILocation(line: 1605, column: 8, scope: !16509)
!16549 = !DILocation(line: 1605, column: 13, scope: !16509)
!16550 = !DILocation(line: 1605, column: 18, scope: !16509)
!16551 = !DILocation(line: 1605, column: 23, scope: !16509)
!16552 = !DILocation(line: 1606, column: 1, scope: !16509)
!16553 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !417, file: !417, line: 2823, type: !16554, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16554 = !DISubroutineType(types: !16555)
!16555 = !{!415, !290, !7}
!16556 = !DILocalVariable(name: "dev", arg: 1, scope: !16553, file: !417, line: 2823, type: !290)
!16557 = !DILocation(line: 2823, column: 67, scope: !16553)
!16558 = !DILocalVariable(name: "length", arg: 2, scope: !16553, file: !417, line: 2824, type: !7)
!16559 = !DILocation(line: 2824, column: 26, scope: !16553)
!16560 = !DILocation(line: 2826, column: 28, scope: !16553)
!16561 = !DILocation(line: 2826, column: 33, scope: !16553)
!16562 = !DILocation(line: 2826, column: 9, scope: !16553)
!16563 = !DILocation(line: 2826, column: 2, scope: !16553)
!16564 = distinct !DISubprogram(name: "skb_reserve", scope: !417, file: !417, line: 2378, type: !16565, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16565 = !DISubroutineType(types: !16566)
!16566 = !{null, !415, !32}
!16567 = !DILocalVariable(name: "skb", arg: 1, scope: !16564, file: !417, line: 2378, type: !415)
!16568 = !DILocation(line: 2378, column: 48, scope: !16564)
!16569 = !DILocalVariable(name: "len", arg: 2, scope: !16564, file: !417, line: 2378, type: !32)
!16570 = !DILocation(line: 2378, column: 57, scope: !16564)
!16571 = !DILocation(line: 2380, column: 15, scope: !16564)
!16572 = !DILocation(line: 2380, column: 2, scope: !16564)
!16573 = !DILocation(line: 2380, column: 7, scope: !16564)
!16574 = !DILocation(line: 2380, column: 12, scope: !16564)
!16575 = !DILocation(line: 2381, column: 15, scope: !16564)
!16576 = !DILocation(line: 2381, column: 2, scope: !16564)
!16577 = !DILocation(line: 2381, column: 7, scope: !16564)
!16578 = !DILocation(line: 2381, column: 12, scope: !16564)
!16579 = !DILocation(line: 2382, column: 1, scope: !16564)
!16580 = distinct !DISubprogram(name: "skb_put_data", scope: !417, file: !417, line: 2270, type: !16581, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16581 = !DISubroutineType(types: !16582)
!16582 = !{!591, !415, !3258, !7}
!16583 = !DILocalVariable(name: "skb", arg: 1, scope: !16580, file: !417, line: 2270, type: !415)
!16584 = !DILocation(line: 2270, column: 50, scope: !16580)
!16585 = !DILocalVariable(name: "data", arg: 2, scope: !16580, file: !417, line: 2270, type: !3258)
!16586 = !DILocation(line: 2270, column: 67, scope: !16580)
!16587 = !DILocalVariable(name: "len", arg: 3, scope: !16580, file: !417, line: 2271, type: !7)
!16588 = !DILocation(line: 2271, column: 19, scope: !16580)
!16589 = !DILocalVariable(name: "tmp", scope: !16580, file: !417, line: 2273, type: !591)
!16590 = !DILocation(line: 2273, column: 8, scope: !16580)
!16591 = !DILocation(line: 2273, column: 22, scope: !16580)
!16592 = !DILocation(line: 2273, column: 27, scope: !16580)
!16593 = !DILocation(line: 2273, column: 14, scope: !16580)
!16594 = !DILocation(line: 2275, column: 9, scope: !16580)
!16595 = !DILocation(line: 2275, column: 14, scope: !16580)
!16596 = !DILocation(line: 2275, column: 20, scope: !16580)
!16597 = !DILocation(line: 2275, column: 2, scope: !16580)
!16598 = !DILocation(line: 2277, column: 9, scope: !16580)
!16599 = !DILocation(line: 2277, column: 2, scope: !16580)
!16600 = distinct !DISubprogram(name: "csum_verified", scope: !3, file: !3, line: 4961, type: !469, scopeLine: 4962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16601 = !DILocalVariable(name: "skb", arg: 1, scope: !16600, file: !3, line: 4961, type: !415)
!16602 = !DILocation(line: 4961, column: 50, scope: !16600)
!16603 = !DILocalVariable(name: "protocol", scope: !16600, file: !3, line: 4963, type: !476)
!16604 = !DILocation(line: 4963, column: 17, scope: !16600)
!16605 = !DILocalVariable(name: "iph", scope: !16600, file: !3, line: 4964, type: !8037)
!16606 = !DILocation(line: 4964, column: 16, scope: !16600)
!16607 = !DILocation(line: 4966, column: 13, scope: !16600)
!16608 = !DILocation(line: 4966, column: 18, scope: !16600)
!16609 = !DILocation(line: 4966, column: 11, scope: !16600)
!16610 = !DILocation(line: 4967, column: 27, scope: !16600)
!16611 = !DILocation(line: 4967, column: 2, scope: !16600)
!16612 = !DILocation(line: 4968, column: 44, scope: !16600)
!16613 = !DILocation(line: 4968, column: 25, scope: !16600)
!16614 = !DILocation(line: 4968, column: 8, scope: !16600)
!16615 = !DILocation(line: 4968, column: 6, scope: !16600)
!16616 = !DILocation(line: 4969, column: 6, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16600, file: !3, line: 4969, column: 6)
!16618 = !DILocation(line: 4969, column: 15, scope: !16617)
!16619 = !DILocation(line: 4969, column: 6, scope: !16600)
!16620 = !DILocation(line: 4970, column: 14, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16617, file: !3, line: 4969, column: 38)
!16622 = !DILocation(line: 4970, column: 19, scope: !16621)
!16623 = !DILocation(line: 4970, column: 12, scope: !16621)
!16624 = !DILocation(line: 4971, column: 26, scope: !16621)
!16625 = !DILocation(line: 4971, column: 3, scope: !16621)
!16626 = !DILocation(line: 4972, column: 45, scope: !16621)
!16627 = !DILocation(line: 4972, column: 26, scope: !16621)
!16628 = !DILocation(line: 4972, column: 9, scope: !16621)
!16629 = !DILocation(line: 4972, column: 7, scope: !16621)
!16630 = !DILocation(line: 4973, column: 2, scope: !16621)
!16631 = !DILocation(line: 4974, column: 6, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16600, file: !3, line: 4974, column: 6)
!16633 = !DILocation(line: 4974, column: 15, scope: !16632)
!16634 = !DILocation(line: 4974, column: 6, scope: !16600)
!16635 = !DILocation(line: 4975, column: 7, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16637, file: !3, line: 4975, column: 7)
!16637 = distinct !DILexicalBlock(scope: !16632, file: !3, line: 4974, column: 35)
!16638 = !DILocation(line: 4975, column: 12, scope: !16636)
!16639 = !DILocation(line: 4975, column: 21, scope: !16636)
!16640 = !DILocation(line: 4975, column: 7, scope: !16637)
!16641 = !DILocation(line: 4976, column: 4, scope: !16636)
!16642 = !DILocation(line: 4976, column: 9, scope: !16636)
!16643 = !DILocation(line: 4976, column: 19, scope: !16636)
!16644 = !DILocation(line: 4977, column: 2, scope: !16637)
!16645 = !DILocation(line: 4978, column: 1, scope: !16600)
!16646 = distinct !DISubprogram(name: "skb_reset_network_header", scope: !417, file: !417, line: 2520, type: !469, scopeLine: 2521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16647 = !DILocalVariable(name: "skb", arg: 1, scope: !16646, file: !417, line: 2520, type: !415)
!16648 = !DILocation(line: 2520, column: 61, scope: !16646)
!16649 = !DILocation(line: 2522, column: 24, scope: !16646)
!16650 = !DILocation(line: 2522, column: 29, scope: !16646)
!16651 = !DILocation(line: 2522, column: 36, scope: !16646)
!16652 = !DILocation(line: 2522, column: 41, scope: !16646)
!16653 = !DILocation(line: 2522, column: 34, scope: !16646)
!16654 = !DILocation(line: 2522, column: 2, scope: !16646)
!16655 = !DILocation(line: 2522, column: 7, scope: !16646)
!16656 = !DILocation(line: 2522, column: 22, scope: !16646)
!16657 = !DILocation(line: 2523, column: 1, scope: !16646)
!16658 = distinct !DISubprogram(name: "skb_network_header", scope: !417, file: !417, line: 2515, type: !16659, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16659 = !DISubroutineType(types: !16660)
!16660 = !{!564, !6053}
!16661 = !DILocalVariable(name: "skb", arg: 1, scope: !16658, file: !417, line: 2515, type: !6053)
!16662 = !DILocation(line: 2515, column: 71, scope: !16658)
!16663 = !DILocation(line: 2517, column: 9, scope: !16658)
!16664 = !DILocation(line: 2517, column: 14, scope: !16658)
!16665 = !DILocation(line: 2517, column: 21, scope: !16658)
!16666 = !DILocation(line: 2517, column: 26, scope: !16658)
!16667 = !DILocation(line: 2517, column: 19, scope: !16658)
!16668 = !DILocation(line: 2517, column: 2, scope: !16658)
!16669 = distinct !DISubprogram(name: "skb_set_network_header", scope: !417, file: !417, line: 2525, type: !16670, scopeLine: 2526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16670 = !DISubroutineType(types: !16671)
!16671 = !{null, !415, !16672}
!16672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!16673 = !DILocalVariable(name: "skb", arg: 1, scope: !16669, file: !417, line: 2525, type: !415)
!16674 = !DILocation(line: 2525, column: 59, scope: !16669)
!16675 = !DILocalVariable(name: "offset", arg: 2, scope: !16669, file: !417, line: 2525, type: !16672)
!16676 = !DILocation(line: 2525, column: 74, scope: !16669)
!16677 = !DILocation(line: 2527, column: 27, scope: !16669)
!16678 = !DILocation(line: 2527, column: 2, scope: !16669)
!16679 = !DILocation(line: 2528, column: 25, scope: !16669)
!16680 = !DILocation(line: 2528, column: 2, scope: !16669)
!16681 = !DILocation(line: 2528, column: 7, scope: !16669)
!16682 = !DILocation(line: 2528, column: 22, scope: !16669)
!16683 = !DILocation(line: 2529, column: 1, scope: !16669)
!16684 = distinct !DISubprogram(name: "get_rx_pkt", scope: !3, file: !3, line: 1608, type: !16685, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16685 = !DISubroutineType(types: !16686)
!16686 = !{null, !10128, !16687}
!16687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7875, size: 64)
!16688 = !DILocalVariable(name: "info", arg: 1, scope: !16684, file: !3, line: 1608, type: !10128)
!16689 = !DILocation(line: 1608, column: 46, scope: !16684)
!16690 = !DILocalVariable(name: "desc", arg: 2, scope: !16684, file: !3, line: 1608, type: !16687)
!16691 = !DILocation(line: 1608, column: 70, scope: !16684)
!16692 = !DILocation(line: 1610, column: 11, scope: !16684)
!16693 = !DILocation(line: 1610, column: 17, scope: !16684)
!16694 = !DILocation(line: 1610, column: 22, scope: !16684)
!16695 = !DILocation(line: 1610, column: 28, scope: !16684)
!16696 = !DILocation(line: 1610, column: 3, scope: !16684)
!16697 = !DILocation(line: 1610, column: 8, scope: !16684)
!16698 = !DILocation(line: 1611, column: 2, scope: !16684)
!16699 = !DILocation(line: 1611, column: 8, scope: !16684)
!16700 = !DILocation(line: 1611, column: 12, scope: !16684)
!16701 = !DILocation(line: 1612, column: 16, scope: !16684)
!16702 = !DILocation(line: 1612, column: 22, scope: !16684)
!16703 = !DILocation(line: 1612, column: 2, scope: !16684)
!16704 = !DILocation(line: 1612, column: 8, scope: !16684)
!16705 = !DILocation(line: 1612, column: 13, scope: !16684)
!16706 = !DILocation(line: 1613, column: 2, scope: !16684)
!16707 = !DILocation(line: 1613, column: 8, scope: !16684)
!16708 = !DILocation(line: 1613, column: 13, scope: !16684)
!16709 = !DILocation(line: 1614, column: 4, scope: !16684)
!16710 = !DILocation(line: 1614, column: 3, scope: !16684)
!16711 = !DILocation(line: 1614, column: 11, scope: !16684)
!16712 = !DILocation(line: 1614, column: 14, scope: !16684)
!16713 = !DILocation(line: 1614, column: 18, scope: !16684)
!16714 = !DILocation(line: 1614, column: 23, scope: !16684)
!16715 = !DILocation(line: 1615, column: 1, scope: !16684)
!16716 = distinct !DISubprogram(name: "free_dma_buf", scope: !3, file: !3, line: 4435, type: !16717, scopeLine: 4437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16717 = !DISubroutineType(types: !16718)
!16718 = !{null, !7512, !8036, !32}
!16719 = !DILocalVariable(name: "adapter", arg: 1, scope: !16716, file: !3, line: 4435, type: !7512)
!16720 = !DILocation(line: 4435, column: 43, scope: !16716)
!16721 = !DILocalVariable(name: "dma_buf", arg: 2, scope: !16716, file: !3, line: 4435, type: !8036)
!16722 = !DILocation(line: 4435, column: 72, scope: !16716)
!16723 = !DILocalVariable(name: "direction", arg: 3, scope: !16716, file: !3, line: 4436, type: !32)
!16724 = !DILocation(line: 4436, column: 6, scope: !16716)
!16725 = !DILocation(line: 4438, column: 2, scope: !16716)
!16726 = !DILocation(line: 4440, column: 2, scope: !16716)
!16727 = !DILocation(line: 4441, column: 2, scope: !16716)
!16728 = !DILocation(line: 4441, column: 11, scope: !16716)
!16729 = !DILocation(line: 4441, column: 15, scope: !16716)
!16730 = !DILocation(line: 4442, column: 2, scope: !16716)
!16731 = !DILocation(line: 4442, column: 11, scope: !16716)
!16732 = !DILocation(line: 4442, column: 15, scope: !16716)
!16733 = !DILocation(line: 4443, column: 1, scope: !16716)
!16734 = distinct !DISubprogram(name: "alloc_skb", scope: !417, file: !417, line: 1091, type: !16735, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16735 = !DISubroutineType(types: !16736)
!16736 = !{!415, !7, !1742}
!16737 = !DILocalVariable(name: "size", arg: 1, scope: !16734, file: !417, line: 1091, type: !7)
!16738 = !DILocation(line: 1091, column: 54, scope: !16734)
!16739 = !DILocalVariable(name: "priority", arg: 2, scope: !16734, file: !417, line: 1092, type: !1742)
!16740 = !DILocation(line: 1092, column: 12, scope: !16734)
!16741 = !DILocation(line: 1094, column: 21, scope: !16734)
!16742 = !DILocation(line: 1094, column: 27, scope: !16734)
!16743 = !DILocation(line: 1094, column: 9, scope: !16734)
!16744 = !DILocation(line: 1094, column: 2, scope: !16734)
!16745 = !DILocalVariable(name: "dev", arg: 1, scope: !8265, file: !8266, line: 271, type: !6546)
!16746 = !DILocation(line: 271, column: 62, scope: !8265)
!16747 = !DILocalVariable(name: "ptr", arg: 2, scope: !8265, file: !8266, line: 271, type: !591)
!16748 = !DILocation(line: 271, column: 73, scope: !8265)
!16749 = !DILocalVariable(name: "size", arg: 3, scope: !8265, file: !8266, line: 272, type: !1039)
!16750 = !DILocation(line: 272, column: 10, scope: !8265)
!16751 = !DILocalVariable(name: "dir", arg: 4, scope: !8265, file: !8266, line: 272, type: !7227)
!16752 = !DILocation(line: 272, column: 40, scope: !8265)
!16753 = !DILocalVariable(name: "attrs", arg: 5, scope: !8265, file: !8266, line: 272, type: !312)
!16754 = !DILocation(line: 272, column: 59, scope: !8265)
!16755 = !DILocalVariable(name: "__ret_warn_once", scope: !16756, file: !8266, line: 275, type: !32)
!16756 = distinct !DILexicalBlock(scope: !16757, file: !8266, line: 275, column: 6)
!16757 = distinct !DILexicalBlock(scope: !8265, file: !8266, line: 275, column: 6)
!16758 = !DILocation(line: 275, column: 6, scope: !16756)
!16759 = !DILocation(line: 275, column: 6, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16756, file: !8266, line: 275, column: 6)
!16761 = !DILocation(line: 0, scope: !16760)
!16762 = !DILocation(line: 275, column: 6, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16760, file: !8266, line: 275, column: 6)
!16764 = !DILocalVariable(name: "__ret_warn_on", scope: !16765, file: !8266, line: 275, type: !32)
!16765 = distinct !DILexicalBlock(scope: !16763, file: !8266, line: 275, column: 6)
!16766 = !DILocation(line: 275, column: 6, scope: !16765)
!16767 = !DILocation(line: 275, column: 6, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16765, file: !8266, line: 275, column: 6)
!16769 = !DILocation(line: 275, column: 6, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16768, file: !8266, line: 275, column: 6)
!16771 = !DILocation(line: 275, column: 6, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16770, file: !8266, line: 275, column: 6)
!16773 = !DILocation(line: 275, column: 6, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16770, file: !8266, line: 275, column: 6)
!16775 = !DILocation(line: 275, column: 6, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16774, file: !8266, line: 275, column: 6)
!16777 = !DILocation(line: 275, column: 6, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16774, file: !8266, line: 275, column: 6)
!16779 = !{i32 -2141584898, i32 -2141584869, i32 -2141584823, i32 -2141584765, i32 -2141584711, i32 -2141584657, i32 -2141584602, i32 -2141584571}
!16780 = !DILocation(line: 275, column: 6, scope: !16781)
!16781 = distinct !DILexicalBlock(scope: !16774, file: !8266, line: 275, column: 6)
!16782 = !{i32 -2141584151, i32 -2141584144, i32 -2141584092, i32 -2141584061, i32 -2141584031}
!16783 = !DILocation(line: 275, column: 6, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16774, file: !8266, line: 275, column: 6)
!16785 = !DILocation(line: 275, column: 6, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16770, file: !8266, line: 275, column: 6)
!16787 = !DILocation(line: 275, column: 6, scope: !16757)
!16788 = !DILocation(line: 275, column: 6, scope: !8265)
!16789 = !DILocation(line: 277, column: 3, scope: !16757)
!16790 = !DILocation(line: 278, column: 23, scope: !8265)
!16791 = !DILocation(line: 278, column: 28, scope: !8265)
!16792 = !DILocation(line: 278, column: 33, scope: !8265)
!16793 = !DILocation(line: 278, column: 2, scope: !8265)
!16794 = !DILocation(line: 279, column: 28, scope: !8265)
!16795 = !DILocation(line: 279, column: 33, scope: !8265)
!16796 = !DILocation(line: 279, column: 52, scope: !8265)
!16797 = !DILocation(line: 280, column: 4, scope: !8265)
!16798 = !DILocation(line: 280, column: 10, scope: !8265)
!16799 = !DILocation(line: 280, column: 15, scope: !8265)
!16800 = !DILocation(line: 279, column: 9, scope: !8265)
!16801 = !DILocation(line: 279, column: 2, scope: !8265)
!16802 = !DILocation(line: 281, column: 1, scope: !8265)
!16803 = distinct !DISubprogram(name: "skb_tail_pointer", scope: !417, file: !417, line: 2191, type: !16659, scopeLine: 2192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16804 = !DILocalVariable(name: "skb", arg: 1, scope: !16803, file: !417, line: 2191, type: !6053)
!16805 = !DILocation(line: 2191, column: 69, scope: !16803)
!16806 = !DILocation(line: 2193, column: 9, scope: !16803)
!16807 = !DILocation(line: 2193, column: 14, scope: !16803)
!16808 = !DILocation(line: 2193, column: 21, scope: !16803)
!16809 = !DILocation(line: 2193, column: 26, scope: !16803)
!16810 = !DILocation(line: 2193, column: 19, scope: !16803)
!16811 = !DILocation(line: 2193, column: 2, scope: !16803)
!16812 = distinct !DISubprogram(name: "set_rx_buf", scope: !3, file: !3, line: 1617, type: !16813, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{null, !7875, !987}
!16815 = !DILocalVariable(name: "desc", arg: 1, scope: !16812, file: !3, line: 1617, type: !7875)
!16816 = !DILocation(line: 1617, column: 48, scope: !16812)
!16817 = !DILocalVariable(name: "addr", arg: 2, scope: !16812, file: !3, line: 1617, type: !987)
!16818 = !DILocation(line: 1617, column: 58, scope: !16812)
!16819 = !DILocation(line: 1619, column: 20, scope: !16812)
!16820 = !DILocation(line: 1619, column: 2, scope: !16812)
!16821 = !DILocation(line: 1619, column: 8, scope: !16812)
!16822 = !DILocation(line: 1619, column: 13, scope: !16812)
!16823 = !DILocation(line: 1619, column: 18, scope: !16812)
!16824 = !DILocation(line: 1620, column: 1, scope: !16812)
!16825 = distinct !DISubprogram(name: "set_rx_len", scope: !3, file: !3, line: 1622, type: !16813, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16826 = !DILocalVariable(name: "desc", arg: 1, scope: !16825, file: !3, line: 1622, type: !7875)
!16827 = !DILocation(line: 1622, column: 48, scope: !16825)
!16828 = !DILocalVariable(name: "len", arg: 2, scope: !16825, file: !3, line: 1622, type: !987)
!16829 = !DILocation(line: 1622, column: 58, scope: !16825)
!16830 = !DILocation(line: 1624, column: 29, scope: !16825)
!16831 = !DILocation(line: 1624, column: 2, scope: !16825)
!16832 = !DILocation(line: 1624, column: 8, scope: !16825)
!16833 = !DILocation(line: 1624, column: 11, scope: !16825)
!16834 = !DILocation(line: 1624, column: 15, scope: !16825)
!16835 = !DILocation(line: 1624, column: 18, scope: !16825)
!16836 = !DILocation(line: 1624, column: 27, scope: !16825)
!16837 = !DILocation(line: 1625, column: 1, scope: !16825)
!16838 = distinct !DISubprogram(name: "consume_skb", scope: !417, file: !417, line: 1063, type: !469, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16839 = !DILocalVariable(name: "skb", arg: 1, scope: !16838, file: !417, line: 1063, type: !415)
!16840 = !DILocation(line: 1063, column: 48, scope: !16838)
!16841 = !DILocation(line: 1065, column: 19, scope: !16838)
!16842 = !DILocation(line: 1065, column: 9, scope: !16838)
!16843 = !DILocation(line: 1065, column: 2, scope: !16838)
!16844 = distinct !DISubprogram(name: "dev_name", scope: !6542, file: !6542, line: 609, type: !16845, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16845 = !DISubroutineType(types: !16846)
!16846 = !{!292, !6892}
!16847 = !DILocalVariable(name: "dev", arg: 1, scope: !16844, file: !6542, line: 609, type: !6892)
!16848 = !DILocation(line: 609, column: 57, scope: !16844)
!16849 = !DILocation(line: 612, column: 6, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16844, file: !6542, line: 612, column: 6)
!16851 = !DILocation(line: 612, column: 11, scope: !16850)
!16852 = !DILocation(line: 612, column: 6, scope: !16844)
!16853 = !DILocation(line: 613, column: 10, scope: !16850)
!16854 = !DILocation(line: 613, column: 15, scope: !16850)
!16855 = !DILocation(line: 613, column: 3, scope: !16850)
!16856 = !DILocation(line: 615, column: 23, scope: !16844)
!16857 = !DILocation(line: 615, column: 28, scope: !16844)
!16858 = !DILocation(line: 615, column: 9, scope: !16844)
!16859 = !DILocation(line: 615, column: 2, scope: !16844)
!16860 = !DILocation(line: 616, column: 1, scope: !16844)
!16861 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !8266, file: !8266, line: 87, type: !16862, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16862 = !DISubroutineType(types: !16863)
!16863 = !{null, !6546, !3258, !312}
!16864 = !DILocalVariable(name: "dev", arg: 1, scope: !16861, file: !8266, line: 87, type: !6546)
!16865 = !DILocation(line: 87, column: 56, scope: !16861)
!16866 = !DILocalVariable(name: "addr", arg: 2, scope: !16861, file: !8266, line: 87, type: !3258)
!16867 = !DILocation(line: 87, column: 73, scope: !16861)
!16868 = !DILocalVariable(name: "len", arg: 3, scope: !16861, file: !8266, line: 88, type: !312)
!16869 = !DILocation(line: 88, column: 17, scope: !16861)
!16870 = !DILocation(line: 90, column: 1, scope: !16861)
!16871 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !16872, file: !16872, line: 18, type: !16873, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16872 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!16873 = !DISubroutineType(types: !16874)
!16874 = !{!312, !312}
!16875 = !DILocalVariable(name: "x", arg: 1, scope: !16871, file: !16872, line: 18, type: !312)
!16876 = !DILocation(line: 18, column: 63, scope: !16871)
!16877 = !DILocalVariable(name: "y", scope: !16871, file: !16872, line: 20, type: !312)
!16878 = !DILocation(line: 20, column: 16, scope: !16871)
!16879 = !DILocation(line: 20, column: 20, scope: !16871)
!16880 = !DILocation(line: 20, column: 22, scope: !16871)
!16881 = !DILocation(line: 23, column: 6, scope: !16871)
!16882 = !DILocation(line: 23, column: 12, scope: !16871)
!16883 = !DILocation(line: 23, column: 16, scope: !16871)
!16884 = !DILocation(line: 23, column: 14, scope: !16871)
!16885 = !DILocation(line: 23, column: 11, scope: !16871)
!16886 = !DILocation(line: 23, column: 21, scope: !16871)
!16887 = !DILocation(line: 23, column: 55, scope: !16871)
!16888 = !DILocation(line: 23, column: 53, scope: !16871)
!16889 = !DILocation(line: 23, column: 8, scope: !16871)
!16890 = !DILocation(line: 23, column: 4, scope: !16871)
!16891 = !DILocation(line: 25, column: 9, scope: !16871)
!16892 = !DILocation(line: 25, column: 2, scope: !16871)
!16893 = distinct !DISubprogram(name: "kobject_name", scope: !6116, file: !6116, line: 88, type: !16894, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16894 = !DISubroutineType(types: !16895)
!16895 = !{!292, !16896}
!16896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16897, size: 64)
!16897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6121)
!16898 = !DILocalVariable(name: "kobj", arg: 1, scope: !16893, file: !6116, line: 88, type: !16896)
!16899 = !DILocation(line: 88, column: 62, scope: !16893)
!16900 = !DILocation(line: 90, column: 9, scope: !16893)
!16901 = !DILocation(line: 90, column: 15, scope: !16893)
!16902 = !DILocation(line: 90, column: 2, scope: !16893)
!16903 = distinct !DISubprogram(name: "hw_set_wol_frame", scope: !3, file: !3, line: 3556, type: !16904, scopeLine: 3558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16904 = !DISubroutineType(types: !16905)
!16905 = !{null, !8002, !32, !7840, !5861, !7840, !5861}
!16906 = !DILocalVariable(name: "hw", arg: 1, scope: !16903, file: !3, line: 3556, type: !8002)
!16907 = !DILocation(line: 3556, column: 45, scope: !16903)
!16908 = !DILocalVariable(name: "i", arg: 2, scope: !16903, file: !3, line: 3556, type: !32)
!16909 = !DILocation(line: 3556, column: 53, scope: !16903)
!16910 = !DILocalVariable(name: "mask_size", arg: 3, scope: !16903, file: !3, line: 3556, type: !7840)
!16911 = !DILocation(line: 3556, column: 61, scope: !16903)
!16912 = !DILocalVariable(name: "mask", arg: 4, scope: !16903, file: !3, line: 3557, type: !5861)
!16913 = !DILocation(line: 3557, column: 12, scope: !16903)
!16914 = !DILocalVariable(name: "frame_size", arg: 5, scope: !16903, file: !3, line: 3557, type: !7840)
!16915 = !DILocation(line: 3557, column: 23, scope: !16903)
!16916 = !DILocalVariable(name: "pattern", arg: 6, scope: !16903, file: !3, line: 3557, type: !5861)
!16917 = !DILocation(line: 3557, column: 45, scope: !16903)
!16918 = !DILocalVariable(name: "bits", scope: !16903, file: !3, line: 3559, type: !32)
!16919 = !DILocation(line: 3559, column: 6, scope: !16903)
!16920 = !DILocalVariable(name: "from", scope: !16903, file: !3, line: 3560, type: !32)
!16921 = !DILocation(line: 3560, column: 6, scope: !16903)
!16922 = !DILocalVariable(name: "len", scope: !16903, file: !3, line: 3561, type: !32)
!16923 = !DILocation(line: 3561, column: 6, scope: !16903)
!16924 = !DILocalVariable(name: "to", scope: !16903, file: !3, line: 3562, type: !32)
!16925 = !DILocation(line: 3562, column: 6, scope: !16903)
!16926 = !DILocalVariable(name: "crc", scope: !16903, file: !3, line: 3563, type: !987)
!16927 = !DILocation(line: 3563, column: 6, scope: !16903)
!16928 = !DILocalVariable(name: "data", scope: !16903, file: !3, line: 3564, type: !7828)
!16929 = !DILocation(line: 3564, column: 5, scope: !16903)
!16930 = !DILocalVariable(name: "val", scope: !16903, file: !3, line: 3565, type: !794)
!16931 = !DILocation(line: 3565, column: 5, scope: !16903)
!16932 = !DILocation(line: 3567, column: 6, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16903, file: !3, line: 3567, column: 6)
!16934 = !DILocation(line: 3567, column: 19, scope: !16933)
!16935 = !DILocation(line: 3567, column: 29, scope: !16933)
!16936 = !DILocation(line: 3567, column: 17, scope: !16933)
!16937 = !DILocation(line: 3567, column: 6, scope: !16903)
!16938 = !DILocation(line: 3568, column: 16, scope: !16933)
!16939 = !DILocation(line: 3568, column: 26, scope: !16933)
!16940 = !DILocation(line: 3568, column: 14, scope: !16933)
!16941 = !DILocation(line: 3568, column: 3, scope: !16933)
!16942 = !DILocation(line: 3569, column: 6, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16903, file: !3, line: 3569, column: 6)
!16944 = !DILocation(line: 3569, column: 17, scope: !16943)
!16945 = !DILocation(line: 3569, column: 6, scope: !16903)
!16946 = !DILocation(line: 3570, column: 14, scope: !16943)
!16947 = !DILocation(line: 3570, column: 3, scope: !16943)
!16948 = !DILocation(line: 3572, column: 4, scope: !16903)
!16949 = !DILocation(line: 3573, column: 12, scope: !16903)
!16950 = !DILocation(line: 3573, column: 16, scope: !16903)
!16951 = !DILocation(line: 3573, column: 19, scope: !16903)
!16952 = !DILocation(line: 3573, column: 53, scope: !16903)
!16953 = !DILocation(line: 3573, column: 51, scope: !16903)
!16954 = !DILocation(line: 3573, column: 2, scope: !16903)
!16955 = !DILocation(line: 3574, column: 12, scope: !16903)
!16956 = !DILocation(line: 3574, column: 16, scope: !16903)
!16957 = !DILocation(line: 3574, column: 19, scope: !16903)
!16958 = !DILocation(line: 3574, column: 53, scope: !16903)
!16959 = !DILocation(line: 3574, column: 51, scope: !16903)
!16960 = !DILocation(line: 3574, column: 2, scope: !16903)
!16961 = !DILocation(line: 3576, column: 25, scope: !16903)
!16962 = !DILocation(line: 3576, column: 20, scope: !16903)
!16963 = !DILocation(line: 3576, column: 13, scope: !16903)
!16964 = !DILocation(line: 3576, column: 7, scope: !16903)
!16965 = !DILocation(line: 3577, column: 2, scope: !16903)
!16966 = !DILocation(line: 3578, column: 7, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16968, file: !3, line: 3578, column: 7)
!16968 = distinct !DILexicalBlock(scope: !16903, file: !3, line: 3577, column: 5)
!16969 = !DILocation(line: 3578, column: 7, scope: !16968)
!16970 = !DILocation(line: 3579, column: 9, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16972, file: !3, line: 3579, column: 8)
!16972 = distinct !DILexicalBlock(scope: !16967, file: !3, line: 3578, column: 13)
!16973 = !DILocation(line: 3579, column: 13, scope: !16971)
!16974 = !DILocation(line: 3579, column: 8, scope: !16972)
!16975 = !DILocation(line: 3580, column: 18, scope: !16971)
!16976 = !DILocation(line: 3580, column: 26, scope: !16971)
!16977 = !DILocation(line: 3580, column: 12, scope: !16971)
!16978 = !DILocation(line: 3580, column: 5, scope: !16971)
!16979 = !DILocation(line: 3580, column: 16, scope: !16971)
!16980 = !DILocation(line: 3581, column: 8, scope: !16972)
!16981 = !DILocation(line: 3582, column: 4, scope: !16972)
!16982 = !DILocation(line: 3583, column: 4, scope: !16972)
!16983 = !DILocation(line: 3584, column: 3, scope: !16972)
!16984 = !DILocation(line: 3585, column: 10, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16967, file: !3, line: 3584, column: 10)
!16986 = !DILocation(line: 3585, column: 15, scope: !16985)
!16987 = !DILocation(line: 3585, column: 8, scope: !16985)
!16988 = !DILocation(line: 3586, column: 11, scope: !16985)
!16989 = !DILocation(line: 3586, column: 16, scope: !16985)
!16990 = !DILocation(line: 3586, column: 20, scope: !16985)
!16991 = !DILocation(line: 3586, column: 23, scope: !16985)
!16992 = !DILocation(line: 3586, column: 57, scope: !16985)
!16993 = !DILocation(line: 3586, column: 55, scope: !16985)
!16994 = !DILocation(line: 3587, column: 7, scope: !16985)
!16995 = !DILocation(line: 3587, column: 5, scope: !16985)
!16996 = !DILocation(line: 3586, column: 4, scope: !16985)
!16997 = !DILocation(line: 3588, column: 4, scope: !16985)
!16998 = !DILocation(line: 3589, column: 8, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !16985, file: !3, line: 3589, column: 8)
!17000 = !DILocation(line: 3589, column: 8, scope: !16985)
!17001 = !DILocation(line: 3590, column: 10, scope: !16999)
!17002 = !DILocation(line: 3590, column: 5, scope: !16999)
!17003 = !DILocation(line: 3592, column: 10, scope: !16999)
!17004 = !DILocation(line: 3594, column: 2, scope: !16968)
!17005 = !DILocation(line: 3594, column: 11, scope: !16903)
!17006 = !DILocation(line: 3594, column: 24, scope: !16903)
!17007 = !DILocation(line: 3594, column: 16, scope: !16903)
!17008 = distinct !{!17008, !16965, !17009}
!17009 = !DILocation(line: 3594, column: 34, scope: !16903)
!17010 = !DILocation(line: 3595, column: 6, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !16903, file: !3, line: 3595, column: 6)
!17012 = !DILocation(line: 3595, column: 6, scope: !16903)
!17013 = !DILocation(line: 3596, column: 10, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !17011, file: !3, line: 3595, column: 11)
!17015 = !DILocation(line: 3596, column: 15, scope: !17014)
!17016 = !DILocation(line: 3596, column: 19, scope: !17014)
!17017 = !DILocation(line: 3596, column: 8, scope: !17014)
!17018 = !DILocation(line: 3597, column: 12, scope: !17014)
!17019 = !DILocation(line: 3597, column: 17, scope: !17014)
!17020 = !DILocation(line: 3597, column: 7, scope: !17014)
!17021 = !DILocation(line: 3598, column: 12, scope: !17014)
!17022 = !DILocation(line: 3598, column: 11, scope: !17014)
!17023 = !DILocation(line: 3598, column: 8, scope: !17014)
!17024 = !DILocation(line: 3599, column: 10, scope: !17014)
!17025 = !DILocation(line: 3599, column: 16, scope: !17014)
!17026 = !DILocation(line: 3599, column: 20, scope: !17014)
!17027 = !DILocation(line: 3599, column: 23, scope: !17014)
!17028 = !DILocation(line: 3599, column: 57, scope: !17014)
!17029 = !DILocation(line: 3599, column: 55, scope: !17014)
!17030 = !DILocation(line: 3599, column: 61, scope: !17014)
!17031 = !DILocation(line: 3599, column: 59, scope: !17014)
!17032 = !DILocation(line: 3599, column: 65, scope: !17014)
!17033 = !DILocation(line: 3599, column: 3, scope: !17014)
!17034 = !DILocation(line: 3601, column: 2, scope: !17014)
!17035 = !DILocalVariable(name: "__x", scope: !17036, file: !3, line: 3602, type: !987)
!17036 = distinct !DILexicalBlock(scope: !16903, file: !3, line: 3602, column: 8)
!17037 = !DILocation(line: 3602, column: 8, scope: !17036)
!17038 = !DILocalVariable(name: "___x", scope: !17039, file: !3, line: 3602, type: !987)
!17039 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 3602, column: 8)
!17040 = !DILocation(line: 3602, column: 8, scope: !17039)
!17041 = !DILocation(line: 3602, column: 6, scope: !16903)
!17042 = !DILocation(line: 3603, column: 9, scope: !16903)
!17043 = !DILocation(line: 3603, column: 14, scope: !16903)
!17044 = !DILocation(line: 3603, column: 18, scope: !16903)
!17045 = !DILocation(line: 3603, column: 21, scope: !16903)
!17046 = !DILocation(line: 3603, column: 53, scope: !16903)
!17047 = !DILocation(line: 3603, column: 51, scope: !16903)
!17048 = !DILocation(line: 3603, column: 2, scope: !16903)
!17049 = !DILocation(line: 3604, column: 1, scope: !16903)
!17050 = distinct !DISubprogram(name: "__bitrev32", scope: !17051, file: !17051, line: 26, type: !17052, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17051 = !DIFile(filename: "./include/linux/bitrev.h", directory: "/home/lizy2001/genbc/linux")
!17052 = !DISubroutineType(types: !17053)
!17053 = !{!987, !987}
!17054 = !DILocalVariable(name: "x", arg: 1, scope: !17050, file: !17051, line: 26, type: !987)
!17055 = !DILocation(line: 26, column: 34, scope: !17050)
!17056 = !DILocation(line: 28, column: 21, scope: !17050)
!17057 = !DILocation(line: 28, column: 23, scope: !17050)
!17058 = !DILocation(line: 28, column: 10, scope: !17050)
!17059 = !DILocation(line: 28, column: 33, scope: !17050)
!17060 = !DILocation(line: 28, column: 53, scope: !17050)
!17061 = !DILocation(line: 28, column: 55, scope: !17050)
!17062 = !DILocation(line: 28, column: 42, scope: !17050)
!17063 = !DILocation(line: 28, column: 40, scope: !17050)
!17064 = !DILocation(line: 28, column: 2, scope: !17050)
!17065 = distinct !DISubprogram(name: "__bitrev16", scope: !17051, file: !17051, line: 21, type: !17066, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17066 = !DISubroutineType(types: !17067)
!17067 = !{!581, !581}
!17068 = !DILocalVariable(name: "x", arg: 1, scope: !17065, file: !17051, line: 21, type: !581)
!17069 = !DILocation(line: 21, column: 34, scope: !17065)
!17070 = !DILocation(line: 23, column: 20, scope: !17065)
!17071 = !DILocation(line: 23, column: 22, scope: !17065)
!17072 = !DILocation(line: 23, column: 10, scope: !17065)
!17073 = !DILocation(line: 23, column: 30, scope: !17065)
!17074 = !DILocation(line: 23, column: 48, scope: !17065)
!17075 = !DILocation(line: 23, column: 50, scope: !17065)
!17076 = !DILocation(line: 23, column: 38, scope: !17065)
!17077 = !DILocation(line: 23, column: 36, scope: !17065)
!17078 = !DILocation(line: 23, column: 9, scope: !17065)
!17079 = !DILocation(line: 23, column: 2, scope: !17065)
!17080 = distinct !DISubprogram(name: "__bitrev8", scope: !17051, file: !17051, line: 16, type: !17081, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{!794, !794}
!17083 = !DILocalVariable(name: "byte", arg: 1, scope: !17080, file: !17051, line: 16, type: !794)
!17084 = !DILocation(line: 16, column: 31, scope: !17080)
!17085 = !DILocation(line: 18, column: 24, scope: !17080)
!17086 = !DILocation(line: 18, column: 9, scope: !17080)
!17087 = !DILocation(line: 18, column: 2, scope: !17080)
!17088 = distinct !DISubprogram(name: "hw_ena_add_addr", scope: !3, file: !3, line: 4075, type: !17089, scopeLine: 4076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17089 = !DISubroutineType(types: !17090)
!17090 = !{null, !8002, !32, !793}
!17091 = !DILocalVariable(name: "hw", arg: 1, scope: !17088, file: !3, line: 4075, type: !8002)
!17092 = !DILocation(line: 4075, column: 44, scope: !17088)
!17093 = !DILocalVariable(name: "index", arg: 2, scope: !17088, file: !3, line: 4075, type: !32)
!17094 = !DILocation(line: 4075, column: 52, scope: !17088)
!17095 = !DILocalVariable(name: "mac_addr", arg: 3, scope: !17088, file: !3, line: 4075, type: !793)
!17096 = !DILocation(line: 4075, column: 63, scope: !17088)
!17097 = !DILocalVariable(name: "i", scope: !17088, file: !3, line: 4077, type: !32)
!17098 = !DILocation(line: 4077, column: 6, scope: !17088)
!17099 = !DILocalVariable(name: "mac_addr_lo", scope: !17088, file: !3, line: 4078, type: !987)
!17100 = !DILocation(line: 4078, column: 6, scope: !17088)
!17101 = !DILocalVariable(name: "mac_addr_hi", scope: !17088, file: !3, line: 4079, type: !987)
!17102 = !DILocation(line: 4079, column: 6, scope: !17088)
!17103 = !DILocation(line: 4081, column: 14, scope: !17088)
!17104 = !DILocation(line: 4082, column: 9, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17088, file: !3, line: 4082, column: 2)
!17106 = !DILocation(line: 4082, column: 7, scope: !17105)
!17107 = !DILocation(line: 4082, column: 14, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17105, file: !3, line: 4082, column: 2)
!17109 = !DILocation(line: 4082, column: 16, scope: !17108)
!17110 = !DILocation(line: 4082, column: 2, scope: !17105)
!17111 = !DILocation(line: 4083, column: 15, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17108, file: !3, line: 4082, column: 26)
!17113 = !DILocation(line: 4084, column: 18, scope: !17112)
!17114 = !DILocation(line: 4084, column: 27, scope: !17112)
!17115 = !DILocation(line: 4084, column: 15, scope: !17112)
!17116 = !DILocation(line: 4085, column: 2, scope: !17112)
!17117 = !DILocation(line: 4082, column: 22, scope: !17108)
!17118 = !DILocation(line: 4082, column: 2, scope: !17108)
!17119 = distinct !{!17119, !17110, !17120}
!17120 = !DILocation(line: 4085, column: 2, scope: !17105)
!17121 = !DILocation(line: 4086, column: 14, scope: !17088)
!17122 = !DILocation(line: 4087, column: 14, scope: !17088)
!17123 = !DILocation(line: 4088, column: 9, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17088, file: !3, line: 4088, column: 2)
!17125 = !DILocation(line: 4088, column: 7, scope: !17124)
!17126 = !DILocation(line: 4088, column: 14, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !17124, file: !3, line: 4088, column: 2)
!17128 = !DILocation(line: 4088, column: 16, scope: !17127)
!17129 = !DILocation(line: 4088, column: 2, scope: !17124)
!17130 = !DILocation(line: 4089, column: 15, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17127, file: !3, line: 4088, column: 26)
!17132 = !DILocation(line: 4090, column: 18, scope: !17131)
!17133 = !DILocation(line: 4090, column: 27, scope: !17131)
!17134 = !DILocation(line: 4090, column: 15, scope: !17131)
!17135 = !DILocation(line: 4091, column: 2, scope: !17131)
!17136 = !DILocation(line: 4088, column: 22, scope: !17127)
!17137 = !DILocation(line: 4088, column: 2, scope: !17127)
!17138 = distinct !{!17138, !17129, !17139}
!17139 = !DILocation(line: 4091, column: 2, scope: !17124)
!17140 = !DILocation(line: 4092, column: 8, scope: !17088)
!17141 = !DILocation(line: 4094, column: 9, scope: !17088)
!17142 = !DILocation(line: 4094, column: 22, scope: !17088)
!17143 = !DILocation(line: 4094, column: 26, scope: !17088)
!17144 = !DILocation(line: 4094, column: 31, scope: !17088)
!17145 = !DILocation(line: 4094, column: 29, scope: !17088)
!17146 = !DILocation(line: 4094, column: 37, scope: !17088)
!17147 = !DILocation(line: 4094, column: 2, scope: !17088)
!17148 = !DILocation(line: 4095, column: 9, scope: !17088)
!17149 = !DILocation(line: 4095, column: 22, scope: !17088)
!17150 = !DILocation(line: 4095, column: 26, scope: !17088)
!17151 = !DILocation(line: 4095, column: 31, scope: !17088)
!17152 = !DILocation(line: 4095, column: 29, scope: !17088)
!17153 = !DILocation(line: 4095, column: 37, scope: !17088)
!17154 = !DILocation(line: 4095, column: 2, scope: !17088)
!17155 = !DILocation(line: 4096, column: 1, scope: !17088)
!17156 = distinct !DISubprogram(name: "hw_r_phy_ctrl", scope: !3, file: !3, line: 2898, type: !11977, scopeLine: 2899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17157 = !DILocalVariable(name: "hw", arg: 1, scope: !17156, file: !3, line: 2898, type: !8002)
!17158 = !DILocation(line: 2898, column: 49, scope: !17156)
!17159 = !DILocalVariable(name: "phy", arg: 2, scope: !17156, file: !3, line: 2898, type: !32)
!17160 = !DILocation(line: 2898, column: 57, scope: !17156)
!17161 = !DILocalVariable(name: "data", arg: 3, scope: !17156, file: !3, line: 2898, type: !7507)
!17162 = !DILocation(line: 2898, column: 67, scope: !17156)
!17163 = !DILocation(line: 2900, column: 16, scope: !17156)
!17164 = !DILocation(line: 2900, column: 20, scope: !17156)
!17165 = !DILocation(line: 2900, column: 25, scope: !17156)
!17166 = !DILocation(line: 2900, column: 23, scope: !17156)
!17167 = !DILocation(line: 2900, column: 29, scope: !17156)
!17168 = !DILocation(line: 2900, column: 10, scope: !17156)
!17169 = !DILocation(line: 2900, column: 3, scope: !17156)
!17170 = !DILocation(line: 2900, column: 8, scope: !17156)
!17171 = !DILocation(line: 2901, column: 1, scope: !17156)
!17172 = distinct !DISubprogram(name: "hw_w_phy_ctrl", scope: !3, file: !3, line: 2903, type: !17173, scopeLine: 2904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17173 = !DISubroutineType(types: !17174)
!17174 = !{null, !8002, !32, !581}
!17175 = !DILocalVariable(name: "hw", arg: 1, scope: !17172, file: !3, line: 2903, type: !8002)
!17176 = !DILocation(line: 2903, column: 49, scope: !17172)
!17177 = !DILocalVariable(name: "phy", arg: 2, scope: !17172, file: !3, line: 2903, type: !32)
!17178 = !DILocation(line: 2903, column: 57, scope: !17172)
!17179 = !DILocalVariable(name: "data", arg: 3, scope: !17172, file: !3, line: 2903, type: !581)
!17180 = !DILocation(line: 2903, column: 66, scope: !17172)
!17181 = !DILocation(line: 2905, column: 9, scope: !17172)
!17182 = !DILocation(line: 2905, column: 15, scope: !17172)
!17183 = !DILocation(line: 2905, column: 19, scope: !17172)
!17184 = !DILocation(line: 2905, column: 24, scope: !17172)
!17185 = !DILocation(line: 2905, column: 22, scope: !17172)
!17186 = !DILocation(line: 2905, column: 28, scope: !17172)
!17187 = !DILocation(line: 2905, column: 2, scope: !17172)
!17188 = !DILocation(line: 2906, column: 1, scope: !17172)
!17189 = distinct !DISubprogram(name: "port_r8", scope: !3, file: !3, line: 2029, type: !17190, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17190 = !DISubroutineType(types: !17191)
!17191 = !{null, !8002, !32, !32, !793}
!17192 = !DILocalVariable(name: "hw", arg: 1, scope: !17189, file: !3, line: 2029, type: !8002)
!17193 = !DILocation(line: 2029, column: 36, scope: !17189)
!17194 = !DILocalVariable(name: "port", arg: 2, scope: !17189, file: !3, line: 2029, type: !32)
!17195 = !DILocation(line: 2029, column: 44, scope: !17189)
!17196 = !DILocalVariable(name: "offset", arg: 3, scope: !17189, file: !3, line: 2029, type: !32)
!17197 = !DILocation(line: 2029, column: 54, scope: !17189)
!17198 = !DILocalVariable(name: "data", arg: 4, scope: !17189, file: !3, line: 2029, type: !793)
!17199 = !DILocation(line: 2029, column: 66, scope: !17189)
!17200 = !DILocalVariable(name: "addr", scope: !17189, file: !3, line: 2031, type: !987)
!17201 = !DILocation(line: 2031, column: 6, scope: !17189)
!17202 = !DILocation(line: 2033, column: 2, scope: !17189)
!17203 = !DILocation(line: 2034, column: 10, scope: !17189)
!17204 = !DILocation(line: 2034, column: 7, scope: !17189)
!17205 = !DILocation(line: 2035, column: 16, scope: !17189)
!17206 = !DILocation(line: 2035, column: 20, scope: !17189)
!17207 = !DILocation(line: 2035, column: 25, scope: !17189)
!17208 = !DILocation(line: 2035, column: 23, scope: !17189)
!17209 = !DILocation(line: 2035, column: 10, scope: !17189)
!17210 = !DILocation(line: 2035, column: 3, scope: !17189)
!17211 = !DILocation(line: 2035, column: 8, scope: !17189)
!17212 = !DILocation(line: 2036, column: 1, scope: !17189)
!17213 = distinct !DISubprogram(name: "advertised_flow_ctrl", scope: !3, file: !3, line: 3190, type: !17214, scopeLine: 3191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17214 = !DISubroutineType(types: !17215)
!17215 = !{!581, !8386, !581}
!17216 = !DILocalVariable(name: "port", arg: 1, scope: !17213, file: !3, line: 3190, type: !8386)
!17217 = !DILocation(line: 3190, column: 50, scope: !17213)
!17218 = !DILocalVariable(name: "ctrl", arg: 2, scope: !17213, file: !3, line: 3190, type: !581)
!17219 = !DILocation(line: 3190, column: 60, scope: !17213)
!17220 = !DILocation(line: 3192, column: 7, scope: !17213)
!17221 = !DILocation(line: 3193, column: 10, scope: !17213)
!17222 = !DILocation(line: 3193, column: 16, scope: !17213)
!17223 = !DILocation(line: 3193, column: 2, scope: !17213)
!17224 = !DILocation(line: 3195, column: 8, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17213, file: !3, line: 3193, column: 27)
!17226 = !DILocation(line: 3196, column: 3, scope: !17225)
!17227 = !DILocation(line: 3201, column: 3, scope: !17225)
!17228 = !DILocation(line: 3203, column: 9, scope: !17213)
!17229 = !DILocation(line: 3203, column: 2, scope: !17213)
!17230 = distinct !DISubprogram(name: "hw_start_tx", scope: !3, file: !3, line: 3920, type: !8272, scopeLine: 3921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17231 = !DILocalVariable(name: "hw", arg: 1, scope: !17230, file: !3, line: 3920, type: !8002)
!17232 = !DILocation(line: 3920, column: 40, scope: !17230)
!17233 = !DILocation(line: 3922, column: 9, scope: !17230)
!17234 = !DILocation(line: 3922, column: 13, scope: !17230)
!17235 = !DILocation(line: 3922, column: 21, scope: !17230)
!17236 = !DILocation(line: 3922, column: 25, scope: !17230)
!17237 = !DILocation(line: 3922, column: 28, scope: !17230)
!17238 = !DILocation(line: 3922, column: 2, scope: !17230)
!17239 = !DILocation(line: 3923, column: 1, scope: !17230)
!17240 = distinct !DISubprogram(name: "clear_bit", scope: !15756, file: !15756, line: 39, type: !17241, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17241 = !DISubroutineType(types: !17242)
!17242 = !{null, !998, !15759}
!17243 = !DILocalVariable(name: "nr", arg: 1, scope: !17244, file: !10039, line: 72, type: !998)
!17244 = distinct !DISubprogram(name: "arch_clear_bit", scope: !10039, file: !10039, line: 72, type: !17241, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17245 = !DILocation(line: 72, column: 21, scope: !17244, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 42, column: 2, scope: !17240)
!17247 = !DILocalVariable(name: "addr", arg: 2, scope: !17244, file: !10039, line: 72, type: !15759)
!17248 = !DILocation(line: 72, column: 49, scope: !17244, inlinedAt: !17246)
!17249 = !DILocalVariable(name: "v", arg: 1, scope: !17250, file: !14648, line: 84, type: !10119)
!17250 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !14648, file: !14648, line: 84, type: !14649, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17251 = !DILocation(line: 84, column: 74, scope: !17250, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 41, column: 2, scope: !17240)
!17253 = !DILocalVariable(name: "size", arg: 2, scope: !17250, file: !14648, line: 84, type: !1039)
!17254 = !DILocation(line: 84, column: 84, scope: !17250, inlinedAt: !17252)
!17255 = !DILocalVariable(name: "nr", arg: 1, scope: !17240, file: !15756, line: 39, type: !998)
!17256 = !DILocation(line: 39, column: 35, scope: !17240)
!17257 = !DILocalVariable(name: "addr", arg: 2, scope: !17240, file: !15756, line: 39, type: !15759)
!17258 = !DILocation(line: 39, column: 63, scope: !17240)
!17259 = !DILocation(line: 41, column: 26, scope: !17240)
!17260 = !DILocation(line: 41, column: 33, scope: !17240)
!17261 = !DILocation(line: 41, column: 31, scope: !17240)
!17262 = !DILocation(line: 86, column: 20, scope: !17250, inlinedAt: !17252)
!17263 = !DILocation(line: 86, column: 23, scope: !17250, inlinedAt: !17252)
!17264 = !DILocation(line: 86, column: 2, scope: !17250, inlinedAt: !17252)
!17265 = !DILocation(line: 87, column: 2, scope: !17250, inlinedAt: !17252)
!17266 = !DILocation(line: 42, column: 17, scope: !17240)
!17267 = !DILocation(line: 42, column: 21, scope: !17240)
!17268 = !DILocation(line: 74, column: 27, scope: !17269, inlinedAt: !17246)
!17269 = distinct !DILexicalBlock(scope: !17244, file: !10039, line: 74, column: 6)
!17270 = !DILocation(line: 74, column: 6, scope: !17269, inlinedAt: !17246)
!17271 = !DILocation(line: 74, column: 6, scope: !17244, inlinedAt: !17246)
!17272 = !DILocation(line: 76, column: 6, scope: !17273, inlinedAt: !17246)
!17273 = distinct !DILexicalBlock(scope: !17269, file: !10039, line: 74, column: 32)
!17274 = !DILocation(line: 77, column: 13, scope: !17273, inlinedAt: !17246)
!17275 = !DILocation(line: 77, column: 12, scope: !17273, inlinedAt: !17246)
!17276 = !DILocation(line: 75, column: 3, scope: !17273, inlinedAt: !17246)
!17277 = !{i32 -2146994151}
!17278 = !DILocation(line: 78, column: 2, scope: !17273, inlinedAt: !17246)
!17279 = !DILocation(line: 80, column: 8, scope: !17280, inlinedAt: !17246)
!17280 = distinct !DILexicalBlock(scope: !17269, file: !10039, line: 78, column: 9)
!17281 = !DILocation(line: 80, column: 32, scope: !17280, inlinedAt: !17246)
!17282 = !DILocation(line: 79, column: 3, scope: !17280, inlinedAt: !17246)
!17283 = !{i32 -2146994019}
!17284 = !DILocation(line: 43, column: 1, scope: !17240)
!17285 = distinct !DISubprogram(name: "netif_stop_queue", scope: !31, file: !31, line: 3336, type: !406, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17286 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !17287, file: !31, line: 3324, type: !6439)
!17287 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !31, file: !31, line: 3324, type: !15196, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17288 = !DILocation(line: 3324, column: 70, scope: !17287, inlinedAt: !17289)
!17289 = distinct !DILocation(line: 3338, column: 2, scope: !17285)
!17290 = !DILocalVariable(name: "dev", arg: 1, scope: !17285, file: !31, line: 3336, type: !290)
!17291 = !DILocation(line: 3336, column: 56, scope: !17285)
!17292 = !DILocation(line: 3338, column: 42, scope: !17285)
!17293 = !DILocation(line: 3338, column: 22, scope: !17285)
!17294 = !DILocation(line: 3326, column: 35, scope: !17287, inlinedAt: !17289)
!17295 = !DILocation(line: 3326, column: 46, scope: !17287, inlinedAt: !17289)
!17296 = !DILocation(line: 3326, column: 2, scope: !17287, inlinedAt: !17289)
!17297 = !DILocation(line: 3339, column: 1, scope: !17285)
!17298 = distinct !DISubprogram(name: "ksz_stop_timer", scope: !3, file: !3, line: 4323, type: !12612, scopeLine: 4324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17299 = !DILocalVariable(name: "info", arg: 1, scope: !17298, file: !3, line: 4323, type: !9855)
!17300 = !DILocation(line: 4323, column: 51, scope: !17298)
!17301 = !DILocation(line: 4325, column: 6, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17298, file: !3, line: 4325, column: 6)
!17303 = !DILocation(line: 4325, column: 12, scope: !17302)
!17304 = !DILocation(line: 4325, column: 6, scope: !17298)
!17305 = !DILocation(line: 4326, column: 3, scope: !17306)
!17306 = distinct !DILexicalBlock(scope: !17302, file: !3, line: 4325, column: 17)
!17307 = !DILocation(line: 4326, column: 9, scope: !17306)
!17308 = !DILocation(line: 4326, column: 13, scope: !17306)
!17309 = !DILocation(line: 4327, column: 3, scope: !17306)
!17310 = !DILocation(line: 4328, column: 2, scope: !17306)
!17311 = !DILocation(line: 4329, column: 1, scope: !17298)
!17312 = distinct !DISubprogram(name: "bridge_change", scope: !3, file: !3, line: 5316, type: !8272, scopeLine: 5317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17313 = !DILocalVariable(name: "hw", arg: 1, scope: !17312, file: !3, line: 5316, type: !8002)
!17314 = !DILocation(line: 5316, column: 42, scope: !17312)
!17315 = !DILocalVariable(name: "port", scope: !17312, file: !3, line: 5318, type: !32)
!17316 = !DILocation(line: 5318, column: 6, scope: !17312)
!17317 = !DILocalVariable(name: "member", scope: !17312, file: !3, line: 5319, type: !794)
!17318 = !DILocation(line: 5319, column: 6, scope: !17312)
!17319 = !DILocalVariable(name: "sw", scope: !17312, file: !3, line: 5320, type: !7794)
!17320 = !DILocation(line: 5320, column: 21, scope: !17312)
!17321 = !DILocation(line: 5320, column: 26, scope: !17312)
!17322 = !DILocation(line: 5320, column: 30, scope: !17312)
!17323 = !DILocation(line: 5323, column: 7, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 5323, column: 6)
!17325 = !DILocation(line: 5323, column: 11, scope: !17324)
!17326 = !DILocation(line: 5323, column: 6, scope: !17312)
!17327 = !DILocation(line: 5324, column: 22, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 5323, column: 19)
!17329 = !DILocation(line: 5324, column: 3, scope: !17328)
!17330 = !DILocation(line: 5325, column: 17, scope: !17328)
!17331 = !DILocation(line: 5325, column: 3, scope: !17328)
!17332 = !DILocation(line: 5326, column: 2, scope: !17328)
!17333 = !DILocation(line: 5327, column: 12, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 5327, column: 2)
!17335 = !DILocation(line: 5327, column: 7, scope: !17334)
!17336 = !DILocation(line: 5327, column: 17, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 5327, column: 2)
!17338 = !DILocation(line: 5327, column: 22, scope: !17337)
!17339 = !DILocation(line: 5327, column: 2, scope: !17334)
!17340 = !DILocation(line: 5328, column: 31, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17342, file: !3, line: 5328, column: 7)
!17342 = distinct !DILexicalBlock(scope: !17337, file: !3, line: 5327, column: 49)
!17343 = !DILocation(line: 5328, column: 35, scope: !17341)
!17344 = !DILocation(line: 5328, column: 44, scope: !17341)
!17345 = !DILocation(line: 5328, column: 50, scope: !17341)
!17346 = !DILocation(line: 5328, column: 28, scope: !17341)
!17347 = !DILocation(line: 5328, column: 7, scope: !17342)
!17348 = !DILocation(line: 5329, column: 25, scope: !17341)
!17349 = !DILocation(line: 5329, column: 29, scope: !17341)
!17350 = !DILocation(line: 5329, column: 23, scope: !17341)
!17351 = !DILocation(line: 5329, column: 13, scope: !17341)
!17352 = !DILocation(line: 5329, column: 11, scope: !17341)
!17353 = !DILocation(line: 5329, column: 4, scope: !17341)
!17354 = !DILocation(line: 5331, column: 31, scope: !17341)
!17355 = !DILocation(line: 5331, column: 28, scope: !17341)
!17356 = !DILocation(line: 5331, column: 23, scope: !17341)
!17357 = !DILocation(line: 5331, column: 13, scope: !17341)
!17358 = !DILocation(line: 5331, column: 11, scope: !17341)
!17359 = !DILocation(line: 5332, column: 7, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17342, file: !3, line: 5332, column: 7)
!17361 = !DILocation(line: 5332, column: 17, scope: !17360)
!17362 = !DILocation(line: 5332, column: 21, scope: !17360)
!17363 = !DILocation(line: 5332, column: 30, scope: !17360)
!17364 = !DILocation(line: 5332, column: 36, scope: !17360)
!17365 = !DILocation(line: 5332, column: 14, scope: !17360)
!17366 = !DILocation(line: 5332, column: 7, scope: !17342)
!17367 = !DILocation(line: 5333, column: 26, scope: !17360)
!17368 = !DILocation(line: 5333, column: 30, scope: !17360)
!17369 = !DILocation(line: 5333, column: 36, scope: !17360)
!17370 = !DILocation(line: 5333, column: 4, scope: !17360)
!17371 = !DILocation(line: 5334, column: 2, scope: !17342)
!17372 = !DILocation(line: 5327, column: 45, scope: !17337)
!17373 = !DILocation(line: 5327, column: 2, scope: !17337)
!17374 = distinct !{!17374, !17339, !17375}
!17375 = !DILocation(line: 5334, column: 2, scope: !17334)
!17376 = !DILocation(line: 5335, column: 1, scope: !17312)
!17377 = distinct !DISubprogram(name: "hw_del_addr", scope: !3, file: !3, line: 4132, type: !14899, scopeLine: 4133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17378 = !DILocalVariable(name: "hw", arg: 1, scope: !17377, file: !3, line: 4132, type: !8002)
!17379 = !DILocation(line: 4132, column: 39, scope: !17377)
!17380 = !DILocalVariable(name: "mac_addr", arg: 2, scope: !17377, file: !3, line: 4132, type: !793)
!17381 = !DILocation(line: 4132, column: 47, scope: !17377)
!17382 = !DILocalVariable(name: "i", scope: !17377, file: !3, line: 4134, type: !32)
!17383 = !DILocation(line: 4134, column: 6, scope: !17377)
!17384 = !DILocation(line: 4136, column: 9, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17377, file: !3, line: 4136, column: 2)
!17386 = !DILocation(line: 4136, column: 7, scope: !17385)
!17387 = !DILocation(line: 4136, column: 14, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17385, file: !3, line: 4136, column: 2)
!17389 = !DILocation(line: 4136, column: 18, scope: !17388)
!17390 = !DILocation(line: 4136, column: 22, scope: !17388)
!17391 = !DILocation(line: 4136, column: 16, scope: !17388)
!17392 = !DILocation(line: 4136, column: 2, scope: !17385)
!17393 = !DILocation(line: 4137, column: 24, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17395, file: !3, line: 4137, column: 7)
!17395 = distinct !DILexicalBlock(scope: !17388, file: !3, line: 4136, column: 43)
!17396 = !DILocation(line: 4137, column: 28, scope: !17394)
!17397 = !DILocation(line: 4137, column: 36, scope: !17394)
!17398 = !DILocation(line: 4137, column: 40, scope: !17394)
!17399 = !DILocation(line: 4137, column: 7, scope: !17394)
!17400 = !DILocation(line: 4137, column: 7, scope: !17395)
!17401 = !DILocation(line: 4138, column: 18, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17394, file: !3, line: 4137, column: 51)
!17403 = !DILocation(line: 4138, column: 22, scope: !17402)
!17404 = !DILocation(line: 4138, column: 30, scope: !17402)
!17405 = !DILocation(line: 4138, column: 4, scope: !17402)
!17406 = !DILocation(line: 4139, column: 14, scope: !17402)
!17407 = !DILocation(line: 4139, column: 18, scope: !17402)
!17408 = !DILocation(line: 4139, column: 39, scope: !17402)
!17409 = !DILocation(line: 4139, column: 37, scope: !17402)
!17410 = !DILocation(line: 4139, column: 21, scope: !17402)
!17411 = !DILocation(line: 4139, column: 41, scope: !17402)
!17412 = !DILocation(line: 4139, column: 4, scope: !17402)
!17413 = !DILocation(line: 4141, column: 4, scope: !17402)
!17414 = !DILocation(line: 4143, column: 2, scope: !17395)
!17415 = !DILocation(line: 4136, column: 39, scope: !17388)
!17416 = !DILocation(line: 4136, column: 2, scope: !17388)
!17417 = distinct !{!17417, !17392, !17418}
!17418 = !DILocation(line: 4143, column: 2, scope: !17385)
!17419 = !DILocation(line: 4144, column: 2, scope: !17377)
!17420 = !DILocation(line: 4145, column: 1, scope: !17377)
!17421 = distinct !DISubprogram(name: "hw_disable", scope: !3, file: !3, line: 3942, type: !8272, scopeLine: 3943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17422 = !DILocalVariable(name: "hw", arg: 1, scope: !17421, file: !3, line: 3942, type: !8002)
!17423 = !DILocation(line: 3942, column: 39, scope: !17421)
!17424 = !DILocation(line: 3944, column: 13, scope: !17421)
!17425 = !DILocation(line: 3944, column: 2, scope: !17421)
!17426 = !DILocation(line: 3945, column: 13, scope: !17421)
!17427 = !DILocation(line: 3945, column: 2, scope: !17421)
!17428 = !DILocation(line: 3946, column: 2, scope: !17421)
!17429 = !DILocation(line: 3946, column: 6, scope: !17421)
!17430 = !DILocation(line: 3946, column: 14, scope: !17421)
!17431 = !DILocation(line: 3947, column: 1, scope: !17421)
!17432 = distinct !DISubprogram(name: "hw_clr_multicast", scope: !3, file: !3, line: 4153, type: !8272, scopeLine: 4154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17433 = !DILocalVariable(name: "hw", arg: 1, scope: !17432, file: !3, line: 4153, type: !8002)
!17434 = !DILocation(line: 4153, column: 45, scope: !17432)
!17435 = !DILocalVariable(name: "i", scope: !17432, file: !3, line: 4155, type: !32)
!17436 = !DILocation(line: 4155, column: 6, scope: !17432)
!17437 = !DILocation(line: 4157, column: 9, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17432, file: !3, line: 4157, column: 2)
!17439 = !DILocation(line: 4157, column: 7, scope: !17438)
!17440 = !DILocation(line: 4157, column: 14, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17438, file: !3, line: 4157, column: 2)
!17442 = !DILocation(line: 4157, column: 16, scope: !17441)
!17443 = !DILocation(line: 4157, column: 2, scope: !17438)
!17444 = !DILocation(line: 4158, column: 3, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17441, file: !3, line: 4157, column: 42)
!17446 = !DILocation(line: 4158, column: 7, scope: !17445)
!17447 = !DILocation(line: 4158, column: 18, scope: !17445)
!17448 = !DILocation(line: 4158, column: 21, scope: !17445)
!17449 = !DILocation(line: 4160, column: 13, scope: !17445)
!17450 = !DILocation(line: 4160, column: 17, scope: !17445)
!17451 = !DILocation(line: 4160, column: 20, scope: !17445)
!17452 = !DILocation(line: 4160, column: 50, scope: !17445)
!17453 = !DILocation(line: 4160, column: 48, scope: !17445)
!17454 = !DILocation(line: 4160, column: 3, scope: !17445)
!17455 = !DILocation(line: 4161, column: 2, scope: !17445)
!17456 = !DILocation(line: 4157, column: 38, scope: !17441)
!17457 = !DILocation(line: 4157, column: 2, scope: !17441)
!17458 = distinct !{!17458, !17443, !17459}
!17459 = !DILocation(line: 4161, column: 2, scope: !17438)
!17460 = !DILocation(line: 4162, column: 1, scope: !17432)
!17461 = distinct !DISubprogram(name: "hw_reset_pkts", scope: !3, file: !3, line: 3867, type: !10126, scopeLine: 3868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17462 = !DILocalVariable(name: "info", arg: 1, scope: !17461, file: !3, line: 3867, type: !10128)
!17463 = !DILocation(line: 3867, column: 49, scope: !17461)
!17464 = !DILocation(line: 3869, column: 14, scope: !17461)
!17465 = !DILocation(line: 3869, column: 20, scope: !17461)
!17466 = !DILocation(line: 3869, column: 2, scope: !17461)
!17467 = !DILocation(line: 3869, column: 8, scope: !17461)
!17468 = !DILocation(line: 3869, column: 12, scope: !17461)
!17469 = !DILocation(line: 3870, column: 16, scope: !17461)
!17470 = !DILocation(line: 3870, column: 22, scope: !17461)
!17471 = !DILocation(line: 3870, column: 2, scope: !17461)
!17472 = !DILocation(line: 3870, column: 8, scope: !17461)
!17473 = !DILocation(line: 3870, column: 14, scope: !17461)
!17474 = !DILocation(line: 3871, column: 15, scope: !17461)
!17475 = !DILocation(line: 3871, column: 21, scope: !17461)
!17476 = !DILocation(line: 3871, column: 26, scope: !17461)
!17477 = !DILocation(line: 3871, column: 2, scope: !17461)
!17478 = !DILocation(line: 3871, column: 8, scope: !17461)
!17479 = !DILocation(line: 3871, column: 13, scope: !17461)
!17480 = !DILocation(line: 3872, column: 1, scope: !17461)
!17481 = distinct !DISubprogram(name: "sw_clr_sta_mac_table", scope: !3, file: !3, line: 2828, type: !8272, scopeLine: 2829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17482 = !DILocalVariable(name: "hw", arg: 1, scope: !17481, file: !3, line: 2828, type: !8002)
!17483 = !DILocation(line: 2828, column: 49, scope: !17481)
!17484 = !DILocalVariable(name: "entry", scope: !17481, file: !3, line: 2830, type: !11381)
!17485 = !DILocation(line: 2830, column: 24, scope: !17481)
!17486 = !DILocalVariable(name: "i", scope: !17481, file: !3, line: 2831, type: !32)
!17487 = !DILocation(line: 2831, column: 6, scope: !17481)
!17488 = !DILocation(line: 2833, column: 9, scope: !17489)
!17489 = distinct !DILexicalBlock(scope: !17481, file: !3, line: 2833, column: 2)
!17490 = !DILocation(line: 2833, column: 7, scope: !17489)
!17491 = !DILocation(line: 2833, column: 14, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17489, file: !3, line: 2833, column: 2)
!17493 = !DILocation(line: 2833, column: 16, scope: !17492)
!17494 = !DILocation(line: 2833, column: 2, scope: !17489)
!17495 = !DILocation(line: 2834, column: 12, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 2833, column: 49)
!17497 = !DILocation(line: 2834, column: 16, scope: !17496)
!17498 = !DILocation(line: 2834, column: 28, scope: !17496)
!17499 = !DILocation(line: 2834, column: 38, scope: !17496)
!17500 = !DILocation(line: 2834, column: 9, scope: !17496)
!17501 = !DILocation(line: 2835, column: 22, scope: !17496)
!17502 = !DILocation(line: 2835, column: 26, scope: !17496)
!17503 = !DILocation(line: 2836, column: 4, scope: !17496)
!17504 = !DILocation(line: 2836, column: 11, scope: !17496)
!17505 = !DILocation(line: 2836, column: 21, scope: !17496)
!17506 = !DILocation(line: 2836, column: 28, scope: !17496)
!17507 = !DILocation(line: 2837, column: 4, scope: !17496)
!17508 = !DILocation(line: 2837, column: 11, scope: !17496)
!17509 = !DILocation(line: 2838, column: 4, scope: !17496)
!17510 = !DILocation(line: 2838, column: 11, scope: !17496)
!17511 = !DILocation(line: 2838, column: 20, scope: !17496)
!17512 = !DILocation(line: 2838, column: 27, scope: !17496)
!17513 = !DILocation(line: 2835, column: 3, scope: !17496)
!17514 = !DILocation(line: 2839, column: 2, scope: !17496)
!17515 = !DILocation(line: 2833, column: 45, scope: !17492)
!17516 = !DILocation(line: 2833, column: 2, scope: !17492)
!17517 = distinct !{!17517, !17494, !17518}
!17518 = !DILocation(line: 2839, column: 2, scope: !17489)
!17519 = !DILocation(line: 2840, column: 1, scope: !17481)
!17520 = distinct !DISubprogram(name: "set_bit", scope: !15756, file: !15756, line: 26, type: !17241, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17521 = !DILocalVariable(name: "nr", arg: 1, scope: !17522, file: !10039, line: 52, type: !998)
!17522 = distinct !DISubprogram(name: "arch_set_bit", scope: !10039, file: !10039, line: 52, type: !17241, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17523 = !DILocation(line: 52, column: 19, scope: !17522, inlinedAt: !17524)
!17524 = distinct !DILocation(line: 29, column: 2, scope: !17520)
!17525 = !DILocalVariable(name: "addr", arg: 2, scope: !17522, file: !10039, line: 52, type: !15759)
!17526 = !DILocation(line: 52, column: 47, scope: !17522, inlinedAt: !17524)
!17527 = !DILocation(line: 84, column: 74, scope: !17250, inlinedAt: !17528)
!17528 = distinct !DILocation(line: 28, column: 2, scope: !17520)
!17529 = !DILocation(line: 84, column: 84, scope: !17250, inlinedAt: !17528)
!17530 = !DILocalVariable(name: "nr", arg: 1, scope: !17520, file: !15756, line: 26, type: !998)
!17531 = !DILocation(line: 26, column: 33, scope: !17520)
!17532 = !DILocalVariable(name: "addr", arg: 2, scope: !17520, file: !15756, line: 26, type: !15759)
!17533 = !DILocation(line: 26, column: 61, scope: !17520)
!17534 = !DILocation(line: 28, column: 26, scope: !17520)
!17535 = !DILocation(line: 28, column: 33, scope: !17520)
!17536 = !DILocation(line: 28, column: 31, scope: !17520)
!17537 = !DILocation(line: 86, column: 20, scope: !17250, inlinedAt: !17528)
!17538 = !DILocation(line: 86, column: 23, scope: !17250, inlinedAt: !17528)
!17539 = !DILocation(line: 86, column: 2, scope: !17250, inlinedAt: !17528)
!17540 = !DILocation(line: 87, column: 2, scope: !17250, inlinedAt: !17528)
!17541 = !DILocation(line: 29, column: 15, scope: !17520)
!17542 = !DILocation(line: 29, column: 19, scope: !17520)
!17543 = !DILocation(line: 54, column: 27, scope: !17544, inlinedAt: !17524)
!17544 = distinct !DILexicalBlock(scope: !17522, file: !10039, line: 54, column: 6)
!17545 = !DILocation(line: 54, column: 6, scope: !17544, inlinedAt: !17524)
!17546 = !DILocation(line: 54, column: 6, scope: !17522, inlinedAt: !17524)
!17547 = !DILocation(line: 56, column: 6, scope: !17548, inlinedAt: !17524)
!17548 = distinct !DILexicalBlock(scope: !17544, file: !10039, line: 54, column: 32)
!17549 = !DILocation(line: 57, column: 12, scope: !17548, inlinedAt: !17524)
!17550 = !DILocation(line: 55, column: 3, scope: !17548, inlinedAt: !17524)
!17551 = !{i32 -2146995105}
!17552 = !DILocation(line: 59, column: 2, scope: !17548, inlinedAt: !17524)
!17553 = !DILocation(line: 61, column: 8, scope: !17554, inlinedAt: !17524)
!17554 = distinct !DILexicalBlock(scope: !17544, file: !10039, line: 59, column: 9)
!17555 = !DILocation(line: 61, column: 32, scope: !17554, inlinedAt: !17524)
!17556 = !DILocation(line: 60, column: 3, scope: !17554, inlinedAt: !17524)
!17557 = !{i32 -2146994973}
!17558 = !DILocation(line: 30, column: 1, scope: !17520)
!17559 = distinct !DISubprogram(name: "sw_block_addr", scope: !3, file: !3, line: 2874, type: !8272, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17560 = !DILocalVariable(name: "hw", arg: 1, scope: !17559, file: !3, line: 2874, type: !8002)
!17561 = !DILocation(line: 2874, column: 42, scope: !17559)
!17562 = !DILocalVariable(name: "entry", scope: !17559, file: !3, line: 2876, type: !11381)
!17563 = !DILocation(line: 2876, column: 24, scope: !17559)
!17564 = !DILocalVariable(name: "i", scope: !17559, file: !3, line: 2877, type: !32)
!17565 = !DILocation(line: 2877, column: 6, scope: !17559)
!17566 = !DILocation(line: 2879, column: 9, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17559, file: !3, line: 2879, column: 2)
!17568 = !DILocation(line: 2879, column: 7, scope: !17567)
!17569 = !DILocation(line: 2879, column: 28, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17567, file: !3, line: 2879, column: 2)
!17571 = !DILocation(line: 2879, column: 30, scope: !17570)
!17572 = !DILocation(line: 2879, column: 2, scope: !17567)
!17573 = !DILocation(line: 2880, column: 12, scope: !17574)
!17574 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 2879, column: 55)
!17575 = !DILocation(line: 2880, column: 16, scope: !17574)
!17576 = !DILocation(line: 2880, column: 28, scope: !17574)
!17577 = !DILocation(line: 2880, column: 38, scope: !17574)
!17578 = !DILocation(line: 2880, column: 9, scope: !17574)
!17579 = !DILocation(line: 2881, column: 3, scope: !17574)
!17580 = !DILocation(line: 2881, column: 10, scope: !17574)
!17581 = !DILocation(line: 2881, column: 16, scope: !17574)
!17582 = !DILocation(line: 2882, column: 22, scope: !17574)
!17583 = !DILocation(line: 2882, column: 26, scope: !17574)
!17584 = !DILocation(line: 2883, column: 4, scope: !17574)
!17585 = !DILocation(line: 2883, column: 11, scope: !17574)
!17586 = !DILocation(line: 2883, column: 21, scope: !17574)
!17587 = !DILocation(line: 2883, column: 28, scope: !17574)
!17588 = !DILocation(line: 2884, column: 4, scope: !17574)
!17589 = !DILocation(line: 2884, column: 11, scope: !17574)
!17590 = !DILocation(line: 2884, column: 21, scope: !17574)
!17591 = !DILocation(line: 2884, column: 28, scope: !17574)
!17592 = !DILocation(line: 2885, column: 4, scope: !17574)
!17593 = !DILocation(line: 2885, column: 11, scope: !17574)
!17594 = !DILocation(line: 2885, column: 20, scope: !17574)
!17595 = !DILocation(line: 2885, column: 27, scope: !17574)
!17596 = !DILocation(line: 2882, column: 3, scope: !17574)
!17597 = !DILocation(line: 2886, column: 2, scope: !17574)
!17598 = !DILocation(line: 2879, column: 51, scope: !17570)
!17599 = !DILocation(line: 2879, column: 2, scope: !17570)
!17600 = distinct !{!17600, !17572, !17601}
!17601 = !DILocation(line: 2886, column: 2, scope: !17567)
!17602 = !DILocation(line: 2887, column: 1, scope: !17559)
!17603 = distinct !DISubprogram(name: "eth_zero_addr", scope: !9927, file: !9927, line: 249, type: !17604, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17604 = !DISubroutineType(types: !17605)
!17605 = !{null, !793}
!17606 = !DILocalVariable(name: "addr", arg: 1, scope: !17603, file: !9927, line: 249, type: !793)
!17607 = !DILocation(line: 249, column: 38, scope: !17603)
!17608 = !DILocation(line: 251, column: 9, scope: !17603)
!17609 = !DILocation(line: 251, column: 2, scope: !17603)
!17610 = !DILocation(line: 252, column: 1, scope: !17603)
!17611 = distinct !DISubprogram(name: "hw_stop_rx", scope: !3, file: !3, line: 3907, type: !8272, scopeLine: 3908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17612 = !DILocalVariable(name: "hw", arg: 1, scope: !17611, file: !3, line: 3907, type: !8002)
!17613 = !DILocation(line: 3907, column: 39, scope: !17611)
!17614 = !DILocation(line: 3909, column: 2, scope: !17611)
!17615 = !DILocation(line: 3909, column: 6, scope: !17611)
!17616 = !DILocation(line: 3909, column: 14, scope: !17611)
!17617 = !DILocation(line: 3910, column: 19, scope: !17611)
!17618 = !DILocation(line: 3910, column: 2, scope: !17611)
!17619 = !DILocation(line: 3911, column: 10, scope: !17611)
!17620 = !DILocation(line: 3911, column: 14, scope: !17611)
!17621 = !DILocation(line: 3911, column: 21, scope: !17611)
!17622 = !DILocation(line: 3911, column: 40, scope: !17611)
!17623 = !DILocation(line: 3911, column: 44, scope: !17611)
!17624 = !DILocation(line: 3911, column: 47, scope: !17611)
!17625 = !DILocation(line: 3911, column: 2, scope: !17611)
!17626 = !DILocation(line: 3912, column: 1, scope: !17611)
!17627 = distinct !DISubprogram(name: "hw_stop_tx", scope: !3, file: !3, line: 3931, type: !8272, scopeLine: 3932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17628 = !DILocalVariable(name: "hw", arg: 1, scope: !17627, file: !3, line: 3931, type: !8002)
!17629 = !DILocation(line: 3931, column: 39, scope: !17627)
!17630 = !DILocation(line: 3933, column: 10, scope: !17627)
!17631 = !DILocation(line: 3933, column: 14, scope: !17627)
!17632 = !DILocation(line: 3933, column: 21, scope: !17627)
!17633 = !DILocation(line: 3933, column: 40, scope: !17627)
!17634 = !DILocation(line: 3933, column: 44, scope: !17627)
!17635 = !DILocation(line: 3933, column: 47, scope: !17627)
!17636 = !DILocation(line: 3933, column: 2, scope: !17627)
!17637 = !DILocation(line: 3934, column: 1, scope: !17627)
!17638 = distinct !DISubprogram(name: "hw_turn_off_intr", scope: !3, file: !3, line: 1521, type: !12069, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17639 = !DILocalVariable(name: "hw", arg: 1, scope: !17638, file: !3, line: 1521, type: !8002)
!17640 = !DILocation(line: 1521, column: 52, scope: !17638)
!17641 = !DILocalVariable(name: "interrupt", arg: 2, scope: !17638, file: !3, line: 1521, type: !7840)
!17642 = !DILocation(line: 1521, column: 61, scope: !17638)
!17643 = !DILocalVariable(name: "read_intr", scope: !17638, file: !3, line: 1523, type: !987)
!17644 = !DILocation(line: 1523, column: 6, scope: !17638)
!17645 = !DILocation(line: 1525, column: 20, scope: !17638)
!17646 = !DILocation(line: 1525, column: 24, scope: !17638)
!17647 = !DILocation(line: 1525, column: 27, scope: !17638)
!17648 = !DILocation(line: 1525, column: 14, scope: !17638)
!17649 = !DILocation(line: 1525, column: 12, scope: !17638)
!17650 = !DILocation(line: 1526, column: 17, scope: !17638)
!17651 = !DILocation(line: 1526, column: 30, scope: !17638)
!17652 = !DILocation(line: 1526, column: 29, scope: !17638)
!17653 = !DILocation(line: 1526, column: 27, scope: !17638)
!17654 = !DILocation(line: 1526, column: 2, scope: !17638)
!17655 = !DILocation(line: 1526, column: 6, scope: !17638)
!17656 = !DILocation(line: 1526, column: 15, scope: !17638)
!17657 = !DILocation(line: 1527, column: 9, scope: !17638)
!17658 = !DILocation(line: 1527, column: 13, scope: !17638)
!17659 = !DILocation(line: 1527, column: 23, scope: !17638)
!17660 = !DILocation(line: 1527, column: 27, scope: !17638)
!17661 = !DILocation(line: 1527, column: 30, scope: !17638)
!17662 = !DILocation(line: 1527, column: 2, scope: !17638)
!17663 = !DILocation(line: 1528, column: 18, scope: !17638)
!17664 = !DILocation(line: 1528, column: 22, scope: !17638)
!17665 = !DILocation(line: 1528, column: 2, scope: !17638)
!17666 = !DILocation(line: 1529, column: 1, scope: !17638)
!17667 = distinct !DISubprogram(name: "skb_end_pointer", scope: !417, file: !417, line: 1404, type: !16659, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17668 = !DILocalVariable(name: "skb", arg: 1, scope: !17667, file: !417, line: 1404, type: !6053)
!17669 = !DILocation(line: 1404, column: 68, scope: !17667)
!17670 = !DILocation(line: 1406, column: 9, scope: !17667)
!17671 = !DILocation(line: 1406, column: 14, scope: !17667)
!17672 = !DILocation(line: 1406, column: 21, scope: !17667)
!17673 = !DILocation(line: 1406, column: 26, scope: !17667)
!17674 = !DILocation(line: 1406, column: 19, scope: !17667)
!17675 = !DILocation(line: 1406, column: 2, scope: !17667)
!17676 = distinct !DISubprogram(name: "copy_old_skb", scope: !3, file: !3, line: 4806, type: !17677, scopeLine: 4807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17677 = !DISubroutineType(types: !17678)
!17678 = !{null, !415, !415}
!17679 = !DILocalVariable(name: "old", arg: 1, scope: !17676, file: !3, line: 4806, type: !415)
!17680 = !DILocation(line: 4806, column: 49, scope: !17676)
!17681 = !DILocalVariable(name: "skb", arg: 2, scope: !17676, file: !3, line: 4806, type: !415)
!17682 = !DILocation(line: 4806, column: 70, scope: !17676)
!17683 = !DILocation(line: 4808, column: 13, scope: !17676)
!17684 = !DILocation(line: 4808, column: 18, scope: !17676)
!17685 = !DILocation(line: 4808, column: 2, scope: !17676)
!17686 = !DILocation(line: 4808, column: 7, scope: !17676)
!17687 = !DILocation(line: 4808, column: 11, scope: !17676)
!17688 = !DILocation(line: 4809, column: 18, scope: !17676)
!17689 = !DILocation(line: 4809, column: 23, scope: !17676)
!17690 = !DILocation(line: 4809, column: 2, scope: !17676)
!17691 = !DILocation(line: 4809, column: 7, scope: !17676)
!17692 = !DILocation(line: 4809, column: 16, scope: !17676)
!17693 = !DILocation(line: 4810, column: 19, scope: !17676)
!17694 = !DILocation(line: 4810, column: 24, scope: !17676)
!17695 = !DILocation(line: 4810, column: 2, scope: !17676)
!17696 = !DILocation(line: 4810, column: 7, scope: !17676)
!17697 = !DILocation(line: 4810, column: 17, scope: !17676)
!17698 = !DILocation(line: 4811, column: 14, scope: !17676)
!17699 = !DILocation(line: 4811, column: 19, scope: !17676)
!17700 = !DILocation(line: 4811, column: 2, scope: !17676)
!17701 = !DILocation(line: 4811, column: 7, scope: !17676)
!17702 = !DILocation(line: 4811, column: 12, scope: !17676)
!17703 = !DILocation(line: 4812, column: 25, scope: !17676)
!17704 = !DILocation(line: 4812, column: 2, scope: !17676)
!17705 = !DILocation(line: 4814, column: 22, scope: !17676)
!17706 = !DILocation(line: 4814, column: 2, scope: !17676)
!17707 = !DILocation(line: 4815, column: 1, scope: !17676)
!17708 = distinct !DISubprogram(name: "hw_alloc_pkt", scope: !3, file: !3, line: 3972, type: !17709, scopeLine: 3973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17709 = !DISubroutineType(types: !17710)
!17710 = !{!32, !8002, !32, !32}
!17711 = !DILocalVariable(name: "hw", arg: 1, scope: !17708, file: !3, line: 3972, type: !8002)
!17712 = !DILocation(line: 3972, column: 40, scope: !17708)
!17713 = !DILocalVariable(name: "length", arg: 2, scope: !17708, file: !3, line: 3972, type: !32)
!17714 = !DILocation(line: 3972, column: 48, scope: !17708)
!17715 = !DILocalVariable(name: "physical", arg: 3, scope: !17708, file: !3, line: 3972, type: !32)
!17716 = !DILocation(line: 3972, column: 60, scope: !17708)
!17717 = !DILocation(line: 3975, column: 6, scope: !17718)
!17718 = distinct !DILexicalBlock(scope: !17708, file: !3, line: 3975, column: 6)
!17719 = !DILocation(line: 3975, column: 10, scope: !17718)
!17720 = !DILocation(line: 3975, column: 23, scope: !17718)
!17721 = !DILocation(line: 3975, column: 29, scope: !17718)
!17722 = !DILocation(line: 3975, column: 6, scope: !17708)
!17723 = !DILocation(line: 3976, column: 3, scope: !17718)
!17724 = !DILocation(line: 3979, column: 14, scope: !17708)
!17725 = !DILocation(line: 3979, column: 18, scope: !17708)
!17726 = !DILocation(line: 3979, column: 33, scope: !17708)
!17727 = !DILocation(line: 3979, column: 37, scope: !17708)
!17728 = !DILocation(line: 3979, column: 50, scope: !17708)
!17729 = !DILocation(line: 3979, column: 2, scope: !17708)
!17730 = !DILocation(line: 3980, column: 2, scope: !17708)
!17731 = !DILocation(line: 3980, column: 6, scope: !17708)
!17732 = !DILocation(line: 3980, column: 19, scope: !17708)
!17733 = !DILocation(line: 3980, column: 24, scope: !17708)
!17734 = !DILocation(line: 3980, column: 27, scope: !17708)
!17735 = !DILocation(line: 3980, column: 31, scope: !17708)
!17736 = !DILocation(line: 3980, column: 34, scope: !17708)
!17737 = !DILocation(line: 3980, column: 44, scope: !17708)
!17738 = !DILocation(line: 3983, column: 4, scope: !17708)
!17739 = !DILocation(line: 3983, column: 8, scope: !17708)
!17740 = !DILocation(line: 3983, column: 2, scope: !17708)
!17741 = !DILocation(line: 3984, column: 17, scope: !17708)
!17742 = !DILocation(line: 3984, column: 2, scope: !17708)
!17743 = !DILocation(line: 3984, column: 6, scope: !17708)
!17744 = !DILocation(line: 3984, column: 14, scope: !17708)
!17745 = !DILocation(line: 3987, column: 6, scope: !17746)
!17746 = distinct !DILexicalBlock(scope: !17708, file: !3, line: 3987, column: 6)
!17747 = !DILocation(line: 3987, column: 10, scope: !17746)
!17748 = !DILocation(line: 3987, column: 18, scope: !17746)
!17749 = !DILocation(line: 3987, column: 6, scope: !17708)
!17750 = !DILocation(line: 3988, column: 20, scope: !17746)
!17751 = !DILocation(line: 3988, column: 24, scope: !17746)
!17752 = !DILocation(line: 3988, column: 36, scope: !17746)
!17753 = !DILocation(line: 3988, column: 3, scope: !17746)
!17754 = !DILocation(line: 3988, column: 7, scope: !17746)
!17755 = !DILocation(line: 3988, column: 18, scope: !17746)
!17756 = !DILocation(line: 3990, column: 6, scope: !17757)
!17757 = distinct !DILexicalBlock(scope: !17708, file: !3, line: 3990, column: 6)
!17758 = !DILocation(line: 3990, column: 17, scope: !17757)
!17759 = !DILocation(line: 3990, column: 21, scope: !17757)
!17760 = !DILocation(line: 3990, column: 34, scope: !17757)
!17761 = !DILocation(line: 3990, column: 15, scope: !17757)
!17762 = !DILocation(line: 3990, column: 6, scope: !17708)
!17763 = !DILocation(line: 3991, column: 3, scope: !17757)
!17764 = !DILocation(line: 3993, column: 9, scope: !17708)
!17765 = !DILocation(line: 3993, column: 13, scope: !17708)
!17766 = !DILocation(line: 3993, column: 26, scope: !17708)
!17767 = !DILocation(line: 3993, column: 2, scope: !17708)
!17768 = !DILocation(line: 3994, column: 1, scope: !17708)
!17769 = distinct !DISubprogram(name: "send_packet", scope: !3, file: !3, line: 4629, type: !17770, scopeLine: 4630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17770 = !DISubroutineType(types: !17771)
!17771 = !{null, !415, !290}
!17772 = !DILocalVariable(name: "skb", arg: 1, scope: !17769, file: !3, line: 4629, type: !415)
!17773 = !DILocation(line: 4629, column: 41, scope: !17769)
!17774 = !DILocalVariable(name: "dev", arg: 2, scope: !17769, file: !3, line: 4629, type: !290)
!17775 = !DILocation(line: 4629, column: 65, scope: !17769)
!17776 = !DILocalVariable(name: "desc", scope: !17769, file: !3, line: 4631, type: !7875)
!17777 = !DILocation(line: 4631, column: 19, scope: !17769)
!17778 = !DILocalVariable(name: "first", scope: !17769, file: !3, line: 4632, type: !7875)
!17779 = !DILocation(line: 4632, column: 19, scope: !17769)
!17780 = !DILocalVariable(name: "priv", scope: !17769, file: !3, line: 4633, type: !7985)
!17781 = !DILocation(line: 4633, column: 19, scope: !17769)
!17782 = !DILocation(line: 4633, column: 38, scope: !17769)
!17783 = !DILocation(line: 4633, column: 26, scope: !17769)
!17784 = !DILocalVariable(name: "hw_priv", scope: !17769, file: !3, line: 4634, type: !7512)
!17785 = !DILocation(line: 4634, column: 19, scope: !17769)
!17786 = !DILocation(line: 4634, column: 29, scope: !17769)
!17787 = !DILocation(line: 4634, column: 35, scope: !17769)
!17788 = !DILocalVariable(name: "hw", scope: !17769, file: !3, line: 4635, type: !8002)
!17789 = !DILocation(line: 4635, column: 17, scope: !17769)
!17790 = !DILocation(line: 4635, column: 23, scope: !17769)
!17791 = !DILocation(line: 4635, column: 32, scope: !17769)
!17792 = !DILocalVariable(name: "info", scope: !17769, file: !3, line: 4636, type: !10128)
!17793 = !DILocation(line: 4636, column: 24, scope: !17769)
!17794 = !DILocation(line: 4636, column: 32, scope: !17769)
!17795 = !DILocation(line: 4636, column: 36, scope: !17769)
!17796 = !DILocalVariable(name: "dma_buf", scope: !17769, file: !3, line: 4637, type: !8036)
!17797 = !DILocation(line: 4637, column: 22, scope: !17769)
!17798 = !DILocalVariable(name: "len", scope: !17769, file: !3, line: 4638, type: !32)
!17799 = !DILocation(line: 4638, column: 6, scope: !17769)
!17800 = !DILocalVariable(name: "last_frag", scope: !17769, file: !3, line: 4639, type: !32)
!17801 = !DILocation(line: 4639, column: 6, scope: !17769)
!17802 = !DILocation(line: 4639, column: 18, scope: !17769)
!17803 = !DILocation(line: 4639, column: 35, scope: !17769)
!17804 = !DILocation(line: 4645, column: 6, scope: !17805)
!17805 = distinct !DILexicalBlock(scope: !17769, file: !3, line: 4645, column: 6)
!17806 = !DILocation(line: 4645, column: 10, scope: !17805)
!17807 = !DILocation(line: 4645, column: 20, scope: !17805)
!17808 = !DILocation(line: 4645, column: 6, scope: !17769)
!17809 = !DILocation(line: 4646, column: 24, scope: !17805)
!17810 = !DILocation(line: 4646, column: 30, scope: !17805)
!17811 = !DILocation(line: 4646, column: 35, scope: !17805)
!17812 = !DILocation(line: 4646, column: 21, scope: !17805)
!17813 = !DILocation(line: 4646, column: 3, scope: !17805)
!17814 = !DILocation(line: 4646, column: 7, scope: !17805)
!17815 = !DILocation(line: 4646, column: 17, scope: !17805)
!17816 = !DILocation(line: 4649, column: 8, scope: !17769)
!17817 = !DILocation(line: 4649, column: 13, scope: !17769)
!17818 = !DILocation(line: 4649, column: 6, scope: !17769)
!17819 = !DILocation(line: 4652, column: 10, scope: !17769)
!17820 = !DILocation(line: 4652, column: 16, scope: !17769)
!17821 = !DILocation(line: 4652, column: 8, scope: !17769)
!17822 = !DILocation(line: 4653, column: 9, scope: !17769)
!17823 = !DILocation(line: 4653, column: 7, scope: !17769)
!17824 = !DILocation(line: 4655, column: 12, scope: !17769)
!17825 = !DILocation(line: 4655, column: 10, scope: !17769)
!17826 = !DILocation(line: 4656, column: 6, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17769, file: !3, line: 4656, column: 6)
!17828 = !DILocation(line: 4656, column: 6, scope: !17769)
!17829 = !DILocalVariable(name: "frag", scope: !17830, file: !3, line: 4657, type: !32)
!17830 = distinct !DILexicalBlock(scope: !17827, file: !3, line: 4656, column: 17)
!17831 = !DILocation(line: 4657, column: 7, scope: !17830)
!17832 = !DILocalVariable(name: "this_frag", scope: !17830, file: !3, line: 4658, type: !17833)
!17833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8076, size: 64)
!17834 = !DILocation(line: 4658, column: 15, scope: !17830)
!17835 = !DILocation(line: 4660, column: 30, scope: !17830)
!17836 = !DILocation(line: 4660, column: 18, scope: !17830)
!17837 = !DILocation(line: 4660, column: 3, scope: !17830)
!17838 = !DILocation(line: 4660, column: 12, scope: !17830)
!17839 = !DILocation(line: 4660, column: 16, scope: !17830)
!17840 = !DILocation(line: 4662, column: 18, scope: !17830)
!17841 = !DILocation(line: 4662, column: 3, scope: !17830)
!17842 = !DILocation(line: 4662, column: 12, scope: !17830)
!17843 = !DILocation(line: 4662, column: 16, scope: !17830)
!17844 = !DILocation(line: 4664, column: 14, scope: !17830)
!17845 = !DILocation(line: 4664, column: 20, scope: !17830)
!17846 = !DILocation(line: 4664, column: 29, scope: !17830)
!17847 = !DILocation(line: 4664, column: 3, scope: !17830)
!17848 = !DILocation(line: 4665, column: 14, scope: !17830)
!17849 = !DILocation(line: 4665, column: 20, scope: !17830)
!17850 = !DILocation(line: 4665, column: 29, scope: !17830)
!17851 = !DILocation(line: 4665, column: 3, scope: !17830)
!17852 = !DILocation(line: 4667, column: 8, scope: !17830)
!17853 = !DILocation(line: 4668, column: 3, scope: !17830)
!17854 = !DILocation(line: 4669, column: 17, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 4668, column: 6)
!17856 = !DILocation(line: 4669, column: 34, scope: !17855)
!17857 = !DILocation(line: 4669, column: 40, scope: !17855)
!17858 = !DILocation(line: 4669, column: 14, scope: !17855)
!17859 = !DILocation(line: 4672, column: 15, scope: !17855)
!17860 = !DILocation(line: 4672, column: 4, scope: !17855)
!17861 = !DILocation(line: 4675, column: 6, scope: !17855)
!17862 = !DILocation(line: 4675, column: 10, scope: !17855)
!17863 = !DILocation(line: 4675, column: 4, scope: !17855)
!17864 = !DILocation(line: 4677, column: 14, scope: !17855)
!17865 = !DILocation(line: 4677, column: 12, scope: !17855)
!17866 = !DILocation(line: 4678, column: 33, scope: !17855)
!17867 = !DILocation(line: 4678, column: 19, scope: !17855)
!17868 = !DILocation(line: 4678, column: 4, scope: !17855)
!17869 = !DILocation(line: 4678, column: 13, scope: !17855)
!17870 = !DILocation(line: 4678, column: 17, scope: !17855)
!17871 = !DILocation(line: 4680, column: 19, scope: !17855)
!17872 = !DILocation(line: 4680, column: 4, scope: !17855)
!17873 = !DILocation(line: 4680, column: 13, scope: !17855)
!17874 = !DILocation(line: 4680, column: 17, scope: !17855)
!17875 = !DILocation(line: 4684, column: 15, scope: !17855)
!17876 = !DILocation(line: 4684, column: 21, scope: !17855)
!17877 = !DILocation(line: 4684, column: 30, scope: !17855)
!17878 = !DILocation(line: 4684, column: 4, scope: !17855)
!17879 = !DILocation(line: 4685, column: 15, scope: !17855)
!17880 = !DILocation(line: 4685, column: 21, scope: !17855)
!17881 = !DILocation(line: 4685, column: 30, scope: !17855)
!17882 = !DILocation(line: 4685, column: 4, scope: !17855)
!17883 = !DILocation(line: 4687, column: 8, scope: !17855)
!17884 = !DILocation(line: 4688, column: 8, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 4688, column: 8)
!17886 = !DILocation(line: 4688, column: 16, scope: !17885)
!17887 = !DILocation(line: 4688, column: 13, scope: !17885)
!17888 = !DILocation(line: 4688, column: 8, scope: !17855)
!17889 = !DILocation(line: 4689, column: 5, scope: !17885)
!17890 = !DILocation(line: 4692, column: 17, scope: !17855)
!17891 = !DILocation(line: 4692, column: 4, scope: !17855)
!17892 = !DILocation(line: 4693, column: 3, scope: !17855)
!17893 = distinct !{!17893, !17853, !17894}
!17894 = !DILocation(line: 4693, column: 13, scope: !17830)
!17895 = !DILocation(line: 4696, column: 15, scope: !17830)
!17896 = !DILocation(line: 4696, column: 3, scope: !17830)
!17897 = !DILocation(line: 4696, column: 9, scope: !17830)
!17898 = !DILocation(line: 4696, column: 13, scope: !17830)
!17899 = !DILocation(line: 4699, column: 16, scope: !17830)
!17900 = !DILocation(line: 4699, column: 3, scope: !17830)
!17901 = !DILocation(line: 4700, column: 2, scope: !17830)
!17902 = !DILocation(line: 4701, column: 18, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17827, file: !3, line: 4700, column: 9)
!17904 = !DILocation(line: 4701, column: 3, scope: !17903)
!17905 = !DILocation(line: 4701, column: 12, scope: !17903)
!17906 = !DILocation(line: 4701, column: 16, scope: !17903)
!17907 = !DILocation(line: 4703, column: 18, scope: !17903)
!17908 = !DILocation(line: 4703, column: 3, scope: !17903)
!17909 = !DILocation(line: 4703, column: 12, scope: !17903)
!17910 = !DILocation(line: 4703, column: 16, scope: !17903)
!17911 = !DILocation(line: 4705, column: 14, scope: !17903)
!17912 = !DILocation(line: 4705, column: 20, scope: !17903)
!17913 = !DILocation(line: 4705, column: 29, scope: !17903)
!17914 = !DILocation(line: 4705, column: 3, scope: !17903)
!17915 = !DILocation(line: 4706, column: 14, scope: !17903)
!17916 = !DILocation(line: 4706, column: 20, scope: !17903)
!17917 = !DILocation(line: 4706, column: 29, scope: !17903)
!17918 = !DILocation(line: 4706, column: 3, scope: !17903)
!17919 = !DILocation(line: 4709, column: 6, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17769, file: !3, line: 4709, column: 6)
!17921 = !DILocation(line: 4709, column: 11, scope: !17920)
!17922 = !DILocation(line: 4709, column: 21, scope: !17920)
!17923 = !DILocation(line: 4709, column: 6, scope: !17769)
!17924 = !DILocation(line: 4710, column: 4, scope: !17925)
!17925 = distinct !DILexicalBlock(scope: !17920, file: !3, line: 4709, column: 42)
!17926 = !DILocation(line: 4710, column: 11, scope: !17925)
!17927 = !DILocation(line: 4710, column: 14, scope: !17925)
!17928 = !DILocation(line: 4710, column: 18, scope: !17925)
!17929 = !DILocation(line: 4710, column: 21, scope: !17925)
!17930 = !DILocation(line: 4710, column: 34, scope: !17925)
!17931 = !DILocation(line: 4711, column: 4, scope: !17925)
!17932 = !DILocation(line: 4711, column: 11, scope: !17925)
!17933 = !DILocation(line: 4711, column: 14, scope: !17925)
!17934 = !DILocation(line: 4711, column: 18, scope: !17925)
!17935 = !DILocation(line: 4711, column: 21, scope: !17925)
!17936 = !DILocation(line: 4711, column: 34, scope: !17925)
!17937 = !DILocation(line: 4712, column: 2, scope: !17925)
!17938 = !DILocation(line: 4718, column: 17, scope: !17769)
!17939 = !DILocation(line: 4718, column: 2, scope: !17769)
!17940 = !DILocation(line: 4718, column: 11, scope: !17769)
!17941 = !DILocation(line: 4718, column: 15, scope: !17769)
!17942 = !DILocation(line: 4720, column: 14, scope: !17769)
!17943 = !DILocation(line: 4720, column: 2, scope: !17769)
!17944 = !DILocation(line: 4723, column: 2, scope: !17769)
!17945 = !DILocation(line: 4723, column: 7, scope: !17769)
!17946 = !DILocation(line: 4723, column: 13, scope: !17769)
!17947 = !DILocation(line: 4723, column: 23, scope: !17769)
!17948 = !DILocation(line: 4724, column: 25, scope: !17769)
!17949 = !DILocation(line: 4724, column: 2, scope: !17769)
!17950 = !DILocation(line: 4724, column: 7, scope: !17769)
!17951 = !DILocation(line: 4724, column: 13, scope: !17769)
!17952 = !DILocation(line: 4724, column: 22, scope: !17769)
!17953 = !DILocation(line: 4725, column: 1, scope: !17769)
!17954 = distinct !DISubprogram(name: "dev_consume_skb_any", scope: !31, file: !31, line: 3822, type: !469, scopeLine: 3823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17955 = !DILocalVariable(name: "skb", arg: 1, scope: !17954, file: !31, line: 3822, type: !415)
!17956 = !DILocation(line: 3822, column: 56, scope: !17954)
!17957 = !DILocation(line: 3824, column: 22, scope: !17954)
!17958 = !DILocation(line: 3824, column: 2, scope: !17954)
!17959 = !DILocation(line: 3825, column: 1, scope: !17954)
!17960 = distinct !DISubprogram(name: "get_tx_pkt", scope: !3, file: !3, line: 1627, type: !16685, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17961 = !DILocalVariable(name: "info", arg: 1, scope: !17960, file: !3, line: 1627, type: !10128)
!17962 = !DILocation(line: 1627, column: 53, scope: !17960)
!17963 = !DILocalVariable(name: "desc", arg: 2, scope: !17960, file: !3, line: 1628, type: !16687)
!17964 = !DILocation(line: 1628, column: 20, scope: !17960)
!17965 = !DILocation(line: 1630, column: 11, scope: !17960)
!17966 = !DILocation(line: 1630, column: 17, scope: !17960)
!17967 = !DILocation(line: 1630, column: 22, scope: !17960)
!17968 = !DILocation(line: 1630, column: 28, scope: !17960)
!17969 = !DILocation(line: 1630, column: 3, scope: !17960)
!17970 = !DILocation(line: 1630, column: 8, scope: !17960)
!17971 = !DILocation(line: 1631, column: 2, scope: !17960)
!17972 = !DILocation(line: 1631, column: 8, scope: !17960)
!17973 = !DILocation(line: 1631, column: 12, scope: !17960)
!17974 = !DILocation(line: 1632, column: 16, scope: !17960)
!17975 = !DILocation(line: 1632, column: 22, scope: !17960)
!17976 = !DILocation(line: 1632, column: 2, scope: !17960)
!17977 = !DILocation(line: 1632, column: 8, scope: !17960)
!17978 = !DILocation(line: 1632, column: 13, scope: !17960)
!17979 = !DILocation(line: 1633, column: 2, scope: !17960)
!17980 = !DILocation(line: 1633, column: 8, scope: !17960)
!17981 = !DILocation(line: 1633, column: 13, scope: !17960)
!17982 = !DILocation(line: 1634, column: 4, scope: !17960)
!17983 = !DILocation(line: 1634, column: 3, scope: !17960)
!17984 = !DILocation(line: 1634, column: 11, scope: !17960)
!17985 = !DILocation(line: 1634, column: 14, scope: !17960)
!17986 = !DILocation(line: 1634, column: 18, scope: !17960)
!17987 = !DILocation(line: 1634, column: 23, scope: !17960)
!17988 = !DILocation(line: 1635, column: 1, scope: !17960)
!17989 = distinct !DISubprogram(name: "skb_headlen", scope: !417, file: !417, line: 2110, type: !17990, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17990 = !DISubroutineType(types: !17991)
!17991 = !{!7, !6053}
!17992 = !DILocalVariable(name: "skb", arg: 1, scope: !17989, file: !417, line: 2110, type: !6053)
!17993 = !DILocation(line: 2110, column: 62, scope: !17989)
!17994 = !DILocation(line: 2112, column: 9, scope: !17989)
!17995 = !DILocation(line: 2112, column: 14, scope: !17989)
!17996 = !DILocation(line: 2112, column: 20, scope: !17989)
!17997 = !DILocation(line: 2112, column: 25, scope: !17989)
!17998 = !DILocation(line: 2112, column: 18, scope: !17989)
!17999 = !DILocation(line: 2112, column: 2, scope: !17989)
!18000 = distinct !DISubprogram(name: "set_tx_buf", scope: !3, file: !3, line: 1637, type: !16813, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18001 = !DILocalVariable(name: "desc", arg: 1, scope: !18000, file: !3, line: 1637, type: !7875)
!18002 = !DILocation(line: 1637, column: 48, scope: !18000)
!18003 = !DILocalVariable(name: "addr", arg: 2, scope: !18000, file: !3, line: 1637, type: !987)
!18004 = !DILocation(line: 1637, column: 58, scope: !18000)
!18005 = !DILocation(line: 1639, column: 20, scope: !18000)
!18006 = !DILocation(line: 1639, column: 2, scope: !18000)
!18007 = !DILocation(line: 1639, column: 8, scope: !18000)
!18008 = !DILocation(line: 1639, column: 13, scope: !18000)
!18009 = !DILocation(line: 1639, column: 18, scope: !18000)
!18010 = !DILocation(line: 1640, column: 1, scope: !18000)
!18011 = distinct !DISubprogram(name: "set_tx_len", scope: !3, file: !3, line: 1642, type: !16813, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18012 = !DILocalVariable(name: "desc", arg: 1, scope: !18011, file: !3, line: 1642, type: !7875)
!18013 = !DILocation(line: 1642, column: 48, scope: !18011)
!18014 = !DILocalVariable(name: "len", arg: 2, scope: !18011, file: !3, line: 1642, type: !987)
!18015 = !DILocation(line: 1642, column: 58, scope: !18011)
!18016 = !DILocation(line: 1644, column: 29, scope: !18011)
!18017 = !DILocation(line: 1644, column: 2, scope: !18011)
!18018 = !DILocation(line: 1644, column: 8, scope: !18011)
!18019 = !DILocation(line: 1644, column: 11, scope: !18011)
!18020 = !DILocation(line: 1644, column: 15, scope: !18011)
!18021 = !DILocation(line: 1644, column: 18, scope: !18011)
!18022 = !DILocation(line: 1644, column: 27, scope: !18011)
!18023 = !DILocation(line: 1645, column: 1, scope: !18011)
!18024 = distinct !DISubprogram(name: "skb_frag_size", scope: !417, file: !417, line: 327, type: !18025, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18025 = !DISubroutineType(types: !18026)
!18026 = !{!7, !18027}
!18027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18028, size: 64)
!18028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8076)
!18029 = !DILocalVariable(name: "frag", arg: 1, scope: !18024, file: !417, line: 327, type: !18027)
!18030 = !DILocation(line: 327, column: 60, scope: !18024)
!18031 = !DILocation(line: 329, column: 9, scope: !18024)
!18032 = !DILocation(line: 329, column: 15, scope: !18024)
!18033 = !DILocation(line: 329, column: 2, scope: !18024)
!18034 = distinct !DISubprogram(name: "skb_frag_address", scope: !417, file: !417, line: 3041, type: !18035, scopeLine: 3042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18035 = !DISubroutineType(types: !18036)
!18036 = !{!591, !18027}
!18037 = !DILocalVariable(name: "page", arg: 1, scope: !18038, file: !14, line: 1514, type: !18041)
!18038 = distinct !DISubprogram(name: "lowmem_page_address", scope: !14, file: !14, line: 1514, type: !18039, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18039 = !DISubroutineType(types: !18040)
!18040 = !{!591, !18041}
!18041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18042, size: 64)
!18042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!18043 = !DILocation(line: 1514, column: 69, scope: !18038, inlinedAt: !18044)
!18044 = distinct !DILocation(line: 3043, column: 9, scope: !18034)
!18045 = !DILocalVariable(name: "frag", arg: 1, scope: !18034, file: !417, line: 3041, type: !18027)
!18046 = !DILocation(line: 3041, column: 56, scope: !18034)
!18047 = !DILocation(line: 3043, column: 9, scope: !18034)
!18048 = !DILocation(line: 1516, column: 9, scope: !18038, inlinedAt: !18044)
!18049 = !DILocation(line: 3043, column: 58, scope: !18034)
!18050 = !DILocation(line: 3043, column: 45, scope: !18034)
!18051 = !DILocation(line: 3043, column: 43, scope: !18034)
!18052 = !DILocation(line: 3043, column: 2, scope: !18034)
!18053 = distinct !DISubprogram(name: "hw_send_pkt", scope: !3, file: !3, line: 4002, type: !8272, scopeLine: 4003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18054 = !DILocalVariable(name: "hw", arg: 1, scope: !18053, file: !3, line: 4002, type: !8002)
!18055 = !DILocation(line: 4002, column: 40, scope: !18053)
!18056 = !DILocalVariable(name: "cur", scope: !18053, file: !3, line: 4004, type: !7875)
!18057 = !DILocation(line: 4004, column: 19, scope: !18053)
!18058 = !DILocation(line: 4004, column: 25, scope: !18053)
!18059 = !DILocation(line: 4004, column: 29, scope: !18053)
!18060 = !DILocation(line: 4004, column: 42, scope: !18053)
!18061 = !DILocation(line: 4006, column: 2, scope: !18053)
!18062 = !DILocation(line: 4006, column: 7, scope: !18053)
!18063 = !DILocation(line: 4006, column: 10, scope: !18053)
!18064 = !DILocation(line: 4006, column: 14, scope: !18053)
!18065 = !DILocation(line: 4006, column: 17, scope: !18053)
!18066 = !DILocation(line: 4006, column: 26, scope: !18053)
!18067 = !DILocation(line: 4009, column: 6, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18053, file: !3, line: 4009, column: 6)
!18069 = !DILocation(line: 4009, column: 10, scope: !18068)
!18070 = !DILocation(line: 4009, column: 23, scope: !18068)
!18071 = !DILocation(line: 4009, column: 27, scope: !18068)
!18072 = !DILocation(line: 4009, column: 21, scope: !18068)
!18073 = !DILocation(line: 4009, column: 6, scope: !18053)
!18074 = !DILocation(line: 4010, column: 3, scope: !18075)
!18075 = distinct !DILexicalBlock(scope: !18068, file: !3, line: 4009, column: 40)
!18076 = !DILocation(line: 4010, column: 8, scope: !18075)
!18077 = !DILocation(line: 4010, column: 11, scope: !18075)
!18078 = !DILocation(line: 4010, column: 15, scope: !18075)
!18079 = !DILocation(line: 4010, column: 18, scope: !18075)
!18080 = !DILocation(line: 4010, column: 23, scope: !18075)
!18081 = !DILocation(line: 4011, column: 3, scope: !18075)
!18082 = !DILocation(line: 4011, column: 7, scope: !18075)
!18083 = !DILocation(line: 4011, column: 18, scope: !18075)
!18084 = !DILocation(line: 4012, column: 3, scope: !18075)
!18085 = !DILocation(line: 4012, column: 7, scope: !18075)
!18086 = !DILocation(line: 4012, column: 15, scope: !18075)
!18087 = !DILocation(line: 4013, column: 2, scope: !18075)
!18088 = !DILocation(line: 4016, column: 29, scope: !18053)
!18089 = !DILocation(line: 4016, column: 33, scope: !18053)
!18090 = !DILocation(line: 4016, column: 2, scope: !18053)
!18091 = !DILocation(line: 4016, column: 7, scope: !18053)
!18092 = !DILocation(line: 4016, column: 10, scope: !18053)
!18093 = !DILocation(line: 4016, column: 14, scope: !18053)
!18094 = !DILocation(line: 4016, column: 17, scope: !18053)
!18095 = !DILocation(line: 4016, column: 27, scope: !18053)
!18096 = !DILocation(line: 4018, column: 15, scope: !18053)
!18097 = !DILocation(line: 4018, column: 2, scope: !18053)
!18098 = !DILocation(line: 4020, column: 12, scope: !18053)
!18099 = !DILocation(line: 4020, column: 16, scope: !18053)
!18100 = !DILocation(line: 4020, column: 19, scope: !18053)
!18101 = !DILocation(line: 4020, column: 2, scope: !18053)
!18102 = !DILocation(line: 4021, column: 1, scope: !18053)
!18103 = distinct !DISubprogram(name: "skb_frag_page", scope: !417, file: !417, line: 2983, type: !18104, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18104 = !DISubroutineType(types: !18105)
!18105 = !{!1719, !18027}
!18106 = !DILocalVariable(name: "frag", arg: 1, scope: !18103, file: !417, line: 2983, type: !18027)
!18107 = !DILocation(line: 2983, column: 60, scope: !18103)
!18108 = !DILocation(line: 2985, column: 9, scope: !18103)
!18109 = !DILocation(line: 2985, column: 15, scope: !18103)
!18110 = !DILocation(line: 2985, column: 2, scope: !18103)
!18111 = distinct !DISubprogram(name: "skb_frag_off", scope: !417, file: !417, line: 2941, type: !18025, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18112 = !DILocalVariable(name: "frag", arg: 1, scope: !18111, file: !417, line: 2941, type: !18027)
!18113 = !DILocation(line: 2941, column: 59, scope: !18111)
!18114 = !DILocation(line: 2943, column: 9, scope: !18111)
!18115 = !DILocation(line: 2943, column: 15, scope: !18111)
!18116 = !DILocation(line: 2943, column: 2, scope: !18111)
!18117 = distinct !DISubprogram(name: "dev_set_promiscuous", scope: !3, file: !3, line: 5672, type: !18118, scopeLine: 5674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18118 = !DISubroutineType(types: !18119)
!18119 = !{null, !290, !7985, !8002, !32}
!18120 = !DILocalVariable(name: "dev", arg: 1, scope: !18117, file: !3, line: 5672, type: !290)
!18121 = !DILocation(line: 5672, column: 52, scope: !18117)
!18122 = !DILocalVariable(name: "priv", arg: 2, scope: !18117, file: !3, line: 5672, type: !7985)
!18123 = !DILocation(line: 5672, column: 74, scope: !18117)
!18124 = !DILocalVariable(name: "hw", arg: 3, scope: !18117, file: !3, line: 5673, type: !8002)
!18125 = !DILocation(line: 5673, column: 17, scope: !18117)
!18126 = !DILocalVariable(name: "promiscuous", arg: 4, scope: !18117, file: !3, line: 5673, type: !32)
!18127 = !DILocation(line: 5673, column: 25, scope: !18117)
!18128 = !DILocation(line: 5675, column: 6, scope: !18129)
!18129 = distinct !DILexicalBlock(scope: !18117, file: !3, line: 5675, column: 6)
!18130 = !DILocation(line: 5675, column: 21, scope: !18129)
!18131 = !DILocation(line: 5675, column: 27, scope: !18129)
!18132 = !DILocation(line: 5675, column: 18, scope: !18129)
!18133 = !DILocation(line: 5675, column: 6, scope: !18117)
!18134 = !DILocalVariable(name: "prev_state", scope: !18135, file: !3, line: 5676, type: !794)
!18135 = distinct !DILexicalBlock(scope: !18129, file: !3, line: 5675, column: 40)
!18136 = !DILocation(line: 5676, column: 6, scope: !18135)
!18137 = !DILocation(line: 5676, column: 19, scope: !18135)
!18138 = !DILocation(line: 5676, column: 23, scope: !18135)
!18139 = !DILocation(line: 5678, column: 7, scope: !18140)
!18140 = distinct !DILexicalBlock(scope: !18135, file: !3, line: 5678, column: 7)
!18141 = !DILocation(line: 5678, column: 7, scope: !18135)
!18142 = !DILocation(line: 5679, column: 6, scope: !18140)
!18143 = !DILocation(line: 5679, column: 10, scope: !18140)
!18144 = !DILocation(line: 5679, column: 4, scope: !18140)
!18145 = !DILocation(line: 5681, column: 6, scope: !18140)
!18146 = !DILocation(line: 5681, column: 10, scope: !18140)
!18147 = !DILocation(line: 5681, column: 4, scope: !18140)
!18148 = !DILocation(line: 5682, column: 23, scope: !18135)
!18149 = !DILocation(line: 5682, column: 3, scope: !18135)
!18150 = !DILocation(line: 5682, column: 9, scope: !18135)
!18151 = !DILocation(line: 5682, column: 21, scope: !18135)
!18152 = !DILocation(line: 5685, column: 7, scope: !18153)
!18153 = distinct !DILexicalBlock(scope: !18135, file: !3, line: 5685, column: 7)
!18154 = !DILocation(line: 5685, column: 11, scope: !18153)
!18155 = !DILocation(line: 5685, column: 23, scope: !18153)
!18156 = !DILocation(line: 5685, column: 28, scope: !18153)
!18157 = !DILocation(line: 5685, column: 31, scope: !18153)
!18158 = !DILocation(line: 5685, column: 42, scope: !18153)
!18159 = !DILocation(line: 5685, column: 7, scope: !18135)
!18160 = !DILocation(line: 5686, column: 23, scope: !18153)
!18161 = !DILocation(line: 5686, column: 27, scope: !18153)
!18162 = !DILocation(line: 5686, column: 31, scope: !18153)
!18163 = !DILocation(line: 5686, column: 4, scope: !18153)
!18164 = !DILocation(line: 5692, column: 8, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18135, file: !3, line: 5692, column: 7)
!18166 = !DILocation(line: 5692, column: 12, scope: !18165)
!18167 = !DILocation(line: 5692, column: 21, scope: !18165)
!18168 = !DILocation(line: 5692, column: 36, scope: !18165)
!18169 = !DILocation(line: 5692, column: 40, scope: !18165)
!18170 = !DILocation(line: 5692, column: 52, scope: !18165)
!18171 = !DILocation(line: 5693, column: 28, scope: !18165)
!18172 = !DILocation(line: 5693, column: 7, scope: !18165)
!18173 = !DILocation(line: 5692, column: 7, scope: !18135)
!18174 = !DILocalVariable(name: "sw", scope: !18175, file: !3, line: 5694, type: !7794)
!18175 = distinct !DILexicalBlock(scope: !18165, file: !3, line: 5693, column: 34)
!18176 = !DILocation(line: 5694, column: 23, scope: !18175)
!18177 = !DILocation(line: 5694, column: 28, scope: !18175)
!18178 = !DILocation(line: 5694, column: 32, scope: !18175)
!18179 = !DILocalVariable(name: "port", scope: !18175, file: !3, line: 5695, type: !32)
!18180 = !DILocation(line: 5695, column: 8, scope: !18175)
!18181 = !DILocation(line: 5695, column: 15, scope: !18175)
!18182 = !DILocation(line: 5695, column: 21, scope: !18175)
!18183 = !DILocation(line: 5695, column: 26, scope: !18175)
!18184 = !DILocation(line: 5697, column: 23, scope: !18175)
!18185 = !DILocation(line: 5697, column: 27, scope: !18175)
!18186 = !DILocation(line: 5697, column: 4, scope: !18175)
!18187 = !DILocation(line: 5698, column: 16, scope: !18175)
!18188 = !DILocation(line: 5698, column: 13, scope: !18175)
!18189 = !DILocation(line: 5698, column: 9, scope: !18175)
!18190 = !DILocation(line: 5699, column: 8, scope: !18191)
!18191 = distinct !DILexicalBlock(scope: !18175, file: !3, line: 5699, column: 8)
!18192 = !DILocation(line: 5699, column: 12, scope: !18191)
!18193 = !DILocation(line: 5699, column: 21, scope: !18191)
!18194 = !DILocation(line: 5699, column: 19, scope: !18191)
!18195 = !DILocation(line: 5699, column: 8, scope: !18175)
!18196 = !DILocation(line: 5700, column: 20, scope: !18197)
!18197 = distinct !DILexicalBlock(scope: !18191, file: !3, line: 5699, column: 27)
!18198 = !DILocation(line: 5700, column: 19, scope: !18197)
!18199 = !DILocation(line: 5700, column: 5, scope: !18197)
!18200 = !DILocation(line: 5700, column: 9, scope: !18197)
!18201 = !DILocation(line: 5700, column: 16, scope: !18197)
!18202 = !DILocation(line: 5701, column: 19, scope: !18197)
!18203 = !DILocation(line: 5701, column: 5, scope: !18197)
!18204 = !DILocation(line: 5702, column: 4, scope: !18197)
!18205 = !DILocation(line: 5703, column: 3, scope: !18175)
!18206 = !DILocation(line: 5704, column: 2, scope: !18135)
!18207 = !DILocation(line: 5705, column: 1, scope: !18117)
!18208 = distinct !DISubprogram(name: "dev_set_multicast", scope: !3, file: !3, line: 5707, type: !18209, scopeLine: 5709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18209 = !DISubroutineType(types: !18210)
!18210 = !{null, !7985, !8002, !32}
!18211 = !DILocalVariable(name: "priv", arg: 1, scope: !18208, file: !3, line: 5707, type: !7985)
!18212 = !DILocation(line: 5707, column: 48, scope: !18208)
!18213 = !DILocalVariable(name: "hw", arg: 2, scope: !18208, file: !3, line: 5707, type: !8002)
!18214 = !DILocation(line: 5707, column: 69, scope: !18208)
!18215 = !DILocalVariable(name: "multicast", arg: 3, scope: !18208, file: !3, line: 5708, type: !32)
!18216 = !DILocation(line: 5708, column: 6, scope: !18208)
!18217 = !DILocation(line: 5710, column: 6, scope: !18218)
!18218 = distinct !DILexicalBlock(scope: !18208, file: !3, line: 5710, column: 6)
!18219 = !DILocation(line: 5710, column: 19, scope: !18218)
!18220 = !DILocation(line: 5710, column: 25, scope: !18218)
!18221 = !DILocation(line: 5710, column: 16, scope: !18218)
!18222 = !DILocation(line: 5710, column: 6, scope: !18208)
!18223 = !DILocalVariable(name: "all_multi", scope: !18224, file: !3, line: 5711, type: !794)
!18224 = distinct !DILexicalBlock(scope: !18218, file: !3, line: 5710, column: 36)
!18225 = !DILocation(line: 5711, column: 6, scope: !18224)
!18226 = !DILocation(line: 5711, column: 18, scope: !18224)
!18227 = !DILocation(line: 5711, column: 22, scope: !18224)
!18228 = !DILocation(line: 5713, column: 7, scope: !18229)
!18229 = distinct !DILexicalBlock(scope: !18224, file: !3, line: 5713, column: 7)
!18230 = !DILocation(line: 5713, column: 7, scope: !18224)
!18231 = !DILocation(line: 5714, column: 6, scope: !18229)
!18232 = !DILocation(line: 5714, column: 10, scope: !18229)
!18233 = !DILocation(line: 5714, column: 4, scope: !18229)
!18234 = !DILocation(line: 5716, column: 6, scope: !18229)
!18235 = !DILocation(line: 5716, column: 10, scope: !18229)
!18236 = !DILocation(line: 5716, column: 4, scope: !18229)
!18237 = !DILocation(line: 5717, column: 21, scope: !18224)
!18238 = !DILocation(line: 5717, column: 3, scope: !18224)
!18239 = !DILocation(line: 5717, column: 9, scope: !18224)
!18240 = !DILocation(line: 5717, column: 19, scope: !18224)
!18241 = !DILocation(line: 5720, column: 7, scope: !18242)
!18242 = distinct !DILexicalBlock(scope: !18224, file: !3, line: 5720, column: 7)
!18243 = !DILocation(line: 5720, column: 11, scope: !18242)
!18244 = !DILocation(line: 5720, column: 21, scope: !18242)
!18245 = !DILocation(line: 5720, column: 26, scope: !18242)
!18246 = !DILocation(line: 5720, column: 29, scope: !18242)
!18247 = !DILocation(line: 5720, column: 39, scope: !18242)
!18248 = !DILocation(line: 5720, column: 7, scope: !18224)
!18249 = !DILocation(line: 5721, column: 21, scope: !18242)
!18250 = !DILocation(line: 5721, column: 25, scope: !18242)
!18251 = !DILocation(line: 5721, column: 29, scope: !18242)
!18252 = !DILocation(line: 5721, column: 4, scope: !18242)
!18253 = !DILocation(line: 5722, column: 2, scope: !18224)
!18254 = !DILocation(line: 5723, column: 1, scope: !18208)
!18255 = distinct !DISubprogram(name: "hw_set_multicast", scope: !3, file: !3, line: 4199, type: !10834, scopeLine: 4200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18256 = !DILocalVariable(name: "hw", arg: 1, scope: !18255, file: !3, line: 4199, type: !8002)
!18257 = !DILocation(line: 4199, column: 45, scope: !18255)
!18258 = !DILocalVariable(name: "multicast", arg: 2, scope: !18255, file: !3, line: 4199, type: !794)
!18259 = !DILocation(line: 4199, column: 52, scope: !18255)
!18260 = !DILocation(line: 4202, column: 13, scope: !18255)
!18261 = !DILocation(line: 4202, column: 2, scope: !18255)
!18262 = !DILocation(line: 4204, column: 6, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18255, file: !3, line: 4204, column: 6)
!18264 = !DILocation(line: 4204, column: 6, scope: !18255)
!18265 = !DILocation(line: 4205, column: 3, scope: !18263)
!18266 = !DILocation(line: 4205, column: 7, scope: !18263)
!18267 = !DILocation(line: 4205, column: 14, scope: !18263)
!18268 = !DILocation(line: 4207, column: 3, scope: !18263)
!18269 = !DILocation(line: 4207, column: 7, scope: !18263)
!18270 = !DILocation(line: 4207, column: 14, scope: !18263)
!18271 = !DILocation(line: 4209, column: 6, scope: !18272)
!18272 = distinct !DILexicalBlock(scope: !18255, file: !3, line: 4209, column: 6)
!18273 = !DILocation(line: 4209, column: 10, scope: !18272)
!18274 = !DILocation(line: 4209, column: 6, scope: !18255)
!18275 = !DILocation(line: 4210, column: 15, scope: !18272)
!18276 = !DILocation(line: 4210, column: 3, scope: !18272)
!18277 = !DILocation(line: 4211, column: 1, scope: !18255)
!18278 = distinct !DISubprogram(name: "hw_set_grp_addr", scope: !3, file: !3, line: 4171, type: !8272, scopeLine: 4172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18279 = !DILocalVariable(name: "hw", arg: 1, scope: !18278, file: !3, line: 4171, type: !8002)
!18280 = !DILocation(line: 4171, column: 44, scope: !18278)
!18281 = !DILocalVariable(name: "i", scope: !18278, file: !3, line: 4173, type: !32)
!18282 = !DILocation(line: 4173, column: 6, scope: !18278)
!18283 = !DILocalVariable(name: "index", scope: !18278, file: !3, line: 4174, type: !32)
!18284 = !DILocation(line: 4174, column: 6, scope: !18278)
!18285 = !DILocalVariable(name: "position", scope: !18278, file: !3, line: 4175, type: !32)
!18286 = !DILocation(line: 4175, column: 6, scope: !18278)
!18287 = !DILocalVariable(name: "value", scope: !18278, file: !3, line: 4176, type: !32)
!18288 = !DILocation(line: 4176, column: 6, scope: !18278)
!18289 = !DILocation(line: 4178, column: 9, scope: !18278)
!18290 = !DILocation(line: 4178, column: 13, scope: !18278)
!18291 = !DILocation(line: 4178, column: 2, scope: !18278)
!18292 = !DILocation(line: 4180, column: 9, scope: !18293)
!18293 = distinct !DILexicalBlock(scope: !18278, file: !3, line: 4180, column: 2)
!18294 = !DILocation(line: 4180, column: 7, scope: !18293)
!18295 = !DILocation(line: 4180, column: 14, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18293, file: !3, line: 4180, column: 2)
!18297 = !DILocation(line: 4180, column: 18, scope: !18296)
!18298 = !DILocation(line: 4180, column: 22, scope: !18296)
!18299 = !DILocation(line: 4180, column: 16, scope: !18296)
!18300 = !DILocation(line: 4180, column: 2, scope: !18293)
!18301 = !DILocalVariable(name: "__x", scope: !18302, file: !3, line: 4181, type: !987)
!18302 = distinct !DILexicalBlock(scope: !18303, file: !3, line: 4181, column: 15)
!18303 = distinct !DILexicalBlock(scope: !18296, file: !3, line: 4180, column: 44)
!18304 = !DILocation(line: 4181, column: 15, scope: !18302)
!18305 = !DILocalVariable(name: "___x", scope: !18306, file: !3, line: 4181, type: !987)
!18306 = distinct !DILexicalBlock(scope: !18302, file: !3, line: 4181, column: 15)
!18307 = !DILocation(line: 4181, column: 15, scope: !18306)
!18308 = !DILocation(line: 4181, column: 47, scope: !18303)
!18309 = !DILocation(line: 4181, column: 54, scope: !18303)
!18310 = !DILocation(line: 4181, column: 12, scope: !18303)
!18311 = !DILocation(line: 4182, column: 11, scope: !18303)
!18312 = !DILocation(line: 4182, column: 20, scope: !18303)
!18313 = !DILocation(line: 4182, column: 9, scope: !18303)
!18314 = !DILocation(line: 4183, column: 17, scope: !18303)
!18315 = !DILocation(line: 4183, column: 26, scope: !18303)
!18316 = !DILocation(line: 4183, column: 13, scope: !18303)
!18317 = !DILocation(line: 4183, column: 9, scope: !18303)
!18318 = !DILocation(line: 4184, column: 33, scope: !18303)
!18319 = !DILocation(line: 4184, column: 28, scope: !18303)
!18320 = !DILocation(line: 4184, column: 3, scope: !18303)
!18321 = !DILocation(line: 4184, column: 7, scope: !18303)
!18322 = !DILocation(line: 4184, column: 18, scope: !18303)
!18323 = !DILocation(line: 4184, column: 25, scope: !18303)
!18324 = !DILocation(line: 4185, column: 2, scope: !18303)
!18325 = !DILocation(line: 4180, column: 40, scope: !18296)
!18326 = !DILocation(line: 4180, column: 2, scope: !18296)
!18327 = distinct !{!18327, !18300, !18328}
!18328 = !DILocation(line: 4185, column: 2, scope: !18293)
!18329 = !DILocation(line: 4187, column: 9, scope: !18330)
!18330 = distinct !DILexicalBlock(scope: !18278, file: !3, line: 4187, column: 2)
!18331 = !DILocation(line: 4187, column: 7, scope: !18330)
!18332 = !DILocation(line: 4187, column: 14, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !18330, file: !3, line: 4187, column: 2)
!18334 = !DILocation(line: 4187, column: 16, scope: !18333)
!18335 = !DILocation(line: 4187, column: 2, scope: !18330)
!18336 = !DILocation(line: 4188, column: 10, scope: !18333)
!18337 = !DILocation(line: 4188, column: 14, scope: !18333)
!18338 = !DILocation(line: 4188, column: 25, scope: !18333)
!18339 = !DILocation(line: 4188, column: 29, scope: !18333)
!18340 = !DILocation(line: 4188, column: 33, scope: !18333)
!18341 = !DILocation(line: 4188, column: 36, scope: !18333)
!18342 = !DILocation(line: 4189, column: 4, scope: !18333)
!18343 = !DILocation(line: 4188, column: 64, scope: !18333)
!18344 = !DILocation(line: 4188, column: 3, scope: !18333)
!18345 = !DILocation(line: 4187, column: 38, scope: !18333)
!18346 = !DILocation(line: 4187, column: 2, scope: !18333)
!18347 = distinct !{!18347, !18335, !18348}
!18348 = !DILocation(line: 4189, column: 5, scope: !18330)
!18349 = !DILocation(line: 4190, column: 1, scope: !18278)
!18350 = distinct !DISubprogram(name: "hw_set_promiscuous", scope: !3, file: !3, line: 4220, type: !10834, scopeLine: 4221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18351 = !DILocalVariable(name: "hw", arg: 1, scope: !18350, file: !3, line: 4220, type: !8002)
!18352 = !DILocation(line: 4220, column: 47, scope: !18350)
!18353 = !DILocalVariable(name: "prom", arg: 2, scope: !18350, file: !3, line: 4220, type: !794)
!18354 = !DILocation(line: 4220, column: 54, scope: !18350)
!18355 = !DILocation(line: 4223, column: 13, scope: !18350)
!18356 = !DILocation(line: 4223, column: 2, scope: !18350)
!18357 = !DILocation(line: 4225, column: 6, scope: !18358)
!18358 = distinct !DILexicalBlock(scope: !18350, file: !3, line: 4225, column: 6)
!18359 = !DILocation(line: 4225, column: 6, scope: !18350)
!18360 = !DILocation(line: 4226, column: 3, scope: !18358)
!18361 = !DILocation(line: 4226, column: 7, scope: !18358)
!18362 = !DILocation(line: 4226, column: 14, scope: !18358)
!18363 = !DILocation(line: 4228, column: 3, scope: !18358)
!18364 = !DILocation(line: 4228, column: 7, scope: !18358)
!18365 = !DILocation(line: 4228, column: 14, scope: !18358)
!18366 = !DILocation(line: 4230, column: 6, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18350, file: !3, line: 4230, column: 6)
!18368 = !DILocation(line: 4230, column: 10, scope: !18367)
!18369 = !DILocation(line: 4230, column: 6, scope: !18350)
!18370 = !DILocation(line: 4231, column: 15, scope: !18367)
!18371 = !DILocation(line: 4231, column: 3, scope: !18367)
!18372 = !DILocation(line: 4232, column: 1, scope: !18350)
!18373 = distinct !DISubprogram(name: "netif_is_bridge_port", scope: !31, file: !31, line: 4921, type: !14592, scopeLine: 4922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18374 = !DILocalVariable(name: "dev", arg: 1, scope: !18373, file: !31, line: 4921, type: !773)
!18375 = !DILocation(line: 4921, column: 66, scope: !18373)
!18376 = !DILocation(line: 4923, column: 9, scope: !18373)
!18377 = !DILocation(line: 4923, column: 14, scope: !18373)
!18378 = !DILocation(line: 4923, column: 25, scope: !18373)
!18379 = !DILocation(line: 4923, column: 2, scope: !18373)
!18380 = distinct !DISubprogram(name: "if_mii", scope: !8016, file: !8016, line: 51, type: !18381, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18381 = !DISubroutineType(types: !18382)
!18382 = !{!8088, !597}
!18383 = !DILocalVariable(name: "rq", arg: 1, scope: !18380, file: !8016, line: 51, type: !597)
!18384 = !DILocation(line: 51, column: 59, scope: !18380)
!18385 = !DILocation(line: 53, column: 36, scope: !18380)
!18386 = !DILocation(line: 53, column: 40, scope: !18380)
!18387 = !DILocation(line: 53, column: 9, scope: !18380)
!18388 = !DILocation(line: 53, column: 2, scope: !18380)
!18389 = distinct !DISubprogram(name: "hw_set_add_addr", scope: !3, file: !3, line: 4098, type: !8272, scopeLine: 4099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18390 = !DILocalVariable(name: "hw", arg: 1, scope: !18389, file: !3, line: 4098, type: !8002)
!18391 = !DILocation(line: 4098, column: 44, scope: !18389)
!18392 = !DILocalVariable(name: "i", scope: !18389, file: !3, line: 4100, type: !32)
!18393 = !DILocation(line: 4100, column: 6, scope: !18389)
!18394 = !DILocation(line: 4102, column: 9, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18389, file: !3, line: 4102, column: 2)
!18396 = !DILocation(line: 4102, column: 7, scope: !18395)
!18397 = !DILocation(line: 4102, column: 14, scope: !18398)
!18398 = distinct !DILexicalBlock(scope: !18395, file: !3, line: 4102, column: 2)
!18399 = !DILocation(line: 4102, column: 16, scope: !18398)
!18400 = !DILocation(line: 4102, column: 2, scope: !18395)
!18401 = !DILocation(line: 4103, column: 18, scope: !18402)
!18402 = distinct !DILexicalBlock(scope: !18403, file: !3, line: 4103, column: 7)
!18403 = distinct !DILexicalBlock(scope: !18398, file: !3, line: 4102, column: 43)
!18404 = !DILocation(line: 4103, column: 22, scope: !18402)
!18405 = !DILocation(line: 4103, column: 30, scope: !18402)
!18406 = !DILocation(line: 4103, column: 7, scope: !18402)
!18407 = !DILocation(line: 4103, column: 7, scope: !18403)
!18408 = !DILocation(line: 4104, column: 14, scope: !18402)
!18409 = !DILocation(line: 4104, column: 18, scope: !18402)
!18410 = !DILocation(line: 4104, column: 39, scope: !18402)
!18411 = !DILocation(line: 4104, column: 37, scope: !18402)
!18412 = !DILocation(line: 4104, column: 21, scope: !18402)
!18413 = !DILocation(line: 4104, column: 41, scope: !18402)
!18414 = !DILocation(line: 4104, column: 4, scope: !18402)
!18415 = !DILocation(line: 4107, column: 20, scope: !18402)
!18416 = !DILocation(line: 4107, column: 24, scope: !18402)
!18417 = !DILocation(line: 4107, column: 27, scope: !18402)
!18418 = !DILocation(line: 4107, column: 31, scope: !18402)
!18419 = !DILocation(line: 4107, column: 39, scope: !18402)
!18420 = !DILocation(line: 4107, column: 4, scope: !18402)
!18421 = !DILocation(line: 4108, column: 2, scope: !18403)
!18422 = !DILocation(line: 4102, column: 39, scope: !18398)
!18423 = !DILocation(line: 4102, column: 2, scope: !18398)
!18424 = distinct !{!18424, !18400, !18425}
!18425 = !DILocation(line: 4108, column: 2, scope: !18395)
!18426 = !DILocation(line: 4109, column: 1, scope: !18389)
!18427 = distinct !DISubprogram(name: "netdev_get_drvinfo", scope: !3, file: !3, line: 6072, type: !5528, scopeLine: 6074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18428 = !DILocalVariable(name: "dev", arg: 1, scope: !18427, file: !3, line: 6072, type: !290)
!18429 = !DILocation(line: 6072, column: 51, scope: !18427)
!18430 = !DILocalVariable(name: "info", arg: 2, scope: !18427, file: !3, line: 6073, type: !5530)
!18431 = !DILocation(line: 6073, column: 26, scope: !18427)
!18432 = !DILocalVariable(name: "priv", scope: !18427, file: !3, line: 6075, type: !7985)
!18433 = !DILocation(line: 6075, column: 19, scope: !18427)
!18434 = !DILocation(line: 6075, column: 38, scope: !18427)
!18435 = !DILocation(line: 6075, column: 26, scope: !18427)
!18436 = !DILocalVariable(name: "hw_priv", scope: !18427, file: !3, line: 6076, type: !7512)
!18437 = !DILocation(line: 6076, column: 19, scope: !18427)
!18438 = !DILocation(line: 6076, column: 29, scope: !18427)
!18439 = !DILocation(line: 6076, column: 35, scope: !18427)
!18440 = !DILocation(line: 6078, column: 10, scope: !18427)
!18441 = !DILocation(line: 6078, column: 16, scope: !18427)
!18442 = !DILocation(line: 6078, column: 2, scope: !18427)
!18443 = !DILocation(line: 6079, column: 10, scope: !18427)
!18444 = !DILocation(line: 6079, column: 16, scope: !18427)
!18445 = !DILocation(line: 6079, column: 2, scope: !18427)
!18446 = !DILocation(line: 6080, column: 10, scope: !18427)
!18447 = !DILocation(line: 6080, column: 16, scope: !18427)
!18448 = !DILocation(line: 6080, column: 35, scope: !18427)
!18449 = !DILocation(line: 6080, column: 44, scope: !18427)
!18450 = !DILocation(line: 6080, column: 26, scope: !18427)
!18451 = !DILocation(line: 6080, column: 2, scope: !18427)
!18452 = !DILocation(line: 6082, column: 1, scope: !18427)
!18453 = distinct !DISubprogram(name: "netdev_get_regs_len", scope: !3, file: !3, line: 6105, type: !402, scopeLine: 6106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18454 = !DILocalVariable(name: "dev", arg: 1, scope: !18453, file: !3, line: 6105, type: !290)
!18455 = !DILocation(line: 6105, column: 51, scope: !18453)
!18456 = !DILocalVariable(name: "range", scope: !18453, file: !3, line: 6107, type: !18457)
!18457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8286, size: 64)
!18458 = !DILocation(line: 6107, column: 18, scope: !18453)
!18459 = !DILocalVariable(name: "regs_len", scope: !18453, file: !3, line: 6108, type: !32)
!18460 = !DILocation(line: 6108, column: 6, scope: !18453)
!18461 = !DILocation(line: 6110, column: 2, scope: !18453)
!18462 = !DILocation(line: 6110, column: 9, scope: !18453)
!18463 = !DILocation(line: 6110, column: 16, scope: !18453)
!18464 = !DILocation(line: 6110, column: 22, scope: !18453)
!18465 = !DILocation(line: 6110, column: 29, scope: !18453)
!18466 = !DILocation(line: 6110, column: 20, scope: !18453)
!18467 = !DILocation(line: 6111, column: 16, scope: !18468)
!18468 = distinct !DILexicalBlock(scope: !18453, file: !3, line: 6110, column: 36)
!18469 = !DILocation(line: 6111, column: 23, scope: !18468)
!18470 = !DILocation(line: 6111, column: 29, scope: !18468)
!18471 = !DILocation(line: 6111, column: 36, scope: !18468)
!18472 = !DILocation(line: 6111, column: 27, scope: !18468)
!18473 = !DILocation(line: 6111, column: 42, scope: !18468)
!18474 = !DILocation(line: 6111, column: 47, scope: !18468)
!18475 = !DILocation(line: 6111, column: 51, scope: !18468)
!18476 = !DILocation(line: 6111, column: 12, scope: !18468)
!18477 = !DILocation(line: 6112, column: 8, scope: !18468)
!18478 = distinct !{!18478, !18461, !18479}
!18479 = !DILocation(line: 6113, column: 2, scope: !18453)
!18480 = !DILocation(line: 6114, column: 9, scope: !18453)
!18481 = !DILocation(line: 6114, column: 2, scope: !18453)
!18482 = distinct !DISubprogram(name: "netdev_get_regs", scope: !3, file: !3, line: 6125, type: !5549, scopeLine: 6127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18483 = !DILocalVariable(name: "dev", arg: 1, scope: !18482, file: !3, line: 6125, type: !290)
!18484 = !DILocation(line: 6125, column: 48, scope: !18482)
!18485 = !DILocalVariable(name: "regs", arg: 2, scope: !18482, file: !3, line: 6125, type: !5551)
!18486 = !DILocation(line: 6125, column: 74, scope: !18482)
!18487 = !DILocalVariable(name: "ptr", arg: 3, scope: !18482, file: !3, line: 6126, type: !591)
!18488 = !DILocation(line: 6126, column: 8, scope: !18482)
!18489 = !DILocalVariable(name: "priv", scope: !18482, file: !3, line: 6128, type: !7985)
!18490 = !DILocation(line: 6128, column: 19, scope: !18482)
!18491 = !DILocation(line: 6128, column: 38, scope: !18482)
!18492 = !DILocation(line: 6128, column: 26, scope: !18482)
!18493 = !DILocalVariable(name: "hw_priv", scope: !18482, file: !3, line: 6129, type: !7512)
!18494 = !DILocation(line: 6129, column: 19, scope: !18482)
!18495 = !DILocation(line: 6129, column: 29, scope: !18482)
!18496 = !DILocation(line: 6129, column: 35, scope: !18482)
!18497 = !DILocalVariable(name: "hw", scope: !18482, file: !3, line: 6130, type: !8002)
!18498 = !DILocation(line: 6130, column: 17, scope: !18482)
!18499 = !DILocation(line: 6130, column: 23, scope: !18482)
!18500 = !DILocation(line: 6130, column: 32, scope: !18482)
!18501 = !DILocalVariable(name: "buf", scope: !18482, file: !3, line: 6131, type: !1001)
!18502 = !DILocation(line: 6131, column: 7, scope: !18482)
!18503 = !DILocation(line: 6131, column: 21, scope: !18482)
!18504 = !DILocation(line: 6131, column: 13, scope: !18482)
!18505 = !DILocalVariable(name: "range", scope: !18482, file: !3, line: 6132, type: !18457)
!18506 = !DILocation(line: 6132, column: 18, scope: !18482)
!18507 = !DILocalVariable(name: "len", scope: !18482, file: !3, line: 6133, type: !32)
!18508 = !DILocation(line: 6133, column: 6, scope: !18482)
!18509 = !DILocation(line: 6135, column: 14, scope: !18482)
!18510 = !DILocation(line: 6135, column: 23, scope: !18482)
!18511 = !DILocation(line: 6135, column: 2, scope: !18482)
!18512 = !DILocation(line: 6136, column: 2, scope: !18482)
!18513 = !DILocation(line: 6136, column: 8, scope: !18482)
!18514 = !DILocation(line: 6136, column: 16, scope: !18482)
!18515 = !DILocation(line: 6137, column: 11, scope: !18516)
!18516 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 6137, column: 2)
!18517 = !DILocation(line: 6137, column: 7, scope: !18516)
!18518 = !DILocation(line: 6137, column: 16, scope: !18519)
!18519 = distinct !DILexicalBlock(scope: !18516, file: !3, line: 6137, column: 2)
!18520 = !DILocation(line: 6137, column: 20, scope: !18519)
!18521 = !DILocation(line: 6137, column: 2, scope: !18516)
!18522 = !DILocation(line: 6138, column: 25, scope: !18523)
!18523 = distinct !DILexicalBlock(scope: !18519, file: !3, line: 6137, column: 38)
!18524 = !DILocation(line: 6138, column: 34, scope: !18523)
!18525 = !DILocation(line: 6138, column: 40, scope: !18523)
!18526 = !DILocation(line: 6138, column: 45, scope: !18523)
!18527 = !DILocation(line: 6138, column: 3, scope: !18523)
!18528 = !DILocation(line: 6139, column: 6, scope: !18523)
!18529 = !DILocation(line: 6140, column: 2, scope: !18523)
!18530 = !DILocation(line: 6137, column: 32, scope: !18519)
!18531 = !DILocation(line: 6137, column: 2, scope: !18519)
!18532 = distinct !{!18532, !18521, !18533}
!18533 = !DILocation(line: 6140, column: 2, scope: !18516)
!18534 = !DILocation(line: 6141, column: 2, scope: !18482)
!18535 = !DILocation(line: 6141, column: 9, scope: !18482)
!18536 = !DILocation(line: 6141, column: 16, scope: !18482)
!18537 = !DILocation(line: 6141, column: 22, scope: !18482)
!18538 = !DILocation(line: 6141, column: 29, scope: !18482)
!18539 = !DILocation(line: 6141, column: 20, scope: !18482)
!18540 = !DILocation(line: 6142, column: 14, scope: !18541)
!18541 = distinct !DILexicalBlock(scope: !18542, file: !3, line: 6142, column: 3)
!18542 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 6141, column: 36)
!18543 = !DILocation(line: 6142, column: 21, scope: !18541)
!18544 = !DILocation(line: 6142, column: 12, scope: !18541)
!18545 = !DILocation(line: 6142, column: 8, scope: !18541)
!18546 = !DILocation(line: 6142, column: 28, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18541, file: !3, line: 6142, column: 3)
!18548 = !DILocation(line: 6142, column: 34, scope: !18547)
!18549 = !DILocation(line: 6142, column: 41, scope: !18547)
!18550 = !DILocation(line: 6142, column: 32, scope: !18547)
!18551 = !DILocation(line: 6142, column: 3, scope: !18541)
!18552 = !DILocation(line: 6143, column: 17, scope: !18553)
!18553 = distinct !DILexicalBlock(scope: !18547, file: !3, line: 6142, column: 56)
!18554 = !DILocation(line: 6143, column: 21, scope: !18553)
!18555 = !DILocation(line: 6143, column: 26, scope: !18553)
!18556 = !DILocation(line: 6143, column: 24, scope: !18553)
!18557 = !DILocation(line: 6143, column: 11, scope: !18553)
!18558 = !DILocation(line: 6143, column: 5, scope: !18553)
!18559 = !DILocation(line: 6143, column: 9, scope: !18553)
!18560 = !DILocation(line: 6144, column: 7, scope: !18553)
!18561 = !DILocation(line: 6145, column: 3, scope: !18553)
!18562 = !DILocation(line: 6142, column: 50, scope: !18547)
!18563 = !DILocation(line: 6142, column: 3, scope: !18547)
!18564 = distinct !{!18564, !18551, !18565}
!18565 = !DILocation(line: 6145, column: 3, scope: !18541)
!18566 = !DILocation(line: 6146, column: 8, scope: !18542)
!18567 = distinct !{!18567, !18534, !18568}
!18568 = !DILocation(line: 6147, column: 2, scope: !18482)
!18569 = !DILocation(line: 6148, column: 16, scope: !18482)
!18570 = !DILocation(line: 6148, column: 25, scope: !18482)
!18571 = !DILocation(line: 6148, column: 2, scope: !18482)
!18572 = !DILocation(line: 6149, column: 1, scope: !18482)
!18573 = distinct !DISubprogram(name: "netdev_get_wol", scope: !3, file: !3, line: 6163, type: !5560, scopeLine: 6165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18574 = !DILocalVariable(name: "dev", arg: 1, scope: !18573, file: !3, line: 6163, type: !290)
!18575 = !DILocation(line: 6163, column: 47, scope: !18573)
!18576 = !DILocalVariable(name: "wol", arg: 2, scope: !18573, file: !3, line: 6164, type: !5562)
!18577 = !DILocation(line: 6164, column: 26, scope: !18573)
!18578 = !DILocalVariable(name: "priv", scope: !18573, file: !3, line: 6166, type: !7985)
!18579 = !DILocation(line: 6166, column: 19, scope: !18573)
!18580 = !DILocation(line: 6166, column: 38, scope: !18573)
!18581 = !DILocation(line: 6166, column: 26, scope: !18573)
!18582 = !DILocalVariable(name: "hw_priv", scope: !18573, file: !3, line: 6167, type: !7512)
!18583 = !DILocation(line: 6167, column: 19, scope: !18573)
!18584 = !DILocation(line: 6167, column: 29, scope: !18573)
!18585 = !DILocation(line: 6167, column: 35, scope: !18573)
!18586 = !DILocation(line: 6169, column: 19, scope: !18573)
!18587 = !DILocation(line: 6169, column: 28, scope: !18573)
!18588 = !DILocation(line: 6169, column: 2, scope: !18573)
!18589 = !DILocation(line: 6169, column: 7, scope: !18573)
!18590 = !DILocation(line: 6169, column: 17, scope: !18573)
!18591 = !DILocation(line: 6170, column: 17, scope: !18573)
!18592 = !DILocation(line: 6170, column: 26, scope: !18573)
!18593 = !DILocation(line: 6170, column: 2, scope: !18573)
!18594 = !DILocation(line: 6170, column: 7, scope: !18573)
!18595 = !DILocation(line: 6170, column: 15, scope: !18573)
!18596 = !DILocation(line: 6171, column: 10, scope: !18573)
!18597 = !DILocation(line: 6171, column: 15, scope: !18573)
!18598 = !DILocation(line: 6171, column: 2, scope: !18573)
!18599 = !DILocation(line: 6172, column: 1, scope: !18573)
!18600 = !DILocalVariable(name: "dev", arg: 1, scope: !8292, file: !3, line: 6183, type: !290)
!18601 = !DILocation(line: 6183, column: 46, scope: !8292)
!18602 = !DILocalVariable(name: "wol", arg: 2, scope: !8292, file: !3, line: 6184, type: !5562)
!18603 = !DILocation(line: 6184, column: 26, scope: !8292)
!18604 = !DILocalVariable(name: "priv", scope: !8292, file: !3, line: 6186, type: !7985)
!18605 = !DILocation(line: 6186, column: 19, scope: !8292)
!18606 = !DILocation(line: 6186, column: 38, scope: !8292)
!18607 = !DILocation(line: 6186, column: 26, scope: !8292)
!18608 = !DILocalVariable(name: "hw_priv", scope: !8292, file: !3, line: 6187, type: !7512)
!18609 = !DILocation(line: 6187, column: 19, scope: !8292)
!18610 = !DILocation(line: 6187, column: 29, scope: !8292)
!18611 = !DILocation(line: 6187, column: 35, scope: !8292)
!18612 = !DILocation(line: 6192, column: 6, scope: !18613)
!18613 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 6192, column: 6)
!18614 = !DILocation(line: 6192, column: 11, scope: !18613)
!18615 = !DILocation(line: 6192, column: 22, scope: !18613)
!18616 = !DILocation(line: 6192, column: 31, scope: !18613)
!18617 = !DILocation(line: 6192, column: 21, scope: !18613)
!18618 = !DILocation(line: 6192, column: 19, scope: !18613)
!18619 = !DILocation(line: 6192, column: 6, scope: !8292)
!18620 = !DILocation(line: 6193, column: 3, scope: !18613)
!18621 = !DILocation(line: 6195, column: 24, scope: !8292)
!18622 = !DILocation(line: 6195, column: 29, scope: !8292)
!18623 = !DILocation(line: 6195, column: 2, scope: !8292)
!18624 = !DILocation(line: 6195, column: 11, scope: !8292)
!18625 = !DILocation(line: 6195, column: 22, scope: !8292)
!18626 = !DILocation(line: 6198, column: 6, scope: !18627)
!18627 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 6198, column: 6)
!18628 = !DILocation(line: 6198, column: 11, scope: !18627)
!18629 = !DILocation(line: 6198, column: 6, scope: !8292)
!18630 = !DILocation(line: 6199, column: 3, scope: !18627)
!18631 = !DILocation(line: 6199, column: 12, scope: !18627)
!18632 = !DILocation(line: 6199, column: 23, scope: !18627)
!18633 = !DILocation(line: 6200, column: 17, scope: !8292)
!18634 = !DILocation(line: 6200, column: 26, scope: !8292)
!18635 = !DILocation(line: 6200, column: 30, scope: !8292)
!18636 = !DILocation(line: 6200, column: 39, scope: !8292)
!18637 = !DILocation(line: 6200, column: 2, scope: !8292)
!18638 = !DILocation(line: 6201, column: 2, scope: !8292)
!18639 = !DILocation(line: 6202, column: 1, scope: !8292)
!18640 = distinct !DISubprogram(name: "netdev_get_msglevel", scope: !3, file: !3, line: 6212, type: !5576, scopeLine: 6213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18641 = !DILocalVariable(name: "dev", arg: 1, scope: !18640, file: !3, line: 6212, type: !290)
!18642 = !DILocation(line: 6212, column: 51, scope: !18640)
!18643 = !DILocalVariable(name: "priv", scope: !18640, file: !3, line: 6214, type: !7985)
!18644 = !DILocation(line: 6214, column: 19, scope: !18640)
!18645 = !DILocation(line: 6214, column: 38, scope: !18640)
!18646 = !DILocation(line: 6214, column: 26, scope: !18640)
!18647 = !DILocation(line: 6216, column: 9, scope: !18640)
!18648 = !DILocation(line: 6216, column: 15, scope: !18640)
!18649 = !DILocation(line: 6216, column: 2, scope: !18640)
!18650 = distinct !DISubprogram(name: "netdev_set_msglevel", scope: !3, file: !3, line: 6226, type: !5580, scopeLine: 6227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18651 = !DILocalVariable(name: "dev", arg: 1, scope: !18650, file: !3, line: 6226, type: !290)
!18652 = !DILocation(line: 6226, column: 52, scope: !18650)
!18653 = !DILocalVariable(name: "value", arg: 2, scope: !18650, file: !3, line: 6226, type: !987)
!18654 = !DILocation(line: 6226, column: 61, scope: !18650)
!18655 = !DILocalVariable(name: "priv", scope: !18650, file: !3, line: 6228, type: !7985)
!18656 = !DILocation(line: 6228, column: 19, scope: !18650)
!18657 = !DILocation(line: 6228, column: 38, scope: !18650)
!18658 = !DILocation(line: 6228, column: 26, scope: !18650)
!18659 = !DILocation(line: 6230, column: 21, scope: !18650)
!18660 = !DILocation(line: 6230, column: 2, scope: !18650)
!18661 = !DILocation(line: 6230, column: 8, scope: !18650)
!18662 = !DILocation(line: 6230, column: 19, scope: !18650)
!18663 = !DILocation(line: 6231, column: 1, scope: !18650)
!18664 = distinct !DISubprogram(name: "netdev_nway_reset", scope: !3, file: !3, line: 6036, type: !402, scopeLine: 6037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18665 = !DILocalVariable(name: "dev", arg: 1, scope: !18664, file: !3, line: 6036, type: !290)
!18666 = !DILocation(line: 6036, column: 49, scope: !18664)
!18667 = !DILocalVariable(name: "priv", scope: !18664, file: !3, line: 6038, type: !7985)
!18668 = !DILocation(line: 6038, column: 19, scope: !18664)
!18669 = !DILocation(line: 6038, column: 38, scope: !18664)
!18670 = !DILocation(line: 6038, column: 26, scope: !18664)
!18671 = !DILocalVariable(name: "hw_priv", scope: !18664, file: !3, line: 6039, type: !7512)
!18672 = !DILocation(line: 6039, column: 19, scope: !18664)
!18673 = !DILocation(line: 6039, column: 29, scope: !18664)
!18674 = !DILocation(line: 6039, column: 35, scope: !18664)
!18675 = !DILocalVariable(name: "rc", scope: !18664, file: !3, line: 6040, type: !32)
!18676 = !DILocation(line: 6040, column: 6, scope: !18664)
!18677 = !DILocation(line: 6042, column: 14, scope: !18664)
!18678 = !DILocation(line: 6042, column: 23, scope: !18664)
!18679 = !DILocation(line: 6042, column: 2, scope: !18664)
!18680 = !DILocation(line: 6043, column: 25, scope: !18664)
!18681 = !DILocation(line: 6043, column: 31, scope: !18664)
!18682 = !DILocation(line: 6043, column: 7, scope: !18664)
!18683 = !DILocation(line: 6043, column: 5, scope: !18664)
!18684 = !DILocation(line: 6044, column: 16, scope: !18664)
!18685 = !DILocation(line: 6044, column: 25, scope: !18664)
!18686 = !DILocation(line: 6044, column: 2, scope: !18664)
!18687 = !DILocation(line: 6045, column: 9, scope: !18664)
!18688 = !DILocation(line: 6045, column: 2, scope: !18664)
!18689 = distinct !DISubprogram(name: "netdev_get_link", scope: !3, file: !3, line: 6056, type: !5576, scopeLine: 6057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18690 = !DILocalVariable(name: "dev", arg: 1, scope: !18689, file: !3, line: 6056, type: !290)
!18691 = !DILocation(line: 6056, column: 47, scope: !18689)
!18692 = !DILocalVariable(name: "priv", scope: !18689, file: !3, line: 6058, type: !7985)
!18693 = !DILocation(line: 6058, column: 19, scope: !18689)
!18694 = !DILocation(line: 6058, column: 38, scope: !18689)
!18695 = !DILocation(line: 6058, column: 26, scope: !18689)
!18696 = !DILocalVariable(name: "rc", scope: !18689, file: !3, line: 6059, type: !32)
!18697 = !DILocation(line: 6059, column: 6, scope: !18689)
!18698 = !DILocation(line: 6061, column: 20, scope: !18689)
!18699 = !DILocation(line: 6061, column: 26, scope: !18689)
!18700 = !DILocation(line: 6061, column: 7, scope: !18689)
!18701 = !DILocation(line: 6061, column: 5, scope: !18689)
!18702 = !DILocation(line: 6062, column: 9, scope: !18689)
!18703 = !DILocation(line: 6062, column: 2, scope: !18689)
!18704 = distinct !DISubprogram(name: "netdev_get_eeprom_len", scope: !3, file: !3, line: 6241, type: !402, scopeLine: 6242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18705 = !DILocalVariable(name: "dev", arg: 1, scope: !18704, file: !3, line: 6241, type: !290)
!18706 = !DILocation(line: 6241, column: 53, scope: !18704)
!18707 = !DILocation(line: 6243, column: 2, scope: !18704)
!18708 = distinct !DISubprogram(name: "netdev_get_eeprom", scope: !3, file: !3, line: 6258, type: !5604, scopeLine: 6260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18709 = !DILocalVariable(name: "dev", arg: 1, scope: !18708, file: !3, line: 6258, type: !290)
!18710 = !DILocation(line: 6258, column: 49, scope: !18708)
!18711 = !DILocalVariable(name: "eeprom", arg: 2, scope: !18708, file: !3, line: 6259, type: !5606)
!18712 = !DILocation(line: 6259, column: 25, scope: !18708)
!18713 = !DILocalVariable(name: "data", arg: 3, scope: !18708, file: !3, line: 6259, type: !793)
!18714 = !DILocation(line: 6259, column: 37, scope: !18708)
!18715 = !DILocalVariable(name: "priv", scope: !18708, file: !3, line: 6261, type: !7985)
!18716 = !DILocation(line: 6261, column: 19, scope: !18708)
!18717 = !DILocation(line: 6261, column: 38, scope: !18708)
!18718 = !DILocation(line: 6261, column: 26, scope: !18708)
!18719 = !DILocalVariable(name: "hw_priv", scope: !18708, file: !3, line: 6262, type: !7512)
!18720 = !DILocation(line: 6262, column: 19, scope: !18708)
!18721 = !DILocation(line: 6262, column: 29, scope: !18708)
!18722 = !DILocation(line: 6262, column: 35, scope: !18708)
!18723 = !DILocalVariable(name: "eeprom_byte", scope: !18708, file: !3, line: 6263, type: !793)
!18724 = !DILocation(line: 6263, column: 6, scope: !18708)
!18725 = !DILocalVariable(name: "i", scope: !18708, file: !3, line: 6264, type: !32)
!18726 = !DILocation(line: 6264, column: 6, scope: !18708)
!18727 = !DILocalVariable(name: "len", scope: !18708, file: !3, line: 6265, type: !32)
!18728 = !DILocation(line: 6265, column: 6, scope: !18708)
!18729 = !DILocation(line: 6267, column: 9, scope: !18708)
!18730 = !DILocation(line: 6267, column: 17, scope: !18708)
!18731 = !DILocation(line: 6267, column: 26, scope: !18708)
!18732 = !DILocation(line: 6267, column: 34, scope: !18708)
!18733 = !DILocation(line: 6267, column: 24, scope: !18708)
!18734 = !DILocation(line: 6267, column: 38, scope: !18708)
!18735 = !DILocation(line: 6267, column: 43, scope: !18708)
!18736 = !DILocation(line: 6267, column: 6, scope: !18708)
!18737 = !DILocation(line: 6268, column: 11, scope: !18738)
!18738 = distinct !DILexicalBlock(scope: !18708, file: !3, line: 6268, column: 2)
!18739 = !DILocation(line: 6268, column: 19, scope: !18738)
!18740 = !DILocation(line: 6268, column: 26, scope: !18738)
!18741 = !DILocation(line: 6268, column: 9, scope: !18738)
!18742 = !DILocation(line: 6268, column: 7, scope: !18738)
!18743 = !DILocation(line: 6268, column: 31, scope: !18744)
!18744 = distinct !DILexicalBlock(scope: !18738, file: !3, line: 6268, column: 2)
!18745 = !DILocation(line: 6268, column: 35, scope: !18744)
!18746 = !DILocation(line: 6268, column: 33, scope: !18744)
!18747 = !DILocation(line: 6268, column: 2, scope: !18738)
!18748 = !DILocation(line: 6269, column: 33, scope: !18744)
!18749 = !DILocation(line: 6269, column: 42, scope: !18744)
!18750 = !DILocation(line: 6269, column: 46, scope: !18744)
!18751 = !DILocation(line: 6269, column: 20, scope: !18744)
!18752 = !DILocation(line: 6269, column: 15, scope: !18744)
!18753 = !DILocation(line: 6269, column: 3, scope: !18744)
!18754 = !DILocation(line: 6269, column: 18, scope: !18744)
!18755 = !DILocation(line: 6268, column: 41, scope: !18744)
!18756 = !DILocation(line: 6268, column: 2, scope: !18744)
!18757 = distinct !{!18757, !18747, !18758}
!18758 = !DILocation(line: 6269, column: 47, scope: !18738)
!18759 = !DILocation(line: 6270, column: 2, scope: !18708)
!18760 = !DILocation(line: 6270, column: 10, scope: !18708)
!18761 = !DILocation(line: 6270, column: 16, scope: !18708)
!18762 = !DILocation(line: 6271, column: 9, scope: !18708)
!18763 = !DILocation(line: 6271, column: 16, scope: !18708)
!18764 = !DILocation(line: 6271, column: 28, scope: !18708)
!18765 = !DILocation(line: 6271, column: 36, scope: !18708)
!18766 = !DILocation(line: 6271, column: 45, scope: !18708)
!18767 = !DILocation(line: 6271, column: 53, scope: !18708)
!18768 = !DILocation(line: 6271, column: 2, scope: !18708)
!18769 = !DILocation(line: 6273, column: 2, scope: !18708)
!18770 = distinct !DISubprogram(name: "netdev_set_eeprom", scope: !3, file: !3, line: 6286, type: !5604, scopeLine: 6288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18771 = !DILocalVariable(name: "dev", arg: 1, scope: !18770, file: !3, line: 6286, type: !290)
!18772 = !DILocation(line: 6286, column: 49, scope: !18770)
!18773 = !DILocalVariable(name: "eeprom", arg: 2, scope: !18770, file: !3, line: 6287, type: !5606)
!18774 = !DILocation(line: 6287, column: 25, scope: !18770)
!18775 = !DILocalVariable(name: "data", arg: 3, scope: !18770, file: !3, line: 6287, type: !793)
!18776 = !DILocation(line: 6287, column: 37, scope: !18770)
!18777 = !DILocalVariable(name: "priv", scope: !18770, file: !3, line: 6289, type: !7985)
!18778 = !DILocation(line: 6289, column: 19, scope: !18770)
!18779 = !DILocation(line: 6289, column: 38, scope: !18770)
!18780 = !DILocation(line: 6289, column: 26, scope: !18770)
!18781 = !DILocalVariable(name: "hw_priv", scope: !18770, file: !3, line: 6290, type: !7512)
!18782 = !DILocation(line: 6290, column: 19, scope: !18770)
!18783 = !DILocation(line: 6290, column: 29, scope: !18770)
!18784 = !DILocation(line: 6290, column: 35, scope: !18770)
!18785 = !DILocalVariable(name: "eeprom_word", scope: !18770, file: !3, line: 6291, type: !8307)
!18786 = !DILocation(line: 6291, column: 6, scope: !18770)
!18787 = !DILocalVariable(name: "eeprom_byte", scope: !18770, file: !3, line: 6292, type: !793)
!18788 = !DILocation(line: 6292, column: 6, scope: !18770)
!18789 = !DILocation(line: 6292, column: 27, scope: !18770)
!18790 = !DILocation(line: 6292, column: 20, scope: !18770)
!18791 = !DILocalVariable(name: "i", scope: !18770, file: !3, line: 6293, type: !32)
!18792 = !DILocation(line: 6293, column: 6, scope: !18770)
!18793 = !DILocalVariable(name: "len", scope: !18770, file: !3, line: 6294, type: !32)
!18794 = !DILocation(line: 6294, column: 6, scope: !18770)
!18795 = !DILocation(line: 6296, column: 6, scope: !18796)
!18796 = distinct !DILexicalBlock(scope: !18770, file: !3, line: 6296, column: 6)
!18797 = !DILocation(line: 6296, column: 14, scope: !18796)
!18798 = !DILocation(line: 6296, column: 20, scope: !18796)
!18799 = !DILocation(line: 6296, column: 6, scope: !18770)
!18800 = !DILocation(line: 6297, column: 3, scope: !18796)
!18801 = !DILocation(line: 6299, column: 9, scope: !18770)
!18802 = !DILocation(line: 6299, column: 17, scope: !18770)
!18803 = !DILocation(line: 6299, column: 26, scope: !18770)
!18804 = !DILocation(line: 6299, column: 34, scope: !18770)
!18805 = !DILocation(line: 6299, column: 24, scope: !18770)
!18806 = !DILocation(line: 6299, column: 38, scope: !18770)
!18807 = !DILocation(line: 6299, column: 43, scope: !18770)
!18808 = !DILocation(line: 6299, column: 6, scope: !18770)
!18809 = !DILocation(line: 6300, column: 11, scope: !18810)
!18810 = distinct !DILexicalBlock(scope: !18770, file: !3, line: 6300, column: 2)
!18811 = !DILocation(line: 6300, column: 19, scope: !18810)
!18812 = !DILocation(line: 6300, column: 26, scope: !18810)
!18813 = !DILocation(line: 6300, column: 9, scope: !18810)
!18814 = !DILocation(line: 6300, column: 7, scope: !18810)
!18815 = !DILocation(line: 6300, column: 31, scope: !18816)
!18816 = distinct !DILexicalBlock(scope: !18810, file: !3, line: 6300, column: 2)
!18817 = !DILocation(line: 6300, column: 35, scope: !18816)
!18818 = !DILocation(line: 6300, column: 33, scope: !18816)
!18819 = !DILocation(line: 6300, column: 2, scope: !18810)
!18820 = !DILocation(line: 6301, column: 33, scope: !18816)
!18821 = !DILocation(line: 6301, column: 42, scope: !18816)
!18822 = !DILocation(line: 6301, column: 46, scope: !18816)
!18823 = !DILocation(line: 6301, column: 20, scope: !18816)
!18824 = !DILocation(line: 6301, column: 15, scope: !18816)
!18825 = !DILocation(line: 6301, column: 3, scope: !18816)
!18826 = !DILocation(line: 6301, column: 18, scope: !18816)
!18827 = !DILocation(line: 6300, column: 41, scope: !18816)
!18828 = !DILocation(line: 6300, column: 2, scope: !18816)
!18829 = distinct !{!18829, !18819, !18830}
!18830 = !DILocation(line: 6301, column: 47, scope: !18810)
!18831 = !DILocation(line: 6302, column: 2, scope: !18770)
!18832 = !DILocation(line: 6303, column: 10, scope: !18770)
!18833 = !DILocation(line: 6303, column: 22, scope: !18770)
!18834 = !DILocation(line: 6303, column: 30, scope: !18770)
!18835 = !DILocation(line: 6303, column: 39, scope: !18770)
!18836 = !DILocation(line: 6303, column: 45, scope: !18770)
!18837 = !DILocation(line: 6303, column: 53, scope: !18770)
!18838 = !DILocation(line: 6303, column: 2, scope: !18770)
!18839 = !DILocation(line: 6304, column: 9, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18770, file: !3, line: 6304, column: 2)
!18841 = !DILocation(line: 6304, column: 7, scope: !18840)
!18842 = !DILocation(line: 6304, column: 14, scope: !18843)
!18843 = distinct !DILexicalBlock(scope: !18840, file: !3, line: 6304, column: 2)
!18844 = !DILocation(line: 6304, column: 16, scope: !18843)
!18845 = !DILocation(line: 6304, column: 2, scope: !18840)
!18846 = !DILocation(line: 6305, column: 19, scope: !18847)
!18847 = distinct !DILexicalBlock(scope: !18843, file: !3, line: 6305, column: 7)
!18848 = !DILocation(line: 6305, column: 7, scope: !18847)
!18849 = !DILocation(line: 6305, column: 37, scope: !18847)
!18850 = !DILocation(line: 6305, column: 25, scope: !18847)
!18851 = !DILocation(line: 6305, column: 22, scope: !18847)
!18852 = !DILocation(line: 6305, column: 7, scope: !18843)
!18853 = !DILocation(line: 6306, column: 33, scope: !18854)
!18854 = distinct !DILexicalBlock(scope: !18847, file: !3, line: 6305, column: 41)
!18855 = !DILocation(line: 6306, column: 21, scope: !18854)
!18856 = !DILocation(line: 6306, column: 16, scope: !18854)
!18857 = !DILocation(line: 6306, column: 4, scope: !18854)
!18858 = !DILocation(line: 6306, column: 19, scope: !18854)
!18859 = !DILocation(line: 6307, column: 18, scope: !18854)
!18860 = !DILocation(line: 6307, column: 27, scope: !18854)
!18861 = !DILocation(line: 6307, column: 31, scope: !18854)
!18862 = !DILocation(line: 6307, column: 46, scope: !18854)
!18863 = !DILocation(line: 6307, column: 34, scope: !18854)
!18864 = !DILocation(line: 6307, column: 4, scope: !18854)
!18865 = !DILocation(line: 6308, column: 2, scope: !18854)
!18866 = !DILocation(line: 6305, column: 38, scope: !18847)
!18867 = !DILocation(line: 6304, column: 32, scope: !18843)
!18868 = !DILocation(line: 6304, column: 2, scope: !18843)
!18869 = distinct !{!18869, !18845, !18870}
!18870 = !DILocation(line: 6308, column: 2, scope: !18840)
!18871 = !DILocation(line: 6310, column: 2, scope: !18770)
!18872 = !DILocation(line: 6311, column: 1, scope: !18770)
!18873 = distinct !DISubprogram(name: "netdev_get_ringparam", scope: !3, file: !3, line: 6398, type: !5648, scopeLine: 6400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18874 = !DILocalVariable(name: "dev", arg: 1, scope: !18873, file: !3, line: 6398, type: !290)
!18875 = !DILocation(line: 6398, column: 53, scope: !18873)
!18876 = !DILocalVariable(name: "ring", arg: 2, scope: !18873, file: !3, line: 6399, type: !5650)
!18877 = !DILocation(line: 6399, column: 28, scope: !18873)
!18878 = !DILocalVariable(name: "priv", scope: !18873, file: !3, line: 6401, type: !7985)
!18879 = !DILocation(line: 6401, column: 19, scope: !18873)
!18880 = !DILocation(line: 6401, column: 38, scope: !18873)
!18881 = !DILocation(line: 6401, column: 26, scope: !18873)
!18882 = !DILocalVariable(name: "hw_priv", scope: !18873, file: !3, line: 6402, type: !7512)
!18883 = !DILocation(line: 6402, column: 19, scope: !18873)
!18884 = !DILocation(line: 6402, column: 29, scope: !18873)
!18885 = !DILocation(line: 6402, column: 35, scope: !18873)
!18886 = !DILocalVariable(name: "hw", scope: !18873, file: !3, line: 6403, type: !8002)
!18887 = !DILocation(line: 6403, column: 17, scope: !18873)
!18888 = !DILocation(line: 6403, column: 23, scope: !18873)
!18889 = !DILocation(line: 6403, column: 32, scope: !18873)
!18890 = !DILocation(line: 6405, column: 2, scope: !18873)
!18891 = !DILocation(line: 6405, column: 8, scope: !18873)
!18892 = !DILocation(line: 6405, column: 23, scope: !18873)
!18893 = !DILocation(line: 6406, column: 21, scope: !18873)
!18894 = !DILocation(line: 6406, column: 25, scope: !18873)
!18895 = !DILocation(line: 6406, column: 38, scope: !18873)
!18896 = !DILocation(line: 6406, column: 2, scope: !18873)
!18897 = !DILocation(line: 6406, column: 8, scope: !18873)
!18898 = !DILocation(line: 6406, column: 19, scope: !18873)
!18899 = !DILocation(line: 6407, column: 2, scope: !18873)
!18900 = !DILocation(line: 6407, column: 8, scope: !18873)
!18901 = !DILocation(line: 6407, column: 23, scope: !18873)
!18902 = !DILocation(line: 6408, column: 21, scope: !18873)
!18903 = !DILocation(line: 6408, column: 25, scope: !18873)
!18904 = !DILocation(line: 6408, column: 38, scope: !18873)
!18905 = !DILocation(line: 6408, column: 2, scope: !18873)
!18906 = !DILocation(line: 6408, column: 8, scope: !18873)
!18907 = !DILocation(line: 6408, column: 19, scope: !18873)
!18908 = !DILocation(line: 6409, column: 1, scope: !18873)
!18909 = distinct !DISubprogram(name: "netdev_get_pauseparam", scope: !3, file: !3, line: 6320, type: !5677, scopeLine: 6322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18910 = !DILocalVariable(name: "dev", arg: 1, scope: !18909, file: !3, line: 6320, type: !290)
!18911 = !DILocation(line: 6320, column: 54, scope: !18909)
!18912 = !DILocalVariable(name: "pause", arg: 2, scope: !18909, file: !3, line: 6321, type: !5679)
!18913 = !DILocation(line: 6321, column: 29, scope: !18909)
!18914 = !DILocalVariable(name: "priv", scope: !18909, file: !3, line: 6323, type: !7985)
!18915 = !DILocation(line: 6323, column: 19, scope: !18909)
!18916 = !DILocation(line: 6323, column: 38, scope: !18909)
!18917 = !DILocation(line: 6323, column: 26, scope: !18909)
!18918 = !DILocalVariable(name: "hw_priv", scope: !18909, file: !3, line: 6324, type: !7512)
!18919 = !DILocation(line: 6324, column: 19, scope: !18909)
!18920 = !DILocation(line: 6324, column: 29, scope: !18909)
!18921 = !DILocation(line: 6324, column: 35, scope: !18909)
!18922 = !DILocalVariable(name: "hw", scope: !18909, file: !3, line: 6325, type: !8002)
!18923 = !DILocation(line: 6325, column: 17, scope: !18909)
!18924 = !DILocation(line: 6325, column: 23, scope: !18909)
!18925 = !DILocation(line: 6325, column: 32, scope: !18909)
!18926 = !DILocation(line: 6327, column: 20, scope: !18909)
!18927 = !DILocation(line: 6327, column: 24, scope: !18909)
!18928 = !DILocation(line: 6327, column: 34, scope: !18909)
!18929 = !DILocation(line: 6327, column: 19, scope: !18909)
!18930 = !DILocation(line: 6327, column: 2, scope: !18909)
!18931 = !DILocation(line: 6327, column: 9, scope: !18909)
!18932 = !DILocation(line: 6327, column: 17, scope: !18909)
!18933 = !DILocation(line: 6328, column: 7, scope: !18934)
!18934 = distinct !DILexicalBlock(scope: !18909, file: !3, line: 6328, column: 6)
!18935 = !DILocation(line: 6328, column: 11, scope: !18934)
!18936 = !DILocation(line: 6328, column: 6, scope: !18909)
!18937 = !DILocation(line: 6330, column: 5, scope: !18938)
!18938 = distinct !DILexicalBlock(scope: !18934, file: !3, line: 6328, column: 23)
!18939 = !DILocation(line: 6330, column: 9, scope: !18938)
!18940 = !DILocation(line: 6330, column: 16, scope: !18938)
!18941 = !DILocation(line: 6330, column: 4, scope: !18938)
!18942 = !DILocation(line: 6329, column: 3, scope: !18938)
!18943 = !DILocation(line: 6329, column: 10, scope: !18938)
!18944 = !DILocation(line: 6329, column: 19, scope: !18938)
!18945 = !DILocation(line: 6332, column: 5, scope: !18938)
!18946 = !DILocation(line: 6332, column: 9, scope: !18938)
!18947 = !DILocation(line: 6332, column: 16, scope: !18938)
!18948 = !DILocation(line: 6332, column: 4, scope: !18938)
!18949 = !DILocation(line: 6331, column: 3, scope: !18938)
!18950 = !DILocation(line: 6331, column: 10, scope: !18938)
!18951 = !DILocation(line: 6331, column: 19, scope: !18938)
!18952 = !DILocation(line: 6333, column: 2, scope: !18938)
!18953 = !DILocation(line: 6335, column: 12, scope: !18954)
!18954 = distinct !DILexicalBlock(scope: !18934, file: !3, line: 6333, column: 9)
!18955 = !DILocation(line: 6335, column: 5, scope: !18954)
!18956 = !DILocation(line: 6335, column: 4, scope: !18954)
!18957 = !DILocation(line: 6334, column: 3, scope: !18954)
!18958 = !DILocation(line: 6334, column: 10, scope: !18954)
!18959 = !DILocation(line: 6334, column: 19, scope: !18954)
!18960 = !DILocation(line: 6338, column: 12, scope: !18954)
!18961 = !DILocation(line: 6338, column: 5, scope: !18954)
!18962 = !DILocation(line: 6338, column: 4, scope: !18954)
!18963 = !DILocation(line: 6337, column: 3, scope: !18954)
!18964 = !DILocation(line: 6337, column: 10, scope: !18954)
!18965 = !DILocation(line: 6337, column: 19, scope: !18954)
!18966 = !DILocation(line: 6341, column: 1, scope: !18909)
!18967 = distinct !DISubprogram(name: "netdev_set_pauseparam", scope: !3, file: !3, line: 6353, type: !5688, scopeLine: 6355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18968 = !DILocalVariable(name: "dev", arg: 1, scope: !18967, file: !3, line: 6353, type: !290)
!18969 = !DILocation(line: 6353, column: 53, scope: !18967)
!18970 = !DILocalVariable(name: "pause", arg: 2, scope: !18967, file: !3, line: 6354, type: !5679)
!18971 = !DILocation(line: 6354, column: 29, scope: !18967)
!18972 = !DILocalVariable(name: "priv", scope: !18967, file: !3, line: 6356, type: !7985)
!18973 = !DILocation(line: 6356, column: 19, scope: !18967)
!18974 = !DILocation(line: 6356, column: 38, scope: !18967)
!18975 = !DILocation(line: 6356, column: 26, scope: !18967)
!18976 = !DILocalVariable(name: "hw_priv", scope: !18967, file: !3, line: 6357, type: !7512)
!18977 = !DILocation(line: 6357, column: 19, scope: !18967)
!18978 = !DILocation(line: 6357, column: 29, scope: !18967)
!18979 = !DILocation(line: 6357, column: 35, scope: !18967)
!18980 = !DILocalVariable(name: "hw", scope: !18967, file: !3, line: 6358, type: !8002)
!18981 = !DILocation(line: 6358, column: 17, scope: !18967)
!18982 = !DILocation(line: 6358, column: 23, scope: !18967)
!18983 = !DILocation(line: 6358, column: 32, scope: !18967)
!18984 = !DILocalVariable(name: "port", scope: !18967, file: !3, line: 6359, type: !8386)
!18985 = !DILocation(line: 6359, column: 19, scope: !18967)
!18986 = !DILocation(line: 6359, column: 27, scope: !18967)
!18987 = !DILocation(line: 6359, column: 33, scope: !18967)
!18988 = !DILocation(line: 6361, column: 14, scope: !18967)
!18989 = !DILocation(line: 6361, column: 23, scope: !18967)
!18990 = !DILocation(line: 6361, column: 2, scope: !18967)
!18991 = !DILocation(line: 6362, column: 6, scope: !18992)
!18992 = distinct !DILexicalBlock(scope: !18967, file: !3, line: 6362, column: 6)
!18993 = !DILocation(line: 6362, column: 13, scope: !18992)
!18994 = !DILocation(line: 6362, column: 6, scope: !18967)
!18995 = !DILocation(line: 6363, column: 8, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18997, file: !3, line: 6363, column: 7)
!18997 = distinct !DILexicalBlock(scope: !18992, file: !3, line: 6362, column: 22)
!18998 = !DILocation(line: 6363, column: 15, scope: !18996)
!18999 = !DILocation(line: 6363, column: 24, scope: !18996)
!19000 = !DILocation(line: 6363, column: 28, scope: !18996)
!19001 = !DILocation(line: 6363, column: 35, scope: !18996)
!19002 = !DILocation(line: 6363, column: 7, scope: !18997)
!19003 = !DILocation(line: 6364, column: 4, scope: !18996)
!19004 = !DILocation(line: 6364, column: 10, scope: !18996)
!19005 = !DILocation(line: 6364, column: 20, scope: !18996)
!19006 = !DILocation(line: 6366, column: 4, scope: !18996)
!19007 = !DILocation(line: 6366, column: 10, scope: !18996)
!19008 = !DILocation(line: 6366, column: 20, scope: !18996)
!19009 = !DILocation(line: 6367, column: 3, scope: !18997)
!19010 = !DILocation(line: 6367, column: 7, scope: !18997)
!19011 = !DILocation(line: 6367, column: 17, scope: !18997)
!19012 = !DILocation(line: 6368, column: 3, scope: !18997)
!19013 = !DILocation(line: 6368, column: 9, scope: !18997)
!19014 = !DILocation(line: 6368, column: 20, scope: !18997)
!19015 = !DILocation(line: 6369, column: 7, scope: !19016)
!19016 = distinct !DILexicalBlock(scope: !18997, file: !3, line: 6369, column: 7)
!19017 = !DILocation(line: 6369, column: 11, scope: !19016)
!19018 = !DILocation(line: 6369, column: 7, scope: !18997)
!19019 = !DILocation(line: 6370, column: 11, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !19016, file: !3, line: 6369, column: 23)
!19021 = !DILocation(line: 6370, column: 4, scope: !19020)
!19022 = !DILocation(line: 6372, column: 11, scope: !19020)
!19023 = !DILocation(line: 6372, column: 4, scope: !19020)
!19024 = !DILocation(line: 6374, column: 3, scope: !19020)
!19025 = !DILocation(line: 6375, column: 23, scope: !18997)
!19026 = !DILocation(line: 6375, column: 3, scope: !18997)
!19027 = !DILocation(line: 6376, column: 2, scope: !18997)
!19028 = !DILocation(line: 6377, column: 3, scope: !19029)
!19029 = distinct !DILexicalBlock(scope: !18992, file: !3, line: 6376, column: 9)
!19030 = !DILocation(line: 6377, column: 7, scope: !19029)
!19031 = !DILocation(line: 6377, column: 17, scope: !19029)
!19032 = !DILocation(line: 6378, column: 7, scope: !19033)
!19033 = distinct !DILexicalBlock(scope: !19029, file: !3, line: 6378, column: 7)
!19034 = !DILocation(line: 6378, column: 11, scope: !19033)
!19035 = !DILocation(line: 6378, column: 7, scope: !19029)
!19036 = !DILocation(line: 6379, column: 11, scope: !19037)
!19037 = distinct !DILexicalBlock(scope: !19033, file: !3, line: 6378, column: 23)
!19038 = !DILocation(line: 6380, column: 26, scope: !19037)
!19039 = !DILocation(line: 6380, column: 33, scope: !19037)
!19040 = !DILocation(line: 6379, column: 4, scope: !19037)
!19041 = !DILocation(line: 6381, column: 11, scope: !19037)
!19042 = !DILocation(line: 6382, column: 26, scope: !19037)
!19043 = !DILocation(line: 6382, column: 33, scope: !19037)
!19044 = !DILocation(line: 6381, column: 4, scope: !19037)
!19045 = !DILocation(line: 6383, column: 3, scope: !19037)
!19046 = !DILocation(line: 6384, column: 18, scope: !19033)
!19047 = !DILocation(line: 6384, column: 22, scope: !19033)
!19048 = !DILocation(line: 6384, column: 29, scope: !19033)
!19049 = !DILocation(line: 6384, column: 39, scope: !19033)
!19050 = !DILocation(line: 6384, column: 46, scope: !19033)
!19051 = !DILocation(line: 6384, column: 4, scope: !19033)
!19052 = !DILocation(line: 6386, column: 16, scope: !18967)
!19053 = !DILocation(line: 6386, column: 25, scope: !18967)
!19054 = !DILocation(line: 6386, column: 2, scope: !18967)
!19055 = !DILocation(line: 6388, column: 2, scope: !18967)
!19056 = distinct !DISubprogram(name: "netdev_get_strings", scope: !3, file: !3, line: 6462, type: !5705, scopeLine: 6463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19057 = !DILocalVariable(name: "dev", arg: 1, scope: !19056, file: !3, line: 6462, type: !290)
!19058 = !DILocation(line: 6462, column: 51, scope: !19056)
!19059 = !DILocalVariable(name: "stringset", arg: 2, scope: !19056, file: !3, line: 6462, type: !987)
!19060 = !DILocation(line: 6462, column: 60, scope: !19056)
!19061 = !DILocalVariable(name: "buf", arg: 3, scope: !19056, file: !3, line: 6462, type: !793)
!19062 = !DILocation(line: 6462, column: 75, scope: !19056)
!19063 = !DILocalVariable(name: "priv", scope: !19056, file: !3, line: 6464, type: !7985)
!19064 = !DILocation(line: 6464, column: 19, scope: !19056)
!19065 = !DILocation(line: 6464, column: 38, scope: !19056)
!19066 = !DILocation(line: 6464, column: 26, scope: !19056)
!19067 = !DILocalVariable(name: "hw_priv", scope: !19056, file: !3, line: 6465, type: !7512)
!19068 = !DILocation(line: 6465, column: 19, scope: !19056)
!19069 = !DILocation(line: 6465, column: 29, scope: !19056)
!19070 = !DILocation(line: 6465, column: 35, scope: !19056)
!19071 = !DILocalVariable(name: "hw", scope: !19056, file: !3, line: 6466, type: !8002)
!19072 = !DILocation(line: 6466, column: 17, scope: !19056)
!19073 = !DILocation(line: 6466, column: 23, scope: !19056)
!19074 = !DILocation(line: 6466, column: 32, scope: !19056)
!19075 = !DILocation(line: 6468, column: 22, scope: !19076)
!19076 = distinct !DILexicalBlock(scope: !19056, file: !3, line: 6468, column: 6)
!19077 = !DILocation(line: 6468, column: 19, scope: !19076)
!19078 = !DILocation(line: 6468, column: 6, scope: !19056)
!19079 = !DILocation(line: 6469, column: 10, scope: !19076)
!19080 = !DILocation(line: 6470, column: 22, scope: !19076)
!19081 = !DILocation(line: 6470, column: 26, scope: !19076)
!19082 = !DILocation(line: 6470, column: 20, scope: !19076)
!19083 = !DILocation(line: 6470, column: 4, scope: !19076)
!19084 = !DILocation(line: 6469, column: 3, scope: !19076)
!19085 = !DILocation(line: 6471, column: 1, scope: !19056)
!19086 = distinct !DISubprogram(name: "netdev_get_ethtool_stats", scope: !3, file: !3, line: 6504, type: !5713, scopeLine: 6506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19087 = !DILocalVariable(name: "dev", arg: 1, scope: !19086, file: !3, line: 6504, type: !290)
!19088 = !DILocation(line: 6504, column: 57, scope: !19086)
!19089 = !DILocalVariable(name: "stats", arg: 2, scope: !19086, file: !3, line: 6505, type: !5715)
!19090 = !DILocation(line: 6505, column: 24, scope: !19086)
!19091 = !DILocalVariable(name: "data", arg: 3, scope: !19086, file: !3, line: 6505, type: !5372)
!19092 = !DILocation(line: 6505, column: 36, scope: !19086)
!19093 = !DILocalVariable(name: "priv", scope: !19086, file: !3, line: 6507, type: !7985)
!19094 = !DILocation(line: 6507, column: 19, scope: !19086)
!19095 = !DILocation(line: 6507, column: 38, scope: !19086)
!19096 = !DILocation(line: 6507, column: 26, scope: !19086)
!19097 = !DILocalVariable(name: "hw_priv", scope: !19086, file: !3, line: 6508, type: !7512)
!19098 = !DILocation(line: 6508, column: 19, scope: !19086)
!19099 = !DILocation(line: 6508, column: 29, scope: !19086)
!19100 = !DILocation(line: 6508, column: 35, scope: !19086)
!19101 = !DILocalVariable(name: "hw", scope: !19086, file: !3, line: 6509, type: !8002)
!19102 = !DILocation(line: 6509, column: 17, scope: !19086)
!19103 = !DILocation(line: 6509, column: 23, scope: !19086)
!19104 = !DILocation(line: 6509, column: 32, scope: !19086)
!19105 = !DILocalVariable(name: "port", scope: !19086, file: !3, line: 6510, type: !8386)
!19106 = !DILocation(line: 6510, column: 19, scope: !19086)
!19107 = !DILocation(line: 6510, column: 27, scope: !19086)
!19108 = !DILocation(line: 6510, column: 33, scope: !19086)
!19109 = !DILocalVariable(name: "n_stats", scope: !19086, file: !3, line: 6511, type: !32)
!19110 = !DILocation(line: 6511, column: 6, scope: !19086)
!19111 = !DILocation(line: 6511, column: 16, scope: !19086)
!19112 = !DILocation(line: 6511, column: 23, scope: !19086)
!19113 = !DILocalVariable(name: "i", scope: !19086, file: !3, line: 6512, type: !32)
!19114 = !DILocation(line: 6512, column: 6, scope: !19086)
!19115 = !DILocalVariable(name: "n", scope: !19086, file: !3, line: 6513, type: !32)
!19116 = !DILocation(line: 6513, column: 6, scope: !19086)
!19117 = !DILocalVariable(name: "p", scope: !19086, file: !3, line: 6514, type: !32)
!19118 = !DILocation(line: 6514, column: 6, scope: !19086)
!19119 = !DILocalVariable(name: "counter", scope: !19086, file: !3, line: 6515, type: !7856)
!19120 = !DILocation(line: 6515, column: 6, scope: !19086)
!19121 = !DILocation(line: 6517, column: 14, scope: !19086)
!19122 = !DILocation(line: 6517, column: 23, scope: !19086)
!19123 = !DILocation(line: 6517, column: 2, scope: !19086)
!19124 = !DILocation(line: 6518, column: 4, scope: !19086)
!19125 = !DILocation(line: 6519, column: 9, scope: !19126)
!19126 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 6519, column: 2)
!19127 = !DILocation(line: 6519, column: 18, scope: !19126)
!19128 = !DILocation(line: 6519, column: 24, scope: !19126)
!19129 = !DILocation(line: 6519, column: 16, scope: !19126)
!19130 = !DILocation(line: 6519, column: 7, scope: !19126)
!19131 = !DILocation(line: 6519, column: 36, scope: !19132)
!19132 = distinct !DILexicalBlock(scope: !19126, file: !3, line: 6519, column: 2)
!19133 = !DILocation(line: 6519, column: 40, scope: !19132)
!19134 = !DILocation(line: 6519, column: 46, scope: !19132)
!19135 = !DILocation(line: 6519, column: 38, scope: !19132)
!19136 = !DILocation(line: 6519, column: 2, scope: !19126)
!19137 = !DILocation(line: 6520, column: 26, scope: !19138)
!19138 = distinct !DILexicalBlock(scope: !19139, file: !3, line: 6520, column: 7)
!19139 = distinct !DILexicalBlock(scope: !19132, file: !3, line: 6519, column: 70)
!19140 = !DILocation(line: 6520, column: 30, scope: !19138)
!19141 = !DILocation(line: 6520, column: 39, scope: !19138)
!19142 = !DILocation(line: 6520, column: 42, scope: !19138)
!19143 = !DILocation(line: 6520, column: 23, scope: !19138)
!19144 = !DILocation(line: 6520, column: 7, scope: !19139)
!19145 = !DILocation(line: 6521, column: 4, scope: !19146)
!19146 = distinct !DILexicalBlock(scope: !19138, file: !3, line: 6520, column: 49)
!19147 = !DILocation(line: 6521, column: 13, scope: !19146)
!19148 = !DILocation(line: 6521, column: 21, scope: !19146)
!19149 = !DILocation(line: 6521, column: 24, scope: !19146)
!19150 = !DILocation(line: 6521, column: 29, scope: !19146)
!19151 = !DILocation(line: 6524, column: 8, scope: !19152)
!19152 = distinct !DILexicalBlock(scope: !19146, file: !3, line: 6524, column: 8)
!19153 = !DILocation(line: 6524, column: 10, scope: !19152)
!19154 = !DILocation(line: 6524, column: 8, scope: !19146)
!19155 = !DILocation(line: 6525, column: 9, scope: !19152)
!19156 = !DILocation(line: 6525, column: 7, scope: !19152)
!19157 = !DILocation(line: 6525, column: 5, scope: !19152)
!19158 = !DILocation(line: 6526, column: 3, scope: !19146)
!19159 = !DILocation(line: 6527, column: 2, scope: !19139)
!19160 = !DILocation(line: 6519, column: 61, scope: !19132)
!19161 = !DILocation(line: 6519, column: 66, scope: !19132)
!19162 = !DILocation(line: 6519, column: 2, scope: !19132)
!19163 = distinct !{!19163, !19136, !19164}
!19164 = !DILocation(line: 6527, column: 2, scope: !19126)
!19165 = !DILocation(line: 6528, column: 16, scope: !19086)
!19166 = !DILocation(line: 6528, column: 25, scope: !19086)
!19167 = !DILocation(line: 6528, column: 2, scope: !19086)
!19168 = !DILocation(line: 6530, column: 6, scope: !19169)
!19169 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 6530, column: 6)
!19170 = !DILocation(line: 6530, column: 8, scope: !19169)
!19171 = !DILocation(line: 6530, column: 6, scope: !19086)
!19172 = !DILocation(line: 6531, column: 18, scope: !19169)
!19173 = !DILocation(line: 6531, column: 27, scope: !19169)
!19174 = !DILocation(line: 6531, column: 3, scope: !19169)
!19175 = !DILocation(line: 6533, column: 11, scope: !19176)
!19176 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 6533, column: 6)
!19177 = !DILocation(line: 6533, column: 17, scope: !19176)
!19178 = !DILocation(line: 6533, column: 8, scope: !19176)
!19179 = !DILocation(line: 6533, column: 30, scope: !19176)
!19180 = !DILocation(line: 6533, column: 33, scope: !19176)
!19181 = !DILocation(line: 6533, column: 35, scope: !19176)
!19182 = !DILocation(line: 6533, column: 6, scope: !19086)
!19183 = !DILocation(line: 6534, column: 7, scope: !19184)
!19184 = distinct !DILexicalBlock(scope: !19176, file: !3, line: 6533, column: 54)
!19185 = !DILocation(line: 6534, column: 5, scope: !19184)
!19186 = !DILocalVariable(name: "__ret", scope: !19187, file: !3, line: 6535, type: !998)
!19187 = distinct !DILexicalBlock(scope: !19184, file: !3, line: 6535, column: 3)
!19188 = !DILocation(line: 6535, column: 3, scope: !19187)
!19189 = !DILocation(line: 6535, column: 3, scope: !19190)
!19190 = distinct !DILexicalBlock(scope: !19187, file: !3, line: 6535, column: 3)
!19191 = !DILocation(line: 6535, column: 3, scope: !19192)
!19192 = distinct !DILexicalBlock(scope: !19190, file: !3, line: 6535, column: 3)
!19193 = !DILocalVariable(name: "__cond", scope: !19194, file: !3, line: 6535, type: !771)
!19194 = distinct !DILexicalBlock(scope: !19195, file: !3, line: 6535, column: 3)
!19195 = distinct !DILexicalBlock(scope: !19187, file: !3, line: 6535, column: 3)
!19196 = !DILocation(line: 6535, column: 3, scope: !19194)
!19197 = !DILocation(line: 6535, column: 3, scope: !19198)
!19198 = distinct !DILexicalBlock(scope: !19194, file: !3, line: 6535, column: 3)
!19199 = !DILocation(line: 6535, column: 3, scope: !19195)
!19200 = !DILocalVariable(name: "__wq_entry", scope: !19201, file: !3, line: 6535, type: !19202)
!19201 = distinct !DILexicalBlock(scope: !19195, file: !3, line: 6535, column: 3)
!19202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1890, line: 29, size: 320, elements: !19203)
!19203 = !{!19204, !19205, !19206, !19212}
!19204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !19202, file: !1890, line: 30, baseType: !7, size: 32)
!19205 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !19202, file: !1890, line: 31, baseType: !591, size: 64, offset: 64)
!19206 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !19202, file: !1890, line: 32, baseType: !19207, size: 64, offset: 128)
!19207 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1890, line: 16, baseType: !19208)
!19208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19209, size: 64)
!19209 = !DISubroutineType(types: !19210)
!19210 = !{!32, !19211, !7, !32, !591}
!19211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19202, size: 64)
!19212 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !19202, file: !1890, line: 33, baseType: !284, size: 128, offset: 192)
!19213 = !DILocation(line: 6535, column: 3, scope: !19201)
!19214 = !DILocalVariable(name: "__ret", scope: !19201, file: !3, line: 6535, type: !998)
!19215 = !DILocalVariable(name: "__int", scope: !19216, file: !3, line: 6535, type: !998)
!19216 = distinct !DILexicalBlock(scope: !19217, file: !3, line: 6535, column: 3)
!19217 = distinct !DILexicalBlock(scope: !19218, file: !3, line: 6535, column: 3)
!19218 = distinct !DILexicalBlock(scope: !19201, file: !3, line: 6535, column: 3)
!19219 = !DILocation(line: 6535, column: 3, scope: !19216)
!19220 = !DILocalVariable(name: "__cond", scope: !19221, file: !3, line: 6535, type: !771)
!19221 = distinct !DILexicalBlock(scope: !19222, file: !3, line: 6535, column: 3)
!19222 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 6535, column: 3)
!19223 = !DILocation(line: 6535, column: 3, scope: !19221)
!19224 = !DILocation(line: 6535, column: 3, scope: !19225)
!19225 = distinct !DILexicalBlock(scope: !19221, file: !3, line: 6535, column: 3)
!19226 = !DILocation(line: 6535, column: 3, scope: !19222)
!19227 = !DILocation(line: 6535, column: 3, scope: !19228)
!19228 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 6535, column: 3)
!19229 = !DILocation(line: 6535, column: 3, scope: !19230)
!19230 = distinct !DILexicalBlock(scope: !19228, file: !3, line: 6535, column: 3)
!19231 = !DILocation(line: 6535, column: 3, scope: !19217)
!19232 = distinct !{!19232, !19233, !19233}
!19233 = !DILocation(line: 6535, column: 3, scope: !19218)
!19234 = !DILabel(scope: !19201, name: "__out", file: !3, line: 6535)
!19235 = !DILocation(line: 6539, column: 2, scope: !19184)
!19236 = !DILocation(line: 6540, column: 10, scope: !19237)
!19237 = distinct !DILexicalBlock(scope: !19176, file: !3, line: 6540, column: 3)
!19238 = !DILocation(line: 6540, column: 19, scope: !19237)
!19239 = !DILocation(line: 6540, column: 17, scope: !19237)
!19240 = !DILocation(line: 6540, column: 8, scope: !19237)
!19241 = !DILocation(line: 6540, column: 22, scope: !19242)
!19242 = distinct !DILexicalBlock(scope: !19237, file: !3, line: 6540, column: 3)
!19243 = !DILocation(line: 6540, column: 26, scope: !19242)
!19244 = !DILocation(line: 6540, column: 32, scope: !19242)
!19245 = !DILocation(line: 6540, column: 47, scope: !19242)
!19246 = !DILocation(line: 6540, column: 45, scope: !19242)
!19247 = !DILocation(line: 6540, column: 24, scope: !19242)
!19248 = !DILocation(line: 6540, column: 3, scope: !19237)
!19249 = !DILocation(line: 6541, column: 13, scope: !19250)
!19250 = distinct !DILexicalBlock(scope: !19251, file: !3, line: 6541, column: 8)
!19251 = distinct !DILexicalBlock(scope: !19242, file: !3, line: 6540, column: 60)
!19252 = !DILocation(line: 6541, column: 10, scope: !19250)
!19253 = !DILocation(line: 6541, column: 8, scope: !19251)
!19254 = !DILocalVariable(name: "__ret", scope: !19255, file: !3, line: 6542, type: !998)
!19255 = distinct !DILexicalBlock(scope: !19256, file: !3, line: 6542, column: 5)
!19256 = distinct !DILexicalBlock(scope: !19250, file: !3, line: 6541, column: 16)
!19257 = !DILocation(line: 6542, column: 5, scope: !19255)
!19258 = !DILocation(line: 6542, column: 5, scope: !19259)
!19259 = distinct !DILexicalBlock(scope: !19255, file: !3, line: 6542, column: 5)
!19260 = !DILocation(line: 6542, column: 5, scope: !19261)
!19261 = distinct !DILexicalBlock(scope: !19259, file: !3, line: 6542, column: 5)
!19262 = !DILocalVariable(name: "__cond", scope: !19263, file: !3, line: 6542, type: !771)
!19263 = distinct !DILexicalBlock(scope: !19264, file: !3, line: 6542, column: 5)
!19264 = distinct !DILexicalBlock(scope: !19255, file: !3, line: 6542, column: 5)
!19265 = !DILocation(line: 6542, column: 5, scope: !19263)
!19266 = !DILocation(line: 6542, column: 5, scope: !19267)
!19267 = distinct !DILexicalBlock(scope: !19263, file: !3, line: 6542, column: 5)
!19268 = !DILocation(line: 6542, column: 5, scope: !19264)
!19269 = !DILocalVariable(name: "__wq_entry", scope: !19270, file: !3, line: 6542, type: !19202)
!19270 = distinct !DILexicalBlock(scope: !19264, file: !3, line: 6542, column: 5)
!19271 = !DILocation(line: 6542, column: 5, scope: !19270)
!19272 = !DILocalVariable(name: "__ret", scope: !19270, file: !3, line: 6542, type: !998)
!19273 = !DILocalVariable(name: "__int", scope: !19274, file: !3, line: 6542, type: !998)
!19274 = distinct !DILexicalBlock(scope: !19275, file: !3, line: 6542, column: 5)
!19275 = distinct !DILexicalBlock(scope: !19276, file: !3, line: 6542, column: 5)
!19276 = distinct !DILexicalBlock(scope: !19270, file: !3, line: 6542, column: 5)
!19277 = !DILocation(line: 6542, column: 5, scope: !19274)
!19278 = !DILocalVariable(name: "__cond", scope: !19279, file: !3, line: 6542, type: !771)
!19279 = distinct !DILexicalBlock(scope: !19280, file: !3, line: 6542, column: 5)
!19280 = distinct !DILexicalBlock(scope: !19274, file: !3, line: 6542, column: 5)
!19281 = !DILocation(line: 6542, column: 5, scope: !19279)
!19282 = !DILocation(line: 6542, column: 5, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19279, file: !3, line: 6542, column: 5)
!19284 = !DILocation(line: 6542, column: 5, scope: !19280)
!19285 = !DILocation(line: 6542, column: 5, scope: !19286)
!19286 = distinct !DILexicalBlock(scope: !19274, file: !3, line: 6542, column: 5)
!19287 = !DILocation(line: 6542, column: 5, scope: !19288)
!19288 = distinct !DILexicalBlock(scope: !19286, file: !3, line: 6542, column: 5)
!19289 = !DILocation(line: 6542, column: 5, scope: !19275)
!19290 = distinct !{!19290, !19291, !19291}
!19291 = !DILocation(line: 6542, column: 5, scope: !19276)
!19292 = !DILabel(scope: !19270, name: "__out", file: !3, line: 6542)
!19293 = !DILocation(line: 6546, column: 4, scope: !19256)
!19294 = !DILocation(line: 6546, column: 15, scope: !19295)
!19295 = distinct !DILexicalBlock(scope: !19250, file: !3, line: 6546, column: 15)
!19296 = !DILocation(line: 6546, column: 19, scope: !19295)
!19297 = !DILocation(line: 6546, column: 28, scope: !19295)
!19298 = !DILocation(line: 6546, column: 31, scope: !19295)
!19299 = !DILocation(line: 6546, column: 15, scope: !19250)
!19300 = !DILocalVariable(name: "__ret", scope: !19301, file: !3, line: 6547, type: !998)
!19301 = distinct !DILexicalBlock(scope: !19302, file: !3, line: 6547, column: 5)
!19302 = distinct !DILexicalBlock(scope: !19295, file: !3, line: 6546, column: 40)
!19303 = !DILocation(line: 6547, column: 5, scope: !19301)
!19304 = !DILocation(line: 6547, column: 5, scope: !19305)
!19305 = distinct !DILexicalBlock(scope: !19301, file: !3, line: 6547, column: 5)
!19306 = !DILocation(line: 6547, column: 5, scope: !19307)
!19307 = distinct !DILexicalBlock(scope: !19305, file: !3, line: 6547, column: 5)
!19308 = !DILocalVariable(name: "__cond", scope: !19309, file: !3, line: 6547, type: !771)
!19309 = distinct !DILexicalBlock(scope: !19310, file: !3, line: 6547, column: 5)
!19310 = distinct !DILexicalBlock(scope: !19301, file: !3, line: 6547, column: 5)
!19311 = !DILocation(line: 6547, column: 5, scope: !19309)
!19312 = !DILocation(line: 6547, column: 5, scope: !19313)
!19313 = distinct !DILexicalBlock(scope: !19309, file: !3, line: 6547, column: 5)
!19314 = !DILocation(line: 6547, column: 5, scope: !19310)
!19315 = !DILocalVariable(name: "__wq_entry", scope: !19316, file: !3, line: 6547, type: !19202)
!19316 = distinct !DILexicalBlock(scope: !19310, file: !3, line: 6547, column: 5)
!19317 = !DILocation(line: 6547, column: 5, scope: !19316)
!19318 = !DILocalVariable(name: "__ret", scope: !19316, file: !3, line: 6547, type: !998)
!19319 = !DILocalVariable(name: "__int", scope: !19320, file: !3, line: 6547, type: !998)
!19320 = distinct !DILexicalBlock(scope: !19321, file: !3, line: 6547, column: 5)
!19321 = distinct !DILexicalBlock(scope: !19322, file: !3, line: 6547, column: 5)
!19322 = distinct !DILexicalBlock(scope: !19316, file: !3, line: 6547, column: 5)
!19323 = !DILocation(line: 6547, column: 5, scope: !19320)
!19324 = !DILocalVariable(name: "__cond", scope: !19325, file: !3, line: 6547, type: !771)
!19325 = distinct !DILexicalBlock(scope: !19326, file: !3, line: 6547, column: 5)
!19326 = distinct !DILexicalBlock(scope: !19320, file: !3, line: 6547, column: 5)
!19327 = !DILocation(line: 6547, column: 5, scope: !19325)
!19328 = !DILocation(line: 6547, column: 5, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19325, file: !3, line: 6547, column: 5)
!19330 = !DILocation(line: 6547, column: 5, scope: !19326)
!19331 = !DILocation(line: 6547, column: 5, scope: !19332)
!19332 = distinct !DILexicalBlock(scope: !19320, file: !3, line: 6547, column: 5)
!19333 = !DILocation(line: 6547, column: 5, scope: !19334)
!19334 = distinct !DILexicalBlock(scope: !19332, file: !3, line: 6547, column: 5)
!19335 = !DILocation(line: 6547, column: 5, scope: !19321)
!19336 = distinct !{!19336, !19337, !19337}
!19337 = !DILocation(line: 6547, column: 5, scope: !19322)
!19338 = !DILabel(scope: !19316, name: "__out", file: !3, line: 6547)
!19339 = !DILocation(line: 6551, column: 4, scope: !19302)
!19340 = !DILocation(line: 6552, column: 3, scope: !19251)
!19341 = !DILocation(line: 6540, column: 51, scope: !19242)
!19342 = !DILocation(line: 6540, column: 56, scope: !19242)
!19343 = !DILocation(line: 6540, column: 3, scope: !19242)
!19344 = distinct !{!19344, !19248, !19345}
!19345 = !DILocation(line: 6552, column: 3, scope: !19237)
!19346 = !DILocation(line: 6554, column: 19, scope: !19086)
!19347 = !DILocation(line: 6554, column: 23, scope: !19086)
!19348 = !DILocation(line: 6554, column: 29, scope: !19086)
!19349 = !DILocation(line: 6554, column: 41, scope: !19086)
!19350 = !DILocation(line: 6554, column: 47, scope: !19086)
!19351 = !DILocation(line: 6554, column: 61, scope: !19086)
!19352 = !DILocation(line: 6554, column: 2, scope: !19086)
!19353 = !DILocation(line: 6555, column: 6, scope: !19086)
!19354 = !DILocation(line: 6555, column: 10, scope: !19086)
!19355 = !DILocation(line: 6555, column: 4, scope: !19086)
!19356 = !DILocation(line: 6556, column: 6, scope: !19357)
!19357 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 6556, column: 6)
!19358 = !DILocation(line: 6556, column: 10, scope: !19357)
!19359 = !DILocation(line: 6556, column: 8, scope: !19357)
!19360 = !DILocation(line: 6556, column: 6, scope: !19086)
!19361 = !DILocation(line: 6557, column: 7, scope: !19357)
!19362 = !DILocation(line: 6557, column: 5, scope: !19357)
!19363 = !DILocation(line: 6557, column: 3, scope: !19357)
!19364 = !DILocation(line: 6558, column: 13, scope: !19086)
!19365 = !DILocation(line: 6558, column: 10, scope: !19086)
!19366 = !DILocation(line: 6559, column: 9, scope: !19367)
!19367 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 6559, column: 2)
!19368 = !DILocation(line: 6559, column: 7, scope: !19367)
!19369 = !DILocation(line: 6559, column: 14, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19367, file: !3, line: 6559, column: 2)
!19371 = !DILocation(line: 6559, column: 18, scope: !19370)
!19372 = !DILocation(line: 6559, column: 16, scope: !19370)
!19373 = !DILocation(line: 6559, column: 2, scope: !19367)
!19374 = !DILocation(line: 6560, column: 21, scope: !19370)
!19375 = !DILocation(line: 6560, column: 13, scope: !19370)
!19376 = !DILocation(line: 6560, column: 8, scope: !19370)
!19377 = !DILocation(line: 6560, column: 11, scope: !19370)
!19378 = !DILocation(line: 6560, column: 3, scope: !19370)
!19379 = !DILocation(line: 6559, column: 22, scope: !19370)
!19380 = !DILocation(line: 6559, column: 2, scope: !19370)
!19381 = distinct !{!19381, !19373, !19382}
!19382 = !DILocation(line: 6560, column: 22, scope: !19367)
!19383 = !DILocation(line: 6561, column: 1, scope: !19086)
!19384 = distinct !DISubprogram(name: "netdev_get_sset_count", scope: !3, file: !3, line: 6482, type: !723, scopeLine: 6483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19385 = !DILocalVariable(name: "dev", arg: 1, scope: !19384, file: !3, line: 6482, type: !290)
!19386 = !DILocation(line: 6482, column: 53, scope: !19384)
!19387 = !DILocalVariable(name: "sset", arg: 2, scope: !19384, file: !3, line: 6482, type: !32)
!19388 = !DILocation(line: 6482, column: 62, scope: !19384)
!19389 = !DILocalVariable(name: "priv", scope: !19384, file: !3, line: 6484, type: !7985)
!19390 = !DILocation(line: 6484, column: 19, scope: !19384)
!19391 = !DILocation(line: 6484, column: 38, scope: !19384)
!19392 = !DILocation(line: 6484, column: 26, scope: !19384)
!19393 = !DILocalVariable(name: "hw_priv", scope: !19384, file: !3, line: 6485, type: !7512)
!19394 = !DILocation(line: 6485, column: 19, scope: !19384)
!19395 = !DILocation(line: 6485, column: 29, scope: !19384)
!19396 = !DILocation(line: 6485, column: 35, scope: !19384)
!19397 = !DILocalVariable(name: "hw", scope: !19384, file: !3, line: 6486, type: !8002)
!19398 = !DILocation(line: 6486, column: 17, scope: !19384)
!19399 = !DILocation(line: 6486, column: 23, scope: !19384)
!19400 = !DILocation(line: 6486, column: 32, scope: !19384)
!19401 = !DILocation(line: 6488, column: 10, scope: !19384)
!19402 = !DILocation(line: 6488, column: 2, scope: !19384)
!19403 = !DILocation(line: 6490, column: 10, scope: !19404)
!19404 = distinct !DILexicalBlock(scope: !19384, file: !3, line: 6488, column: 16)
!19405 = !DILocation(line: 6490, column: 14, scope: !19404)
!19406 = !DILocation(line: 6490, column: 3, scope: !19404)
!19407 = !DILocation(line: 6492, column: 3, scope: !19404)
!19408 = !DILocation(line: 6494, column: 1, scope: !19384)
!19409 = distinct !DISubprogram(name: "netdev_get_link_ksettings", scope: !3, file: !3, line: 5938, type: !5978, scopeLine: 5940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19410 = !DILocalVariable(name: "dev", arg: 1, scope: !19409, file: !3, line: 5938, type: !290)
!19411 = !DILocation(line: 5938, column: 57, scope: !19409)
!19412 = !DILocalVariable(name: "cmd", arg: 2, scope: !19409, file: !3, line: 5939, type: !5980)
!19413 = !DILocation(line: 5939, column: 41, scope: !19409)
!19414 = !DILocalVariable(name: "priv", scope: !19409, file: !3, line: 5941, type: !7985)
!19415 = !DILocation(line: 5941, column: 19, scope: !19409)
!19416 = !DILocation(line: 5941, column: 38, scope: !19409)
!19417 = !DILocation(line: 5941, column: 26, scope: !19409)
!19418 = !DILocalVariable(name: "hw_priv", scope: !19409, file: !3, line: 5942, type: !7512)
!19419 = !DILocation(line: 5942, column: 19, scope: !19409)
!19420 = !DILocation(line: 5942, column: 29, scope: !19409)
!19421 = !DILocation(line: 5942, column: 35, scope: !19409)
!19422 = !DILocation(line: 5944, column: 14, scope: !19409)
!19423 = !DILocation(line: 5944, column: 23, scope: !19409)
!19424 = !DILocation(line: 5944, column: 2, scope: !19409)
!19425 = !DILocation(line: 5945, column: 34, scope: !19409)
!19426 = !DILocation(line: 5945, column: 40, scope: !19409)
!19427 = !DILocation(line: 5945, column: 48, scope: !19409)
!19428 = !DILocation(line: 5945, column: 2, scope: !19409)
!19429 = !DILocation(line: 5946, column: 2, scope: !19409)
!19430 = !DILocation(line: 5947, column: 16, scope: !19409)
!19431 = !DILocation(line: 5947, column: 25, scope: !19409)
!19432 = !DILocation(line: 5947, column: 2, scope: !19409)
!19433 = !DILocation(line: 5950, column: 43, scope: !19409)
!19434 = !DILocation(line: 5950, column: 49, scope: !19409)
!19435 = !DILocation(line: 5951, column: 7, scope: !19409)
!19436 = !DILocation(line: 5951, column: 12, scope: !19409)
!19437 = !DILocation(line: 5951, column: 23, scope: !19409)
!19438 = !DILocation(line: 5950, column: 2, scope: !19409)
!19439 = !DILocation(line: 5953, column: 2, scope: !19409)
!19440 = distinct !DISubprogram(name: "netdev_set_link_ksettings", scope: !3, file: !3, line: 5965, type: !6017, scopeLine: 5967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19441 = !DILocalVariable(name: "dev", arg: 1, scope: !19440, file: !3, line: 5965, type: !290)
!19442 = !DILocation(line: 5965, column: 57, scope: !19440)
!19443 = !DILocalVariable(name: "cmd", arg: 2, scope: !19440, file: !3, line: 5966, type: !6019)
!19444 = !DILocation(line: 5966, column: 47, scope: !19440)
!19445 = !DILocalVariable(name: "priv", scope: !19440, file: !3, line: 5968, type: !7985)
!19446 = !DILocation(line: 5968, column: 19, scope: !19440)
!19447 = !DILocation(line: 5968, column: 38, scope: !19440)
!19448 = !DILocation(line: 5968, column: 26, scope: !19440)
!19449 = !DILocalVariable(name: "hw_priv", scope: !19440, file: !3, line: 5969, type: !7512)
!19450 = !DILocation(line: 5969, column: 19, scope: !19440)
!19451 = !DILocation(line: 5969, column: 29, scope: !19440)
!19452 = !DILocation(line: 5969, column: 35, scope: !19440)
!19453 = !DILocalVariable(name: "port", scope: !19440, file: !3, line: 5970, type: !8386)
!19454 = !DILocation(line: 5970, column: 19, scope: !19440)
!19455 = !DILocation(line: 5970, column: 27, scope: !19440)
!19456 = !DILocation(line: 5970, column: 33, scope: !19440)
!19457 = !DILocalVariable(name: "copy_cmd", scope: !19440, file: !3, line: 5971, type: !5981)
!19458 = !DILocation(line: 5971, column: 32, scope: !19440)
!19459 = !DILocalVariable(name: "speed", scope: !19440, file: !3, line: 5972, type: !987)
!19460 = !DILocation(line: 5972, column: 6, scope: !19440)
!19461 = !DILocation(line: 5972, column: 14, scope: !19440)
!19462 = !DILocation(line: 5972, column: 19, scope: !19440)
!19463 = !DILocation(line: 5972, column: 24, scope: !19440)
!19464 = !DILocalVariable(name: "advertising", scope: !19440, file: !3, line: 5973, type: !987)
!19465 = !DILocation(line: 5973, column: 6, scope: !19440)
!19466 = !DILocalVariable(name: "rc", scope: !19440, file: !3, line: 5974, type: !32)
!19467 = !DILocation(line: 5974, column: 6, scope: !19440)
!19468 = !DILocation(line: 5977, column: 7, scope: !19440)
!19469 = !DILocation(line: 5977, column: 12, scope: !19440)
!19470 = !DILocation(line: 5977, column: 23, scope: !19440)
!19471 = !DILocation(line: 5976, column: 2, scope: !19440)
!19472 = !DILocation(line: 5983, column: 6, scope: !19473)
!19473 = distinct !DILexicalBlock(scope: !19440, file: !3, line: 5983, column: 6)
!19474 = !DILocation(line: 5983, column: 11, scope: !19473)
!19475 = !DILocation(line: 5983, column: 16, scope: !19473)
!19476 = !DILocation(line: 5983, column: 24, scope: !19473)
!19477 = !DILocation(line: 5983, column: 27, scope: !19473)
!19478 = !DILocation(line: 5983, column: 33, scope: !19473)
!19479 = !DILocation(line: 5983, column: 48, scope: !19473)
!19480 = !DILocation(line: 5983, column: 45, scope: !19473)
!19481 = !DILocation(line: 5983, column: 6, scope: !19440)
!19482 = !DILocation(line: 5984, column: 15, scope: !19483)
!19483 = distinct !DILexicalBlock(scope: !19473, file: !3, line: 5983, column: 61)
!19484 = !DILocation(line: 5985, column: 13, scope: !19485)
!19485 = distinct !DILexicalBlock(scope: !19483, file: !3, line: 5985, column: 7)
!19486 = !DILocation(line: 5985, column: 10, scope: !19485)
!19487 = !DILocation(line: 5985, column: 7, scope: !19483)
!19488 = !DILocation(line: 5986, column: 16, scope: !19485)
!19489 = !DILocation(line: 5986, column: 4, scope: !19485)
!19490 = !DILocation(line: 5989, column: 19, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19485, file: !3, line: 5989, column: 12)
!19492 = !DILocation(line: 5989, column: 16, scope: !19491)
!19493 = !DILocation(line: 5989, column: 12, scope: !19485)
!19494 = !DILocation(line: 5990, column: 16, scope: !19491)
!19495 = !DILocation(line: 5990, column: 4, scope: !19491)
!19496 = !DILocation(line: 5993, column: 12, scope: !19497)
!19497 = distinct !DILexicalBlock(scope: !19483, file: !3, line: 5993, column: 7)
!19498 = !DILocation(line: 5993, column: 17, scope: !19497)
!19499 = !DILocation(line: 5993, column: 22, scope: !19497)
!19500 = !DILocation(line: 5993, column: 9, scope: !19497)
!19501 = !DILocation(line: 5993, column: 7, scope: !19483)
!19502 = !DILocation(line: 5994, column: 16, scope: !19497)
!19503 = !DILocation(line: 5994, column: 4, scope: !19497)
!19504 = !DILocation(line: 5997, column: 17, scope: !19505)
!19505 = distinct !DILexicalBlock(scope: !19497, file: !3, line: 5997, column: 12)
!19506 = !DILocation(line: 5997, column: 22, scope: !19505)
!19507 = !DILocation(line: 5997, column: 27, scope: !19505)
!19508 = !DILocation(line: 5997, column: 14, scope: !19505)
!19509 = !DILocation(line: 5997, column: 12, scope: !19497)
!19510 = !DILocation(line: 5998, column: 16, scope: !19505)
!19511 = !DILocation(line: 5998, column: 4, scope: !19505)
!19512 = !DILocation(line: 6001, column: 2, scope: !19483)
!19513 = !DILocation(line: 6002, column: 14, scope: !19440)
!19514 = !DILocation(line: 6002, column: 23, scope: !19440)
!19515 = !DILocation(line: 6002, column: 2, scope: !19440)
!19516 = !DILocation(line: 6003, column: 6, scope: !19517)
!19517 = distinct !DILexicalBlock(scope: !19440, file: !3, line: 6003, column: 6)
!19518 = !DILocation(line: 6003, column: 11, scope: !19517)
!19519 = !DILocation(line: 6003, column: 16, scope: !19517)
!19520 = !DILocation(line: 6003, column: 24, scope: !19517)
!19521 = !DILocation(line: 6004, column: 7, scope: !19517)
!19522 = !DILocation(line: 6004, column: 19, scope: !19517)
!19523 = !DILocation(line: 6004, column: 37, scope: !19517)
!19524 = !DILocation(line: 6003, column: 6, scope: !19440)
!19525 = !DILocation(line: 6005, column: 3, scope: !19526)
!19526 = distinct !DILexicalBlock(scope: !19517, file: !3, line: 6004, column: 56)
!19527 = !DILocation(line: 6005, column: 9, scope: !19526)
!19528 = !DILocation(line: 6005, column: 16, scope: !19526)
!19529 = !DILocation(line: 6006, column: 3, scope: !19526)
!19530 = !DILocation(line: 6006, column: 9, scope: !19526)
!19531 = !DILocation(line: 6006, column: 15, scope: !19526)
!19532 = !DILocation(line: 6007, column: 3, scope: !19526)
!19533 = !DILocation(line: 6007, column: 9, scope: !19526)
!19534 = !DILocation(line: 6007, column: 20, scope: !19526)
!19535 = !DILocation(line: 6008, column: 2, scope: !19526)
!19536 = !DILocation(line: 6009, column: 18, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19517, file: !3, line: 6008, column: 9)
!19538 = !DILocation(line: 6009, column: 23, scope: !19537)
!19539 = !DILocation(line: 6009, column: 28, scope: !19537)
!19540 = !DILocation(line: 6009, column: 35, scope: !19537)
!19541 = !DILocation(line: 6009, column: 3, scope: !19537)
!19542 = !DILocation(line: 6009, column: 9, scope: !19537)
!19543 = !DILocation(line: 6009, column: 16, scope: !19537)
!19544 = !DILocation(line: 6010, column: 15, scope: !19545)
!19545 = distinct !DILexicalBlock(scope: !19537, file: !3, line: 6010, column: 7)
!19546 = !DILocation(line: 6010, column: 12, scope: !19545)
!19547 = !DILocation(line: 6010, column: 7, scope: !19537)
!19548 = !DILocation(line: 6011, column: 18, scope: !19545)
!19549 = !DILocation(line: 6011, column: 4, scope: !19545)
!19550 = !DILocation(line: 6011, column: 10, scope: !19545)
!19551 = !DILocation(line: 6011, column: 16, scope: !19545)
!19552 = !DILocation(line: 6012, column: 7, scope: !19553)
!19553 = distinct !DILexicalBlock(scope: !19537, file: !3, line: 6012, column: 7)
!19554 = !DILocation(line: 6012, column: 12, scope: !19553)
!19555 = !DILocation(line: 6012, column: 17, scope: !19553)
!19556 = !DILocation(line: 6012, column: 7, scope: !19537)
!19557 = !DILocation(line: 6013, column: 4, scope: !19553)
!19558 = !DILocation(line: 6013, column: 10, scope: !19553)
!19559 = !DILocation(line: 6013, column: 21, scope: !19553)
!19560 = !DILocation(line: 6015, column: 4, scope: !19553)
!19561 = !DILocation(line: 6015, column: 10, scope: !19553)
!19562 = !DILocation(line: 6015, column: 21, scope: !19553)
!19563 = !DILocation(line: 6018, column: 2, scope: !19440)
!19564 = !DILocation(line: 6018, column: 20, scope: !19440)
!19565 = !DILocation(line: 6019, column: 51, scope: !19440)
!19566 = !DILocation(line: 6019, column: 62, scope: !19440)
!19567 = !DILocation(line: 6019, column: 42, scope: !19440)
!19568 = !DILocation(line: 6020, column: 7, scope: !19440)
!19569 = !DILocation(line: 6019, column: 2, scope: !19440)
!19570 = !DILocation(line: 6022, column: 4, scope: !19440)
!19571 = !DILocation(line: 6022, column: 10, scope: !19440)
!19572 = !DILocation(line: 6021, column: 7, scope: !19440)
!19573 = !DILocation(line: 6021, column: 5, scope: !19440)
!19574 = !DILocation(line: 6024, column: 16, scope: !19440)
!19575 = !DILocation(line: 6024, column: 25, scope: !19440)
!19576 = !DILocation(line: 6024, column: 2, scope: !19440)
!19577 = !DILocation(line: 6025, column: 9, scope: !19440)
!19578 = !DILocation(line: 6025, column: 2, scope: !19440)
!19579 = distinct !DISubprogram(name: "pci_name", scope: !7519, file: !7519, line: 1875, type: !19580, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19580 = !DISubroutineType(types: !19581)
!19581 = !{!292, !19582}
!19582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19583, size: 64)
!19583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7518)
!19584 = !DILocalVariable(name: "pdev", arg: 1, scope: !19579, file: !7519, line: 1875, type: !19582)
!19585 = !DILocation(line: 1875, column: 58, scope: !19579)
!19586 = !DILocation(line: 1877, column: 19, scope: !19579)
!19587 = !DILocation(line: 1877, column: 25, scope: !19579)
!19588 = !DILocation(line: 1877, column: 9, scope: !19579)
!19589 = !DILocation(line: 1877, column: 2, scope: !19579)
!19590 = distinct !DISubprogram(name: "hw_enable_wol", scope: !3, file: !3, line: 3687, type: !19591, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19591 = !DISubroutineType(types: !19592)
!19592 = !{null, !8002, !987, !5861}
!19593 = !DILocalVariable(name: "hw", arg: 1, scope: !19590, file: !3, line: 3687, type: !8002)
!19594 = !DILocation(line: 3687, column: 42, scope: !19590)
!19595 = !DILocalVariable(name: "wol_enable", arg: 2, scope: !19590, file: !3, line: 3687, type: !987)
!19596 = !DILocation(line: 3687, column: 50, scope: !19590)
!19597 = !DILocalVariable(name: "net_addr", arg: 3, scope: !19590, file: !3, line: 3687, type: !5861)
!19598 = !DILocation(line: 3687, column: 72, scope: !19590)
!19599 = !DILocation(line: 3689, column: 13, scope: !19590)
!19600 = !DILocation(line: 3689, column: 43, scope: !19590)
!19601 = !DILocation(line: 3689, column: 54, scope: !19590)
!19602 = !DILocation(line: 3689, column: 2, scope: !19590)
!19603 = !DILocation(line: 3690, column: 13, scope: !19590)
!19604 = !DILocation(line: 3690, column: 44, scope: !19590)
!19605 = !DILocation(line: 3690, column: 55, scope: !19590)
!19606 = !DILocation(line: 3690, column: 2, scope: !19590)
!19607 = !DILocation(line: 3691, column: 19, scope: !19590)
!19608 = !DILocation(line: 3691, column: 2, scope: !19590)
!19609 = !DILocation(line: 3692, column: 13, scope: !19590)
!19610 = !DILocation(line: 3692, column: 44, scope: !19590)
!19611 = !DILocation(line: 3692, column: 55, scope: !19590)
!19612 = !DILocation(line: 3692, column: 2, scope: !19590)
!19613 = !DILocation(line: 3693, column: 19, scope: !19590)
!19614 = !DILocation(line: 3693, column: 2, scope: !19590)
!19615 = !DILocation(line: 3694, column: 13, scope: !19590)
!19616 = !DILocation(line: 3694, column: 44, scope: !19590)
!19617 = !DILocation(line: 3694, column: 55, scope: !19590)
!19618 = !DILocation(line: 3694, column: 2, scope: !19590)
!19619 = !DILocation(line: 3695, column: 13, scope: !19590)
!19620 = !DILocation(line: 3695, column: 44, scope: !19590)
!19621 = !DILocation(line: 3695, column: 55, scope: !19590)
!19622 = !DILocation(line: 3695, column: 2, scope: !19590)
!19623 = !DILocation(line: 3696, column: 17, scope: !19590)
!19624 = !DILocation(line: 3696, column: 21, scope: !19590)
!19625 = !DILocation(line: 3696, column: 2, scope: !19590)
!19626 = !DILocation(line: 3697, column: 1, scope: !19590)
!19627 = distinct !DISubprogram(name: "hw_cfg_wol", scope: !3, file: !3, line: 3533, type: !19628, scopeLine: 3534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19628 = !DISubroutineType(types: !19629)
!19629 = !{null, !8002, !581, !32}
!19630 = !DILocalVariable(name: "hw", arg: 1, scope: !19627, file: !3, line: 3533, type: !8002)
!19631 = !DILocation(line: 3533, column: 39, scope: !19627)
!19632 = !DILocalVariable(name: "frame", arg: 2, scope: !19627, file: !3, line: 3533, type: !581)
!19633 = !DILocation(line: 3533, column: 47, scope: !19627)
!19634 = !DILocalVariable(name: "set", arg: 3, scope: !19627, file: !3, line: 3533, type: !32)
!19635 = !DILocation(line: 3533, column: 58, scope: !19627)
!19636 = !DILocalVariable(name: "data", scope: !19627, file: !3, line: 3535, type: !581)
!19637 = !DILocation(line: 3535, column: 6, scope: !19627)
!19638 = !DILocation(line: 3537, column: 15, scope: !19627)
!19639 = !DILocation(line: 3537, column: 19, scope: !19627)
!19640 = !DILocation(line: 3537, column: 22, scope: !19627)
!19641 = !DILocation(line: 3537, column: 9, scope: !19627)
!19642 = !DILocation(line: 3537, column: 7, scope: !19627)
!19643 = !DILocation(line: 3538, column: 6, scope: !19644)
!19644 = distinct !DILexicalBlock(scope: !19627, file: !3, line: 3538, column: 6)
!19645 = !DILocation(line: 3538, column: 6, scope: !19627)
!19646 = !DILocation(line: 3539, column: 11, scope: !19644)
!19647 = !DILocation(line: 3539, column: 8, scope: !19644)
!19648 = !DILocation(line: 3539, column: 3, scope: !19644)
!19649 = !DILocation(line: 3541, column: 12, scope: !19644)
!19650 = !DILocation(line: 3541, column: 11, scope: !19644)
!19651 = !DILocation(line: 3541, column: 8, scope: !19644)
!19652 = !DILocation(line: 3542, column: 9, scope: !19627)
!19653 = !DILocation(line: 3542, column: 15, scope: !19627)
!19654 = !DILocation(line: 3542, column: 19, scope: !19627)
!19655 = !DILocation(line: 3542, column: 22, scope: !19627)
!19656 = !DILocation(line: 3542, column: 2, scope: !19627)
!19657 = !DILocation(line: 3543, column: 1, scope: !19627)
!19658 = !DILocalVariable(name: "hw", arg: 1, scope: !8296, file: !3, line: 3672, type: !8002)
!19659 = !DILocation(line: 3672, column: 45, scope: !8296)
!19660 = !DILocation(line: 3676, column: 19, scope: !8296)
!19661 = !DILocation(line: 3676, column: 45, scope: !8296)
!19662 = !DILocation(line: 3676, column: 49, scope: !8296)
!19663 = !DILocation(line: 3676, column: 2, scope: !8296)
!19664 = !DILocation(line: 3677, column: 1, scope: !8296)
!19665 = !DILocalVariable(name: "hw", arg: 1, scope: !8299, file: !3, line: 3654, type: !8002)
!19666 = !DILocation(line: 3654, column: 45, scope: !8299)
!19667 = !DILocalVariable(name: "pattern", scope: !8299, file: !3, line: 3657, type: !7802)
!19668 = !DILocation(line: 3657, column: 5, scope: !8299)
!19669 = !DILocation(line: 3659, column: 10, scope: !8299)
!19670 = !DILocation(line: 3659, column: 23, scope: !8299)
!19671 = !DILocation(line: 3659, column: 27, scope: !8299)
!19672 = !DILocation(line: 3659, column: 2, scope: !8299)
!19673 = !DILocation(line: 3660, column: 19, scope: !8299)
!19674 = !DILocation(line: 3660, column: 38, scope: !8299)
!19675 = !DILocation(line: 3660, column: 2, scope: !8299)
!19676 = !DILocation(line: 3661, column: 1, scope: !8299)
!19677 = !DILocalVariable(name: "hw", arg: 1, scope: !8302, file: !3, line: 3613, type: !8002)
!19678 = !DILocation(line: 3613, column: 43, scope: !8302)
!19679 = !DILocalVariable(name: "ip_addr", arg: 2, scope: !8302, file: !3, line: 3613, type: !5861)
!19680 = !DILocation(line: 3613, column: 57, scope: !8302)
!19681 = !DILocalVariable(name: "pattern", scope: !8302, file: !3, line: 3616, type: !19682)
!19682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 336, elements: !19683)
!19683 = !{!19684}
!19684 = !DISubrange(count: 42)
!19685 = !DILocation(line: 3616, column: 5, scope: !8302)
!19686 = !DILocation(line: 3626, column: 10, scope: !8302)
!19687 = !DILocation(line: 3626, column: 23, scope: !8302)
!19688 = !DILocation(line: 3626, column: 2, scope: !8302)
!19689 = !DILocation(line: 3627, column: 19, scope: !8302)
!19690 = !DILocation(line: 3627, column: 39, scope: !8302)
!19691 = !DILocation(line: 3627, column: 2, scope: !8302)
!19692 = !DILocation(line: 3628, column: 1, scope: !8302)
!19693 = distinct !DISubprogram(name: "eeprom_write", scope: !3, file: !3, line: 3135, type: !19694, scopeLine: 3136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19694 = !DISubroutineType(types: !19695)
!19695 = !{null, !8002, !794, !581}
!19696 = !DILocalVariable(name: "hw", arg: 1, scope: !19693, file: !3, line: 3135, type: !8002)
!19697 = !DILocation(line: 3135, column: 41, scope: !19693)
!19698 = !DILocalVariable(name: "reg", arg: 2, scope: !19693, file: !3, line: 3135, type: !794)
!19699 = !DILocation(line: 3135, column: 48, scope: !19693)
!19700 = !DILocalVariable(name: "data", arg: 3, scope: !19693, file: !3, line: 3135, type: !581)
!19701 = !DILocation(line: 3135, column: 57, scope: !19693)
!19702 = !DILocalVariable(name: "timeout", scope: !19693, file: !3, line: 3137, type: !32)
!19703 = !DILocation(line: 3137, column: 6, scope: !19693)
!19704 = !DILocation(line: 3139, column: 13, scope: !19693)
!19705 = !DILocation(line: 3139, column: 2, scope: !19693)
!19706 = !DILocation(line: 3142, column: 10, scope: !19693)
!19707 = !DILocation(line: 3142, column: 2, scope: !19693)
!19708 = !DILocation(line: 3143, column: 12, scope: !19693)
!19709 = !DILocation(line: 3143, column: 2, scope: !19693)
!19710 = !DILocation(line: 3144, column: 2, scope: !19711)
!19711 = distinct !DILexicalBlock(scope: !19712, file: !3, line: 3144, column: 2)
!19712 = distinct !DILexicalBlock(scope: !19713, file: !3, line: 3144, column: 2)
!19713 = distinct !DILexicalBlock(scope: !19714, file: !3, line: 3144, column: 2)
!19714 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3144, column: 2)
!19715 = !DILocation(line: 3147, column: 13, scope: !19693)
!19716 = !DILocation(line: 3147, column: 2, scope: !19693)
!19717 = !DILocation(line: 3148, column: 10, scope: !19693)
!19718 = !DILocation(line: 3148, column: 27, scope: !19693)
!19719 = !DILocation(line: 3148, column: 2, scope: !19693)
!19720 = !DILocation(line: 3149, column: 12, scope: !19693)
!19721 = !DILocation(line: 3149, column: 2, scope: !19693)
!19722 = !DILocation(line: 3150, column: 2, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19724, file: !3, line: 3150, column: 2)
!19724 = distinct !DILexicalBlock(scope: !19725, file: !3, line: 3150, column: 2)
!19725 = distinct !DILexicalBlock(scope: !19726, file: !3, line: 3150, column: 2)
!19726 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3150, column: 2)
!19727 = !DILocation(line: 3153, column: 13, scope: !19693)
!19728 = !DILocation(line: 3153, column: 2, scope: !19693)
!19729 = !DILocation(line: 3154, column: 10, scope: !19693)
!19730 = !DILocation(line: 3155, column: 2, scope: !19731)
!19731 = distinct !DILexicalBlock(scope: !19732, file: !3, line: 3155, column: 2)
!19732 = distinct !DILexicalBlock(scope: !19733, file: !3, line: 3155, column: 2)
!19733 = distinct !DILexicalBlock(scope: !19734, file: !3, line: 3155, column: 2)
!19734 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3155, column: 2)
!19735 = !DILocation(line: 3156, column: 2, scope: !19693)
!19736 = !DILocation(line: 3157, column: 3, scope: !19737)
!19737 = distinct !DILexicalBlock(scope: !19738, file: !3, line: 3157, column: 3)
!19738 = distinct !DILexicalBlock(scope: !19739, file: !3, line: 3157, column: 3)
!19739 = distinct !DILexicalBlock(scope: !19740, file: !3, line: 3157, column: 3)
!19740 = distinct !DILexicalBlock(scope: !19741, file: !3, line: 3157, column: 3)
!19741 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3156, column: 5)
!19742 = !DILocation(line: 3158, column: 2, scope: !19741)
!19743 = !DILocation(line: 3158, column: 23, scope: !19693)
!19744 = !DILocation(line: 3158, column: 12, scope: !19693)
!19745 = !DILocation(line: 3158, column: 43, scope: !19693)
!19746 = !DILocation(line: 3158, column: 46, scope: !19693)
!19747 = !DILocation(line: 0, scope: !19693)
!19748 = distinct !{!19748, !19735, !19749}
!19749 = !DILocation(line: 3158, column: 55, scope: !19693)
!19750 = !DILocation(line: 3159, column: 12, scope: !19693)
!19751 = !DILocation(line: 3159, column: 2, scope: !19693)
!19752 = !DILocation(line: 3160, column: 2, scope: !19753)
!19753 = distinct !DILexicalBlock(scope: !19754, file: !3, line: 3160, column: 2)
!19754 = distinct !DILexicalBlock(scope: !19755, file: !3, line: 3160, column: 2)
!19755 = distinct !DILexicalBlock(scope: !19756, file: !3, line: 3160, column: 2)
!19756 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3160, column: 2)
!19757 = !DILocation(line: 3163, column: 13, scope: !19693)
!19758 = !DILocation(line: 3163, column: 2, scope: !19693)
!19759 = !DILocation(line: 3164, column: 10, scope: !19693)
!19760 = !DILocation(line: 3164, column: 27, scope: !19693)
!19761 = !DILocation(line: 3164, column: 2, scope: !19693)
!19762 = !DILocation(line: 3165, column: 8, scope: !19693)
!19763 = !DILocation(line: 3165, column: 12, scope: !19693)
!19764 = !DILocation(line: 3165, column: 2, scope: !19693)
!19765 = !DILocation(line: 3166, column: 12, scope: !19693)
!19766 = !DILocation(line: 3166, column: 2, scope: !19693)
!19767 = !DILocation(line: 3167, column: 2, scope: !19768)
!19768 = distinct !DILexicalBlock(scope: !19769, file: !3, line: 3167, column: 2)
!19769 = distinct !DILexicalBlock(scope: !19770, file: !3, line: 3167, column: 2)
!19770 = distinct !DILexicalBlock(scope: !19771, file: !3, line: 3167, column: 2)
!19771 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3167, column: 2)
!19772 = !DILocation(line: 3170, column: 13, scope: !19693)
!19773 = !DILocation(line: 3170, column: 2, scope: !19693)
!19774 = !DILocation(line: 3171, column: 10, scope: !19693)
!19775 = !DILocation(line: 3172, column: 2, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19777, file: !3, line: 3172, column: 2)
!19777 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 3172, column: 2)
!19778 = distinct !DILexicalBlock(scope: !19779, file: !3, line: 3172, column: 2)
!19779 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3172, column: 2)
!19780 = !DILocation(line: 3173, column: 2, scope: !19693)
!19781 = !DILocation(line: 3174, column: 3, scope: !19782)
!19782 = distinct !DILexicalBlock(scope: !19783, file: !3, line: 3174, column: 3)
!19783 = distinct !DILexicalBlock(scope: !19784, file: !3, line: 3174, column: 3)
!19784 = distinct !DILexicalBlock(scope: !19785, file: !3, line: 3174, column: 3)
!19785 = distinct !DILexicalBlock(scope: !19786, file: !3, line: 3174, column: 3)
!19786 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3173, column: 5)
!19787 = !DILocation(line: 3175, column: 2, scope: !19786)
!19788 = !DILocation(line: 3175, column: 23, scope: !19693)
!19789 = !DILocation(line: 3175, column: 12, scope: !19693)
!19790 = !DILocation(line: 3175, column: 43, scope: !19693)
!19791 = !DILocation(line: 3175, column: 46, scope: !19693)
!19792 = distinct !{!19792, !19780, !19793}
!19793 = !DILocation(line: 3175, column: 55, scope: !19693)
!19794 = !DILocation(line: 3176, column: 12, scope: !19693)
!19795 = !DILocation(line: 3176, column: 2, scope: !19693)
!19796 = !DILocation(line: 3177, column: 2, scope: !19797)
!19797 = distinct !DILexicalBlock(scope: !19798, file: !3, line: 3177, column: 2)
!19798 = distinct !DILexicalBlock(scope: !19799, file: !3, line: 3177, column: 2)
!19799 = distinct !DILexicalBlock(scope: !19800, file: !3, line: 3177, column: 2)
!19800 = distinct !DILexicalBlock(scope: !19693, file: !3, line: 3177, column: 2)
!19801 = !DILocation(line: 3180, column: 13, scope: !19693)
!19802 = !DILocation(line: 3180, column: 2, scope: !19693)
!19803 = !DILocation(line: 3181, column: 10, scope: !19693)
!19804 = !DILocation(line: 3181, column: 2, scope: !19693)
!19805 = !DILocation(line: 3183, column: 12, scope: !19693)
!19806 = !DILocation(line: 3183, column: 2, scope: !19693)
!19807 = !DILocation(line: 3184, column: 1, scope: !19693)
!19808 = distinct !DISubprogram(name: "spi_w", scope: !3, file: !3, line: 3059, type: !19809, scopeLine: 3060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19809 = !DISubroutineType(types: !19810)
!19810 = !{null, !8002, !581}
!19811 = !DILocalVariable(name: "hw", arg: 1, scope: !19808, file: !3, line: 3059, type: !8002)
!19812 = !DILocation(line: 3059, column: 34, scope: !19808)
!19813 = !DILocalVariable(name: "data", arg: 2, scope: !19808, file: !3, line: 3059, type: !581)
!19814 = !DILocation(line: 3059, column: 42, scope: !19808)
!19815 = !DILocalVariable(name: "i", scope: !19808, file: !3, line: 3061, type: !32)
!19816 = !DILocation(line: 3061, column: 6, scope: !19808)
!19817 = !DILocation(line: 3063, column: 9, scope: !19818)
!19818 = distinct !DILexicalBlock(scope: !19808, file: !3, line: 3063, column: 2)
!19819 = !DILocation(line: 3063, column: 7, scope: !19818)
!19820 = !DILocation(line: 3063, column: 15, scope: !19821)
!19821 = distinct !DILexicalBlock(scope: !19818, file: !3, line: 3063, column: 2)
!19822 = !DILocation(line: 3063, column: 17, scope: !19821)
!19823 = !DILocation(line: 3063, column: 2, scope: !19818)
!19824 = !DILocation(line: 3064, column: 4, scope: !19825)
!19825 = distinct !DILexicalBlock(scope: !19821, file: !3, line: 3063, column: 28)
!19826 = !DILocation(line: 3064, column: 20, scope: !19825)
!19827 = !DILocation(line: 3064, column: 17, scope: !19825)
!19828 = !DILocation(line: 3064, column: 9, scope: !19825)
!19829 = !DILocation(line: 3064, column: 3, scope: !19825)
!19830 = !DILocation(line: 3064, column: 37, scope: !19825)
!19831 = !DILocation(line: 3064, column: 26, scope: !19825)
!19832 = !DILocation(line: 3065, column: 14, scope: !19825)
!19833 = !DILocation(line: 3065, column: 4, scope: !19825)
!19834 = !DILocation(line: 3066, column: 14, scope: !19825)
!19835 = !DILocation(line: 3066, column: 3, scope: !19825)
!19836 = !DILocation(line: 3067, column: 2, scope: !19825)
!19837 = !DILocation(line: 3063, column: 24, scope: !19821)
!19838 = !DILocation(line: 3063, column: 2, scope: !19821)
!19839 = distinct !{!19839, !19823, !19840}
!19840 = !DILocation(line: 3067, column: 2, scope: !19818)
!19841 = !DILocation(line: 3068, column: 1, scope: !19808)
!19842 = distinct !DISubprogram(name: "schedule_work", scope: !2830, file: !2830, line: 566, type: !19843, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19843 = !DISubroutineType(types: !19844)
!19844 = !{!771, !2839}
!19845 = !DILocalVariable(name: "work", arg: 1, scope: !19842, file: !2830, line: 566, type: !2839)
!19846 = !DILocation(line: 566, column: 54, scope: !19842)
!19847 = !DILocation(line: 568, column: 20, scope: !19842)
!19848 = !DILocation(line: 568, column: 31, scope: !19842)
!19849 = !DILocation(line: 568, column: 9, scope: !19842)
!19850 = !DILocation(line: 568, column: 2, scope: !19842)
!19851 = distinct !DISubprogram(name: "get_mib_counters", scope: !3, file: !3, line: 4606, type: !19852, scopeLine: 4608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19852 = !DISubroutineType(types: !19853)
!19853 = !{null, !8002, !32, !32, !5372}
!19854 = !DILocalVariable(name: "hw", arg: 1, scope: !19851, file: !3, line: 4606, type: !8002)
!19855 = !DILocation(line: 4606, column: 45, scope: !19851)
!19856 = !DILocalVariable(name: "first", arg: 2, scope: !19851, file: !3, line: 4606, type: !32)
!19857 = !DILocation(line: 4606, column: 53, scope: !19851)
!19858 = !DILocalVariable(name: "cnt", arg: 3, scope: !19851, file: !3, line: 4606, type: !32)
!19859 = !DILocation(line: 4606, column: 64, scope: !19851)
!19860 = !DILocalVariable(name: "counter", arg: 4, scope: !19851, file: !3, line: 4607, type: !5372)
!19861 = !DILocation(line: 4607, column: 7, scope: !19851)
!19862 = !DILocalVariable(name: "i", scope: !19851, file: !3, line: 4609, type: !32)
!19863 = !DILocation(line: 4609, column: 6, scope: !19851)
!19864 = !DILocalVariable(name: "mib", scope: !19851, file: !3, line: 4610, type: !32)
!19865 = !DILocation(line: 4610, column: 6, scope: !19851)
!19866 = !DILocalVariable(name: "port", scope: !19851, file: !3, line: 4611, type: !32)
!19867 = !DILocation(line: 4611, column: 6, scope: !19851)
!19868 = !DILocalVariable(name: "port_mib", scope: !19851, file: !3, line: 4612, type: !9750)
!19869 = !DILocation(line: 4612, column: 23, scope: !19851)
!19870 = !DILocation(line: 4614, column: 9, scope: !19851)
!19871 = !DILocation(line: 4614, column: 2, scope: !19851)
!19872 = !DILocation(line: 4615, column: 9, scope: !19873)
!19873 = distinct !DILexicalBlock(scope: !19851, file: !3, line: 4615, column: 2)
!19874 = !DILocation(line: 4615, column: 21, scope: !19873)
!19875 = !DILocation(line: 4615, column: 19, scope: !19873)
!19876 = !DILocation(line: 4615, column: 7, scope: !19873)
!19877 = !DILocation(line: 4615, column: 28, scope: !19878)
!19878 = distinct !DILexicalBlock(scope: !19873, file: !3, line: 4615, column: 2)
!19879 = !DILocation(line: 4615, column: 32, scope: !19878)
!19880 = !DILocation(line: 4615, column: 30, scope: !19878)
!19881 = !DILocation(line: 4615, column: 2, scope: !19873)
!19882 = !DILocation(line: 4616, column: 15, scope: !19883)
!19883 = distinct !DILexicalBlock(scope: !19878, file: !3, line: 4615, column: 50)
!19884 = !DILocation(line: 4616, column: 19, scope: !19883)
!19885 = !DILocation(line: 4616, column: 28, scope: !19883)
!19886 = !DILocation(line: 4616, column: 12, scope: !19883)
!19887 = !DILocation(line: 4617, column: 14, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 4617, column: 3)
!19889 = !DILocation(line: 4617, column: 24, scope: !19888)
!19890 = !DILocation(line: 4617, column: 12, scope: !19888)
!19891 = !DILocation(line: 4617, column: 8, scope: !19888)
!19892 = !DILocation(line: 4617, column: 35, scope: !19893)
!19893 = distinct !DILexicalBlock(scope: !19888, file: !3, line: 4617, column: 3)
!19894 = !DILocation(line: 4617, column: 41, scope: !19893)
!19895 = !DILocation(line: 4617, column: 45, scope: !19893)
!19896 = !DILocation(line: 4617, column: 39, scope: !19893)
!19897 = !DILocation(line: 4617, column: 3, scope: !19888)
!19898 = !DILocation(line: 4618, column: 20, scope: !19893)
!19899 = !DILocation(line: 4618, column: 30, scope: !19893)
!19900 = !DILocation(line: 4618, column: 38, scope: !19893)
!19901 = !DILocation(line: 4618, column: 4, scope: !19893)
!19902 = !DILocation(line: 4618, column: 12, scope: !19893)
!19903 = !DILocation(line: 4618, column: 17, scope: !19893)
!19904 = !DILocation(line: 4617, column: 57, scope: !19893)
!19905 = !DILocation(line: 4617, column: 3, scope: !19893)
!19906 = distinct !{!19906, !19897, !19907}
!19907 = !DILocation(line: 4618, column: 41, scope: !19888)
!19908 = !DILocation(line: 4619, column: 2, scope: !19883)
!19909 = !DILocation(line: 4615, column: 38, scope: !19878)
!19910 = !DILocation(line: 4615, column: 46, scope: !19878)
!19911 = !DILocation(line: 4615, column: 2, scope: !19878)
!19912 = distinct !{!19912, !19881, !19913}
!19913 = !DILocation(line: 4619, column: 2, scope: !19873)
!19914 = !DILocation(line: 4620, column: 1, scope: !19851)
!19915 = distinct !DISubprogram(name: "queue_work", scope: !2830, file: !2830, line: 504, type: !19916, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19916 = !DISubroutineType(types: !19917)
!19917 = !{!771, !4717, !2839}
!19918 = !DILocalVariable(name: "wq", arg: 1, scope: !19915, file: !2830, line: 504, type: !4717)
!19919 = !DILocation(line: 504, column: 56, scope: !19915)
!19920 = !DILocalVariable(name: "work", arg: 2, scope: !19915, file: !2830, line: 505, type: !2839)
!19921 = !DILocation(line: 505, column: 30, scope: !19915)
!19922 = !DILocation(line: 507, column: 41, scope: !19915)
!19923 = !DILocation(line: 507, column: 45, scope: !19915)
!19924 = !DILocation(line: 507, column: 9, scope: !19915)
!19925 = !DILocation(line: 507, column: 2, scope: !19915)
!19926 = distinct !DISubprogram(name: "__set_bit", scope: !14626, file: !14626, line: 25, type: !17241, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19927 = !DILocalVariable(name: "nr", arg: 1, scope: !19928, file: !10039, line: 66, type: !998)
!19928 = distinct !DISubprogram(name: "arch___set_bit", scope: !10039, file: !10039, line: 66, type: !17241, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19929 = !DILocation(line: 66, column: 21, scope: !19928, inlinedAt: !19930)
!19930 = distinct !DILocation(line: 28, column: 2, scope: !19926)
!19931 = !DILocalVariable(name: "addr", arg: 2, scope: !19928, file: !10039, line: 66, type: !15759)
!19932 = !DILocation(line: 66, column: 49, scope: !19928, inlinedAt: !19930)
!19933 = !DILocalVariable(name: "v", arg: 1, scope: !19934, file: !14648, line: 39, type: !10119)
!19934 = distinct !DISubprogram(name: "instrument_write", scope: !14648, file: !14648, line: 39, type: !14649, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19935 = !DILocation(line: 39, column: 67, scope: !19934, inlinedAt: !19936)
!19936 = distinct !DILocation(line: 27, column: 2, scope: !19926)
!19937 = !DILocalVariable(name: "size", arg: 2, scope: !19934, file: !14648, line: 39, type: !1039)
!19938 = !DILocation(line: 39, column: 77, scope: !19934, inlinedAt: !19936)
!19939 = !DILocalVariable(name: "nr", arg: 1, scope: !19926, file: !14626, line: 25, type: !998)
!19940 = !DILocation(line: 25, column: 35, scope: !19926)
!19941 = !DILocalVariable(name: "addr", arg: 2, scope: !19926, file: !14626, line: 25, type: !15759)
!19942 = !DILocation(line: 25, column: 63, scope: !19926)
!19943 = !DILocation(line: 27, column: 19, scope: !19926)
!19944 = !DILocation(line: 27, column: 26, scope: !19926)
!19945 = !DILocation(line: 27, column: 24, scope: !19926)
!19946 = !DILocation(line: 41, column: 20, scope: !19934, inlinedAt: !19936)
!19947 = !DILocation(line: 41, column: 23, scope: !19934, inlinedAt: !19936)
!19948 = !DILocation(line: 41, column: 2, scope: !19934, inlinedAt: !19936)
!19949 = !DILocation(line: 42, column: 2, scope: !19934, inlinedAt: !19936)
!19950 = !DILocation(line: 28, column: 17, scope: !19926)
!19951 = !DILocation(line: 28, column: 21, scope: !19926)
!19952 = !DILocation(line: 68, column: 44, scope: !19928, inlinedAt: !19930)
!19953 = !DILocation(line: 68, column: 56, scope: !19928, inlinedAt: !19930)
!19954 = !DILocation(line: 68, column: 2, scope: !19928, inlinedAt: !19930)
!19955 = !{i32 -2146994469}
!19956 = !DILocation(line: 29, column: 1, scope: !19926)
!19957 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !6542, file: !6542, line: 660, type: !19958, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19958 = !DISubroutineType(types: !19959)
!19959 = !{null, !6546, !591}
!19960 = !DILocalVariable(name: "dev", arg: 1, scope: !19957, file: !6542, line: 660, type: !6546)
!19961 = !DILocation(line: 660, column: 51, scope: !19957)
!19962 = !DILocalVariable(name: "data", arg: 2, scope: !19957, file: !6542, line: 660, type: !591)
!19963 = !DILocation(line: 660, column: 62, scope: !19957)
!19964 = !DILocation(line: 662, column: 21, scope: !19957)
!19965 = !DILocation(line: 662, column: 2, scope: !19957)
!19966 = !DILocation(line: 662, column: 7, scope: !19957)
!19967 = !DILocation(line: 662, column: 19, scope: !19957)
!19968 = !DILocation(line: 663, column: 1, scope: !19957)
!19969 = distinct !DISubprogram(name: "ksz_free_buffers", scope: !3, file: !3, line: 4573, type: !19970, scopeLine: 4575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19970 = !DISubroutineType(types: !19971)
!19971 = !{null, !7512, !10128, !32}
!19972 = !DILocalVariable(name: "adapter", arg: 1, scope: !19969, file: !3, line: 4573, type: !7512)
!19973 = !DILocation(line: 4573, column: 47, scope: !19969)
!19974 = !DILocalVariable(name: "desc_info", arg: 2, scope: !19969, file: !3, line: 4574, type: !10128)
!19975 = !DILocation(line: 4574, column: 24, scope: !19969)
!19976 = !DILocalVariable(name: "direction", arg: 3, scope: !19969, file: !3, line: 4574, type: !32)
!19977 = !DILocation(line: 4574, column: 39, scope: !19969)
!19978 = !DILocalVariable(name: "i", scope: !19969, file: !3, line: 4576, type: !32)
!19979 = !DILocation(line: 4576, column: 6, scope: !19969)
!19980 = !DILocalVariable(name: "dma_buf", scope: !19969, file: !3, line: 4577, type: !8036)
!19981 = !DILocation(line: 4577, column: 22, scope: !19969)
!19982 = !DILocalVariable(name: "desc", scope: !19969, file: !3, line: 4578, type: !7875)
!19983 = !DILocation(line: 4578, column: 19, scope: !19969)
!19984 = !DILocation(line: 4578, column: 26, scope: !19969)
!19985 = !DILocation(line: 4578, column: 37, scope: !19969)
!19986 = !DILocation(line: 4580, column: 9, scope: !19987)
!19987 = distinct !DILexicalBlock(scope: !19969, file: !3, line: 4580, column: 2)
!19988 = !DILocation(line: 4580, column: 7, scope: !19987)
!19989 = !DILocation(line: 4580, column: 14, scope: !19990)
!19990 = distinct !DILexicalBlock(scope: !19987, file: !3, line: 4580, column: 2)
!19991 = !DILocation(line: 4580, column: 18, scope: !19990)
!19992 = !DILocation(line: 4580, column: 29, scope: !19990)
!19993 = !DILocation(line: 4580, column: 16, scope: !19990)
!19994 = !DILocation(line: 4580, column: 2, scope: !19987)
!19995 = !DILocation(line: 4581, column: 13, scope: !19996)
!19996 = distinct !DILexicalBlock(scope: !19990, file: !3, line: 4580, column: 41)
!19997 = !DILocation(line: 4581, column: 11, scope: !19996)
!19998 = !DILocation(line: 4582, column: 7, scope: !19999)
!19999 = distinct !DILexicalBlock(scope: !19996, file: !3, line: 4582, column: 7)
!20000 = !DILocation(line: 4582, column: 16, scope: !19999)
!20001 = !DILocation(line: 4582, column: 7, scope: !19996)
!20002 = !DILocation(line: 4583, column: 17, scope: !19999)
!20003 = !DILocation(line: 4583, column: 26, scope: !19999)
!20004 = !DILocation(line: 4583, column: 35, scope: !19999)
!20005 = !DILocation(line: 4583, column: 4, scope: !19999)
!20006 = !DILocation(line: 4584, column: 7, scope: !19996)
!20007 = !DILocation(line: 4585, column: 2, scope: !19996)
!20008 = !DILocation(line: 4580, column: 37, scope: !19990)
!20009 = !DILocation(line: 4580, column: 2, scope: !19990)
!20010 = distinct !{!20010, !19994, !20011}
!20011 = !DILocation(line: 4585, column: 2, scope: !19987)
!20012 = !DILocation(line: 4586, column: 1, scope: !19969)
!20013 = distinct !DISubprogram(name: "ksz_free_desc", scope: !3, file: !3, line: 4538, type: !10016, scopeLine: 4539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20014 = !DILocalVariable(name: "adapter", arg: 1, scope: !20013, file: !3, line: 4538, type: !7512)
!20015 = !DILocation(line: 4538, column: 44, scope: !20013)
!20016 = !DILocalVariable(name: "hw", scope: !20013, file: !3, line: 4540, type: !8002)
!20017 = !DILocation(line: 4540, column: 17, scope: !20013)
!20018 = !DILocation(line: 4540, column: 23, scope: !20013)
!20019 = !DILocation(line: 4540, column: 32, scope: !20013)
!20020 = !DILocation(line: 4543, column: 2, scope: !20013)
!20021 = !DILocation(line: 4543, column: 6, scope: !20013)
!20022 = !DILocation(line: 4543, column: 19, scope: !20013)
!20023 = !DILocation(line: 4543, column: 29, scope: !20013)
!20024 = !DILocation(line: 4544, column: 2, scope: !20013)
!20025 = !DILocation(line: 4544, column: 6, scope: !20013)
!20026 = !DILocation(line: 4544, column: 19, scope: !20013)
!20027 = !DILocation(line: 4544, column: 29, scope: !20013)
!20028 = !DILocation(line: 4545, column: 2, scope: !20013)
!20029 = !DILocation(line: 4545, column: 6, scope: !20013)
!20030 = !DILocation(line: 4545, column: 19, scope: !20013)
!20031 = !DILocation(line: 4545, column: 29, scope: !20013)
!20032 = !DILocation(line: 4546, column: 2, scope: !20013)
!20033 = !DILocation(line: 4546, column: 6, scope: !20013)
!20034 = !DILocation(line: 4546, column: 19, scope: !20013)
!20035 = !DILocation(line: 4546, column: 29, scope: !20013)
!20036 = !DILocation(line: 4549, column: 6, scope: !20037)
!20037 = distinct !DILexicalBlock(scope: !20013, file: !3, line: 4549, column: 6)
!20038 = !DILocation(line: 4549, column: 15, scope: !20037)
!20039 = !DILocation(line: 4549, column: 25, scope: !20037)
!20040 = !DILocation(line: 4549, column: 6, scope: !20013)
!20041 = !DILocation(line: 4550, column: 22, scope: !20037)
!20042 = !DILocation(line: 4550, column: 31, scope: !20037)
!20043 = !DILocation(line: 4550, column: 37, scope: !20037)
!20044 = !DILocation(line: 4551, column: 7, scope: !20037)
!20045 = !DILocation(line: 4551, column: 16, scope: !20037)
!20046 = !DILocation(line: 4551, column: 26, scope: !20037)
!20047 = !DILocation(line: 4552, column: 7, scope: !20037)
!20048 = !DILocation(line: 4552, column: 16, scope: !20037)
!20049 = !DILocation(line: 4552, column: 26, scope: !20037)
!20050 = !DILocation(line: 4553, column: 7, scope: !20037)
!20051 = !DILocation(line: 4553, column: 16, scope: !20037)
!20052 = !DILocation(line: 4553, column: 26, scope: !20037)
!20053 = !DILocation(line: 4550, column: 3, scope: !20037)
!20054 = !DILocation(line: 4556, column: 2, scope: !20013)
!20055 = !DILocation(line: 4556, column: 11, scope: !20013)
!20056 = !DILocation(line: 4556, column: 21, scope: !20013)
!20057 = !DILocation(line: 4556, column: 32, scope: !20013)
!20058 = !DILocation(line: 4557, column: 2, scope: !20013)
!20059 = !DILocation(line: 4557, column: 11, scope: !20013)
!20060 = !DILocation(line: 4557, column: 21, scope: !20013)
!20061 = !DILocation(line: 4557, column: 32, scope: !20013)
!20062 = !DILocation(line: 4559, column: 8, scope: !20013)
!20063 = !DILocation(line: 4559, column: 12, scope: !20013)
!20064 = !DILocation(line: 4559, column: 25, scope: !20013)
!20065 = !DILocation(line: 4559, column: 2, scope: !20013)
!20066 = !DILocation(line: 4560, column: 2, scope: !20013)
!20067 = !DILocation(line: 4560, column: 6, scope: !20013)
!20068 = !DILocation(line: 4560, column: 19, scope: !20013)
!20069 = !DILocation(line: 4560, column: 24, scope: !20013)
!20070 = !DILocation(line: 4561, column: 8, scope: !20013)
!20071 = !DILocation(line: 4561, column: 12, scope: !20013)
!20072 = !DILocation(line: 4561, column: 25, scope: !20013)
!20073 = !DILocation(line: 4561, column: 2, scope: !20013)
!20074 = !DILocation(line: 4562, column: 2, scope: !20013)
!20075 = !DILocation(line: 4562, column: 6, scope: !20013)
!20076 = !DILocation(line: 4562, column: 19, scope: !20013)
!20077 = !DILocation(line: 4562, column: 24, scope: !20013)
!20078 = !DILocation(line: 4563, column: 1, scope: !20013)
!20079 = distinct !DISubprogram(name: "dma_free_coherent", scope: !8266, file: !8266, line: 400, type: !20080, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20080 = !DISubroutineType(types: !20081)
!20081 = !{null, !6546, !1039, !591, !2036}
!20082 = !DILocalVariable(name: "dev", arg: 1, scope: !20079, file: !8266, line: 400, type: !6546)
!20083 = !DILocation(line: 400, column: 53, scope: !20079)
!20084 = !DILocalVariable(name: "size", arg: 2, scope: !20079, file: !8266, line: 400, type: !1039)
!20085 = !DILocation(line: 400, column: 65, scope: !20079)
!20086 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !20079, file: !8266, line: 401, type: !591)
!20087 = !DILocation(line: 401, column: 9, scope: !20079)
!20088 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !20079, file: !8266, line: 401, type: !2036)
!20089 = !DILocation(line: 401, column: 30, scope: !20079)
!20090 = !DILocation(line: 403, column: 24, scope: !20079)
!20091 = !DILocation(line: 403, column: 29, scope: !20079)
!20092 = !DILocation(line: 403, column: 35, scope: !20079)
!20093 = !DILocation(line: 403, column: 45, scope: !20079)
!20094 = !DILocation(line: 403, column: 9, scope: !20079)
!20095 = !DILocation(line: 403, column: 2, scope: !20079)
!20096 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !7519, file: !7519, line: 1865, type: !20097, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20097 = !DISubroutineType(types: !20098)
!20098 = !{!591, !7517}
!20099 = !DILocalVariable(name: "pdev", arg: 1, scope: !20096, file: !7519, line: 1865, type: !7517)
!20100 = !DILocation(line: 1865, column: 53, scope: !20096)
!20101 = !DILocation(line: 1867, column: 26, scope: !20096)
!20102 = !DILocation(line: 1867, column: 32, scope: !20096)
!20103 = !DILocation(line: 1867, column: 9, scope: !20096)
!20104 = !DILocation(line: 1867, column: 2, scope: !20096)
!20105 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !6542, file: !6542, line: 655, type: !20106, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20106 = !DISubroutineType(types: !20107)
!20107 = !{!591, !6892}
!20108 = !DILocalVariable(name: "dev", arg: 1, scope: !20105, file: !6542, line: 655, type: !6892)
!20109 = !DILocation(line: 655, column: 58, scope: !20105)
!20110 = !DILocation(line: 657, column: 9, scope: !20105)
!20111 = !DILocation(line: 657, column: 14, scope: !20105)
!20112 = !DILocation(line: 657, column: 2, scope: !20105)
!20113 = !DILocalVariable(name: "dev_d", arg: 1, scope: !8318, file: !3, line: 7176, type: !6546)
!20114 = !DILocation(line: 7176, column: 57, scope: !8318)
!20115 = !DILocalVariable(name: "i", scope: !8318, file: !3, line: 7178, type: !32)
!20116 = !DILocation(line: 7178, column: 6, scope: !8318)
!20117 = !DILocalVariable(name: "info", scope: !8318, file: !3, line: 7179, type: !8378)
!20118 = !DILocation(line: 7179, column: 24, scope: !8318)
!20119 = !DILocation(line: 7179, column: 47, scope: !8318)
!20120 = !DILocation(line: 7179, column: 31, scope: !8318)
!20121 = !DILocalVariable(name: "hw_priv", scope: !8318, file: !3, line: 7180, type: !7512)
!20122 = !DILocation(line: 7180, column: 19, scope: !8318)
!20123 = !DILocation(line: 7180, column: 30, scope: !8318)
!20124 = !DILocation(line: 7180, column: 36, scope: !8318)
!20125 = !DILocalVariable(name: "hw", scope: !8318, file: !3, line: 7181, type: !8002)
!20126 = !DILocation(line: 7181, column: 17, scope: !8318)
!20127 = !DILocation(line: 7181, column: 23, scope: !8318)
!20128 = !DILocation(line: 7181, column: 32, scope: !8318)
!20129 = !DILocation(line: 7186, column: 9, scope: !20130)
!20130 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 7186, column: 2)
!20131 = !DILocation(line: 7186, column: 7, scope: !20130)
!20132 = !DILocation(line: 7186, column: 14, scope: !20133)
!20133 = distinct !DILexicalBlock(scope: !20130, file: !3, line: 7186, column: 2)
!20134 = !DILocation(line: 7186, column: 18, scope: !20133)
!20135 = !DILocation(line: 7186, column: 22, scope: !20133)
!20136 = !DILocation(line: 7186, column: 16, scope: !20133)
!20137 = !DILocation(line: 7186, column: 2, scope: !20130)
!20138 = !DILocation(line: 7187, column: 7, scope: !20139)
!20139 = distinct !DILexicalBlock(scope: !20140, file: !3, line: 7187, column: 7)
!20140 = distinct !DILexicalBlock(scope: !20133, file: !3, line: 7186, column: 38)
!20141 = !DILocation(line: 7187, column: 13, scope: !20139)
!20142 = !DILocation(line: 7187, column: 20, scope: !20139)
!20143 = !DILocation(line: 7187, column: 7, scope: !20140)
!20144 = !DILocalVariable(name: "dev", scope: !20145, file: !3, line: 7188, type: !290)
!20145 = distinct !DILexicalBlock(scope: !20139, file: !3, line: 7187, column: 24)
!20146 = !DILocation(line: 7188, column: 23, scope: !20145)
!20147 = !DILocation(line: 7188, column: 29, scope: !20145)
!20148 = !DILocation(line: 7188, column: 35, scope: !20145)
!20149 = !DILocation(line: 7188, column: 42, scope: !20145)
!20150 = !DILocation(line: 7190, column: 22, scope: !20151)
!20151 = distinct !DILexicalBlock(scope: !20145, file: !3, line: 7190, column: 8)
!20152 = !DILocation(line: 7190, column: 8, scope: !20151)
!20153 = !DILocation(line: 7190, column: 8, scope: !20145)
!20154 = !DILocation(line: 7191, column: 25, scope: !20155)
!20155 = distinct !DILexicalBlock(scope: !20151, file: !3, line: 7190, column: 28)
!20156 = !DILocation(line: 7191, column: 5, scope: !20155)
!20157 = !DILocation(line: 7192, column: 18, scope: !20155)
!20158 = !DILocation(line: 7192, column: 5, scope: !20155)
!20159 = !DILocation(line: 7193, column: 4, scope: !20155)
!20160 = !DILocation(line: 7194, column: 3, scope: !20145)
!20161 = !DILocation(line: 7195, column: 2, scope: !20140)
!20162 = !DILocation(line: 7186, column: 34, scope: !20133)
!20163 = !DILocation(line: 7186, column: 2, scope: !20133)
!20164 = distinct !{!20164, !20137, !20165}
!20165 = !DILocation(line: 7195, column: 2, scope: !20130)
!20166 = !DILocation(line: 7196, column: 6, scope: !20167)
!20167 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 7196, column: 6)
!20168 = !DILocation(line: 7196, column: 15, scope: !20167)
!20169 = !DILocation(line: 7196, column: 6, scope: !8318)
!20170 = !DILocation(line: 7197, column: 17, scope: !20171)
!20171 = distinct !DILexicalBlock(scope: !20167, file: !3, line: 7196, column: 27)
!20172 = !DILocation(line: 7197, column: 21, scope: !20171)
!20173 = !DILocation(line: 7197, column: 30, scope: !20171)
!20174 = !DILocation(line: 7197, column: 3, scope: !20171)
!20175 = !DILocation(line: 7198, column: 18, scope: !20171)
!20176 = !DILocation(line: 7198, column: 3, scope: !20171)
!20177 = !DILocation(line: 7199, column: 2, scope: !20171)
!20178 = !DILocation(line: 7201, column: 23, scope: !8318)
!20179 = !DILocation(line: 7201, column: 2, scope: !8318)
!20180 = !DILocation(line: 7202, column: 2, scope: !8318)
!20181 = distinct !DISubprogram(name: "pcidev_resume", scope: !3, file: !3, line: 7152, type: !6579, scopeLine: 7153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20182 = !DILocalVariable(name: "dev_d", arg: 1, scope: !20181, file: !3, line: 7152, type: !6546)
!20183 = !DILocation(line: 7152, column: 56, scope: !20181)
!20184 = !DILocalVariable(name: "i", scope: !20181, file: !3, line: 7154, type: !32)
!20185 = !DILocation(line: 7154, column: 6, scope: !20181)
!20186 = !DILocalVariable(name: "info", scope: !20181, file: !3, line: 7155, type: !8378)
!20187 = !DILocation(line: 7155, column: 24, scope: !20181)
!20188 = !DILocation(line: 7155, column: 47, scope: !20181)
!20189 = !DILocation(line: 7155, column: 31, scope: !20181)
!20190 = !DILocalVariable(name: "hw_priv", scope: !20181, file: !3, line: 7156, type: !7512)
!20191 = !DILocation(line: 7156, column: 19, scope: !20181)
!20192 = !DILocation(line: 7156, column: 30, scope: !20181)
!20193 = !DILocation(line: 7156, column: 36, scope: !20181)
!20194 = !DILocalVariable(name: "hw", scope: !20181, file: !3, line: 7157, type: !8002)
!20195 = !DILocation(line: 7157, column: 17, scope: !20181)
!20196 = !DILocation(line: 7157, column: 23, scope: !20181)
!20197 = !DILocation(line: 7157, column: 32, scope: !20181)
!20198 = !DILocation(line: 7159, column: 24, scope: !20181)
!20199 = !DILocation(line: 7159, column: 2, scope: !20181)
!20200 = !DILocation(line: 7161, column: 6, scope: !20201)
!20201 = distinct !DILexicalBlock(scope: !20181, file: !3, line: 7161, column: 6)
!20202 = !DILocation(line: 7161, column: 15, scope: !20201)
!20203 = !DILocation(line: 7161, column: 6, scope: !20181)
!20204 = !DILocation(line: 7162, column: 18, scope: !20201)
!20205 = !DILocation(line: 7162, column: 3, scope: !20201)
!20206 = !DILocation(line: 7163, column: 9, scope: !20207)
!20207 = distinct !DILexicalBlock(scope: !20181, file: !3, line: 7163, column: 2)
!20208 = !DILocation(line: 7163, column: 7, scope: !20207)
!20209 = !DILocation(line: 7163, column: 14, scope: !20210)
!20210 = distinct !DILexicalBlock(scope: !20207, file: !3, line: 7163, column: 2)
!20211 = !DILocation(line: 7163, column: 18, scope: !20210)
!20212 = !DILocation(line: 7163, column: 22, scope: !20210)
!20213 = !DILocation(line: 7163, column: 16, scope: !20210)
!20214 = !DILocation(line: 7163, column: 2, scope: !20207)
!20215 = !DILocation(line: 7164, column: 7, scope: !20216)
!20216 = distinct !DILexicalBlock(scope: !20217, file: !3, line: 7164, column: 7)
!20217 = distinct !DILexicalBlock(scope: !20210, file: !3, line: 7163, column: 38)
!20218 = !DILocation(line: 7164, column: 13, scope: !20216)
!20219 = !DILocation(line: 7164, column: 20, scope: !20216)
!20220 = !DILocation(line: 7164, column: 7, scope: !20217)
!20221 = !DILocalVariable(name: "dev", scope: !20222, file: !3, line: 7165, type: !290)
!20222 = distinct !DILexicalBlock(scope: !20216, file: !3, line: 7164, column: 24)
!20223 = !DILocation(line: 7165, column: 23, scope: !20222)
!20224 = !DILocation(line: 7165, column: 29, scope: !20222)
!20225 = !DILocation(line: 7165, column: 35, scope: !20222)
!20226 = !DILocation(line: 7165, column: 42, scope: !20222)
!20227 = !DILocation(line: 7167, column: 22, scope: !20228)
!20228 = distinct !DILexicalBlock(scope: !20222, file: !3, line: 7167, column: 8)
!20229 = !DILocation(line: 7167, column: 8, scope: !20228)
!20230 = !DILocation(line: 7167, column: 8, scope: !20222)
!20231 = !DILocation(line: 7168, column: 17, scope: !20232)
!20232 = distinct !DILexicalBlock(scope: !20228, file: !3, line: 7167, column: 28)
!20233 = !DILocation(line: 7168, column: 5, scope: !20232)
!20234 = !DILocation(line: 7169, column: 25, scope: !20232)
!20235 = !DILocation(line: 7169, column: 5, scope: !20232)
!20236 = !DILocation(line: 7170, column: 4, scope: !20232)
!20237 = !DILocation(line: 7171, column: 3, scope: !20222)
!20238 = !DILocation(line: 7172, column: 2, scope: !20217)
!20239 = !DILocation(line: 7163, column: 34, scope: !20210)
!20240 = !DILocation(line: 7163, column: 2, scope: !20210)
!20241 = distinct !{!20241, !20214, !20242}
!20242 = !DILocation(line: 7172, column: 2, scope: !20207)
!20243 = !DILocation(line: 7173, column: 2, scope: !20181)
